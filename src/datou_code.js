var Laya = window.Laya = function(h, e) {
    var u = {
        __internals: [],
        __packages: {},
        __classmap: {
            Object: Object,
            Function: Function,
            Array: Array,
            String: String
        },
        __sysClass: {
            object: "Object",
            array: "Array",
            string: "String",
            dictionary: "Dictionary"
        },
        __propun: {
            writable: true,
            enumerable: false,
            configurable: true
        },
        __presubstr: String.prototype.substr,
        __substr: function(e, t) {
            return arguments.length == 1 ? u.__presubstr.call(this, e) : u.__presubstr.call(this, e, t > 0 ? t: this.length + t)
        },
        __init: function(e) {
            e.forEach(function(e) {
                e.__init$ && e.__init$()
            })
        },
        __isClass: function(e) {
            return e && (e.__isclass || e == Object || e == String || e == Array)
        },
        __newvec: function(e, t) {
            var i = [];
            i.length = e;
            for (var n = 0; n < e; n++) i[n] = t;
            return i
        },
        __extend: function(e, t) {
            for (var i in t) {
                if (!t.hasOwnProperty(i)) continue;
                var n = Object.getOwnPropertyDescriptor(t, i);
                var s = n.get,
                a = n.set;
                if (s || a) {
                    if (s && a) Object.defineProperty(e, i, n);
                    else {
                        s && Object.defineProperty(e, i, s);
                        a && Object.defineProperty(e, i, a)
                    }
                } else e[i] = t[i]
            }
            function r() {
                u.un(this, "constructor", e)
            }
            r.prototype = t.prototype;
            e.prototype = new r;
            u.un(e.prototype, "__imps", u.__copy({},
            t.prototype.__imps))
        },
        __copy: function(e, t) {
            if (!t) return null;
            e = e || {};
            for (var i in t) e[i] = t[i];
            return e
        },
        __package: function(e, t) {
            if (u.__packages[e]) return;
            u.__packages[e] = true;
            var i = h,
            n = e.split(".");
            if (n.length > 1) {
                for (var s = 0,
                a = n.length - 1; s < a; s++) {
                    var r = i[n[s]];
                    i = r ? r: i[n[s]] = {}
                }
            }
            i[n[n.length - 1]] || (i[n[n.length - 1]] = t || {})
        },
        __hasOwnProperty: function(e, t) {
            t = t || this;
            function n(e, t) {
                if (Object.hasOwnProperty.call(t.prototype, e)) return true;
                var i = t.prototype.__super;
                return i == null ? null: n(e, i)
            }
            return Object.hasOwnProperty.call(t, e) || n(e, t.__class)
        },
        __typeof: function(e, t) {
            if (!e || !t) return false;
            if (t === String) return typeof e === "string";
            if (t === Number) return typeof e === "number";
            if (t.__interface__) t = t.__interface__;
            else if (typeof t != "string") return e instanceof t;
            return e.__imps && e.__imps[t] || e.__class == t
        },
        __as: function(e, t) {
            return this.__typeof(e, t) ? e: null
        },
        __int: function(e) {
            return e ? parseInt(e) : 0
        },
        interface: function(e, t) {
            u.__package(e, {});
            var i = u.__internals;
            var n = i[e] = i[e] || {
                self: e
            };
            if (t) {
                var s = t.split(",");
                n.extend = [];
                for (var a = 0; a < s.length; a++) {
                    var r = s[a];
                    i[r] = i[r] || {
                        self: r
                    };
                    n.extend.push(i[r])
                }
            }
            var o = h,
            l = e.split(".");
            for (var a = 0; a < l.length - 1; a++) o = o[l[a]];
            o[l[l.length - 1]] = {
                __interface__: e
            }
        },
        class: function(e, t, i, n) {
            i && u.__extend(e, i);
            if (t) {
                u.__package(t, e);
                u.__classmap[t] = e;
                if (t.indexOf(".") > 0) {
                    if (t.indexOf("laya.") == 0) {
                        var s = t.split(".");
                        n = n || s[s.length - 1];
                        if (u[n]) console.log("Warning!,this class[" + n + "] already exist:", u[n]);
                        u[n] = e
                    }
                } else {
                    if (t == "Main") h.Main = e;
                    else {
                        if (u[t]) {
                            console.log("Error!,this class[" + t + "] already exist:", u[t])
                        }
                        u[t] = e
                    }
                }
            }
            var a = u.un,
            r = e.prototype;
            a(r, "hasOwnProperty", u.__hasOwnProperty);
            a(r, "__class", e);
            a(r, "__super", i);
            a(r, "__className", t);
            a(e, "__super", i);
            a(e, "__className", t);
            a(e, "__isclass", true);
            a(e, "super",
            function(e) {
                this.__super.call(e)
            })
        },
        imps: function(e, t) {
            if (!t) return null;
            var s = e.__imps || u.un(e, "__imps", {});
            function a(e) {
                var t, i;
                if (! (t = u.__internals[e])) return;
                s[e] = true;
                if (! (i = t.extend)) return;
                for (var n = 0; n < i.length; n++) {
                    a(i[n].self)
                }
            }
            for (var i in t) a(i)
        },
        superSet: function(e, t, i, n) {
            var s = e.prototype["_$set_" + i];
            s && s.call(t, n)
        },
        superGet: function(e, t, i) {
            var n = e.prototype["_$get_" + i];
            return n ? n.call(t) : null
        },
        getset: function(e, t, i, n, s) {
            if (!e) {
                n && u.un(t, "_$get_" + i, n);
                s && u.un(t, "_$set_" + i, s)
            } else {
                n && (t["_$GET_" + i] = n);
                s && (t["_$SET_" + i] = s)
            }
            if (n && s) Object.defineProperty(t, i, {
                get: n,
                set: s,
                enumerable: false,
                configurable: true
            });
            else {
                n && Object.defineProperty(t, i, {
                    get: n,
                    enumerable: false,
                    configurable: true
                });
                s && Object.defineProperty(t, i, {
                    set: s,
                    enumerable: false,
                    configurable: true
                })
            }
        },
        static: function(i, n) {
            for (var s = 0,
            e = n.length; s < e; s += 2) {
                if (n[s] == "length") i.length = n[s + 1].call(i);
                else {
                    function t() {
                        var t = n[s];
                        var e = n[s + 1];
                        Object.defineProperty(i, t, {
                            get: function() {
                                delete this[t];
                                return this[t] = e.call(this)
                            },
                            set: function(e) {
                                delete this[t];
                                this[t] = e
                            },
                            enumerable: true,
                            configurable: true
                        })
                    }
                    t()
                }
            }
        },
        un: function(e, t, i) {
            i || (i = e[t]);
            u.__propun.value = i;
            Object.defineProperty(e, t, u.__propun);
            return i
        },
        uns: function(t, e) {
            e.forEach(function(e) {
                u.un(t, e)
            })
        }
    };
    h.console = h.console || {
        log: function() {}
    };
    h.trace = h.console.log;
    Error.prototype.throwError = function() {
        throw arguments
    };
    Object.defineProperty(Array.prototype, "fixed", {
        enumerable: false
    });
    return u
} (window, document); (function(e, t, i) {
    var n = i.un,
    s = i.uns,
    a = i.static,
    r = i.class,
    o = i.getset,
    l = i.__newvec
})(window, document, Laya); (function(r, t, b) {
    var e = b.un,
    i = b.uns,
    l = b.static,
    _ = b.class,
    u = b.getset,
    n = b.__newvec;
    b.interface("laya.runtime.IMarket");
    b.interface("laya.filters.IFilter");
    b.interface("laya.display.ILayout");
    b.interface("laya.resource.IDispose");
    b.interface("laya.runtime.IPlatform");
    b.interface("laya.resource.IDestroy");
    b.interface("laya.runtime.IConchNode");
    b.interface("laya.filters.IFilterAction");
    b.interface("laya.runtime.ICPlatformClass");
    b.interface("laya.resource.ICreateResource");
    b.interface("laya.runtime.IConchRenderObject");
    b.interface("laya.runtime.IPlatformClass", "laya.runtime.IPlatform");
    var D = function() {
        function a() {}
        _(a, "laya.utils.RunDriver");
        a.FILTER_ACTIONS = [];
        a.pixelRatio = -1;
        a._charSizeTestDiv = null;
        a.now = function() {
            return Date.now()
        };
        a.getWindow = function() {
            return r
        };
        a.getPixelRatio = function() {
            if (a.pixelRatio < 0) {
                var e = Y.context;
                var t = e.backingStorePixelRatio || e.webkitBackingStorePixelRatio || e.mozBackingStorePixelRatio || e.msBackingStorePixelRatio || e.oBackingStorePixelRatio || e.backingStorePixelRatio || 1;
                a.pixelRatio = (Y.window.devicePixelRatio || 1) / t;
                if (a.pixelRatio < 1) a.pixelRatio = 1
            }
            return a.pixelRatio
        };
        a.getIncludeStr = function(e) {
            return null
        };
        a.createShaderCondition = function(e) {
            var t = "(function() {return " + e + ";})";
            return b._runScript(t)
        };
        a.fontMap = [];
        a.measureText = function(e, t) {
            var i = a.hanzi.test(e);
            if (i && a.fontMap[t]) {
                return a.fontMap[t]
            }
            var n = Y.context;
            n.font = t;
            var s = n.measureText(e);
            if (i) a.fontMap[t] = s;
            return s
        };
        a.getWebGLContext = function(e) {};
        a.beginFlush = function() {};
        a.endFinish = function() {};
        a.addToAtlas = null;
        a.flashFlushImage = function(e) {};
        a.drawToCanvas = function(e, t, i, n, s, a) {
            var r = Ne.create("2D");
            var o = new V(i, n, r);
            q.renders[t]._fun(e, o, s, a);
            return r
        };
        a.createParticleTemplate2D = null;
        a.createGLTextur = null;
        a.createWebGLContext2D = null;
        a.changeWebGLSize = function(e, t) {};
        a.createRenderSprite = function(e, t) {
            return new q(e, t)
        };
        a.createFilterAction = function(e) {
            return new x
        };
        a.createGraphics = function() {
            return new g
        };
        a.clear = function(e) {
            O._context.ctx.clear()
        };
        a.cancelLoadByUrl = function(e) {};
        a.clearAtlas = function(e) {};
        a.isAtlas = function(e) {
            return false
        };
        a.addTextureToAtlas = function(e) {};
        a.getTexturePixels = function(e, t, i, n, s) {
            return null
        };
        a.skinAniSprite = function() {
            return null
        };
        a.update3DLoop = function() {};
        l(a, ["hanzi",
        function() {
            return this.hanzi = new RegExp("^[一-龥]$")
        }]);
        return a
    } ();
    var s = function() {
        u(1, b, "alertGlobalError", null,
        function(e) {
            var a = 0;
            if (e) {
                Y.window.onerror = function(e, t, i, n, s) {
                    if (a++<5 && s) alert("出错啦，请把此信息截图给研发商\n" + e + "\n" + s.stack || s)
                }
            } else {
                Y.window.onerror = null
            }
        });
        b.init = function(e, t, i) {
            var n = [];
            for (var s = 2,
            a = arguments.length; s < a; s++) n.push(arguments[s]);
            if (b._isinit) return;
            ArrayBuffer.prototype.slice || (ArrayBuffer.prototype.slice = b._arrayBufferSlice);
            b._isinit = true;
            Y.__init__();
            z.__init__();
            g.__init__();
            b.timer = new le;
            b.scaleTimer = new le;
            b.loader = new Ce;
            fe.__init__();
            for (var s = 0,
            r = n.length; s < r; s++) {
                if (n[s].enable) n[s].enable()
            }
            h.__init__();
            o.__init__();
            W.__init__();
            X.beginCheck();
            b._currentStage = b.stage = new Pe;
            b.stage.conchModel && b.stage.conchModel.setRootNode();
            b._getUrlPath();
            b.render = new O(0, 0);
            b.stage.size(e, t);
            q.__init__();
            y.__init__();
            S.instance.__init__(b.stage, O.canvas);
            qe.__init__();
            P.autoStopMusic = true;
            U.__init__();
            return O.canvas
        };
        b._getUrlPath = function() {
            var e = Y.window.location;
            var t = e.pathname;
            t = t.charAt(2) == ":" ? t.substring(1) : t;
            F.rootPath = F.basePath = F.getPath(e.protocol == "file:" ? t: e.protocol + "//" + e.host + e.pathname)
        };
        b._arrayBufferSlice = function(e, t) {
            var i = this;
            var n = new Uint8Array(i, e, t - e);
            var s = new Uint8Array(n.length);
            s.set(n);
            return s.buffer
        };
        b._runScript = function(e) {
            return Y.window[b._evcode](e)
        };
        b.stage = null;
        b.timer = null;
        b.scaleTimer = null;
        b.loader = null;
        b.version = "1.8.3";
        b.render = null;
        b._currentStage = null;
        b._isinit = false;
        b.MiniAdpter = {
            init: function() {
                if (r.navigator && r.navigator.userAgent && r.navigator.userAgent.indexOf("MiniGame") > -1) console.error("请先引用小游戏适配库laya.wxmini.js,详细教程：https://ldc.layabox.com/doc/?nav=zh-ts-5-0-0")
            }
        };
        l(b, ["conchMarket",
        function() {
            return this.conchMarket = r.conch ? conchMarket: null
        },
        "PlatformClass",
        function() {
            return this.PlatformClass = r.PlatformClass
        },
        "_evcode",
        function() {
            return this._evcode = "e" + String.fromCharCode(100 + 10 + 8) + "a" + "l"
        }]);
        return b
    } ();
    var m = function() {
        function e() {}
        _(e, "Config");
        e.WebGLTextCacheCount = 500;
        e.atlasEnable = false;
        e.showCanvasMark = false;
        e.animationInterval = 50;
        e.isAntialias = false;
        e.isAlpha = false;
        e.premultipliedAlpha = true;
        e.isStencil = true;
        e.preserveDrawingBuffer = false;
        e.useRetinalCanvas = false;
        return e
    } ();
    var a = function() {
        var l;
        function t() {
            this._events = null
        }
        _(t, "laya.events.EventDispatcher");
        var e = t.prototype;
        e.hasListener = function(e) {
            var t = this._events && this._events[e];
            return !! t
        };
        e.event = function(e, t) {
            if (!this._events || !this._events[e]) return false;
            var i = this._events[e];
            if (i.run) {
                if (i.once) delete this._events[e];
                t != null ? i.runWith(t) : i.run()
            } else {
                for (var n = 0,
                s = i.length; n < s; n++) {
                    var a = i[n];
                    if (a) {
                        t != null ? a.runWith(t) : a.run()
                    }
                    if (!a || a.once) {
                        i.splice(n, 1);
                        n--;
                        s--
                    }
                }
                if (i.length === 0 && this._events) delete this._events[e]
            }
            return true
        };
        e.on = function(e, t, i, n) {
            return this._createListener(e, t, i, n, false)
        };
        e.once = function(e, t, i, n) {
            return this._createListener(e, t, i, n, true)
        };
        e._createListener = function(e, t, i, n, s, a) {
            a === void 0 && (a = true);
            a && this.off(e, t, i, s);
            var r = l.create(t || this, i, n, s);
            this._events || (this._events = {});
            var o = this._events;
            if (!o[e]) o[e] = r;
            else {
                if (!o[e].run) o[e].push(r);
                else o[e] = [o[e], r]
            }
            return this
        };
        e.off = function(e, t, i, n) {
            n === void 0 && (n = false);
            if (!this._events || !this._events[e]) return this;
            var s = this._events[e];
            if (s != null) {
                if (s.run) {
                    if ((!t || s.caller === t) && s.method === i && (!n || s.once)) {
                        delete this._events[e];
                        s.recover()
                    }
                } else {
                    var a = 0;
                    for (var r = 0,
                    o = s.length; r < o; r++) {
                        var l = s[r];
                        if (!l) {
                            a++;
                            continue
                        }
                        if (l && (!t || l.caller === t) && l.method === i && (!n || l.once)) {
                            a++;
                            s[r] = null;
                            l.recover()
                        }
                    }
                    if (a === o) delete this._events[e]
                }
            }
            return this
        };
        e.offAll = function(e) {
            var t = this._events;
            if (!t) return this;
            if (e) {
                this._recoverHandlers(t[e]);
                delete t[e]
            } else {
                for (var i in t) {
                    this._recoverHandlers(t[i])
                }
                this._events = null
            }
            return this
        };
        e._recoverHandlers = function(e) {
            if (!e) return;
            if (e.run) {
                e.recover()
            } else {
                for (var t = e.length - 1; t > -1; t--) {
                    if (e[t]) {
                        e[t].recover();
                        e[t] = null
                    }
                }
            }
        };
        e.isMouseEvent = function(e) {
            return t.MOUSE_EVENTS[e]
        };
        t.MOUSE_EVENTS = {
            rightmousedown: true,
            rightmouseup: true,
            rightclick: true,
            mousedown: true,
            mouseup: true,
            mousemove: true,
            mouseover: true,
            mouseout: true,
            click: true,
            doubleclick: true
        };
        t.__init$ = function() {
            Object.defineProperty(laya.events.EventDispatcher.prototype, "_events", {
                enumerable: false,
                writable: true
            });
            l = function(e) {
                function s(e, t, i, n) {
                    s.__super.call(this, e, t, i, n)
                }
                _(s, "", e);
                var t = s.prototype;
                t.recover = function() {
                    if (this._id > 0) {
                        this._id = 0;
                        s._pool.push(this.clear())
                    }
                };
                s.create = function(e, t, i, n) {
                    n === void 0 && (n = true);
                    if (s._pool.length) return s._pool.pop().setTo(e, t, i, n);
                    return new s(e, t, i, n)
                };
                s._pool = [];
                return s
            } (v)
        };
        return t
    } ();
    var v = function() {
        function s(e, t, i, n) {
            this.once = false;
            this._id = 0;
            n === void 0 && (n = false);
            this.setTo(e, t, i, n)
        }
        _(s, "laya.utils.Handler");
        var e = s.prototype;
        e.setTo = function(e, t, i, n) {
            this._id = s._gid++;
            this.caller = e;
            this.method = t;
            this.args = i;
            this.once = n;
            return this
        };
        e.run = function() {
            if (this.method == null) return null;
            var e = this._id;
            var t = this.method.apply(this.caller, this.args);
            this._id === e && this.once && this.recover();
            return t
        };
        e.runWith = function(e) {
            if (this.method == null) return null;
            var t = this._id;
            if (e == null) var i = this.method.apply(this.caller, this.args);
            else if (!this.args && !e.unshift) i = this.method.call(this.caller, e);
            else if (this.args) i = this.method.apply(this.caller, this.args.concat(e));
            else i = this.method.apply(this.caller, e);
            this._id === t && this.once && this.recover();
            return i
        };
        e.clear = function() {
            this.caller = null;
            this.method = null;
            this.args = null;
            return this
        };
        e.recover = function() {
            if (this._id > 0) {
                this._id = 0;
                s._pool.push(this.clear())
            }
        };
        s.create = function(e, t, i, n) {
            n === void 0 && (n = true);
            if (s._pool.length) return s._pool.pop().setTo(e, t, i, n);
            return new s(e, t, i, n)
        };
        s._pool = [];
        s._gid = 1;
        return s
    } ();
    var L = function() {
        function e() {
            this._texture = null;
            this._fontCharDic = {};
            this._fontWidthMap = {};
            this._complete = null;
            this._path = null;
            this._maxWidth = 0;
            this._spaceWidth = 10;
            this._padding = null;
            this.fontSize = 12;
            this.autoScaleSize = false;
            this.letterSpacing = 0
        }
        _(e, "laya.display.BitmapFont");
        var t = e.prototype;
        t.loadFont = function(e, t) {
            this._path = e;
            this._complete = t;
            b.loader.load([{
                url: this._path,
                type: "xml"
            },
            {
                url: this._path.replace(".fnt", ".png"),
                type: "image"
            }], v.create(this, this.onLoaded))
        };
        t.onLoaded = function() {
            this.parseFont(Se.getRes(this._path), Se.getRes(this._path.replace(".fnt", ".png")));
            this._complete && this._complete.runWith(this._texture ? this: null)
        };
        t.parseFont = function(e, t) {
            if (e == null || t == null) return;
            this._texture = t;
            var i = 0;
            var n = 1;
            var s = e.getElementsByTagName("info");
            if (!s[0].getAttributeNode) {
                return this.parseFont2(e, t)
            }
            this.fontSize = parseInt(s[0].getAttributeNode("size").nodeValue);
            var a = s[0].getAttributeNode("padding").nodeValue;
            var r = a.split(",");
            this._padding = [parseInt(r[0]), parseInt(r[1]), parseInt(r[2]), parseInt(r[3])];
            var o;
            o = e.getElementsByTagName("char");
            var l = 0;
            for (l = 0; l < o.length; l++) {
                var h = o[l];
                var u = parseInt(h.getAttributeNode("id").nodeValue);
                var c = parseInt(h.getAttributeNode("xoffset").nodeValue) / n;
                var f = parseInt(h.getAttributeNode("yoffset").nodeValue) / n;
                var d = parseInt(h.getAttributeNode("xadvance").nodeValue) / n;
                var g = new A;
                g.x = parseInt(h.getAttributeNode("x").nodeValue);
                g.y = parseInt(h.getAttributeNode("y").nodeValue);
                g.width = parseInt(h.getAttributeNode("width").nodeValue);
                g.height = parseInt(h.getAttributeNode("height").nodeValue);
                var p = Le.create(t, g.x, g.y, g.width, g.height, c, f);
                this._maxWidth = Math.max(this._maxWidth, d + this.letterSpacing);
                this._fontCharDic[u] = p;
                this._fontWidthMap[u] = d
            }
        };
        t.parseFont2 = function(e, t) {
            if (e == null || t == null) return;
            this._texture = t;
            var i = 0;
            var n = 1;
            var s = e.getElementsByTagName("info");
            this.fontSize = parseInt(s[0].attributes["size"].nodeValue);
            var a = s[0].attributes["padding"].nodeValue;
            var r = a.split(",");
            this._padding = [parseInt(r[0]), parseInt(r[1]), parseInt(r[2]), parseInt(r[3])];
            var o = e.getElementsByTagName("char");
            var l = 0;
            for (l = 0; l < o.length; l++) {
                var h = o[l].attributes;
                var u = parseInt(h["id"].nodeValue);
                var c = parseInt(h["xoffset"].nodeValue) / n;
                var f = parseInt(h["yoffset"].nodeValue) / n;
                var d = parseInt(h["xadvance"].nodeValue) / n;
                var g = new A;
                g.x = parseInt(h["x"].nodeValue);
                g.y = parseInt(h["y"].nodeValue);
                g.width = parseInt(h["width"].nodeValue);
                g.height = parseInt(h["height"].nodeValue);
                var p = Le.create(t, g.x, g.y, g.width, g.height, c, f);
                this._maxWidth = Math.max(this._maxWidth, d + this.letterSpacing);
                this._fontCharDic[u] = p;
                this._fontWidthMap[u] = d
            }
        };
        t.getCharTexture = function(e) {
            return this._fontCharDic[e.charCodeAt(0)]
        };
        t.destroy = function() {
            if (this._texture) {
                for (var e in this._fontCharDic) {
                    var t = this._fontCharDic[e];
                    if (t) t.destroy()
                }
                this._texture.destroy();
                this._fontCharDic = null;
                this._fontWidthMap = null;
                this._texture = null
            }
        };
        t.setSpaceWidth = function(e) {
            this._spaceWidth = e
        };
        t.getCharWidth = function(e) {
            var t = e.charCodeAt(0);
            if (this._fontWidthMap[t]) return this._fontWidthMap[t] + this.letterSpacing;
            if (e == " ") return this._spaceWidth + this.letterSpacing;
            return 0
        };
        t.getTextWidth = function(e) {
            var t = 0;
            for (var i = 0,
            n = e.length; i < n; i++) {
                t += this.getCharWidth(e.charAt(i))
            }
            return t
        };
        t.getMaxWidth = function() {
            return this._maxWidth
        };
        t.getMaxHeight = function() {
            return this.fontSize
        };
        t.drawText = function(e, t, i, n, s, a) {
            var r = this.getTextWidth(e);
            var o;
            var l = 0;
            s === "center" && (l = (a - r) / 2);
            s === "right" && (l = a - r);
            var h = 0;
            for (var u = 0,
            c = e.length; u < c; u++) {
                o = this.getCharTexture(e.charAt(u));
                if (o) {
                    t.graphics.drawTexture(o, i + h + l, n);
                    h += this.getCharWidth(e.charAt(u))
                }
            }
        };
        return e
    } ();
    var o = function() {
        function i() {
            this.alpha = 1;
            this.visible = true;
            this.scrollRect = null;
            this.blendMode = null;
            this._type = 0;
            this._tf = i._TF_EMPTY
        }
        _(i, "laya.display.css.Style");
        var e = i.prototype;
        e.getTransform = function() {
            return this._tf
        };
        e.setTransform = function(e) {
            this._tf = e === "none" || !e ? i._TF_EMPTY: e
        };
        e.setTranslateX = function(e) {
            this._tf === i._TF_EMPTY && (this._tf = new c);
            this._tf.translateX = e
        };
        e.setTranslateY = function(e) {
            this._tf === i._TF_EMPTY && (this._tf = new c);
            this._tf.translateY = e
        };
        e.setScaleX = function(e) {
            this._tf === i._TF_EMPTY && (this._tf = new c);
            this._tf.scaleX = e
        };
        e.setScale = function(e, t) {
            this._tf === i._TF_EMPTY && (this._tf = new c);
            this._tf.scaleX = e;
            this._tf.scaleY = t
        };
        e.setScaleY = function(e) {
            this._tf === i._TF_EMPTY && (this._tf = new c);
            this._tf.scaleY = e
        };
        e.setRotate = function(e) {
            this._tf === i._TF_EMPTY && (this._tf = new c);
            this._tf.rotate = e
        };
        e.setSkewX = function(e) {
            this._tf === i._TF_EMPTY && (this._tf = new c);
            this._tf.skewX = e
        };
        e.setSkewY = function(e) {
            this._tf === i._TF_EMPTY && (this._tf = new c);
            this._tf.skewY = e
        };
        e.destroy = function() {
            this.scrollRect = null
        };
        e.render = function(e, t, i, n) {};
        e.getCSSStyle = function() {
            return pe.EMPTY
        };
        e._enableLayout = function() {
            return false
        };
        u(0, e, "scaleX",
        function() {
            return this._tf.scaleX
        },
        function(e) {
            this.setScaleX(e)
        });
        u(0, e, "transform",
        function() {
            return this.getTransform()
        },
        function(e) {
            this.setTransform(e)
        });
        u(0, e, "translateX",
        function() {
            return this._tf.translateX
        },
        function(e) {
            this.setTranslateX(e)
        });
        u(0, e, "translateY",
        function() {
            return this._tf.translateY
        },
        function(e) {
            this.setTranslateY(e)
        });
        u(0, e, "scaleY",
        function() {
            return this._tf.scaleY
        },
        function(e) {
            this.setScaleY(e)
        });
        u(0, e, "block",
        function() {
            return (this._type & 1) != 0
        });
        u(0, e, "skewY",
        function() {
            return this._tf.skewY
        },
        function(e) {
            this.setSkewY(e)
        });
        u(0, e, "rotate",
        function() {
            return this._tf.rotate
        },
        function(e) {
            this.setRotate(e)
        });
        u(0, e, "skewX",
        function() {
            return this._tf.skewX
        },
        function(e) {
            this.setSkewX(e)
        });
        u(0, e, "paddingLeft",
        function() {
            return 0
        });
        u(0, e, "paddingTop",
        function() {
            return 0
        });
        u(0, e, "absolute",
        function() {
            return true
        });
        i.__init__ = function() {
            i._TF_EMPTY = new c;
            i.EMPTY = new i
        };
        i.EMPTY = null;
        i._TF_EMPTY = null;
        return i
    } ();
    var h = function() {
        function t(e) {
            this._type = 0;
            this._weight = 0;
            this._decoration = null;
            this._text = null;
            this.indent = 0;
            this._color = $.create(t.defaultColor);
            this.family = t.defaultFamily;
            this.stroke = t._STROKE;
            this.size = t.defaultSize;
            e && e !== t.EMPTY && e.copyTo(this)
        }
        _(t, "laya.display.css.Font");
        var e = t.prototype;
        e.set = function(e) {
            this._text = null;
            var t = e.split(" ");
            for (var i = 0,
            n = t.length; i < n; i++) {
                var s = t[i];
                switch (s) {
                case "italic":
                    this.italic = true;
                    continue;
                case "bold":
                    this.bold = true;
                    continue
                }
                if (s.indexOf("px") > 0) {
                    this.size = parseInt(s);
                    this.family = t[i + 1];
                    i++;
                    continue
                }
            }
        };
        e.toString = function() {
            this._text = "";
            this.italic && (this._text += "italic ");
            this.bold && (this._text += "bold ");
            return this._text += this.size + "px " + this.family
        };
        e.copyTo = function(e) {
            e._type = this._type;
            e._text = this._text;
            e._weight = this._weight;
            e._color = this._color;
            e.family = this.family;
            e.stroke = this.stroke != t._STROKE ? this.stroke.slice() : t._STROKE;
            e.indent = this.indent;
            e.size = this.size
        };
        u(0, e, "password",
        function() {
            return (this._type & 1024) !== 0
        },
        function(e) {
            e ? this._type |= 1024 : this._type &= ~1024
        });
        u(0, e, "color",
        function() {
            return this._color.strColor
        },
        function(e) {
            this._color = $.create(e)
        });
        u(0, e, "italic",
        function() {
            return (this._type & 512) !== 0
        },
        function(e) {
            e ? this._type |= 512 : this._type &= ~512
        });
        u(0, e, "bold",
        function() {
            return (this._type & 2048) !== 0
        },
        function(e) {
            e ? this._type |= 2048 : this._type &= ~2048
        });
        u(0, e, "weight",
        function() {
            return "" + this._weight
        },
        function(e) {
            var t = 0;
            switch (e) {
            case "normal":
                break;
            case "bold":
                this.bold = true;
                t = 700;
                break;
            case "bolder":
                t = 800;
                break;
            case "lighter":
                t = 100;
                break;
            default:
                t = parseInt(e)
            }
            this._weight = t;
            this._text = null
        });
        u(0, e, "decoration",
        function() {
            return this._decoration ? this._decoration.value: null
        },
        function(e) {
            var t = e.split(" ");
            this._decoration || (this._decoration = {});
            switch (t[0]) {
            case "_":
                this._decoration.type = "underline";
                break;
            case "-":
                this._decoration.type = "line-through";
                break;
            case "overline":
                this._decoration.type = "overline";
                break;
            default:
                this._decoration.type = t[0]
            }
            t[1] && (this._decoration.color = $.create(t));
            this._decoration.value = e
        });
        t.__init__ = function() {
            t.EMPTY = new t(null)
        };
        t.EMPTY = null;
        t.defaultColor = "#000000";
        t.defaultSize = 12;
        t.defaultFamily = "Arial";
        t.defaultFont = "12px Arial";
        t._STROKE = [0, "#000000"];
        t._ITALIC = 512;
        t._PASSWORD = 1024;
        t._BOLD = 2048;
        return t
    } ();
    var c = function() {
        function e() {
            this.translateX = 0;
            this.translateY = 0;
            this.scaleX = 1;
            this.scaleY = 1;
            this.rotate = 0;
            this.skewX = 0;
            this.skewY = 0
        }
        _(e, "laya.display.css.TransformInfo");
        return e
    } ();
    var g = function() {
        function c() {
            this._one = null;
            this._cmds = null;
            this._render = this._renderEmpty;
            if (O.isConchNode) {
                var e = this;
                e._nativeObj = new r._conchGraphics;
                e.id = e._nativeObj.conchID
            }
        }
        _(c, "laya.display.Graphics");
        var e = c.prototype;
        e.destroy = function() {
            this.clear();
            if (this._graphicBounds) this._graphicBounds.destroy();
            this._graphicBounds = null;
            this._vectorgraphArray = null;
            this._sp && (this._sp._renderType = 0);
            this._sp = null
        };
        e.clear = function(e) {
            e === void 0 && (e = false);
            var t = 0,
            i = 0;
            if (e) {
                var n = this._one;
                if (this._cmds) {
                    i = this._cmds.length;
                    for (t = 0; t < i; t++) {
                        n = this._cmds[t];
                        if (n && (n.callee === O._context._drawTexture || n.callee === O._context._drawTextureWithTransform)) {
                            n[0] = null;
                            c._cache.push(n)
                        }
                    }
                    this._cmds.length = 0
                } else if (n) {
                    if (n && (n.callee === O._context._drawTexture || n.callee === O._context._drawTextureWithTransform)) {
                        n[0] = null;
                        c._cache.push(n)
                    }
                }
            } else {
                this._cmds = null
            }
            this._one = null;
            this._render = this._renderEmpty;
            this._sp && (this._sp._renderType &= ~1 & ~512);
            this._repaint();
            if (this._vectorgraphArray) {
                for (t = 0, i = this._vectorgraphArray.length; t < i; t++) {
                    ce.getInstance().deleteShape(this._vectorgraphArray[t])
                }
                this._vectorgraphArray.length = 0
            }
        };
        e._clearBoundsCache = function() {
            if (this._graphicBounds) this._graphicBounds.reset()
        };
        e._initGraphicBounds = function() {
            if (!this._graphicBounds) {
                this._graphicBounds = new f;
                this._graphicBounds._graphics = this
            }
        };
        e._repaint = function() {
            this._clearBoundsCache();
            this._sp && this._sp.repaint()
        };
        e._isOnlyOne = function() {
            return ! this._cmds || this._cmds.length === 0
        };
        e.getBounds = function(e) {
            e === void 0 && (e = false);
            this._initGraphicBounds();
            return this._graphicBounds.getBounds(e)
        };
        e.getBoundPoints = function(e) {
            e === void 0 && (e = false);
            this._initGraphicBounds();
            return this._graphicBounds.getBoundPoints(e)
        };
        e._addCmd = function(e) {
            this._cmds = this._cmds || [];
            e.callee = e.shift();
            this._cmds.push(e)
        };
        e.setFilters = function(e) {
            this._saveToCmd(O._context._setFilters, e)
        };
        e.drawTexture = function(e, t, i, n, s, a, r) {
            t === void 0 && (t = 0);
            i === void 0 && (i = 0);
            n === void 0 && (n = 0);
            s === void 0 && (s = 0);
            r === void 0 && (r = 1);
            if (!e || r < .01) return null;
            if (!n) n = e.sourceWidth;
            if (!s) s = e.sourceHeight;
            r = r < 0 ? 0 : r > 1 ? 1 : r;
            var o = !O.isWebGL && (Y.onFirefox || Y.onEdge || Y.onIE || Y.onSafari) ? .5 : 0;
            var l = n / e.sourceWidth;
            var h = s / e.sourceHeight;
            n = e.width * l;
            s = e.height * h;
            if (e.loaded && (n <= 0 || s <= 0)) return null;
            t += e.offsetX * l;
            i += e.offsetY * h;
            this._sp && (this._sp._renderType |= 512);
            var u;
            t -= o;
            i -= o;
            n += 2 * o;
            s += 2 * o;
            if (c._cache.length) {
                u = c._cache.pop();
                u[0] = e;
                u[1] = t;
                u[2] = i;
                u[3] = n;
                u[4] = s;
                u[5] = a;
                u[6] = r
            } else {
                u = [e, t, i, n, s, a, r]
            }
            u.callee = a || r != 1 ? O._context._drawTextureWithTransform: O._context._drawTexture;
            if (this._one == null && !a && r == 1) {
                this._one = u;
                this._render = this._renderOneImg
            } else {
                this._saveToCmd(u.callee, u)
            }
            if (!e.loaded) {
                e.once("loaded", this, this._textureLoaded, [e, u])
            }
            this._repaint();
            return u
        };
        e.cleanByTexture = function(e, t, i, n, s) {
            n === void 0 && (n = 0);
            s === void 0 && (s = 0);
            if (!e) return this.clear();
            if (this._one && this._render === this._renderOneImg) {
                if (!n) n = e.sourceWidth;
                if (!s) s = e.sourceHeight;
                var a = n / e.sourceWidth;
                var r = s / e.sourceHeight;
                n = e.width * a;
                s = e.height * r;
                t += e.offsetX * a;
                i += e.offsetY * r;
                this._one[0] = e;
                this._one[1] = t;
                this._one[2] = i;
                this._one[3] = n;
                this._one[4] = s;
                this._repaint()
            } else {
                this.clear();
                e && this.drawTexture(e, t, i, n, s)
            }
        };
        e.drawTextures = function(e, t) {
            if (!e) return;
            this._saveToCmd(O._context._drawTextures, [e, t])
        };
        e.fillTexture = function(e, t, i, n, s, a, r) {
            n === void 0 && (n = 0);
            s === void 0 && (s = 0);
            a === void 0 && (a = "repeat");
            if (!e) return;
            var o = [e, t, i, n, s, a, r || B.EMPTY, {}];
            if (!e.loaded) {
                e.once("loaded", this, this._textureLoaded, [e, o])
            }
            this._saveToCmd(O._context._fillTexture, o)
        };
        e._textureLoaded = function(e, t) {
            t[3] = t[3] || e.width;
            t[4] = t[4] || e.height;
            this._repaint()
        };
        e.fillCircle = function(e, t, i, n, s, a, r) {
            i.bitmap.enableMerageInAtlas = false;
            var o = new Float32Array((r + 1) * 2);
            var l = new Float32Array((r + 1) * 2);
            var h = new Uint16Array(r * 3);
            var u = 2 * Math.PI / r;
            var c = 0;
            o[0] = n;
            o[1] = s;
            l[0] = n / i.width;
            l[1] = s / i.height;
            var f = 2;
            for (var d = 0; d < r; d++) {
                var g = a * Math.cos(c) + n;
                var p = a * Math.sin(c) + s;
                o[f] = g;
                o[f + 1] = p;
                l[f] = g / i.width;
                l[f + 1] = p / i.height;
                c += u;
                f += 2
            }
            f = 0;
            for (d = 0; d < r; d++) {
                h[f++] = 0;
                h[f++] = d + 1;
                h[f++] = d + 2 >= r + 1 ? 1 : d + 2
            }
            this.drawTriangles(i, e, t, o, l, h)
        };
        e.drawTriangles = function(e, t, i, n, s, a, r, o, l, h) {
            o === void 0 && (o = 1);
            this._saveToCmd(O._context.drawTriangles, [e, t, i, n, s, a, r, o, l, h])
        };
        e._saveToCmd = function(e, t) {
            this._sp && (this._sp._renderType |= 512);
            if (this._one == null) {
                this._one = t;
                this._render = this._renderOne
            } else {
                this._sp && (this._sp._renderType &= ~1);
                this._render = this._renderAll; (this._cmds || (this._cmds = [])).length === 0 && this._cmds.push(this._one);
                this._cmds.push(t)
            }
            t.callee = e;
            this._repaint();
            return t
        };
        e.clipRect = function(e, t, i, n) {
            this._saveToCmd(O._context._clipRect, [e, t, i, n])
        };
        e.fillText = function(e, t, i, n, s, a, r) {
            r === void 0 && (r = 0);
            this._saveToCmd(O._context._fillText, [e, t, i, n || h.defaultFont, s, a])
        };
        e.fillBorderText = function(e, t, i, n, s, a, r, o) {
            this._saveToCmd(O._context._fillBorderText, [e, t, i, n || h.defaultFont, s, a, r, o])
        };
        e.strokeText = function(e, t, i, n, s, a, r) {
            this._saveToCmd(O._context._strokeText, [e, t, i, n || h.defaultFont, s, a, r])
        };
        e.alpha = function(e) {
            e = e < 0 ? 0 : e > 1 ? 1 : e;
            this._saveToCmd(O._context._alpha, [e])
        };
        e.setAlpha = function(e) {
            e = e < 0 ? 0 : e > 1 ? 1 : e;
            this._saveToCmd(O._context._setAlpha, [e])
        };
        e.transform = function(e, t, i) {
            t === void 0 && (t = 0);
            i === void 0 && (i = 0);
            this._saveToCmd(O._context._transform, [e, t, i])
        };
        e.rotate = function(e, t, i) {
            t === void 0 && (t = 0);
            i === void 0 && (i = 0);
            this._saveToCmd(O._context._rotate, [e, t, i])
        };
        e.scale = function(e, t, i, n) {
            i === void 0 && (i = 0);
            n === void 0 && (n = 0);
            this._saveToCmd(O._context._scale, [e, t, i, n])
        };
        e.translate = function(e, t) {
            this._saveToCmd(O._context._translate, [e, t])
        };
        e.save = function() {
            this._saveToCmd(O._context._save, [])
        };
        e.restore = function() {
            this._saveToCmd(O._context._restore, [])
        };
        e.replaceText = function(e) {
            this._repaint();
            var t = this._cmds;
            if (!t) {
                if (this._one && this._isTextCmd(this._one.callee)) {
                    if (this._one[0].toUpperCase) this._one[0] = e;
                    else this._one[0].setText(e);
                    return true
                }
            } else {
                for (var i = t.length - 1; i > -1; i--) {
                    if (this._isTextCmd(t[i].callee)) {
                        if (t[i][0].toUpperCase) t[i][0] = e;
                        else t[i][0].setText(e);
                        return true
                    }
                }
            }
            return false
        };
        e._isTextCmd = function(e) {
            return e === O._context._fillText || e === O._context._fillBorderText || e === O._context._strokeText
        };
        e.replaceTextColor = function(e) {
            this._repaint();
            var t = this._cmds;
            if (!t) {
                if (this._one && this._isTextCmd(this._one.callee)) {
                    this._one[4] = e;
                    if (!this._one[0].toUpperCase) this._one[0].changed = true
                }
            } else {
                for (var i = t.length - 1; i > -1; i--) {
                    if (this._isTextCmd(t[i].callee)) {
                        t[i][4] = e;
                        if (!t[i][0].toUpperCase) t[i][0].changed = true
                    }
                }
            }
        };
        e.loadImage = function(e, t, i, n, s, a) {
            var r = this;
            t === void 0 && (t = 0);
            i === void 0 && (i = 0);
            n === void 0 && (n = 0);
            s === void 0 && (s = 0);
            var o = Se.getRes(e);
            if (o) l(o);
            else b.loader.load(e, v.create(null, l), null, "image");
            function l(e) {
                if (e) {
                    r.drawTexture(e, t, i, n, s);
                    if (a != null) a.call(r._sp, e)
                }
            }
        };
        e._renderEmpty = function(e, t, i, n) {};
        e._renderAll = function(e, t, i, n) {
            var s = this._cmds,
            a;
            for (var r = 0,
            o = s.length; r < o; r++) { (a = s[r]).callee.call(t, i, n, a)
            }
        };
        e._renderOne = function(e, t, i, n) {
            this._one.callee.call(t, i, n, this._one)
        };
        e._renderOneImg = function(e, t, i, n) {
            this._one.callee.call(t, i, n, this._one);
            if (e._renderType !== 2305) {
                e._renderType |= 1
            }
        };
        e.drawLine = function(e, t, i, n, s, a) {
            a === void 0 && (a = 1);
            var r = 0;
            if (O.isWebGL) {
                r = ce.getInstance().getId();
                if (this._vectorgraphArray == null) this._vectorgraphArray = [];
                this._vectorgraphArray.push(r)
            }
            var o = a % 2 === 0 ? 0 : .5;
            var l = [e + o, t + o, i + o, n + o, s, a, r];
            this._saveToCmd(O._context._drawLine, l)
        };
        e.drawLines = function(e, t, i, n, s) {
            s === void 0 && (s = 1);
            var a = 0;
            if (!i || i.length < 4) return;
            if (O.isWebGL) {
                a = ce.getInstance().getId();
                if (this._vectorgraphArray == null) this._vectorgraphArray = [];
                this._vectorgraphArray.push(a)
            }
            var r = s % 2 === 0 ? 0 : .5;
            var o = [e + r, t + r, i, n, s, a];
            this._saveToCmd(O._context._drawLines, o)
        };
        e.drawCurves = function(e, t, i, n, s) {
            s === void 0 && (s = 1);
            var a = [e, t, i, n, s];
            this._saveToCmd(O._context._drawCurves, a)
        };
        e.drawRect = function(e, t, i, n, s, a, r) {
            r === void 0 && (r = 1);
            var o = a ? r / 2 : 0;
            var l = a ? r: 0;
            var h = [e + o, t + o, i - l, n - l, s, a, r];
            this._saveToCmd(O._context._drawRect, h)
        };
        e.drawCircle = function(e, t, i, n, s, a) {
            a === void 0 && (a = 1);
            var r = s ? a / 2 : 0;
            var o = 0;
            if (O.isWebGL) {
                o = ce.getInstance().getId();
                if (this._vectorgraphArray == null) this._vectorgraphArray = [];
                this._vectorgraphArray.push(o)
            }
            var l = [e, t, i - r, n, s, a, o];
            this._saveToCmd(O._context._drawCircle, l)
        };
        e.drawPie = function(e, t, i, n, s, a, r, o) {
            o === void 0 && (o = 1);
            var l = r ? o / 2 : 0;
            var h = r ? o: 0;
            var u = 0;
            if (O.isWebGL) {
                u = ce.getInstance().getId();
                if (this._vectorgraphArray == null) this._vectorgraphArray = [];
                this._vectorgraphArray.push(u)
            }
            var c = [e + l, t + l, i - h, n, s, a, r, o, u];
            c[3] = ue.toRadian(n);
            c[4] = ue.toRadian(s);
            this._saveToCmd(O._context._drawPie, c)
        };
        e.drawPoly = function(e, t, i, n, s, a) {
            a === void 0 && (a = 1);
            var r = 0;
            var o = false;
            if (O.isWebGL) {
                r = ce.getInstance().getId();
                if (this._vectorgraphArray == null) this._vectorgraphArray = [];
                this._vectorgraphArray.push(r);
                if (i.length > 6) {
                    o = false
                } else {
                    o = true
                }
            }
            var l = s ? a % 2 === 0 ? 0 : .5 : 0;
            var h = [e + l, t + l, i, n, s, a, r, o];
            this._saveToCmd(O._context._drawPoly, h)
        };
        e.drawPath = function(e, t, i, n, s) {
            var a = [e, t, i, n, s];
            this._saveToCmd(O._context._drawPath, a)
        };
        u(0, e, "cmds",
        function() {
            return this._cmds
        },
        function(e) {
            this._sp && (this._sp._renderType |= 512);
            this._cmds = e;
            this._render = this._renderAll;
            this._repaint()
        });
        c.__init__ = function() {
            if (O.isConchNode) {
                var e = laya.display.Graphics.prototype;
                var t = Y.window.ConchGraphics.prototype;
                var i = ["clear", "destroy", "alpha", "rotate", "transform", "scale", "translate", "save", "restore", "clipRect", "blendMode", "fillText", "fillBorderText", "_fands", "drawRect", "drawCircle", "drawPie", "drawPoly", "drawPath", "drawImageM", "drawLine", "drawLines", "_drawPs", "drawCurves", "replaceText", "replaceTextColor", "_fillImage", "fillTexture", "setSkinMesh", "drawParticle", "drawImageS"];
                for (var n = 0,
                s = i.length; n <= s; n++) {
                    var a = i[n];
                    e[a] = t[a]
                }
                e._saveToCmd = null;
                if (t.drawImageS) {
                    e.drawTextures = function(e, t) {
                        if (!e) return;
                        if (! (e.loaded && e.bitmap && e.source)) {
                            return
                        }
                        var i = e.uv,
                        n = e.bitmap.width,
                        s = e.bitmap.height;
                        this.drawImageS(e.bitmap.source, i[0] * n, i[1] * s, (i[2] - i[0]) * n, (i[5] - i[3]) * s, e.offsetX, e.offsetY, e.width, e.height, t)
                    }
                }
                e.drawTexture = function(e, t, i, n, s, a, r) {
                    t === void 0 && (t = 0);
                    i === void 0 && (i = 0);
                    n === void 0 && (n = 0);
                    s === void 0 && (s = 0);
                    r === void 0 && (r = 1);
                    if (!e) return;
                    if (!e.loaded) {
                        e.once("loaded", this,
                        function() {
                            this.drawTexture(e, t, i, n, s, a)
                        });
                        return
                    }
                    if (! (e.loaded && e.bitmap && e.source)) {
                        return
                    }
                    if (!n) n = e.sourceWidth;
                    if (!s) s = e.sourceHeight;
                    r = r < 0 ? 0 : r > 1 ? 1 : r;
                    n = n - e.sourceWidth + e.width;
                    s = s - e.sourceHeight + e.height;
                    if (n <= 0 || s <= 0) return;
                    t += e.offsetX;
                    i += e.offsetY;
                    var o = e.uv,
                    l = e.bitmap.width,
                    h = e.bitmap.height;
                    if (o[4] < o[0] && o[5] < o[1]) {
                        this.drawImageM(e.bitmap.source, o[4] * l, o[5] * h, (o[0] - o[4]) * l, (o[1] - o[5]) * h, t, i, n, s, a, r)
                    } else {
                        this.drawImageM(e.bitmap.source, o[0] * l, o[1] * h, (o[2] - o[0]) * l, (o[5] - o[3]) * h, t, i, n, s, a, r)
                    }
                    this._repaint()
                };
                e.fillTexture = function(e, t, i, n, s, a, r) {
                    n === void 0 && (n = 0);
                    s === void 0 && (s = 0);
                    a === void 0 && (a = "repeat");
                    if (!e) return;
                    if (e.loaded) {
                        var o = O._context.ctx;
                        var l = e.bitmap.width,
                        h = e.bitmap.height,
                        u = e.uv;
                        var c;
                        if (e.uv != Le.DEF_UV) {
                            c = o.createPattern(e.bitmap.source, a, u[0] * l, u[1] * h, (u[2] - u[0]) * l, (u[5] - u[3]) * h)
                        } else {
                            c = o.createPattern(e.bitmap.source, a)
                        }
                        var f = 0,
                        d = 0;
                        if (r) {
                            t += r.x % e.width;
                            i += r.y % e.height;
                            f -= r.x % e.width;
                            d -= r.y % e.height
                        }
                        this._fillImage(c, t, i, f, d, n, s)
                    }
                }
            }
        };
        c._cache = [];
        return c
    } ();
    var f = function() {
        function y() {
            this._cacheBoundsType = false
        }
        _(y, "laya.display.GraphicsBounds");
        var e = y.prototype;
        e.destroy = function() {
            this._graphics = null;
            this._temp = null;
            this._rstBoundPoints = null;
            this._bounds = null
        };
        e.reset = function() {
            this._temp && (this._temp.length = 0)
        };
        e.getBounds = function(e) {
            e === void 0 && (e = false);
            if (!this._bounds || !this._temp || this._temp.length < 1 || e != this._cacheBoundsType) {
                this._bounds = A._getWrapRec(this.getBoundPoints(e), this._bounds)
            }
            this._cacheBoundsType = e;
            return this._bounds
        };
        e.getBoundPoints = function(e) {
            e === void 0 && (e = false);
            if (!this._temp || this._temp.length < 1 || e != this._cacheBoundsType) this._temp = this._getCmdPoints(e);
            this._cacheBoundsType = e;
            return this._rstBoundPoints = ue.copyArray(this._rstBoundPoints, this._temp)
        };
        e._getCmdPoints = function(e) {
            e === void 0 && (e = false);
            var t = O._context;
            var i = this._graphics.cmds;
            var n;
            n = this._temp || (this._temp = []);
            n.length = 0;
            if (!i && this._graphics._one != null) {
                y._tempCmds.length = 0;
                y._tempCmds.push(this._graphics._one);
                i = y._tempCmds
            }
            if (!i) return n;
            var s;
            s = y._tempMatrixArrays;
            s.length = 0;
            var a = y._initMatrix;
            a.identity();
            var r = y._tempMatrix;
            var o;
            var l;
            var h = NaN;
            var u = NaN;
            var c = NaN;
            var f = NaN;
            var d = NaN;
            var g = NaN;
            for (var p = 0,
            _ = i.length; p < _; p++) {
                o = i[p];
                if (!o.callee) continue;
                switch (o.callee) {
                case t._save:
                case 7:
                    s.push(a);
                    a = a.clone();
                    break;
                case t._restore:
                case 8:
                    a = s.pop();
                    break;
                case t._scale:
                case 5:
                    r.identity();
                    r.translate( - o[2], -o[3]);
                    r.scale(o[0], o[1]);
                    r.translate(o[2], o[3]);
                    this._switchMatrix(a, r);
                    break;
                case t._rotate:
                case 3:
                    r.identity();
                    r.translate( - o[1], -o[2]);
                    r.rotate(o[0]);
                    r.translate(o[1], o[2]);
                    this._switchMatrix(a, r);
                    break;
                case t._translate:
                case 6:
                    r.identity();
                    r.translate(o[0], o[1]);
                    this._switchMatrix(a, r);
                    break;
                case t._transform:
                case 4:
                    r.identity();
                    r.translate( - o[1], -o[2]);
                    r.concat(o[0]);
                    r.translate(o[1], o[2]);
                    this._switchMatrix(a, r);
                    break;
                case 16:
                case 24:
                    y._addPointArrToRst(n, A._getBoundPointS(o[0], o[1], o[2], o[3]), a);
                    break;
                case 17:
                    a.copyTo(r);
                    r.concat(o[4]);
                    y._addPointArrToRst(n, A._getBoundPointS(o[0], o[1], o[2], o[3]), r);
                    break;
                case t._drawTexture:
                    l = o[0];
                    if (e) {
                        if (o[3] && o[4]) {
                            y._addPointArrToRst(n, A._getBoundPointS(o[1], o[2], o[3], o[4]), a)
                        } else {
                            l = o[0];
                            y._addPointArrToRst(n, A._getBoundPointS(o[1], o[2], l.width, l.height), a)
                        }
                    } else {
                        h = (o[3] || l.sourceWidth) / l.width;
                        u = (o[4] || l.sourceHeight) / l.height;
                        c = h * l.sourceWidth;
                        f = u * l.sourceHeight;
                        d = l.offsetX > 0 ? l.offsetX: 0;
                        g = l.offsetY > 0 ? l.offsetY: 0;
                        d *= h;
                        g *= u;
                        y._addPointArrToRst(n, A._getBoundPointS(o[1] - d, o[2] - g, c, f), a)
                    }
                    break;
                case t._fillTexture:
                    if (o[3] && o[4]) {
                        y._addPointArrToRst(n, A._getBoundPointS(o[1], o[2], o[3], o[4]), a)
                    } else {
                        l = o[0];
                        y._addPointArrToRst(n, A._getBoundPointS(o[1], o[2], l.width, l.height), a)
                    }
                    break;
                case t._drawTextureWithTransform:
                    ;
                    var m;
                    if (o[5]) {
                        a.copyTo(r);
                        r.concat(o[5]);
                        m = r
                    } else {
                        m = a
                    }
                    if (e) {
                        if (o[3] && o[4]) {
                            y._addPointArrToRst(n, A._getBoundPointS(o[1], o[2], o[3], o[4]), m)
                        } else {
                            l = o[0];
                            y._addPointArrToRst(n, A._getBoundPointS(o[1], o[2], l.width, l.height), m)
                        }
                    } else {
                        l = o[0];
                        h = (o[3] || l.sourceWidth) / l.width;
                        u = (o[4] || l.sourceHeight) / l.height;
                        c = h * l.sourceWidth;
                        f = u * l.sourceHeight;
                        d = l.offsetX > 0 ? l.offsetX: 0;
                        g = l.offsetY > 0 ? l.offsetY: 0;
                        d *= h;
                        g *= u;
                        y._addPointArrToRst(n, A._getBoundPointS(o[1] - d, o[2] - g, c, f), m)
                    }
                    break;
                case t._drawRect:
                case 13:
                    y._addPointArrToRst(n, A._getBoundPointS(o[0], o[1], o[2], o[3]), a);
                    break;
                case t._drawCircle:
                case t._fillCircle:
                case 14:
                    y._addPointArrToRst(n, A._getBoundPointS(o[0] - o[2], o[1] - o[2], o[2] + o[2], o[2] + o[2]), a);
                    break;
                case t._drawLine:
                case 20:
                    y._tempPoints.length = 0;
                    var v = NaN;
                    v = o[5] * .5;
                    if (o[0] == o[2]) {
                        y._tempPoints.push(o[0] + v, o[1], o[2] + v, o[3], o[0] - v, o[1], o[2] - v, o[3])
                    } else if (o[1] == o[3]) {
                        y._tempPoints.push(o[0], o[1] + v, o[2], o[3] + v, o[0], o[1] - v, o[2], o[3] - v)
                    } else {
                        y._tempPoints.push(o[0], o[1], o[2], o[3])
                    }
                    y._addPointArrToRst(n, y._tempPoints, a);
                    break;
                case t._drawCurves:
                case 22:
                    y._addPointArrToRst(n, T.I.getBezierPoints(o[2]), a, o[0], o[1]);
                    break;
                case t._drawPoly:
                case t._drawLines:
                case 18:
                    y._addPointArrToRst(n, o[2], a, o[0], o[1]);
                    break;
                case t._drawPath:
                case 19:
                    y._addPointArrToRst(n, this._getPathPoints(o[2]), a, o[0], o[1]);
                    break;
                case t._drawPie:
                case 15:
                    y._addPointArrToRst(n, this._getPiePoints(o[0], o[1], o[2], o[3], o[4]), a);
                    break
                }
            }
            if (n.length > 200) {
                n = ue.copyArray(n, A._getWrapRec(n)._getBoundPoints())
            } else if (n.length > 8) n = k.scanPList(n);
            return n
        };
        e._switchMatrix = function(e, t) {
            t.concat(e);
            t.copyTo(e)
        };
        e._getPiePoints = function(e, t, i, n, s) {
            var a = y._tempPoints;
            y._tempPoints.length = 0;
            a.push(e, t);
            var r = (s - n) % (2 * Math.PI);
            var o = 10;
            var l = r / o;
            var h = NaN;
            var u = n;
            for (h = 0; h <= o; h++) {
                a.push(e + i * Math.cos(u), t + i * Math.sin(u));
                u += l
            }
            return a
        };
        e._getPathPoints = function(e) {
            var t = 0,
            i = 0;
            var n = y._tempPoints;
            n.length = 0;
            i = e.length;
            var s;
            for (t = 0; t < i; t++) {
                s = e[t];
                if (s.length > 1) {
                    n.push(s[1], s[2]);
                    if (s.length > 3) {
                        n.push(s[3], s[4])
                    }
                }
            }
            return n
        };
        y._addPointArrToRst = function(e, t, i, n, s) {
            n === void 0 && (n = 0);
            s === void 0 && (s = 0);
            var a = 0,
            r = 0;
            r = t.length;
            for (a = 0; a < r; a += 2) {
                y._addPointToRst(e, t[a] + n, t[a + 1] + s, i)
            }
        };
        y._addPointToRst = function(e, t, i, n) {
            var s = B.TEMP;
            s.setTo(t ? t: 0, i ? i: 0);
            n.transformPoint(s);
            e.push(s.x, s.y)
        };
        y._tempPoints = [];
        y._tempMatrixArrays = [];
        y._tempCmds = [];
        l(y, ["_tempMatrix",
        function() {
            return this._tempMatrix = new M
        },
        "_initMatrix",
        function() {
            return this._initMatrix = new M
        }]);
        return y
    } ();
    var d = function() {
        function e() {}
        _(e, "laya.events.Event");
        var t = e.prototype;
        t.setTo = function(e, t, i) {
            this.type = e;
            this.currentTarget = t;
            this.target = i;
            return this
        };
        t.stopPropagation = function() {
            this._stoped = true
        };
        u(0, t, "stageY",
        function() {
            return b.stage.mouseY
        });
        u(0, t, "charCode",
        function() {
            return this.nativeEvent.charCode
        });
        u(0, t, "touches",
        function() {
            var e = this.nativeEvent.touches;
            if (e) {
                var t = b.stage;
                for (var i = 0,
                n = e.length; i < n; i++) {
                    var s = e[i];
                    var a = B.TEMP;
                    a.setTo(s.clientX, s.clientY);
                    t._canvasTransform.invertTransformPoint(a);
                    t.transform.invertTransformPoint(a);
                    s.stageX = a.x;
                    s.stageY = a.y
                }
            }
            return e
        });
        u(0, t, "keyLocation",
        function() {
            return this.nativeEvent.keyLocation
        });
        u(0, t, "ctrlKey",
        function() {
            return this.nativeEvent.ctrlKey
        });
        u(0, t, "altKey",
        function() {
            return this.nativeEvent.altKey
        });
        u(0, t, "shiftKey",
        function() {
            return this.nativeEvent.shiftKey
        });
        u(0, t, "stageX",
        function() {
            return b.stage.mouseX
        });
        e.EMPTY = new e;
        e.MOUSE_DOWN = "mousedown";
        e.MOUSE_UP = "mouseup";
        e.CLICK = "click";
        e.RIGHT_MOUSE_DOWN = "rightmousedown";
        e.RIGHT_MOUSE_UP = "rightmouseup";
        e.RIGHT_CLICK = "rightclick";
        e.MOUSE_MOVE = "mousemove";
        e.MOUSE_OVER = "mouseover";
        e.MOUSE_OUT = "mouseout";
        e.MOUSE_WHEEL = "mousewheel";
        e.ROLL_OVER = "mouseover";
        e.ROLL_OUT = "mouseout";
        e.DOUBLE_CLICK = "doubleclick";
        e.CHANGE = "change";
        e.CHANGED = "changed";
        e.RESIZE = "resize";
        e.ADDED = "added";
        e.REMOVED = "removed";
        e.DISPLAY = "display";
        e.UNDISPLAY = "undisplay";
        e.ERROR = "error";
        e.COMPLETE = "complete";
        e.LOADED = "loaded";
        e.PROGRESS = "progress";
        e.INPUT = "input";
        e.RENDER = "render";
        e.OPEN = "open";
        e.MESSAGE = "message";
        e.CLOSE = "close";
        e.KEY_DOWN = "keydown";
        e.KEY_PRESS = "keypress";
        e.KEY_UP = "keyup";
        e.FRAME = "enterframe";
        e.DRAG_START = "dragstart";
        e.DRAG_MOVE = "dragmove";
        e.DRAG_END = "dragend";
        e.ENTER = "enter";
        e.SELECT = "select";
        e.BLUR = "blur";
        e.FOCUS = "focus";
        e.VISIBILITY_CHANGE = "visibilitychange";
        e.FOCUS_CHANGE = "focuschange";
        e.PLAYED = "played";
        e.PAUSED = "paused";
        e.STOPPED = "stopped";
        e.START = "start";
        e.END = "end";
        e.ENABLE_CHANGED = "enablechanged";
        e.ACTIVE_IN_HIERARCHY_CHANGED = "activeinhierarchychanged";
        e.COMPONENT_ADDED = "componentadded";
        e.COMPONENT_REMOVED = "componentremoved";
        e.LAYER_CHANGED = "layerchanged";
        e.HIERARCHY_LOADED = "hierarchyloaded";
        e.RECOVERED = "recovered";
        e.RELEASED = "released";
        e.LINK = "link";
        e.LABEL = "label";
        e.FULL_SCREEN_CHANGE = "fullscreenchange";
        e.DEVICE_LOST = "devicelost";
        e.MESH_CHANGED = "meshchanged";
        e.MATERIAL_CHANGED = "materialchanged";
        e.WORLDMATRIX_NEEDCHANGE = "worldmatrixneedchanged";
        e.ANIMATION_CHANGED = "animationchanged";
        e.TRIGGER_ENTER = "triggerenter";
        e.TRIGGER_STAY = "triggerstay";
        e.TRIGGER_EXIT = "triggerexit";
        e.TRAIL_FILTER_CHANGE = "trailfilterchange";
        e.DOMINO_FILTER_CHANGE = "dominofilterchange";
        return e
    } ();
    var p = function() {
        function e() {}
        _(e, "laya.events.Keyboard");
        e.NUMBER_0 = 48;
        e.NUMBER_1 = 49;
        e.NUMBER_2 = 50;
        e.NUMBER_3 = 51;
        e.NUMBER_4 = 52;
        e.NUMBER_5 = 53;
        e.NUMBER_6 = 54;
        e.NUMBER_7 = 55;
        e.NUMBER_8 = 56;
        e.NUMBER_9 = 57;
        e.A = 65;
        e.B = 66;
        e.C = 67;
        e.D = 68;
        e.E = 69;
        e.F = 70;
        e.G = 71;
        e.H = 72;
        e.I = 73;
        e.J = 74;
        e.K = 75;
        e.L = 76;
        e.M = 77;
        e.N = 78;
        e.O = 79;
        e.P = 80;
        e.Q = 81;
        e.R = 82;
        e.S = 83;
        e.T = 84;
        e.U = 85;
        e.V = 86;
        e.W = 87;
        e.X = 88;
        e.Y = 89;
        e.Z = 90;
        e.F1 = 112;
        e.F2 = 113;
        e.F3 = 114;
        e.F4 = 115;
        e.F5 = 116;
        e.F6 = 117;
        e.F7 = 118;
        e.F8 = 119;
        e.F9 = 120;
        e.F10 = 121;
        e.F11 = 122;
        e.F12 = 123;
        e.F13 = 124;
        e.F14 = 125;
        e.F15 = 126;
        e.NUMPAD = 21;
        e.NUMPAD_0 = 96;
        e.NUMPAD_1 = 97;
        e.NUMPAD_2 = 98;
        e.NUMPAD_3 = 99;
        e.NUMPAD_4 = 100;
        e.NUMPAD_5 = 101;
        e.NUMPAD_6 = 102;
        e.NUMPAD_7 = 103;
        e.NUMPAD_8 = 104;
        e.NUMPAD_9 = 105;
        e.NUMPAD_ADD = 107;
        e.NUMPAD_DECIMAL = 110;
        e.NUMPAD_DIVIDE = 111;
        e.NUMPAD_ENTER = 108;
        e.NUMPAD_MULTIPLY = 106;
        e.NUMPAD_SUBTRACT = 109;
        e.SEMICOLON = 186;
        e.EQUAL = 187;
        e.COMMA = 188;
        e.MINUS = 189;
        e.PERIOD = 190;
        e.SLASH = 191;
        e.BACKQUOTE = 192;
        e.LEFTBRACKET = 219;
        e.BACKSLASH = 220;
        e.RIGHTBRACKET = 221;
        e.QUOTE = 222;
        e.ALTERNATE = 18;
        e.BACKSPACE = 8;
        e.CAPS_LOCK = 20;
        e.COMMAND = 15;
        e.CONTROL = 17;
        e.DELETE = 46;
        e.ENTER = 13;
        e.ESCAPE = 27;
        e.PAGE_UP = 33;
        e.PAGE_DOWN = 34;
        e.END = 35;
        e.HOME = 36;
        e.LEFT = 37;
        e.UP = 38;
        e.RIGHT = 39;
        e.DOWN = 40;
        e.SHIFT = 16;
        e.SPACE = 32;
        e.TAB = 9;
        e.INSERT = 45;
        return e
    } ();
    var y = function() {
        function s() {}
        _(s, "laya.events.KeyBoardManager");
        s.__init__ = function() {
            s._addEvent("keydown");
            s._addEvent("keypress");
            s._addEvent("keyup")
        };
        s._addEvent = function(t) {
            Y.document.addEventListener(t,
            function(e) {
                laya.events.KeyBoardManager._dispatch(e, t)
            },
            true)
        };
        s._dispatch = function(e, t) {
            if (!s.enabled) return;
            s._event._stoped = false;
            s._event.nativeEvent = e;
            s._event.keyCode = e.keyCode || e.which || e.charCode;
            if (t === "keydown") s._pressKeys[s._event.keyCode] = true;
            else if (t === "keyup") s._pressKeys[s._event.keyCode] = null;
            var i = b.stage.focus && b.stage.focus.event != null && b.stage.focus.displayedInStage ? b.stage.focus: b.stage;
            var n = i;
            while (n) {
                n.event(t, s._event.setTo(t, n, i));
                n = n.parent
            }
        };
        s.hasKeyDown = function(e) {
            return s._pressKeys[e]
        };
        s._pressKeys = {};
        s.enabled = true;
        l(s, ["_event",
        function() {
            return this._event = new d
        }]);
        return s
    } ();
    var I = function() {
        function e() {}
        _(e, "laya.events.KeyLocation");
        e.STANDARD = 0;
        e.LEFT = 1;
        e.RIGHT = 2;
        e.NUM_PAD = 3;
        return e
    } ();
    var S = function() {
        function c() {
            this.mouseX = 0;
            this.mouseY = 0;
            this.disableMouseEvent = false;
            this.mouseDownTime = 0;
            this.mouseMoveAccuracy = 2;
            this._stage = null;
            this._target = null;
            this._lastMoveTimer = 0;
            this._isLeftMouse = false;
            this._eventList = [];
            this._touchIDs = {};
            this._id = 1;
            this._tTouchID = 0;
            this._event = new d;
            this._matrix = new M;
            this._point = new B;
            this._rect = new A;
            this._prePoint = new B;
            this._curTouchID = NaN
        }
        _(c, "laya.events.MouseManager");
        var e = c.prototype;
        e.__init__ = function(e, t) {
            var i = this;
            this._stage = e;
            var n = this;
            var s = this._eventList;
            t.oncontextmenu = function(e) {
                if (c.enabled) return false
            };
            t.addEventListener("mousedown",
            function(e) {
                if (c.enabled) {
                    if (!Y.onIE) e.preventDefault();
                    s.push(e);
                    n.mouseDownTime = Y.now()
                }
            });
            t.addEventListener("mouseup",
            function(e) {
                if (c.enabled) {
                    e.preventDefault();
                    s.push(e);
                    n.mouseDownTime = -Y.now()
                }
            },
            true);
            t.addEventListener("mousemove",
            function(e) {
                if (c.enabled) {
                    e.preventDefault();
                    var t = Y.now();
                    if (t - n._lastMoveTimer < 10) return;
                    n._lastMoveTimer = t;
                    s.push(e)
                }
            },
            true);
            t.addEventListener("mouseout",
            function(e) {
                if (c.enabled) s.push(e)
            });
            t.addEventListener("mouseover",
            function(e) {
                if (c.enabled) s.push(e)
            });
            t.addEventListener("touchstart",
            function(e) {
                if (c.enabled) {
                    s.push(e);
                    if (!c._isFirstTouch && !qe.isInputting) e.preventDefault();
                    n.mouseDownTime = Y.now()
                }
            });
            t.addEventListener("touchend",
            function(e) {
                if (c.enabled) {
                    if (!c._isFirstTouch && !qe.isInputting) e.preventDefault();
                    c._isFirstTouch = false;
                    s.push(e);
                    n.mouseDownTime = -Y.now()
                } else {
                    i._curTouchID = NaN
                }
            },
            true);
            t.addEventListener("touchmove",
            function(e) {
                if (c.enabled) {
                    e.preventDefault();
                    s.push(e)
                }
            },
            true);
            t.addEventListener("touchcancel",
            function(e) {
                if (c.enabled) {
                    e.preventDefault();
                    s.push(e)
                } else {
                    i._curTouchID = NaN
                }
            },
            true);
            t.addEventListener("mousewheel",
            function(e) {
                if (c.enabled) s.push(e)
            });
            t.addEventListener("DOMMouseScroll",
            function(e) {
                if (c.enabled) s.push(e)
            })
        };
        e.initEvent = function(e, t) {
            var i = this;
            i._event._stoped = false;
            i._event.nativeEvent = t || e;
            i._target = null;
            this._point.setTo(e.pageX || e.clientX, e.pageY || e.clientY);
            this._stage._canvasTransform.invertTransformPoint(this._point);
            i.mouseX = this._point.x;
            i.mouseY = this._point.y;
            i._event.touchId = e.identifier || 0;
            this._tTouchID = i._event.touchId;
            var n;
            n = C.I._event;
            n._stoped = false;
            n.nativeEvent = i._event.nativeEvent;
            n.touchId = i._event.touchId
        };
        e.checkMouseWheel = function(e) {
            this._event.delta = e.wheelDelta ? e.wheelDelta * .025 : -e.detail;
            var t = C.I.getLastOvers();
            for (var i = 0,
            n = t.length; i < n; i++) {
                var s = t[i];
                s.event("mousewheel", this._event.setTo("mousewheel", s, this._target))
            }
        };
        e.onMouseMove = function(e) {
            C.I.onMouseMove(e, this._tTouchID)
        };
        e.onMouseDown = function(e) {
            if (qe.isInputting && b.stage.focus && b.stage.focus["focus"] && !b.stage.focus.contains(this._target)) {
                var t = b.stage.focus["_tf"] || b.stage.focus;
                var i = e["_tf"] || e;
                if (i instanceof laya.display.Input && i.multiline == t.multiline) t["_focusOut"]();
                else t.focus = false
            }
            C.I.onMouseDown(e, this._tTouchID, this._isLeftMouse)
        };
        e.onMouseUp = function(e) {
            C.I.onMouseUp(e, this._tTouchID, this._isLeftMouse)
        };
        e.check = function(e, t, i, n) {
            this._point.setTo(t, i);
            e.fromParentPoint(this._point);
            t = this._point.x;
            i = this._point.y;
            var s = e.scrollRect;
            if (s) {
                this._rect.setTo(s.x, s.y, s.width, s.height);
                if (!this._rect.contains(t, i)) return false
            }
            if (!this.disableMouseEvent) {
                if (e.hitTestPrior && !e.mouseThrough && !this.hitTest(e, t, i)) {
                    return false
                }
                for (var a = e._childs.length - 1; a > -1; a--) {
                    var r = e._childs[a];
                    if (!r.destroyed && r.mouseEnabled && r.visible) {
                        if (this.check(r, t, i, n)) return true
                    }
                }
            }
            var o = e.hitTestPrior && !e.mouseThrough && !this.disableMouseEvent ? true: this.hitTest(e, t, i);
            if (o) {
                this._target = e;
                n.call(this, e)
            } else if (n === this.onMouseUp && e === this._stage) {
                this._target = this._stage;
                n.call(this, this._target)
            }
            return o
        };
        e.hitTest = function(e, t, i) {
            var n = false;
            if (e.scrollRect) {
                t -= e.scrollRect.x;
                i -= e.scrollRect.y
            }
            if (e.hitArea instanceof laya.utils.HitArea) {
                return e.hitArea.isHit(t, i)
            }
            if (e.width > 0 && e.height > 0 || e.mouseThrough || e.hitArea) {
                if (!e.mouseThrough) {
                    var s = this._rect;
                    if (e.hitArea) s = e.hitArea;
                    else s.setTo(0, 0, e.width, e.height);
                    n = s.contains(t, i)
                } else {
                    n = e.getGraphicBounds().contains(t, i)
                }
            }
            return n
        };
        e.runEvent = function() {
            var e = this._eventList.length;
            if (!e) return;
            var t = this;
            var i = 0,
            n = 0,
            s = 0,
            a;
            while (i < e) {
                var r = this._eventList[i];
                if (r.type !== "mousemove") this._prePoint.x = this._prePoint.y = -1e6;
                switch (r.type) {
                case "mousedown":
                    this._touchIDs[0] = this._id++;
                    if (!c._isTouchRespond) {
                        t._isLeftMouse = r.button === 0;
                        t.initEvent(r);
                        t.check(t._stage, t.mouseX, t.mouseY, t.onMouseDown)
                    } else c._isTouchRespond = false;
                    break;
                case "mouseup":
                    t._isLeftMouse = r.button === 0;
                    t.initEvent(r);
                    t.check(t._stage, t.mouseX, t.mouseY, t.onMouseUp);
                    break;
                case "mousemove":
                    if (Math.abs(this._prePoint.x - r.clientX) + Math.abs(this._prePoint.y - r.clientY) >= this.mouseMoveAccuracy) {
                        this._prePoint.x = r.clientX;
                        this._prePoint.y = r.clientY;
                        t.initEvent(r);
                        t.check(t._stage, t.mouseX, t.mouseY, t.onMouseMove)
                    }
                    break;
                case "touchstart":
                    c._isTouchRespond = true;
                    t._isLeftMouse = true;
                    var o = r.changedTouches;
                    for (n = 0, s = o.length; n < s; n++) {
                        a = o[n];
                        if (c.multiTouchEnabled || isNaN(this._curTouchID)) {
                            this._curTouchID = a.identifier;
                            if (this._id % 200 === 0) this._touchIDs = {};
                            this._touchIDs[a.identifier] = this._id++;
                            t.initEvent(a, r);
                            t.check(t._stage, t.mouseX, t.mouseY, t.onMouseDown)
                        }
                    }
                    break;
                case "touchend":
                case "touchcancel":
                    c._isTouchRespond = true;
                    t._isLeftMouse = true;
                    var l = r.changedTouches;
                    for (n = 0, s = l.length; n < s; n++) {
                        a = l[n];
                        if (c.multiTouchEnabled || a.identifier == this._curTouchID) {
                            this._curTouchID = NaN;
                            t.initEvent(a, r);
                            var h = false;
                            h = t.check(t._stage, t.mouseX, t.mouseY, t.onMouseUp);
                            if (!h) {
                                t.onMouseUp(null)
                            }
                        }
                    }
                    break;
                case "touchmove":
                    ;
                    var u = r.changedTouches;
                    for (n = 0, s = u.length; n < s; n++) {
                        a = u[n];
                        if (c.multiTouchEnabled || a.identifier == this._curTouchID) {
                            t.initEvent(a, r);
                            t.check(t._stage, t.mouseX, t.mouseY, t.onMouseMove)
                        }
                    }
                    break;
                case "wheel":
                case "mousewheel":
                case "DOMMouseScroll":
                    t.checkMouseWheel(r);
                    break;
                case "mouseout":
                    C.I.stageMouseOut();
                    break;
                case "mouseover":
                    t._stage.event("mouseover", t._event.setTo("mouseover", t._stage, t._stage));
                    break
                }
                i++
            }
            this._eventList.length = 0
        };
        c.enabled = true;
        c.multiTouchEnabled = true;
        c._isTouchRespond = false;
        c._isFirstTouch = true;
        l(c, ["instance",
        function() {
            return this.instance = new c
        }]);
        return c
    } ();
    var C = function() {
        function p() {
            this.preOvers = [];
            this.preDowns = [];
            this.preRightDowns = [];
            this.enable = true;
            this._lastClickTime = 0;
            this._event = new d
        }
        _(p, "laya.events.TouchManager");
        var e = p.prototype;
        e._clearTempArrs = function() {
            p._oldArr.length = 0;
            p._newArr.length = 0;
            p._tEleArr.length = 0
        };
        e.getTouchFromArr = function(e, t) {
            var i = 0,
            n = 0;
            n = t.length;
            var s;
            for (i = 0; i < n; i++) {
                s = t[i];
                if (s.id == e) {
                    return s
                }
            }
            return null
        };
        e.removeTouchFromArr = function(e, t) {
            var i = 0;
            for (i = t.length - 1; i >= 0; i--) {
                if (t[i].id == e) {
                    t.splice(i, 1)
                }
            }
        };
        e.createTouchO = function(e, t) {
            var i;
            i = se.getItem("TouchData") || {};
            i.id = t;
            i.tar = e;
            return i
        };
        e.onMouseDown = function(e, t, i) {
            i === void 0 && (i = false);
            if (!this.enable) return;
            var n;
            var s;
            var a;
            n = this.getTouchFromArr(t, this.preOvers);
            a = this.getEles(e, null, p._tEleArr);
            if (!n) {
                s = this.createTouchO(e, t);
                this.preOvers.push(s)
            } else {
                n.tar = e
            }
            if (Y.onMobile) this.sendEvents(a, "mouseover");
            var r;
            r = i ? this.preDowns: this.preRightDowns;
            n = this.getTouchFromArr(t, r);
            if (!n) {
                s = this.createTouchO(e, t);
                r.push(s)
            } else {
                n.tar = e
            }
            this.sendEvents(a, i ? "mousedown": "rightmousedown");
            this._clearTempArrs()
        };
        e.sendEvents = function(e, t) {
            var i = 0,
            n = 0;
            n = e.length;
            this._event._stoped = false;
            var s;
            s = e[0];
            var a;
            for (i = 0; i < n; i++) {
                a = e[i];
                if (a.destroyed) return;
                a.event(t, this._event.setTo(t, a, s));
                if (this._event._stoped) break
            }
        };
        e.getEles = function(e, t, i) {
            if (!i) {
                i = []
            } else {
                i.length = 0
            }
            while (e && e != t) {
                i.push(e);
                e = e.parent
            }
            return i
        };
        e.checkMouseOutAndOverOfMove = function(e, t, i) {
            i === void 0 && (i = 0);
            if (t == e) return;
            var n;
            var s;
            var a = 0,
            r = 0;
            if (t.contains(e)) {
                s = this.getEles(e, t, p._tEleArr);
                this.sendEvents(s, "mouseover")
            } else if (e.contains(t)) {
                s = this.getEles(t, e, p._tEleArr);
                this.sendEvents(s, "mouseout")
            } else {
                s = p._tEleArr;
                s.length = 0;
                var o;
                o = this.getEles(t, null, p._oldArr);
                var l;
                l = this.getEles(e, null, p._newArr);
                r = o.length;
                var h = 0;
                for (a = 0; a < r; a++) {
                    n = o[a];
                    h = l.indexOf(n);
                    if (h >= 0) {
                        l.splice(h, l.length - h);
                        break
                    } else {
                        s.push(n)
                    }
                }
                if (s.length > 0) {
                    this.sendEvents(s, "mouseout")
                }
                if (l.length > 0) {
                    this.sendEvents(l, "mouseover")
                }
            }
        };
        e.onMouseMove = function(e, t) {
            if (!this.enable) return;
            var i;
            i = this.getTouchFromArr(t, this.preOvers);
            var n;
            var s;
            if (!i) {
                n = this.getEles(e, null, p._tEleArr);
                this.sendEvents(n, "mouseover");
                this.preOvers.push(this.createTouchO(e, t))
            } else {
                this.checkMouseOutAndOverOfMove(e, i.tar);
                i.tar = e;
                n = this.getEles(e, null, p._tEleArr)
            }
            this.sendEvents(n, "mousemove");
            this._clearTempArrs()
        };
        e.getLastOvers = function() {
            p._tEleArr.length = 0;
            if (this.preOvers.length > 0 && this.preOvers[0].tar) {
                return this.getEles(this.preOvers[0].tar, null, p._tEleArr)
            }
            p._tEleArr.push(b.stage);
            return p._tEleArr
        };
        e.stageMouseOut = function() {
            var e;
            e = this.getLastOvers();
            this.preOvers.length = 0;
            this.sendEvents(e, "mouseout")
        };
        e.onMouseUp = function(e, t, i) {
            i === void 0 && (i = false);
            if (!this.enable) return;
            var n;
            var s;
            var a;
            var r;
            var o = 0,
            l = 0;
            var h;
            var u;
            var c = Y.onMobile;
            a = this.getEles(e, null, p._tEleArr);
            this.sendEvents(a, i ? "mouseup": "rightmouseup");
            var f;
            f = i ? this.preDowns: this.preRightDowns;
            n = this.getTouchFromArr(t, f);
            if (!n) {} else {
                var d = false;
                var g = Y.now();
                d = g - this._lastClickTime < 300;
                this._lastClickTime = g;
                if (e == n.tar) {
                    u = a
                } else {
                    r = this.getEles(n.tar, null, p._oldArr);
                    u = p._newArr;
                    u.length = 0;
                    l = r.length;
                    for (o = 0; o < l; o++) {
                        h = r[o];
                        if (a.indexOf(h) >= 0) {
                            u.push(h)
                        }
                    }
                }
                if (u.length > 0) {
                    this.sendEvents(u, i ? "click": "rightclick")
                }
                if (i && d) {
                    this.sendEvents(u, "doubleclick")
                }
                this.removeTouchFromArr(t, f);
                n.tar = null;
                se.recover("TouchData", n)
            }
            n = this.getTouchFromArr(t, this.preOvers);
            if (!n) {} else {
                if (c) {
                    u = this.getEles(n.tar, null, u);
                    if (u && u.length > 0) {
                        this.sendEvents(u, "mouseout")
                    }
                    this.removeTouchFromArr(t, this.preOvers);
                    n.tar = null;
                    se.recover("TouchData", n)
                }
            }
            this._clearTempArrs()
        };
        p._oldArr = [];
        p._newArr = [];
        p._tEleArr = [];
        l(p, ["I",
        function() {
            return this.I = new p
        }]);
        return p
    } ();
    var w = function() {
        function e() {
            this._action = null
        }
        _(e, "laya.filters.Filter");
        var t = e.prototype;
        b.imps(t, {
            "laya.filters.IFilter": true
        });
        t.callNative = function(e) {};
        u(0, t, "type",
        function() {
            return - 1
        });
        u(0, t, "action",
        function() {
            return this._action
        });
        e.BLUR = 16;
        e.COLOR = 32;
        e.GLOW = 8;
        e._filterStart = null;
        e._filterEnd = null;
        e._EndTarget = null;
        e._recycleScope = null;
        e._filter = null;
        e._useSrc = null;
        e._endSrc = null;
        e._useOut = null;
        e._endOut = null;
        return e
    } ();
    var x = function() {
        function e() {
            this.data = null
        }
        _(e, "laya.filters.ColorFilterAction");
        var t = e.prototype;
        b.imps(t, {
            "laya.filters.IFilterAction": true
        });
        t.apply = function(e) {
            var t = e.ctx.ctx;
            var i = e.ctx.ctx.canvas;
            if (i.width == 0 || i.height == 0) return i;
            var n = t.getImageData(0, 0, i.width, i.height);
            var s = n.data;
            var a;
            for (var r = 0,
            o = s.length; r < o; r += 4) {
                a = this.getColor(s[r], s[r + 1], s[r + 2], s[r + 3]);
                if (s[r + 3] == 0) continue;
                s[r] = a[0];
                s[r + 1] = a[1];
                s[r + 2] = a[2];
                s[r + 3] = a[3]
            }
            t.putImageData(n, 0, 0);
            return e
        };
        t.getColor = function(e, t, i, n) {
            var s = [];
            if (this.data._mat && this.data._alpha) {
                var a = this.data._mat;
                var r = this.data._alpha;
                s[0] = a[0] * e + a[1] * t + a[2] * i + a[3] * n + r[0];
                s[1] = a[4] * e + a[5] * t + a[6] * i + a[7] * n + r[1];
                s[2] = a[8] * e + a[9] * t + a[10] * i + a[11] * n + r[2];
                s[3] = a[12] * e + a[13] * t + a[14] * i + a[15] * n + r[3]
            }
            return s
        };
        return e
    } ();
    var R = function() {
        function e() {}
        _(e, "laya.maths.Arith");
        e.formatR = function(e) {
            if (e > Math.PI) e -= Math.PI * 2;
            if (e < -Math.PI) e += Math.PI * 2;
            return e
        };
        e.isPOT = function(e, t) {
            return e > 0 && (e & e - 1) === 0 && t > 0 && (t & t - 1) === 0
        };
        e.setMatToArray = function(e, t) {
            e.a,
            e.b,
            0,
            0,
            e.c,
            e.d,
            0,
            0,
            0,
            0,
            1,
            0,
            e.tx + 20,
            e.ty + 20,
            0,
            1;
            t[0] = e.a;
            t[1] = e.b;
            t[4] = e.c;
            t[5] = e.d;
            t[12] = e.tx;
            t[13] = e.ty
        };
        return e
    } ();
    var T = function() {
        function e() {
            this._controlPoints = [new B, new B, new B];
            this._calFun = this.getPoint2
        }
        _(e, "laya.maths.Bezier");
        var t = e.prototype;
        t._switchPoint = function(e, t) {
            var i = this._controlPoints.shift();
            i.setTo(e, t);
            this._controlPoints.push(i)
        };
        t.getPoint2 = function(e, t) {
            var i = this._controlPoints[0];
            var n = this._controlPoints[1];
            var s = this._controlPoints[2];
            var a = Math.pow(1 - e, 2) * i.x + 2 * e * (1 - e) * n.x + Math.pow(e, 2) * s.x;
            var r = Math.pow(1 - e, 2) * i.y + 2 * e * (1 - e) * n.y + Math.pow(e, 2) * s.y;
            t.push(a, r)
        };
        t.getPoint3 = function(e, t) {
            var i = this._controlPoints[0];
            var n = this._controlPoints[1];
            var s = this._controlPoints[2];
            var a = this._controlPoints[3];
            var r = Math.pow(1 - e, 3) * i.x + 3 * n.x * e * (1 - e) * (1 - e) + 3 * s.x * e * e * (1 - e) + a.x * Math.pow(e, 3);
            var o = Math.pow(1 - e, 3) * i.y + 3 * n.y * e * (1 - e) * (1 - e) + 3 * s.y * e * e * (1 - e) + a.y * Math.pow(e, 3);
            t.push(r, o)
        };
        t.insertPoints = function(e, t) {
            var i = NaN;
            e = e > 0 ? e: 5;
            var n = NaN;
            n = 1 / e;
            for (i = 0; i <= 1; i += n) {
                this._calFun(i, t)
            }
        };
        t.getBezierPoints = function(e, t, i) {
            t === void 0 && (t = 5);
            i === void 0 && (i = 2);
            var n = 0,
            s = 0;
            s = e.length;
            if (s < (i + 1) * 2) return [];
            var a;
            a = [];
            switch (i) {
            case 2:
                this._calFun = this.getPoint2;
                break;
            case 3:
                this._calFun = this.getPoint3;
                break;
            default:
                return []
            }
            while (this._controlPoints.length <= i) {
                this._controlPoints.push(new B)
            }
            for (n = 0; n < i * 2; n += 2) {
                this._switchPoint(e[n], e[n + 1])
            }
            for (n = i * 2; n < s; n += 2) {
                this._switchPoint(e[n], e[n + 1]);
                if (n / 2 % i == 0) this.insertPoints(t, a)
            }
            return a
        };
        l(e, ["I",
        function() {
            return this.I = new e
        }]);
        return e
    } ();
    var k = function() {
        function u() {}
        _(u, "laya.maths.GrahamScan");
        u.multiply = function(e, t, i) {
            return (e.x - i.x) * (t.y - i.y) - (t.x - i.x) * (e.y - i.y)
        };
        u.dis = function(e, t) {
            return (e.x - t.x) * (e.x - t.x) + (e.y - t.y) * (e.y - t.y)
        };
        u._getPoints = function(e, t, i) {
            t === void 0 && (t = false);
            if (!u._mPointList) u._mPointList = [];
            while (u._mPointList.length < e) u._mPointList.push(new B);
            if (!i) i = [];
            i.length = 0;
            if (t) {
                u.getFrom(i, u._mPointList, e)
            } else {
                u.getFromR(i, u._mPointList, e)
            }
            return i
        };
        u.getFrom = function(e, t, i) {
            var n = 0;
            for (n = 0; n < i; n++) {
                e.push(t[n])
            }
            return e
        };
        u.getFromR = function(e, t, i) {
            var n = 0;
            for (n = 0; n < i; n++) {
                e.push(t.pop())
            }
            return e
        };
        u.pListToPointList = function(e, t) {
            t === void 0 && (t = false);
            var i = 0,
            n = e.length / 2,
            s = u._getPoints(n, t, u._tempPointList);
            for (i = 0; i < n; i++) {
                s[i].setTo(e[i + i], e[i + i + 1])
            }
            return s
        };
        u.pointListToPlist = function(e) {
            var t = 0,
            i = e.length,
            n = u._temPList,
            s;
            n.length = 0;
            for (t = 0; t < i; t++) {
                s = e[t];
                n.push(s.x, s.y)
            }
            return n
        };
        u.scanPList = function(e) {
            return ue.copyArray(e, u.pointListToPlist(u.scan(u.pListToPointList(e, true))))
        };
        u.scan = function(e) {
            var t = 0,
            i = 0,
            n = 0,
            s = 2,
            a, r = e.length,
            o;
            var l = {};
            var h;
            o = u._temArr;
            o.length = 0;
            r = e.length;
            for (t = r - 1; t >= 0; t--) {
                a = e[t];
                h = a.x + "_" + a.y;
                if (!l.hasOwnProperty(h)) {
                    l[h] = true;
                    o.push(a)
                }
            }
            r = o.length;
            ue.copyArray(e, o);
            for (t = 1; t < r; t++) if (e[t].y < e[n].y || e[t].y == e[n].y && e[t].x < e[n].x) n = t;
            a = e[0];
            e[0] = e[n];
            e[n] = a;
            for (t = 1; t < r - 1; t++) {
                n = t;
                for (i = t + 1; i < r; i++) if (u.multiply(e[i], e[n], e[0]) > 0 || u.multiply(e[i], e[n], e[0]) == 0 && u.dis(e[0], e[i]) < u.dis(e[0], e[n])) n = i;
                a = e[t];
                e[t] = e[n];
                e[n] = a
            }
            o = u._temArr;
            o.length = 0;
            if (e.length < 3) {
                return ue.copyArray(o, e)
            }
            o.push(e[0], e[1], e[2]);
            for (t = 3; t < r; t++) {
                while (o.length >= 2 && u.multiply(e[t], o[o.length - 1], o[o.length - 2]) >= 0) o.pop();
                e[t] && o.push(e[t])
            }
            return o
        };
        u._mPointList = null;
        u._tempPointList = [];
        u._temPList = [];
        u._temArr = [];
        return u
    } ();
    var G = function() {
        function s() {}
        _(s, "laya.maths.MathUtil");
        s.subtractVector3 = function(e, t, i) {
            i[0] = e[0] - t[0];
            i[1] = e[1] - t[1];
            i[2] = e[2] - t[2]
        };
        s.lerp = function(e, t, i) {
            return e * (1 - i) + t * i
        };
        s.scaleVector3 = function(e, t, i) {
            i[0] = e[0] * t;
            i[1] = e[1] * t;
            i[2] = e[2] * t
        };
        s.lerpVector3 = function(e, t, i, n) {
            var s = e[0],
            a = e[1],
            r = e[2];
            n[0] = s + i * (t[0] - s);
            n[1] = a + i * (t[1] - a);
            n[2] = r + i * (t[2] - r)
        };
        s.lerpVector4 = function(e, t, i, n) {
            var s = e[0],
            a = e[1],
            r = e[2],
            o = e[3];
            n[0] = s + i * (t[0] - s);
            n[1] = a + i * (t[1] - a);
            n[2] = r + i * (t[2] - r);
            n[3] = o + i * (t[3] - o)
        };
        s.slerpQuaternionArray = function(e, t, i, n, s, a, r) {
            var o = e[t + 0],
            l = e[t + 1],
            h = e[t + 2],
            u = e[t + 3],
            c = i[n + 0],
            f = i[n + 1],
            d = i[n + 2],
            g = i[n + 3];
            var p, _, m, v, y;
            _ = o * c + l * f + h * d + u * g;
            if (_ < 0) {
                _ = -_;
                c = -c;
                f = -f;
                d = -d;
                g = -g
            }
            if (1 - _ > 1e-6) {
                p = Math.acos(_);
                m = Math.sin(p);
                v = Math.sin((1 - s) * p) / m;
                y = Math.sin(s * p) / m
            } else {
                v = 1 - s;
                y = s
            }
            a[r + 0] = v * o + y * c;
            a[r + 1] = v * l + y * f;
            a[r + 2] = v * h + y * d;
            a[r + 3] = v * u + y * g;
            return a
        };
        s.getRotation = function(e, t, i, n) {
            return Math.atan2(n - t, i - e) / Math.PI * 180
        };
        s.sortBigFirst = function(e, t) {
            if (e == t) return 0;
            return t > e ? 1 : -1
        };
        s.sortSmallFirst = function(e, t) {
            if (e == t) return 0;
            return t > e ? -1 : 1
        };
        s.sortNumBigFirst = function(e, t) {
            return parseFloat(t) - parseFloat(e)
        };
        s.sortNumSmallFirst = function(e, t) {
            return parseFloat(e) - parseFloat(t)
        };
        s.sortByKey = function(i, e, t) {
            e === void 0 && (e = false);
            t === void 0 && (t = true);
            var n;
            if (e) {
                n = t ? s.sortNumBigFirst: s.sortBigFirst
            } else {
                n = t ? s.sortNumSmallFirst: s.sortSmallFirst
            }
            return function(e, t) {
                return n(e[i], t[i])
            }
        };
        return s
    } ();
    var M = function() {
        function i(e, t, i, n, s, a) {
            this.inPool = false;
            this.bTransform = false;
            e === void 0 && (e = 1);
            t === void 0 && (t = 0);
            i === void 0 && (i = 0);
            n === void 0 && (n = 1);
            s === void 0 && (s = 0);
            a === void 0 && (a = 0);
            this.a = e;
            this.b = t;
            this.c = i;
            this.d = n;
            this.tx = s;
            this.ty = a;
            this._checkTransform()
        }
        _(i, "laya.maths.Matrix");
        var e = i.prototype;
        e.identity = function() {
            this.a = this.d = 1;
            this.b = this.tx = this.ty = this.c = 0;
            this.bTransform = false;
            return this
        };
        e._checkTransform = function() {
            return this.bTransform = this.a !== 1 || this.b !== 0 || this.c !== 0 || this.d !== 1
        };
        e.setTranslate = function(e, t) {
            this.tx = e;
            this.ty = t;
            return this
        };
        e.translate = function(e, t) {
            this.tx += e;
            this.ty += t;
            return this
        };
        e.scale = function(e, t) {
            this.a *= e;
            this.d *= t;
            this.c *= e;
            this.b *= t;
            this.tx *= e;
            this.ty *= t;
            this.bTransform = true
        };
        e.rotate = function(e) {
            var t = Math.cos(e);
            var i = Math.sin(e);
            var n = this.a;
            var s = this.c;
            var a = this.tx;
            this.a = n * t - this.b * i;
            this.b = n * i + this.b * t;
            this.c = s * t - this.d * i;
            this.d = s * i + this.d * t;
            this.tx = a * t - this.ty * i;
            this.ty = a * i + this.ty * t;
            this.bTransform = true
        };
        e.skew = function(e, t) {
            var i = Math.tan(e);
            var n = Math.tan(t);
            var s = this.a;
            var a = this.b;
            this.a += n * this.c;
            this.b += n * this.d;
            this.c += i * s;
            this.d += i * a;
            return this
        };
        e.invertTransformPoint = function(e) {
            var t = this.a;
            var i = this.b;
            var n = this.c;
            var s = this.d;
            var a = this.tx;
            var r = t * s - i * n;
            var o = s / r;
            var l = -i / r;
            var h = -n / r;
            var u = t / r;
            var c = (n * this.ty - s * a) / r;
            var f = -(t * this.ty - i * a) / r;
            return e.setTo(o * e.x + h * e.y + c, l * e.x + u * e.y + f)
        };
        e.transformPoint = function(e) {
            return e.setTo(this.a * e.x + this.c * e.y + this.tx, this.b * e.x + this.d * e.y + this.ty)
        };
        e.transformPointN = function(e) {
            return e.setTo(this.a * e.x + this.c * e.y, this.b * e.x + this.d * e.y)
        };
        e.transformPointArray = function(e, t) {
            var i = e.length;
            for (var n = 0; n < i; n += 2) {
                var s = e[n],
                a = e[n + 1];
                t[n] = this.a * s + this.c * a + this.tx;
                t[n + 1] = this.b * s + this.d * a + this.ty
            }
            return t
        };
        e.transformPointArrayScale = function(e, t) {
            var i = e.length;
            for (var n = 0; n < i; n += 2) {
                var s = e[n],
                a = e[n + 1];
                t[n] = this.a * s + this.c * a;
                t[n + 1] = this.b * s + this.d * a
            }
            return t
        };
        e.getScaleX = function() {
            return this.b === 0 ? this.a: Math.sqrt(this.a * this.a + this.b * this.b)
        };
        e.getScaleY = function() {
            return this.c === 0 ? this.d: Math.sqrt(this.c * this.c + this.d * this.d)
        };
        e.invert = function() {
            var e = this.a;
            var t = this.b;
            var i = this.c;
            var n = this.d;
            var s = this.tx;
            var a = e * n - t * i;
            this.a = n / a;
            this.b = -t / a;
            this.c = -i / a;
            this.d = e / a;
            this.tx = (i * this.ty - n * s) / a;
            this.ty = -(e * this.ty - t * s) / a;
            return this
        };
        e.setTo = function(e, t, i, n, s, a) {
            this.a = e,
            this.b = t,
            this.c = i,
            this.d = n,
            this.tx = s,
            this.ty = a;
            return this
        };
        e.concat = function(e) {
            var t = this.a;
            var i = this.c;
            var n = this.tx;
            this.a = t * e.a + this.b * e.c;
            this.b = t * e.b + this.b * e.d;
            this.c = i * e.a + this.d * e.c;
            this.d = i * e.b + this.d * e.d;
            this.tx = n * e.a + this.ty * e.c + e.tx;
            this.ty = n * e.b + this.ty * e.d + e.ty;
            return this
        };
        e.scaleEx = function(e, t) {
            var i = this.a,
            n = this.b,
            s = this.c,
            a = this.d;
            if (n !== 0 || s !== 0) {
                this.a = e * i;
                this.b = e * n;
                this.c = t * s;
                this.d = t * a
            } else {
                this.a = e * i;
                this.b = 0 * a;
                this.c = 0 * i;
                this.d = t * a
            }
            this.bTransform = true
        };
        e.rotateEx = function(e) {
            var t = Math.cos(e);
            var i = Math.sin(e);
            var n = this.a,
            s = this.b,
            a = this.c,
            r = this.d;
            if (s !== 0 || a !== 0) {
                this.a = t * n + i * a;
                this.b = t * s + i * r;
                this.c = -i * n + t * a;
                this.d = -i * s + t * r
            } else {
                this.a = t * n;
                this.b = i * r;
                this.c = -i * n;
                this.d = t * r
            }
            this.bTransform = true
        };
        e.clone = function() {
            var e = i.create();
            e.a = this.a;
            e.b = this.b;
            e.c = this.c;
            e.d = this.d;
            e.tx = this.tx;
            e.ty = this.ty;
            e.bTransform = this.bTransform;
            return e
        };
        e.copyTo = function(e) {
            e.a = this.a;
            e.b = this.b;
            e.c = this.c;
            e.d = this.d;
            e.tx = this.tx;
            e.ty = this.ty;
            e.bTransform = this.bTransform;
            return e
        };
        e.toString = function() {
            return this.a + "," + this.b + "," + this.c + "," + this.d + "," + this.tx + "," + this.ty
        };
        e.destroy = function() {
            if (this.inPool) return;
            var e = i._cache;
            this.inPool = true;
            e._length || (e._length = 0);
            e[e._length++] = this;
            this.a = this.d = 1;
            this.b = this.c = this.tx = this.ty = 0;
            this.bTransform = false
        };
        i.mul = function(e, t, i) {
            var n = e.a,
            s = e.b,
            a = e.c,
            r = e.d,
            o = e.tx,
            l = e.ty;
            var h = t.a,
            u = t.b,
            c = t.c,
            f = t.d,
            d = t.tx,
            g = t.ty;
            if (u !== 0 || c !== 0) {
                i.a = n * h + s * c;
                i.b = n * u + s * f;
                i.c = a * h + r * c;
                i.d = a * u + r * f;
                i.tx = h * o + c * l + d;
                i.ty = u * o + f * l + g
            } else {
                i.a = n * h;
                i.b = s * f;
                i.c = a * h;
                i.d = r * f;
                i.tx = h * o + d;
                i.ty = f * l + g
            }
            return i
        };
        i.mul16 = function(e, t, i) {
            var n = e.a,
            s = e.b,
            a = e.c,
            r = e.d,
            o = e.tx,
            l = e.ty;
            var h = t.a,
            u = t.b,
            c = t.c,
            f = t.d,
            d = t.tx,
            g = t.ty;
            if (u !== 0 || c !== 0) {
                i[0] = n * h + s * c;
                i[1] = n * u + s * f;
                i[4] = a * h + r * c;
                i[5] = a * u + r * f;
                i[12] = h * o + c * l + d;
                i[13] = u * o + f * l + g
            } else {
                i[0] = n * h;
                i[1] = s * f;
                i[4] = a * h;
                i[5] = r * f;
                i[12] = h * o + d;
                i[13] = f * l + g
            }
            return i
        };
        i.mulPre = function(e, t, i, n, s, a, r, o) {
            var l = e.a,
            h = e.b,
            u = e.c,
            c = e.d,
            f = e.tx,
            d = e.ty;
            if (i !== 0 || n !== 0) {
                o.a = l * t + h * n;
                o.b = l * i + h * s;
                o.c = u * t + c * n;
                o.d = u * i + c * s;
                o.tx = t * f + n * d + a;
                o.ty = i * f + s * d + r
            } else {
                o.a = l * t;
                o.b = h * s;
                o.c = u * t;
                o.d = c * s;
                o.tx = t * f + a;
                o.ty = s * d + r
            }
            return o
        };
        i.mulPos = function(e, t, i, n, s, a, r, o) {
            var l = e.a,
            h = e.b,
            u = e.c,
            c = e.d,
            f = e.tx,
            d = e.ty;
            if (h !== 0 || u !== 0) {
                o.a = t * l + i * u;
                o.b = t * h + i * c;
                o.c = n * l + s * u;
                o.d = n * h + s * c;
                o.tx = l * a + u * r + f;
                o.ty = h * a + c * r + d
            } else {
                o.a = t * l;
                o.b = i * c;
                o.c = n * l;
                o.d = s * c;
                o.tx = l * a + f;
                o.ty = c * r + d
            }
            return o
        };
        i.preMul = function(e, t, i) {
            var n = e.a,
            s = e.b,
            a = e.c,
            r = e.d;
            var o = t.a,
            l = t.b,
            h = t.c,
            u = t.d,
            c = t.tx,
            f = t.ty;
            i.a = o * n;
            i.b = i.c = 0;
            i.d = u * r;
            i.tx = c * n + e.tx;
            i.ty = f * r + e.ty;
            if (l !== 0 || h !== 0 || s !== 0 || a !== 0) {
                i.a += l * a;
                i.d += h * s;
                i.b += o * s + l * r;
                i.c += h * n + u * a;
                i.tx += f * a;
                i.ty += c * s
            }
            return i
        };
        i.preMulXY = function(e, t, i, n) {
            var s = e.a,
            a = e.b,
            r = e.c,
            o = e.d;
            n.a = s;
            n.b = a;
            n.c = r;
            n.d = o;
            n.tx = t * s + e.tx + i * r;
            n.ty = i * o + e.ty + t * a;
            return n
        };
        i.create = function() {
            var e = i._cache;
            var t = !e._length ? new i: e[--e._length];
            t.inPool = false;
            return t
        };
        i.EMPTY = new i;
        i.TEMP = new i;
        i._cache = [];
        return i
    } ();
    var B = function() {
        function e(e, t) {
            e === void 0 && (e = 0);
            t === void 0 && (t = 0);
            this.x = e;
            this.y = t
        }
        _(e, "laya.maths.Point");
        var t = e.prototype;
        t.setTo = function(e, t) {
            this.x = e;
            this.y = t;
            return this
        };
        t.distance = function(e, t) {
            return Math.sqrt((this.x - e) * (this.x - e) + (this.y - t) * (this.y - t))
        };
        t.toString = function() {
            return this.x + "," + this.y
        };
        t.normalize = function() {
            var e = Math.sqrt(this.x * this.x + this.y * this.y);
            if (e > 0) {
                var t = 1 / e;
                this.x *= t;
                this.y *= t
            }
        };
        e.TEMP = new e;
        e.EMPTY = new e;
        return e
    } ();
    var A = function() {
        function h(e, t, i, n) {
            e === void 0 && (e = 0);
            t === void 0 && (t = 0);
            i === void 0 && (i = 0);
            n === void 0 && (n = 0);
            this.x = e;
            this.y = t;
            this.width = i;
            this.height = n
        }
        _(h, "laya.maths.Rectangle");
        var e = h.prototype;
        e.setTo = function(e, t, i, n) {
            this.x = e;
            this.y = t;
            this.width = i;
            this.height = n;
            return this
        };
        e.copyFrom = function(e) {
            this.x = e.x;
            this.y = e.y;
            this.width = e.width;
            this.height = e.height;
            return this
        };
        e.contains = function(e, t) {
            if (this.width <= 0 || this.height <= 0) return false;
            if (e >= this.x && e < this.right) {
                if (t >= this.y && t < this.bottom) {
                    return true
                }
            }
            return false
        };
        e.intersects = function(e) {
            return ! (e.x > this.x + this.width || e.x + e.width < this.x || e.y > this.y + this.height || e.y + e.height < this.y)
        };
        e.intersection = function(e, t) {
            if (!this.intersects(e)) return null;
            t || (t = new h);
            t.x = Math.max(this.x, e.x);
            t.y = Math.max(this.y, e.y);
            t.width = Math.min(this.right, e.right) - t.x;
            t.height = Math.min(this.bottom, e.bottom) - t.y;
            return t
        };
        e.union = function(e, t) {
            t || (t = new h);
            this.clone(t);
            if (e.width <= 0 || e.height <= 0) return t;
            t.addPoint(e.x, e.y);
            t.addPoint(e.right, e.bottom);
            return this
        };
        e.clone = function(e) {
            e || (e = new h);
            e.x = this.x;
            e.y = this.y;
            e.width = this.width;
            e.height = this.height;
            return e
        };
        e.toString = function() {
            return this.x + "," + this.y + "," + this.width + "," + this.height
        };
        e.equals = function(e) {
            if (!e || e.x !== this.x || e.y !== this.y || e.width !== this.width || e.height !== this.height) return false;
            return true
        };
        e.addPoint = function(e, t) {
            this.x > e && (this.width += this.x - e, this.x = e);
            this.y > t && (this.height += this.y - t, this.y = t);
            if (this.width < e - this.x) this.width = e - this.x;
            if (this.height < t - this.y) this.height = t - this.y;
            return this
        };
        e._getBoundPoints = function() {
            var e = h._temB;
            e.length = 0;
            if (this.width == 0 || this.height == 0) return e;
            e.push(this.x, this.y, this.x + this.width, this.y, this.x, this.y + this.height, this.x + this.width, this.y + this.height);
            return e
        };
        e.isEmpty = function() {
            if (this.width <= 0 || this.height <= 0) return true;
            return false
        };
        u(0, e, "right",
        function() {
            return this.x + this.width
        });
        u(0, e, "bottom",
        function() {
            return this.y + this.height
        });
        h._getBoundPointS = function(e, t, i, n) {
            var s = h._temA;
            s.length = 0;
            if (i == 0 || n == 0) return s;
            s.push(e, t, e + i, t, e, t + n, e + i, t + n);
            return s
        };
        h._getWrapRec = function(e, t) {
            if (!e || e.length < 1) return t ? t.setTo(0, 0, 0, 0) : h.TEMP.setTo(0, 0, 0, 0);
            t = t ? t: new h;
            var i, n = e.length,
            s, a, r, o, l = B.TEMP;
            s = r = 99999;
            a = o = -s;
            for (i = 0; i < n; i += 2) {
                l.x = e[i];
                l.y = e[i + 1];
                s = s < l.x ? s: l.x;
                r = r < l.y ? r: l.y;
                a = a > l.x ? a: l.x;
                o = o > l.y ? o: l.y
            }
            return t.setTo(s, r, a - s, o - r)
        };
        h.EMPTY = new h;
        h.TEMP = new h;
        h._temB = [];
        h._temA = [];
        return h
    } ();
    var P = function() {
        function l() {}
        _(l, "laya.media.SoundManager");
        u(1, l, "useAudioMusic",
        function() {
            return l._useAudioMusic
        },
        function(e) {
            l._useAudioMusic = e;
            if (e) {
                l._musicClass = _e
            } else {
                l._musicClass = null
            }
        });
        u(1, l, "autoStopMusic",
        function() {
            return l._autoStopMusic
        },
        function(e) {
            b.stage.off("blur", null, l._stageOnBlur);
            b.stage.off("focus", null, l._stageOnFocus);
            b.stage.off("visibilitychange", null, l._visibilityChange);
            l._autoStopMusic = e;
            if (e) {
                b.stage.on("blur", null, l._stageOnBlur);
                b.stage.on("focus", null, l._stageOnFocus);
                b.stage.on("visibilitychange", null, l._visibilityChange)
            }
        });
        u(1, l, "muted",
        function() {
            return l._muted
        },
        function(e) {
            if (e == l._muted) return;
            if (e) {
                l.stopAllSound()
            }
            l.musicMuted = e;
            l._muted = e
        });
        u(1, l, "musicMuted",
        function() {
            return l._musicMuted
        },
        function(e) {
            if (e == l._musicMuted) return;
            if (e) {
                if (l._tMusic) {
                    if (l._musicChannel && !l._musicChannel.isStopped) {
                        if (O.isConchApp) {
                            if (l._musicChannel._audio) l._musicChannel._audio.muted = true
                        } else {
                            l._musicChannel.pause()
                        }
                    } else {
                        l._musicChannel = null
                    }
                } else {
                    l._musicChannel = null
                }
                l._musicMuted = e
            } else {
                l._musicMuted = e;
                if (l._tMusic) {
                    if (l._musicChannel) {
                        if (O.isConchApp) {
                            if (l._musicChannel._audio) l._musicChannel._audio.muted = false
                        } else {
                            l._musicChannel.resume()
                        }
                    }
                }
            }
        });
        u(1, l, "soundMuted",
        function() {
            return l._soundMuted
        },
        function(e) {
            l._soundMuted = e
        });
        l.addChannel = function(e) {
            if (l._channels.indexOf(e) >= 0) return;
            l._channels.push(e)
        };
        l.removeChannel = function(e) {
            var t = 0;
            for (t = l._channels.length - 1; t >= 0; t--) {
                if (l._channels[t] == e) {
                    l._channels.splice(t, 1)
                }
            }
        };
        l.disposeSoundIfNotUsed = function(e) {
            var t = 0;
            for (t = l._channels.length - 1; t >= 0; t--) {
                if (l._channels[t].url == e) {
                    return
                }
            }
            l.destroySound(e)
        };
        l._visibilityChange = function() {
            if (b.stage.isVisibility) {
                l._stageOnFocus()
            } else {
                l._stageOnBlur()
            }
        };
        l._stageOnBlur = function() {
            l._isActive = false;
            if (l._musicChannel) {
                if (!l._musicChannel.isStopped) {
                    l._blurPaused = true;
                    l._musicChannel.pause()
                }
            }
            l.stopAllSound();
            b.stage.once("mousedown", null, l._stageOnFocus)
        };
        l._recoverWebAudio = function() {
            if (ye.ctx && ye.ctx.state != "running" && ye.ctx.resume) ye.ctx.resume()
        };
        l._stageOnFocus = function() {
            l._isActive = true;
            l._recoverWebAudio();
            b.stage.off("mousedown", null, l._stageOnFocus);
            if (l._blurPaused) {
                if (l._musicChannel && l._musicChannel.isStopped) {
                    l._blurPaused = false;
                    l._musicChannel.resume()
                }
            }
        };
        l.playSound = function(e, t, i, n, s) {
            t === void 0 && (t = 1);
            s === void 0 && (s = 0);
            if (!l._isActive || !e) return null;
            if (l._muted) return null;
            l._recoverWebAudio();
            e = F.formatURL(e);
            if (e == l._tMusic) {
                if (l._musicMuted) return null
            } else {
                if (O.isConchApp) {
                    var a = ue.getFileExtension(e);
                    if (a != "wav" && a != "ogg") {
                        alert("The sound only supports wav or ogg format,for optimal performance reason,please refer to the official website document.");
                        return null
                    }
                }
                if (l._soundMuted) return null
            }
            var r;
            if (!Y.onMiniGame && !Y.onKGMiniGame) {
                r = b.loader.getRes(e)
            }
            if (!n) n = l._soundClass;
            if (!r) {
                r = new n;
                r.load(e);
                if (!Y.onMiniGame && !Y.onKGMiniGame) {
                    Se.cacheRes(e, r)
                }
            }
            var o;
            o = r.play(s, t);
            if (!o) return null;
            o.url = e;
            o.volume = e == l._tMusic ? l.musicVolume: l.soundVolume;
            o.completeHandler = i;
            return o
        };
        l.destroySound = function(e) {
            var t = b.loader.getRes(e);
            if (t) {
                Se.clearRes(e);
                t.dispose()
            }
        };
        l.playMusic = function(e, t, i, n) {
            t === void 0 && (t = 0);
            n === void 0 && (n = 0);
            e = F.formatURL(e);
            l._tMusic = e;
            if (l._musicChannel) l._musicChannel.stop();
            return l._musicChannel = l.playSound(e, t, i, l._musicClass, n)
        };
        l.stopSound = function(e) {
            e = F.formatURL(e);
            var t = 0;
            var i;
            for (t = l._channels.length - 1; t >= 0; t--) {
                i = l._channels[t];
                if (i.url == e) {
                    i.stop()
                }
            }
        };
        l.stopAll = function() {
            l._tMusic = null;
            var e = 0;
            var t;
            for (e = l._channels.length - 1; e >= 0; e--) {
                t = l._channels[e];
                t.stop()
            }
        };
        l.stopAllSound = function() {
            var e = 0;
            var t;
            for (e = l._channels.length - 1; e >= 0; e--) {
                t = l._channels[e];
                if (t.url != l._tMusic) {
                    t.stop()
                }
            }
        };
        l.stopMusic = function() {
            if (l._musicChannel) l._musicChannel.stop();
            l._tMusic = null
        };
        l.setSoundVolume = function(e, t) {
            if (t) {
                t = F.formatURL(t);
                l._setVolume(t, e)
            } else {
                l.soundVolume = e;
                var i = 0;
                var n;
                for (i = l._channels.length - 1; i >= 0; i--) {
                    n = l._channels[i];
                    if (n.url != l._tMusic) {
                        n.volume = e
                    }
                }
            }
        };
        l.setMusicVolume = function(e) {
            l.musicVolume = e;
            l._setVolume(l._tMusic, e)
        };
        l._setVolume = function(e, t) {
            e = F.formatURL(e);
            var i = 0;
            var n;
            for (i = l._channels.length - 1; i >= 0; i--) {
                n = l._channels[i];
                if (n.url == e) {
                    n.volume = t
                }
            }
        };
        l.musicVolume = 1;
        l.soundVolume = 1;
        l.playbackRate = 1;
        l._useAudioMusic = true;
        l._muted = false;
        l._soundMuted = false;
        l._musicMuted = false;
        l._tMusic = null;
        l._musicChannel = null;
        l._channels = [];
        l._autoStopMusic = false;
        l._blurPaused = false;
        l._isActive = true;
        l._soundClass = null;
        l._musicClass = null;
        l.autoReleaseSound = true;
        return l
    } ();
    var U = function() {
        var e;
        function i() {}
        _(i, "laya.net.LocalStorage");
        i.__init__ = function() {
            if (!i._baseClass) {
                i._baseClass = e;
                e.init()
            }
            i.items = i._baseClass.items;
            i.support = i._baseClass.support
        };
        i.setItem = function(e, t) {
            i._baseClass.setItem(e, t)
        };
        i.getItem = function(e) {
            return i._baseClass.getItem(e)
        };
        i.setJSON = function(e, t) {
            i._baseClass.setJSON(e, t)
        };
        i.getJSON = function(e) {
            return i._baseClass.getJSON(e)
        };
        i.removeItem = function(e) {
            i._baseClass.removeItem(e)
        };
        i.clear = function() {
            i._baseClass.clear()
        };
        i._baseClass = null;
        i.items = null;
        i.support = false;
        i.__init$ = function() {
            e = function() {
                function i() {}
                _(i, "");
                i.init = function() {
                    try {
                        i.support = true;
                        i.items = r.localStorage;
                        i.setItem("laya", "1");
                        i.removeItem("laya")
                    } catch(e) {
                        i.support = false
                    }
                    if (!i.support) console.log("LocalStorage is not supprot or browser is private mode.")
                };
                i.setItem = function(e, t) {
                    try {
                        i.support && i.items.setItem(e, t)
                    } catch(e) {
                        console.warn("set localStorage failed", e)
                    }
                };
                i.getItem = function(e) {
                    return i.support ? i.items.getItem(e) : null
                };
                i.setJSON = function(e, t) {
                    try {
                        i.support && i.items.setItem(e, JSON.stringify(t))
                    } catch(e) {
                        console.warn("set localStorage failed", e)
                    }
                };
                i.getJSON = function(e) {
                    return JSON.parse(i.support ? i.items.getItem(e) : null)
                };
                i.removeItem = function(e) {
                    i.support && i.items.removeItem(e)
                };
                i.clear = function() {
                    i.support && i.items.clear()
                };
                i.items = null;
                i.support = false;
                return i
            } ()
        };
        return i
    } ();
    var E = function() {
        function n() {}
        _(n, "laya.net.ResourceVersion");
        n.enable = function(e, t, i) {
            i === void 0 && (i = 2);
            laya.net.ResourceVersion.type = i;
            b.loader.load(e, v.create(null, n.onManifestLoaded, [t]), null, "json");
            F.customFormat = n.addVersionPrefix
        };
        n.onManifestLoaded = function(e, t) {
            n.manifest = t;
            e.run();
            if (!t) {
                console.warn("资源版本清单文件不存在，不使用资源版本管理。忽略ERR_FILE_NOT_FOUND错误。")
            }
        };
        n.addVersionPrefix = function(e) {
            if (n.manifest && n.manifest[e]) {
                if (n.type == 2) return n.manifest[e];
                return n.manifest[e] + "/" + e
            }
            return e
        };
        n.FOLDER_VERSION = 1;
        n.FILENAME_VERSION = 2;
        n.manifest = null;
        n.type = 1;
        return n
    } ();
    var N = function() {
        function e() {
            this.fontName = null;
            this.complete = null;
            this.err = null;
            this._fontTxt = null;
            this._url = null;
            this._div = null;
            this._txtWidth = NaN;
            this._http = null
        }
        _(e, "laya.net.TTFLoader");
        var t = e.prototype;
        t.load = function(e) {
            this._url = e;
            var t = e.split(".ttf")[0].split("/");
            this.fontName = t[t.length - 1];
            if (Y.window.conch) {
                this._loadConch()
            } else if (Y.window.FontFace) {
                this._loadWithFontFace()
            } else {
                this._loadWithCSS()
            }
        };
        t._loadConch = function() {
            this._http = new Ie;
            this._http.on("error", this, this._onErr);
            this._http.on("complete", this, this._onHttpLoaded);
            this._http.send(this._url, null, "get", "arraybuffer")
        };
        t._onHttpLoaded = function(e) {
            Y.window.conch.setFontFaceFromBuffer(this.fontName, e);
            this._clearHttp();
            this._complete()
        };
        t._clearHttp = function() {
            if (this._http) {
                this._http.off("error", this, this._onErr);
                this._http.off("complete", this, this._onHttpLoaded);
                this._http = null
            }
        };
        t._onErr = function() {
            this._clearHttp();
            if (this.err) {
                this.err.runWith("fail:" + this._url);
                this.err = null
            }
        };
        t._complete = function() {
            b.timer.clear(this, this._complete);
            b.timer.clear(this, this._checkComplete);
            if (this._div && this._div.parentNode) {
                this._div.parentNode.removeChild(this._div);
                this._div = null
            }
            if (this.complete) {
                this.complete.runWith(this);
                this.complete = null
            }
        };
        t._checkComplete = function() {
            if (D.measureText("LayaTTFFont", this._fontTxt).width != this._txtWidth) {
                this._complete()
            }
        };
        t._loadWithFontFace = function() {
            var e = new Y.window.FontFace(this.fontName, "url('" + this._url + "')");
            Y.window.document.fonts.add(e);
            var t = this;
            e.loaded.then(function() {
                t._complete()
            });
            e.load()
        };
        t._createDiv = function() {
            this._div = Y.createElement("div");
            this._div.innerHTML = "laya";
            var e = this._div.style;
            e.fontFamily = this.fontName;
            e.position = "absolute";
            e.left = "-100px";
            e.top = "-100px";
            Y.document.body.appendChild(this._div)
        };
        t._loadWithCSS = function() {
            var e = this;
            var t = Y.createElement("style");
            t.type = "text/css";
            Y.document.body.appendChild(t);
            t.textContent = "@font-face { font-family:'" + this.fontName + "'; src:url('" + this._url + "');}";
            this._fontTxt = "40px " + this.fontName;
            this._txtWidth = D.measureText("LayaTTFFont", this._fontTxt).width;
            var i = this;
            t.onload = function() {
                b.timer.once(1e4, i, e._complete)
            };
            b.timer.loop(20, this, this._checkComplete);
            this._createDiv()
        };
        e._testString = "LayaTTFFont";
        return e
    } ();
    var F = function() {
        function n(e) {
            this._url = null;
            this._path = null;
            this._url = n.formatURL(e);
            this._path = n.getPath(e)
        }
        _(n, "laya.net.URL");
        var e = n.prototype;
        u(0, e, "path",
        function() {
            return this._path
        });
        u(0, e, "url",
        function() {
            return this._url
        });
        n.formatURL = function(e, t) {
            if (!e) return "null path";
            if (e.indexOf(":") > 0) return e;
            if (n.customFormat != null) e = n.customFormat(e, t);
            var i = e.charAt(0);
            if (i === ".") {
                return n.formatRelativePath((t || n.basePath) + e)
            } else if (i === "~") {
                return n.rootPath + e.substring(1)
            } else if (i === "d") {
                if (e.indexOf("data:image") === 0) return e
            } else if (i === "/") {
                return e
            }
            return (t || n.basePath) + e
        };
        n.formatRelativePath = function(e) {
            var t = e.split("/");
            for (var i = 0,
            n = t.length; i < n; i++) {
                if (t[i] == "..") {
                    t.splice(i - 1, 2);
                    i -= 2
                }
            }
            return t.join("/")
        };
        n.isAbsolute = function(e) {
            return e.indexOf(":") > 0 || e.charAt(0) == "/"
        };
        n.getPath = function(e) {
            var t = e.lastIndexOf("/");
            return t > 0 ? e.substr(0, t + 1) : ""
        };
        n.getFileName = function(e) {
            var t = e.lastIndexOf("/");
            return t > 0 ? e.substr(t + 1) : e
        };
        n.version = {};
        n.basePath = "";
        n.rootPath = "";
        n.customFormat = function(e) {
            var t = n.version[e];
            if (!O.isConchApp && t) e += "?v=" + t;
            return e
        };
        return n
    } ();
    var O = function() {
        function a(e, t) {
            this._timeId = 0;
            var i = a._mainCanvas.source.style;
            i.position = "absolute";
            i.top = i.left = "0px";
            i.background = "#000000";
            a._mainCanvas.source.id = "layaCanvas";
            var n = laya.renders.Render.isWebGL;
            a._mainCanvas.source.width = e;
            a._mainCanvas.source.height = t;
            n && a.WebGL.init(a._mainCanvas, e, t);
            if (!Y.onKGMiniGame) Y.container.appendChild(a._mainCanvas.source);
            a._context = new V(e, t, n ? null: a._mainCanvas);
            a._context.ctx.setIsMainContext();
            Y.window.requestAnimationFrame(s);
            function s(e) {
                b.stage._loop();
                Y.window.requestAnimationFrame(s)
            }
            b.stage.on("visibilitychange", this, this._onVisibilitychange)
        }
        _(a, "laya.renders.Render");
        var e = a.prototype;
        e._onVisibilitychange = function() {
            if (!b.stage.isVisibility) {
                this._timeId = Y.window.setInterval(this._enterFrame, 1e3)
            } else if (this._timeId != 0) {
                Y.window.clearInterval(this._timeId)
            }
        };
        e._enterFrame = function(e) {
            b.stage._loop()
        };
        u(1, a, "context",
        function() {
            return a._context
        });
        u(1, a, "canvas",
        function() {
            return a._mainCanvas.source
        });
        a._context = null;
        a._mainCanvas = null;
        a.WebGL = null;
        a.isConchNode = false;
        a.isConchApp = false;
        a.isConchWebGL = false;
        a.isWebGL = false;
        a.is3DMode = false;
        a.optimizeTextureMemory = function(e, t) {
            return true
        };
        a.__init$ = function() {
            r.ConchRenderType = r.ConchRenderType || 1;
            r.ConchRenderType |= !r.conch ? 0 : 4; {
                a.isConchNode = (r.ConchRenderType & 5) == 5;
                a.isConchApp = (r.ConchRenderType & 4) == 4;
                a.isConchWebGL = r.ConchRenderType == 6
            }
        };
        return a
    } ();
    var V = function() {
        function r(e, t, i) {
            this.x = 0;
            this.y = 0;
            this._drawTexture = function(e, t, i) {
                if (i[0].loaded) this.ctx.drawTexture(i[0], i[1], i[2], i[3], i[4], e, t)
            };
            this._fillTexture = function(e, t, i) {
                if (i[0].loaded) this.ctx.fillTexture(i[0], i[1] + e, i[2] + t, i[3], i[4], i[5], i[6], i[7])
            };
            this._drawTextureWithTransform = function(e, t, i) {
                if (i[0].loaded) this.ctx.drawTextureWithTransform(i[0], i[1], i[2], i[3], i[4], i[5], e, t, i[6])
            };
            this._fillQuadrangle = function(e, t, i) {
                this.ctx.fillQuadrangle(i[0], i[1], i[2], i[3], i[4])
            };
            this._drawRect = function(e, t, i) {
                var n = this.ctx;
                if (i[4] != null) {
                    n.fillStyle = i[4];
                    n.fillRect(e + i[0], t + i[1], i[2], i[3], null)
                }
                if (i[5] != null) {
                    n.strokeStyle = i[5];
                    n.lineWidth = i[6];
                    n.strokeRect(e + i[0], t + i[1], i[2], i[3], i[6])
                }
            };
            this._drawPie = function(e, t, i) {
                var n = this.ctx;
                O.isWebGL && n.setPathId(i[8]);
                n.beginPath();
                if (O.isWebGL) {
                    n.movePath(i[0] + e, i[1] + t);
                    n.moveTo(0, 0)
                } else {
                    n.moveTo(e + i[0], t + i[1])
                }
                n.arc(e + i[0], t + i[1], i[2], i[3], i[4]);
                n.closePath();
                this._fillAndStroke(i[5], i[6], i[7], true)
            };
            this._clipRect = function(e, t, i) {
                this.ctx.clipRect(e + i[0], t + i[1], i[2], i[3])
            };
            this._fillRect = function(e, t, i) {
                this.ctx.fillRect(e + i[0], t + i[1], i[2], i[3], i[4])
            };
            this._drawCircle = function(e, t, i) {
                var n = this.ctx;
                O.isWebGL && n.setPathId(i[6]);
                re.drawCall++;
                n.beginPath();
                O.isWebGL && n.movePath(i[0] + e, i[1] + t);
                n.arc(i[0] + e, i[1] + t, i[2], 0, r.PI2);
                n.closePath();
                this._fillAndStroke(i[3], i[4], i[5], true)
            };
            this._fillCircle = function(e, t, i) {
                re.drawCall++;
                var n = this.ctx;
                n.beginPath();
                n.fillStyle = i[3];
                n.arc(i[0] + e, i[1] + t, i[2], 0, r.PI2);
                n.fill()
            };
            this._setShader = function(e, t, i) {
                this.ctx.setShader(i[0])
            };
            this._drawLine = function(e, t, i) {
                var n = this.ctx;
                O.isWebGL && n.setPathId(i[6]);
                n.beginPath();
                n.strokeStyle = i[4];
                n.lineWidth = i[5];
                if (O.isWebGL) {
                    n.movePath(e, t);
                    n.moveTo(i[0], i[1]);
                    n.lineTo(i[2], i[3])
                } else {
                    n.moveTo(e + i[0], t + i[1]);
                    n.lineTo(e + i[2], t + i[3])
                }
                n.stroke()
            };
            this._drawLines = function(e, t, i) {
                var n = this.ctx;
                O.isWebGL && n.setPathId(i[5]);
                n.beginPath();
                e += i[0],
                t += i[1];
                O.isWebGL && n.movePath(e, t);
                n.strokeStyle = i[3];
                n.lineWidth = i[4];
                var s = i[2];
                var a = 2,
                r = s.length;
                if (O.isWebGL) {
                    n.moveTo(s[0], s[1]);
                    while (a < r) {
                        n.lineTo(s[a++], s[a++])
                    }
                } else {
                    n.moveTo(e + s[0], t + s[1]);
                    while (a < r) {
                        n.lineTo(e + s[a++], t + s[a++])
                    }
                }
                n.stroke()
            };
            this._drawLinesWebGL = function(e, t, i) {
                this.ctx.drawLines(e + this.x + i[0], t + this.y + i[1], i[2], i[3], i[4])
            };
            this._drawCurves = function(e, t, i) {
                this.ctx.drawCurves(e, t, i)
            };
            this._draw = function(e, t, i) {
                i[0].call(null, this, e, t)
            };
            this._transformByMatrix = function(e, t, i) {
                this.ctx.transformByMatrix(i[0])
            };
            this._setTransform = function(e, t, i) {
                this.ctx.setTransform(i[0], i[1], i[2], i[3], i[4], i[5])
            };
            this._setTransformByMatrix = function(e, t, i) {
                this.ctx.setTransformByMatrix(i[0])
            };
            this._save = function(e, t, i) {
                this.ctx.save()
            };
            this._restore = function(e, t, i) {
                this.ctx.restore()
            };
            this._translate = function(e, t, i) {
                this.ctx.translate(i[0], i[1])
            };
            this._transform = function(e, t, i) {
                this.ctx.translate(i[1] + e, i[2] + t);
                var n = i[0];
                this.ctx.transform(n.a, n.b, n.c, n.d, n.tx, n.ty);
                this.ctx.translate( - e - i[1], -t - i[2])
            };
            this._rotate = function(e, t, i) {
                this.ctx.translate(i[1] + e, i[2] + t);
                this.ctx.rotate(i[0]);
                this.ctx.translate( - e - i[1], -t - i[2])
            };
            this._scale = function(e, t, i) {
                this.ctx.translate(i[2] + e, i[3] + t);
                this.ctx.scale(i[0], i[1]);
                this.ctx.translate( - e - i[2], -t - i[3])
            };
            this._alpha = function(e, t, i) {
                this.ctx.globalAlpha *= i[0]
            };
            this._setAlpha = function(e, t, i) {
                this.ctx.globalAlpha = i[0]
            };
            this._fillText = function(e, t, i) {
                this.ctx.fillText(i[0], i[1] + e, i[2] + t, i[3], i[4], i[5])
            };
            this._strokeText = function(e, t, i) {
                this.ctx.strokeText(i[0], i[1] + e, i[2] + t, i[3], i[4], i[5], i[6])
            };
            this._fillBorderText = function(e, t, i) {
                this.ctx.fillBorderText(i[0], i[1] + e, i[2] + t, i[3], i[4], i[5], i[6], i[7])
            };
            this._blendMode = function(e, t, i) {
                this.ctx.globalCompositeOperation = i[0]
            };
            this._beginClip = function(e, t, i) {
                this.ctx.beginClip && this.ctx.beginClip(e + i[0], t + i[1], i[2], i[3])
            };
            this._setIBVB = function(e, t, i) {
                this.ctx.setIBVB(i[0] + e, i[1] + t, i[2], i[3], i[4], i[5], i[6], i[7])
            };
            this._fillTrangles = function(e, t, i) {
                this.ctx.fillTrangles(i[0], i[1] + e, i[2] + t, i[3], i[4])
            };
            this._drawPath = function(e, t, i) {
                var n = this.ctx;
                O.isWebGL && n.setPathId( - 1);
                n.beginPath();
                e += i[0],
                t += i[1];
                O.isWebGL && n.movePath(e, t);
                var s = i[2];
                for (var a = 0,
                r = s.length; a < r; a++) {
                    var o = s[a];
                    switch (o[0]) {
                    case "moveTo":
                        O.isWebGL ? n.moveTo(o[1], o[2]) : n.moveTo(e + o[1], t + o[2]);
                        break;
                    case "lineTo":
                        O.isWebGL ? n.lineTo(o[1], o[2]) : n.lineTo(e + o[1], t + o[2]);
                        break;
                    case "arcTo":
                        O.isWebGL ? n.arcTo(o[1], o[2], o[3], o[4], o[5]) : n.arcTo(e + o[1], t + o[2], e + o[3], t + o[4], o[5]);
                        break;
                    case "closePath":
                        n.closePath();
                        break
                    }
                }
                var l = i[3];
                if (l != null) {
                    n.fillStyle = l.fillStyle;
                    n.fill()
                }
                var h = i[4];
                if (h != null) {
                    n.strokeStyle = h.strokeStyle;
                    n.lineWidth = h.lineWidth || 1;
                    n.lineJoin = h.lineJoin;
                    n.lineCap = h.lineCap;
                    n.miterLimit = h.miterLimit;
                    n.stroke()
                }
            };
            this.drawPoly = function(e, t, i) {
                this.ctx.drawPoly(e + this.x + i[0], t + this.y + i[1], i[2], i[3], i[4], i[5], i[6])
            };
            this._drawPoly = function(e, t, i) {
                var n = this.ctx;
                var s = i[2];
                var a = 2,
                r = s.length;
                if (O.isWebGL) {
                    n.setPathId(i[6]);
                    n.beginPath();
                    e += i[0],
                    t += i[1];
                    n.movePath(e, t);
                    n.moveTo(s[0], s[1]);
                    while (a < r) {
                        n.lineTo(s[a++], s[a++])
                    }
                } else {
                    n.beginPath();
                    e += i[0],
                    t += i[1];
                    n.moveTo(e + s[0], t + s[1]);
                    while (a < r) {
                        n.lineTo(e + s[a++], t + s[a++])
                    }
                }
                n.closePath();
                this._fillAndStroke(i[3], i[4], i[5], i[7])
            };
            this._drawSkin = function(e, t, i) {
                var n = i[0];
                if (n) {
                    var s = this.ctx;
                    n.render(s, e, t)
                }
            };
            this._drawParticle = function(e, t, i) {
                this.ctx.drawParticle(e + this.x, t + this.y, i[0])
            };
            this._setFilters = function(e, t, i) {
                this.ctx.setFilters(i)
            };
            if (i) {
                this.ctx = i.getContext("2d")
            } else {
                i = Ne.create("3D");
                this.ctx = D.createWebGLContext2D(i);
                i._setContext(this.ctx)
            }
            i.size(e, t);
            this.canvas = i
        }
        _(r, "laya.renders.RenderContext");
        var e = r.prototype;
        e.destroy = function() {
            if (this.canvas) {
                this.canvas.destroy();
                this.canvas = null;
                this.ctx = null
            }
            if (this.ctx) {
                this.ctx.destroy();
                this.ctx = null
            }
        };
        e.drawTexture = function(e, t, i, n, s) {
            if (e.loaded) this.ctx.drawTexture(e, t, i, n, s, this.x, this.y)
        };
        e._drawTextures = function(e, t, i) {
            if (i[0].loaded) this.ctx.drawTextures(i[0], i[1], e + this.x, t + this.y)
        };
        e.drawTextureWithTransform = function(e, t, i, n, s, a, r) {
            if (e.loaded) this.ctx.drawTextureWithTransform(e, t, i, n, s, a, this.x, this.y, r)
        };
        e.fillQuadrangle = function(e, t, i, n, s) {
            this.ctx.fillQuadrangle(e, t, i, n, s)
        };
        e.drawCanvas = function(e, t, i, n, s) {
            this.ctx.drawCanvas(e, t + this.x, i + this.y, n, s)
        };
        e.drawRect = function(e, t, i, n, s, a) {
            a === void 0 && (a = 1);
            var r = this.ctx;
            r.strokeStyle = s;
            r.lineWidth = a;
            r.strokeRect(e + this.x, t + this.y, i, n, a)
        };
        e._fillAndStroke = function(e, t, i, n) {
            n === void 0 && (n = false);
            var s = this.ctx;
            if (e != null) {
                s.fillStyle = e;
                if (O.isWebGL) {
                    s.fill(n)
                } else {
                    s.fill()
                }
            }
            if (t != null && i > 0) {
                s.strokeStyle = t;
                s.lineWidth = i;
                s.stroke()
            }
        };
        e.clipRect = function(e, t, i, n) {
            this.ctx.clipRect(e + this.x, t + this.y, i, n)
        };
        e.fillRect = function(e, t, i, n, s) {
            this.ctx.fillRect(e + this.x, t + this.y, i, n, s)
        };
        e.drawCircle = function(e, t, i, n, s) {
            s === void 0 && (s = 1);
            re.drawCall++;
            var a = this.ctx;
            a.beginPath();
            a.strokeStyle = n;
            a.lineWidth = s;
            a.arc(e + this.x, t + this.y, i, 0, r.PI2);
            a.stroke()
        };
        e.drawTriangles = function(e, t, i) {
            if (O.isWebGL) {
                this.ctx.drawTriangles(i[0], e + i[1], t + i[2], i[3], i[4], i[5], i[6], i[7], i[8], i[9])
            } else {
                var n = i[5];
                var s = 0,
                a = n.length;
                var r = this.ctx;
                for (s = 0; s < a; s += 3) {
                    var o = n[s] * 2;
                    var l = n[s + 1] * 2;
                    var h = n[s + 2] * 2;
                    r.drawTriangle(i[0], i[3], i[4], o, l, h, i[6], true)
                }
            }
        };
        e.fillCircle = function(e, t, i, n) {
            re.drawCall++;
            var s = this.ctx;
            s.beginPath();
            s.fillStyle = n;
            s.arc(e + this.x, t + this.y, i, 0, r.PI2);
            s.fill()
        };
        e.setShader = function(e) {
            this.ctx.setShader(e)
        };
        e.drawLine = function(e, t, i, n, s, a) {
            a === void 0 && (a = 1);
            var r = this.ctx;
            r.beginPath();
            r.strokeStyle = s;
            r.lineWidth = a;
            r.moveTo(this.x + e, this.y + t);
            r.lineTo(this.x + i, this.y + n);
            r.stroke()
        };
        e.clear = function() {
            this.ctx.clear()
        };
        e.transformByMatrix = function(e) {
            this.ctx.transformByMatrix(e)
        };
        e.setTransform = function(e, t, i, n, s, a) {
            this.ctx.setTransform(e, t, i, n, s, a)
        };
        e.setTransformByMatrix = function(e) {
            this.ctx.setTransformByMatrix(e)
        };
        e.save = function() {
            this.ctx.save()
        };
        e.restore = function() {
            this.ctx.restore()
        };
        e.translate = function(e, t) {
            this.ctx.translate(e, t)
        };
        e.transform = function(e, t, i, n, s, a) {
            this.ctx.transform(e, t, i, n, s, a)
        };
        e.rotate = function(e) {
            this.ctx.rotate(e)
        };
        e.scale = function(e, t) {
            this.ctx.scale(e, t)
        };
        e.alpha = function(e) {
            this.ctx.globalAlpha *= e
        };
        e.setAlpha = function(e) {
            this.ctx.globalAlpha = e
        };
        e.fillWords = function(e, t, i, n, s, a) {
            a === void 0 && (a = 0);
            this.ctx.fillWords(e, t, i, n, s, a)
        };
        e.fillBorderWords = function(e, t, i, n, s, a, r) {
            this.ctx.fillBorderWords(e, t, i, n, s, a, r)
        };
        e.fillText = function(e, t, i, n, s, a) {
            this.ctx.fillText(e, t + this.x, i + this.y, n, s, a)
        };
        e.strokeText = function(e, t, i, n, s, a, r) {
            this.ctx.strokeText(e, t + this.x, i + this.y, n, s, a, r)
        };
        e.blendMode = function(e) {
            this.ctx.globalCompositeOperation = e
        };
        e.flush = function() {
            this.ctx.flush && this.ctx.flush()
        };
        e.addRenderObject = function(e) {
            this.ctx.addRenderObject(e)
        };
        e.beginClip = function(e, t, i, n) {
            this.ctx.beginClip && this.ctx.beginClip(e, t, i, n)
        };
        e.endClip = function() {
            this.ctx.endClip && this.ctx.endClip()
        };
        e.fillTrangles = function(e, t, i) {
            this.ctx.fillTrangles(i[0], i[1], i[2], i[3], i.length > 4 ? i[4] : null)
        };
        r.PI2 = 2 * Math.PI;
        return r
    } ();
    var q = function() {
        function r(e, t) {
            this._next = t || r.NORENDER;
            switch (e) {
            case 0:
                this._fun = this._no;
                return;
            case 1:
                this._fun = this._image;
                return;
            case 2:
                this._fun = this._alpha;
                return;
            case 4:
                this._fun = this._transform;
                return;
            case 8:
                this._fun = this._blend;
                return;
            case 16:
                this._fun = this._canvas;
                return;
            case 64:
                this._fun = this._mask;
                return;
            case 128:
                this._fun = this._clip;
                return;
            case 256:
                this._fun = this._style;
                return;
            case 512:
                this._fun = this._graphics;
                return;
            case 2048:
                this._fun = this._childs;
                return;
            case 1024:
                this._fun = this._custom;
                return;
            case 1 | 512 : this._fun = this._image2;
                return;
            case 1 | 4 | 512 : this._fun = this._image2;
                return;
            case 32:
                this._fun = w._filter;
                return;
            case 69905:
                this._fun = r._initRenderFun;
                return
            }
            this.onCreate(e)
        }
        _(r, "laya.renders.RenderSprite");
        var e = r.prototype;
        e.onCreate = function(e) {};
        e._style = function(e, t, i, n) {
            e._style.render(e, t, i, n);
            var s = this._next;
            s._fun.call(s, e, t, i, n)
        };
        e._no = function(e, t, i, n) {};
        e._custom = function(e, t, i, n) {
            e.customRender(t, i, n);
            var s = e._style._tf;
            this._next._fun.call(this._next, e, t, i - s.translateX, n - s.translateY)
        };
        e._clip = function(e, t, i, n) {
            var s = this._next;
            if (s == r.NORENDER) return;
            var a = e._style.scrollRect;
            t.ctx.save();
            t.ctx.clipRect(i, n, a.width, a.height);
            s._fun.call(s, e, t, i - a.x, n - a.y);
            t.ctx.restore()
        };
        e._blend = function(e, t, i, n) {
            var s = e._style;
            if (s.blendMode) {
                t.ctx.globalCompositeOperation = s.blendMode
            }
            var a = this._next;
            a._fun.call(a, e, t, i, n);
            t.ctx.globalCompositeOperation = "source-over"
        };
        e._mask = function(e, t, i, n) {
            var s = this._next;
            s._fun.call(s, e, t, i, n);
            var a = e.mask;
            if (a) {
                t.ctx.globalCompositeOperation = "destination-in";
                if (a.numChildren > 0 || !a.graphics._isOnlyOne()) {
                    a.cacheAsBitmap = true
                }
                a.render(t, i - e.pivotX, n - e.pivotY)
            }
            t.ctx.globalCompositeOperation = "source-over"
        };
        e._graphics = function(e, t, i, n) {
            var s = e._style._tf;
            e._graphics && e._graphics._render(e, t, i - s.translateX, n - s.translateY);
            var a = this._next;
            a._fun.call(a, e, t, i, n)
        };
        e._image = function(e, t, i, n) {
            var s = e._style;
            t.ctx.drawTexture2(i, n, s._tf.translateX, s._tf.translateY, e.transform, s.alpha, s.blendMode, e._graphics._one)
        };
        e._image2 = function(e, t, i, n) {
            var s = e._style._tf;
            t.ctx.drawTexture2(i, n, s.translateX, s.translateY, e.transform, 1, null, e._graphics._one)
        };
        e._alpha = function(e, t, i, n) {
            var s = e._style;
            var a;
            if ((a = s.alpha) > .01 || e._needRepaint()) {
                var r = t.ctx.globalAlpha;
                t.ctx.globalAlpha *= a;
                var o = this._next;
                o._fun.call(o, e, t, i, n);
                t.ctx.globalAlpha = r
            }
        };
        e._transform = function(e, t, i, n) {
            var s = e.transform,
            a = this._next;
            if (s && a != r.NORENDER) {
                t.save();
                t.transform(s.a, s.b, s.c, s.d, s.tx + i, s.ty + n);
                a._fun.call(a, e, t, 0, 0);
                t.restore()
            } else a._fun.call(a, e, t, i, n)
        };
        e._childs = function(e, t, i, n) {
            var s = e._style;
            var a = s._tf;
            i = i - a.translateX + s.paddingLeft;
            n = n - a.translateY + s.paddingTop;
            if (s._calculation) {
                var r = e._getWords();
                if (r) {
                    var o = s;
                    if (o) {
                        if (o.stroke) {
                            t.fillBorderWords(r, i, n, o.font, o.color, o.strokeColor, o.stroke)
                        } else {
                            t.fillWords(r, i, n, o.font, o.color, o.textDecoration != "none" && o.underLine ? 1 : 0)
                        }
                    }
                }
            }
            var l = e._childs,
            h = l.length,
            u;
            if (e.viewport || e.optimizeScrollRect && e._style.scrollRect) {
                var c = e.viewport || e._style.scrollRect;
                var f = c.x;
                var d = c.y;
                var g = c.right;
                var p = c.bottom;
                var _ = NaN,
                m = NaN;
                for (v = 0; v < h; ++v) {
                    if ((u = l[v]).visible && ((_ = u._x) < g && _ + u.width > f && (m = u._y) < p && m + u.height > d)) {
                        u.render(t, i, n)
                    }
                }
            } else {
                for (var v = 0; v < h; ++v)(u = l[v])._style.visible && u.render(t, i, n)
            }
        };
        e._canvas = function(e, t, i, n) {
            var s = e._$P.cacheCanvas;
            if (!s) {
                this._next._fun.call(this._next, e, t, i, n);
                return
            }
            s.type === "bitmap" ? re.canvasBitmap++:re.canvasNormal++;
            var a = s.ctx;
            if (e._needRepaint() || !a) {
                this._canvas_repaint(e, t, i, n)
            } else {
                var r = s._cacheRec;
                t.drawCanvas(a.canvas, i + r.x, n + r.y, r.width, r.height)
            }
        };
        e._canvas_repaint = function(e, t, i, n) {
            var s = e._$P.cacheCanvas;
            var a = this._next;
            if (!s) {
                a._fun.call(a, e, r, i, n);
                return
            }
            var r = s.ctx;
            var o = e._needRepaint() || !r;
            var l;
            var h;
            var u;
            var c;
            var f = s.type;
            f === "bitmap" ? re.canvasBitmap++:re.canvasNormal++;
            if (o) {
                if (!s._cacheRec) s._cacheRec = new A;
                var d, g;
                if (!O.isWebGL || f === "bitmap") {
                    c = e.getSelfBounds();
                    c.x = c.x - e.pivotX;
                    c.y = c.y - e.pivotY;
                    c.x = c.x - 16;
                    c.y = c.y - 16;
                    c.width = c.width + 32;
                    c.height = c.height + 32;
                    c.x = Math.floor(c.x + i) - i;
                    c.y = Math.floor(c.y + n) - n;
                    c.width = Math.floor(c.width);
                    c.height = Math.floor(c.height);
                    s._cacheRec.copyFrom(c)
                } else {
                    s._cacheRec.setTo( - e.pivotX, -e.pivotY, 1, 1)
                }
                c = s._cacheRec;
                var p = O.isWebGL ? 1 : Y.pixelRatio * b.stage.clientScaleX;
                var _ = O.isWebGL ? 1 : Y.pixelRatio * b.stage.clientScaleY;
                if (!O.isWebGL) {
                    var m = 1;
                    var v = 1;
                    var y;
                    y = e;
                    while (y && y != b.stage) {
                        m *= y.scaleX;
                        v *= y.scaleY;
                        y = y.parent
                    }
                    if (O.isWebGL) {
                        if (m < 1) p *= m;
                        if (v < 1) _ *= v
                    } else {
                        if (m > 1) p *= m;
                        if (v > 1) _ *= v
                    }
                }
                if (e.scrollRect) {
                    var I = e.scrollRect;
                    c.x -= I.x;
                    c.y -= I.y
                }
                d = c.width * p;
                g = c.height * _;
                h = c.x;
                u = c.y;
                if (O.isWebGL && f === "bitmap" && (d > 2048 || g > 2048)) {
                    console.warn("cache bitmap size larger than 2048,cache ignored");
                    if (s.ctx) {
                        se.recover("RenderContext", s.ctx);
                        s.ctx.canvas.size(0, 0);
                        s.ctx = null
                    }
                    a._fun.call(a, e, t, i, n);
                    return
                }
                if (!r) {
                    r = s.ctx = se.getItem("RenderContext") || new V(d, g, Ne.create("AUTO"))
                }
                r.ctx.sprite = e;
                l = r.canvas;
                l.clear(); (l.width != d || l.height != g) && l.size(d, g);
                if (f === "bitmap") l.context.asBitmap = true;
                else if (f === "normal") l.context.asBitmap = false;
                var S;
                if (p != 1 || _ != 1) {
                    var C = r.ctx;
                    C.save();
                    C.scale(p, _);
                    if (!O.isConchWebGL && O.isConchApp) {
                        S = e._$P.cf;
                        S && C.setFilterMatrix && C.setFilterMatrix(S._mat, S._alpha)
                    }
                    a._fun.call(a, e, r, -h, -u);
                    C.restore();
                    if (!O.isConchApp || O.isConchWebGL) e._applyFilters()
                } else {
                    C = r.ctx;
                    if (!O.isConchWebGL && O.isConchApp) {
                        S = e._$P.cf;
                        S && C.setFilterMatrix && C.setFilterMatrix(S._mat, S._alpha)
                    }
                    a._fun.call(a, e, r, -h, -u);
                    if (!O.isConchApp || O.isConchWebGL) e._applyFilters()
                }
                if (e._$P.staticCache) s.reCache = false;
                re.canvasReCache++
            } else {
                c = s._cacheRec;
                h = c.x;
                u = c.y;
                l = r.canvas
            }
            t.drawCanvas(l, i + h, n + u, c.width, c.height)
        };
        r.__init__ = function() {
            var e = 0,
            t = 0;
            var i;
            i = D.createRenderSprite(69905, null);
            t = r.renders.length = 2048 * 2;
            for (e = 0; e < t; e++) r.renders[e] = i;
            r.renders[0] = D.createRenderSprite(0, null);
            function n(e, t) {
                var i = 0;
                for (var n = 0; n < e.length; n++) {
                    i |= e[n];
                    r.renders[i] = t
                }
            }
            n([1, 512, 4, 2], new r(1, null));
            r.renders[1 | 512] = D.createRenderSprite(1 | 512, null);
            r.renders[1 | 4 | 512] = new r(1 | 4 | 512, null)
        };
        r._initRenderFun = function(e, t, i, n) {
            var s = e._renderType;
            var a = r.renders[s] = r._getTypeRender(s);
            a._fun(e, t, i, n)
        };
        r._getTypeRender = function(e) {
            var t = null;
            var i = 2048;
            while (i > 1) {
                if (i & e) t = D.createRenderSprite(i, t);
                i = i >> 1
            }
            return t
        };
        r.IMAGE = 1;
        r.ALPHA = 2;
        r.TRANSFORM = 4;
        r.BLEND = 8;
        r.CANVAS = 16;
        r.FILTERS = 32;
        r.MASK = 64;
        r.CLIP = 128;
        r.STYLE = 256;
        r.GRAPHICS = 512;
        r.CUSTOM = 1024;
        r.CHILDS = 2048;
        r.INIT = 69905;
        r.renders = [];
        r.NORENDER = new r(0, null);
        return r
    } ();
    var z = function() {
        function o() {
            this._repaint = false
        }
        _(o, "laya.resource.Context");
        var e = o.prototype;
        e.replaceReset = function() {
            var e = 0,
            t = 0;
            t = o.replaceKeys.length;
            var i;
            for (e = 0; e < t; e++) {
                i = o.replaceKeys[e];
                this[o.newKeys[e]] = this[i]
            }
        };
        e.replaceResotre = function() {
            this.__restore();
            this.__reset()
        };
        e.setIsMainContext = function() {};
        e.drawTextures = function(e, t, i, n) {
            re.drawCall += t.length / 2;
            var s = e.width;
            var a = e.height;
            for (var r = 0,
            o = t.length; r < o; r += 2) {
                this.drawTexture(e, t[r], t[r + 1], s, a, i, n)
            }
        };
        e.drawCanvas = function(e, t, i, n, s) {
            re.drawCall++;
            this.drawImage(e.source, t, i, n, s)
        };
        e.fillRect = function(e, t, i, n, s) {
            re.drawCall++;
            s && (this.fillStyle = s);
            this.__fillRect(e, t, i, n)
        };
        e.fillText = function(e, t, i, n, s, a) {
            re.drawCall++;
            if (arguments.length > 3 && n != null) {
                this.font = n;
                this.fillStyle = s;
                this.textAlign = a;
                this.textBaseline = "top"
            }
            this.__fillText(e, t, i)
        };
        e.fillBorderText = function(e, t, i, n, s, a, r, o) {
            re.drawCall++;
            this.font = n;
            this.fillStyle = s;
            this.textBaseline = "top";
            this.strokeStyle = a;
            this.lineWidth = r;
            this.textAlign = o;
            this.__strokeText(e, t, i);
            this.__fillText(e, t, i)
        };
        e.strokeText = function(e, t, i, n, s, a, r) {
            re.drawCall++;
            if (arguments.length > 3 && n != null) {
                this.font = n;
                this.strokeStyle = s;
                this.lineWidth = a;
                this.textAlign = r;
                this.textBaseline = "top"
            }
            this.__strokeText(e, t, i)
        };
        e.transformByMatrix = function(e) {
            this.transform(e.a, e.b, e.c, e.d, e.tx, e.ty)
        };
        e.setTransformByMatrix = function(e) {
            this.setTransform(e.a, e.b, e.c, e.d, e.tx, e.ty)
        };
        e.clipRect = function(e, t, i, n) {
            re.drawCall++;
            this.beginPath();
            this.rect(e, t, i, n);
            this.clip()
        };
        e.drawTexture = function(e, t, i, n, s, a, r) {
            re.drawCall++;
            var o = e.uv,
            l = e.bitmap.width,
            h = e.bitmap.height;
            this.drawImage(e.source, o[0] * l, o[1] * h, (o[2] - o[0]) * l, (o[5] - o[3]) * h, t + a, i + r, n, s)
        };
        e.drawTextureWithTransform = function(e, t, i, n, s, a, r, o, l) {
            re.drawCall++;
            var h = e.uv,
            u = e.bitmap.width,
            c = e.bitmap.height;
            this.save();
            l != 1 && (this.globalAlpha *= l);
            if (a) {
                this.transform(a.a, a.b, a.c, a.d, a.tx + r, a.ty + o);
                this.drawImage(e.source, h[0] * u, h[1] * c, (h[2] - h[0]) * u, (h[5] - h[3]) * c, t, i, n, s)
            } else {
                this.drawImage(e.source, h[0] * u, h[1] * c, (h[2] - h[0]) * u, (h[5] - h[3]) * c, t + r, i + o, n, s)
            }
            this.restore()
        };
        e.drawTexture2 = function(e, t, i, n, s, a, r, o) {
            var l = o[0];
            if (! (l.loaded && l.bitmap && l.source)) {
                return
            }
            re.drawCall++;
            var h = a !== 1;
            if (h) {
                var u = this.globalAlpha;
                this.globalAlpha *= a
            }
            var c = l.uv,
            f = l.bitmap.width,
            d = l.bitmap.height;
            if (s) {
                this.save();
                this.transform(s.a, s.b, s.c, s.d, s.tx + e, s.ty + t);
                this.drawImage(l.source, c[0] * f, c[1] * d, (c[2] - c[0]) * f, (c[5] - c[3]) * d, o[1] - i, o[2] - n, o[3], o[4]);
                this.restore()
            } else {
                this.drawImage(l.source, c[0] * f, c[1] * d, (c[2] - c[0]) * f, (c[5] - c[3]) * d, o[1] - i + e, o[2] - n + t, o[3], o[4])
            }
            if (h) this.globalAlpha = u
        };
        e.fillTexture = function(e, t, i, n, s, a, r, o) {
            if (!o.pat) {
                if (e.uv != Le.DEF_UV) {
                    var l = new Ne("2D");
                    l.getContext("2d");
                    l.size(e.width, e.height);
                    l.context.drawTexture(e, 0, 0, e.width, e.height, 0, 0);
                    e = new Le(l)
                }
                o.pat = this.createPattern(e.bitmap.source, a)
            }
            var h = t,
            u = i;
            var c = 0,
            f = 0;
            if (r) {
                h += r.x % e.width;
                u += r.y % e.height;
                c -= r.x % e.width;
                f -= r.y % e.height
            }
            this.translate(h, u);
            this.fillRect(c, f, n, s, o.pat);
            this.translate( - h, -u)
        };
        e.drawTriangle = function(e, t, i, n, s, a, r, o) {
            var l = e.bitmap;
            var h = l.source;
            var u = e.width;
            var c = e.height;
            var f = l.width;
            var d = l.height;
            var g = i[n] * f;
            var p = i[s] * f;
            var _ = i[a] * f;
            var m = i[n + 1] * d;
            var v = i[s + 1] * d;
            var y = i[a + 1] * d;
            var I = t[n];
            var S = t[s];
            var C = t[a];
            var b = t[n + 1];
            var w = t[s + 1];
            var x = t[a + 1];
            if (o) {
                var R = 1;
                var L = 1;
                var T = (I + S + C) / 3;
                var D = (b + w + x) / 3;
                var k = I - T;
                var G = b - D;
                var M = Math.sqrt(k * k + G * G);
                I = T + k / M * (M + R);
                b = D + G / M * (M + L);
                k = S - T;
                G = w - D;
                M = Math.sqrt(k * k + G * G);
                S = T + k / M * (M + R);
                w = D + G / M * (M + L);
                k = C - T;
                G = x - D;
                M = Math.sqrt(k * k + G * G);
                C = T + k / M * (M + R);
                x = D + G / M * (M + L)
            }
            this.save();
            if (r) this.transform(r.a, r.b, r.c, r.d, r.tx, r.ty);
            this.beginPath();
            this.moveTo(I, b);
            this.lineTo(S, w);
            this.lineTo(C, x);
            this.closePath();
            this.clip();
            var B = g * v + m * _ + p * y - v * _ - m * p - g * y;
            var A = 1 / B;
            var P = I * v + m * C + S * y - v * C - m * S - I * y;
            var U = g * S + I * _ + p * C - S * _ - I * p - g * C;
            var E = g * v * C + m * S * _ + I * p * y - I * v * _ - m * p * C - g * S * y;
            var N = b * v + m * x + w * y - v * x - m * w - b * y;
            var F = g * w + b * _ + p * x - w * _ - b * p - g * x;
            var O = g * v * x + m * w * _ + b * p * y - b * v * _ - m * p * x - g * w * y;
            this.transform(P * A, N * A, U * A, F * A, E * A, O * A);
            this.drawImage(h, e.uv[0] * f, e.uv[1] * d, u, c, e.uv[0] * f, e.uv[1] * d, u, c);
            this.restore()
        };
        e.flush = function() {
            return 0
        };
        e.fillWords = function(e, t, i, n, s, a) {
            n && (this.font = n);
            s && (this.fillStyle = s);
            var r = this;
            this.textBaseline = "top";
            this.textAlign = "left";
            for (var o = 0,
            l = e.length; o < l; o++) {
                var h = e[o];
                this.__fillText(h.char, h.x + t, h.y + i);
                if (a === 1) {
                    var u = h.height;
                    var c = h.style.letterSpacing * .5;
                    if (!c) c = 0;
                    this.beginPath();
                    this.strokeStyle = s;
                    this.lineWidth = 1;
                    this.moveTo(t + h.x - c + .5, i + h.y + u + .5);
                    this.lineTo(t + h.x + h.width + c + .5, i + h.y + u + .5);
                    this.stroke()
                }
            }
        };
        e.fillBorderWords = function(e, t, i, n, s, a, r) {
            n && (this.font = n);
            s && (this.fillStyle = s);
            this.textBaseline = "top";
            this.lineWidth = r;
            this.textAlign = "left";
            this.strokeStyle = a;
            for (var o = 0,
            l = e.length; o < l; o++) {
                var h = e[o];
                this.__strokeText(h.char, h.x + t, h.y + i);
                this.__fillText(h.char, h.x + t, h.y + i)
            }
        };
        e.destroy = function() {
            this.canvas.width = this.canvas.height = 0
        };
        e.clear = function() {
            this.clearRect(0, 0, this._canvas.width, this._canvas.height);
            this._repaint = false
        };
        e.drawCurves = function(e, t, i) {
            this.beginPath();
            this.strokeStyle = i[3];
            this.lineWidth = i[4];
            var n = i[2];
            e += i[0],
            t += i[1];
            this.moveTo(e + n[0], t + n[1]);
            var s = 2,
            a = n.length;
            while (s < a) {
                this.quadraticCurveTo(e + n[s++], t + n[s++], e + n[s++], t + n[s++])
            }
            this.stroke()
        };
        o.__init__ = function(t) {
            var i = laya.resource.Context.prototype;
            t = t || CanvasRenderingContext2D.prototype;
            if (t.inited) return;
            t.inited = true;
            t.__fillText = t.fillText;
            t.__fillRect = t.fillRect;
            t.__strokeText = t.strokeText;
            var e = ["drawTextures", "drawTriangle", "fillWords", "fillBorderWords", "setIsMainContext", "fillRect", "strokeText", "fillTexture", "fillText", "transformByMatrix", "setTransformByMatrix", "clipRect", "drawTexture", "drawTexture2", "drawTextureWithTransform", "flush", "clear", "destroy", "drawCanvas", "fillBorderText", "drawCurves"];
            e.forEach(function(e) {
                t[e] = i[e]
            })
        };
        o.replaceCanvasGetSet = function(e, t) {
            var i = Object.getOwnPropertyDescriptor(e, t);
            if (!i || !i.configurable) return false;
            var n = {};
            var s;
            for (s in i) {
                if (s != "set") {
                    n[s] = i[s]
                }
            }
            var a = i["set"];
            n["set"] = function(e) {
                var t = this;
                a.call(t, e);
                var i = t.getContext("2d");
                if (i && "__reset" in i) {
                    i.__reset()
                }
            };
            Object.defineProperty(e, t, n);
            return true
        };
        o.replaceGetSet = function(e, t) {
            var i = Object.getOwnPropertyDescriptor(e, t);
            if (!i || !i.configurable) return false;
            var n = {};
            var s;
            for (s in i) {
                if (s != "set") {
                    n[s] = i[s]
                }
            }
            var a = i["set"];
            var r = "___" + t + "__";
            o.newKeys.push(r);
            n["set"] = function(e) {
                var t = this;
                if (e != t[r]) {
                    t[r] = e;
                    a.call(t, e)
                }
            };
            Object.defineProperty(e, t, n);
            return true
        };
        o._default = new o;
        o.newKeys = [];
        l(o, ["replaceKeys",
        function() {
            return this.replaceKeys = ["font", "fillStyle", "textBaseline"]
        }]);
        return o
    } ();
    var W = function() {
        function a(e) {
            this._id = 0;
            this._name = null;
            this._resources = null;
            this._memorySize = 0;
            this._garbageCollectionRate = NaN;
            this._isOverflow = false;
            this.autoRelease = false;
            this.autoReleaseMaxSize = 0;
            this._id = ++a._uniqueIDCounter;
            this._name = e ? e: "Content Manager";
            a._isResourceManagersSorted = false;
            this._memorySize = 0;
            this._isOverflow = false;
            this.autoRelease = false;
            this.autoReleaseMaxSize = 1024 * 1024 * 512;
            this._garbageCollectionRate = .2;
            a._resourceManagers.push(this);
            this._resources = []
        }
        _(a, "laya.resource.ResourceManager");
        var e = a.prototype;
        b.imps(e, {
            "laya.resource.IDispose": true
        });
        e.getResourceByIndex = function(e) {
            return this._resources[e]
        };
        e.getResourcesLength = function() {
            return this._resources.length
        };
        e.addResource = function(e) {
            if (e.resourceManager) e.resourceManager.removeResource(e);
            var t = this._resources.indexOf(e);
            if (t === -1) {
                e._resourceManager = this;
                this._resources.push(e);
                this.addSize(e.memorySize);
                return true
            }
            return false
        };
        e.removeResource = function(e) {
            var t = this._resources.indexOf(e);
            if (t !== -1) {
                this._resources.splice(t, 1);
                e._resourceManager = null;
                this._memorySize -= e.memorySize;
                return true
            }
            return false
        };
        e.unload = function() {
            var e = this._resources.slice(0, this._resources.length);
            for (var t = 0; t < e.length; t++) {
                var i = e[t];
                i.destroy()
            }
            e.length = 0
        };
        e.dispose = function() {
            if (this === a._systemResourceManager) throw new Error("systemResourceManager不能被释放！");
            a._resourceManagers.splice(a._resourceManagers.indexOf(this), 1);
            a._isResourceManagersSorted = false;
            var e = this._resources.slice(0, this._resources.length);
            for (var t = 0; t < e.length; t++) {
                var i = e[t];
                i.resourceManager.removeResource(i);
                i.destroy()
            }
            e.length = 0
        };
        e.addSize = function(e) {
            if (e) {
                if (this.autoRelease && e > 0) this._memorySize + e > this.autoReleaseMaxSize && this.garbageCollection((1 - this._garbageCollectionRate) * this.autoReleaseMaxSize);
                this._memorySize += e
            }
        };
        e.garbageCollection = function(e) {
            var t = this._resources;
            t = t.slice();
            t.sort(function(e, t) {
                if (!e || !t) throw new Error("a或b不能为空！");
                if (e.released && t.released) return 0;
                else if (e.released) return 1;
                else if (t.released) return - 1;
                return e._lastUseFrameCount - t._lastUseFrameCount
            });
            var i = re.loopCount;
            for (var n = 0,
            s = t.length; n < s; n++) {
                var a = t[n];
                if (i - a._lastUseFrameCount > 1) {
                    a.releaseResource()
                } else {
                    if (this._memorySize >= e) this._isOverflow = true;
                    return
                }
                if (this._memorySize < e) {
                    this._isOverflow = false;
                    return
                }
            }
        };
        u(0, e, "id",
        function() {
            return this._id
        });
        u(0, e, "name",
        function() {
            return this._name
        },
        function(e) {
            if ((e || e !== "") && this._name !== e) {
                this._name = e;
                a._isResourceManagersSorted = false
            }
        });
        u(0, e, "memorySize",
        function() {
            return this._memorySize
        });
        u(1, a, "systemResourceManager",
        function() {
            return a._systemResourceManager
        });
        a.__init__ = function() {
            a.currentResourceManager = a.systemResourceManager
        };
        a.getLoadedResourceManagerByIndex = function(e) {
            return a._resourceManagers[e]
        };
        a.getLoadedResourceManagersCount = function() {
            return a._resourceManagers.length
        };
        a.recreateContentManagers = function(e) {
            e === void 0 && (e = false);
            var t = a.currentResourceManager;
            for (var i = 0; i < a._resourceManagers.length; i++) {
                a.currentResourceManager = a._resourceManagers[i];
                for (var n = 0; n < a.currentResourceManager._resources.length; n++) {
                    a.currentResourceManager._resources[n].releaseResource(e);
                    a.currentResourceManager._resources[n].activeResource(e)
                }
            }
            a.currentResourceManager = t
        };
        a.releaseContentManagers = function(e) {
            e === void 0 && (e = false);
            var t = a.currentResourceManager;
            for (var i = 0; i < a._resourceManagers.length; i++) {
                a.currentResourceManager = a._resourceManagers[i];
                for (var n = 0; n < a.currentResourceManager._resources.length; n++) {
                    var s = a.currentResourceManager._resources[n]; ! s.released && s.releaseResource(e)
                }
            }
            a.currentResourceManager = t
        };
        a._uniqueIDCounter = 0;
        a._isResourceManagersSorted = false;
        a._resourceManagers = [];
        l(a, ["_systemResourceManager",
        function() {
            return this._systemResourceManager = new a("System Resource Manager")
        },
        "currentResourceManager",
        function() {
            return this.currentResourceManager = a._systemResourceManager
        }]);
        return a
    } ();
    var H = function() {
        function e() {}
        _(e, "laya.system.System");
        e.changeDefinition = function(e, t) {
            b[e] = t;
            var i = e + "=classObj";
            b._runScript(i)
        };
        e.__init__ = function() {
            if (O.isConchApp) {
                conch.disableConchResManager();
                conch.disableConchAutoRestoreLostedDevice()
            }
        };
        return e
    } ();
    P;
    var Y = function() {
        function i() {}
        _(i, "laya.utils.Browser");
        u(1, i, "pixelRatio",
        function() {
            i.__init__();
            if (i.userAgent.indexOf("Mozilla/6.0(Linux; Android 6.0; HUAWEI NXT-AL10 Build/HUAWEINXT-AL10)") > -1) return 2;
            return D.getPixelRatio()
        });
        u(1, i, "height",
        function() {
            i.__init__();
            return (b.stage && b.stage.canvasRotation ? i.clientWidth: i.clientHeight) * i.pixelRatio
        });
        u(1, i, "clientWidth",
        function() {
            i.__init__();
            return i.window.innerWidth || i.document.body.clientWidth
        });
        u(1, i, "window",
        function() {
            i.__init__();
            return i._window
        });
        u(1, i, "clientHeight",
        function() {
            i.__init__();
            return i.window.innerHeight || i.document.body.clientHeight || i.document.documentElement.clientHeight
        });
        u(1, i, "width",
        function() {
            i.__init__();
            return (b.stage && b.stage.canvasRotation ? i.clientHeight: i.clientWidth) * i.pixelRatio
        });
        u(1, i, "container",
        function() {
            i.__init__();
            if (!i._container) {
                i._container = i.createElement("div");
                i._container.id = "layaContainer";
                i.document.body.appendChild(i._container)
            }
            return i._container
        },
        function(e) {
            i._container = e
        });
        u(1, i, "document",
        function() {
            i.__init__();
            return i._document
        });
        i.__init__ = function() {
            P;
            if (i._window) return;
            i._window = D.getWindow();
            i._document = i.window.document;
            i._window.addEventListener("message",
            function(e) {
                laya.utils.Browser._onMessage(e)
            },
            false);
            i.document.__createElement = i.document.createElement;
            r.requestAnimationFrame = r.requestAnimationFrame || r.webkitRequestAnimationFrame || r.mozRequestAnimationFrame || r.oRequestAnimationFrame || r.msRequestAnimationFrame ||
            function(e) {
                return r.setTimeout(e, 1e3 / 60)
            };
            var e = r.document.body.style;
            e["-webkit-user-select"] = "none";
            e["-webkit-tap-highlight-color"] = "rgba(200,200,200,0)";
            i.userAgent = i.window.navigator.userAgent;
            i.u = i.userAgent;
            i.onIOS = !!i.u.match(/\(i[^;]+;(U;)? CPU.+Mac OS X/);
            i.onMobile = i.u.indexOf("Mobile") > -1;
            i.onIPhone = i.u.indexOf("iPhone") > -1;
            i.onMac = i.u.indexOf("Mac OS X") > -1;
            i.onIPad = i.u.indexOf("iPad") > -1;
            i.onAndroid = i.u.indexOf("Android") > -1 || i.u.indexOf("Adr") > -1;
            i.onWP = i.u.indexOf("Windows Phone") > -1;
            i.onQQBrowser = i.u.indexOf("QQBrowser") > -1;
            i.onMQQBrowser = i.u.indexOf("MQQBrowser") > -1 || i.u.indexOf("Mobile") > -1 && i.u.indexOf("QQ") > -1;
            i.onIE = !!i.window.ActiveXObject || "ActiveXObject" in i.window;
            i.onWeiXin = i.u.indexOf("MicroMessenger") > -1;
            i.onPC = !i.onMobile;
            i.onSafari = i.u.indexOf("Safari") > -1;
            i.onFirefox = i.u.indexOf("Firefox") > -1;
            i.onEdge = i.u.indexOf("Edge") > -1;
            i.onMiniGame = i.u.indexOf("MiniGame") > -1;
            i.onTTMiniGame = i.u.indexOf("TTGame") > -1;
            i.onBDMiniGame = i.u.indexOf("SwanGame") > -1;
            if (i.u.indexOf("OPPO") > -1 && i.u.indexOf("MiniGame") > -1) {
                i.onQGMiniGame = true;
                i.onMiniGame = false
            }
            i.onKGMiniGame = i.u.indexOf("QuickGame") > -1;
            i.onLimixiu = i.u.indexOf("limixiu") > -1;
            i.onIPhoneX = /iPhone/gi.test(i.window.navigator.userAgent) && (Math.min(i.clientHeight, i.clientWidth) == 375 && Math.max(i.clientHeight, i.clientWidth) == 812);
            i.httpProtocol = i.window.location.protocol == "http:";
            if (i.onMiniGame && i.window.focus == null) {
                console.error("请先初始化小游戏适配库，详细教程https://ldc.layabox.com/doc/?nav=zh-ts-5-0-0")
            }
            i.webAudioEnabled = i.window["AudioContext"] || i.window["webkitAudioContext"] || i.window["mozAudioContext"] ? true: false;
            i.soundType = i.webAudioEnabled ? "WEBAUDIOSOUND": "AUDIOSOUND";
            ve = i.webAudioEnabled ? ye: _e;
            if (i.webAudioEnabled) ye.initWebAudio();
            _e._initMusicAudio();
            i.enableTouch = "ontouchstart" in r || r.DocumentTouch && t instanceof DocumentTouch;
            r.focus();
            P._soundClass = ve;
            P._musicClass = _e;
            O._mainCanvas = O._mainCanvas || Ne.create("2D");
            if (i.canvas) return;
            i.canvas = Ne.create("2D");
            i.context = i.canvas.getContext("2d")
        };
        i._onMessage = function(e) {
            if (!e.data) return;
            if (e.data.name == "size") {
                i.window.innerWidth = e.data.width;
                i.window.innerHeight = e.data.height;
                i.window.__innerHeight = e.data.clientHeight;
                if (!i.document.createEvent) {
                    console.warn("no document.createEvent");
                    return
                }
                var t = i.document.createEvent("HTMLEvents");
                t.initEvent("resize", false, false);
                i.window.dispatchEvent(t);
                return
            }
        };
        i.createElement = function(e) {
            i.__init__();
            return i.document.__createElement(e)
        };
        i.getElementById = function(e) {
            i.__init__();
            return i.document.getElementById(e)
        };
        i.removeElement = function(e) {
            if (e && e.parentNode) e.parentNode.removeChild(e)
        };
        i.now = function() {
            return D.now()
        };
        i._window = null;
        i._document = null;
        i._container = null;
        i.userAgent = null;
        i.u = null;
        i.onIOS = false;
        i.onMac = false;
        i.onMobile = false;
        i.onIPhone = false;
        i.onIPad = false;
        i.onAndroid = false;
        i.onWP = false;
        i.onQQBrowser = false;
        i.onMQQBrowser = false;
        i.onSafari = false;
        i.onFirefox = false;
        i.onEdge = false;
        i.onIE = false;
        i.onWeiXin = false;
        i.onMiniGame = false;
        i.onTTMiniGame = false;
        i.onBDMiniGame = false;
        i.onKGMiniGame = false;
        i.onQGMiniGame = false;
        i.onLimixiu = false;
        i.onPC = false;
        i.httpProtocol = false;
        i.webAudioEnabled = false;
        i.soundType = null;
        i.enableTouch = false;
        i.canvas = null;
        i.context = null;
        i.onIPhoneX = false;
        i.__init$ = function() {
            _e;
            ye
        };
        return i
    } ();
    var j = function() {
        function t(e) {
            this._xd_ = true;
            this._allocated_ = 8;
            this._pos_ = 0;
            this._length = 0;
            if (e) {
                this._u8d_ = new Uint8Array(e);
                this._d_ = new DataView(this._u8d_.buffer);
                this._length = this._d_.byteLength
            } else {
                this.___resizeBuffer(this._allocated_)
            }
        }
        _(t, "laya.utils.Byte");
        var e = t.prototype;
        e.___resizeBuffer = function(t) {
            try {
                var e = new Uint8Array(t);
                if (this._u8d_ != null) {
                    if (this._u8d_.length <= t) e.set(this._u8d_);
                    else e.set(this._u8d_.subarray(0, t))
                }
                this._u8d_ = e;
                this._d_ = new DataView(e.buffer)
            } catch(e) {
                throw "___resizeBuffer err:" + t
            }
        };
        e.getString = function() {
            return this.rUTF(this.getUint16())
        };
        e.getFloat32Array = function(e, t) {
            var i = e + t;
            i = i > this._length ? this._length: i;
            var n = new Float32Array(this._d_.buffer.slice(e, i));
            this._pos_ = i;
            return n
        };
        e.getUint8Array = function(e, t) {
            var i = e + t;
            i = i > this._length ? this._length: i;
            var n = new Uint8Array(this._d_.buffer.slice(e, i));
            this._pos_ = i;
            return n
        };
        e.getInt16Array = function(e, t) {
            var i = e + t;
            i = i > this._length ? this._length: i;
            var n = new Int16Array(this._d_.buffer.slice(e, i));
            this._pos_ = i;
            return n
        };
        e.getFloat32 = function() {
            if (this._pos_ + 4 > this._length) throw "getFloat32 error - Out of bounds";
            var e = this._d_.getFloat32(this._pos_, this._xd_);
            this._pos_ += 4;
            return e
        };
        e.getFloat64 = function() {
            if (this._pos_ + 8 > this._length) throw "getFloat64 error - Out of bounds";
            var e = this._d_.getFloat64(this._pos_, this._xd_);
            this._pos_ += 8;
            return e
        };
        e.writeFloat32 = function(e) {
            this.ensureWrite(this._pos_ + 4);
            this._d_.setFloat32(this._pos_, e, this._xd_);
            this._pos_ += 4
        };
        e.writeFloat64 = function(e) {
            this.ensureWrite(this._pos_ + 8);
            this._d_.setFloat64(this._pos_, e, this._xd_);
            this._pos_ += 8
        };
        e.getInt32 = function() {
            if (this._pos_ + 4 > this._length) throw "getInt32 error - Out of bounds";
            var e = this._d_.getInt32(this._pos_, this._xd_);
            this._pos_ += 4;
            return e
        };
        e.getUint32 = function() {
            if (this._pos_ + 4 > this._length) throw "getUint32 error - Out of bounds";
            var e = this._d_.getUint32(this._pos_, this._xd_);
            this._pos_ += 4;
            return e
        };
        e.writeInt32 = function(e) {
            this.ensureWrite(this._pos_ + 4);
            this._d_.setInt32(this._pos_, e, this._xd_);
            this._pos_ += 4
        };
        e.writeUint32 = function(e) {
            this.ensureWrite(this._pos_ + 4);
            this._d_.setUint32(this._pos_, e, this._xd_);
            this._pos_ += 4
        };
        e.getInt16 = function() {
            if (this._pos_ + 2 > this._length) throw "getInt16 error - Out of bounds";
            var e = this._d_.getInt16(this._pos_, this._xd_);
            this._pos_ += 2;
            return e
        };
        e.getUint16 = function() {
            if (this._pos_ + 2 > this._length) throw "getUint16 error - Out of bounds";
            var e = this._d_.getUint16(this._pos_, this._xd_);
            this._pos_ += 2;
            return e
        };
        e.writeUint16 = function(e) {
            this.ensureWrite(this._pos_ + 2);
            this._d_.setUint16(this._pos_, e, this._xd_);
            this._pos_ += 2
        };
        e.writeInt16 = function(e) {
            this.ensureWrite(this._pos_ + 2);
            this._d_.setInt16(this._pos_, e, this._xd_);
            this._pos_ += 2
        };
        e.getUint8 = function() {
            if (this._pos_ + 1 > this._length) throw "getUint8 error - Out of bounds";
            return this._d_.getUint8(this._pos_++)
        };
        e.writeUint8 = function(e) {
            this.ensureWrite(this._pos_ + 1);
            this._d_.setUint8(this._pos_, e);
            this._pos_++
        };
        e._getUInt8 = function(e) {
            return this._d_.getUint8(e)
        };
        e._getUint16 = function(e) {
            return this._d_.getUint16(e, this._xd_)
        };
        e._getMatrix = function() {
            var e = new M(this.getFloat32(), this.getFloat32(), this.getFloat32(), this.getFloat32(), this.getFloat32(), this.getFloat32());
            return e
        };
        e.rUTF = function(e) {
            var t = "",
            i = this._pos_ + e,
            n = 0,
            s = 0,
            a = 0,
            r = String.fromCharCode;
            var o = this._u8d_,
            l = 0;
            while (this._pos_ < i) {
                n = o[this._pos_++];
                if (n < 128) {
                    if (n != 0) {
                        t += r(n)
                    }
                } else if (n < 224) {
                    t += r((n & 63) << 6 | o[this._pos_++] & 127)
                } else if (n < 240) {
                    s = o[this._pos_++];
                    t += r((n & 31) << 12 | (s & 127) << 6 | o[this._pos_++] & 127)
                } else {
                    s = o[this._pos_++];
                    a = o[this._pos_++];
                    t += r((n & 15) << 18 | (s & 127) << 12 | a << 6 & 127 | o[this._pos_++] & 127)
                }
                l++
            }
            return t
        };
        e.getCustomString = function(e) {
            var t = "",
            i = 0,
            n = 0,
            s = 0,
            a = String.fromCharCode;
            var r = this._u8d_,
            o = 0;
            while (e > 0) {
                n = r[this._pos_];
                if (n < 128) {
                    t += a(n);
                    this._pos_++;
                    e--
                } else {
                    i = n - 128;
                    this._pos_++;
                    e -= i;
                    while (i > 0) {
                        n = r[this._pos_++];
                        s = r[this._pos_++];
                        t += a(s << 8 | n);
                        i--
                    }
                }
            }
            return t
        };
        e.clear = function() {
            this._pos_ = 0;
            this.length = 0
        };
        e.__getBuffer = function() {
            return this._d_.buffer
        };
        e.writeUTFBytes = function(e) {
            e = e + "";
            for (var t = 0,
            i = e.length; t < i; t++) {
                var n = e.charCodeAt(t);
                if (n <= 127) {
                    this.writeByte(n)
                } else if (n <= 2047) {
                    this.ensureWrite(this._pos_ + 2);
                    this._u8d_.set([192 | n >> 6, 128 | n & 63], this._pos_);
                    this._pos_ += 2
                } else if (n <= 65535) {
                    this.ensureWrite(this._pos_ + 3);
                    this._u8d_.set([224 | n >> 12, 128 | n >> 6 & 63, 128 | n & 63], this._pos_);
                    this._pos_ += 3
                } else {
                    this.ensureWrite(this._pos_ + 4);
                    this._u8d_.set([240 | n >> 18, 128 | n >> 12 & 63, 128 | n >> 6 & 63, 128 | n & 63], this._pos_);
                    this._pos_ += 4
                }
            }
        };
        e.writeUTFString = function(e) {
            var t = this.pos;
            this.writeUint16(1);
            this.writeUTFBytes(e);
            var i = this.pos - t - 2;
            if (i >= 65536) {
                throw "writeUTFString byte len more than 65536"
            }
            this._d_.setUint16(t, i, this._xd_)
        };
        e.readUTFString = function() {
            return this.readUTFBytes(this.getUint16())
        };
        e.getUTFString = function() {
            return this.readUTFString()
        };
        e.readUTFBytes = function(e) {
            e === void 0 && (e = -1);
            if (e == 0) return "";
            var t = this.bytesAvailable;
            if (e > t) throw "readUTFBytes error - Out of bounds";
            e = e > 0 ? e: t;
            return this.rUTF(e)
        };
        e.getUTFBytes = function(e) {
            e === void 0 && (e = -1);
            return this.readUTFBytes(e)
        };
        e.writeByte = function(e) {
            this.ensureWrite(this._pos_ + 1);
            this._d_.setInt8(this._pos_, e);
            this._pos_ += 1
        };
        e.readByte = function() {
            if (this._pos_ + 1 > this._length) throw "readByte error - Out of bounds";
            return this._d_.getInt8(this._pos_++)
        };
        e.getByte = function() {
            return this.readByte()
        };
        e.ensureWrite = function(e) {
            if (this._length < e) this._length = e;
            if (this._allocated_ < e) this.length = e
        };
        e.writeArrayBuffer = function(e, t, i) {
            t === void 0 && (t = 0);
            i === void 0 && (i = 0);
            if (t < 0 || i < 0) throw "writeArrayBuffer error - Out of bounds";
            if (i == 0) i = e.byteLength - t;
            this.ensureWrite(this._pos_ + i);
            var n = new Uint8Array(e);
            this._u8d_.set(n.subarray(t, t + i), this._pos_);
            this._pos_ += i
        };
        e.readArrayBuffer = function(e) {
            var t;
            t = this._u8d_.buffer.slice(this._pos_, this._pos_ + e);
            this._pos_ = this._pos_ + e;
            return t
        };
        u(0, e, "buffer",
        function() {
            var e = this._d_.buffer;
            if (e.byteLength == this.length) return e;
            return e.slice(0, this.length)
        });
        u(0, e, "endian",
        function() {
            return this._xd_ ? "littleEndian": "bigEndian"
        },
        function(e) {
            this._xd_ = e == "littleEndian"
        });
        u(0, e, "length",
        function() {
            return this._length
        },
        function(e) {
            if (this._allocated_ < e) this.___resizeBuffer(this._allocated_ = Math.floor(Math.max(e, this._allocated_ * 2)));
            else if (this._allocated_ > e) this.___resizeBuffer(this._allocated_ = e);
            this._length = e
        });
        u(0, e, "pos",
        function() {
            return this._pos_
        },
        function(e) {
            this._pos_ = e
        });
        u(0, e, "bytesAvailable",
        function() {
            return this._length - this._pos_
        });
        t.getSystemEndian = function() {
            if (!t._sysEndian) {
                var e = new ArrayBuffer(2);
                new DataView(e).setInt16(0, 256, true);
                t._sysEndian = new Int16Array(e)[0] === 256 ? "littleEndian": "bigEndian"
            }
            return t._sysEndian
        };
        t.BIG_ENDIAN = "bigEndian";
        t.LITTLE_ENDIAN = "littleEndian";
        t._sysEndian = null;
        return t
    } ();
    var X = function() {
        function s() {}
        _(s, "laya.utils.CacheManager");
        s.regCacheByFunction = function(e, t) {
            s.unRegCacheByFunction(e, t);
            var i;
            i = {
                tryDispose: e,
                getCacheList: t
            };
            s._cacheList.push(i)
        };
        s.unRegCacheByFunction = function(e, t) {
            var i = 0,
            n = 0;
            n = s._cacheList.length;
            for (i = 0; i < n; i++) {
                if (s._cacheList[i].tryDispose == e && s._cacheList[i].getCacheList == t) {
                    s._cacheList.splice(i, 1);
                    return
                }
            }
        };
        s.forceDispose = function() {
            var e = 0,
            t = s._cacheList.length;
            for (e = 0; e < t; e++) {
                s._cacheList[e].tryDispose(true)
            }
        };
        s.beginCheck = function(e) {
            e === void 0 && (e = 15e3);
            b.timer.loop(e, null, s._checkLoop)
        };
        s.stopCheck = function() {
            b.timer.clear(null, s._checkLoop)
        };
        s._checkLoop = function() {
            var e = s._cacheList;
            if (e.length < 1) return;
            var t = Y.now();
            var i = 0;
            var n = 0;
            n = i = e.length;
            while (i > 0) {
                s._index++;
                s._index = s._index % n;
                e[s._index].tryDispose(false);
                if (Y.now() - t > s.loopTimeLimit) break;
                i--
            }
        };
        s.loopTimeLimit = 2;
        s._cacheList = [];
        s._index = 0;
        return s
    } ();
    var J = function() {
        function d() {}
        _(d, "laya.utils.ClassUtils");
        d.regClass = function(e, t) {
            d._classMap[e] = t
        };
        d.getRegClass = function(e) {
            return d._classMap[e]
        };
        d.getInstance = function(e) {
            var t = d.getClass(e);
            if (t) return new t;
            else console.warn("[error] Undefined class:", e);
            return null
        };
        d.createByJson = function(e, t, i, n, s) {
            if (typeof e == "string") e = JSON.parse(e);
            var a = e.props;
            if (!t) {
                t = s ? s.runWith(e) : d.getInstance(a.runtime || e.type);
                if (!t) return null
            }
            var r = e.child;
            if (r) {
                for (var o = 0,
                l = r.length; o < l; o++) {
                    var h = r[o];
                    if ((h.props.name === "render" || h.props.renderType === "render") && t["_$set_itemRender"]) t.itemRender = h;
                    else {
                        if (h.type == "Graphic") {
                            d.addGraphicsToSprite(h, t)
                        } else if (d.isDrawType(h.type)) {
                            d.addGraphicToSprite(h, t, true)
                        } else {
                            var u = d.createByJson(h, null, i, n, s);
                            if (h.type == "Script") {
                                if (u.hasOwnProperty("owner")) {
                                    u["owner"] = t
                                } else if (u.hasOwnProperty("target")) {
                                    u["target"] = t
                                }
                            } else if (h.props.renderType == "mask") {
                                t.mask = u
                            } else {
                                t.addChild(u)
                            }
                        }
                    }
                }
            }
            if (a) {
                for (var c in a) {
                    var f = a[c];
                    if (c === "var" && i) {
                        i[f] = t
                    } else if (f instanceof Array && typeof t[c] == "function") {
                        t[c].apply(t, f)
                    } else {
                        t[c] = f
                    }
                }
            }
            if (n && e.customProps) {
                n.runWith([t, e])
            }
            if (t["created"]) t.created();
            return t
        };
        d.addGraphicsToSprite = function(e, t) {
            var i;
            i = e.child;
            if (!i || i.length < 1) return;
            var n;
            n = d._getGraphicsFromSprite(e, t);
            var s = 0;
            var a = 0;
            if (e.props) {
                s = d._getObjVar(e.props, "x", 0);
                a = d._getObjVar(e.props, "y", 0)
            }
            if (s != 0 && a != 0) {
                n.translate(s, a)
            }
            var r = 0,
            o = 0;
            o = i.length;
            for (r = 0; r < o; r++) {
                d._addGraphicToGraphics(i[r], n)
            }
            if (s != 0 && a != 0) {
                n.translate( - s, -a)
            }
        };
        d.addGraphicToSprite = function(e, t, i) {
            i === void 0 && (i = false);
            var n;
            n = i ? d._getGraphicsFromSprite(e, t) : t.graphics;
            d._addGraphicToGraphics(e, n)
        };
        d._getGraphicsFromSprite = function(e, t) {
            var i;
            if (!e || !e.props) return t.graphics;
            var n;
            n = e.props.renderType;
            switch (n) {
            case "hit":
            case "unHit":
                ;
                var s;
                if (!t.hitArea) {
                    t.hitArea = new ee
                }
                s = t.hitArea;
                if (!s[n]) {
                    s[n] = new g
                }
                i = s[n];
                break;
            default:
            }
            if (!i) i = t.graphics;
            return i
        };
        d._getTransformData = function(e) {
            var t;
            if (e.hasOwnProperty("pivotX") || e.hasOwnProperty("pivotY")) {
                t = t || new M;
                t.translate( - d._getObjVar(e, "pivotX", 0), -d._getObjVar(e, "pivotY", 0))
            }
            var i = d._getObjVar(e, "scaleX", 1),
            n = d._getObjVar(e, "scaleY", 1);
            var s = d._getObjVar(e, "rotation", 0);
            var a = d._getObjVar(e, "skewX", 0);
            var r = d._getObjVar(e, "skewY", 0);
            if (i != 1 || n != 1 || s != 0) {
                t = t || new M;
                t.scale(i, n);
                t.rotate(s * .0174532922222222)
            }
            return t
        };
        d._addGraphicToGraphics = function(e, t) {
            var i;
            i = e.props;
            if (!i) return;
            var n;
            n = d.DrawTypeDic[e.type];
            if (!n) return;
            var s;
            s = t;
            var a;
            var r = d._getParams(i, n[1], n[2], n[3]);
            a = d._tM;
            if (a || d._alpha != 1) {
                s.save();
                if (a) s.transform(a);
                if (d._alpha != 1) s.alpha(d._alpha)
            }
            s[n[0]].apply(s, r);
            if (a || d._alpha != 1) {
                s.restore()
            }
        };
        d._adptLineData = function(e) {
            e[2] = parseFloat(e[0]) + parseFloat(e[2]);
            e[3] = parseFloat(e[1]) + parseFloat(e[3]);
            return e
        };
        d._adptTextureData = function(e) {
            e[0] = Se.getRes(e[0]);
            return e
        };
        d._adptLinesData = function(e) {
            e[2] = d._getPointListByStr(e[2]);
            return e
        };
        d.isDrawType = function(e) {
            if (e == "Image") return false;
            return d.DrawTypeDic.hasOwnProperty(e)
        };
        d._getParams = function(e, t, i, n) {
            i === void 0 && (i = 0);
            var s;
            s = d._temParam;
            s.length = t.length;
            var a = 0,
            r = 0;
            r = t.length;
            for (a = 0; a < r; a++) {
                s[a] = d._getObjVar(e, t[a][0], t[a][1])
            }
            d._alpha = d._getObjVar(e, "alpha", 1);
            var o;
            o = d._getTransformData(e);
            if (o) {
                if (!i) i = 0;
                o.translate(s[i], s[i + 1]);
                s[i] = s[i + 1] = 0;
                d._tM = o
            } else {
                d._tM = null
            }
            if (n && d[n]) {
                s = d[n](s)
            }
            return s
        };
        d._getPointListByStr = function(e) {
            var t;
            t = e.split(",");
            var i = 0,
            n = 0;
            n = t.length;
            for (i = 0; i < n; i++) {
                t[i] = parseFloat(t[i])
            }
            return t
        };
        d._getObjVar = function(e, t, i) {
            if (e.hasOwnProperty(t)) {
                return e[t]
            }
            return i
        };
        d._temParam = [];
        d._classMap = {
            Sprite: "laya.display.Sprite",
            Text: "laya.display.Text",
            Animation: "laya.display.Animation",
            Skeleton: "laya.ani.bone.Skeleton",
            Particle2D: "laya.particle.Particle2D",
            div: "laya.html.dom.HTMLDivElement",
            p: "laya.html.dom.HTMLElement",
            img: "laya.html.dom.HTMLImageElement",
            span: "laya.html.dom.HTMLElement",
            br: "laya.html.dom.HTMLBrElement",
            style: "laya.html.dom.HTMLStyleElement",
            font: "laya.html.dom.HTMLElement",
            a: "laya.html.dom.HTMLElement",
            "#text": "laya.html.dom.HTMLElement"
        };
        d.getClass = function(e) {
            var t = d._classMap[e] || e;
            if (typeof t == "string") return b["__classmap"][t];
            return t
        };
        d._tM = null;
        d._alpha = NaN;
        l(d, ["DrawTypeDic",
        function() {
            return this.DrawTypeDic = {
                Rect: ["drawRect", [["x", 0], ["y", 0], ["width", 0], ["height", 0], ["fillColor", null], ["lineColor", null], ["lineWidth", 1]]],
                Circle: ["drawCircle", [["x", 0], ["y", 0], ["radius", 0], ["fillColor", null], ["lineColor", null], ["lineWidth", 1]]],
                Pie: ["drawPie", [["x", 0], ["y", 0], ["radius", 0], ["startAngle", 0], ["endAngle", 0], ["fillColor", null], ["lineColor", null], ["lineWidth", 1]]],
                Image: ["drawTexture", [["x", 0], ["y", 0], ["width", 0], ["height", 0]]],
                Texture: ["drawTexture", [["skin", null], ["x", 0], ["y", 0], ["width", 0], ["height", 0]], 1, "_adptTextureData"],
                FillTexture: ["fillTexture", [["skin", null], ["x", 0], ["y", 0], ["width", 0], ["height", 0], ["repeat", null]], 1, "_adptTextureData"],
                FillText: ["fillText", [["text", ""], ["x", 0], ["y", 0], ["font", null], ["color", null], ["textAlign", null]], 1],
                Line: ["drawLine", [["x", 0], ["y", 0], ["toX", 0], ["toY", 0], ["lineColor", null], ["lineWidth", 0]], 0, "_adptLineData"],
                Lines: ["drawLines", [["x", 0], ["y", 0], ["points", ""], ["lineColor", null], ["lineWidth", 0]], 0, "_adptLinesData"],
                Curves: ["drawCurves", [["x", 0], ["y", 0], ["points", ""], ["lineColor", null], ["lineWidth", 0]], 0, "_adptLinesData"],
                Poly: ["drawPoly", [["x", 0], ["y", 0], ["points", ""], ["fillColor", null], ["lineColor", null], ["lineWidth", 1]], 0, "_adptLinesData"]
            }
        }]);
        return d
    } ();
    var $ = function() {
        function r(e) {
            this._color = [];
            if (typeof e == "string") {
                this.strColor = e;
                if (e === null) e = "#000000";
                e.charAt(0) == "#" && (e = e.substr(1));
                var t = e.length;
                if (t == 3 || t == 4) {
                    var i = "";
                    for (var n = 0; n < t; n++) {
                        i += e[n] + e[n]
                    }
                    e = i
                }
                var s = this.numColor = parseInt(e, 16);
                var a = e.length == 8;
                if (a) {
                    this._color = [parseInt(e.substr(0, 2), 16) / 255, ((16711680 & s) >> 16) / 255, ((65280 & s) >> 8) / 255, (255 & s) / 255];
                    return
                }
            } else {
                s = this.numColor = e;
                this.strColor = ue.toHexColor(s)
            }
            this._color = [((16711680 & s) >> 16) / 255, ((65280 & s) >> 8) / 255, (255 & s) / 255, 1];
            this._color.__id = ++r._COLODID
        }
        _(r, "laya.utils.Color");
        r._initDefault = function() {
            r._DEFAULT = {};
            for (var e in r._COLOR_MAP) r._SAVE[e] = r._DEFAULT[e] = new r(r._COLOR_MAP[e]);
            return r._DEFAULT
        };
        r._initSaveMap = function() {
            r._SAVE_SIZE = 0;
            r._SAVE = {};
            for (var e in r._DEFAULT) r._SAVE[e] = r._DEFAULT[e]
        };
        r.create = function(e) {
            var t = r._SAVE[e + ""];
            if (t != null) return t;
            r._SAVE_SIZE < 1e3 || r._initSaveMap();
            return r._SAVE[e + ""] = new r(e)
        };
        r._SAVE = {};
        r._SAVE_SIZE = 0;
        r._COLOR_MAP = {
            white: "#FFFFFF",
            red: "#FF0000",
            green: "#00FF00",
            blue: "#0000FF",
            black: "#000000",
            yellow: "#FFFF00",
            gray: "#AAAAAA"
        };
        r._DEFAULT = r._initDefault();
        r._COLODID = 1;
        return r
    } ();
    var K = function() {
        function e() {
            this._values = [];
            this._keys = []
        }
        _(e, "laya.utils.Dictionary");
        var t = e.prototype;
        t.set = function(e, t) {
            var i = this.indexOf(e);
            if (i >= 0) {
                this._values[i] = t;
                return
            }
            this._keys.push(e);
            this._values.push(t)
        };
        t.indexOf = function(e) {
            var t = this._keys.indexOf(e);
            if (t >= 0) return t;
            e = typeof e == "string" ? Number(e) : typeof e == "number" ? e.toString() : e;
            return this._keys.indexOf(e)
        };
        t.get = function(e) {
            var t = this.indexOf(e);
            return t < 0 ? null: this._values[t]
        };
        t.remove = function(e) {
            var t = this.indexOf(e);
            if (t >= 0) {
                this._keys.splice(t, 1);
                this._values.splice(t, 1);
                return true
            }
            return false
        };
        t.clear = function() {
            this._values.length = 0;
            this._keys.length = 0
        };
        u(0, t, "values",
        function() {
            return this._values
        });
        u(0, t, "keys",
        function() {
            return this._keys
        });
        return e
    } ();
    var Q = function() {
        function e() {
            this.ratio = .92;
            this.maxOffset = 60;
            this._dragging = false;
            this._clickOnly = true
        }
        _(e, "laya.utils.Dragging");
        var t = e.prototype;
        t.start = function(e, t, i, n, s, a, r, o) {
            o === void 0 && (o = .92);
            this.clearTimer();
            this.target = e;
            this.area = t;
            this.hasInertia = i;
            this.elasticDistance = t ? n: 0;
            this.elasticBackTime = s;
            this.data = a;
            this._disableMouseEvent = r;
            this.ratio = o;
            this._parent = e.parent;
            this._clickOnly = true;
            this._dragging = true;
            this._elasticRateX = this._elasticRateY = 1;
            this._lastX = this._parent.mouseX;
            this._lastY = this._parent.mouseY;
            b.stage.on("mouseup", this, this.onStageMouseUp);
            b.stage.on("mouseout", this, this.onStageMouseUp);
            b.timer.frameLoop(1, this, this.loop)
        };
        t.clearTimer = function() {
            b.timer.clear(this, this.loop);
            b.timer.clear(this, this.tweenMove);
            if (this._tween) {
                this._tween.recover();
                this._tween = null
            }
        };
        t.stop = function() {
            if (this._dragging) {
                S.instance.disableMouseEvent = false;
                b.stage.off("mouseup", this, this.onStageMouseUp);
                b.stage.off("mouseout", this, this.onStageMouseUp);
                this._dragging = false;
                this.target && this.area && this.backToArea();
                this.clear()
            }
        };
        t.loop = function() {
            var e = this._parent.getMousePoint();
            var t = e.x;
            var i = e.y;
            var n = t - this._lastX;
            var s = i - this._lastY;
            if (this._clickOnly) {
                if (Math.abs(n * b.stage._canvasTransform.getScaleX()) > 1 || Math.abs(s * b.stage._canvasTransform.getScaleY()) > 1) {
                    this._clickOnly = false;
                    this._offsets || (this._offsets = []);
                    this._offsets.length = 0;
                    this.target.event("dragstart", this.data);
                    S.instance.disableMouseEvent = this._disableMouseEvent;
                    this.target._set$P("$_MOUSEDOWN", false)
                } else return
            } else {
                this._offsets.push(n, s)
            }
            if (n === 0 && s === 0) return;
            this._lastX = t;
            this._lastY = i;
            this.target.x += n * this._elasticRateX;
            this.target.y += s * this._elasticRateY;
            this.area && this.checkArea();
            this.target.event("dragmove", this.data)
        };
        t.checkArea = function() {
            if (this.elasticDistance <= 0) {
                this.backToArea()
            } else {
                if (this.target.x < this.area.x) {
                    var e = this.area.x - this.target.x
                } else if (this.target.x > this.area.x + this.area.width) {
                    e = this.target.x - this.area.x - this.area.width
                } else {
                    e = 0
                }
                this._elasticRateX = Math.max(0, 1 - e / this.elasticDistance);
                if (this.target.y < this.area.y) {
                    var t = this.area.y - this.target.y
                } else if (this.target.y > this.area.y + this.area.height) {
                    t = this.target.y - this.area.y - this.area.height
                } else {
                    t = 0
                }
                this._elasticRateY = Math.max(0, 1 - t / this.elasticDistance)
            }
        };
        t.backToArea = function() {
            this.target.x = Math.min(Math.max(this.target.x, this.area.x), this.area.x + this.area.width);
            this.target.y = Math.min(Math.max(this.target.y, this.area.y), this.area.y + this.area.height)
        };
        t.onStageMouseUp = function(e) {
            S.instance.disableMouseEvent = false;
            b.stage.off("mouseup", this, this.onStageMouseUp);
            b.stage.off("mouseout", this, this.onStageMouseUp);
            b.timer.clear(this, this.loop);
            if (this._clickOnly || !this.target) return;
            if (this.hasInertia) {
                if (this._offsets.length < 1) {
                    this._offsets.push(this._parent.mouseX - this._lastX, this._parent.mouseY - this._lastY)
                }
                this._offsetX = this._offsetY = 0;
                var t = this._offsets.length;
                var i = Math.min(t, 6);
                var n = this._offsets.length - i;
                for (var s = t - 1; s > n; s--) {
                    this._offsetY += this._offsets[s--];
                    this._offsetX += this._offsets[s]
                }
                this._offsetX = this._offsetX / i * 2;
                this._offsetY = this._offsetY / i * 2;
                if (Math.abs(this._offsetX) > this.maxOffset) this._offsetX = this._offsetX > 0 ? this.maxOffset: -this.maxOffset;
                if (Math.abs(this._offsetY) > this.maxOffset) this._offsetY = this._offsetY > 0 ? this.maxOffset: -this.maxOffset;
                b.timer.frameLoop(1, this, this.tweenMove)
            } else if (this.elasticDistance > 0) {
                this.checkElastic()
            } else {
                this.clear()
            }
        };
        t.checkElastic = function() {
            var e = NaN;
            var t = NaN;
            if (this.target.x < this.area.x) e = this.area.x;
            else if (this.target.x > this.area.x + this.area.width) e = this.area.x + this.area.width;
            if (this.target.y < this.area.y) t = this.area.y;
            else if (this.target.y > this.area.y + this.area.height) t = this.area.y + this.area.height;
            if (!isNaN(e) || !isNaN(t)) {
                var i = {};
                if (!isNaN(e)) i.x = e;
                if (!isNaN(t)) i.y = t;
                this._tween = he.to(this.target, i, this.elasticBackTime, Z.sineOut, v.create(this, this.clear), 0, false, false)
            } else {
                this.clear()
            }
        };
        t.tweenMove = function() {
            this._offsetX *= this.ratio * this._elasticRateX;
            this._offsetY *= this.ratio * this._elasticRateY;
            this.target.x += this._offsetX;
            this.target.y += this._offsetY;
            this.area && this.checkArea();
            this.target.event("dragmove", this.data);
            if (Math.abs(this._offsetX) < 1 && Math.abs(this._offsetY) < 1 || this._elasticRateX < .5 || this._elasticRateY < .5) {
                b.timer.clear(this, this.tweenMove);
                if (this.elasticDistance > 0) this.checkElastic();
                else this.clear()
            }
        };
        t.clear = function() {
            if (this.target) {
                this.clearTimer();
                var e = this.target;
                this.target = null;
                this._parent = null;
                e.event("dragend", this.data)
            }
        };
        return e
    } ();
    var Z = function() {
        function o() {}
        _(o, "laya.utils.Ease");
        o.linearNone = function(e, t, i, n) {
            return i * e / n + t
        };
        o.linearIn = function(e, t, i, n) {
            return i * e / n + t
        };
        o.linearInOut = function(e, t, i, n) {
            return i * e / n + t
        };
        o.linearOut = function(e, t, i, n) {
            return i * e / n + t
        };
        o.bounceIn = function(e, t, i, n) {
            return i - o.bounceOut(n - e, 0, i, n) + t
        };
        o.bounceInOut = function(e, t, i, n) {
            if (e < n * .5) return o.bounceIn(e * 2, 0, i, n) * .5 + t;
            else return o.bounceOut(e * 2 - n, 0, i, n) * .5 + i * .5 + t
        };
        o.bounceOut = function(e, t, i, n) {
            if ((e /= n) < 1 / 2.75) return i * (7.5625 * e * e) + t;
            else if (e < 2 / 2.75) return i * (7.5625 * (e -= 1.5 / 2.75) * e + .75) + t;
            else if (e < 2.5 / 2.75) return i * (7.5625 * (e -= 2.25 / 2.75) * e + .9375) + t;
            else return i * (7.5625 * (e -= 2.625 / 2.75) * e + .984375) + t
        };
        o.backIn = function(e, t, i, n, s) {
            s === void 0 && (s = 1.70158);
            return i * (e /= n) * e * ((s + 1) * e - s) + t
        };
        o.backInOut = function(e, t, i, n, s) {
            s === void 0 && (s = 1.70158);
            if ((e /= n * .5) < 1) return i * .5 * (e * e * (((s *= 1.525) + 1) * e - s)) + t;
            return i / 2 * ((e -= 2) * e * (((s *= 1.525) + 1) * e + s) + 2) + t
        };
        o.backOut = function(e, t, i, n, s) {
            s === void 0 && (s = 1.70158);
            return i * ((e = e / n - 1) * e * ((s + 1) * e + s) + 1) + t
        };
        o.elasticIn = function(e, t, i, n, s, a) {
            s === void 0 && (s = 0);
            a === void 0 && (a = 0);
            var r;
            if (e == 0) return t;
            if ((e /= n) == 1) return t + i;
            if (!a) a = n * .3;
            if (!s || i > 0 && s < i || i < 0 && s < -i) {
                s = i;
                r = a / 4
            } else r = a / o.PI2 * Math.asin(i / s);
            return - (s * Math.pow(2, 10 * (e -= 1)) * Math.sin((e * n - r) * o.PI2 / a)) + t
        };
        o.elasticInOut = function(e, t, i, n, s, a) {
            s === void 0 && (s = 0);
            a === void 0 && (a = 0);
            var r;
            if (e == 0) return t;
            if ((e /= n * .5) == 2) return t + i;
            if (!a) a = n * (.3 * 1.5);
            if (!s || i > 0 && s < i || i < 0 && s < -i) {
                s = i;
                r = a / 4
            } else r = a / o.PI2 * Math.asin(i / s);
            if (e < 1) return - .5 * (s * Math.pow(2, 10 * (e -= 1)) * Math.sin((e * n - r) * o.PI2 / a)) + t;
            return s * Math.pow(2, -10 * (e -= 1)) * Math.sin((e * n - r) * o.PI2 / a) * .5 + i + t
        };
        o.elasticOut = function(e, t, i, n, s, a) {
            s === void 0 && (s = 0);
            a === void 0 && (a = 0);
            var r;
            if (e == 0) return t;
            if ((e /= n) == 1) return t + i;
            if (!a) a = n * .3;
            if (!s || i > 0 && s < i || i < 0 && s < -i) {
                s = i;
                r = a / 4
            } else r = a / o.PI2 * Math.asin(i / s);
            return s * Math.pow(2, -10 * e) * Math.sin((e * n - r) * o.PI2 / a) + i + t
        };
        o.strongIn = function(e, t, i, n) {
            return i * (e /= n) * e * e * e * e + t
        };
        o.strongInOut = function(e, t, i, n) {
            if ((e /= n * .5) < 1) return i * .5 * e * e * e * e * e + t;
            return i * .5 * ((e -= 2) * e * e * e * e + 2) + t
        };
        o.strongOut = function(e, t, i, n) {
            return i * ((e = e / n - 1) * e * e * e * e + 1) + t
        };
        o.sineInOut = function(e, t, i, n) {
            return - i * .5 * (Math.cos(Math.PI * e / n) - 1) + t
        };
        o.sineIn = function(e, t, i, n) {
            return - i * Math.cos(e / n * o.HALF_PI) + i + t
        };
        o.sineOut = function(e, t, i, n) {
            return i * Math.sin(e / n * o.HALF_PI) + t
        };
        o.quintIn = function(e, t, i, n) {
            return i * (e /= n) * e * e * e * e + t
        };
        o.quintInOut = function(e, t, i, n) {
            if ((e /= n * .5) < 1) return i * .5 * e * e * e * e * e + t;
            return i * .5 * ((e -= 2) * e * e * e * e + 2) + t
        };
        o.quintOut = function(e, t, i, n) {
            return i * ((e = e / n - 1) * e * e * e * e + 1) + t
        };
        o.quartIn = function(e, t, i, n) {
            return i * (e /= n) * e * e * e + t
        };
        o.quartInOut = function(e, t, i, n) {
            if ((e /= n * .5) < 1) return i * .5 * e * e * e * e + t;
            return - i * .5 * ((e -= 2) * e * e * e - 2) + t
        };
        o.quartOut = function(e, t, i, n) {
            return - i * ((e = e / n - 1) * e * e * e - 1) + t
        };
        o.cubicIn = function(e, t, i, n) {
            return i * (e /= n) * e * e + t
        };
        o.cubicInOut = function(e, t, i, n) {
            if ((e /= n * .5) < 1) return i * .5 * e * e * e + t;
            return i * .5 * ((e -= 2) * e * e + 2) + t
        };
        o.cubicOut = function(e, t, i, n) {
            return i * ((e = e / n - 1) * e * e + 1) + t
        };
        o.quadIn = function(e, t, i, n) {
            return i * (e /= n) * e + t
        };
        o.quadInOut = function(e, t, i, n) {
            if ((e /= n * .5) < 1) return i * .5 * e * e + t;
            return - i * .5 * (--e * (e - 2) - 1) + t
        };
        o.quadOut = function(e, t, i, n) {
            return - i * (e /= n) * (e - 2) + t
        };
        o.expoIn = function(e, t, i, n) {
            return e == 0 ? t: i * Math.pow(2, 10 * (e / n - 1)) + t - i * .001
        };
        o.expoInOut = function(e, t, i, n) {
            if (e == 0) return t;
            if (e == n) return t + i;
            if ((e /= n * .5) < 1) return i * .5 * Math.pow(2, 10 * (e - 1)) + t;
            return i * .5 * ( - Math.pow(2, -10 * --e) + 2) + t
        };
        o.expoOut = function(e, t, i, n) {
            return e == n ? t + i: i * ( - Math.pow(2, -10 * e / n) + 1) + t
        };
        o.circIn = function(e, t, i, n) {
            return - i * (Math.sqrt(1 - (e /= n) * e) - 1) + t
        };
        o.circInOut = function(e, t, i, n) {
            if ((e /= n * .5) < 1) return - i * .5 * (Math.sqrt(1 - e * e) - 1) + t;
            return i * .5 * (Math.sqrt(1 - (e -= 2) * e) + 1) + t
        };
        o.circOut = function(e, t, i, n) {
            return i * Math.sqrt(1 - (e = e / n - 1) * e) + t
        };
        o.HALF_PI = Math.PI * .5;
        o.PI2 = Math.PI * 2;
        return o
    } ();
    var ee = function() {
        function f() {
            this._hit = null;
            this._unHit = null
        }
        _(f, "laya.utils.HitArea");
        var e = f.prototype;
        e.isHit = function(e, t) {
            if (!f.isHitGraphic(e, t, this.hit)) return false;
            return ! f.isHitGraphic(e, t, this.unHit)
        };
        e.contains = function(e, t) {
            return this.isHit(e, t)
        };
        u(0, e, "hit",
        function() {
            if (!this._hit) this._hit = new g;
            return this._hit
        },
        function(e) {
            this._hit = e
        });
        u(0, e, "unHit",
        function() {
            if (!this._unHit) this._unHit = new g;
            return this._unHit
        },
        function(e) {
            this._unHit = e
        });
        f.isHitGraphic = function(e, t, i) {
            if (!i) return false;
            var n;
            n = i.cmds;
            if (!n && i._one) {
                n = f._cmds;
                n.length = 1;
                n[0] = i._one
            }
            if (!n) return false;
            var s = 0,
            a = 0;
            a = n.length;
            var r;
            for (s = 0; s < a; s++) {
                r = n[s];
                if (!r) continue;
                var o = O._context;
                switch (r.callee) {
                case o._translate:
                case 6:
                    e -= r[0];
                    t -= r[1];
                default:
                }
                if (f.isHitCmd(e, t, r)) return true
            }
            return false
        };
        f.isHitCmd = function(e, t, i) {
            if (!i) return false;
            var n = O._context;
            var s = false;
            switch (i["callee"]) {
            case n._drawRect:
            case 13:
                f._rec.setTo(i[0], i[1], i[2], i[3]);
                s = f._rec.contains(e, t);
                break;
            case n._drawCircle:
            case n._fillCircle:
            case 14:
                ;
                var a = NaN;
                e -= i[0];
                t -= i[1];
                a = e * e + t * t;
                s = a < i[2] * i[2];
                break;
            case n._drawPoly:
            case 18:
                e -= i[0];
                t -= i[1];
                s = f.ptInPolygon(e, t, i[2]);
                break;
            default:
                break
            }
            return s
        };
        f.ptInPolygon = function(e, t, i) {
            var n;
            n = f._ptPoint;
            n.setTo(e, t);
            var s = 0;
            var a = NaN,
            r = NaN,
            o = NaN,
            l = NaN;
            var h = 0;
            h = i.length;
            for (var u = 0; u < h; u += 2) {
                a = i[u];
                r = i[u + 1];
                o = i[(u + 2) % h];
                l = i[(u + 3) % h];
                if (r == l) continue;
                if (n.y < Math.min(r, l)) continue;
                if (n.y >= Math.max(r, l)) continue;
                var c = (n.y - r) * (o - a) / (l - r) + a;
                if (c > n.x) {
                    s++
                }
            }
            return s % 2 == 1
        };
        f._cmds = [];
        l(f, ["_rec",
        function() {
            return this._rec = new A
        },
        "_ptPoint",
        function() {
            return this._ptPoint = new B
        }]);
        return f
    } ();
    var te = function() {
        function s(e, t, i, n) {
            this.char = e;
            this.charNum = e.charCodeAt(0);
            this._x = this._y = 0;
            this.width = t;
            this.height = i;
            this.style = n;
            this.isWord = !s._isWordRegExp.test(e)
        }
        _(s, "laya.utils.HTMLChar");
        var e = s.prototype;
        b.imps(e, {
            "laya.display.ILayout": true
        });
        e.setSprite = function(e) {
            this._sprite = e
        };
        e.getSprite = function() {
            return this._sprite
        };
        e._isChar = function() {
            return true
        };
        e._getCSSStyle = function() {
            return this.style
        };
        u(0, e, "width",
        function() {
            return this._w
        },
        function(e) {
            this._w = e
        });
        u(0, e, "x",
        function() {
            return this._x
        },
        function(e) {
            if (this._sprite) {
                this._sprite.x = e
            }
            this._x = e
        });
        u(0, e, "y",
        function() {
            return this._y
        },
        function(e) {
            if (this._sprite) {
                this._sprite.y = e
            }
            this._y = e
        });
        u(0, e, "height",
        function() {
            return this._h
        },
        function(e) {
            this._h = e
        });
        s._isWordRegExp = new RegExp("[\\w.]", "");
        return s
    } ();
    var ie = function() {
        function t() {}
        _(t, "laya.utils.Log");
        t.enable = function() {
            if (!t._logdiv) {
                t._logdiv = Y.window.document.createElement("div");
                Y.window.document.body.appendChild(t._logdiv);
                t._logdiv.style.cssText = "pointer-events:none;border:white;overflow:hidden;z-index:1000000;background:rgba(100,100,100,0.6);color:white;position: absolute;left:0px;top:0px;width:50%;height:50%;"
            }
        };
        t.toggle = function() {
            var e = t._logdiv.style;
            if (e.width == "1px") {
                e.width = e.height = "50%"
            } else {
                e.width = e.height = "1px"
            }
        };
        t.print = function(e) {
            if (t._logdiv) {
                if (t._count >= t.maxCount) t.clear();
                t._count++;
                t._logdiv.innerText += e + "\n";
                t._logdiv.scrollTop = t._logdiv.scrollHeight
            }
        };
        t.clear = function() {
            t._logdiv.innerText = "";
            t._count = 0
        };
        t._logdiv = null;
        t._count = 0;
        t.maxCount = 20;
        return t
    } ();
    var ne = function() {
        function t() {}
        _(t, "laya.utils.Mouse");
        u(1, t, "cursor",
        function() {
            return t._style.cursor
        },
        function(e) {
            t._style.cursor = e
        });
        t.hide = function() {
            if (t.cursor != "none") {
                t._preCursor = t.cursor;
                t.cursor = "none"
            }
        };
        t.show = function() {
            if (t.cursor == "none") {
                if (t._preCursor) {
                    t.cursor = t._preCursor
                } else {
                    t.cursor = "auto"
                }
            }
        };
        t._preCursor = null;
        l(t, ["_style",
        function() {
            return this._style = Y.document.body.style
        }]);
        return t
    } ();
    var se = function() {
        function a() {}
        _(a, "laya.utils.Pool");
        a.getPoolBySign = function(e) {
            return a._poolDic[e] || (a._poolDic[e] = [])
        };
        a.clearBySign = function(e) {
            if (a._poolDic[e]) a._poolDic[e].length = 0
        };
        a.recover = function(e, t) {
            if (t["__InPool"]) return;
            t["__InPool"] = true;
            a.getPoolBySign(e).push(t)
        };
        a.getItemByClass = function(e, t) {
            var i = a.getPoolBySign(e);
            var n = i.length ? i.pop() : new t;
            n["__InPool"] = false;
            return n
        };
        a.getItemByCreateFun = function(e, t, i) {
            var n = a.getPoolBySign(e);
            var s = n.length ? n.pop() : t.call(i);
            s["__InPool"] = false;
            return s
        };
        a.getItem = function(e) {
            var t = a.getPoolBySign(e);
            var i = t.length ? t.pop() : null;
            if (i) {
                i["__InPool"] = false
            }
            return i
        };
        a._poolDic = {};
        a.InPoolSign = "__InPool";
        return a
    } ();
    var ae = function() {
        function n() {
            this.sign = null;
            this.maxCount = 1e3
        }
        _(n, "laya.utils.PoolCache");
        var e = n.prototype;
        e.getCacheList = function() {
            return se.getPoolBySign(this.sign)
        };
        e.tryDispose = function(e) {
            var t;
            t = se.getPoolBySign(this.sign);
            if (t.length > this.maxCount) {
                t.splice(this.maxCount, t.length - this.maxCount)
            }
        };
        n.addPoolCacheManager = function(e, t) {
            t === void 0 && (t = 100);
            var i;
            i = new n;
            i.sign = e;
            i.maxCount = t;
            X.regCacheByFunction(ue.bind(i.tryDispose, i), ue.bind(i.getCacheList, i))
        };
        return n
    } ();
    var re = function() {
        function h() {}
        _(h, "laya.utils.Stat");
        u(1, h, "onclick", null,
        function(e) {
            if (h._sp) {
                h._sp.on("click", h._sp, e)
            }
            if (h._canvas) {
                h._canvas.source.onclick = e;
                h._canvas.source.style.pointerEvents = ""
            }
        });
        h.show = function(e, t) {
            e === void 0 && (e = 0);
            t === void 0 && (t = 0);
            if (O.isConchApp && !O.isConchWebGL) {
                Y.window.conch.showFPS && Y.window.conch.showFPS(e, t);
                return
            }
            if (!O.isConchWebGL && !Y.onMiniGame && !Y.onLimixiu && !Y.onKGMiniGame && !Y.onBDMiniGame && !Y.onTTMiniGame) h._useCanvas = true;
            h._show = true;
            h._fpsData.length = 60;
            h._view[0] = {
                title: "FPS(Canvas)",
                value: "_fpsStr",
                color: "yellow",
                units: "int"
            };
            h._view[1] = {
                title: "Sprite",
                value: "_spriteStr",
                color: "white",
                units: "int"
            };
            h._view[2] = {
                title: "DrawCall",
                value: "drawCall",
                color: "white",
                units: "int"
            };
            h._view[3] = {
                title: "CurMem",
                value: "currentMemorySize",
                color: "yellow",
                units: "M"
            };
            if (O.isWebGL) {
                h._view[4] = {
                    title: "Shader",
                    value: "shaderCall",
                    color: "white",
                    units: "int"
                };
                if (!O.is3DMode) {
                    h._view[0].title = "FPS(WebGL)";
                    h._view[5] = {
                        title: "Canvas",
                        value: "_canvasStr",
                        color: "white",
                        units: "int"
                    }
                } else {
                    h._view[0].title = "FPS(3D)";
                    h._view[5] = {
                        title: "TriFaces",
                        value: "trianglesFaces",
                        color: "white",
                        units: "int"
                    };
                    h._view[6] = {
                        title: "treeNodeColl",
                        value: "treeNodeCollision",
                        color: "white",
                        units: "int"
                    };
                    h._view[7] = {
                        title: "treeSpriteColl",
                        value: "treeSpriteCollision",
                        color: "white",
                        units: "int"
                    }
                }
            } else {
                h._view[4] = {
                    title: "Canvas",
                    value: "_canvasStr",
                    color: "white",
                    units: "int"
                }
            }
            if (h._useCanvas) {
                h.createUIPre(e, t)
            } else h.createUI(e, t);
            h.enable()
        };
        h.createUIPre = function(e, t) {
            var i = Y.pixelRatio;
            h._width = i * 130;
            h._vx = i * 75;
            h._height = i * (h._view.length * 12 + 3 * i) + 4;
            h._fontSize = 12 * i;
            for (var n = 0; n < h._view.length; n++) {
                h._view[n].x = 4;
                h._view[n].y = n * h._fontSize + 2 * i
            }
            if (!h._canvas) {
                h._canvas = new Ne("2D");
                h._canvas.size(h._width, h._height);
                h._ctx = h._canvas.getContext("2d");
                h._ctx.textBaseline = "top";
                h._ctx.font = h._fontSize + "px Sans-serif";
                h._canvas.source.style.cssText = "pointer-events:none;background:rgba(150,150,150,0.8);z-index:100000;position: absolute;direction:ltr;left:" + e + "px;top:" + t + "px;width:" + h._width / i + "px;height:" + h._height / i + "px;"
            }
            h._first = true;
            h.loop();
            h._first = false;
            if (!Y.onKGMiniGame) {
                Y.container.appendChild(h._canvas.source)
            }
        };
        h.createUI = function(e, t) {
            var i = h._sp;
            var n = Y.pixelRatio;
            if (!i) {
                i = new De;
                h._leftText = new Ae;
                h._leftText.pos(5, 5);
                h._leftText.color = "#ffffff";
                i.addChild(h._leftText);
                h._txt = new Ae;
                h._txt.pos(80 * n, 5);
                h._txt.color = "#ffffff";
                i.addChild(h._txt);
                h._sp = i
            }
            i.pos(e, t);
            var s = "";
            for (var a = 0; a < h._view.length; a++) {
                var r = h._view[a];
                s += r.title + "\n"
            }
            h._leftText.text = s;
            var o = n * 138;
            var l = n * (h._view.length * 12 + 3 * n) + 4;
            h._txt.fontSize = h._fontSize * n;
            h._leftText.fontSize = h._fontSize * n;
            i.size(o, l);
            i.graphics.clear();
            i.graphics.setAlpha(.5);
            i.graphics.drawRect(0, 0, o, l, "#999999");
            i.graphics.setAlpha(1);
            h.loop()
        };
        h.enable = function() {
            b.timer.frameLoop(1, h, h.loop)
        };
        h.hide = function() {
            h._show = false;
            b.timer.clear(h, h.loop);
            if (h._canvas) {
                Y.removeElement(h._canvas.source)
            }
        };
        h.clear = function() {
            h.trianglesFaces = h.drawCall = h.shaderCall = h.spriteCount = h.spriteRenderUseCacheCount = h.treeNodeCollision = h.treeSpriteCollision = h.canvasNormal = h.canvasBitmap = h.canvasReCache = 0
        };
        h.loop = function() {
            h._count++;
            var e = Y.now();
            if (e - h._timer < 1e3) return;
            var t = h._count;
            h.FPS = Math.round(t * 1e3 / (e - h._timer));
            if (h._show) {
                h.trianglesFaces = Math.round(h.trianglesFaces / t);
                if (!h._useCanvas) {
                    h.drawCall = Math.round(h.drawCall / t) - 2;
                    h.shaderCall = Math.round(h.shaderCall / t) - 4;
                    h.spriteCount = Math.round(h.spriteCount / t) - 4
                } else {
                    h.drawCall = Math.round(h.drawCall / t) - 2;
                    h.shaderCall = Math.round(h.shaderCall / t);
                    h.spriteCount = Math.round(h.spriteCount / t) - 1
                }
                h.spriteRenderUseCacheCount = Math.round(h.spriteRenderUseCacheCount / t);
                h.canvasNormal = Math.round(h.canvasNormal / t);
                h.canvasBitmap = Math.round(h.canvasBitmap / t);
                h.canvasReCache = Math.ceil(h.canvasReCache / t);
                h.treeNodeCollision = Math.round(h.treeNodeCollision / t);
                h.treeSpriteCollision = Math.round(h.treeSpriteCollision / t);
                var i = h.FPS > 0 ? Math.floor(1e3 / h.FPS).toString() : " ";
                h._fpsStr = h.FPS + (h.renderSlow ? " slow": "") + " " + i;
                h._spriteStr = h.spriteCount + (h.spriteRenderUseCacheCount ? "/" + h.spriteRenderUseCacheCount: "");
                h._canvasStr = h.canvasReCache + "/" + h.canvasNormal + "/" + h.canvasBitmap;
                h.currentMemorySize = W.systemResourceManager.memorySize;
                if (h._useCanvas) {
                    h.renderInfoPre()
                } else h.renderInfo();
                h.clear()
            }
            h._count = 0;
            h._timer = e
        };
        h.renderInfoPre = function() {
            if (h._canvas) {
                var e = h._ctx;
                e.clearRect(h._first ? 0 : h._vx, 0, h._width, h._height);
                for (var t = 0; t < h._view.length; t++) {
                    var i = h._view[t];
                    if (h._first) {
                        e.fillStyle = "white";
                        e.fillText(i.title, i.x, i.y, null, null, null)
                    }
                    e.fillStyle = i.color;
                    var n = h[i.value];
                    i.units == "M" && (n = Math.floor(n / (1024 * 1024) * 100) / 100 + " M");
                    e.fillText(n + "", i.x + h._vx, i.y, null, null, null)
                }
            }
        };
        h.renderInfo = function() {
            var e = "";
            for (var t = 0; t < h._view.length; t++) {
                var i = h._view[t];
                var n = h[i.value];
                i.units == "M" && (n = Math.floor(n / (1024 * 1024) * 100) / 100 + " M");
                i.units == "K" && (n = Math.floor(n / 1024 * 100) / 100 + " K");
                e += n + "\n"
            }
            h._txt.text = e
        };
        h.FPS = 0;
        h.loopCount = 0;
        h.shaderCall = 0;
        h.drawCall = 0;
        h.trianglesFaces = 0;
        h.spriteCount = 0;
        h.spriteRenderUseCacheCount = 0;
        h.treeNodeCollision = 0;
        h.treeSpriteCollision = 0;
        h.canvasNormal = 0;
        h.canvasBitmap = 0;
        h.canvasReCache = 0;
        h.renderSlow = false;
        h.currentMemorySize = 0;
        h._fpsStr = null;
        h._canvasStr = null;
        h._spriteStr = null;
        h._fpsData = [];
        h._timer = 0;
        h._count = 0;
        h._view = [];
        h._fontSize = 12;
        h._txt = null;
        h._leftText = null;
        h._sp = null;
        h._show = false;
        h._useCanvas = false;
        h._canvas = null;
        h._ctx = null;
        h._first = false;
        h._vx = NaN;
        h._width = 0;
        h._height = 100;
        return h
    } ();
    var oe = function() {
        function e() {
            this._strsToID = {};
            this._idToStrs = [];
            this._length = 0
        }
        _(e, "laya.utils.StringKey");
        var t = e.prototype;
        t.add = function(e) {
            var t = this._strsToID[e];
            if (t != null) return t;
            this._idToStrs[this._length] = e;
            return this._strsToID[e] = this._length++
        };
        t.getID = function(e) {
            var t = this._strsToID[e];
            return t == null ? -1 : t
        };
        t.getName = function(e) {
            var t = this._idToStrs[e];
            return t == null ? undefined: t
        };
        return e
    } ();
    var le = function() {
        var l;
        function h() {
            this._delta = 0;
            this.scale = 1;
            this.currFrame = 0;
            this._mid = 1;
            this._map = [];
            this._laters = [];
            this._handlers = [];
            this._temp = [];
            this._count = 0;
            this.currTimer = this._now();
            this._lastTimer = this._now();
            this._init()
        }
        _(h, "laya.utils.Timer");
        var e = h.prototype;
        e._init = function() {
            b.timer && b.timer.frameLoop(1, this, this._update)
        };
        e._now = function() {
            return Date.now()
        };
        e._update = function() {
            if (this.scale <= 0) {
                this._lastTimer = this._now();
                return
            }
            var e = this.currFrame = this.currFrame + this.scale;
            var t = this._now();
            this._delta = (t - this._lastTimer) * this.scale;
            var i = this.currTimer = this.currTimer + this._delta;
            this._lastTimer = t;
            var n = this._handlers;
            this._count = 0;
            for (r = 0, o = n.length; r < o; r++) {
                l = n[r];
                if (l.method !== null) {
                    var s = l.userFrame ? e: i;
                    if (s >= l.exeTime) {
                        if (l.repeat) {
                            if (!l.jumpFrame) {
                                l.exeTime += l.delay;
                                l.run(false);
                                if (s > l.exeTime) {
                                    l.exeTime += Math.ceil((s - l.exeTime) / l.delay) * l.delay
                                }
                            } else {
                                while (s >= l.exeTime) {
                                    l.exeTime += l.delay;
                                    l.run(false)
                                }
                            }
                        } else {
                            l.run(true)
                        }
                    }
                } else {
                    this._count++
                }
            }
            if (this._count > 30 || e % 200 === 0) this._clearHandlers();
            var a = this._laters;
            for (var r = 0,
            o = a.length - 1; r <= o; r++) {
                var l = a[r];
                if (l.method !== null) {
                    this._map[l.key] = null;
                    l.run(false)
                }
                this._recoverHandler(l);
                r === o && (o = a.length - 1)
            }
            a.length = 0
        };
        e._clearHandlers = function() {
            var e = this._handlers;
            for (var t = 0,
            i = e.length; t < i; t++) {
                var n = e[t];
                if (n.method !== null) this._temp.push(n);
                else this._recoverHandler(n)
            }
            this._handlers = this._temp;
            this._temp = e;
            this._temp.length = 0
        };
        e._recoverHandler = function(e) {
            if (this._map[e.key] == e) this._map[e.key] = null;
            e.clear();
            h._pool.push(e)
        };
        e._create = function(e, t, i, n, s, a, r) {
            if (!i) {
                s.apply(n, a);
                return null
            }
            if (r) {
                var o = this._getHandler(n, s);
                if (o) {
                    o.repeat = t;
                    o.userFrame = e;
                    o.delay = i;
                    o.caller = n;
                    o.method = s;
                    o.args = a;
                    o.exeTime = i + (e ? this.currFrame: this.currTimer + this._now() - this._lastTimer);
                    return o
                }
            }
            o = h._pool.length > 0 ? h._pool.pop() : new l;
            o.repeat = t;
            o.userFrame = e;
            o.delay = i;
            o.caller = n;
            o.method = s;
            o.args = a;
            o.exeTime = i + (e ? this.currFrame: this.currTimer + this._now() - this._lastTimer) + 1;
            this._indexHandler(o);
            this._handlers.push(o);
            return o
        };
        e._indexHandler = function(e) {
            var t = e.caller;
            var i = e.method;
            var n = t ? t.$_GID || (t.$_GID = ue.getGID()) : 0;
            var s = i.$_TID || (i.$_TID = this._mid++*1e5);
            e.key = n + s;
            this._map[e.key] = e
        };
        e.once = function(e, t, i, n, s) {
            s === void 0 && (s = true);
            this._create(false, false, e, t, i, n, s)
        };
        e.loop = function(e, t, i, n, s, a) {
            s === void 0 && (s = true);
            a === void 0 && (a = false);
            var r = this._create(false, true, e, t, i, n, s);
            if (r) r.jumpFrame = a
        };
        e.frameOnce = function(e, t, i, n, s) {
            s === void 0 && (s = true);
            this._create(true, false, e, t, i, n, s)
        };
        e.frameLoop = function(e, t, i, n, s) {
            s === void 0 && (s = true);
            this._create(true, true, e, t, i, n, s)
        };
        e.toString = function() {
            return "callLater:" + this._laters.length + " handlers:" + this._handlers.length + " pool:" + h._pool.length
        };
        e.clear = function(e, t) {
            var i = this._getHandler(e, t);
            if (i) {
                this._map[i.key] = null;
                i.key = 0;
                i.clear()
            }
        };
        e.clearAll = function(e) {
            if (!e) return;
            for (var t = 0,
            i = this._handlers.length; t < i; t++) {
                var n = this._handlers[t];
                if (n.caller === e) {
                    this._map[n.key] = null;
                    n.key = 0;
                    n.clear()
                }
            }
        };
        e._getHandler = function(e, t) {
            var i = e ? e.$_GID || (e.$_GID = ue.getGID()) : 0;
            var n = t.$_TID || (t.$_TID = this._mid++*1e5);
            return this._map[i + n]
        };
        e.callLater = function(e, t, i) {
            if (this._getHandler(e, t) == null) {
                if (h._pool.length) var n = h._pool.pop();
                else n = new l;
                n.caller = e;
                n.method = t;
                n.args = i;
                this._indexHandler(n);
                this._laters.push(n)
            }
        };
        e.runCallLater = function(e, t) {
            var i = this._getHandler(e, t);
            if (i && i.method != null) {
                this._map[i.key] = null;
                i.run(true)
            }
        };
        e.runTimer = function(e, t) {
            this.runCallLater(e, t)
        };
        u(0, e, "delta",
        function() {
            return this._delta
        });
        h._pool = [];
        h.__init$ = function() {
            l = function() {
                function e() {
                    this.key = 0;
                    this.repeat = false;
                    this.delay = 0;
                    this.userFrame = false;
                    this.exeTime = 0;
                    this.caller = null;
                    this.method = null;
                    this.args = null;
                    this.jumpFrame = false
                }
                _(e, "");
                var t = e.prototype;
                t.clear = function() {
                    this.caller = null;
                    this.method = null;
                    this.args = null
                };
                t.run = function(e) {
                    var t = this.caller;
                    if (t && t.destroyed) return this.clear();
                    var i = this.method;
                    var n = this.args;
                    e && this.clear();
                    if (i == null) return;
                    n ? i.apply(t, n) : i.call(t)
                };
                return e
            } ()
        };
        return h
    } ();
    var he = function() {
        function c() {
            this.gid = 0
        }
        _(c, "laya.utils.Tween");
        var e = c.prototype;
        e.to = function(e, t, i, n, s, a, r) {
            a === void 0 && (a = 0);
            r === void 0 && (r = false);
            return this._create(e, t, i, n, s, a, r, true, false, true)
        };
        e.from = function(e, t, i, n, s, a, r) {
            a === void 0 && (a = 0);
            r === void 0 && (r = false);
            return this._create(e, t, i, n, s, a, r, false, false, true)
        };
        e._create = function(e, t, i, n, s, a, r, o, l, h) {
            if (!e) throw new Error("Tween:target is null");
            this._target = e;
            this._duration = i;
            this._ease = n || t.ease || c.easeNone;
            this._complete = s || t.complete;
            this._delay = a;
            this._props = [];
            this._usedTimer = 0;
            this._startTimer = Y.now();
            this._usedPool = l;
            this._delayParam = null;
            this.update = t.update;
            var u = e.$_GID || (e.$_GID = ue.getGID());
            if (!c.tweenMap[u]) {
                c.tweenMap[u] = [this]
            } else {
                if (r) c.clearTween(e);
                c.tweenMap[u].push(this)
            }
            if (h) {
                if (a <= 0) this.firstStart(e, t, o);
                else {
                    this._delayParam = [e, t, o];
                    b.scaleTimer.once(a, this, this.firstStart, this._delayParam)
                }
            } else {
                this._initProps(e, t, o)
            }
            return this
        };
        e.firstStart = function(e, t, i) {
            this._delayParam = null;
            if (e.destroyed) {
                this.clear();
                return
            }
            this._initProps(e, t, i);
            this._beginLoop()
        };
        e._initProps = function(e, t, i) {
            for (var n in t) {
                if (typeof e[n] == "number") {
                    var s = i ? e[n] : t[n];
                    var a = i ? t[n] : e[n];
                    this._props.push([n, s, a - s]);
                    if (!i) e[n] = s
                }
            }
        };
        e._beginLoop = function() {
            b.scaleTimer.frameLoop(1, this, this._doEase)
        };
        e._doEase = function() {
            this._updateEase(Y.now())
        };
        e._updateEase = function(e) {
            var t = this._target;
            if (!t) return;
            if (t.destroyed) return c.clearTween(t);
            var i = this._usedTimer = e - this._startTimer - this._delay;
            if (i < 0) return;
            if (i >= this._duration) return this.complete();
            var n = i > 0 ? this._ease(i, 0, 1, this._duration) : 0;
            var s = this._props;
            for (var a = 0,
            r = s.length; a < r; a++) {
                var o = s[a];
                t[o[0]] = o[1] + n * o[2]
            }
            if (this.update) this.update.run()
        };
        e.complete = function() {
            if (!this._target) return;
            b.scaleTimer.runTimer(this, this.firstStart);
            var e = this._target;
            var t = this._props;
            var i = this._complete;
            for (var n = 0,
            s = t.length; n < s; n++) {
                var a = t[n];
                e[a[0]] = a[1] + a[2]
            }
            if (this.update) this.update.run();
            this.clear();
            i && i.run()
        };
        e.pause = function() {
            b.scaleTimer.clear(this, this._beginLoop);
            b.scaleTimer.clear(this, this._doEase);
            b.scaleTimer.clear(this, this.firstStart);
            var e = Y.now();
            var t = NaN;
            t = e - this._startTimer - this._delay;
            if (t < 0) {
                this._usedTimer = t
            }
        };
        e.setStartTime = function(e) {
            this._startTimer = e
        };
        e.clear = function() {
            if (this._target) {
                this._remove();
                this._clear()
            }
        };
        e._clear = function() {
            this.pause();
            b.scaleTimer.clear(this, this.firstStart);
            this._complete = null;
            this._target = null;
            this._ease = null;
            this._props = null;
            this._delayParam = null;
            if (this._usedPool) {
                this.update = null;
                se.recover("tween", this)
            }
        };
        e.recover = function() {
            this._usedPool = true;
            this._clear()
        };
        e._remove = function() {
            var e = c.tweenMap[this._target.$_GID];
            if (e) {
                for (var t = 0,
                i = e.length; t < i; t++) {
                    if (e[t] === this) {
                        e.splice(t, 1);
                        break
                    }
                }
            }
        };
        e.restart = function() {
            this.pause();
            this._usedTimer = 0;
            this._startTimer = Y.now();
            if (this._delayParam) {
                b.scaleTimer.once(this._delay, this, this.firstStart, this._delayParam);
                return
            }
            var e = this._props;
            for (var t = 0,
            i = e.length; t < i; t++) {
                var n = e[t];
                this._target[n[0]] = n[1]
            }
            b.scaleTimer.once(this._delay, this, this._beginLoop)
        };
        e.resume = function() {
            if (this._usedTimer >= this._duration) return;
            this._startTimer = Y.now() - this._usedTimer - this._delay;
            if (this._delayParam) {
                if (this._usedTimer < 0) {
                    b.scaleTimer.once( - this._usedTimer, this, this.firstStart, this._delayParam)
                } else {
                    this.firstStart.apply(this, this._delayParam)
                }
            } else {
                this._beginLoop()
            }
        };
        u(0, e, "progress", null,
        function(e) {
            var t = e * this._duration;
            this._startTimer = Y.now() - this._delay - t
        });
        c.to = function(e, t, i, n, s, a, r, o) {
            a === void 0 && (a = 0);
            r === void 0 && (r = false);
            o === void 0 && (o = true);
            return se.getItemByClass("tween", c)._create(e, t, i, n, s, a, r, true, o, true)
        };
        c.from = function(e, t, i, n, s, a, r, o) {
            a === void 0 && (a = 0);
            r === void 0 && (r = false);
            o === void 0 && (o = true);
            return se.getItemByClass("tween", c)._create(e, t, i, n, s, a, r, false, o, true)
        };
        c.clearAll = function(e) {
            if (!e || !e.$_GID) return;
            var t = c.tweenMap[e.$_GID];
            if (t) {
                for (var i = 0,
                n = t.length; i < n; i++) {
                    t[i]._clear()
                }
                t.length = 0
            }
        };
        c.clear = function(e) {
            e.clear()
        };
        c.clearTween = function(e) {
            c.clearAll(e)
        };
        c.easeNone = function(e, t, i, n) {
            return i * e / n + t
        };
        c.tweenMap = {};
        return c
    } ();
    var ue = function() {
        function o() {}
        _(o, "laya.utils.Utils");
        o.toRadian = function(e) {
            return e * o._pi2
        };
        o.toAngle = function(e) {
            return e * o._pi
        };
        o.toHexColor = function(e) {
            if (e < 0 || isNaN(e)) return null;
            var t = e.toString(16);
            while (t.length < 6) t = "0" + t;
            return "#" + t
        };
        o.getGID = function() {
            return o._gid++
        };
        o.concatArray = function(e, t) {
            if (!t) return e;
            if (!e) return t;
            var i = 0,
            n = t.length;
            for (i = 0; i < n; i++) {
                e.push(t[i])
            }
            return e
        };
        o.clearArray = function(e) {
            if (!e) return e;
            e.length = 0;
            return e
        };
        o.copyArray = function(e, t) {
            e || (e = []);
            if (!t) return e;
            e.length = t.length;
            var i = 0,
            n = t.length;
            for (i = 0; i < n; i++) {
                e[i] = t[i]
            }
            return e
        };
        o.getGlobalRecByPoints = function(e, t, i, n, s) {
            var a;
            a = new B(t, i);
            a = e.localToGlobal(a);
            var r;
            r = new B(n, s);
            r = e.localToGlobal(r);
            return A._getWrapRec([a.x, a.y, r.x, r.y])
        };
        o.getGlobalPosAndScale = function(e) {
            return o.getGlobalRecByPoints(e, 0, 0, 1, 1)
        };
        o.bind = function(e, t) {
            var i = e;
            i = e.bind(t);
            return i
        };
        o.measureText = function(e, t) {
            return D.measureText(e, t)
        };
        o.updateOrder = function(e) {
            if (!e || e.length < 2) return false;
            var t = 1,
            i = 0,
            n = e.length,
            s = NaN,
            a;
            while (t < n) {
                i = t;
                a = e[i];
                s = e[i]._zOrder;
                while (--i > -1) {
                    if (e[i]._zOrder > s) e[i + 1] = e[i];
                    else break
                }
                e[i + 1] = a;
                t++
            }
            var r = a.parent.conchModel;
            if (r) {
                if (r.updateZOrder != null) {
                    r.updateZOrder()
                } else {
                    for (t = 0; t < n; t++) {
                        r.removeChild(e[t].conchModel)
                    }
                    for (t = 0; t < n; t++) {
                        r.addChildAt(e[t].conchModel, t)
                    }
                }
            }
            return true
        };
        o.transPointList = function(e, t, i) {
            var n = 0,
            s = e.length;
            for (n = 0; n < s; n += 2) {
                e[n] += t;
                e[n + 1] += i
            }
        };
        o.parseInt = function(e, t) {
            t === void 0 && (t = 0);
            var i = Y.window.parseInt(e, t);
            if (isNaN(i)) return 0;
            return i
        };
        o.getFileExtension = function(e) {
            o._extReg.lastIndex = e.lastIndexOf(".");
            var t = o._extReg.exec(e);
            if (t && t.length > 1) {
                return t[1].toLowerCase()
            }
            return null
        };
        o.getTransformRelativeToWindow = function(e, t, i) {
            var n = b.stage;
            var s = laya.utils.Utils.getGlobalPosAndScale(e);
            var a = n._canvasTransform.clone();
            var r = a.tx;
            var o = a.ty;
            a.rotate( - Math.PI / 180 * b.stage.canvasDegree);
            a.scale(b.stage.clientScaleX, b.stage.clientScaleY);
            var l = b.stage.canvasDegree % 180 != 0;
            var h = NaN,
            u = NaN;
            if (l) {
                h = i + s.y;
                u = t + s.x;
                h *= a.d;
                u *= a.a;
                if (b.stage.canvasDegree == 90) {
                    h = r - h;
                    u += o
                } else {
                    h += r;
                    u = o - u
                }
            } else {
                h = t + s.x;
                u = i + s.y;
                h *= a.a;
                u *= a.d;
                h += r;
                u += o
            }
            var c = NaN,
            f = NaN;
            if (l) {
                c = a.d * s.height;
                f = a.a * s.width
            } else {
                c = a.a * s.width;
                f = a.d * s.height
            }
            return {
                x: h,
                y: u,
                scaleX: c,
                scaleY: f
            }
        };
        o.fitDOMElementInArea = function(e, t, i, n, s, a) {
            if (!e._fitLayaAirInitialized) {
                e._fitLayaAirInitialized = true;
                e.style.transformOrigin = e.style.webKittransformOrigin = "left top";
                e.style.position = "absolute"
            }
            var r = o.getTransformRelativeToWindow(t, i, n);
            e.style.transform = e.style.webkitTransform = "scale(" + r.scaleX + "," + r.scaleY + ") rotate(" + b.stage.canvasDegree + "deg)";
            e.style.width = s + "px";
            e.style.height = a + "px";
            e.style.left = r.x + "px";
            e.style.top = r.y + "px"
        };
        o.isOkTextureList = function(e) {
            if (!e) return false;
            var t = 0,
            i = e.length;
            var n;
            for (t = 0; t < i; t++) {
                n = e[t];
                if (!n || !n.source) return false
            }
            return true
        };
        o.isOKCmdList = function(e) {
            if (!e) return false;
            var t = 0,
            i = e.length;
            var n = O._context;
            var s;
            var a;
            for (t = 0; t < i; t++) {
                s = e[t];
                switch (s.callee) {
                case n._drawTexture:
                case n._fillTexture:
                case n._drawTextureWithTransform:
                    a = s[0];
                    if (!a || !a.source) return false
                }
            }
            return true
        };
        o._gid = 1;
        o._pi = 180 / Math.PI;
        o._pi2 = Math.PI / 180;
        o._extReg = /\.(\w+)\??/g;
        o.parseXMLFromString = function(e) {
            var t;
            e = e.replace(/>\s+</g, "><");
            t = (new DOMParser).parseFromString(e, "text/xml");
            if (t.firstChild.textContent.indexOf("This page contains the following errors") > -1) {
                throw new Error(t.firstChild.firstChild.textContent)
            }
            return t
        };
        return o
    } ();
    var ce = function() {
        function e() {
            this.useDic = {};
            this.shapeDic = {};
            this.shapeLineDic = {};
            this._id = 0;
            this._checkKey = false;
            this._freeIdArray = [];
            if (O.isWebGL) {
                X.regCacheByFunction(ue.bind(this.startDispose, this), ue.bind(this.getCacheList, this))
            }
        }
        _(e, "laya.utils.VectorGraphManager");
        var t = e.prototype;
        t.getId = function() {
            return this._id++
        };
        t.addShape = function(e, t) {
            this.shapeDic[e] = t;
            if (!this.useDic[e]) {
                this.useDic[e] = true
            }
        };
        t.addLine = function(e, t) {
            this.shapeLineDic[e] = t;
            if (!this.shapeLineDic[e]) {
                this.shapeLineDic[e] = true
            }
        };
        t.getShape = function(e) {
            if (this._checkKey) {
                if (this.useDic[e] != null) {
                    this.useDic[e] = true
                }
            }
        };
        t.deleteShape = function(e) {
            if (this.shapeDic[e]) {
                this.shapeDic[e] = null;
                delete this.shapeDic[e]
            }
            if (this.shapeLineDic[e]) {
                this.shapeLineDic[e] = null;
                delete this.shapeLineDic[e]
            }
            if (this.useDic[e] != null) {
                delete this.useDic[e]
            }
        };
        t.getCacheList = function() {
            var e;
            var t = [];
            for (e in this.shapeDic) {
                t.push(this.shapeDic[e])
            }
            for (e in this.shapeLineDic) {
                t.push(this.shapeLineDic[e])
            }
            return t
        };
        t.startDispose = function(e) {
            var t;
            for (t in this.useDic) {
                this.useDic[t] = false
            }
            this._checkKey = true
        };
        t.endDispose = function() {
            if (this._checkKey) {
                var e;
                for (e in this.useDic) {
                    if (!this.useDic[e]) {
                        this.deleteShape(e)
                    }
                }
                this._checkKey = false
            }
        };
        e.getInstance = function() {
            return e.instance = e.instance || new e
        };
        e.instance = null;
        return e
    } ();
    var fe = function() {
        function n() {
            this._obj = null;
            this._obj = n.supportWeakMap ? new Y.window.WeakMap: {};
            if (!n.supportWeakMap) n._maps.push(this)
        }
        _(n, "laya.utils.WeakObject");
        var e = n.prototype;
        e.set = function(e, t) {
            if (e == null) return;
            if (n.supportWeakMap) {
                var i = e;
                if (typeof e == "string" || typeof e == "number") {
                    i = n._keys[e];
                    if (!i) i = n._keys[e] = {
                        k: e
                    }
                }
                this._obj.set(i, t)
            } else {
                if (typeof e == "string" || typeof e == "number") {
                    this._obj[e] = t
                } else {
                    e.$_GID || (e.$_GID = ue.getGID());
                    this._obj[e.$_GID] = t
                }
            }
        };
        e.get = function(e) {
            if (e == null) return null;
            if (n.supportWeakMap) {
                var t = typeof e == "string" || typeof e == "number" ? n._keys[e] : e;
                if (!t) return null;
                return this._obj.get(t)
            } else {
                if (typeof e == "string" || typeof e == "number") return this._obj[e];
                return this._obj[e.$_GID]
            }
        };
        e.del = function(e) {
            if (e == null) return;
            if (n.supportWeakMap) {
                var t = typeof e == "string" || typeof e == "number" ? n._keys[e] : e;
                if (!t) return;
                this._obj.delete(t)
            } else {
                if (typeof e == "string" || typeof e == "number") delete this._obj[e];
                else delete this._obj[this._obj.$_GID]
            }
        };
        e.has = function(e) {
            if (e == null) return false;
            if (n.supportWeakMap) {
                var t = typeof e == "string" || typeof e == "number" ? n._keys[e] : e;
                return this._obj.has(t)
            } else {
                if (typeof e == "string" || typeof e == "number") return this._obj[e] != null;
                return this._obj[this._obj.$_GID] != null
            }
        };
        n.__init__ = function() {
            n.supportWeakMap = Y.window.WeakMap != null;
            if (!n.supportWeakMap) b.timer.loop(n.delInterval, null, n.clearCache)
        };
        n.clearCache = function() {
            for (var e = 0,
            t = n._maps.length; e < t; e++) {
                var i = n._maps[e];
                i._obj = {}
            }
        };
        n.supportWeakMap = false;
        n.delInterval = 5 * 60 * 1e3;
        n._keys = {};
        n._maps = [];
        l(n, ["I",
        function() {
            return this.I = new n
        }]);
        return n
    } ();
    var de = function() {
        function e() {
            this.id = NaN;
            this.save = [];
            this.toUpperCase = null;
            this.changed = false;
            this._text = null
        }
        _(e, "laya.utils.WordText");
        var t = e.prototype;
        t.setText = function(e) {
            this.changed = true;
            this._text = e
        };
        t.toString = function() {
            return this._text
        };
        t.charCodeAt = function(e) {
            return this._text ? this._text.charCodeAt(e) : NaN
        };
        t.charAt = function(e) {
            return this._text ? this._text.charAt(e) : null
        };
        u(0, t, "length",
        function() {
            return this._text ? this._text.length: 0
        });
        return e
    } ();
    var ge = function(e) {
        function r() {
            this._bits = 0;
            this._displayedInStage = false;
            this._parent = null;
            this.conchModel = null;
            this.name = "";
            this._destroyed = false;
            r.__super.call(this);
            this._childs = r.ARRAY_EMPTY;
            this._$P = r.PROP_EMPTY;
            this.timer = b.scaleTimer;
            this.conchModel = O.isConchNode ? this.createConchModel() : null
        }
        _(r, "laya.display.Node", e);
        var t = r.prototype;
        t._setBit = function(e, t) {
            if (e == 1) {
                var i = this._getBit(e);
                if (i != t) {
                    this._updateDisplayedInstage()
                }
            }
            if (t) {
                this._bits |= e
            } else {
                this._bits &= ~e
            }
        };
        t._getBit = function(e) {
            return (this._bits & e) != 0
        };
        t._setUpNoticeChain = function() {
            if (this._getBit(1)) {
                this._setUpNoticeType(1)
            }
        };
        t._setUpNoticeType = function(e) {
            var t = this;
            t._setBit(e, true);
            t = t.parent;
            while (t) {
                if (t._getBit(e)) return;
                t._setBit(e, true);
                t = t.parent
            }
        };
        t.on = function(e, t, i, n) {
            if (e === "display" || e === "undisplay") {
                if (!this._getBit(1)) {
                    this._setUpNoticeType(1)
                }
            }
            return this._createListener(e, t, i, n, false)
        };
        t.once = function(e, t, i, n) {
            if (e === "display" || e === "undisplay") {
                if (!this._getBit(1)) {
                    this._setUpNoticeType(1)
                }
            }
            return this._createListener(e, t, i, n, true)
        };
        t.createConchModel = function() {
            return null
        };
        t.destroy = function(e) {
            e === void 0 && (e = true);
            this._destroyed = true;
            this._parent && this._parent.removeChild(this);
            if (this._childs) {
                if (e) this.destroyChildren();
                else this.removeChildren()
            }
            this._childs = null;
            this._$P = null;
            this.offAll();
            this.timer.clearAll(this)
        };
        t.destroyChildren = function() {
            if (this._childs) {
                for (var e = this._childs.length - 1; e > -1; e--) {
                    this._childs[e].destroy(true)
                }
            }
        };
        t.addChild = function(e) {
            if (!e || this.destroyed || e === this) return e;
            if (e.zOrder) this._set$P("hasZorder", true);
            if (e._parent === this) {
                var t = this.getChildIndex(e);
                if (t !== this._childs.length - 1) {
                    this._childs.splice(t, 1);
                    this._childs.push(e);
                    if (this.conchModel) {
                        this.conchModel.removeChild(e.conchModel);
                        this.conchModel.addChildAt(e.conchModel, this._childs.length - 1)
                    }
                    this._childChanged()
                }
            } else {
                e.parent && e.parent.removeChild(e);
                this._childs === r.ARRAY_EMPTY && (this._childs = []);
                this._childs.push(e);
                this.conchModel && this.conchModel.addChildAt(e.conchModel, this._childs.length - 1);
                e.parent = this;
                this._childChanged()
            }
            return e
        };
        t.addChildren = function(e) {
            var t = arguments;
            var i = 0,
            n = t.length;
            while (i < n) {
                this.addChild(t[i++])
            }
        };
        t.addChildAt = function(e, t) {
            if (!e || this.destroyed || e === this) return e;
            if (e.zOrder) this._set$P("hasZorder", true);
            if (t >= 0 && t <= this._childs.length) {
                if (e._parent === this) {
                    var i = this.getChildIndex(e);
                    this._childs.splice(i, 1);
                    this._childs.splice(t, 0, e);
                    if (this.conchModel) {
                        this.conchModel.removeChild(e.conchModel);
                        this.conchModel.addChildAt(e.conchModel, t)
                    }
                    this._childChanged()
                } else {
                    e.parent && e.parent.removeChild(e);
                    this._childs === r.ARRAY_EMPTY && (this._childs = []);
                    this._childs.splice(t, 0, e);
                    this.conchModel && this.conchModel.addChildAt(e.conchModel, t);
                    e.parent = this
                }
                return e
            } else {
                throw new Error("appendChildAt:The index is out of bounds")
            }
        };
        t.getChildIndex = function(e) {
            return this._childs.indexOf(e)
        };
        t.getChildByName = function(e) {
            var t = this._childs;
            if (t) {
                for (var i = 0,
                n = t.length; i < n; i++) {
                    var s = t[i];
                    if (s.name === e) return s
                }
            }
            return null
        };
        t._get$P = function(e) {
            return this._$P[e]
        };
        t._set$P = function(e, t) {
            if (!this.destroyed) {
                this._$P === r.PROP_EMPTY && (this._$P = {});
                this._$P[e] = t
            }
            return t
        };
        t.getChildAt = function(e) {
            return this._childs[e]
        };
        t.setChildIndex = function(e, t) {
            var i = this._childs;
            if (t < 0 || t >= i.length) {
                throw new Error("setChildIndex:The index is out of bounds.")
            }
            var n = this.getChildIndex(e);
            if (n < 0) throw new Error("setChildIndex:node is must child of this object.");
            i.splice(n, 1);
            i.splice(t, 0, e);
            if (this.conchModel) {
                this.conchModel.removeChild(e.conchModel);
                this.conchModel.addChildAt(e.conchModel, t)
            }
            this._childChanged();
            return e
        };
        t._childChanged = function(e) {};
        t.removeChild = function(e) {
            if (!this._childs) return e;
            var t = this._childs.indexOf(e);
            return this.removeChildAt(t)
        };
        t.removeSelf = function() {
            this._parent && this._parent.removeChild(this);
            return this
        };
        t.removeChildByName = function(e) {
            var t = this.getChildByName(e);
            t && this.removeChild(t);
            return t
        };
        t.removeChildAt = function(e) {
            var t = this.getChildAt(e);
            if (t) {
                this._childs.splice(e, 1);
                this.conchModel && this.conchModel.removeChild(t.conchModel);
                t.parent = null
            }
            return t
        };
        t.removeChildren = function(e, t) {
            e === void 0 && (e = 0);
            t === void 0 && (t = 2147483647);
            if (this._childs && this._childs.length > 0) {
                var i = this._childs;
                if (e === 0 && t >= a) {
                    var n = i;
                    this._childs = r.ARRAY_EMPTY
                } else {
                    n = i.splice(e, t - e)
                }
                for (var s = 0,
                a = n.length; s < a; s++) {
                    n[s].parent = null;
                    this.conchModel && this.conchModel.removeChild(n[s].conchModel)
                }
            }
            return this
        };
        t.replaceChild = function(e, t) {
            var i = this._childs.indexOf(t);
            if (i > -1) {
                this._childs.splice(i, 1, e);
                if (this.conchModel) {
                    this.conchModel.removeChild(t.conchModel);
                    this.conchModel.addChildAt(e.conchModel, i)
                }
                t.parent = null;
                e.parent = this;
                return e
            }
            return null
        };
        t._updateDisplayedInstage = function() {
            var e;
            e = this;
            var t = b.stage;
            this._displayedInStage = false;
            while (e) {
                if (e._getBit(1)) {
                    this._displayedInStage = e._displayedInStage;
                    break
                }
                if (e == t || e._displayedInStage) {
                    this._displayedInStage = true;
                    break
                }
                e = e.parent
            }
        };
        t._setDisplay = function(e) {
            if (this._displayedInStage !== e) {
                this._displayedInStage = e;
                if (e) this.event("display");
                else this.event("undisplay")
            }
        };
        t._displayChild = function(e, t) {
            var i = e._childs;
            if (i) {
                for (var n = 0,
                s = i.length; n < s; n++) {
                    var a = i[n];
                    if (a) {
                        if (a._getBit && !a._getBit(1)) continue;
                        if (a._childs.length > 0) {
                            this._displayChild(a, t)
                        } else {
                            a._setDisplay(t)
                        }
                    }
                }
            }
            e._setDisplay(t)
        };
        t.contains = function(e) {
            if (e === this) return true;
            while (e) {
                if (e.parent === this) return true;
                e = e.parent
            }
            return false
        };
        t.timerLoop = function(e, t, i, n, s, a) {
            s === void 0 && (s = true);
            a === void 0 && (a = false);
            this.timer.loop(e, t, i, n, s, a)
        };
        t.timerOnce = function(e, t, i, n, s) {
            s === void 0 && (s = true);
            this.timer._create(false, false, e, t, i, n, s)
        };
        t.frameLoop = function(e, t, i, n, s) {
            s === void 0 && (s = true);
            this.timer._create(true, true, e, t, i, n, s)
        };
        t.frameOnce = function(e, t, i, n, s) {
            s === void 0 && (s = true);
            this.timer._create(true, false, e, t, i, n, s)
        };
        t.clearTimer = function(e, t) {
            this.timer.clear(e, t)
        };
        u(0, t, "numChildren",
        function() {
            return this._childs.length
        });
        u(0, t, "destroyed",
        function() {
            return this._destroyed
        });
        u(0, t, "parent",
        function() {
            return this._parent
        },
        function(e) {
            if (this._parent !== e) {
                if (e) {
                    this._parent = e;
                    this.event("added");
                    if (this._getBit(1)) {
                        this._setUpNoticeChain();
                        e.displayedInStage && this._displayChild(this, true)
                    }
                    e._childChanged(this)
                } else {
                    this.event("removed");
                    this._parent._childChanged();
                    if (this._getBit(1)) this._displayChild(this, false);
                    this._parent = e
                }
            }
        });
        u(0, t, "displayedInStage",
        function() {
            if (this._getBit(1)) return this._displayedInStage;
            this._setUpNoticeType(1);
            return this._displayedInStage
        });
        r.ARRAY_EMPTY = [];
        r.PROP_EMPTY = {};
        r.NOTICE_DISPLAY = 1;
        r.MOUSEENABLE = 2;
        return r
    } (a);
    var pe = function(e) {
        function f(e) {
            this._bgground = null;
            this._border = null;
            this._rect = null;
            this.underLine = 0;
            this.lineHeight = 0;
            f.__super.call(this);
            this._padding = f._PADDING;
            this._spacing = f._SPACING;
            this._aligns = f._ALIGNS;
            this._font = h.EMPTY;
            this._ower = e
        }
        _(f, "laya.display.css.CSSStyle", e);
        var t = f.prototype;
        t.destroy = function() {
            this._ower = null;
            this._font = null;
            this._rect = null
        };
        t.inherit = function(e) {
            this._font = e._font;
            this._spacing = e._spacing === f._SPACING ? f._SPACING: e._spacing.slice();
            this.lineHeight = e.lineHeight
        };
        t._widthAuto = function() {
            return (this._type & 262144) !== 0
        };
        t.widthed = function(e) {
            return (this._type & 8) != 0
        };
        t._calculation = function(e, t) {
            if (t.indexOf("%") < 0) return false;
            var n = this._ower;
            var s = n.parent;
            var a = this._rect;
            function r(e, t, i) {
                return e * i[0] + t * i[1] + i[2]
            }
            function i(e) {
                var t = s.width,
                i = n.width;
                a.width && (n.width = r(t, i, a.width));
                a.height && (n.height = r(t, i, a.height));
                a.left && (n.x = r(t, i, a.left));
                a.top && (n.y = r(t, i, a.top))
            }
            if (a === null) {
                s._getCSSStyle()._type |= 524288;
                s.on("resize", this, i);
                this._rect = a = {
                    input: {}
                }
            }
            var o = t.split(" ");
            o[0] = parseFloat(o[0]) / 100;
            if (o.length == 1) o[1] = o[2] = 0;
            else {
                o[1] = parseFloat(o[1]) / 100;
                o[2] = parseFloat(o[2])
            }
            a[e] = o;
            a.input[e] = t;
            i(e);
            return true
        };
        t.heighted = function(e) {
            return (this._type & 8192) != 0
        };
        t.size = function(e, t) {
            var i = this._ower;
            var n = false;
            if (e !== -1 && e != this._ower.width) {
                this._type |= 8;
                this._ower.width = e;
                n = true
            }
            if (t !== -1 && t != this._ower.height) {
                this._type |= 8192;
                this._ower.height = t;
                n = true
            }
            if (n) {
                i._layoutLater();
                this._type & 524288 && i.event("resize", this)
            }
        };
        t._getAlign = function() {
            return this._aligns[0]
        };
        t._getValign = function() {
            return this._aligns[1]
        };
        t._getCssFloat = function() {
            return (this._type & 32768) != 0 ? 32768 : 0
        };
        t._createFont = function() {
            return this._type & 4096 ? this._font: (this._type |= 4096, this._font = new h(this._font))
        };
        t.render = function(e, t, i, n) {
            var s = e.width;
            var a = e.height;
            i -= e.pivotX;
            n -= e.pivotY;
            this._bgground && this._bgground.color != null && t.ctx.fillRect(i, n, s, a, this._bgground.color);
            this._border && this._border.color && t.drawRect(i, n, s, a, this._border.color.strColor, this._border.size)
        };
        t.getCSSStyle = function() {
            return this
        };
        t.cssText = function(e) {
            this.attrs(f.parseOneCSS(e, ";"))
        };
        t.attrs = function(e) {
            if (e) {
                for (var t = 0,
                i = e.length; t < i; t++) {
                    var n = e[t];
                    this[n[0]] = n[1]
                }
            }
        };
        t.setTransform = function(e) {
            e === "none" ? this._tf = o._TF_EMPTY: this.attrs(f.parseOneCSS(e, ","))
        };
        t.translate = function(e, t) {
            this._tf === o._TF_EMPTY && (this._tf = new c);
            this._tf.translateX = e;
            this._tf.translateY = t
        };
        t.scale = function(e, t) {
            this._tf === o._TF_EMPTY && (this._tf = new c);
            this._tf.scaleX = e;
            this._tf.scaleY = t
        };
        t._enableLayout = function() {
            return (this._type & 2) === 0 && (this._type & 4) === 0
        };
        u(0, t, "block", e.prototype._$get_block,
        function(e) {
            e ? this._type |= 1 : this._type &= ~1
        });
        u(0, t, "valign",
        function() {
            return f._valigndef[this._aligns[1]]
        },
        function(e) {
            this._aligns === f._ALIGNS && (this._aligns = [0, 0, 0]);
            this._aligns[1] = f._valigndef[e]
        });
        u(0, t, "height", null,
        function(e) {
            this._type |= 8192;
            if (typeof e == "string") {
                if (this._calculation("height", e)) return;
                e = parseInt(e)
            }
            this.size( - 1, e)
        });
        u(0, t, "width", null,
        function(e) {
            this._type |= 8;
            if (typeof e == "string") {
                var t = e.indexOf("auto");
                if (t >= 0) {
                    this._type |= 262144;
                    e = e.substr(0, t)
                }
                if (this._calculation("width", e)) return;
                e = parseInt(e)
            }
            this.size(e, -1)
        });
        u(0, t, "fontWeight",
        function() {
            return this._font.weight
        },
        function(e) {
            this._createFont().weight = e
        });
        u(0, t, "left", null,
        function(e) {
            var t = this._ower;
            if (typeof e == "string") {
                if (e === "center") e = "50% -50% 0";
                else if (e === "right") e = "100% -100% 0";
                if (this._calculation("left", e)) return;
                e = parseInt(e)
            }
            t.x = e
        });
        u(0, t, "_translate", null,
        function(e) {
            this.translate(e[0], e[1])
        });
        u(0, t, "absolute",
        function() {
            return (this._type & 4) !== 0
        });
        u(0, t, "top", null,
        function(e) {
            var t = this._ower;
            if (typeof e == "string") {
                if (e === "middle") e = "50% -50% 0";
                else if (e === "bottom") e = "100% -100% 0";
                if (this._calculation("top", e)) return;
                e = parseInt(e)
            }
            t.y = e
        });
        u(0, t, "align",
        function() {
            return f._aligndef[this._aligns[0]]
        },
        function(e) {
            this._aligns === f._ALIGNS && (this._aligns = [0, 0, 0]);
            this._aligns[0] = f._aligndef[e]
        });
        u(0, t, "bold",
        function() {
            return this._font.bold
        },
        function(e) {
            this._createFont().bold = e
        });
        u(0, t, "padding",
        function() {
            return this._padding
        },
        function(e) {
            this._padding = e
        });
        u(0, t, "leading",
        function() {
            return this._spacing[1]
        },
        function(e) {
            typeof e == "string" && (e = parseInt(e + ""));
            this._spacing === f._SPACING && (this._spacing = [0, 0]);
            this._spacing[1] = e
        });
        u(0, t, "lineElement",
        function() {
            return (this._type & 65536) != 0
        },
        function(e) {
            e ? this._type |= 65536 : this._type &= ~65536
        });
        u(0, t, "cssFloat",
        function() {
            return (this._type & 32768) != 0 ? "right": "left"
        },
        function(e) {
            this.lineElement = false;
            e === "right" ? this._type |= 32768 : this._type &= ~32768
        });
        u(0, t, "textDecoration",
        function() {
            return this._font.decoration
        },
        function(e) {
            this._createFont().decoration = e
        });
        u(0, t, "whiteSpace",
        function() {
            return this._type & 131072 ? "nowrap": ""
        },
        function(e) {
            e === "nowrap" && (this._type |= 131072);
            e === "none" && (this._type &= ~131072)
        });
        u(0, t, "background", null,
        function(e) {
            if (!e) {
                this._bgground = null;
                return
            }
            this._bgground || (this._bgground = {});
            this._bgground.color = e;
            this._ower.conchModel && this._ower.conchModel.bgColor(e);
            this._type |= 16384;
            this._ower._renderType |= 256
        });
        u(0, t, "wordWrap",
        function() {
            return (this._type & 131072) === 0
        },
        function(e) {
            e ? this._type &= ~131072 : this._type |= 131072
        });
        u(0, t, "color",
        function() {
            return this._font.color
        },
        function(e) {
            this._createFont().color = e
        });
        u(0, t, "password",
        function() {
            return this._font.password
        },
        function(e) {
            this._createFont().password = e
        });
        u(0, t, "backgroundColor",
        function() {
            return this._bgground ? this._bgground.color: null
        },
        function(e) {
            if (e === "none") this._bgground = null;
            else this._bgground || (this._bgground = {}),
            this._bgground.color = e;
            this._ower.conchModel && this._ower.conchModel.bgColor(e);
            this._ower._renderType |= 256
        });
        u(0, t, "font",
        function() {
            return this._font.toString()
        },
        function(e) {
            this._createFont().set(e)
        });
        u(0, t, "weight", null,
        function(e) {
            this._createFont().weight = e
        });
        u(0, t, "letterSpacing",
        function() {
            return this._spacing[0]
        },
        function(e) {
            typeof e == "string" && (e = parseInt(e + ""));
            this._spacing === f._SPACING && (this._spacing = [0, 0]);
            this._spacing[0] = e
        });
        u(0, t, "fontSize",
        function() {
            return this._font.size
        },
        function(e) {
            this._createFont().size = e
        });
        u(0, t, "italic",
        function() {
            return this._font.italic
        },
        function(e) {
            this._createFont().italic = e
        });
        u(0, t, "fontFamily",
        function() {
            return this._font.family
        },
        function(e) {
            this._createFont().family = e
        });
        u(0, t, "stroke",
        function() {
            return this._font.stroke[0]
        },
        function(e) {
            if (this._createFont().stroke === h._STROKE) this._font.stroke = [0, "#000000"];
            this._font.stroke[0] = e
        });
        u(0, t, "strokeColor",
        function() {
            return this._font.stroke[1]
        },
        function(e) {
            if (this._createFont().stroke === h._STROKE) this._font.stroke = [0, "#000000"];
            this._font.stroke[1] = e
        });
        u(0, t, "border",
        function() {
            return this._border ? this._border.value: ""
        },
        function(e) {
            if (e == "none") {
                this._border = null;
                return
            }
            this._border || (this._border = {});
            this._border.value = e;
            var t = e.split(" ");
            this._border.color = $.create(t[t.length - 1]);
            if (t.length == 1) {
                this._border.size = 1;
                this._border.type = "solid";
                return
            }
            var i = 0;
            if (t[0].indexOf("px") > 0) {
                this._border.size = parseInt(t[0]);
                i++
            } else this._border.size = 1;
            this._border.type = t[i];
            this._ower._renderType |= 256
        });
        u(0, t, "borderColor",
        function() {
            return this._border && this._border.color ? this._border.color.strColor: null
        },
        function(e) {
            if (!e) {
                this._border = null;
                return
            }
            this._border || (this._border = {
                size: 1,
                type: "solid"
            });
            this._border.color = e == null ? null: $.create(e);
            this._ower.conchModel && this._ower.conchModel.border(this._border.color.strColor);
            this._ower._renderType |= 256
        });
        u(0, t, "position",
        function() {
            return this._type & 4 ? "absolute": ""
        },
        function(e) {
            e == "absolute" ? this._type |= 4 : this._type &= ~4
        });
        u(0, t, "display", null,
        function(e) {
            switch (e) {
            case "":
                this._type &= ~2;
                this.visible = true;
                break;
            case "none":
                this._type |= 2;
                this.visible = false;
                this._ower._layoutLater();
                break
            }
        });
        u(0, t, "paddingLeft",
        function() {
            return this.padding[3]
        });
        u(0, t, "paddingTop",
        function() {
            return this.padding[0]
        });
        u(0, t, "_scale", null,
        function(e) {
            this._ower.scale(e[0], e[1])
        });
        u(0, t, "_rotate", null,
        function(e) {
            this._ower.rotation = e
        });
        f.parseOneCSS = function(e, t) {
            var i = [];
            var n = e.split(t);
            var s;
            for (var a = 0,
            r = n.length; a < r; a++) {
                var o = n[a];
                var l = o.indexOf(":");
                var h = o.substr(0, l).replace(/^\s+|\s+$/g, "");
                if (h.length == 0) continue;
                var u = o.substr(l + 1).replace(/^\s+|\s+$/g, "");
                var c = [h, u];
                switch (h) {
                case "italic":
                case "bold":
                    c[1] = u == "true";
                    break;
                case "line-height":
                    c[0] = "lineHeight";
                    c[1] = parseInt(u);
                    break;
                case "font-size":
                    c[0] = "fontSize";
                    c[1] = parseInt(u);
                    break;
                case "padding":
                    s = u.split(" ");
                    s.length > 1 || (s[1] = s[2] = s[3] = s[0]);
                    c[1] = [parseInt(s[0]), parseInt(s[1]), parseInt(s[2]), parseInt(s[3])];
                    break;
                case "rotate":
                    c[0] = "_rotate";
                    c[1] = parseFloat(u);
                    break;
                case "scale":
                    s = u.split(" ");
                    c[0] = "_scale";
                    c[1] = [parseFloat(s[0]), parseFloat(s[1])];
                    break;
                case "translate":
                    s = u.split(" ");
                    c[0] = "_translate";
                    c[1] = [parseInt(s[0]), parseInt(s[1])];
                    break;
                default:
                    (c[0] = f._CSSTOVALUE[h]) || (c[0] = h)
                }
                i.push(c)
            }
            return i
        };
        f.parseCSS = function(e, t) {
            var i;
            while ((i = f._parseCSSRegExp.exec(e)) != null) {
                f.styleSheets[i[1]] = f.parseOneCSS(i[2], ";")
            }
        };
        f.EMPTY = new f(null);
        f._CSSTOVALUE = {
            "letter-spacing": "letterSpacing",
            "line-spacing": "lineSpacing",
            "white-space": "whiteSpace",
            "line-height": "lineHeight",
            "scale-x": "scaleX",
            "scale-y": "scaleY",
            "translate-x": "translateX",
            "translate-y": "translateY",
            "font-family": "fontFamily",
            "font-weight": "fontWeight",
            "vertical-align": "valign",
            "text-decoration": "textDecoration",
            "background-color": "backgroundColor",
            "border-color": "borderColor",
            float: "cssFloat"
        };
        f._parseCSSRegExp = new RegExp("([.#]\\w+)\\s*{([\\s\\S]*?)}", "g");
        f._aligndef = {
            left: 0,
            center: 1,
            right: 2,
            0 : "left",
            1 : "center",
            2 : "right"
        };
        f._valigndef = {
            top: 0,
            middle: 1,
            bottom: 2,
            0 : "top",
            1 : "middle",
            2 : "bottom"
        };
        f.styleSheets = {};
        f.ALIGN_CENTER = 1;
        f.ALIGN_RIGHT = 2;
        f.VALIGN_MIDDLE = 1;
        f.VALIGN_BOTTOM = 2;
        f._CSS_BLOCK = 1;
        f._DISPLAY_NONE = 2;
        f._ABSOLUTE = 4;
        f._WIDTH_SET = 8;
        f._PADDING = [0, 0, 0, 0];
        f._RECT = [ - 1, -1, -1, -1];
        f._SPACING = [0, 0];
        f._ALIGNS = [0, 0, 0];
        f.ADDLAYOUTED = 512;
        f._NEWFONT = 4096;
        f._HEIGHT_SET = 8192;
        f._BACKGROUND_SET = 16384;
        f._FLOAT_RIGHT = 32768;
        f._LINE_ELEMENT = 65536;
        f._NOWARP = 131072;
        f._WIDTHAUTO = 262144;
        f._LISTERRESZIE = 524288;
        return f
    } (o);
    var _e = function(e) {
        function r() {
            this.url = null;
            this.audio = null;
            this.loaded = false;
            r.__super.call(this)
        }
        _(r, "laya.media.h5audio.AudioSound", e);
        var t = r.prototype;
        t.dispose = function() {
            var e = r._audioCache[this.url];
            se.clearBySign("audio:" + this.url);
            if (e) {
                if (!O.isConchApp) {
                    e.src = ""
                }
                delete r._audioCache[this.url]
            }
        };
        t.load = function(e) {
            e = F.formatURL(e);
            this.url = e;
            var t;
            if (e == P._tMusic) {
                r._initMusicAudio();
                t = r._musicAudio;
                if (t.src != e) {
                    r._audioCache[t.src] = null;
                    t = null
                }
            } else {
                t = r._audioCache[e]
            }
            if (t && t.readyState >= 2) {
                this.event("complete");
                return
            }
            if (!t) {
                if (e == P._tMusic) {
                    r._initMusicAudio();
                    t = r._musicAudio
                } else {
                    t = Y.createElement("audio")
                }
                r._audioCache[e] = t;
                t.src = e
            }
            t.addEventListener("canplaythrough", n);
            t.addEventListener("error", s);
            var i = this;
            function n() {
                a();
                i.loaded = true;
                i.event("complete")
            }
            function s() {
                t.load = null;
                a();
                i.event("error")
            }
            function a() {
                t.removeEventListener("canplaythrough", n);
                t.removeEventListener("error", s)
            }
            this.audio = t;
            if (t.load) {
                t.load()
            } else {
                s()
            }
        };
        t.play = function(e, t) {
            e === void 0 && (e = 0);
            t === void 0 && (t = 0);
            if (!this.url) return null;
            var i;
            if (this.url == P._tMusic) {
                i = r._musicAudio
            } else {
                i = r._audioCache[this.url]
            }
            if (!i) return null;
            var n;
            n = se.getItem("audio:" + this.url);
            if (O.isConchApp) {
                if (!n) {
                    n = Y.createElement("audio");
                    n.src = this.url
                }
            } else {
                if (this.url == P._tMusic) {
                    r._initMusicAudio();
                    n = r._musicAudio;
                    n.src = this.url
                } else {
                    n = n ? n: i.cloneNode(true)
                }
            }
            var s = new ke(n);
            s.url = this.url;
            s.loops = t;
            s.startTime = e;
            s.play();
            P.addChannel(s);
            return s
        };
        u(0, t, "duration",
        function() {
            var e;
            e = r._audioCache[this.url];
            if (!e) return 0;
            return e.duration
        });
        r._initMusicAudio = function() {
            if (r._musicAudio) return;
            if (!r._musicAudio) r._musicAudio = Y.createElement("audio");
            if (!O.isConchApp) {
                Y.document.addEventListener("mousedown", r._makeMusicOK)
            }
        };
        r._makeMusicOK = function() {
            Y.document.removeEventListener("mousedown", r._makeMusicOK);
            if (!r._musicAudio.src) {
                r._musicAudio.src = "";
                r._musicAudio.load()
            } else {
                r._musicAudio.play()
            }
        };
        r._audioCache = {};
        r._musicAudio = null;
        return r
    } (a);
    var me = function(e) {
        function t() {
            this.url = null;
            this.loops = 0;
            this.startTime = NaN;
            this.isStopped = false;
            this.completeHandler = null;
            t.__super.call(this)
        }
        _(t, "laya.media.SoundChannel", e);
        var i = t.prototype;
        i.play = function() {};
        i.stop = function() {};
        i.pause = function() {};
        i.resume = function() {};
        i.__runComplete = function(e) {
            if (e) {
                e.run()
            }
        };
        u(0, i, "volume",
        function() {
            return 1
        },
        function(e) {});
        u(0, i, "position",
        function() {
            return 0
        });
        u(0, i, "duration",
        function() {
            return 0
        });
        return t
    } (a);
    var ve = function(e) {
        function t() {
            t.__super.call(this)
        }
        _(t, "laya.media.Sound", e);
        var i = t.prototype;
        i.load = function(e) {};
        i.play = function(e, t) {
            e === void 0 && (e = 0);
            t === void 0 && (t = 0);
            return null
        };
        i.dispose = function() {};
        u(0, i, "duration",
        function() {
            return 0
        });
        return t
    } (a);
    var ye = function(e) {
        function s() {
            this.url = null;
            this.loaded = false;
            this.data = null;
            this.audioBuffer = null;
            this.__toPlays = null;
            this._disposed = false;
            s.__super.call(this)
        }
        _(s, "laya.media.webaudio.WebAudioSound", e);
        var t = s.prototype;
        t.load = function(e) {
            var t = this;
            e = F.formatURL(e);
            this.url = e;
            this.audioBuffer = s._dataCache[e];
            if (this.audioBuffer) {
                this._loaded(this.audioBuffer);
                return
            }
            s.e.on("loaded:" + e, this, this._loaded);
            s.e.on("err:" + e, this, this._err);
            if (s.__loadingSound[e]) {
                return
            }
            s.__loadingSound[e] = true;
            var i = new Y.window.XMLHttpRequest;
            i.open("GET", e, true);
            i.responseType = "arraybuffer";
            i.onload = function() {
                if (t._disposed) {
                    t._removeLoadEvents();
                    return
                }
                t.data = i.response;
                s.buffs.push({
                    buffer: t.data,
                    url: t.url
                });
                s.decode()
            };
            i.onerror = function(e) {
                t._err()
            };
            i.send()
        };
        t._err = function() {
            this._removeLoadEvents();
            s.__loadingSound[this.url] = false;
            this.event("error");
            if (!this.__toPlays) return;
            var e = 0,
            t = 0;
            var i;
            i = this.__toPlays;
            t = i.length;
            var n;
            for (e = 0; e < t; e++) {
                n = i[e];
                if (n[2] && !n[2].isStopped) {
                    n[2].event("error")
                }
            }
            this.__toPlays.length = 0
        };
        t._loaded = function(e) {
            this._removeLoadEvents();
            if (this._disposed) {
                return
            }
            this.audioBuffer = e;
            s._dataCache[this.url] = this.audioBuffer;
            this.loaded = true;
            this.event("complete")
        };
        t._removeLoadEvents = function() {
            s.e.off("loaded:" + this.url, this, this._loaded);
            s.e.off("err:" + this.url, this, this._err)
        };
        t.__playAfterLoaded = function() {
            if (!this.__toPlays) return;
            var e = 0,
            t = 0;
            var i;
            i = this.__toPlays;
            t = i.length;
            var n;
            for (e = 0; e < t; e++) {
                n = i[e];
                if (n[2] && !n[2].isStopped) {
                    this.play(n[0], n[1], n[2])
                }
            }
            this.__toPlays.length = 0
        };
        t.play = function(e, t, i) {
            e === void 0 && (e = 0);
            t === void 0 && (t = 0);
            i = i ? i: new Ge;
            if (!this.audioBuffer) {
                if (this.url) {
                    if (!this.__toPlays) this.__toPlays = [];
                    this.__toPlays.push([e, t, i]);
                    this.once("complete", this, this.__playAfterLoaded);
                    this.load(this.url)
                }
            }
            i.url = this.url;
            i.loops = t;
            i["audioBuffer"] = this.audioBuffer;
            i.startTime = e;
            i.play();
            P.addChannel(i);
            return i
        };
        t.dispose = function() {
            this._disposed = true;
            delete s._dataCache[this.url];
            delete s.__loadingSound[this.url];
            this.audioBuffer = null;
            this.data = null;
            this.__toPlays = []
        };
        u(0, t, "duration",
        function() {
            if (this.audioBuffer) {
                return this.audioBuffer.duration
            }
            return 0
        });
        s.decode = function() {
            if (s.buffs.length <= 0 || s.isDecoding) {
                return
            }
            s.isDecoding = true;
            s.tInfo = s.buffs.shift();
            s.ctx.decodeAudioData(s.tInfo["buffer"], s._done, s._fail)
        };
        s._done = function(e) {
            s.e.event("loaded:" + s.tInfo.url, e);
            s.isDecoding = false;
            s.decode()
        };
        s._fail = function() {
            s.e.event("err:" + s.tInfo.url, null);
            s.isDecoding = false;
            s.decode()
        };
        s._playEmptySound = function() {
            if (s.ctx == null) {
                return
            }
            var e = s.ctx.createBufferSource();
            e.buffer = s._miniBuffer;
            e.connect(s.ctx.destination);
            e.start(0, 0, 0)
        };
        s._unlock = function() {
            if (s._unlocked) {
                return
            }
            s._playEmptySound();
            if (s.ctx.state == "running") {
                Y.document.removeEventListener("mousedown", s._unlock, true);
                Y.document.removeEventListener("touchend", s._unlock, true);
                Y.document.removeEventListener("touchstart", s._unlock, true);
                s._unlocked = true
            }
        };
        s.initWebAudio = function() {
            if (s.ctx.state != "running") {
                s._unlock();
                Y.document.addEventListener("mousedown", s._unlock, true);
                Y.document.addEventListener("touchend", s._unlock, true);
                Y.document.addEventListener("touchstart", s._unlock, true)
            }
        };
        s._dataCache = {};
        s.buffs = [];
        s.isDecoding = false;
        s._unlocked = false;
        s.tInfo = null;
        s.__loadingSound = {};
        l(s, ["window",
        function() {
            return this.window = Y.window
        },
        "webAudioEnabled",
        function() {
            return this.webAudioEnabled = s.window["AudioContext"] || s.window["webkitAudioContext"] || s.window["mozAudioContext"]
        },
        "ctx",
        function() {
            return this.ctx = s.webAudioEnabled ? new(s.window["AudioContext"] || s.window["webkitAudioContext"] || s.window["mozAudioContext"]) : undefined
        },
        "_miniBuffer",
        function() {
            return this._miniBuffer = s.ctx.createBuffer(1, 1, 22050)
        },
        "e",
        function() {
            return this.e = new a
        }]);
        return s
    } (a);
    var Ie = function(e) {
        function t() {
            this._responseType = null;
            this._data = null;
            t.__super.call(this);
            this._http = new Y.window.XMLHttpRequest
        }
        _(t, "laya.net.HttpRequest", e);
        var i = t.prototype;
        i.send = function(e, t, i, n, s) {
            i === void 0 && (i = "get");
            n === void 0 && (n = "text");
            this._responseType = n;
            this._data = null;
            var a = this;
            var r = this._http;
            r.open(i, e, true);
            if (s) {
                for (var o = 0; o < s.length; o++) {
                    r.setRequestHeader(s[o++], s[o])
                }
            } else if (!O.isConchApp) {
                if (!t || typeof t == "string") r.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
                else r.setRequestHeader("Content-Type", "application/json")
            }
            r.responseType = n !== "arraybuffer" ? "text": "arraybuffer";
            r.onerror = function(e) {
                a._onError(e)
            };
            r.onabort = function(e) {
                a._onAbort(e)
            };
            r.onprogress = function(e) {
                a._onProgress(e)
            };
            r.onload = function(e) {
                a._onLoad(e)
            };
            r.send(t)
        };
        i._onProgress = function(e) {
            if (e && e.lengthComputable) this.event("progress", e.loaded / e.total)
        };
        i._onAbort = function(e) {
            this.error("Request was aborted by user")
        };
        i._onError = function(e) {
            this.error("Request failed Status:" + this._http.status + " text:" + this._http.statusText)
        };
        i._onLoad = function(e) {
            var t = this._http;
            var i = t.status !== undefined ? t.status: 200;
            if (i === 200 || i === 204 || i === 0) {
                this.complete()
            } else {
                this.error("[" + t.status + "]" + t.statusText + ":" + t.responseURL)
            }
        };
        i.error = function(e) {
            this.clear();
            this.event("error", e)
        };
        i.complete = function() {
            this.clear();
            var t = true;
            try {
                if (this._responseType === "json") {
                    this._data = JSON.parse(this._http.responseText)
                } else if (this._responseType === "xml") {
                    this._data = ue.parseXMLFromString(this._http.responseText)
                } else {
                    this._data = this._http.response || this._http.responseText
                }
            } catch(e) {
                t = false;
                this.error(e.message)
            }
            t && this.event("complete", this._data instanceof Array ? [this._data] : this._data)
        };
        i.clear = function() {
            var e = this._http;
            e.onerror = e.onabort = e.onprogress = e.onload = null
        };
        u(0, i, "url",
        function() {
            return this._http.responseURL
        });
        u(0, i, "http",
        function() {
            return this._http
        });
        u(0, i, "data",
        function() {
            return this._data
        });
        return t
    } (a);
    var Se = function(e) {
        function R() {
            this._data = null;
            this._class = null;
            this._url = null;
            this._type = null;
            this._cache = false;
            this._http = null;
            this._customParse = false;
            R.__super.call(this)
        }
        _(R, "laya.net.Loader", e);
        var t = R.prototype;
        t.load = function(e, t, i, n, s) {
            i === void 0 && (i = true);
            s === void 0 && (s = false);
            this._url = e;
            if (e.indexOf("data:image") === 0) this._type = t = "image";
            else {
                this._type = t || (t = this.getTypeFromUrl(e));
                e = F.formatURL(e)
            }
            this._cache = i;
            this._data = null;
            if (!s && R.loadedMap[e]) {
                this._data = R.loadedMap[e];
                this.event("progress", 1);
                this.event("complete", this._data);
                return
            }
            if (n) R.setGroup(e, n);
            if (R.parserMap[t] != null) {
                this._customParse = true;
                if (R.parserMap[t] instanceof laya.utils.Handler) R.parserMap[t].runWith(this);
                else R.parserMap[t].call(null, this);
                return
            }
            if (t === "image" || t === "htmlimage" || t === "nativeimage") return this._loadImage(e);
            if (t === "sound") return this._loadSound(e);
            if (t === "ttf") return this._loadTTF(e);
            var a;
            switch (t) {
            case "atlas":
            case "plf":
                a = "json";
                break;
            case "font":
                a = "xml";
                break;
            case "pkm":
                a = "arraybuffer";
                break;
            default:
                a = t
            }
            if (R.preLoadedMap[e]) {
                this.onLoaded(R.preLoadedMap[e])
            } else {
                if (!this._http) {
                    this._http = new Ie;
                    this._http.on("progress", this, this.onProgress);
                    this._http.on("error", this, this.onError);
                    this._http.on("complete", this, this.onLoaded)
                }
                this._http.send(e, null, "get", a)
            }
        };
        t.getTypeFromUrl = function(e) {
            var t = ue.getFileExtension(e);
            if (t) return R.typeMap[t];
            console.warn("Not recognize the resources suffix", e);
            return "text"
        };
        t._loadTTF = function(e) {
            e = F.formatURL(e);
            var t = new N;
            t.complete = v.create(this, this.onLoaded);
            t.load(e)
        };
        t._loadImage = function(t) {
            t = F.formatURL(t);
            var e = this;
            var i;
            function n() {
                i.onload = null;
                i.onerror = null;
                delete R.imgCache[t]
            }
            var s = function() {
                n();
                e.onLoaded(i)
            };
            var a = function() {
                n();
                e.event("error", "Load image failed")
            };
            if (this._type === "nativeimage") {
                i = new Y.window.Image;
                i.crossOrigin = "";
                i.onload = s;
                i.onerror = a;
                i.src = t;
                R.imgCache[t] = i
            } else {
                new ze.create(t, {
                    onload: s,
                    onerror: a,
                    onCreate: function(e) {
                        i = e;
                        R.imgCache[t] = e
                    }
                })
            }
        };
        t._loadSound = function(e) {
            var t = new P._soundClass;
            var i = this;
            t.on("complete", this, n);
            t.on("error", this, s);
            t.load(e);
            function n() {
                a();
                i.onLoaded(t)
            }
            function s() {
                a();
                t.dispose();
                i.event("error", "Load sound failed")
            }
            function a() {
                t.offAll()
            }
        };
        t.onProgress = function(e) {
            if (this._type === "atlas") this.event("progress", e * .3);
            else this.event("progress", e)
        };
        t.onError = function(e) {
            this.event("error", e)
        };
        t.onLoaded = function(e) {
            var t = this._type;
            if (t == "plf") {
                this.parsePLFData(e);
                this.complete(e)
            } else if (t === "image") {
                var i = new Le(e);
                i.url = this._url;
                this.complete(i)
            } else if (t === "sound" || t === "htmlimage" || t === "nativeimage") {
                this.complete(e)
            } else if (t === "atlas") {
                if (!e.src && !e._setContext) {
                    if (!this._data) {
                        this._data = e;
                        if (e.meta && e.meta.image) {
                            var n = e.meta.image.split(",");
                            var s = this._url.indexOf("/") >= 0 ? "/": "\\";
                            var a = this._url.lastIndexOf(s);
                            var r = a >= 0 ? this._url.substr(0, a + 1) : "";
                            for (var o = 0,
                            l = n.length; o < l; o++) {
                                n[o] = r + n[o]
                            }
                        } else {
                            n = [this._url.replace(".json", ".png")]
                        }
                        n.reverse();
                        e.toLoads = n;
                        e.pics = []
                    }
                    this.event("progress", .3 + 1 / n.length * .6);
                    return this._loadImage(n.pop())
                } else {
                    this._data.pics.push(e);
                    if (this._data.toLoads.length > 0) {
                        this.event("progress", .3 + 1 / this._data.toLoads.length * .6);
                        return this._loadImage(this._data.toLoads.pop())
                    }
                    var h = this._data.frames;
                    var u = this._url.split("?")[0];
                    var c = this._data.meta && this._data.meta.prefix ? this._data.meta.prefix: u.substring(0, u.lastIndexOf(".")) + "/";
                    var f = this._data.pics;
                    var d = F.formatURL(this._url);
                    var g = R.atlasMap[d] || (R.atlasMap[d] = []);
                    g.dir = c;
                    var p = 1;
                    if (this._data.meta && this._data.meta.scale && this._data.meta.scale != 1) {
                        p = parseFloat(this._data.meta.scale);
                        for (var _ in h) {
                            var m = h[_];
                            var v = f[m.frame.idx ? m.frame.idx: 0];
                            var y = F.formatURL(c + _);
                            v.scaleRate = p;
                            var I;
                            I = Le.create(v, m.frame.x, m.frame.y, m.frame.w, m.frame.h, m.spriteSourceSize.x, m.spriteSourceSize.y, m.sourceSize.w, m.sourceSize.h);
                            R.cacheRes(y, I);
                            I.url = y;
                            g.push(y)
                        }
                    } else {
                        for (_ in h) {
                            m = h[_];
                            v = f[m.frame.idx ? m.frame.idx: 0];
                            y = F.formatURL(c + _);
                            R.cacheRes(y, Le.create(v, m.frame.x, m.frame.y, m.frame.w, m.frame.h, m.spriteSourceSize.x, m.spriteSourceSize.y, m.sourceSize.w, m.sourceSize.h));
                            R.loadedMap[y].url = y;
                            g.push(y)
                        }
                    }
                    delete this._data.pics;
                    this.complete(this._data)
                }
            } else if (t == "font") {
                if (!e.src) {
                    this._data = e;
                    this.event("progress", .5);
                    return this._loadImage(this._url.replace(".fnt", ".png"))
                } else {
                    var S = new L;
                    S.parseFont(this._data, e);
                    var C = this._url.split(".fnt")[0].split("/");
                    var b = C[C.length - 1];
                    Ae.registerBitmapFont(b, S);
                    this._data = S;
                    this.complete(this._data)
                }
            } else if (t == "pkm") {
                var w = ze.create(e, this._url);
                var x = new Le(w);
                x.url = this._url;
                this.complete(x)
            } else {
                this.complete(e)
            }
        };
        t.parsePLFData = function(e) {
            var t;
            var i;
            var n;
            for (t in e) {
                n = e[t];
                switch (t) {
                case "json":
                case "text":
                    for (i in n) {
                        R.preLoadedMap[F.formatURL(i)] = n[i]
                    }
                    break;
                default:
                    for (i in n) {
                        R.preLoadedMap[F.formatURL(i)] = n[i]
                    }
                }
            }
        };
        t.complete = function(e) {
            this._data = e;
            if (this._customParse) {
                this.event("loaded", e instanceof Array ? [e] : e)
            } else {
                R._loaders.push(this);
                if (!R._isWorking) R.checkNext()
            }
        };
        t.endLoad = function(e) {
            e && (this._data = e);
            if (this._cache) R.cacheRes(this._url, this._data);
            this.event("progress", 1);
            this.event("complete", this.data instanceof Array ? [this.data] : this.data)
        };
        u(0, t, "url",
        function() {
            return this._url
        });
        u(0, t, "data",
        function() {
            return this._data
        });
        u(0, t, "cache",
        function() {
            return this._cache
        });
        u(0, t, "type",
        function() {
            return this._type
        });
        R.checkNext = function() {
            R._isWorking = true;
            var e = Y.now();
            var t = e;
            while (R._startIndex < R._loaders.length) {
                t = Y.now();
                R._loaders[R._startIndex].endLoad();
                R._startIndex++;
                if (Y.now() - e > R.maxTimeOut) {
                    console.warn("loader callback cost a long time:" + (Y.now() - e) + " url=" + R._loaders[R._startIndex - 1].url);
                    b.timer.frameOnce(1, null, R.checkNext);
                    return
                }
            }
            R._loaders.length = 0;
            R._startIndex = 0;
            R._isWorking = false
        };
        R.clearRes = function(e, t) {
            t === void 0 && (t = false);
            e = F.formatURL(e);
            var i = R.getAtlas(e);
            if (i) {
                for (var n = 0,
                s = i.length; n < s; n++) {
                    var a = i[n];
                    var r = R.getRes(a);
                    delete R.loadedMap[a];
                    if (r) r.destroy(t)
                }
                i.length = 0;
                delete R.atlasMap[e];
                delete R.loadedMap[e]
            } else {
                var o = R.loadedMap[e];
                if (o) {
                    delete R.loadedMap[e];
                    if (o instanceof laya.resource.Texture && o.bitmap) o.destroy(t)
                }
            }
        };
        R.clearTextureRes = function(e) {
            e = F.formatURL(e);
            var t = laya.net.Loader.getAtlas(e);
            var i = t && t.length > 0 ? laya.net.Loader.getRes(t[0]) : laya.net.Loader.getRes(e);
            if (i && i.bitmap) {
                if (O.isConchApp && !O.isConchWebGL) {
                    if (i.bitmap.source.releaseTexture) {
                        i.bitmap.source.releaseTexture()
                    }
                } else if (i.bitmap._atlaser == null) {
                    i.bitmap.releaseResource(true)
                }
            }
        };
        R.getRes = function(e) {
            return R.loadedMap[F.formatURL(e)]
        };
        R.getAtlas = function(e) {
            return R.atlasMap[F.formatURL(e)]
        };
        R.cacheRes = function(e, t) {
            e = F.formatURL(e);
            if (R.loadedMap[e] != null) {
                console.warn("Resources already exist,is repeated loading:", e)
            } else {
                R.loadedMap[e] = t
            }
        };
        R.setGroup = function(e, t) {
            if (!R.groupMap[t]) R.groupMap[t] = [];
            R.groupMap[t].push(e)
        };
        R.clearResByGroup = function(e) {
            if (!R.groupMap[e]) return;
            var t = R.groupMap[e],
            i = 0,
            n = t.length;
            for (i = 0; i < n; i++) {
                R.clearRes(t[i])
            }
            t.length = 0
        };
        R.TEXT = "text";
        R.JSON = "json";
        R.XML = "xml";
        R.BUFFER = "arraybuffer";
        R.IMAGE = "image";
        R.SOUND = "sound";
        R.ATLAS = "atlas";
        R.FONT = "font";
        R.TTF = "ttf";
        R.PLF = "plf";
        R.PKM = "pkm";
        R.typeMap = {
            png: "image",
            jpg: "image",
            jpeg: "image",
            txt: "text",
            json: "json",
            xml: "xml",
            als: "atlas",
            atlas: "atlas",
            mp3: "sound",
            ogg: "sound",
            wav: "sound",
            part: "json",
            fnt: "font",
            pkm: "pkm",
            ttf: "ttf",
            plf: "plf",
            ani: "json",
            sk: "arraybuffer"
        };
        R.parserMap = {};
        R.groupMap = {};
        R.maxTimeOut = 100;
        R.loadedMap = {};
        R.preLoadedMap = {};
        R.atlasMap = {};
        R._loaders = [];
        R._isWorking = false;
        R._startIndex = 0;
        R.imgCache = {};
        return R
    } (a);
    var Ce = function(e) {
        var f;
        function g() {
            this.retryNum = 1;
            this.retryDelay = 0;
            this.maxLoader = 5;
            this._loaders = [];
            this._loaderCount = 0;
            this._resInfos = [];
            this._infoPool = [];
            this._maxPriority = 5;
            this._failRes = {};
            g.__super.call(this);
            for (var e = 0; e < this._maxPriority; e++) this._resInfos[e] = []
        }
        _(g, "laya.net.LoaderManager", e);
        var t = g.prototype;
        t.create = function(e, i, t, n, s, a, r, o) {
            a === void 0 && (a = 1);
            r === void 0 && (r = true);
            if (e instanceof Array) {
                var l = e;
                var h = l.length;
                var u = 0;
                if (t) {
                    var c = v.create(t.caller, t.method, t.args, false)
                }
                for (var f = 0; f < h; f++) {
                    var d = l[f];
                    if (typeof d == "string") d = l[f] = {
                        url: d
                    };
                    d.progress = 0
                }
                for (f = 0; f < h; f++) {
                    d = l[f];
                    var g = t ? v.create(null, m, [d], false) : null;
                    var p = t || i ? v.create(null, _, [d]) : null;
                    this._create(d.url, p, g, d.clas || n, d.params || s, d.priority || a, r, d.group || o)
                }
                function _(e, t) {
                    u++;
                    e.progress = 1;
                    if (u === h && i) {
                        i.run()
                    }
                }
                function m(e, t) {
                    e.progress = t;
                    var i = 0;
                    for (var n = 0; n < h; n++) {
                        var s = l[n];
                        i += s.progress
                    }
                    var a = i / h;
                    c.runWith(a)
                }
                return true
            } else return this._create(e, i, t, n, s, a, r, o)
        };
        t._create = function(t, i, e, n, s, a, r, o) {
            a === void 0 && (a = 1);
            r === void 0 && (r = true);
            var l = F.formatURL(t);
            var h = this.getRes(l);
            if (!h) {
                var u = ue.getFileExtension(t);
                var c = g.createMap[u];
                if (!c) throw new Error("LoaderManager:unknown file(" + t + ") extension with: " + u + ".");
                if (!n) n = c[0];
                var f = c[1];
                if (u == "atlas") {
                    this.load(t, i, e, f, a, r)
                } else {
                    if (n === Le) f = "htmlimage";
                    h = n ? new n: null;
                    if (h.hasOwnProperty("_loaded")) h._loaded = false;
                    h._setUrl(t);
                    o && h._setGroup(o);
                    this._createLoad(h, t, v.create(null, d), e, f, a, false, o, true);
                    function d(e) {
                        h && !h.destroyed && e && h.onAsynLoaded.call(h, t, e, s);
                        if (i) i.run();
                        b.loader.event(t)
                    }
                    r && this.cacheRes(l, h)
                }
            } else {
                if (!h.hasOwnProperty("loaded") || h.loaded) {
                    e && e.runWith(1);
                    i && i.run()
                } else if (i) {
                    b.loader._createListener(t, i.caller, i.method, i.args, true, false)
                }
            }
            return h
        };
        t.load = function(e, t, i, n, s, a, r, o) {
            var l = this;
            s === void 0 && (s = 1);
            a === void 0 && (a = true);
            o === void 0 && (o = false);
            if (e instanceof Array) return this._loadAssets(e, t, i, n, s, a, r);
            var h = Se.getRes(e);
            if (h != null) {
                b.timer.frameOnce(1, null,
                function() {
                    i && i.runWith(1);
                    t && t.runWith(h);
                    l._loaderCount || l.event("complete")
                })
            } else {
                var u = g._resMap[e];
                if (!u) {
                    u = this._infoPool.length ? this._infoPool.pop() : new f;
                    u.url = e;
                    u.type = n;
                    u.cache = a;
                    u.group = r;
                    u.ignoreCache = o;
                    t && u.on("complete", t.caller, t.method, t.args);
                    i && u.on("progress", i.caller, i.method, i.args);
                    g._resMap[e] = u;
                    s = s < this._maxPriority ? s: this._maxPriority - 1;
                    this._resInfos[s].push(u);
                    this._next()
                } else {
                    t && u._createListener("complete", t.caller, t.method, t.args, false, false);
                    i && u._createListener("progress", i.caller, i.method, i.args, false, false)
                }
            }
            return this
        };
        t._createLoad = function(e, t, i, n, s, a, r, o, l) {
            var h = this;
            a === void 0 && (a = 1);
            r === void 0 && (r = true);
            l === void 0 && (l = false);
            if (t instanceof Array) return this._loadAssets(t, i, n, s, a, r, o);
            var u = Se.getRes(t);
            if (u != null) {
                b.timer.frameOnce(1, null,
                function() {
                    n && n.runWith(1);
                    i && i.runWith(u);
                    h._loaderCount || h.event("complete")
                })
            } else {
                var c = g._resMap[t];
                if (!c) {
                    c = this._infoPool.length ? this._infoPool.pop() : new f;
                    c.url = t;
                    c.clas = e;
                    c.type = s;
                    c.cache = r;
                    c.group = o;
                    c.ignoreCache = l;
                    i && c.on("complete", i.caller, i.method, i.args);
                    n && c.on("progress", n.caller, n.method, n.args);
                    g._resMap[t] = c;
                    a = a < this._maxPriority ? a: this._maxPriority - 1;
                    this._resInfos[a].push(c);
                    this._next()
                } else {
                    i && c._createListener("complete", i.caller, i.method, i.args, false, false);
                    n && c._createListener("progress", n.caller, n.method, n.args, false, false)
                }
            }
            return this
        };
        t._next = function() {
            if (this._loaderCount >= this.maxLoader) return;
            for (var e = 0; e < this._maxPriority; e++) {
                var t = this._resInfos[e];
                while (t.length > 0) {
                    var i = t.shift();
                    if (i) return this._doLoad(i)
                }
            }
            this._loaderCount || this.event("complete")
        };
        t._doLoad = function(t) {
            this._loaderCount++;
            var i = this._loaders.length ? this._loaders.pop() : new Se;
            i.on("complete", null, s);
            i.on("progress", null,
            function(e) {
                t.event("progress", e)
            });
            i.on("error", null,
            function(e) {
                s(null)
            });
            var n = this;
            function s(e) {
                i.offAll();
                i._data = null;
                i._customParse = false;
                n._loaders.push(i);
                n._endLoad(t, e instanceof Array ? [e] : e);
                n._loaderCount--;
                n._next()
            }
            i._class = t.clas;
            i.load(t.url, t.type, t.cache, t.group, t.ignoreCache)
        };
        t._endLoad = function(e, t) {
            var i = e.url;
            if (t == null) {
                var n = this._failRes[i] || 0;
                if (n < this.retryNum) {
                    console.warn("[warn]Retry to load:", i);
                    this._failRes[i] = n + 1;
                    b.timer.once(this.retryDelay, this, this._addReTry, [e], false);
                    return
                } else {
                    console.warn("[error]Failed to load:", i);
                    this.event("error", i)
                }
            }
            if (this._failRes[i]) this._failRes[i] = 0;
            delete g._resMap[i];
            e.event("complete", t);
            e.offAll();
            this._infoPool.push(e)
        };
        t._addReTry = function(e) {
            this._resInfos[this._maxPriority - 1].push(e);
            this._next()
        };
        t.clearRes = function(e, t) {
            t === void 0 && (t = false);
            Se.clearRes(e, t)
        };
        t.getRes = function(e) {
            return Se.getRes(e)
        };
        t.cacheRes = function(e, t) {
            Se.cacheRes(e, t)
        };
        t.clearTextureRes = function(e) {
            Se.clearTextureRes(e)
        };
        t.setGroup = function(e, t) {
            Se.setGroup(e, t)
        };
        t.clearResByGroup = function(e) {
            Se.clearResByGroup(e)
        };
        t.clearUnLoaded = function() {
            for (var e = 0; e < this._maxPriority; e++) {
                var t = this._resInfos[e];
                for (var i = t.length - 1; i > -1; i--) {
                    var n = t[i];
                    if (n) {
                        n.offAll();
                        this._infoPool.push(n)
                    }
                }
                t.length = 0
            }
            this._loaderCount = 0;
            g._resMap = {}
        };
        t.cancelLoadByUrls = function(e) {
            if (!e) return;
            for (var t = 0,
            i = e.length; t < i; t++) {
                this.cancelLoadByUrl(e[t])
            }
        };
        t.cancelLoadByUrl = function(e) {
            for (var t = 0; t < this._maxPriority; t++) {
                var i = this._resInfos[t];
                for (var n = i.length - 1; n > -1; n--) {
                    var s = i[n];
                    if (s && s.url === e) {
                        i[n] = null;
                        s.offAll();
                        this._infoPool.push(s)
                    }
                }
            }
            if (g._resMap[e]) delete g._resMap[e]
        };
        t._loadAssets = function(e, i, r, t, n, s, a) {
            n === void 0 && (n = 1);
            s === void 0 && (s = true);
            var o = e.length;
            var l = 0;
            var h = 0;
            var u = [];
            var c = true;
            for (var f = 0; f < o; f++) {
                var d = e[f];
                if (typeof d == "string") d = {
                    url: d,
                    type: t,
                    size: 1,
                    priority: n
                };
                if (!d.size) d.size = 1;
                d.progress = 0;
                h += d.size;
                u.push(d);
                var g = r ? v.create(null, m, [d], false) : null;
                var p = i || r ? v.create(null, _, [d]) : null;
                this.load(d.url, p, g, d.type, d.priority || 1, s, d.group || a)
            }
            function _(e, t) {
                l++;
                e.progress = 1;
                if (!t) c = false;
                if (l === o && i) {
                    i.runWith(c)
                }
            }
            function m(e, t) {
                if (r != null) {
                    e.progress = t;
                    var i = 0;
                    for (var n = 0; n < u.length; n++) {
                        var s = u[n];
                        i += s.size * s.progress
                    }
                    var a = i / h;
                    r.runWith(a)
                }
            }
            return this
        };
        g.cacheRes = function(e, t) {
            Se.cacheRes(e, t)
        };
        g._resMap = {};
        l(g, ["createMap",
        function() {
            return this.createMap = {
                atlas: [null, "atlas"]
            }
        }]);
        g.__init$ = function() {
            f = function(e) {
                function t() {
                    this.url = null;
                    this.type = null;
                    this.cache = false;
                    this.group = null;
                    this.ignoreCache = false;
                    this.clas = null;
                    t.__super.call(this)
                }
                _(t, "", e);
                return t
            } (a)
        };
        return g
    } (a);
    var be = function(e) {
        function s(e) {
            s.__super.call(this);
            if (!e) {
                e = [.3, .59, .11, 0, 0, .3, .59, .11, 0, 0, .3, .59, .11, 0, 0, 0, 0, 0, 1, 0]
            }
            this._mat = new Float32Array(16);
            this._alpha = new Float32Array(4);
            var t = 0;
            var i = 0;
            for (var n = 0; n < 20; n++) {
                if (n % 5 != 4) {
                    this._mat[t++] = e[n]
                } else {
                    this._alpha[i++] = e[n]
                }
            }
            this._action = D.createFilterAction(32);
            this._action.data = this
        }
        _(s, "laya.filters.ColorFilter", e);
        var t = s.prototype;
        b.imps(t, {
            "laya.filters.IFilter": true
        });
        t.callNative = function(e) {
            var t = e._$P.cf = this;
            e.conchModel && e.conchModel.setFilterMatrix && e.conchModel.setFilterMatrix(this._mat, this._alpha)
        };
        u(0, t, "type",
        function() {
            return 32
        });
        u(0, t, "action",
        function() {
            return this._action
        });
        return s
    } (w);
    var we = function(e) {
        function n(e, t, i) {
            this._endian = null;
            this._stamp = NaN;
            this._socket = null;
            this._connected = false;
            this._addInputPosition = 0;
            this._input = null;
            this._output = null;
            this.timeout = 0;
            this.objectEncoding = 0;
            this.disableInput = false;
            this._byteClass = null;
            this.protocols = [];
            t === void 0 && (t = 0);
            n.__super.call(this);
            this._byteClass = i ? i: j;
            this.endian = "bigEndian";
            this.timeout = 2e4;
            this._addInputPosition = 0;
            if (e && t > 0 && t < 65535) this.connect(e, t)
        }
        _(n, "laya.net.Socket", e);
        var t = n.prototype;
        t.connect = function(e, t) {
            var i = "ws://" + e + ":" + t;
            if (Y.window.location.protocol == "https:") {
                i = "wss://" + e + ":" + t
            } else {
                i = "ws://" + e + ":" + t
            }
            this.connectByUrl(i)
        };
        t.connectByUrl = function(e) {
            var t = this;
            if (this._socket != null) this.close();
            this._socket && this.cleanSocket();
            if (!this.protocols || this.protocols.length == 0) {
                this._socket = new Y.window.WebSocket(e)
            } else {
                this._socket = new Y.window.WebSocket(e, this.protocols)
            }
            this._socket.binaryType = "arraybuffer";
            this._output = new this._byteClass;
            this._output.endian = this.endian;
            this._input = new this._byteClass;
            this._input.endian = this.endian;
            this._addInputPosition = 0;
            this._socket.onopen = function(e) {
                t._onOpen(e)
            };
            this._socket.onmessage = function(e) {
                t._onMessage(e)
            };
            this._socket.onclose = function(e) {
                t._onClose(e)
            };
            this._socket.onerror = function(e) {
                t._onError(e)
            }
        };
        t.cleanSocket = function() {
            try {
                this._socket.close()
            } catch(e) {}
            this._connected = false;
            this._socket.onopen = null;
            this._socket.onmessage = null;
            this._socket.onclose = null;
            this._socket.onerror = null;
            this._socket = null
        };
        t.close = function() {
            if (this._socket != null) {
                try {
                    this._socket.close()
                } catch(e) {}
            }
        };
        t._onOpen = function(e) {
            this._connected = true;
            this.event("open", e)
        };
        t._onMessage = function(e) {
            if (!e || !e.data) return;
            var t = e.data;
            if (this.disableInput && t) {
                this.event("message", t);
                return
            }
            if (this._input.length > 0 && this._input.bytesAvailable < 1) {
                this._input.clear();
                this._addInputPosition = 0
            }
            var i = this._input.pos; ! this._addInputPosition && (this._addInputPosition = 0);
            this._input.pos = this._addInputPosition;
            if (t) {
                if (typeof t == "string") {
                    this._input.writeUTFBytes(t)
                } else {
                    this._input.writeArrayBuffer(t)
                }
                this._addInputPosition = this._input.pos;
                this._input.pos = i
            }
            this.event("message", t)
        };
        t._onClose = function(e) {
            this._connected = false;
            this.event("close", e)
        };
        t._onError = function(e) {
            this.event("error", e)
        };
        t.send = function(e) {
            this._socket.send(e)
        };
        t.flush = function() {
            if (this._output && this._output.length > 0) {
                var t;
                try {
                    this._socket && this._socket.send(this._output.__getBuffer().slice(0, this._output.length))
                } catch(e) {
                    t = e
                }
                this._output.endian = this.endian;
                this._output.clear();
                if (t) this.event("error", t)
            }
        };
        u(0, t, "input",
        function() {
            return this._input
        });
        u(0, t, "output",
        function() {
            return this._output
        });
        u(0, t, "connected",
        function() {
            return this._connected
        });
        u(0, t, "endian",
        function() {
            return this._endian
        },
        function(e) {
            this._endian = e;
            if (this._input != null) this._input.endian = e;
            if (this._output != null) this._output.endian = e
        });
        n.LITTLE_ENDIAN = "littleEndian";
        n.BIG_ENDIAN = "bigEndian";
        return n
    } (a);
    var xe = function(e) {
        function s() {
            this.worker = null;
            s.__super.call(this);
            var t = this;
            this.worker = new Y.window.Worker(s.workerPath);
            this.worker.onmessage = function(e) {
                t.workerMessage(e.data)
            }
        }
        _(s, "laya.net.WorkerLoader", e);
        var t = s.prototype;
        t.workerMessage = function(e) {
            if (e) {
                switch (e.type) {
                case "Image":
                    this.imageLoaded(e);
                    break;
                case "Msg":
                    this.event("image_msg", e.msg);
                    break
                }
            }
        };
        t.imageLoaded = function(e) {
            if (e && e.buffer && e.buffer.length < 10) {
                s._enable = false;
                this._myTrace("buffer lost when postmessage ,disable workerloader");
                this.event(e.url, null);
                this.event("image_err", e.url + "\n" + e.msg);
                return
            }
            if (!e.dataType) {
                this.event(e.url, null);
                this.event("image_err", e.url + "\n" + e.msg);
                return
            }
            var t, i;
            var n;
            switch (e.dataType) {
            case "buffer":
                t = new Ne("2D");
                i = t.source.getContext("2d");
                n = i.createImageData(e.width, e.height);
                n.data.set(e.buffer);
                t.size(n.width, n.height);
                i.putImageData(n, 0, 0);
                t.memorySize = 0;
                break;
            case "imagedata":
                t = new Ne("2D");
                i = t.source.getContext("2d");
                n = e.imagedata;
                t.size(n.width, n.height);
                i.putImageData(n, 0, 0);
                n = e.imagedata;
                t.memorySize = 0;
                break;
            case "imageBitmap":
                n = e.imageBitmap;
                if (!O.isWebGL) {
                    t = new Ne("2D");
                    i = t.source.getContext("2d");
                    t.size(n.width, n.height);
                    i.drawImage(n, 0, 0);
                    t.src = e.url
                } else t = n;
                break
            }
            if (O.isWebGL) t = new laya.webgl.resource.WebGLImage(t, e.url);
            this.event(e.url, t)
        };
        t._myTrace = function(e) {
            var t = arguments;
            var i = [];
            var n = 0,
            s = t.length;
            for (n = 0; n < s; n++) {
                i.push(t[n])
            }
            this.event("image_msg", i.join(" "))
        };
        t.loadImage = function(e) {
            var t;
            t = {};
            t.type = "load";
            t.url = e;
            this.worker.postMessage(t)
        };
        t._loadImage = function(t) {
            var i = this;
            if (!s._enable || t.toLowerCase().indexOf(".png") < 0) {
                s._preLoadFun.call(i, t);
                return
            }
            t = F.formatURL(t);
            function n() {
                laya.net.WorkerLoader.I.off(t, i, e)
            }
            var e = function(e) {
                n();
                if (e) {
                    i["onLoaded"](e)
                } else {
                    s._preLoadFun.call(i, t)
                }
            };
            laya.net.WorkerLoader.I.on(t, i, e);
            laya.net.WorkerLoader.I.loadImage(t)
        };
        u(1, s, "enable",
        function() {
            return s._enable
        },
        function(e) {
            if (s.disableJSDecode && !Y.window.createImageBitmap) return;
            s._enable = e;
            if (s._enable && s._preLoadFun == null) s._enable = s.__init__()
        });
        s.__init__ = function() {
            if (s._preLoadFun != null) return false;
            if (!Y.window.Worker) return false;
            s._preLoadFun = Se["prototype"]["_loadImage"];
            Se["prototype"]["_loadImage"] = s["prototype"]["_loadImage"];
            if (!s.I) s.I = new s;
            return true
        };
        s.workerSupported = function() {
            return Y.window.Worker ? true: false
        };
        s.IMAGE_LOADED = "image_loaded";
        s.IMAGE_ERR = "image_err";
        s.IMAGE_MSG = "image_msg";
        s.I = null;
        s._preLoadFun = null;
        s._enable = false;
        s.workerPath = "libs/worker.js";
        s.disableJSDecode = true;
        return s
    } (a);
    var Re = function(e) {
        function o() {
            o.__super.call(this);
            this._$1__id = ++o._uniqueIDCounter;
            this.__loaded = true;
            this._destroyed = false;
            this._referenceCount = 0;
            o._idResourcesMap[this.id] = this;
            this._released = true;
            this.lock = false;
            this._memorySize = 0;
            this._lastUseFrameCount = -1;
            W.currentResourceManager && W.currentResourceManager.addResource(this)
        }
        _(o, "laya.resource.Resource", e);
        var t = o.prototype;
        b.imps(t, {
            "laya.resource.ICreateResource": true,
            "laya.resource.IDispose": true
        });
        t._setUrl = function(e) {
            if (this._url !== e) {
                var t;
                if (this._url) {
                    t = o._urlResourcesMap[this._url];
                    t.splice(t.indexOf(this), 1);
                    t.length === 0 && delete o._urlResourcesMap[this._url]
                }
                if (e) {
                    t = o._urlResourcesMap[e];
                    t || (o._urlResourcesMap[e] = t = []);
                    t.push(this)
                }
                this._url = e
            }
        };
        t._getGroup = function() {
            return this._group
        };
        t._setGroup = function(e) {
            if (this._group !== e) {
                var t;
                if (this._group) {
                    t = o._groupResourcesMap[this._group];
                    t.splice(t.indexOf(this), 1);
                    t.length === 0 && delete o._groupResourcesMap[this._group]
                }
                if (e) {
                    t = o._groupResourcesMap[e];
                    t || (o._groupResourcesMap[e] = t = []);
                    t.push(this)
                }
                this._group = e
            }
        };
        t._addReference = function() {
            this._referenceCount++
        };
        t._removeReference = function() {
            this._referenceCount--
        };
        t._clearReference = function() {
            this._referenceCount = 0
        };
        t._endLoaded = function() {
            this.__loaded = true;
            this.event("loaded", this)
        };
        t.recreateResource = function() {
            this.completeCreate()
        };
        t.disposeResource = function() {};
        t.activeResource = function(e) {
            e === void 0 && (e = false);
            this._lastUseFrameCount = re.loopCount;
            if (!this._destroyed && this.__loaded && (this._released || e)) this.recreateResource()
        };
        t.releaseResource = function(e) {
            e === void 0 && (e = false);
            if (!e && this.lock) return false;
            if (!this._released || e) {
                this.disposeResource();
                this._released = true;
                this._lastUseFrameCount = -1;
                this.event("released", this);
                return true
            } else {
                return false
            }
        };
        t.onAsynLoaded = function(e, t, i) {
            throw new Error("Resource: must override this function!")
        };
        t.destroy = function() {
            if (this._destroyed) return;
            if (this._resourceManager !== null) this._resourceManager.removeResource(this);
            this._destroyed = true;
            this.lock = false;
            this.releaseResource();
            delete o._idResourcesMap[this.id];
            var e;
            if (this._url) {
                e = o._urlResourcesMap[this._url];
                if (e) {
                    e.splice(e.indexOf(this), 1);
                    e.length === 0 && delete o._urlResourcesMap[this.url]
                }
                Se.clearRes(this._url);
                this.__loaded || D.cancelLoadByUrl(this._url)
            }
            if (this._group) {
                e = o._groupResourcesMap[this._group];
                e.splice(e.indexOf(this), 1);
                e.length === 0 && delete o._groupResourcesMap[this.url]
            }
        };
        t.completeCreate = function() {
            this._released = false;
            this.event("recovered", this)
        };
        t.dispose = function() {
            this.destroy()
        };
        u(0, t, "memorySize",
        function() {
            return this._memorySize
        },
        function(e) {
            var t = e - this._memorySize;
            this._memorySize = e;
            this.resourceManager && this.resourceManager.addSize(t)
        });
        u(0, t, "_loaded", null,
        function(e) {
            this.__loaded = e
        });
        u(0, t, "loaded",
        function() {
            return this.__loaded
        });
        u(0, t, "id",
        function() {
            return this._$1__id
        });
        u(0, t, "destroyed",
        function() {
            return this._destroyed
        });
        u(0, t, "group",
        function() {
            return this._getGroup()
        },
        function(e) {
            this._setGroup(e)
        });
        u(0, t, "resourceManager",
        function() {
            return this._resourceManager
        });
        u(0, t, "url",
        function() {
            return this._url
        });
        u(0, t, "released",
        function() {
            return this._released
        });
        u(0, t, "referenceCount",
        function() {
            return this._referenceCount
        });
        o.getResourceByID = function(e) {
            return o._idResourcesMap[e]
        };
        o.getResourceByURL = function(e, t) {
            t === void 0 && (t = 0);
            return o._urlResourcesMap[e][t]
        };
        o.getResourceCountByURL = function(e) {
            return o._urlResourcesMap[e].length
        };
        o.destroyUnusedResources = function(e) {
            var t;
            if (e) {
                var i = o._groupResourcesMap[e];
                if (i) {
                    var n = i.slice();
                    for (var s = 0,
                    a = n.length; s < a; s++) {
                        t = n[s];
                        if (!t.lock && t._referenceCount === 0) t.destroy()
                    }
                }
            } else {
                for (var r in o._idResourcesMap) {
                    t = o._idResourcesMap[r];
                    if (!t.lock && t._referenceCount === 0) t.destroy()
                }
            }
        };
        o._uniqueIDCounter = 0;
        o._idResourcesMap = {};
        o._urlResourcesMap = {};
        o._groupResourcesMap = {};
        return o
    } (a);
    var Le = function(e) {
        function R(e, t) {
            this.offsetX = 0;
            this.offsetY = 0;
            this.sourceWidth = 0;
            this.sourceHeight = 0;
            this._w = 0;
            this._h = 0;
            this._uvID = 0;
            this._atlasID = -1;
            this.scaleRate = 1;
            R.__super.call(this);
            if (e && e._addReference != null) {
                e._addReference()
            }
            this.setTo(e, t)
        }
        _(R, "laya.resource.Texture", e);
        var t = R.prototype;
        t._setUrl = function(e) {
            this.url = e
        };
        t.setTo = function(e, t) {
            if (e instanceof r.HTMLElement) {
                var i = Ne.create("2D", e);
                this.bitmap = i
            } else {
                this.bitmap = e
            }
            this.uv = t || R.DEF_UV;
            if (e) {
                this._w = e.width;
                this._h = e.height;
                this.sourceWidth = this.sourceWidth || this._w;
                this.sourceHeight = this.sourceHeight || this._h;
                this._loaded = this._w > 0;
                var n = this;
                if (this._loaded) {
                    D.addToAtlas && D.addToAtlas(n)
                } else {
                    var s = e;
                    if (s instanceof laya.resource.HTMLImage && s.image) s.image.addEventListener("load",
                    function(e) {
                        D.addToAtlas && D.addToAtlas(n)
                    },
                    false)
                }
            }
        };
        t.active = function() {
            if (this.bitmap) this.bitmap.activeResource()
        };
        t.destroy = function(e) {
            e === void 0 && (e = false);
            if (this.bitmap && this.bitmap.referenceCount > 0) {
                var t = this.bitmap;
                if (e) {
                    if (O.isConchApp && t.source && t.source.conchDestroy) {
                        this.bitmap.source.conchDestroy()
                    }
                    this.bitmap = null;
                    t.dispose();
                    t._clearReference()
                } else {
                    t._removeReference();
                    if (t.referenceCount == 0) {
                        if (O.isConchApp && t.source && t.source.conchDestroy) {
                            this.bitmap.source.conchDestroy()
                        }
                        this.bitmap = null;
                        t.dispose()
                    }
                }
                if (this.url && this === b.loader.getRes(this.url)) b.loader.clearRes(this.url, e);
                this._loaded = false
            }
        };
        t.load = function(e) {
            var t = this;
            this._loaded = false;
            e = F.customFormat(e);
            var i = this.bitmap || (this.bitmap = ze.create(e));
            if (i) i._addReference();
            var n = this;
            i.onload = function() {
                i.onload = null;
                n._loaded = true;
                t.sourceWidth = t._w = i.width;
                t.sourceHeight = t._h = i.height;
                n.event("loaded", this);
                D.addToAtlas && D.addToAtlas(n)
            }
        };
        t.addTextureToAtlas = function(e) {
            D.addTextureToAtlas(this)
        };
        t.getPixels = function(e, t, i, n) {
            if (O.isConchApp) {
                var s = this.bitmap;
                if (s.source && s.source.getImageData) {
                    var a = s.source.getImageData(e, t, i, n);
                    var r = new Uint8Array(a);
                    return Array.from(r)
                }
                return null
            } else if (O.isWebGL) {
                return D.getTexturePixels(this, e, t, i, n)
            } else {
                Y.canvas.size(i, n);
                Y.canvas.clear();
                Y.context.drawTexture(this, -e, -t, this.width, this.height, 0, 0);
                var o = Y.context.getImageData(0, 0, i, n)
            }
            return o.data
        };
        t.onAsynLoaded = function(e, t) {
            if (t) t._addReference();
            this.setTo(t, this.uv)
        };
        u(0, t, "source",
        function() {
            if (!this.bitmap) return null;
            this.bitmap.activeResource();
            return this.bitmap.source
        });
        u(0, t, "loaded",
        function() {
            return this._loaded
        });
        u(0, t, "released",
        function() {
            if (!this.bitmap) return true;
            return this.bitmap.released
        });
        u(0, t, "width",
        function() {
            if (this._w) return this._w;
            return this.uv && this.uv !== R.DEF_UV ? (this.uv[2] - this.uv[0]) * this.bitmap.width: this.bitmap.width
        },
        function(e) {
            this._w = e;
            this.sourceWidth || (this.sourceWidth = e)
        });
        u(0, t, "repeat",
        function() {
            if (O.isWebGL && this.bitmap) {
                return this.bitmap.repeat
            }
            return true
        },
        function(e) {
            if (e) {
                if (O.isWebGL && this.bitmap) {
                    this.bitmap.repeat = e;
                    if (e) {
                        this.bitmap.enableMerageInAtlas = false
                    }
                }
            }
        });
        u(0, t, "height",
        function() {
            if (this._h) return this._h;
            return this.uv && this.uv !== R.DEF_UV ? (this.uv[5] - this.uv[1]) * this.bitmap.height: this.bitmap.height
        },
        function(e) {
            this._h = e;
            this.sourceHeight || (this.sourceHeight = e)
        });
        u(0, t, "isLinearSampling",
        function() {
            return O.isWebGL ? this.bitmap.minFifter != 9728 : true
        },
        function(e) {
            if (!e && O.isWebGL) {
                if (!e && this.bitmap.minFifter == -1 && this.bitmap.magFifter == -1) {
                    this.bitmap.minFifter = 9728;
                    this.bitmap.magFifter = 9728;
                    this.bitmap.enableMerageInAtlas = false
                }
            }
        });
        R.moveUV = function(e, t, i) {
            for (var n = 0; n < 8; n += 2) {
                i[n] += e;
                i[n + 1] += t
            }
            return i
        };
        R.create = function(e, t, i, n, s, a, r, o, l) {
            a === void 0 && (a = 0);
            r === void 0 && (r = 0);
            o === void 0 && (o = 0);
            l === void 0 && (l = 0);
            var h = e instanceof laya.resource.Texture;
            var u = h ? e.uv: R.DEF_UV;
            var c = h ? e.bitmap: e;
            var f = D.isAtlas(c);
            if (f) {
                var d = c._atlaser;
                var g = e._atlasID;
                if (g == -1) {
                    throw new Error("create texture error")
                }
                c = d._inAtlasTextureBitmapValue[g];
                u = d._inAtlasTextureOriUVValue[g]
            }
            var p = new R(c, null);
            if (c.width && t + n > c.width) n = c.width - t;
            if (c.height && i + s > c.height) s = c.height - i;
            p.width = n;
            p.height = s;
            p.offsetX = a;
            p.offsetY = r;
            p.sourceWidth = o || n;
            p.sourceHeight = l || s;
            var _ = 1 / c.width;
            var m = 1 / c.height;
            t *= _;
            i *= m;
            n *= _;
            s *= m;
            var v = p.uv[0],
            y = p.uv[1],
            I = p.uv[4],
            S = p.uv[5];
            var C = I - v,
            b = S - y;
            var w = R.moveUV(u[0], u[1], [t, i, t + n, i, t + n, i + s, t, i + s]);
            p.uv = [v + w[0] * C, y + w[1] * b, I - (1 - w[2]) * C, y + w[3] * b, I - (1 - w[4]) * C, S - (1 - w[5]) * b, v + w[6] * C, S - (1 - w[7]) * b];
            if (f) {
                p.addTextureToAtlas()
            }
            var x = c.scaleRate;
            if (x && x != 1) {
                p.sourceWidth /= x;
                p.sourceHeight /= x;
                p.width /= x;
                p.height /= x;
                p.scaleRate = x;
                p.offsetX /= x;
                p.offsetY /= x
            } else {
                p.scaleRate = 1
            }
            return p
        };
        R.createFromTexture = function(e, t, i, n, s) {
            var a = e.scaleRate;
            if (a != 1) {
                t *= a;
                i *= a;
                n *= a;
                s *= a
            }
            var r = A.TEMP.setTo(t - e.offsetX, i - e.offsetY, n, s);
            var o = r.intersection(R._rect1.setTo(0, 0, e.width, e.height), R._rect2);
            if (o) var l = R.create(e, o.x, o.y, o.width, o.height, o.x - r.x, o.y - r.y, n, s);
            else return null;
            l.bitmap._removeReference();
            return l
        };
        R.DEF_UV = [0, 0, 1, 0, 1, 1, 0, 1];
        R.INV_UV = [0, 1, 1, 1, 1, 0, 0, 0];
        R._rect1 = new A;
        R._rect2 = new A;
        return R
    } (a);
    var Te = function(e) {
        var o;
        function a() {
            this._labelDic = null;
            this._tweenDic = {};
            this._tweenDataList = [];
            this._endTweenDataList = null;
            this._currTime = 0;
            this._lastTime = 0;
            this._startTime = 0;
            this._index = 0;
            this._gidIndex = 0;
            this._firstTweenDic = {};
            this._startTimeSort = false;
            this._endTimeSort = false;
            this._loopKey = false;
            this.scale = 1;
            this._frameRate = 60;
            this._frameIndex = 0;
            this._total = 0;
            a.__super.call(this)
        }
        _(a, "laya.utils.TimeLine", e);
        var t = a.prototype;
        t.to = function(e, t, i, n, s) {
            s === void 0 && (s = 0);
            return this._create(e, t, i, n, s, true)
        };
        t.from = function(e, t, i, n, s) {
            s === void 0 && (s = 0);
            return this._create(e, t, i, n, s, false)
        };
        t._create = function(e, t, i, n, s, a) {
            var r = se.getItemByClass("tweenData", o);
            r.isTo = a;
            r.type = 0;
            r.target = e;
            r.duration = i;
            r.data = t;
            r.startTime = this._startTime + s;
            r.endTime = r.startTime + r.duration;
            r.ease = n;
            this._startTime = Math.max(r.endTime, this._startTime);
            this._tweenDataList.push(r);
            this._startTimeSort = true;
            this._endTimeSort = true;
            return this
        };
        t.addLabel = function(e, t) {
            var i = se.getItemByClass("tweenData", o);
            i.type = 1;
            i.data = e;
            i.endTime = i.startTime = this._startTime + t;
            this._labelDic || (this._labelDic = {});
            this._labelDic[e] = i;
            this._tweenDataList.push(i);
            return this
        };
        t.removeLabel = function(e) {
            if (this._labelDic && this._labelDic[e]) {
                var t = this._labelDic[e];
                if (t) {
                    var i = this._tweenDataList.indexOf(t);
                    if (i > -1) {
                        this._tweenDataList.splice(i, 1)
                    }
                }
                delete this._labelDic[e]
            }
        };
        t.gotoTime = function(e) {
            if (this._tweenDataList == null || this._tweenDataList.length == 0) return;
            var t;
            var i;
            for (var n in this._firstTweenDic) {
                i = this._firstTweenDic[n];
                if (i) {
                    for (var s in i) {
                        if (i.diyTarget.hasOwnProperty(s)) {
                            i.diyTarget[s] = i[s]
                        }
                    }
                }
            }
            for (n in this._tweenDic) {
                t = this._tweenDic[n];
                t.clear();
                delete this._tweenDic[n]
            }
            this._index = 0;
            this._gidIndex = 0;
            this._currTime = e;
            this._lastTime = Y.now();
            var a;
            if (this._endTweenDataList == null || this._endTimeSort) {
                this._endTimeSort = false;
                this._endTweenDataList = a = this._tweenDataList.concat();
                function r(e, t) {
                    if (e.endTime > t.endTime) {
                        return 1
                    } else if (e.endTime < t.endTime) {
                        return - 1
                    } else {
                        return 0
                    }
                }
                a.sort(r)
            } else {
                a = this._endTweenDataList
            }
            var o;
            for (var l = 0,
            h = a.length; l < h; l++) {
                o = a[l];
                if (o.type == 0) {
                    if (e >= o.endTime) {
                        this._index = Math.max(this._index, l + 1);
                        var u = o.data;
                        if (o.isTo) {
                            for (var c in u) {
                                o.target[c] = u[c]
                            }
                        }
                    } else {
                        break
                    }
                }
            }
            for (l = 0, h = this._tweenDataList.length; l < h; l++) {
                o = this._tweenDataList[l];
                if (o.type == 0) {
                    if (e >= o.startTime && e < o.endTime) {
                        this._index = Math.max(this._index, l + 1);
                        this._gidIndex++;
                        t = se.getItemByClass("tween", he);
                        t._create(o.target, o.data, o.duration, o.ease, v.create(this, this._animComplete, [this._gidIndex]), 0, false, o.isTo, true, false);
                        t.setStartTime(this._currTime - (e - o.startTime));
                        t._updateEase(this._currTime);
                        t.gid = this._gidIndex;
                        this._tweenDic[this._gidIndex] = t
                    }
                }
            }
        };
        t.gotoLabel = function(e) {
            if (this._labelDic == null) return;
            var t = this._labelDic[e];
            if (t) this.gotoTime(t.startTime)
        };
        t.pause = function() {
            b.timer.clear(this, this._update)
        };
        t.resume = function() {
            this.play(this._currTime, this._loopKey)
        };
        t.play = function(e, t) {
            e === void 0 && (e = 0);
            t === void 0 && (t = false);
            if (!this._tweenDataList) return;
            if (this._startTimeSort) {
                this._startTimeSort = false;
                function i(e, t) {
                    if (e.startTime > t.startTime) {
                        return 1
                    } else if (e.startTime < t.startTime) {
                        return - 1
                    } else {
                        return 0
                    }
                }
                this._tweenDataList.sort(i);
                for (var n = 0,
                s = this._tweenDataList.length; n < s; n++) {
                    var a = this._tweenDataList[n];
                    if (a != null && a.type == 0) {
                        var r = a.target;
                        var o = r.$_GID || (r.$_GID = ue.getGID());
                        var l = null;
                        if (this._firstTweenDic[o] == null) {
                            l = {};
                            l.diyTarget = r;
                            this._firstTweenDic[o] = l
                        } else {
                            l = this._firstTweenDic[o]
                        }
                        for (var h in a.data) {
                            if (l[h] == null) {
                                l[h] = r[h]
                            }
                        }
                    }
                }
            }
            if (typeof e == "string") {
                this.gotoLabel(e)
            } else {
                this.gotoTime(e)
            }
            this._loopKey = t;
            this._lastTime = Y.now();
            b.timer.frameLoop(1, this, this._update)
        };
        t._update = function() {
            if (this._currTime >= this._startTime) {
                if (this._loopKey) {
                    this._complete();
                    if (!this._tweenDataList) return;
                    this.gotoTime(0)
                } else {
                    for (var e in this._tweenDic) {
                        s = this._tweenDic[e];
                        s.complete()
                    }
                    this._complete();
                    this.pause();
                    return
                }
            }
            var t = Y.now();
            var i = t - this._lastTime;
            var n = this._currTime += i * this.scale;
            this._lastTime = t;
            for (e in this._tweenDic) {
                s = this._tweenDic[e];
                s._updateEase(n)
            }
            var s;
            if (this._tweenDataList.length != 0 && this._index < this._tweenDataList.length) {
                var a = this._tweenDataList[this._index];
                if (n >= a.startTime) {
                    this._index++;
                    if (a.type == 0) {
                        this._gidIndex++;
                        s = se.getItemByClass("tween", he);
                        s._create(a.target, a.data, a.duration, a.ease, v.create(this, this._animComplete, [this._gidIndex]), 0, false, a.isTo, true, false);
                        s.setStartTime(n);
                        s.gid = this._gidIndex;
                        this._tweenDic[this._gidIndex] = s;
                        s._updateEase(n)
                    } else {
                        this.event("label", a.data)
                    }
                }
            }
        };
        t._animComplete = function(e) {
            var t = this._tweenDic[e];
            if (t) delete this._tweenDic[e]
        };
        t._complete = function() {
            this.event("complete")
        };
        t.reset = function() {
            var e;
            if (this._labelDic) {
                for (e in this._labelDic) {
                    delete this._labelDic[e]
                }
            }
            var t;
            for (e in this._tweenDic) {
                t = this._tweenDic[e];
                t.clear();
                delete this._tweenDic[e]
            }
            for (e in this._firstTweenDic) {
                delete this._firstTweenDic[e]
            }
            this._endTweenDataList = null;
            if (this._tweenDataList && this._tweenDataList.length) {
                var i = 0,
                n = 0;
                n = this._tweenDataList.length;
                for (i = 0; i < n; i++) {
                    if (this._tweenDataList[i]) this._tweenDataList[i].destroy()
                }
            }
            if (this._tweenDataList) {
                this._tweenDataList.length = 0
            }
            this._currTime = 0;
            this._lastTime = 0;
            this._startTime = 0;
            this._index = 0;
            this._gidIndex = 0;
            this.scale = 1;
            b.timer.clear(this, this._update)
        };
        t.destroy = function() {
            this.reset();
            this._labelDic = null;
            this._tweenDic = null;
            this._tweenDataList = null;
            this._firstTweenDic = null
        };
        u(0, t, "index",
        function() {
            return this._frameIndex
        },
        function(e) {
            this._frameIndex = e;
            this.gotoTime(this._frameIndex / this._frameRate * 1e3)
        });
        u(0, t, "total",
        function() {
            this._total = Math.floor(this._startTime / 1e3 * this._frameRate);
            return this._total
        });
        a.to = function(e, t, i, n, s) {
            s === void 0 && (s = 0);
            return (new a).to(e, t, i, n, s)
        };
        a.from = function(e, t, i, n, s) {
            s === void 0 && (s = 0);
            return (new a).from(e, t, i, n, s)
        };
        a.__init$ = function() {
            o = function() {
                function e() {
                    this.type = 0;
                    this.isTo = true;
                    this.startTime = NaN;
                    this.endTime = NaN;
                    this.target = null;
                    this.duration = NaN;
                    this.ease = null;
                    this.data = null
                }
                _(e, "");
                var t = e.prototype;
                t.destroy = function() {
                    this.target = null;
                    this.ease = null;
                    this.data = null;
                    this.isTo = true;
                    this.type = 0;
                    se.recover("tweenData", this)
                };
                return e
            } ()
        };
        return a
    } (a);
    var De = function(s) {
        function i() {
            this._transform = null;
            this._tfChanged = false;
            this._x = 0;
            this._y = 0;
            this._width = 0;
            this._height = 0;
            this._repaint = 1;
            this._mouseEnableState = 0;
            this._zOrder = 0;
            this._graphics = null;
            this._renderType = 0;
            this._optimizeScrollRect = false;
            this._texture = null;
            this.mouseThrough = false;
            this.autoSize = false;
            this.hitTestPrior = false;
            this.viewport = null;
            i.__super.call(this);
            this._style = o.EMPTY
        }
        _(i, "laya.display.Sprite", s);
        var e = i.prototype;
        b.imps(e, {
            "laya.display.ILayout": true
        });
        e.createConchModel = function() {
            return new ConchNode
        };
        e.destroy = function(e) {
            e === void 0 && (e = true);
            this._releaseMem();
            s.prototype.destroy.call(this, e);
            this._style && this._style.destroy();
            this._transform && this._transform.destroy();
            this._transform = null;
            this._style = null;
            this._graphics = null
        };
        e.updateZOrder = function() {
            ue.updateOrder(this._childs) && this.repaint()
        };
        e.reCache = function() {
            if (this._$P.cacheCanvas) this._$P.cacheCanvas.reCache = true;
            this._repaint = 1
        };
        e.setBounds = function(e) {
            this._set$P("uBounds", e)
        };
        e.getBounds = function() {
            if (!this._$P.mBounds) this._set$P("mBounds", new A);
            return A._getWrapRec(this._boundPointsToParent(), this._$P.mBounds)
        };
        e.getSelfBounds = function() {
            if (this._$P.uBounds) return this._$P.uBounds;
            if (!this._$P.mBounds) this._set$P("mBounds", new A);
            return A._getWrapRec(this._getBoundPointsM(false), this._$P.mBounds)
        };
        e._boundPointsToParent = function(e) {
            e === void 0 && (e = false);
            var t = 0,
            i = 0;
            if (this._style) {
                t = this._style._tf.translateX;
                i = this._style._tf.translateY;
                e = e || this._style._tf.rotate !== 0;
                if (this._style.scrollRect) {
                    t += this._style.scrollRect.x;
                    i += this._style.scrollRect.y
                }
            }
            var n = this._getBoundPointsM(e);
            if (!n || n.length < 1) return n;
            if (n.length != 8) {
                n = e ? k.scanPList(n) : A._getWrapRec(n, A.TEMP)._getBoundPoints()
            }
            if (!this.transform) {
                ue.transPointList(n, this._x - t, this._y - i);
                return n
            }
            var s = B.TEMP;
            var a = 0,
            r = n.length;
            for (a = 0; a < r; a += 2) {
                s.x = n[a];
                s.y = n[a + 1];
                this.toParentPoint(s);
                n[a] = s.x;
                n[a + 1] = s.y
            }
            return n
        };
        e.getGraphicBounds = function(e) {
            e === void 0 && (e = false);
            if (!this._graphics) return A.TEMP.setTo(0, 0, 0, 0);
            return this._graphics.getBounds(e)
        };
        e._getBoundPointsM = function(e) {
            e === void 0 && (e = false);
            if (this._$P.uBounds) return this._$P.uBounds._getBoundPoints();
            if (!this._$P.temBM) this._set$P("temBM", []);
            if (this.scrollRect) {
                var t = ue.clearArray(this._$P.temBM);
                var i = A.TEMP;
                i.copyFrom(this.scrollRect);
                ue.concatArray(t, i._getBoundPoints());
                return t
            }
            var n = this._graphics ? this._graphics.getBoundPoints() : ue.clearArray(this._$P.temBM);
            var s;
            var a;
            var r;
            r = this._childs;
            for (var o = 0,
            l = r.length; o < l; o++) {
                s = r[o];
                if (s instanceof laya.display.Sprite && s.visible == true) {
                    a = s._boundPointsToParent(e);
                    if (a) n = n ? ue.concatArray(n, a) : a
                }
            }
            return n
        };
        e.getStyle = function() {
            this._style === o.EMPTY && (this._style = new o);
            return this._style
        };
        e.setStyle = function(e) {
            this._style = e
        };
        e._adjustTransform = function() {
            this._tfChanged = false;
            var e = this._style;
            var t = e._tf;
            var i = t.scaleX,
            n = t.scaleY;
            var s;
            if (t.rotate || i !== 1 || n !== 1 || t.skewX || t.skewY) {
                s = this._transform || (this._transform = M.create());
                s.bTransform = true;
                var a = (t.rotate - t.skewX) * .0174532922222222;
                var r = (t.rotate + t.skewY) * .0174532922222222;
                var o = Math.cos(r);
                var l = Math.sin(r);
                var h = Math.sin(a);
                var u = Math.cos(a);
                s.a = i * o;
                s.b = i * l;
                s.c = -n * h;
                s.d = n * u;
                s.tx = s.ty = 0;
                return s
            } else {
                this._transform && this._transform.destroy();
                this._transform = null;
                this._renderType &= ~4
            }
            return s
        };
        e.pos = function(e, t, i) {
            i === void 0 && (i = false);
            if (this._x !== e || this._y !== t) {
                if (this.destroyed) return this;
                if (i) {
                    this._x = e;
                    this._y = t;
                    this.conchModel && this.conchModel.pos(this._x, this._y);
                    var n = this._parent;
                    if (n && n._repaint === 0) {
                        n._repaint = 1;
                        n.parentRepaint()
                    }
                    if (this._$P.maskParent && this._$P.maskParent._repaint === 0) {
                        this._$P.maskParent._repaint = 1;
                        this._$P.maskParent.parentRepaint()
                    }
                } else {
                    this.x = e;
                    this.y = t
                }
            }
            return this
        };
        e.pivot = function(e, t) {
            this.pivotX = e;
            this.pivotY = t;
            return this
        };
        e.size = function(e, t) {
            this.width = e;
            this.height = t;
            return this
        };
        e.scale = function(e, t, i) {
            i === void 0 && (i = false);
            var n = this.getStyle();
            var s = n._tf;
            if (s.scaleX != e || s.scaleY != t) {
                if (this.destroyed) return this;
                if (i) {
                    n.setScale(e, t);
                    this._tfChanged = true;
                    this.conchModel && this.conchModel.scale(e, t);
                    this._renderType |= 4;
                    var a = this._parent;
                    if (a && a._repaint === 0) {
                        a._repaint = 1;
                        a.parentRepaint()
                    }
                } else {
                    this.scaleX = e;
                    this.scaleY = t
                }
            }
            return this
        };
        e.skew = function(e, t) {
            this.skewX = e;
            this.skewY = t;
            return this
        };
        e.render = function(e, t, i) {
            re.spriteCount++;
            q.renders[this._renderType]._fun(this, e, t + this._x, i + this._y);
            this._repaint = 0
        };
        e.drawToCanvas = function(e, t, i, n) {
            if (O.isConchNode) {
                var s = Ne.create("2D");
                var a = new V(e, t, s);
                a.ctx.setCanvasType(1);
                this.conchModel.drawToCanvas(s.source, i, n);
                return s
            } else {
                return D.drawToCanvas(this, this._renderType, e, t, i, n)
            }
        };
        e.customRender = function(e, t, i) {
            this._renderType |= 1024
        };
        e._applyFilters = function() {
            if (O.isWebGL) return;
            var e;
            e = this._$P.filters;
            if (!e || e.length < 1) return;
            for (var t = 0,
            i = e.length; t < i; t++) {
                e[t].action.apply(this._$P.cacheCanvas)
            }
        };
        e._isHaveGlowFilter = function() {
            var e = 0,
            t = 0;
            if (this.filters) {
                for (e = 0; e < this.filters.length; e++) {
                    if (this.filters[e].type == 8) {
                        return true
                    }
                }
            }
            for (e = 0, t = this._childs.length; e < t; e++) {
                if (this._childs[e]._isHaveGlowFilter()) {
                    return true
                }
            }
            return false
        };
        e.localToGlobal = function(e, t) {
            t === void 0 && (t = false);
            if (t === true) {
                e = new B(e.x, e.y)
            }
            var i = this;
            while (i) {
                if (i == b.stage) break;
                e = i.toParentPoint(e);
                i = i.parent
            }
            return e
        };
        e.globalToLocal = function(e, t) {
            t === void 0 && (t = false);
            if (t) {
                e = new B(e.x, e.y)
            }
            var i = this;
            var n = [];
            while (i) {
                if (i == b.stage) break;
                n.push(i);
                i = i.parent
            }
            var s = n.length - 1;
            while (s >= 0) {
                i = n[s];
                e = i.fromParentPoint(e);
                s--
            }
            return e
        };
        e.toParentPoint = function(e) {
            if (!e) return e;
            e.x -= this.pivotX;
            e.y -= this.pivotY;
            if (this.transform) {
                this._transform.transformPoint(e)
            }
            e.x += this._x;
            e.y += this._y;
            var t = this._style.scrollRect;
            if (t) {
                e.x -= t.x;
                e.y -= t.y
            }
            return e
        };
        e.fromParentPoint = function(e) {
            if (!e) return e;
            e.x -= this._x;
            e.y -= this._y;
            var t = this._style.scrollRect;
            if (t) {
                e.x += t.x;
                e.y += t.y
            }
            if (this.transform) {
                this._transform.invertTransformPoint(e)
            }
            e.x += this.pivotX;
            e.y += this.pivotY;
            return e
        };
        e.on = function(e, t, i, n) {
            if (this._mouseEnableState !== 1 && this.isMouseEvent(e)) {
                this.mouseEnabled = true;
                this._setBit(2, true);
                if (this._parent) {
                    this._$2__onDisplay()
                }
                return this._createListener(e, t, i, n, false)
            }
            return s.prototype.on.call(this, e, t, i, n)
        };
        e.once = function(e, t, i, n) {
            if (this._mouseEnableState !== 1 && this.isMouseEvent(e)) {
                this.mouseEnabled = true;
                this._setBit(2, true);
                if (this._parent) {
                    this._$2__onDisplay()
                }
                return this._createListener(e, t, i, n, true)
            }
            return s.prototype.once.call(this, e, t, i, n)
        };
        e._$2__onDisplay = function() {
            if (this._mouseEnableState !== 1) {
                var e = this;
                e = e.parent;
                while (e && e._mouseEnableState !== 1) {
                    if (e._getBit(2)) break;
                    e.mouseEnabled = true;
                    e._setBit(2, true);
                    e = e.parent
                }
            }
        };
        e.loadImage = function(e, t, i, n, s, a) {
            var r = this;
            t === void 0 && (t = 0);
            i === void 0 && (i = 0);
            n === void 0 && (n = 0);
            s === void 0 && (s = 0);
            function o(e) {
                if (!r.destroyed) {
                    r.size(t + (n || e.width), i + (s || e.height));
                    r.repaint();
                    a && a.runWith(e)
                }
            }
            this.graphics.loadImage(e, t, i, n, s, o);
            return this
        };
        e.repaint = function() {
            this.conchModel && this.conchModel.repaint && this.conchModel.repaint();
            if (this._repaint === 0) {
                this._repaint = 1;
                this.parentRepaint()
            }
            if (this._$P && this._$P.maskParent) {
                this._$P.maskParent.repaint()
            }
        };
        e._needRepaint = function() {
            return this._repaint !== 0 && this._$P.cacheCanvas && this._$P.cacheCanvas.reCache
        };
        e._childChanged = function(e) {
            if (this._childs.length) this._renderType |= 2048;
            else this._renderType &= ~2048;
            if (e && this._get$P("hasZorder")) b.timer.callLater(this, this.updateZOrder);
            this.repaint()
        };
        e.parentRepaint = function() {
            var e = this._parent;
            if (e && e._repaint === 0) {
                e._repaint = 1;
                e.parentRepaint()
            }
        };
        e.startDrag = function(e, t, i, n, s, a, r) {
            t === void 0 && (t = false);
            i === void 0 && (i = 0);
            n === void 0 && (n = 300);
            a === void 0 && (a = false);
            r === void 0 && (r = .92);
            this._$P.dragging || this._set$P("dragging", new Q);
            this._$P.dragging.start(this, e, t, i, n, s, a, r)
        };
        e.stopDrag = function() {
            this._$P.dragging && this._$P.dragging.stop()
        };
        e._releaseMem = function() {
            if (!this._$P) return;
            var e = this._$P.cacheCanvas;
            if (e && e.ctx) {
                se.recover("RenderContext", e.ctx);
                e.ctx.canvas.size(0, 0);
                e.ctx = null
            }
            var t = this._$P._filterCache;
            if (t) {
                t.destroy();
                t.recycle();
                this._set$P("_filterCache", null)
            }
            this._$P._isHaveGlowFilter && this._set$P("_isHaveGlowFilter", false);
            this._$P._isHaveGlowFilter = null
        };
        e._setDisplay = function(e) {
            if (!e) this._releaseMem();
            s.prototype._setDisplay.call(this, e)
        };
        e.hitTestPoint = function(e, t) {
            var i = this.globalToLocal(B.TEMP.setTo(e, t));
            e = i.x;
            t = i.y;
            var n = this._$P.hitArea ? this._$P.hitArea: this._width > 0 && this._height > 0 ? A.TEMP.setTo(0, 0, this._width, this._height) : this.getSelfBounds();
            return n.contains(e, t)
        };
        e.getMousePoint = function() {
            return this.globalToLocal(B.TEMP.setTo(b.stage.mouseX, b.stage.mouseY))
        };
        e._getWords = function() {
            return null
        };
        e._addChildsToLayout = function(n) {
            var e = this._getWords();
            if (e == null && this._childs.length == 0) return false;
            if (e) {
                for (var t = 0,
                i = e.length; t < i; t++) {
                    n.push(e[t])
                }
            }
            this._childs.forEach(function(e, t, i) {
                e._style._enableLayout() && e._addToLayout(n)
            });
            return true
        };
        e._addToLayout = function(e) {
            if (this._style.absolute) return;
            this._style.block ? e.push(this) : this._addChildsToLayout(e) && (this.x = this.y = 0)
        };
        e._isChar = function() {
            return false
        };
        e._getCSSStyle = function() {
            return this._style.getCSSStyle()
        };
        e._setAttributes = function(e, t) {
            switch (e) {
            case "x":
                this.x = parseFloat(t);
                break;
            case "y":
                this.y = parseFloat(t);
                break;
            case "width":
                this.width = parseFloat(t);
                break;
            case "height":
                this.height = parseFloat(t);
                break;
            default:
                this[e] = t
            }
        };
        e._layoutLater = function() {
            this.parent && this.parent._layoutLater()
        };
        u(0, e, "optimizeScrollRect",
        function() {
            return this._optimizeScrollRect
        },
        function(e) {
            if (this._optimizeScrollRect != e) {
                this._optimizeScrollRect = e;
                this.conchModel && this.conchModel.optimizeScrollRect(e)
            }
        });
        u(0, e, "customRenderEnable", null,
        function(e) {
            if (e) {
                this._renderType |= 1024;
                if (O.isConchNode) {
                    i.CustomList.push(this);
                    var t = new Ne("2d");
                    t._setContext(new CanvasRenderingContext2D);
                    this.customContext = new V(0, 0, t);
                    t.context.setCanvasType && t.context.setCanvasType(2);
                    this.conchModel.custom(t.context)
                }
            }
        });
        u(0, e, "cacheAsBitmap",
        function() {
            return this.cacheAs !== "none"
        },
        function(e) {
            this.cacheAs = e ? this._$P["hasFilter"] ? "none": "normal": "none"
        });
        u(0, e, "cacheAs",
        function() {
            return this._$P.cacheCanvas == null ? "none": this._$P.cacheCanvas.type
        },
        function(e) {
            var t = this._$P.cacheCanvas;
            if (e === (t ? t.type: "none")) return;
            if (e !== "none") {
                if (!this._getBit(1)) this._setUpNoticeType(1);
                t || (t = this._set$P("cacheCanvas", se.getItemByClass("cacheCanvas", Object)));
                t.type = e;
                t.reCache = true;
                this._renderType |= 16;
                if (e == "bitmap") this.conchModel && this.conchModel.cacheAs(1);
                this._set$P("cacheForFilters", false)
            } else {
                if (this._$P["_mask"]) {} else if (this._$P["hasFilter"]) {
                    this._set$P("cacheForFilters", true)
                } else {
                    if (t) {
                        var i = t;
                        if (i && i.ctx) {
                            se.recover("RenderContext", i.ctx);
                            i.ctx.canvas.size(0, 0);
                            i.ctx = null
                        }
                        se.recover("cacheCanvas", t)
                    }
                    this._$P.cacheCanvas = null;
                    this._renderType &= ~16;
                    this.conchModel && this.conchModel.cacheAs(0)
                }
            }
            this.repaint()
        });
        u(0, e, "zOrder",
        function() {
            return this._zOrder
        },
        function(e) {
            if (this._zOrder != e) {
                this._zOrder = e;
                this.conchModel && this.conchModel.setZOrder && this.conchModel.setZOrder(e);
                if (this._parent) {
                    e && this._parent._set$P("hasZorder", true);
                    b.timer.callLater(this._parent, this.updateZOrder)
                }
            }
        });
        u(0, e, "rotation",
        function() {
            return this._style._tf.rotate
        },
        function(e) {
            var t = this.getStyle();
            if (t._tf.rotate !== e) {
                t.setRotate(e);
                this._tfChanged = true;
                this.conchModel && this.conchModel.rotate(e);
                this._renderType |= 4;
                var i = this._parent;
                if (i && i._repaint === 0) {
                    i._repaint = 1;
                    i.parentRepaint()
                }
            }
        });
        u(0, e, "width",
        function() {
            if (!this.autoSize) return this._width;
            return this.getSelfBounds().width
        },
        function(e) {
            if (this._width !== e) {
                this._width = e;
                this.conchModel && this.conchModel.size(e, this._height);
                this.repaint()
            }
        });
        u(0, e, "x",
        function() {
            return this._x
        },
        function(e) {
            if (this._x !== e) {
                if (this.destroyed) return;
                this._x = e;
                this.conchModel && this.conchModel.pos(e, this._y);
                var t = this._parent;
                if (t && t._repaint === 0) {
                    t._repaint = 1;
                    t.parentRepaint()
                }
                if (this._$P.maskParent && this._$P.maskParent._repaint === 0) {
                    this._$P.maskParent._repaint = 1;
                    this._$P.maskParent.parentRepaint()
                }
            }
        });
        u(0, e, "globalScaleY",
        function() {
            var e = 1;
            var t = this;
            while (t) {
                if (t === b.stage) break;
                e *= t.scaleY;
                t = t.parent
            }
            return e
        });
        u(0, e, "hitArea",
        function() {
            return this._$P.hitArea
        },
        function(e) {
            this._set$P("hitArea", e)
        });
        u(0, e, "staticCache",
        function() {
            return this._$P.staticCache
        },
        function(e) {
            this._set$P("staticCache", e);
            if (!e) this.reCache()
        });
        u(0, e, "texture",
        function() {
            return this._texture
        },
        function(e) {
            if (this._texture != e) {
                this._texture = e;
                this.graphics.cleanByTexture(e, 0, 0)
            }
        });
        u(0, e, "y",
        function() {
            return this._y
        },
        function(e) {
            if (this._y !== e) {
                if (this.destroyed) return;
                this._y = e;
                this.conchModel && this.conchModel.pos(this._x, e);
                var t = this._parent;
                if (t && t._repaint === 0) {
                    t._repaint = 1;
                    t.parentRepaint()
                }
                if (this._$P.maskParent && this._$P.maskParent._repaint === 0) {
                    this._$P.maskParent._repaint = 1;
                    this._$P.maskParent.parentRepaint()
                }
            }
        });
        u(0, e, "height",
        function() {
            if (!this.autoSize) return this._height;
            return this.getSelfBounds().height
        },
        function(e) {
            if (this._height !== e) {
                this._height = e;
                this.conchModel && this.conchModel.size(this._width, e);
                this.repaint()
            }
        });
        u(0, e, "blendMode",
        function() {
            return this._style.blendMode
        },
        function(e) {
            this.getStyle().blendMode = e;
            this.conchModel && this.conchModel.blendMode(e);
            if (e && e != "source-over") this._renderType |= 8;
            else this._renderType &= ~8;
            this.parentRepaint()
        });
        u(0, e, "scaleX",
        function() {
            return this._style._tf.scaleX
        },
        function(e) {
            var t = this.getStyle();
            if (t._tf.scaleX !== e) {
                t.setScaleX(e);
                this._tfChanged = true;
                this.conchModel && this.conchModel.scale(e, t._tf.scaleY);
                this._renderType |= 4;
                var i = this._parent;
                if (i && i._repaint === 0) {
                    i._repaint = 1;
                    i.parentRepaint()
                }
            }
        });
        u(0, e, "scaleY",
        function() {
            return this._style._tf.scaleY
        },
        function(e) {
            var t = this.getStyle();
            if (t._tf.scaleY !== e) {
                t.setScaleY(e);
                this._tfChanged = true;
                this.conchModel && this.conchModel.scale(t._tf.scaleX, e);
                this._renderType |= 4;
                var i = this._parent;
                if (i && i._repaint === 0) {
                    i._repaint = 1;
                    i.parentRepaint()
                }
            }
        });
        u(0, e, "stage",
        function() {
            return b.stage
        });
        u(0, e, "skewX",
        function() {
            return this._style._tf.skewX
        },
        function(e) {
            var t = this.getStyle();
            if (t._tf.skewX !== e) {
                t.setSkewX(e);
                this._tfChanged = true;
                this.conchModel && this.conchModel.skew(e, t._tf.skewY);
                this._renderType |= 4;
                var i = this._parent;
                if (i && i._repaint === 0) {
                    i._repaint = 1;
                    i.parentRepaint()
                }
            }
        });
        u(0, e, "scrollRect",
        function() {
            return this._style.scrollRect
        },
        function(e) {
            this.getStyle().scrollRect = e;
            this.repaint();
            if (e) {
                this._renderType |= 128;
                this.conchModel && this.conchModel.scrollRect(e.x, e.y, e.width, e.height)
            } else {
                this._renderType &= ~128;
                if (this.conchModel) {
                    if (i.RUNTIMEVERION < "0.9.1") this.conchModel.removeType(64);
                    else this.conchModel.removeType(128)
                }
            }
        });
        u(0, e, "skewY",
        function() {
            return this._style._tf.skewY
        },
        function(e) {
            var t = this.getStyle();
            if (t._tf.skewY !== e) {
                t.setSkewY(e);
                this._tfChanged = true;
                this.conchModel && this.conchModel.skew(t._tf.skewX, e);
                this._renderType |= 4;
                var i = this._parent;
                if (i && i._repaint === 0) {
                    i._repaint = 1;
                    i.parentRepaint()
                }
            }
        });
        u(0, e, "transform",
        function() {
            return this._tfChanged ? this._adjustTransform() : this._transform
        },
        function(e) {
            this._tfChanged = false;
            this._transform = e;
            if (e) {
                this._x = e.tx;
                this._y = e.ty;
                e.tx = e.ty = 0;
                this.conchModel && this.conchModel.transform(e.a, e.b, e.c, e.d, this._x, this._y)
            }
            if (e) this._renderType |= 4;
            else {
                this._renderType &= ~4;
                this.conchModel && this.conchModel.removeType(4)
            }
            this.parentRepaint()
        });
        u(0, e, "pivotX",
        function() {
            return this._style._tf.translateX
        },
        function(e) {
            this.getStyle().setTranslateX(e);
            this.conchModel && this.conchModel.pivot(e, this._style._tf.translateY);
            this.repaint()
        });
        u(0, e, "pivotY",
        function() {
            return this._style._tf.translateY
        },
        function(e) {
            this.getStyle().setTranslateY(e);
            this.conchModel && this.conchModel.pivot(this._style._tf.translateX, e);
            this.repaint()
        });
        u(0, e, "alpha",
        function() {
            return this._style.alpha
        },
        function(e) {
            if (this._style && this._style.alpha !== e) {
                e = e < 0 ? 0 : e > 1 ? 1 : e;
                this.getStyle().alpha = e;
                this.conchModel && this.conchModel.alpha(e);
                if (e !== 1) this._renderType |= 2;
                else this._renderType &= ~2;
                this.parentRepaint()
            }
        });
        u(0, e, "visible",
        function() {
            return this._style.visible
        },
        function(e) {
            if (this._style && this._style.visible !== e) {
                this.getStyle().visible = e;
                this.conchModel && this.conchModel.visible(e);
                this.parentRepaint()
            }
        });
        u(0, e, "graphics",
        function() {
            return this._graphics || (this.graphics = D.createGraphics())
        },
        function(e) {
            if (this._graphics) this._graphics._sp = null;
            this._graphics = e;
            if (e) {
                this._renderType &= ~1;
                this._renderType |= 512;
                e._sp = this;
                this.conchModel && this.conchModel.graphics(this._graphics)
            } else {
                this._renderType &= ~512;
                this._renderType &= ~1;
                if (this.conchModel) {
                    if (i.RUNTIMEVERION < "0.9.1") this.conchModel.removeType(256);
                    else this.conchModel.removeType(512)
                }
            }
            this.repaint()
        });
        u(0, e, "filters",
        function() {
            return this._$P.filters
        },
        function(e) {
            e && e.length === 0 && (e = null);
            if (this._$P.filters == e) return;
            this._set$P("filters", e ? e.slice() : null);
            if (O.isConchApp) {
                if (this.conchModel) {
                    if (i.RUNTIMEVERION < "0.9.1") this.conchModel.removeType(16);
                    else this.conchModel.removeType(32)
                }
                if (this._$P.filters && this._$P.filters.length == 1) {
                    this._$P.filters[0].callNative(this)
                }
            }
            if (O.isWebGL) {
                if (e && e.length) {
                    this._renderType |= 32
                } else {
                    this._renderType &= ~32
                }
            }
            if (e && e.length > 0) {
                if (!this._getBit(1)) this._setUpNoticeType(1);
                if (! (O.isWebGL && e.length == 1 && e[0] instanceof laya.filters.ColorFilter)) {
                    if (this.cacheAs != "bitmap") {
                        if (!O.isConchNode) this.cacheAs = "bitmap";
                        this._set$P("cacheForFilters", true)
                    }
                    this._set$P("hasFilter", true)
                }
            } else {
                this._set$P("hasFilter", false);
                if (this._$P["cacheForFilters"] && this.cacheAs == "bitmap") {
                    this.cacheAs = "none"
                }
            }
            this.repaint()
        });
        u(0, e, "parent", s.prototype._$get_parent,
        function(e) {
            b.superSet(ge, this, "parent", e);
            if (e && this._getBit(2)) {
                this._$2__onDisplay()
            }
        });
        u(0, e, "mask",
        function() {
            return this._$P._mask
        },
        function(e) {
            if (e && this.mask && this.mask._$P.maskParent) return;
            if (e) {
                this.cacheAs = "bitmap";
                this._set$P("_mask", e);
                e._set$P("maskParent", this)
            } else {
                this.mask && this.mask._set$P("maskParent", null);
                this._set$P("_mask", e);
                this.cacheAs = "none"
            }
            this.conchModel && this.conchModel.mask(e ? e.conchModel: null);
            this._renderType |= 64;
            this.parentRepaint()
        });
        u(0, e, "mouseEnabled",
        function() {
            return this._mouseEnableState > 1
        },
        function(e) {
            this._mouseEnableState = e ? 2 : 1
        });
        u(0, e, "globalScaleX",
        function() {
            var e = 1;
            var t = this;
            while (t) {
                if (t === b.stage) break;
                e *= t.scaleX;
                t = t.parent
            }
            return e
        });
        u(0, e, "mouseX",
        function() {
            return this.getMousePoint().x
        });
        u(0, e, "mouseY",
        function() {
            return this.getMousePoint().y
        });
        i.fromImage = function(e) {
            return (new i).loadImage(e)
        };
        i.CustomList = [];
        l(i, ["RUNTIMEVERION",
        function() {
            return this.RUNTIMEVERION = r.conch ? conchConfig.getRuntimeVersion().substr(conchConfig.getRuntimeVersion().lastIndexOf("-") + 1) : ""
        }]);
        return i
    } (ge);
    var ke = function(e) {
        function t(e) {
            this._audio = null;
            this._onEnd = null;
            this._resumePlay = null;
            t.__super.call(this);
            this._onEnd = ue.bind(this.__onEnd, this);
            this._resumePlay = ue.bind(this.__resumePlay, this);
            e.addEventListener("ended", this._onEnd);
            this._audio = e
        }
        _(t, "laya.media.h5audio.AudioSoundChannel", e);
        var i = t.prototype;
        i.__onEnd = function() {
            if (this.loops == 1) {
                if (this.completeHandler) {
                    b.timer.once(10, this, this.__runComplete, [this.completeHandler], false);
                    this.completeHandler = null
                }
                this.stop();
                this.event("complete");
                return
            }
            if (this.loops > 0) {
                this.loops--
            }
            this.startTime = 0;
            this.play()
        };
        i.__resumePlay = function() {
            if (this._audio) this._audio.removeEventListener("canplay", this._resumePlay);
            if (this.isStopped) return;
            try {
                this._audio.currentTime = this.startTime;
                Y.container.appendChild(this._audio);
                this._audio.play()
            } catch(e) {
                this.event("error")
            }
        };
        i.play = function() {
            this.isStopped = false;
            if (!this._audio) return;
            try {
                this._audio.playbackRate = P.playbackRate;
                this._audio.currentTime = this.startTime
            } catch(e) {
                this._audio.addEventListener("canplay", this._resumePlay);
                return
            }
            P.addChannel(this);
            Y.container.appendChild(this._audio);
            if ("play" in this._audio) this._audio.play()
        };
        i.stop = function() {
            this.isStopped = true;
            P.removeChannel(this);
            this.completeHandler = null;
            if (!this._audio) return;
            if ("pause" in this._audio) if (O.isConchApp) {
                this._audio.stop()
            }
            this._audio.pause();
            this._audio.removeEventListener("ended", this._onEnd);
            this._audio.removeEventListener("canplay", this._resumePlay);
            if (!Y.onIE) {
                if (this._audio != _e._musicAudio) {
                    se.recover("audio:" + this.url, this._audio)
                }
            }
            Y.removeElement(this._audio);
            this._audio = null
        };
        i.pause = function() {
            this.isStopped = true;
            P.removeChannel(this);
            if ("pause" in this._audio) this._audio.pause()
        };
        i.resume = function() {
            if (!this._audio) return;
            this.isStopped = false;
            P.addChannel(this);
            if ("play" in this._audio) this._audio.play()
        };
        u(0, i, "position",
        function() {
            if (!this._audio) return 0;
            return this._audio.currentTime
        });
        u(0, i, "duration",
        function() {
            if (!this._audio) return 0;
            return this._audio.duration
        });
        u(0, i, "volume",
        function() {
            if (!this._audio) return 1;
            return this._audio.volume
        },
        function(e) {
            if (!this._audio) return;
            this._audio.volume = e
        });
        return t
    } (me);
    var Ge = function(e) {
        function t() {
            this.audioBuffer = null;
            this.gain = null;
            this.bufferSource = null;
            this._currentTime = 0;
            this._volume = 1;
            this._startTime = 0;
            this._pauseTime = 0;
            this._onPlayEnd = null;
            this.context = ye.ctx;
            t.__super.call(this);
            this._onPlayEnd = ue.bind(this.__onPlayEnd, this);
            if (this.context["createGain"]) {
                this.gain = this.context["createGain"]()
            } else {
                this.gain = this.context["createGainNode"]()
            }
        }
        _(t, "laya.media.webaudio.WebAudioSoundChannel", e);
        var i = t.prototype;
        i.play = function() {
            P.addChannel(this);
            this.isStopped = false;
            this._clearBufferSource();
            if (!this.audioBuffer) return;
            var e = this.context;
            var t = this.gain;
            var i = e.createBufferSource();
            this.bufferSource = i;
            i.buffer = this.audioBuffer;
            i.connect(t);
            if (t) t.disconnect();
            t.connect(e.destination);
            i.onended = this._onPlayEnd;
            if (this.startTime >= this.duration) this.startTime = 0;
            this._startTime = Y.now();
            if (this.gain.gain.setTargetAtTime) {
                this.gain.gain.setTargetAtTime(this._volume, this.context.currentTime, .001)
            } else this.gain.gain.value = this._volume;
            if (this.loops == 0) {
                i.loop = true
            }
            if (i.playbackRate.setTargetAtTime) {
                i.playbackRate.setTargetAtTime(P.playbackRate, this.context.currentTime, .001)
            } else i.playbackRate.value = P.playbackRate;
            i.start(0, this.startTime);
            this._currentTime = 0
        };
        i.__onPlayEnd = function() {
            if (this.loops == 1) {
                if (this.completeHandler) {
                    b.timer.once(10, this, this.__runComplete, [this.completeHandler], false);
                    this.completeHandler = null
                }
                this.stop();
                this.event("complete");
                return
            }
            if (this.loops > 0) {
                this.loops--
            }
            this.startTime = 0;
            this.play()
        };
        i._clearBufferSource = function() {
            if (this.bufferSource) {
                var e = this.bufferSource;
                if (e.stop) {
                    e.stop(0)
                } else {
                    e.noteOff(0)
                }
                e.disconnect(0);
                e.onended = null;
                if (!t._tryCleanFailed) this._tryClearBuffer(e);
                this.bufferSource = null
            }
        };
        i._tryClearBuffer = function(e) {
            if (!Y.onMac) {
                try {
                    e.buffer = null
                } catch(e) {
                    t._tryCleanFailed = true
                }
                return
            }
            try {
                e.buffer = ye._miniBuffer
            } catch(e) {
                t._tryCleanFailed = true
            }
        };
        i.stop = function() {
            this._clearBufferSource();
            this.audioBuffer = null;
            if (this.gain) this.gain.disconnect();
            this.isStopped = true;
            P.removeChannel(this);
            this.completeHandler = null;
            if (P.autoReleaseSound) b.timer.once(5e3, null, P.disposeSoundIfNotUsed, [this.url], false)
        };
        i.pause = function() {
            if (!this.isStopped) {
                this._pauseTime = this.position
            }
            this._clearBufferSource();
            if (this.gain) this.gain.disconnect();
            this.isStopped = true;
            P.removeChannel(this);
            if (P.autoReleaseSound) b.timer.once(5e3, null, P.disposeSoundIfNotUsed, [this.url], false)
        };
        i.resume = function() {
            this.startTime = this._pauseTime;
            this.play()
        };
        u(0, i, "position",
        function() {
            if (this.bufferSource) {
                return (Y.now() - this._startTime) / 1e3 + this.startTime
            }
            return 0
        });
        u(0, i, "duration",
        function() {
            if (this.audioBuffer) {
                return this.audioBuffer.duration
            }
            return 0
        });
        u(0, i, "volume",
        function() {
            return this._volume
        },
        function(e) {
            if (this.isStopped) {
                return
            }
            this._volume = e;
            if (this.gain.gain.setTargetAtTime) {
                this.gain.gain.setTargetAtTime(e, this.context.currentTime, .001)
            } else this.gain.gain.value = e
        });
        t._tryCleanFailed = false;
        t.SetTargetDelay = .001;
        return t
    } (me);
    var Me = function(e) {
        function t() {
            t.__super.call(this);
            this._w = 0;
            this._h = 0
        }
        _(t, "laya.resource.Bitmap", e);
        var i = t.prototype;
        u(0, i, "width",
        function() {
            return this._w
        });
        u(0, i, "height",
        function() {
            return this._h
        });
        u(0, i, "source",
        function() {
            return this._source
        });
        return t
    } (Re);
    var Be = function(t) {
        function e() {
            this.loop = false;
            this.wrapMode = 0;
            this._index = 0;
            this._count = 0;
            this._isPlaying = false;
            this._labels = null;
            this._isReverse = false;
            this._frameRateChanged = false;
            this._controlNode = null;
            this._actionName = null;
            e.__super.call(this);
            this._interval = m.animationInterval;
            this._setUpNoticeType(1)
        }
        _(e, "laya.display.AnimationPlayerBase", t);
        var i = e.prototype;
        i.play = function(e, t, i, n) {
            e === void 0 && (e = 0);
            t === void 0 && (t = true);
            i === void 0 && (i = "");
            n === void 0 && (n = true);
            this._isPlaying = true;
            this.index = typeof e == "string" ? this._getFrameByLabel(e) : e;
            this.loop = t;
            this._actionName = i;
            this._isReverse = this.wrapMode == 1;
            if (this.interval > 0) {
                this.timerLoop(this.interval, this, this._frameLoop, null, true, true)
            }
        };
        i._getFrameByLabel = function(e) {
            var t = 0;
            for (t = 0; t < this._count; t++) {
                if (this._labels[t] && this._labels[t].indexOf(e) >= 0) return t
            }
            return 0
        };
        i._frameLoop = function() {
            if (this._isReverse) {
                this._index--;
                if (this._index < 0) {
                    if (this.loop) {
                        if (this.wrapMode == 2) {
                            this._index = this._count > 0 ? 1 : 0;
                            this._isReverse = false
                        } else {
                            this._index = this._count - 1
                        }
                        this.event("complete")
                    } else {
                        this._index = 0;
                        this.stop();
                        this.event("complete");
                        return
                    }
                }
            } else {
                this._index++;
                if (this._index >= this._count) {
                    if (this.loop) {
                        if (this.wrapMode == 2) {
                            this._index = this._count - 2 >= 0 ? this._count - 2 : 0;
                            this._isReverse = true
                        } else {
                            this._index = 0
                        }
                        this.event("complete")
                    } else {
                        this._index--;
                        this.stop();
                        this.event("complete");
                        return
                    }
                }
            }
            this.index = this._index
        };
        i._setControlNode = function(e) {
            if (this._controlNode) {
                this._controlNode.off("display", this, this._checkResumePlaying);
                this._controlNode.off("undisplay", this, this._checkResumePlaying)
            }
            this._controlNode = e;
            if (e && e != this) {
                e.on("display", this, this._checkResumePlaying);
                e.on("undisplay", this, this._checkResumePlaying)
            }
        };
        i._setDisplay = function(e) {
            t.prototype._setDisplay.call(this, e);
            this._checkResumePlaying()
        };
        i._checkResumePlaying = function() {
            if (this._isPlaying) {
                if (this._controlNode.displayedInStage) this.play(this._index, this.loop, this._actionName);
                else this.clearTimer(this, this._frameLoop)
            }
        };
        i.stop = function() {
            this._isPlaying = false;
            this.clearTimer(this, this._frameLoop)
        };
        i.addLabel = function(e, t) {
            if (!this._labels) this._labels = {};
            if (!this._labels[t]) this._labels[t] = [];
            this._labels[t].push(e)
        };
        i.removeLabel = function(e) {
            if (!e) this._labels = null;
            else if (this._labels) {
                for (var t in this._labels) {
                    this._removeLabelFromLabelList(this._labels[t], e)
                }
            }
        };
        i._removeLabelFromLabelList = function(e, t) {
            if (!e) return;
            for (var i = e.length - 1; i >= 0; i--) {
                if (e[i] == t) {
                    e.splice(i, 1)
                }
            }
        };
        i.gotoAndStop = function(e) {
            this.index = typeof e == "string" ? this._getFrameByLabel(e) : e;
            this.stop()
        };
        i._displayToIndex = function(e) {};
        i.clear = function() {
            this.stop();
            this._labels = null
        };
        u(0, i, "interval",
        function() {
            return this._interval
        },
        function(e) {
            if (this._interval != e) {
                this._frameRateChanged = true;
                this._interval = e;
                if (this._isPlaying && e > 0) {
                    this.timerLoop(e, this, this._frameLoop, null, true, true)
                }
            }
        });
        u(0, i, "isPlaying",
        function() {
            return this._isPlaying
        });
        u(0, i, "index",
        function() {
            return this._index
        },
        function(e) {
            this._index = e;
            this._displayToIndex(e);
            if (this._labels && this._labels[e]) {
                var t = this._labels[e];
                for (var i = 0,
                n = t.length; i < n; i++) {
                    this.event("label", t[i])
                }
            }
        });
        u(0, i, "count",
        function() {
            return this._count
        });
        e.WRAP_POSITIVE = 0;
        e.WRAP_REVERSE = 1;
        e.WRAP_PINGPONG = 2;
        return e
    } (De);
    var Ae = function(t) {
        function d() {
            this._clipPoint = null;
            this._currBitmapFont = null;
            this._text = null;
            this._isChanged = false;
            this._textWidth = 0;
            this._textHeight = 0;
            this._lines = [];
            this._lineWidths = [];
            this._startX = NaN;
            this._startY = NaN;
            this._lastVisibleLineIndex = -1;
            this._words = null;
            this._charSize = {};
            this.underline = false;
            this._underlineColor = null;
            d.__super.call(this);
            this.overflow = d.VISIBLE;
            this._style = new pe(this);
            this._style.wordWrap = false
        }
        _(d, "laya.display.Text", t);
        var e = d.prototype;
        e.destroy = function(e) {
            e === void 0 && (e = true);
            t.prototype.destroy.call(this, e);
            this._lines = null;
            if (this._words) {
                this._words.length = 0;
                this._words = null
            }
        };
        e._getBoundPointsM = function(e) {
            e === void 0 && (e = false);
            var t = A.TEMP;
            t.setTo(0, 0, this.width, this.height);
            return t._getBoundPoints()
        };
        e.getGraphicBounds = function(e) {
            e === void 0 && (e = false);
            var t = A.TEMP;
            t.setTo(0, 0, this.width, this.height);
            return t
        };
        e._getCSSStyle = function() {
            return this._style
        };
        e.lang = function(e, t, i, n, s, a, r, o, l, h, u) {
            e = d.langPacks && d.langPacks[e] ? d.langPacks[e] : e;
            if (arguments.length < 2) {
                this._text = e
            } else {
                for (var c = 0,
                f = arguments.length; c < f; c++) {
                    e = e.replace("{" + c + "}", arguments[c + 1])
                }
                this._text = e
            }
        };
        e._isPassWordMode = function() {
            var e = this._style;
            var t = e.password;
            if ("prompt" in this && this["prompt"] == this._text) t = false;
            return t
        };
        e._getPassWordTxt = function(e) {
            var t = e.length;
            var i;
            i = "";
            for (var n = t; n > 0; n--) {
                i += "●"
            }
            return i
        };
        e.renderText = function(e, t) {
            var i = this.graphics;
            i.clear(true);
            var n = (this.italic ? "italic ": "") + (this.bold ? "bold ": "") + this.fontSize + "px " + (Y.onIPhone ? laya.display.Text._fontFamilyMap[this.font] || this.font: this.font);
            Y.context.font = n;
            var s = this.padding;
            var a = s[3];
            var r = "left";
            var o = this._lines;
            var l = this.leading + this._charSize.height;
            var h = this._currBitmapFont;
            if (h) {
                l = this.leading + h.getMaxHeight()
            }
            var u = s[0];
            if (!h && this._width > 0 && this._textWidth <= this._width) {
                if (this.align == "right") {
                    r = "right";
                    a = this._width - s[1]
                } else if (this.align == "center") {
                    r = "center";
                    a = this._width * .5 + s[3] - s[1]
                }
            }
            if (this._height > 0) {
                var c = this._textHeight > this._height ? "top": this.valign;
                if (c === "middle") u = (this._height - t * l) * .5 + s[0] - s[2];
                else if (c === "bottom") u = this._height - t * l - s[2]
            }
            var f = this._style;
            if (h && h.autoScaleSize) {
                var d = h.fontSize / this.fontSize
            }
            if (this._clipPoint) {
                i.save();
                if (h && h.autoScaleSize) {
                    var g = 0;
                    var p = 0;
                    this._width ? g = this._width - s[3] - s[1] : g = this._textWidth;
                    this._height ? p = this._height - s[0] - s[2] : p = this._textHeight;
                    g *= d;
                    p *= d;
                    i.clipRect(s[3], s[0], g, p)
                } else {
                    i.clipRect(s[3], s[0], this._width ? this._width - s[3] - s[1] : this._textWidth, this._height ? this._height - s[0] - s[2] : this._textHeight)
                }
            }
            var _ = f.password;
            if ("prompt" in this && this["prompt"] == this._text) _ = false;
            var m = 0,
            v = 0;
            var y = Math.min(this._lines.length, t + e) || 1;
            for (var I = e; I < y; I++) {
                var S = o[I];
                var C;
                if (_) {
                    var b = S.length;
                    S = "";
                    for (var w = b; w > 0; w--) {
                        S += "●"
                    }
                }
                if (S === undefined) S = "";
                m = a - (this._clipPoint ? this._clipPoint.x: 0);
                v = u + l * I - (this._clipPoint ? this._clipPoint.y: 0);
                this.underline && this.drawUnderline(r, m, v, I);
                if (h) {
                    var x = this.width;
                    if (h.autoScaleSize) {
                        x = this.width * d
                    }
                    h.drawText(S, this, m, v, this.align, x)
                } else {
                    if (O.isWebGL) {
                        this._words || (this._words = []);
                        C = this._words.length > I - e ? this._words[I - e] : new de;
                        C.setText(S)
                    } else {
                        C = S
                    }
                    f.stroke ? i.fillBorderText(C, m, v, n, this.color, f.strokeColor, f.stroke, r) : i.fillText(C, m, v, n, this.color, r)
                }
            }
            if (h && h.autoScaleSize) {
                var R = 1 / d;
                this.scale(R, R)
            }
            if (this._clipPoint) i.restore();
            this._startX = a;
            this._startY = u
        };
        e.drawUnderline = function(e, t, i, n) {
            var s = this._lineWidths[n];
            switch (e) {
            case "center":
                t -= s / 2;
                break;
            case "right":
                t -= s;
                break;
            case "left":
            default:
                break
            }
            i += this._charSize.height;
            this._graphics.drawLine(t, i, t + s, i, this.underlineColor || this.color, 1)
        };
        e.typeset = function() {
            this._isChanged = false;
            if (!this._text) {
                this._clipPoint = null;
                this._textWidth = this._textHeight = 0;
                this.graphics.clear(true);
                return
            }
            if (O.isConchApp) {
                var e = "" + this._getCSSStyle().font;
                var t = this._getCSSStyle();
                if (t.stroke) {
                    if (this._getCSSStyle().strokeColor) {
                        e += " " + 1 + " " + this._getCSSStyle().strokeColor
                    }
                }
                Y.context.font = e
            } else {
                Y.context.font = this._getCSSStyle().font
            }
            this._lines.length = 0;
            this._lineWidths.length = 0;
            if (this._isPassWordMode()) {
                this.parseLines(this._getPassWordTxt(this._text))
            } else this.parseLines(this._text);
            this.evalTextSize();
            if (this.checkEnabledViewportOrNot()) this._clipPoint || (this._clipPoint = new B(0, 0));
            else this._clipPoint = null;
            var i = this._lines.length;
            if (this.overflow != d.VISIBLE) {
                var n = this.overflow == d.HIDDEN ? Math.floor: Math.ceil;
                i = Math.min(i, n((this.height - this.padding[0] - this.padding[2]) / (this.leading + this._charSize.height)))
            }
            var s = this.scrollY / (this._charSize.height + this.leading) | 0;
            this.renderText(s, i);
            this.repaint()
        };
        e.evalTextSize = function() {
            var e = NaN,
            t = NaN;
            e = Math.max.apply(this, this._lineWidths);
            if (this._currBitmapFont) t = this._lines.length * (this._currBitmapFont.getMaxHeight() + this.leading) + this.padding[0] + this.padding[2];
            else t = this._lines.length * (this._charSize.height + this.leading) + this.padding[0] + this.padding[2];
            if (e != this._textWidth || t != this._textHeight) {
                this._textWidth = e;
                this._textHeight = t;
                if (!this._width || !this._height) this.conchModel && this.conchModel.size(this._width || this._textWidth, this._height || this._textHeight)
            }
        };
        e.checkEnabledViewportOrNot = function() {
            return this.overflow == d.SCROLL && (this._width > 0 && this._textWidth > this._width || this._height > 0 && this._textHeight > this._height)
        };
        e.changeText = function(e) {
            if (this._text !== e) {
                this.lang(e + "");
                if (this._graphics && this._graphics.replaceText(this._text)) {} else {
                    this.typeset()
                }
            }
        };
        e.parseLines = function(e) {
            var t = this.wordWrap || this.overflow == d.HIDDEN;
            if (t) {
                var i = this.getWordWrapWidth()
            }
            if (this._currBitmapFont) {
                this._charSize.width = this._currBitmapFont.getMaxWidth();
                this._charSize.height = this._currBitmapFont.getMaxHeight()
            } else {
                var n = Y.context.measureText(d._testWord);
                if (O.isConchApp && n.width === 0 && n.height === 0) {
                    n = Y.context.measureText("W")
                }
                this._charSize.width = n.width;
                this._charSize.height = n.height || this.fontSize
            }
            var s = e.replace(/\r\n/g, "\n").split("\n");
            for (var a = 0,
            r = s.length; a < r; a++) {
                var o = s[a];
                if (t) this.parseLine(o, i);
                else {
                    this._lineWidths.push(this.getTextWidth(o));
                    this._lines.push(o)
                }
            }
        };
        e.parseLine = function(e, t) {
            var i = Y.context;
            var n = this._lines;
            var s = 0;
            var a;
            var r = NaN;
            var o = NaN;
            var l = 0;
            r = this.getTextWidth(e);
            if (r <= t) {
                n.push(e);
                this._lineWidths.push(r);
                return
            }
            r = this._charSize.width;
            s = Math.floor(t / r);
            s == 0 && (s = 1);
            r = this.getTextWidth(e.substring(0, s));
            o = r;
            for (var h = s,
            u = e.length; h < u; h++) {
                r = this.getTextWidth(e.charAt(h));
                o += r;
                if (o > t) {
                    if (this.wordWrap) {
                        var c = e.substring(l, h);
                        if (c.charCodeAt(c.length - 1) < 255) {
                            a = /(?:\w|-)+$/.exec(c);
                            if (a) {
                                h = a.index + l;
                                if (a.index == 0) h += c.length;
                                else c = e.substring(l, h)
                            }
                        } else if (d.RightToLeft) {
                            a = /([\u0600-\u06FF])+$/.exec(c);
                            if (a) {
                                h = a.index + l;
                                if (a.index == 0) h += c.length;
                                else c = e.substring(l, h)
                            }
                        }
                        n.push(c);
                        this._lineWidths.push(o - r);
                        l = h;
                        if (h + s < u) {
                            h += s;
                            r = this.getTextWidth(e.substring(l, h));
                            o = r;
                            h--
                        } else {
                            n.push(e.substring(l, u));
                            this._lineWidths.push(this.getTextWidth(n[n.length - 1]));
                            l = -1;
                            break
                        }
                    } else if (this.overflow == d.HIDDEN) {
                        n.push(e.substring(0, h));
                        this._lineWidths.push(this.getTextWidth(n[n.length - 1]));
                        return
                    }
                }
            }
            if (this.wordWrap && l != -1) {
                n.push(e.substring(l, u));
                this._lineWidths.push(this.getTextWidth(n[n.length - 1]))
            }
        };
        e.getTextWidth = function(e) {
            if (this._currBitmapFont) return this._currBitmapFont.getTextWidth(e);
            else return Y.context.measureText(e).width
        };
        e.getWordWrapWidth = function() {
            var e = this.padding;
            var t = NaN;
            if (this._currBitmapFont && this._currBitmapFont.autoScaleSize) t = this._width * (this._currBitmapFont.fontSize / this.fontSize);
            else t = this._width;
            if (t <= 0) {
                t = this.wordWrap ? 100 : Y.width
            }
            t <= 0 && (t = 100);
            return t - e[3] - e[1]
        };
        e.getCharPoint = function(e, t) {
            this._isChanged && b.timer.runCallLater(this, this.typeset);
            var i = 0,
            n = this._lines,
            s = 0;
            for (var a = 0,
            r = n.length; a < r; a++) {
                i += n[a].length;
                if (e < i) {
                    var o = a;
                    break
                }
                s = i
            }
            var l = (this.italic ? "italic ": "") + (this.bold ? "bold ": "") + this.fontSize + "px " + this.font;
            Y.context.font = l;
            var h = this.getTextWidth(this._text.substring(s, e));
            var u = t || new B;
            return u.setTo(this._startX + h - (this._clipPoint ? this._clipPoint.x: 0), this._startY + o * (this._charSize.height + this.leading) - (this._clipPoint ? this._clipPoint.y: 0))
        };
        u(0, e, "width",
        function() {
            if (this._width) return this._width;
            return this.textWidth + this.padding[1] + this.padding[3]
        },
        function(e) {
            if (e != this._width) {
                b.superSet(De, this, "width", e);
                this.isChanged = true
            }
        });
        u(0, e, "textWidth",
        function() {
            this._isChanged && b.timer.runCallLater(this, this.typeset);
            return this._textWidth
        });
        u(0, e, "height",
        function() {
            if (this._height) return this._height;
            return this.textHeight
        },
        function(e) {
            if (e != this._height) {
                b.superSet(De, this, "height", e);
                this.isChanged = true
            }
        });
        u(0, e, "textHeight",
        function() {
            this._isChanged && b.timer.runCallLater(this, this.typeset);
            return this._textHeight
        });
        u(0, e, "padding",
        function() {
            return this._getCSSStyle().padding
        },
        function(e) {
            this._getCSSStyle().padding = e;
            this.isChanged = true
        });
        u(0, e, "bold",
        function() {
            return this._getCSSStyle().bold
        },
        function(e) {
            this._getCSSStyle().bold = e;
            this.isChanged = true
        });
        u(0, e, "text",
        function() {
            return this._text || ""
        },
        function(e) {
            if (this._text !== e) {
                this.lang(e + "");
                this.isChanged = true;
                this.event("change")
            }
        });
        u(0, e, "color",
        function() {
            return this._getCSSStyle().color
        },
        function(e) {
            if (this._getCSSStyle().color != e) {
                this._getCSSStyle().color = e;
                if (!this._isChanged && this._graphics) {
                    this._graphics.replaceTextColor(this.color)
                } else {
                    this.isChanged = true
                }
            }
        });
        u(0, e, "font",
        function() {
            return this._getCSSStyle().fontFamily
        },
        function(e) {
            if (this._currBitmapFont) {
                this._currBitmapFont = null;
                this.scale(1, 1)
            }
            if (d._bitmapFonts && d._bitmapFonts[e]) {
                this._currBitmapFont = d._bitmapFonts[e]
            }
            this._getCSSStyle().fontFamily = e;
            this.isChanged = true
        });
        u(0, e, "fontSize",
        function() {
            return this._getCSSStyle().fontSize
        },
        function(e) {
            this._getCSSStyle().fontSize = e;
            this.isChanged = true
        });
        u(0, e, "italic",
        function() {
            return this._getCSSStyle().italic
        },
        function(e) {
            this._getCSSStyle().italic = e;
            this.isChanged = true
        });
        u(0, e, "align",
        function() {
            return this._getCSSStyle().align
        },
        function(e) {
            this._getCSSStyle().align = e;
            this.isChanged = true
        });
        u(0, e, "valign",
        function() {
            return this._getCSSStyle().valign
        },
        function(e) {
            this._getCSSStyle().valign = e;
            this.isChanged = true
        });
        u(0, e, "wordWrap",
        function() {
            return this._getCSSStyle().wordWrap
        },
        function(e) {
            this._getCSSStyle().wordWrap = e;
            this.isChanged = true
        });
        u(0, e, "leading",
        function() {
            return this._getCSSStyle().leading
        },
        function(e) {
            this._getCSSStyle().leading = e;
            this.isChanged = true
        });
        u(0, e, "bgColor",
        function() {
            return this._getCSSStyle().backgroundColor
        },
        function(e) {
            this._getCSSStyle().backgroundColor = e;
            this.isChanged = true
        });
        u(0, e, "borderColor",
        function() {
            return this._getCSSStyle().borderColor
        },
        function(e) {
            this._getCSSStyle().borderColor = e;
            this.isChanged = true
        });
        u(0, e, "stroke",
        function() {
            return this._getCSSStyle().stroke
        },
        function(e) {
            this._getCSSStyle().stroke = e;
            this.isChanged = true
        });
        u(0, e, "strokeColor",
        function() {
            return this._getCSSStyle().strokeColor
        },
        function(e) {
            this._getCSSStyle().strokeColor = e;
            this.isChanged = true
        });
        u(0, e, "isChanged", null,
        function(e) {
            if (this._isChanged !== e) {
                this._isChanged = e;
                e && b.timer.callLater(this, this.typeset)
            }
        });
        u(0, e, "scrollX",
        function() {
            if (!this._clipPoint) return 0;
            return this._clipPoint.x
        },
        function(e) {
            if (this.overflow != d.SCROLL || (this.textWidth < this._width || !this._clipPoint)) return;
            e = e < this.padding[3] ? this.padding[3] : e;
            var t = this._textWidth - this._width;
            e = e > t ? t: e;
            var i = this._height / (this._charSize.height + this.leading) | 0 + 1;
            this._clipPoint.x = e;
            this.renderText(this._lastVisibleLineIndex, i)
        });
        u(0, e, "scrollY",
        function() {
            if (!this._clipPoint) return 0;
            return this._clipPoint.y
        },
        function(e) {
            if (this.overflow != d.SCROLL || (this.textHeight < this._height || !this._clipPoint)) return;
            e = e < this.padding[0] ? this.padding[0] : e;
            var t = this._textHeight - this._height;
            e = e > t ? t: e;
            var i = e / (this._charSize.height + this.leading) | 0;
            this._lastVisibleLineIndex = i;
            var n = (this._height / (this._charSize.height + this.leading) | 0) + 1;
            this._clipPoint.y = e;
            this.renderText(i, n)
        });
        u(0, e, "maxScrollX",
        function() {
            return this.textWidth < this._width ? 0 : this._textWidth - this._width
        });
        u(0, e, "maxScrollY",
        function() {
            return this.textHeight < this._height ? 0 : this._textHeight - this._height
        });
        u(0, e, "lines",
        function() {
            if (this._isChanged) this.typeset();
            return this._lines
        });
        u(0, e, "underlineColor",
        function() {
            return this._underlineColor
        },
        function(e) {
            this._underlineColor = e;
            this._isChanged = true;
            this.typeset()
        });
        d.registerBitmapFont = function(e, t) {
            d._bitmapFonts || (d._bitmapFonts = {});
            d._bitmapFonts[e] = t
        };
        d.unregisterBitmapFont = function(e, t) {
            t === void 0 && (t = true);
            if (d._bitmapFonts && d._bitmapFonts[e]) {
                var i = d._bitmapFonts[e];
                if (t) {
                    i.destroy()
                }
                delete d._bitmapFonts[e]
            }
        };
        d.setTextRightToLeft = function() {
            var e;
            e = Y.canvas.source.style;
            e.display = "none";
            e.position = "absolute";
            e.direction = "rtl";
            O._mainCanvas.source.style.direction = "rtl";
            laya.display.Text.RightToLeft = true;
            Y.document.body.appendChild(Y.canvas.source)
        };
        d.supportFont = function(e) {
            Y.context.font = "10px sans-serif";
            var t = Y.context.measureText("abcji").width;
            Y.context.font = "10px " + e;
            var i = Y.context.measureText("abcji").width;
            console.log(t, i);
            if (t === i) return false;
            else return true
        };
        d._testWord = "游";
        d.langPacks = null;
        d.VISIBLE = "visible";
        d.SCROLL = "scroll";
        d.HIDDEN = "hidden";
        d.CharacterCache = true;
        d.RightToLeft = false;
        d._bitmapFonts = null;
        l(d, ["_fontFamilyMap",
        function() {
            return this._fontFamilyMap = {
                "报隶": "报隶-简",
                "黑体": "黑体-简",
                "楷体": "楷体-简",
                "兰亭黑": "兰亭黑-简",
                "隶变": "隶变-简",
                "凌慧体": "凌慧体-简",
                "翩翩体": "翩翩体-简",
                "苹方": "苹方-简",
                "手札体": "手札体-简",
                "宋体": "宋体-简",
                "娃娃体": "娃娃体-简",
                "魏碑": "魏碑-简",
                "行楷": "行楷-简",
                "雅痞": "雅痞-简",
                "圆体": "圆体-简"
            }
        }]);
        return d
    } (De);
    var Pe = function(f) {
        function h() {
            this.focus = null;
            this.designWidth = 0;
            this.designHeight = 0;
            this.canvasRotation = false;
            this.canvasDegree = 0;
            this.renderingEnabled = true;
            this.screenAdaptationEnabled = true;
            this._screenMode = "none";
            this._scaleMode = "noscale";
            this._alignV = "top";
            this._alignH = "left";
            this._bgColor = "black";
            this._mouseMoveTime = 0;
            this._renderCount = 0;
            this._frameStartTime = NaN;
            this._isFocused = false;
            this._isVisibility = false;
            this._scenes = null;
            this._frameRate = "fast";
            this.useRetinalCanvas = false;
            h.__super.call(this);
            this.offset = new B;
            this._canvasTransform = new M;
            this._previousOrientation = Y.window.orientation;
            var t = this;
            this.transform = M.create();
            this._scenes = [];
            this.mouseEnabled = true;
            this.hitTestPrior = true;
            this.autoSize = false;
            this._displayedInStage = true;
            this._isFocused = true;
            this._isVisibility = true;
            this.useRetinalCanvas = m.useRetinalCanvas;
            var e = Y.window;
            var i = this;
            e.addEventListener("focus",
            function() {
                t._isFocused = true;
                i.event("focus");
                i.event("focuschange")
            });
            e.addEventListener("blur",
            function() {
                t._isFocused = false;
                i.event("blur");
                i.event("focuschange");
                if (i._isInputting()) qe["inputElement"].target.focus = false
            });
            var n = "hidden",
            s = "visibilityState",
            a = "visibilitychange";
            var r = e.document;
            if (typeof r.hidden !== "undefined") {
                a = "visibilitychange";
                s = "visibilityState"
            } else if (typeof r.mozHidden !== "undefined") {
                a = "mozvisibilitychange";
                s = "mozVisibilityState"
            } else if (typeof r.msHidden !== "undefined") {
                a = "msvisibilitychange";
                s = "msVisibilityState"
            } else if (typeof r.webkitHidden !== "undefined") {
                a = "webkitvisibilitychange";
                s = "webkitVisibilityState"
            }
            e.document.addEventListener(a, o);
            function o() {
                if (Y.document[s] == "hidden") {
                    i._setStageVisible(false)
                } else {
                    i._setStageVisible(true)
                }
            }
            e.document.addEventListener("qbrowserVisibilityChange", l);
            function l(e) {
                i._setStageVisible(!e.hidden)
            }
            e.addEventListener("resize",
            function() {
                var e = Y.window.orientation;
                if (e != null && e != t._previousOrientation && i._isInputting()) {
                    qe["inputElement"].target.focus = false
                }
                t._previousOrientation = e;
                if (i._isInputting()) return;
                i._resetCanvas()
            });
            e.addEventListener("orientationchange",
            function(e) {
                i._resetCanvas()
            });
            this.on("mousemove", this, this._onmouseMove);
            if (Y.onMobile) this.on("mousedown", this, this._onmouseMove)
        }
        _(h, "laya.display.Stage", f);
        var e = h.prototype;
        e._setStageVisible = function(e) {
            if (this._isVisibility == e) return;
            this._isVisibility = e;
            if (!this._isVisibility) if (this._isInputting()) qe["inputElement"].target.focus = false;
            this.event("visibilitychange")
        };
        e._isInputting = function() {
            return Y.onMobile && qe.isInputting
        };
        e._changeCanvasSize = function() {
            this.setScreenSize(Y.clientWidth * Y.pixelRatio, Y.clientHeight * Y.pixelRatio)
        };
        e._resetCanvas = function() {
            if (!this.screenAdaptationEnabled) return;
            var e = O._mainCanvas;
            var t = e.source.style;
            e.size(1, 1);
            b.timer.once(100, this, this._changeCanvasSize)
        };
        e.setScreenSize = function(e, t) {
            var i = false;
            if (this._screenMode !== "none") {
                var n = e / t < 1 ? "vertical": "horizontal";
                i = n !== this._screenMode;
                if (i) {
                    var s = t;
                    t = e;
                    e = s
                }
            }
            this.canvasRotation = i;
            var a = O._mainCanvas;
            var r = a.source.style;
            var o = this._canvasTransform.identity();
            var l = this._scaleMode;
            var h = e / this.designWidth;
            var u = t / this.designHeight;
            var c = m.useRetinalCanvas ? e: this.designWidth;
            var f = m.useRetinalCanvas ? t: this.designHeight;
            var d = e;
            var g = t;
            var p = Y.pixelRatio;
            this._width = this.designWidth;
            this._height = this.designHeight;
            switch (l) {
            case "noscale":
                h = u = 1;
                d = this.designWidth;
                g = this.designHeight;
                break;
            case "showall":
                h = u = Math.min(h, u);
                c = d = Math.round(this.designWidth * h);
                f = g = Math.round(this.designHeight * u);
                break;
            case "noborder":
                h = u = Math.max(h, u);
                d = Math.round(this.designWidth * h);
                g = Math.round(this.designHeight * u);
                break;
            case "full":
                h = u = 1;
                this._width = c = e;
                this._height = f = t;
                break;
            case "fixedwidth":
                u = h;
                this._height = f = Math.round(t / h);
                break;
            case "fixedheight":
                h = u;
                this._width = c = Math.round(e / u);
                break;
            case "fixedauto":
                if (e / t < this.designWidth / this.designHeight) {
                    u = h;
                    this._height = f = Math.round(t / h)
                } else {
                    h = u;
                    this._width = c = Math.round(e / u)
                }
                break
            }
            if (this.conchModel) this.conchModel.size(this._width, this._height);
            if (m.useRetinalCanvas) {
                c = e;
                f = t
            }
            h *= this.scaleX;
            u *= this.scaleY;
            if (h === 1 && u === 1) {
                this.transform.identity()
            } else {
                this.transform.a = this._formatData(h / (d / c));
                this.transform.d = this._formatData(u / (g / f));
                this.conchModel && this.conchModel.scale(this.transform.a, this.transform.d)
            }
            a.size(c, f);
            D.changeWebGLSize(c, f);
            o.scale(d / c / p, g / f / p);
            if (this._alignH === "left") this.offset.x = 0;
            else if (this._alignH === "right") this.offset.x = (e - d) / p;
            else this.offset.x = (e - d) * .5 / p;
            if (this._alignV === "top") this.offset.y = 0;
            else if (this._alignV === "bottom") this.offset.y = (t - g) / p;
            else this.offset.y = (t - g) * .5 / p;
            this.offset.x = Math.round(this.offset.x);
            this.offset.y = Math.round(this.offset.y);
            o.translate(this.offset.x, this.offset.y);
            this.canvasDegree = 0;
            if (i) {
                if (this._screenMode === "horizontal") {
                    o.rotate(Math.PI / 2);
                    o.translate(t / p, 0);
                    this.canvasDegree = 90
                } else {
                    o.rotate( - Math.PI / 2);
                    o.translate(0, e / p);
                    this.canvasDegree = -90
                }
            }
            o.a = this._formatData(o.a);
            o.d = this._formatData(o.d);
            o.tx = this._formatData(o.tx);
            o.ty = this._formatData(o.ty);
            r.transformOrigin = r.webkitTransformOrigin = r.msTransformOrigin = r.mozTransformOrigin = r.oTransformOrigin = "0px 0px 0px";
            r.transform = r.webkitTransform = r.msTransform = r.mozTransform = r.oTransform = "matrix(" + o.toString() + ")";
            o.translate(parseInt(r.left) || 0, parseInt(r.top) || 0);
            this.visible = true;
            this._repaint = 1;
            this.event("resize")
        };
        e._formatData = function(e) {
            if (Math.abs(e) < 1e-6) return 0;
            if (Math.abs(1 - e) < .001) return e > 0 ? 1 : -1;
            return e
        };
        e.getMousePoint = function() {
            return B.TEMP.setTo(this.mouseX, this.mouseY)
        };
        e.repaint = function() {
            this._repaint = 1
        };
        e.parentRepaint = function() {};
        e._loop = function() {
            this.render(O.context, 0, 0);
            return true
        };
        e._onmouseMove = function(e) {
            this._mouseMoveTime = Y.now()
        };
        e.getTimeFromFrameStart = function() {
            return Y.now() - this._frameStartTime
        };
        e.render = function(e, t, i) {
            if (this._frameRate === "sleep" && !O.isConchApp) {
                var n = Y.now();
                if (n - this._frameStartTime >= 1e3) this._frameStartTime = n;
                else return
            }
            this._renderCount++;
            O.isFlash && this.repaint();
            if (!this._style.visible) {
                if (this._renderCount % 5 === 0) {
                    re.loopCount++;
                    S.instance.runEvent();
                    b.timer._update()
                }
                return
            }
            this._frameStartTime = Y.now();
            var s = this._frameRate === "mouse" ? this._frameStartTime - this._mouseMoveTime < 2e3 ? "fast": "slow": this._frameRate;
            var a = s !== "slow";
            var r = this._renderCount % 2 === 0;
            re.renderSlow = !a;
            if (a || r || O.isConchApp) {
                re.loopCount++;
                S.instance.runEvent();
                b.timer._update();
                D.update3DLoop();
                var o;
                var l = 0,
                h = 0;
                if (O.isConchNode) {
                    for (l = 0, h = this._scenes.length; l < h; l++) {
                        o = this._scenes[l];
                        o && o._updateSceneConch()
                    }
                } else {
                    for (l = 0, h = this._scenes.length; l < h; l++) {
                        o = this._scenes[l];
                        o && o._updateScene()
                    }
                }
                if (O.isConchNode) {
                    var u = De["CustomList"];
                    for (l = 0, h = u.length; l < h; l++) {
                        var c = u[l];
                        c.customRender(c.customContext, 0, 0)
                    }
                    return
                }
            }
            if (O.isConchNode) return;
            if (this.renderingEnabled && (a || !r || O.isConchWebGL)) {
                if (O.isWebGL) {
                    e.clear();
                    f.prototype.render.call(this, e, t, i);
                    re._show && re._sp && re._sp.render(e, t, i);
                    D.clear(this._bgColor);
                    D.beginFlush();
                    e.flush();
                    D.endFinish();
                    ce.instance && ce.getInstance().endDispose()
                } else {
                    D.clear(this._bgColor);
                    f.prototype.render.call(this, e, t, i);
                    re._show && re._sp && re._sp.render(e, t, i)
                }
            }
        };
        e._requestFullscreen = function() {
            var e = Y.document.documentElement;
            if (e.requestFullscreen) {
                e.requestFullscreen()
            } else if (e.mozRequestFullScreen) {
                e.mozRequestFullScreen()
            } else if (e.webkitRequestFullscreen) {
                e.webkitRequestFullscreen()
            } else if (e.msRequestFullscreen) {
                e.msRequestFullscreen()
            }
        };
        e._fullScreenChanged = function() {
            b.stage.event("fullscreenchange")
        };
        e.exitFullscreen = function() {
            var e = Y.document;
            if (e.exitFullscreen) {
                e.exitFullscreen()
            } else if (e.mozCancelFullScreen) {
                e.mozCancelFullScreen()
            } else if (e.webkitExitFullscreen) {
                e.webkitExitFullscreen()
            }
        };
        u(0, e, "clientScaleX",
        function() {
            return this._transform ? this._transform.getScaleX() : 1
        });
        u(0, e, "desginHeight",
        function() {
            console.debug("desginHeight已经弃用，请使用designHeight代替");
            return this.designHeight
        });
        u(0, e, "frameRate",
        function() {
            return this._frameRate
        },
        function(e) {
            this._frameRate = e;
            if (O.isConchApp) {
                switch (this._frameRate) {
                case "slow":
                    Y.window.conch && Y.window.conchConfig.setSlowFrame && Y.window.conchConfig.setSlowFrame(true);
                    break;
                case "fast":
                    Y.window.conch && Y.window.conchConfig.setSlowFrame && Y.window.conchConfig.setSlowFrame(false);
                    break;
                case "mouse":
                    Y.window.conch && Y.window.conchConfig.setMouseFrame && Y.window.conchConfig.setMouseFrame(2e3);
                    break;
                case "sleep":
                    Y.window.conch && Y.window.conchConfig.setLimitFPS && Y.window.conchConfig.setLimitFPS(1);
                    break;
                default:
                    throw new Error("Stage:frameRate invalid.");
                    break
                }
            }
        });
        u(0, e, "clientScaleY",
        function() {
            return this._transform ? this._transform.getScaleY() : 1
        });
        u(0, e, "width", f.prototype._$get_width,
        function(e) {
            this.designWidth = e;
            b.superSet(De, this, "width", e);
            b.timer.callLater(this, this._changeCanvasSize)
        });
        u(0, e, "alignH",
        function() {
            return this._alignH
        },
        function(e) {
            this._alignH = e;
            b.timer.callLater(this, this._changeCanvasSize)
        });
        u(0, e, "isFocused",
        function() {
            return this._isFocused
        });
        u(0, e, "height", f.prototype._$get_height,
        function(e) {
            this.designHeight = e;
            b.superSet(De, this, "height", e);
            b.timer.callLater(this, this._changeCanvasSize)
        });
        u(0, e, "transform",
        function() {
            if (this._tfChanged) this._adjustTransform();
            return this._transform = this._transform || M.create()
        },
        f.prototype._$set_transform);
        u(0, e, "isVisibility",
        function() {
            return this._isVisibility
        });
        u(0, e, "desginWidth",
        function() {
            console.debug("desginWidth已经弃用，请使用designWidth代替");
            return this.designWidth
        });
        u(0, e, "scaleMode",
        function() {
            return this._scaleMode
        },
        function(e) {
            this._scaleMode = e;
            b.timer.callLater(this, this._changeCanvasSize)
        });
        u(0, e, "alignV",
        function() {
            return this._alignV
        },
        function(e) {
            this._alignV = e;
            b.timer.callLater(this, this._changeCanvasSize)
        });
        u(0, e, "bgColor",
        function() {
            return this._bgColor
        },
        function(e) {
            this._bgColor = e;
            this.conchModel && this.conchModel.bgColor(e);
            if (O.isWebGL) {
                if (e) {
                    h._wgColor = $.create(e)._color
                } else {
                    if (!Y.onMiniGame && !Y.onQGMiniGame) h._wgColor = null
                }
            }
            if (Y.onLimixiu) {
                h._wgColor = $.create(e)._color
            } else if (e) {
                O.canvas.style.background = e
            } else {
                O.canvas.style.background = "none"
            }
        });
        u(0, e, "mouseX",
        function() {
            return Math.round(S.instance.mouseX / this.clientScaleX)
        });
        u(0, e, "mouseY",
        function() {
            return Math.round(S.instance.mouseY / this.clientScaleY)
        });
        u(0, e, "screenMode",
        function() {
            return this._screenMode
        },
        function(e) {
            this._screenMode = e
        });
        u(0, e, "visible", f.prototype._$get_visible,
        function(e) {
            if (this.visible !== e) {
                b.superSet(De, this, "visible", e);
                var t = O._mainCanvas.source.style;
                t.visibility = e ? "visible": "hidden"
            }
        });
        u(0, e, "fullScreenEnabled", null,
        function(e) {
            var t = Y.document;
            var i = O.canvas;
            if (e) {
                i.addEventListener("mousedown", this._requestFullscreen);
                i.addEventListener("touchstart", this._requestFullscreen);
                t.addEventListener("fullscreenchange", this._fullScreenChanged);
                t.addEventListener("mozfullscreenchange", this._fullScreenChanged);
                t.addEventListener("webkitfullscreenchange", this._fullScreenChanged);
                t.addEventListener("msfullscreenchange", this._fullScreenChanged)
            } else {
                i.removeEventListener("mousedown", this._requestFullscreen);
                i.removeEventListener("touchstart", this._requestFullscreen);
                t.removeEventListener("fullscreenchange", this._fullScreenChanged);
                t.removeEventListener("mozfullscreenchange", this._fullScreenChanged);
                t.removeEventListener("webkitfullscreenchange", this._fullScreenChanged);
                t.removeEventListener("msfullscreenchange", this._fullScreenChanged)
            }
        });
        h.SCALE_NOSCALE = "noscale";
        h.SCALE_EXACTFIT = "exactfit";
        h.SCALE_SHOWALL = "showall";
        h.SCALE_NOBORDER = "noborder";
        h.SCALE_FULL = "full";
        h.SCALE_FIXED_WIDTH = "fixedwidth";
        h.SCALE_FIXED_HEIGHT = "fixedheight";
        h.SCALE_FIXED_AUTO = "fixedauto";
        h.ALIGN_LEFT = "left";
        h.ALIGN_RIGHT = "right";
        h.ALIGN_CENTER = "center";
        h.ALIGN_TOP = "top";
        h.ALIGN_MIDDLE = "middle";
        h.ALIGN_BOTTOM = "bottom";
        h.SCREEN_NONE = "none";
        h.SCREEN_HORIZONTAL = "horizontal";
        h.SCREEN_VERTICAL = "vertical";
        h.FRAME_FAST = "fast";
        h.FRAME_SLOW = "slow";
        h.FRAME_MOUSE = "mouse";
        h.FRAME_SLEEP = "sleep";
        h.FRAME_MOUSE_THREDHOLD = 2e3;
        l(h, ["_wgColor",
        function() {
            return this._wgColor = [0, 0, 0, 1]
        }]);
        return h
    } (De);
    var Ue = function(e) {
        function t() {
            this.url = null;
            this._channel = null;
            this._tar = null;
            this._playEvents = null;
            this._stopEvents = null;
            t.__super.call(this);
            this.visible = false;
            this.on("added", this, this._onParentChange);
            this.on("removed", this, this._onParentChange)
        }
        _(t, "laya.media.SoundNode", e);
        var i = t.prototype;
        i._onParentChange = function() {
            this.target = this.parent
        };
        i.play = function(e, t) {
            e === void 0 && (e = 1);
            if (isNaN(e)) {
                e = 1
            }
            if (!this.url) return;
            this.stop();
            this._channel = P.playSound(this.url, e, t)
        };
        i.stop = function() {
            if (this._channel && !this._channel.isStopped) {
                this._channel.stop()
            }
            this._channel = null
        };
        i._setPlayAction = function(e, t, i, n) {
            n === void 0 && (n = true);
            if (!this[i]) return;
            if (!e) return;
            if (n) {
                e.on(t, this, this[i])
            } else {
                e.off(t, this, this[i])
            }
        };
        i._setPlayActions = function(e, t, i, n) {
            n === void 0 && (n = true);
            if (!e) return;
            if (!t) return;
            var s = t.split(",");
            var a = 0,
            r = 0;
            r = s.length;
            for (a = 0; a < r; a++) {
                this._setPlayAction(e, s[a], i, n)
            }
        };
        u(0, i, "playEvent", null,
        function(e) {
            this._playEvents = e;
            if (!e) return;
            if (this._tar) {
                this._setPlayActions(this._tar, e, "play")
            }
        });
        u(0, i, "target", null,
        function(e) {
            if (this._tar) {
                this._setPlayActions(this._tar, this._playEvents, "play", false);
                this._setPlayActions(this._tar, this._stopEvents, "stop", false)
            }
            this._tar = e;
            if (this._tar) {
                this._setPlayActions(this._tar, this._playEvents, "play", true);
                this._setPlayActions(this._tar, this._stopEvents, "stop", true)
            }
        });
        u(0, i, "stopEvent", null,
        function(e) {
            this._stopEvents = e;
            if (!e) return;
            if (this._tar) {
                this._setPlayActions(this._tar, e, "stop")
            }
        });
        return t
    } (De);
    var Ee = function(e) {
        function t() {
            this._src = null;
            this._onload = null;
            this._onerror = null;
            t.__super.call(this)
        }
        _(t, "laya.resource.FileBitmap", e);
        var i = t.prototype;
        u(0, i, "src",
        function() {
            return this._src
        },
        function(e) {
            this._src = e
        });
        u(0, i, "onload", null,
        function(e) {});
        u(0, i, "onerror", null,
        function(e) {});
        return t
    } (Me);
    var Ne = function(e) {
        function i(e, t) {
            this._is2D = false;
            i.__super.call(this);
            var n = this;
            this._source = this;
            if (e === "2D" || e === "AUTO" && !O.isWebGL) {
                this._is2D = true;
                this._source = t || Y.createElement("canvas");
                this._w = this._source.width;
                this._h = this._source.height;
                var s = this;
                s.getContext = function(e, t) {
                    if (n._ctx) return n._ctx;
                    var i = n._ctx = n._source.getContext(e, t);
                    if (i) {
                        i._canvas = s;
                        if (!O.isFlash && !Y.onLimixiu) i.size = function(e, t) {}
                    }
                    return i
                }
            }
            this.lock = true
        }
        _(i, "laya.resource.HTMLCanvas", e);
        var t = i.prototype;
        t.clear = function() {
            this._ctx && this._ctx.clear()
        };
        t.destroy = function() {
            this._ctx && this._ctx.destroy();
            this._ctx = null;
            laya.resource.Resource.prototype.destroy.call(this)
        };
        t.release = function() {};
        t._setContext = function(e) {
            this._ctx = e
        };
        t.getContext = function(e, t) {
            return this._ctx ? this._ctx: this._ctx = i._createContext(this)
        };
        t.getMemSize = function() {
            return 0
        };
        t.size = function(e, t) {
            if (this._w != e || this._h != t || this._source && (this._source.width != e || this._source.height != t)) {
                this._w = e;
                this._h = t;
                this.memorySize = this._w * this._h * 4;
                this._ctx && this._ctx.size(e, t);
                this._source && (this._source.height = t, this._source.width = e)
            }
        };
        t.getCanvas = function() {
            return this._source
        };
        t.toBase64 = function(e, t, i) {
            if (this._source) {
                if (O.isConchApp && this._source.toBase64) {
                    this._source.toBase64(e, t, i)
                } else {
                    var n = this._source.toDataURL(e, t);
                    i.call(this, n)
                }
            }
        };
        u(0, t, "context",
        function() {
            return this._ctx
        });
        u(0, t, "asBitmap", null,
        function(e) {});
        i.create = function(e, t) {
            return new i(e, t)
        };
        i.TYPE2D = "2D";
        i.TYPE3D = "3D";
        i.TYPEAUTO = "AUTO";
        i._createContext = null;
        return i
    } (Me);
    var Fe = function(e) {
        function l(e, t, i, n, s, a, r, o) {
            l.__super.call(this);
            throw new Error("不允许new！")
        }
        _(l, "laya.resource.HTMLSubImage", e);
        l.create = function(e, t, i, n, s, a, r, o) {
            o === void 0 && (o = false);
            return new l(e, t, i, n, s, a, r, o)
        };
        return l
    } (Me);
    var Oe = function(e) {
        function c() {
            this._frames = null;
            this._url = null;
            c.__super.call(this);
            this._setControlNode(this)
        }
        _(c, "laya.display.Animation", e);
        var t = c.prototype;
        t.destroy = function(e) {
            e === void 0 && (e = true);
            this.stop();
            laya.display.Sprite.prototype.destroy.call(this, e);
            this._frames = null;
            this._labels = null
        };
        t.play = function(e, t, i, n) {
            e === void 0 && (e = 0);
            t === void 0 && (t = true);
            i === void 0 && (i = "");
            n === void 0 && (n = true);
            if (i) this._setFramesFromCache(i, n);
            this._isPlaying = true;
            this.index = typeof e == "string" ? this._getFrameByLabel(e) : e;
            this.loop = t;
            this._actionName = i;
            this._isReverse = this.wrapMode == 1;
            if (this._frames && this.interval > 0) {
                this.timerLoop(this.interval, this, this._frameLoop, null, true, true)
            }
        };
        t._setFramesFromCache = function(e, t) {
            t === void 0 && (t = false);
            if (this._url) e = this._url + "#" + e;
            if (e && c.framesMap[e]) {
                var i;
                i = c.framesMap[e];
                if (i instanceof Array) {
                    this._frames = c.framesMap[e];
                    this._count = this._frames.length
                } else {
                    if (i.nodeRoot) {
                        c.framesMap[e] = this._parseGraphicAnimationByData(i);
                        i = c.framesMap[e]
                    }
                    this._frames = i.frames;
                    this._count = this._frames.length;
                    if (!this._frameRateChanged) this._interval = i.interval;
                    this._labels = this._copyLabels(i.labels)
                }
                return true
            } else {
                if (t) console.log("ani not found:", e)
            }
            return false
        };
        t._copyLabels = function(e) {
            if (!e) return null;
            var t;
            t = {};
            var i;
            for (i in e) {
                t[i] = ue.copyArray([], e[i])
            }
            return t
        };
        t._frameLoop = function() {
            if (this._style.visible && this._style.alpha > .01) {
                e.prototype._frameLoop.call(this)
            }
        };
        t._displayToIndex = function(e) {
            if (this._frames) this.graphics = this._frames[e]
        };
        t.clear = function() {
            this.stop();
            this.graphics = null;
            this._frames = null;
            this._labels = null
        };
        t.loadImages = function(e, t) {
            t === void 0 && (t = "");
            this._url = "";
            if (!this._setFramesFromCache(t)) {
                this.frames = c.framesMap[t] ? c.framesMap[t] : c.createFrames(e, t)
            }
            return this
        };
        t.loadAtlas = function(t, i, n) {
            n === void 0 && (n = "");
            this._url = "";
            var s = this;
            function e(e) {
                if (t === e) {
                    s.frames = c.framesMap[n] ? c.framesMap[n] : c.createFrames(t, n);
                    if (i) i.run()
                }
            }
            if (!s._setFramesFromCache(n)) {
                if (Se.getAtlas(t)) e(t);
                else b.loader.load(t, v.create(null, e, [t]), null, "atlas")
            }
            return this
        };
        t.loadAnimation = function(e, t, i) {
            this._url = e;
            var n = this;
            if (!this._actionName) this._actionName = "";
            if (!n._setFramesFromCache(this._actionName)) {
                if (!i || Se.getAtlas(i)) {
                    this._loadAnimationData(e, t, i)
                } else {
                    b.loader.load(i, v.create(this, this._loadAnimationData, [e, t, i]), null, "atlas")
                }
            } else {
                n._setFramesFromCache(this._actionName, true);
                this.index = 0;
                if (t) t.run()
            }
            return this
        };
        t._loadAnimationData = function(o, l, e) {
            var h = this;
            if (e && !Se.getAtlas(e)) {
                console.warn("atlas load fail:" + e);
                return
            }
            var u = this;
            function t(e) {
                if (!Se.getRes(e)) return;
                if (o === e) {
                    var t;
                    if (!c.framesMap[o + "#"]) {
                        var i = u._parseGraphicAnimation(Se.getRes(o));
                        if (!i) return;
                        var n = i.animationList;
                        var s = 0,
                        a = n.length;
                        var r;
                        for (s = 0; s < a; s++) {
                            t = n[s];
                            c.framesMap[o + "#" + t.name] = t;
                            if (!r) r = t
                        }
                        if (r) {
                            c.framesMap[o + "#"] = r;
                            u._setFramesFromCache(h._actionName, true);
                            h.index = 0
                        }
                        h._checkResumePlaying()
                    } else {
                        u._setFramesFromCache(h._actionName, true);
                        h.index = 0;
                        h._checkResumePlaying()
                    }
                    if (l) l.run()
                }
            }
            if (Se.getRes(o)) t(o);
            else b.loader.load(o, v.create(null, t, [o]), null, "json");
            Se.clearRes(o)
        };
        t._parseGraphicAnimation = function(e) {
            return He.parseAnimationData(e)
        };
        t._parseGraphicAnimationByData = function(e) {
            return He.parseAnimationByData(e)
        };
        u(0, t, "frames",
        function() {
            return this._frames
        },
        function(e) {
            this._frames = e;
            if (e) {
                this._count = e.length;
                if (this._isPlaying) this.play(this._index, this.loop, this._actionName);
                else this.index = this._index
            }
        });
        u(0, t, "autoPlay", null,
        function(e) {
            if (e) this.play();
            else this.stop()
        });
        u(0, t, "source", null,
        function(e) {
            if (e.indexOf(".ani") > -1) this.loadAnimation(e);
            else if (e.indexOf(".json") > -1 || e.indexOf("als") > -1 || e.indexOf("atlas") > -1) this.loadAtlas(e);
            else this.loadImages(e.split(","))
        });
        u(0, t, "autoAnimation", null,
        function(e) {
            this.play(0, true, e, false)
        });
        c.createFrames = function(e, t) {
            var i, n = 0,
            s = 0,
            a;
            if (typeof e == "string") {
                var r = Se.getAtlas(e);
                if (r && r.length) {
                    i = [];
                    for (n = 0, s = r.length; n < s; n++) {
                        a = new D.createGraphics;
                        a.drawTexture(Se.getRes(r[n]), 0, 0);
                        i.push(a)
                    }
                }
            } else if (e instanceof Array) {
                i = [];
                for (n = 0, s = e.length; n < s; n++) {
                    a = new D.createGraphics;
                    a.loadImage(e[n], 0, 0);
                    i.push(a)
                }
            }
            if (t) c.framesMap[t] = i;
            return i
        };
        c.clearCache = function(e) {
            var t = c.framesMap;
            var i;
            var n = e + "#";
            for (i in t) {
                if (i === e || i.indexOf(n) == 0) {
                    delete c.framesMap[i]
                }
            }
        };
        c.framesMap = {};
        return c
    } (Be);
    var Ve = function(e) {
        function a() {
            this._targetDic = null;
            this._animationData = null;
            this._animationNewFrames = null;
            a.__super.call(this);
            if (a._sortIndexFun == null) {
                a._sortIndexFun = G.sortByKey("index", false, true)
            }
        }
        _(a, "laya.display.FrameAnimation", e);
        var t = a.prototype;
        t._setUp = function(e, t) {
            this._labels = null;
            this._animationNewFrames = null;
            this._targetDic = e;
            this._animationData = t;
            this.interval = 1e3 / t.frameRate;
            if (t.parsed) {
                this._count = t.count;
                this._labels = t.labels;
                this._animationNewFrames = t.animationNewFrames
            } else {
                this._animationNewFrames = [];
                this._calculateDatas()
            }
            t.parsed = true;
            t.labels = this._labels;
            t.count = this._count;
            t.animationNewFrames = this._animationNewFrames
        };
        t.clear = function() {
            e.prototype.clear.call(this);
            this._targetDic = null;
            this._animationData = null
        };
        t._displayToIndex = function(e) {
            if (!this._animationData) return;
            if (e < 0) e = 0;
            if (e > this._count) e = this._count;
            var t = this._animationData.nodes,
            i = 0,
            n = t.length;
            for (i = 0; i < n; i++) {
                this._displayNodeToFrame(t[i], e)
            }
        };
        t._displayNodeToFrame = function(e, t, i) {
            if (!i) i = this._targetDic;
            var n = i[e.target];
            if (!n) {
                return
            }
            var s = e.frames,
            a, r, o;
            var l = e.keys,
            h = 0,
            u = l.length;
            for (h = 0; h < u; h++) {
                a = l[h];
                r = s[a];
                if (r.length > t) {
                    o = r[t]
                } else {
                    o = r[r.length - 1]
                }
                n[a] = o
            }
        };
        t._calculateDatas = function() {
            if (!this._animationData) return;
            var e = this._animationData.nodes,
            t = 0,
            i = e.length,
            n;
            this._count = 0;
            for (t = 0; t < i; t++) {
                n = e[t];
                this._calculateNodeKeyFrames(n)
            }
            this._count += 1
        };
        t._calculateNodeKeyFrames = function(e) {
            var t = e.keyframes,
            i, n, s = e.target;
            if (!e.frames) {
                e.frames = {}
            }
            if (!e.keys) {
                e.keys = []
            } else {
                e.keys.length = 0
            }
            if (!e.initValues) {
                e.initValues = {}
            }
            for (i in t) {
                n = t[i];
                if (!e.frames[i]) {
                    e.frames[i] = []
                }
                if (this._targetDic && this._targetDic[s]) {
                    e.initValues[i] = this._targetDic[s][i]
                }
                n.sort(a._sortIndexFun);
                e.keys.push(i);
                this._calculateNodePropFrames(n, e.frames[i], i, s)
            }
        };
        t.resetToInitState = function() {
            if (!this._targetDic) return;
            if (!this._animationData) return;
            var e = this._animationData.nodes,
            t = 0,
            i = e.length;
            var n;
            var s;
            for (t = 0; t < i; t++) {
                n = e[t];
                s = n.initValues;
                if (!s) continue;
                var a = this._targetDic[n.target];
                if (!a) continue;
                var r;
                for (r in s) {
                    a[r] = s[r]
                }
            }
        };
        t._calculateNodePropFrames = function(e, t, i, n) {
            var s = 0,
            a = e.length - 1;
            t.length = e[a].index + 1;
            for (s = 0; s < a; s++) {
                this._dealKeyFrame(e[s]);
                this._calculateFrameValues(e[s], e[s + 1], t)
            }
            if (a == 0) {
                t[e[0].index] = e[0].value;
                if (this._animationNewFrames) this._animationNewFrames[e[0].index] = true
            }
            this._dealKeyFrame(e[s])
        };
        t._dealKeyFrame = function(e) {
            if (e.label && e.label != "") this.addLabel(e.label, e.index)
        };
        t._calculateFrameValues = function(e, t, i) {
            var n = 0,
            s;
            var a = e.index,
            r = t.index;
            var o = e.value;
            var l = t.value - e.value;
            var h = r - a;
            if (r > this._count) this._count = r;
            if (e.tween) {
                s = Z[e.tweenMethod];
                if (s == null) {
                    s = Z.linearNone
                }
                for (n = a; n < r; n++) {
                    i[n] = s(n - a, o, l, h);
                    if (this._animationNewFrames) {
                        this._animationNewFrames[n] = true
                    }
                }
            } else {
                for (n = a; n < r; n++) {
                    i[n] = o
                }
            }
            if (this._animationNewFrames) {
                this._animationNewFrames[e.index] = true;
                this._animationNewFrames[t.index] = true
            }
            i[t.index] = t.value
        };
        a._sortIndexFun = null;
        return a
    } (Be);
    var qe = function(t) {
        function s() {
            this._focus = false;
            this._multiline = false;
            this._editable = true;
            this._restrictPattern = null;
            this._type = "text";
            this._prompt = "";
            this._promptColor = "#A9A9A9";
            this._originColor = "#000000";
            this._content = "";
            s.__super.call(this);
            this._maxChars = 1e5;
            this._width = 100;
            this._height = 20;
            this.multiline = false;
            this.overflow = Ae.SCROLL;
            this.on("mousedown", this, this._onMouseDown);
            this.on("undisplay", this, this._onUnDisplay)
        }
        _(s, "laya.display.Input", t);
        var e = s.prototype;
        e.setSelection = function(e, t) {
            this.focus = true;
            laya.display.Input.inputElement.selectionStart = e;
            laya.display.Input.inputElement.selectionEnd = t
        };
        e._onUnDisplay = function(e) {
            this.focus = false
        };
        e._onMouseDown = function(e) {
            this.focus = true
        };
        e._syncInputTransform = function() {
            var e = this.nativeInput;
            var t = ue.getTransformRelativeToWindow(this, this.padding[3], this.padding[0]);
            var i = this._width - this.padding[1] - this.padding[3];
            var n = this._height - this.padding[0] - this.padding[2];
            if (O.isConchApp) {
                e.setScale(t.scaleX, t.scaleY);
                e.setSize(i, n);
                e.setPos(t.x, t.y)
            } else {
                s.inputContainer.style.transform = s.inputContainer.style.webkitTransform = "scale(" + t.scaleX + "," + t.scaleY + ") rotate(" + b.stage.canvasDegree + "deg)";
                e.style.width = i + "px";
                e.style.height = n + "px";
                s.inputContainer.style.left = t.x + "px";
                s.inputContainer.style.top = t.y + "px"
            }
        };
        e.select = function() {
            this.nativeInput.select()
        };
        e._setInputMethod = function() {
            s.input.parentElement && s.inputContainer.removeChild(s.input);
            s.area.parentElement && s.inputContainer.removeChild(s.area);
            s.inputElement = this._multiline ? s.area: s.input;
            s.inputContainer.appendChild(s.inputElement);
            if (Ae.RightToLeft) {
                s.inputElement.style.direction = "rtl"
            }
        };
        e._focusIn = function() {
            laya.display.Input.isInputting = true;
            var e = this.nativeInput;
            this._focus = true;
            var t = e.style;
            t.whiteSpace = this.wordWrap ? "pre-wrap": "nowrap";
            this._setPromptColor();
            e.readOnly = !this._editable;
            if (O.isConchApp) {
                e.setType(this._type);
                e.setForbidEdit(!this._editable)
            }
            e.maxLength = this._maxChars;
            var i = this.padding;
            e.type = this._type;
            e.value = this._content;
            e.placeholder = this._prompt;
            b.stage.off("keydown", this, this._onKeyDown);
            b.stage.on("keydown", this, this._onKeyDown);
            b.stage.focus = this;
            this.event("focus");
            if (Y.onPC) e.focus();
            if (!Y.onMiniGame && !Y.onBDMiniGame && !Y.onTTMiniGame && !Y.onQGMiniGame) {
                var n = this._text;
                this._text = null
            }
            this.typeset();
            e.setColor(this._originColor);
            if (e.setBgColor) e.setBgColor(this.bgColor);
            e.setFontSize(this.fontSize);
            e.setFontFace(Y.onIPhone ? Ae._fontFamilyMap[this.font] || this.font: this.font);
            if (O.isConchApp) {
                e.setMultiAble && e.setMultiAble(this._multiline)
            }
            t.lineHeight = this.leading + this.fontSize + "px";
            t.fontStyle = this.italic ? "italic": "normal";
            t.fontWeight = this.bold ? "bold": "normal";
            t.textAlign = this.align;
            t.padding = "0 0";
            this._syncInputTransform();
            if (!O.isConchApp && Y.onPC) b.timer.frameLoop(1, this, this._syncInputTransform)
        };
        e._setPromptColor = function() {
            s.promptStyleDOM = Y.getElementById("promptStyle");
            if (!s.promptStyleDOM) {
                s.promptStyleDOM = Y.createElement("style");
                s.promptStyleDOM.setAttribute("id", "promptStyle");
                Y.document.head.appendChild(s.promptStyleDOM)
            }
            s.promptStyleDOM.innerText = "input::-webkit-input-placeholder, textarea::-webkit-input-placeholder {" + "color:" + this._promptColor + "}" + "input:-moz-placeholder, textarea:-moz-placeholder {" + "color:" + this._promptColor + "}" + "input::-moz-placeholder, textarea::-moz-placeholder {" + "color:" + this._promptColor + "}" + "input:-ms-input-placeholder, textarea:-ms-input-placeholder {" + "color:" + this._promptColor + "}"
        };
        e._focusOut = function() {
            laya.display.Input.isInputting = false;
            this._focus = false;
            this._text = null;
            this._content = this.nativeInput.value;
            if (!this._content) {
                b.superSet(Ae, this, "text", this._prompt);
                b.superSet(Ae, this, "color", this._promptColor)
            } else {
                b.superSet(Ae, this, "text", this._content);
                b.superSet(Ae, this, "color", this._originColor)
            }
            b.stage.off("keydown", this, this._onKeyDown);
            b.stage.focus = null;
            this.event("blur");
            if (O.isConchApp) this.nativeInput.blur();
            Y.onPC && b.timer.clear(this, this._syncInputTransform)
        };
        e._onKeyDown = function(e) {
            if (e.keyCode === 13) {
                if (Y.onMobile && !this._multiline) this.focus = false;
                this.event("enter")
            }
        };
        e.changeText = function(e) {
            this._content = e;
            if (this._focus) {
                this.nativeInput.value = e || "";
                this.event("change")
            } else t.prototype.changeText.call(this, e)
        };
        u(0, e, "color", t.prototype._$get_color,
        function(e) {
            if (this._focus) this.nativeInput.setColor(e);
            b.superSet(Ae, this, "color", this._content ? e: this._promptColor);
            this._originColor = e
        });
        u(0, e, "inputElementYAdjuster",
        function() {
            console.warn("deprecated: 由于即使设置了该值，在各平台和浏览器之间也不一定一致，inputElementYAdjuster已弃用。");
            return 0
        },
        function(e) {
            console.warn("deprecated: 由于即使设置了该值，在各平台和浏览器之间也不一定一致，inputElementYAdjuster已弃用。")
        });
        u(0, e, "multiline",
        function() {
            return this._multiline
        },
        function(e) {
            this._multiline = e;
            this.valign = e ? "top": "middle"
        });
        u(0, e, "maxChars",
        function() {
            return this._maxChars
        },
        function(e) {
            if (e <= 0) e = 1e5;
            this._maxChars = e
        });
        u(0, e, "text",
        function() {
            if (this._focus) return this.nativeInput.value;
            else return this._content || ""
        },
        function(e) {
            b.superSet(Ae, this, "color", this._originColor);
            e += "";
            if (this._focus) {
                this.nativeInput.value = e || "";
                this.event("change")
            } else {
                if (!this._multiline) e = e.replace(/\r?\n/g, "");
                this._content = e;
                if (e) b.superSet(Ae, this, "text", e);
                else {
                    b.superSet(Ae, this, "text", this._prompt);
                    b.superSet(Ae, this, "color", this.promptColor)
                }
            }
        });
        u(0, e, "nativeInput",
        function() {
            return this._multiline ? s.area: s.input
        });
        u(0, e, "prompt",
        function() {
            return this._prompt
        },
        function(e) {
            if (!this._text && e) b.superSet(Ae, this, "color", this._promptColor);
            this.promptColor = this._promptColor;
            if (this._text) b.superSet(Ae, this, "text", this._text == this._prompt ? e: this._text);
            else b.superSet(Ae, this, "text", e);
            this._prompt = Ae.langPacks && Ae.langPacks[e] ? Ae.langPacks[e] : e
        });
        u(0, e, "focus",
        function() {
            return this._focus
        },
        function(e) {
            var t = this.nativeInput;
            if (this._focus !== e) {
                if (e) {
                    if (t.target) {
                        t.target._focusOut()
                    } else {
                        this._setInputMethod()
                    }
                    t.target = this;
                    this._focusIn()
                } else {
                    t.target = null;
                    this._focusOut();
                    Y.document.body.scrollTop = 0;
                    t.blur();
                    if (O.isConchApp) {
                        t.setPos( - 1e4, -1e4)
                    } else if (s.inputContainer.contains(t)) s.inputContainer.removeChild(t)
                }
            }
        });
        u(0, e, "restrict",
        function() {
            if (this._restrictPattern) {
                return this._restrictPattern.source
            }
            return ""
        },
        function(e) {
            if (e) {
                e = "[^" + e + "]";
                if (e.indexOf("^^") > -1) e = e.replace("^^", "");
                this._restrictPattern = new RegExp(e, "g")
            } else this._restrictPattern = null
        });
        u(0, e, "editable",
        function() {
            return this._editable
        },
        function(e) {
            this._editable = e;
            if (O.isConchApp) {
                s.input.setForbidEdit(!e)
            }
        });
        u(0, e, "promptColor",
        function() {
            return this._promptColor
        },
        function(e) {
            this._promptColor = e;
            if (!this._content) b.superSet(Ae, this, "color", e)
        });
        u(0, e, "type",
        function() {
            return this._type
        },
        function(e) {
            if (e == "password") this._getCSSStyle().password = true;
            else this._getCSSStyle().password = false;
            this._type = e;
            if (O.isConchApp) {
                this.nativeInput.setType(e)
            }
        });
        u(0, e, "inputElementXAdjuster",
        function() {
            console.warn("deprecated: 由于即使设置了该值，在各平台和浏览器之间也不一定一致，inputElementXAdjuster已弃用。");
            return 0
        },
        function(e) {
            console.warn("deprecated: 由于即使设置了该值，在各平台和浏览器之间也不一定一致，inputElementXAdjuster已弃用。")
        });
        u(0, e, "asPassword",
        function() {
            return this._getCSSStyle().password
        },
        function(e) {
            this._getCSSStyle().password = e;
            this._type = "password";
            console.warn('deprecated: 使用type="password"替代设置asPassword, asPassword将在下次重大更新时删去');
            this.isChanged = true
        });
        s.__init__ = function() {
            s._createInputElement();
            if (Y.onMobile) {
                var e = false;
                if (Y.onMiniGame || Y.onBDMiniGame || Y.onKGMiniGame || Y.onTTMiniGame || Y.onQGMiniGame) {
                    e = true
                }
                O.canvas.addEventListener(s.IOS_IFRAME ? e ? "touchend": "click": "touchend", s._popupInputMethod)
            }
        };
        s._popupInputMethod = function(e) {
            if (!laya.display.Input.isInputting) return;
            var t = laya.display.Input.inputElement;
            t.focus()
        };
        s._createInputElement = function() {
            s._initInput(s.area = Y.createElement("textarea"));
            s._initInput(s.input = Y.createElement("input"));
            s.inputContainer = Y.createElement("div");
            s.inputContainer.style.position = "absolute";
            s.inputContainer.style.zIndex = 1e5;
            Y.container.appendChild(s.inputContainer);
            s.inputContainer.setPos = function(e, t) {
                s.inputContainer.style.left = e + "px";
                s.inputContainer.style.top = t + "px"
            }
        };
        s._initInput = function(t) {
            var e = t.style;
            e.cssText = "position:absolute;overflow:hidden;resize:none;transform-origin:0 0;-webkit-transform-origin:0 0;-moz-transform-origin:0 0;-o-transform-origin:0 0;";
            e.resize = "none";
            e.backgroundColor = "transparent";
            e.border = "none";
            e.outline = "none";
            e.zIndex = 1;
            t.addEventListener("input", s._processInputting);
            t.addEventListener("mousemove", s._stopEvent);
            t.addEventListener("mousedown", s._stopEvent);
            t.addEventListener("touchmove", s._stopEvent);
            t.setFontFace = function(e) {
                t.style.fontFamily = e
            };
            if (!O.isConchApp) {
                t.setColor = function(e) {
                    t.style.color = e
                };
                t.setFontSize = function(e) {
                    t.style.fontSize = e + "px"
                }
            }
        };
        s._processInputting = function(e) {
            var t = laya.display.Input.inputElement.target;
            if (!t) return;
            var i = laya.display.Input.inputElement.value;
            if (t._restrictPattern) {
                i = i.replace(/\u2006|\x27/g, "");
                if (t._restrictPattern.test(i)) {
                    i = i.replace(t._restrictPattern, "");
                    laya.display.Input.inputElement.value = i
                }
            }
            t._text = i;
            t.event("input")
        };
        s._stopEvent = function(e) {
            if (e.type == "touchmove") e.preventDefault();
            e.stopPropagation && e.stopPropagation()
        };
        s.TYPE_TEXT = "text";
        s.TYPE_PASSWORD = "password";
        s.TYPE_EMAIL = "email";
        s.TYPE_URL = "url";
        s.TYPE_NUMBER = "number";
        s.TYPE_RANGE = "range";
        s.TYPE_DATE = "date";
        s.TYPE_MONTH = "month";
        s.TYPE_WEEK = "week";
        s.TYPE_TIME = "time";
        s.TYPE_DATE_TIME = "datetime";
        s.TYPE_DATE_TIME_LOCAL = "datetime-local";
        s.TYPE_SEARCH = "search";
        s.input = null;
        s.area = null;
        s.inputElement = null;
        s.inputContainer = null;
        s.confirmButton = null;
        s.promptStyleDOM = null;
        s.inputHeight = 45;
        s.isInputting = false;
        s.stageMatrix = null;
        l(s, ["IOS_IFRAME",
        function() {
            return this.IOS_IFRAME = Y.onIOS && Y.window.top != Y.window.self
        }]);
        return s
    } (Ae);
    var ze = function(e) {
        function i(e, t) {
            this._recreateLock = false;
            this._needReleaseAgain = false;
            this._enableMerageInAtlas = true;
            i.__super.call(this);
            this._init_(e, t)
        }
        _(i, "laya.resource.HTMLImage", e);
        var t = i.prototype;
        t._init_ = function(e, t) {
            this._src = e;
            this._source = new Y.window.Image;
            if (t) {
                t.onload && (this.onload = t.onload);
                t.onerror && (this.onerror = t.onerror);
                t.onCreate && t.onCreate(this)
            }
            if (e.indexOf("data:image") != 0) this._source.crossOrigin = "";
            e && (this._source.src = e)
        };
        t.recreateResource = function() {
            var e = this;
            if (this._src === "") throw new Error("src no null！");
            this._needReleaseAgain = false;
            if (!this._source) {
                this._recreateLock = true;
                var t = this;
                this._source = new Y.window.Image;
                this._source.crossOrigin = "";
                this._source.onload = function() {
                    if (t._needReleaseAgain) {
                        t._needReleaseAgain = false;
                        t._source.onload = null;
                        t._source = null;
                        return
                    }
                    t._source.onload = null;
                    t.memorySize = e._w * e._h * 4;
                    t._recreateLock = false;
                    t.completeCreate()
                };
                this._source.src = this._src
            } else {
                if (this._recreateLock) return;
                this.memorySize = this._w * this._h * 4;
                this._recreateLock = false;
                this.completeCreate()
            }
        };
        t.disposeResource = function() {
            if (this._recreateLock) this._needReleaseAgain = true;
            this._source && (this._source = null, this.memorySize = 0)
        };
        t.onresize = function() {
            this._w = this._source.width;
            this._h = this._source.height
        };
        u(0, t, "onload", null,
        function(e) {
            var t = this;
            this._onload = e;
            this._source && (this._source.onload = this._onload != null ?
            function() {
                t.onresize();
                t._onload()
            }: null)
        });
        u(0, t, "onerror", null,
        function(e) {
            var t = this;
            this._onerror = e;
            this._source && (this._source.onerror = this._onerror != null ?
            function() {
                t._onerror()
            }: null)
        });
        u(0, t, "enableMerageInAtlas",
        function() {
            return this._enableMerageInAtlas
        },
        function(e) {
            this._enableMerageInAtlas = e;
            if (O.isConchApp) {
                if (this._source) this._source.enableMerageInAtlas = e
            }
        });
        i.create = function(e, t) {
            return new i(e, t)
        };
        return i
    } (Ee);
    var We = function(r) {
        function e() {
            this._target = null;
            this._playEvents = null;
            this._initData = {};
            this._aniKeys = null;
            this._effectClass = null;
            e.__super.call(this)
        }
        _(e, "laya.display.EffectAnimation", r);
        var t = e.prototype;
        t._onOtherBegin = function(e) {
            if (e == this) return;
            this.stop()
        };
        t.addEvent = function() {
            if (!this._target || !this._playEvents) return;
            this._setControlNode(this._target);
            this._target.on(this._playEvents, this, this._onPlayAction)
        };
        t._onPlayAction = function() {
            this.play(0, false)
        };
        t.play = function(e, t, i, n) {
            e === void 0 && (e = 0);
            t === void 0 && (t = true);
            i === void 0 && (i = "");
            n === void 0 && (n = true);
            if (!this._target) return;
            this._target.event("effectanimationbegin", [this]);
            this._recordInitData();
            laya.display.AnimationPlayerBase.prototype.play.call(this, e, t, i, n)
        };
        t._recordInitData = function() {
            if (!this._aniKeys) return;
            var e = 0,
            t = 0;
            t = this._aniKeys.length;
            var i;
            for (e = 0; e < t; e++) {
                i = this._aniKeys[e];
                this._initData[i] = this._target[i]
            }
        };
        t._displayToIndex = function(e) {
            if (!this._animationData) return;
            if (e < 0) e = 0;
            if (e > this._count) e = this._count;
            var t = this._animationData.nodes,
            i = 0,
            n = t.length;
            n = n > 1 ? 1 : n;
            for (i = 0; i < n; i++) {
                this._displayNodeToFrame(t[i], e)
            }
        };
        t._displayNodeToFrame = function(e, t, i) {
            if (!this._target) return;
            var n;
            n = this._target;
            var s = e.frames,
            a, r, o;
            var l = e.keys,
            h = 0,
            u = l.length;
            var c;
            c = e.secondFrames;
            var f = 0;
            var d;
            var g;
            var p;
            var _;
            for (h = 0; h < u; h++) {
                a = l[h];
                r = s[a];
                f = c[a];
                if (f == -1) {
                    o = this._initData[a]
                } else {
                    if (t < f) {
                        g = e.keyframes[a];
                        p = g[0];
                        if (p.tween) {
                            d = Z[p.tweenMethod];
                            if (d == null) {
                                d = Z.linearNone
                            }
                            _ = g[1];
                            o = d(t, this._initData[a], _.value - this._initData[a], _.index)
                        } else {
                            o = this._initData[a]
                        }
                    } else {
                        if (r.length > t) {
                            o = r[t]
                        } else {
                            o = r[r.length - 1]
                        }
                    }
                }
                n[a] = o
            }
        };
        t._calculateNodeKeyFrames = function(e) {
            r.prototype._calculateNodeKeyFrames.call(this, e);
            var t = e.keyframes,
            i, n, s = e.target;
            var a;
            a = {};
            e.secondFrames = a;
            for (i in t) {
                n = t[i];
                if (n.length <= 1) {
                    a[i] = -1
                } else {
                    a[i] = n[1].index
                }
            }
        };
        u(0, t, "target",
        function() {
            return this._target
        },
        function(e) {
            if (this._target) {
                this._target.off("effectanimationbegin", this, this._onOtherBegin)
            }
            this._target = e;
            if (this._target) {
                this._target.on("effectanimationbegin", this, this._onOtherBegin)
            }
            this.addEvent()
        });
        u(0, t, "playEvent", null,
        function(e) {
            this._playEvents = e;
            if (!e) return;
            this.addEvent()
        });
        u(0, t, "effectData", null,
        function(e) {
            if (e) {
                var t;
                t = e["animations"];
                if (t && t[0]) {
                    this._setUp({},
                    t[0]);
                    if (t[0].nodes && t[0].nodes[0]) {
                        this._aniKeys = t[0].nodes[0].keys
                    }
                }
            }
        });
        u(0, t, "effectClass", null,
        function(e) {
            this._effectClass = J.getClass(e);
            if (this._effectClass) {
                var t;
                t = this._effectClass["uiView"];
                if (t) {
                    var i;
                    i = t["animations"];
                    if (i && i[0]) {
                        this._setUp({},
                        i[0]);
                        if (i[0].nodes && i[0].nodes[0]) {
                            this._aniKeys = i[0].nodes[0].keys
                        }
                    }
                }
            }
        });
        e.EffectAnimationBegin = "effectanimationbegin";
        return e
    } (Ve);
    var He = function(t) {
        var L;
        function T() {
            this.animationList = null;
            this.animationDic = null;
            this._nodeList = null;
            this._nodeDefaultProps = null;
            this._gList = null;
            this._nodeIDAniDic = {};
            this._rootNode = null;
            this._nodeGDic = null;
            T.__super.call(this)
        }
        _(T, "laya.utils.GraphicAnimation", t);
        var e = T.prototype;
        e._parseNodeList = function(e) {
            if (!this._nodeList) {
                this._nodeList = []
            }
            this._nodeDefaultProps[e.compId] = e.props;
            if (e.compId) this._nodeList.push(e.compId);
            var t = e.child;
            if (t) {
                var i = 0,
                n = t.length;
                for (i = 0; i < n; i++) {
                    this._parseNodeList(t[i])
                }
            }
        };
        e._calGraphicData = function(e) {
            this._setUp(null, e);
            this._createGraphicData();
            if (this._nodeIDAniDic) {
                var t;
                for (t in this._nodeIDAniDic) {
                    this._nodeIDAniDic[t] = null
                }
            }
        };
        e._createGraphicData = function() {
            var e = [];
            var t = 0,
            i = this.count;
            var n = this._animationNewFrames;
            if (!n) n = [];
            var s;
            for (t = 0; t < i; t++) {
                if (n[t] || !s) {
                    s = this._createFrameGraphic(t)
                }
                e.push(s)
            }
            this._gList = e
        };
        e._createFrameGraphic = function(e) {
            var t = D.createGraphics();
            if (!T._rootMatrix) T._rootMatrix = new M;
            this._updateNodeGraphic(this._rootNode, e, T._rootMatrix, t);
            return t
        };
        e._updateNodeGraphic = function(e, t, i, n, s) {
            s === void 0 && (s = 1);
            var a;
            a = this._nodeGDic[e.compId] = this._getNodeGraphicData(e.compId, t, this._nodeGDic[e.compId]);
            var r = a.alpha * s;
            if (r < .01) return;
            if (!a.resultTransform) {
                a.resultTransform = M.create()
            }
            var o;
            o = a.resultTransform;
            M.mul(a.transform, i, o);
            var l;
            if (a.skin) {
                l = this._getTextureByUrl(a.skin);
                if (l) {
                    if (o._checkTransform()) {
                        n.drawTexture(l, 0, 0, a.width, a.height, o, r);
                        a.resultTransform = null
                    } else {
                        n.drawTexture(l, o.tx, o.ty, a.width, a.height, null, r)
                    }
                }
            }
            var h;
            h = e.child;
            if (!h) return;
            var u = 0,
            c = 0;
            c = h.length;
            for (u = 0; u < c; u++) {
                this._updateNodeGraphic(h[u], t, o, n, r)
            }
        };
        e._updateNoChilds = function(e, t) {
            if (!e.skin) return;
            var i = this._getTextureByUrl(e.skin);
            if (!i) return;
            var n = e.transform;
            n._checkTransform();
            var s = false;
            s = !n.bTransform;
            if (!s) {
                t.drawTexture(i, 0, 0, e.width, e.height, n.clone(), e.alpha)
            } else {
                t.drawTexture(i, n.tx, n.ty, e.width, e.height, null, e.alpha)
            }
        };
        e._updateNodeGraphic2 = function(e, t, i) {
            var n;
            n = this._nodeGDic[e.compId] = this._getNodeGraphicData(e.compId, t, this._nodeGDic[e.compId]);
            if (!e.child) {
                this._updateNoChilds(n, i);
                return
            }
            var s = n.transform;
            s._checkTransform();
            var a = false;
            a = !s.bTransform;
            var r = false;
            r = a && (s.tx != 0 || s.ty != 0);
            var o = false;
            o = s.bTransform || n.alpha != 1;
            if (o) {
                i.save()
            }
            if (n.alpha != 1) {
                i.alpha(n.alpha)
            }
            if (!a) {
                i.transform(s.clone())
            } else if (r) {
                i.translate(s.tx, s.ty)
            }
            var l;
            l = e.child;
            var h;
            if (n.skin) {
                h = this._getTextureByUrl(n.skin);
                if (h) {
                    i.drawTexture(h, 0, 0, n.width, n.height)
                }
            }
            if (l) {
                var u = 0,
                c = 0;
                c = l.length;
                for (u = 0; u < c; u++) {
                    this._updateNodeGraphic2(l[u], t, i)
                }
            }
            if (o) {
                i.restore()
            } else {
                if (!a) {
                    i.transform(s.clone().invert())
                } else if (r) {
                    i.translate( - s.tx, -s.ty)
                }
            }
        };
        e._calculateNodeKeyFrames = function(e) {
            t.prototype._calculateNodeKeyFrames.call(this, e);
            this._nodeIDAniDic[e.target] = e
        };
        e.getNodeDataByID = function(e) {
            return this._nodeIDAniDic[e]
        };
        e._getParams = function(e, t, i, n) {
            var s = T._temParam;
            s.length = t.length;
            var a = 0,
            r = t.length;
            for (a = 0; a < r; a++) {
                s[a] = this._getObjVar(e, t[a][0], i, t[a][1], n)
            }
            return s
        };
        e._getObjVar = function(e, t, i, n, s) {
            if (e.hasOwnProperty(t)) {
                var a = e[t];
                if (i >= a.length) i = a.length - 1;
                if (e[t][i] != undefined) return e[t][i]
            }
            if (s.hasOwnProperty(t)) {
                return s[t]
            }
            return n
        };
        e._getNodeGraphicData = function(e, t, i) {
            if (!i) i = L.create();
            if (!i.transform) {
                i.transform = M.create()
            } else {
                i.transform.identity()
            }
            var n = this.getNodeDataByID(e);
            if (!n) return i;
            var s = n.frames;
            var a = this._getParams(s, T._drawTextureCmd, t, this._nodeDefaultProps[e]);
            var r = a[0];
            var o = NaN,
            l = NaN;
            var h = a[5],
            u = a[6];
            var c = a[13],
            f = a[14];
            var d = a[7],
            g = a[8];
            var p = a[9];
            var _ = a[11],
            m = a[12];
            o = a[3];
            l = a[4];
            if (o == 0 || l == 0) r = null;
            if (o == -1) o = 0;
            if (l == -1) l = 0;
            var v;
            i.skin = r;
            i.width = o;
            i.height = l;
            if (r) {
                v = this._getTextureByUrl(r);
                if (v) {
                    if (!o) o = v.sourceWidth;
                    if (!l) l = v.sourceHeight
                } else {
                    console.warn("lost skin:", r, ",you may load pics first")
                }
            }
            i.alpha = a[10];
            var y;
            y = i.transform;
            if (c != 0) {
                h = c * o
            }
            if (f != 0) {
                u = f * l
            }
            if (h != 0 || u != 0) {
                y.translate( - h, -u)
            }
            var I = null;
            if (p || d !== 1 || g !== 1 || _ || m) {
                I = T._tempMt;
                I.identity();
                I.bTransform = true;
                var S = (p - _) * .0174532922222222;
                var C = (p + m) * .0174532922222222;
                var b = Math.cos(C);
                var w = Math.sin(C);
                var x = Math.sin(S);
                var R = Math.cos(S);
                I.a = d * b;
                I.b = d * w;
                I.c = -g * x;
                I.d = g * R;
                I.tx = I.ty = 0
            }
            if (I) {
                y = M.mul(y, I, y)
            }
            y.translate(a[1], a[2]);
            return i
        };
        e._getTextureByUrl = function(e) {
            return Se.getRes(e)
        };
        e.setAniData = function(e, t) {
            if (e.animations) {
                this._nodeDefaultProps = {};
                this._nodeGDic = {};
                if (this._nodeList) this._nodeList.length = 0;
                this._rootNode = e;
                this._parseNodeList(e);
                var i = {};
                var n = [];
                var s = e.animations;
                var a = 0,
                r = s.length;
                var o;
                for (a = 0; a < r; a++) {
                    o = s[a];
                    this._labels = null;
                    if (t && t != o.name) {
                        continue
                    }
                    if (!o) continue;
                    try {
                        this._calGraphicData(o)
                    } catch(e) {
                        console.warn("parse animation fail:" + o.name + ",empty animation created");
                        this._gList = []
                    }
                    var l = {};
                    l.interval = 1e3 / o["frameRate"];
                    l.frames = this._gList;
                    l.labels = this._labels;
                    l.name = o.name;
                    n.push(l);
                    i[o.name] = l
                }
                this.animationList = n;
                this.animationDic = i
            }
            T._temParam.length = 0
        };
        e.parseByData = function(e) {
            var t, i;
            t = e.nodeRoot;
            i = e.aniO;
            delete e.nodeRoot;
            delete e.aniO;
            this._nodeDefaultProps = {};
            this._nodeGDic = {};
            if (this._nodeList) this._nodeList.length = 0;
            this._rootNode = t;
            this._parseNodeList(t);
            this._labels = null;
            try {
                this._calGraphicData(i)
            } catch(e) {
                console.warn("parse animation fail:" + i.name + ",empty animation created");
                this._gList = []
            }
            var n = e;
            n.interval = 1e3 / i["frameRate"];
            n.frames = this._gList;
            n.labels = this._labels;
            n.name = i.name;
            return n
        };
        e.setUpAniData = function(e) {
            if (e.animations) {
                var t = {};
                var i = [];
                var n = e.animations;
                var s = 0,
                a = n.length;
                var r;
                for (s = 0; s < a; s++) {
                    r = n[s];
                    if (!r) continue;
                    var o = {};
                    o.name = r.name;
                    o.aniO = r;
                    o.nodeRoot = e;
                    i.push(o);
                    t[r.name] = o
                }
                this.animationList = i;
                this.animationDic = t
            }
        };
        e._clear = function() {
            this.animationList = null;
            this.animationDic = null;
            this._gList = null;
            if (this._nodeGDic) {
                var e;
                var t;
                for (e in this._nodeGDic) {
                    t = this._nodeGDic[e];
                    if (t) t.recover()
                }
            }
            this._nodeGDic = null
        };
        T.parseAnimationByData = function(e) {
            if (!T._I) T._I = new T;
            var t;
            t = T._I.parseByData(e);
            T._I._clear();
            return t
        };
        T.parseAnimationData = function(e) {
            if (!T._I) T._I = new T;
            T._I.setUpAniData(e);
            var t;
            t = {};
            t.animationList = T._I.animationList;
            t.animationDic = T._I.animationDic;
            T._I._clear();
            return t
        };
        T._drawTextureCmd = [["skin", null], ["x", 0], ["y", 0], ["width", -1], ["height", -1], ["pivotX", 0], ["pivotY", 0], ["scaleX", 1], ["scaleY", 1], ["rotation", 0], ["alpha", 1], ["skewX", 0], ["skewY", 0], ["anchorX", 0], ["anchorY", 0]];
        T._temParam = [];
        T._I = null;
        T._rootMatrix = null;
        l(T, ["_tempMt",
        function() {
            return this._tempMt = new M
        }]);
        T.__init$ = function() {
            L = function() {
                function e() {
                    this.skin = null;
                    this.transform = null;
                    this.resultTransform = null;
                    this.width = NaN;
                    this.height = NaN;
                    this.alpha = 1
                }
                _(e, "");
                var t = e.prototype;
                t.recover = function() {
                    this.skin = null;
                    this.width = 0;
                    this.height = 0;
                    this.alpha = 1;
                    if (this.transform) {
                        this.transform.destroy();
                        this.transform = null
                    }
                    if (this.resultTransform) {
                        this.resultTransform.destroy();
                        this.resultTransform = null
                    }
                    se.recover("GraphicNode", this)
                };
                e.create = function() {
                    return se.getItemByClass("GraphicNode", e)
                };
                return e
            } ()
        };
        return T
    } (Ve);
    b.__init([a, Ce, He, O, Y, le, U, Te])
})(window, document, Laya); (function(e, t, i) {
    var n = i.un,
    s = i.uns,
    a = i.static,
    r = i.class,
    o = i.getset,
    l = i.__newvec;
    var h = function() {
        function e() {}
        r(e, "LayaMain");
        return e
    } ();
    new h
})(window, document, Laya);
if (typeof define === "function" && define.amd) {
    define("laya.core", ["require", "exports"],
    function(e, t) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: true
        });
        for (var i in Laya) {
            var n = Laya[i];
            n && n.__isclass && (t[i] = n)
        }
    })
} (function(e, t, C) {
    var i = C.un,
    n = C.uns,
    r = C.static,
    _ = C.class,
    l = C.getset,
    a = C.__newvec;
    var c = laya.maths.Arith,
    f = laya.maths.Bezier,
    s = laya.resource.Bitmap,
    d = laya.utils.Browser;
    var g = laya.utils.Byte,
    p = laya.utils.Color,
    o = laya.filters.ColorFilter,
    b = C.Config,
    h = laya.resource.Context;
    var u = laya.events.Event,
    w = laya.filters.Filter,
    m = laya.display.Graphics,
    v = laya.resource.HTMLCanvas;
    var y = laya.utils.HTMLChar,
    I = laya.resource.HTMLImage,
    S = laya.resource.HTMLSubImage;
    var x = laya.utils.Handler,
    R = laya.net.Loader,
    L = laya.maths.Matrix,
    T = laya.maths.Point,
    D = laya.maths.Rectangle;
    var k = laya.renders.Render,
    G = laya.renders.RenderContext,
    M = laya.renders.RenderSprite;
    var B = laya.resource.Resource,
    A = laya.resource.ResourceManager,
    P = laya.utils.RunDriver;
    var U = laya.display.Sprite,
    E = laya.display.Stage,
    N = laya.utils.Stat,
    F = laya.utils.StringKey;
    var O = laya.display.css.Style,
    V = laya.system.System,
    q = laya.display.Text,
    z = laya.resource.Texture;
    var W = laya.display.css.TransformInfo,
    H = laya.net.URL,
    Y = laya.utils.Utils,
    j = laya.utils.VectorGraphManager;
    var X = laya.utils.WordText;
    C.interface("laya.webgl.shapes.IShape");
    C.interface("laya.webgl.submit.ISubmit");
    C.interface("laya.webgl.text.ICharSegment");
    C.interface("laya.webgl.canvas.save.ISaveData");
    C.interface("laya.webgl.resource.IMergeAtlasBitmap");
    C.interface("laya.filters.IFilterActionGL", "laya.filters.IFilterAction");
    var J = function() {
        function e() {}
        _(e, "laya.filters.webgl.FilterActionGL");
        var t = e.prototype;
        C.imps(t, {
            "laya.filters.IFilterActionGL": true
        });
        t.setValue = function(e) {};
        t.setValueMix = function(e) {};
        t.apply3d = function(e, t, i, n, s) {
            return null
        };
        t.apply = function(e) {
            return null
        };
        l(0, t, "typeMix",
        function() {
            return 0
        });
        return e
    } ();
    var $ = function() {
        function e() {}
        _(e, "laya.webgl.shader.ShaderValue");
        return e
    } ();
    var K = function() {
        var n, s;
        function e(e, t, i) {
            this._atlasID = 0;
            this._width = 0;
            this._height = 0;
            this._texCount = 0;
            this._rowInfo = null;
            this._cells = null;
            this._failSize = new s;
            e === void 0 && (e = 0);
            t === void 0 && (t = 0);
            i === void 0 && (i = 0);
            this._cells = null;
            this._rowInfo = null;
            this._init(e, t);
            this._atlasID = i
        }
        _(e, "laya.webgl.atlas.AtlasGrid");
        var t = e.prototype;
        t.getAltasID = function() {
            return this._atlasID
        };
        t.setAltasID = function(e) {
            if (e >= 0) {
                this._atlasID = e
            }
        };
        t.addTex = function(e, t, i) {
            var n = this._get(t, i);
            if (n.ret == false) {
                return n
            }
            this._fill(n.x, n.y, t, i, e);
            this._texCount++;
            return n
        };
        t._release = function() {
            if (this._cells != null) {
                this._cells.length = 0;
                this._cells = null
            }
            if (this._rowInfo) {
                this._rowInfo.length = 0;
                this._rowInfo = null
            }
        };
        t._init = function(e, t) {
            this._width = e;
            this._height = t;
            this._release();
            if (this._width == 0) return false;
            this._cells = new Uint8Array(this._width * this._height * 3);
            this._rowInfo = a(this._height);
            for (var i = 0; i < this._height; i++) {
                this._rowInfo[i] = new n
            }
            this._clear();
            return true
        };
        t._get = function(e, t) {
            var i = new Z;
            if (e >= this._failSize.width && t >= this._failSize.height) {
                return i
            }
            var n = -1;
            var s = -1;
            var a = this._width;
            var r = this._height;
            var o = this._cells;
            for (var l = 0; l < r; l++) {
                if (this._rowInfo[l].spaceCount < e) continue;
                for (var h = 0; h < a;) {
                    var u = (l * a + h) * 3;
                    if (o[u] != 0 || o[u + 1] < e || o[u + 2] < t) {
                        h += o[u + 1];
                        continue
                    }
                    n = h;
                    s = l;
                    for (var c = 0; c < e; c++) {
                        if (o[3 * c + u + 2] < t) {
                            n = -1;
                            break
                        }
                    }
                    if (n < 0) {
                        h += o[u + 1];
                        continue
                    }
                    i.ret = true;
                    i.x = n;
                    i.y = s;
                    return i
                }
            }
            return i
        };
        t._fill = function(e, t, i, n, s) {
            var a = this._width;
            var r = this._height;
            this._check(e + i <= a && t + n <= r);
            for (var o = t; o < n + t; ++o) {
                this._check(this._rowInfo[o].spaceCount >= i);
                this._rowInfo[o].spaceCount -= i;
                for (var l = 0; l < i; l++) {
                    var h = (e + o * a + l) * 3;
                    this._check(this._cells[h] == 0);
                    this._cells[h] = s;
                    this._cells[h + 1] = i;
                    this._cells[h + 2] = n
                }
            }
            if (e > 0) {
                for (o = 0; o < n; ++o) {
                    var u = 0;
                    for (l = e - 1; l >= 0; --l, ++u) {
                        if (this._cells[((t + o) * a + l) * 3] != 0) break
                    }
                    for (l = u; l > 0; --l) {
                        this._cells[((t + o) * a + e - l) * 3 + 1] = l;
                        this._check(l > 0)
                    }
                }
            }
            if (t > 0) {
                for (l = e; l < e + i; ++l) {
                    u = 0;
                    for (o = t - 1; o >= 0; --o, u++) {
                        if (this._cells[(l + o * a) * 3] != 0) break
                    }
                    for (o = u; o > 0; --o) {
                        this._cells[(l + (t - o) * a) * 3 + 2] = o;
                        this._check(o > 0)
                    }
                }
            }
        };
        t._check = function(e) {
            if (e == false) {
                console.log("xtexMerger 错误啦")
            }
        };
        t._clear = function() {
            this._texCount = 0;
            for (var e = 0; e < this._height; e++) {
                this._rowInfo[e].spaceCount = this._width
            }
            for (var t = 0; t < this._height; t++) {
                for (var i = 0; i < this._width; i++) {
                    var n = (t * this._width + i) * 3;
                    this._cells[n] = 0;
                    this._cells[n + 1] = this._width - i;
                    this._cells[n + 2] = this._width - t
                }
            }
            this._failSize.width = this._width + 1;
            this._failSize.height = this._height + 1
        };
        e.__init$ = function() {
            n = function() {
                function e() {
                    this.spaceCount = 0
                }
                _(e, "");
                return e
            } ();
            s = function() {
                function e() {
                    this.width = 0;
                    this.height = 0
                }
                _(e, "");
                return e
            } ()
        };
        return e
    } ();
    var Q = function() {
        function y(e, t, i, n) {
            this._currentAtlasCount = 0;
            this._maxAtlaserCount = 0;
            this._width = 0;
            this._height = 0;
            this._gridSize = 0;
            this._gridNumX = 0;
            this._gridNumY = 0;
            this._init = false;
            this._curAtlasIndex = 0;
            this._setAtlasParam = false;
            this._atlaserArray = null;
            this._needGC = false;
            this._setAtlasParam = true;
            this._width = e;
            this._height = t;
            this._gridSize = i;
            this._maxAtlaserCount = n;
            this._gridNumX = e / i;
            this._gridNumY = t / i;
            this._curAtlasIndex = 0;
            this._atlaserArray = []
        }
        _(y, "laya.webgl.atlas.AtlasResourceManager");
        var e = y.prototype;
        e.setAtlasParam = function(e, t, i, n) {
            if (this._setAtlasParam == true) {
                y._sid_ = 0;
                this._width = e;
                this._height = t;
                this._gridSize = i;
                this._maxAtlaserCount = n;
                this._gridNumX = e / i;
                this._gridNumY = t / i;
                this._curAtlasIndex = 0;
                this.freeAll();
                return true
            } else {
                console.log("设置大图合集参数错误，只能在开始页面设置各种参数");
                throw - 1;
                return false
            }
            return false
        };
        e.pushData = function(e) {
            var t = e.bitmap;
            var i = -1;
            var n = null;
            var s = 0,
            a = 0,
            r = 0;
            for (s = 0, a = this._atlaserArray.length; s < a; s++) {
                r = (this._curAtlasIndex + s) % a;
                n = this._atlaserArray[r];
                i = n.findBitmapIsExist(t);
                if (i != -1) {
                    break
                }
            }
            if (i != -1) {
                var o = n.InAtlasWebGLImagesOffsetValue[i];
                _ = o[0];
                m = o[1];
                n.addToAtlas(e, _, m);
                return true
            } else {
                var l = e;
                this._setAtlasParam = false;
                var h = false;
                var u = Math.ceil((e.bitmap.width + 2) / this._gridSize);
                var c = Math.ceil((e.bitmap.height + 2) / this._gridSize);
                var f = false;
                for (var d = 0; d < 2; d++) {
                    var g = this._maxAtlaserCount;
                    for (s = 0; s < g; s++) {
                        r = (this._curAtlasIndex + s) % g;
                        this._atlaserArray.length - 1 >= r || this._atlaserArray.push(new qe(this._gridNumX, this._gridNumY, this._width, this._height, y._sid_++));
                        var p = this._atlaserArray[r];
                        var _ = 0,
                        m = 0;
                        var v = p.addTex(1, u, c);
                        if (v.ret) {
                            _ = v.x * this._gridSize + 1;
                            m = v.y * this._gridSize + 1;
                            t.lock = true;
                            p.addToAtlasTexture(t, _, m);
                            p.addToAtlas(e, _, m);
                            f = true;
                            this._curAtlasIndex = r;
                            break
                        }
                    }
                    if (f) break;
                    this._atlaserArray.push(new qe(this._gridNumX, this._gridNumY, this._width, this._height, y._sid_++));
                    this._needGC = true;
                    this.garbageCollection();
                    this._curAtlasIndex = this._atlaserArray.length - 1
                }
                if (!f) {
                    console.log(">>>AtlasManager pushData error")
                }
                return f
            }
        };
        e.addToAtlas = function(e) {
            laya.webgl.atlas.AtlasResourceManager.instance.pushData(e)
        };
        e.garbageCollection = function() {
            if (this._needGC === true) {
                var e = this._atlaserArray.length - this._maxAtlaserCount;
                for (var t = 0; t < e; t++) {
                    this._atlaserArray[t].dispose();
                    console.log("AtlasResourceManager:Dispose the inner Atlas。")
                }
                console.log(">>>>altas garbageCollection =" + e);
                this._atlaserArray.splice(0, e);
                this._needGC = false
            }
            return true
        };
        e.freeAll = function() {
            for (var e = 0,
            t = this._atlaserArray.length; e < t; e++) {
                this._atlaserArray[e].dispose()
            }
            this._atlaserArray.length = 0;
            this._curAtlasIndex = 0
        };
        e.getAtlaserCount = function() {
            return this._atlaserArray.length
        };
        e.getAtlaserByIndex = function(e) {
            return this._atlaserArray[e]
        };
        l(1, y, "instance",
        function() {
            if (!y._Instance) {
                y._Instance = new y(laya.webgl.atlas.AtlasResourceManager.atlasTextureWidth, laya.webgl.atlas.AtlasResourceManager.atlasTextureHeight, 16, laya.webgl.atlas.AtlasResourceManager.maxTextureCount)
            }
            return y._Instance
        });
        l(1, y, "enabled",
        function() {
            return b.atlasEnable
        });
        l(1, y, "atlasLimitWidth",
        function() {
            return y._atlasLimitWidth
        },
        function(e) {
            y._atlasLimitWidth = e
        });
        l(1, y, "atlasLimitHeight",
        function() {
            return y._atlasLimitHeight
        },
        function(e) {
            y._atlasLimitHeight = e
        });
        y._enable = function() {
            b.atlasEnable = true
        };
        y._disable = function() {
            b.atlasEnable = false
        };
        y.__init__ = function() {
            y.atlasTextureWidth = 2048;
            y.atlasTextureHeight = 2048;
            y.maxTextureCount = 6;
            y.atlasLimitWidth = 512;
            y.atlasLimitHeight = 512
        };
        y._atlasLimitWidth = 0;
        y._atlasLimitHeight = 0;
        y.gridSize = 16;
        y.atlasTextureWidth = 0;
        y.atlasTextureHeight = 0;
        y.maxTextureCount = 0;
        y._atlasRestore = 0;
        y.BOARDER_TYPE_NO = 0;
        y.BOARDER_TYPE_RIGHT = 1;
        y.BOARDER_TYPE_LEFT = 2;
        y.BOARDER_TYPE_BOTTOM = 4;
        y.BOARDER_TYPE_TOP = 8;
        y.BOARDER_TYPE_ALL = 15;
        y._sid_ = 0;
        y._Instance = null;
        return y
    } ();
    var Z = function() {
        function e() {
            this.x = 0;
            this.y = 0;
            this.ret = false;
            this.ret = false;
            this.x = 0;
            this.y = 0
        }
        _(e, "laya.webgl.atlas.MergeFillInfo");
        return e
    } ();
    var ee = function() {
        function t() {}
        _(t, "laya.webgl.canvas.BlendMode");
        t._init_ = function(e) {
            t.fns = [t.BlendNormal, t.BlendAdd, t.BlendMultiply, t.BlendScreen, t.BlendOverlay, t.BlendLight, t.BlendMask, t.BlendDestinationOut];
            t.targetFns = [t.BlendNormalTarget, t.BlendAddTarget, t.BlendMultiplyTarget, t.BlendScreenTarget, t.BlendOverlayTarget, t.BlendLightTarget, t.BlendMask, t.BlendDestinationOut]
        };
        t.BlendNormal = function(e) {
            e.blendFunc(1, 771)
        };
        t.BlendAdd = function(e) {
            e.blendFunc(1, 772)
        };
        t.BlendMultiply = function(e) {
            e.blendFunc(774, 771)
        };
        t.BlendScreen = function(e) {
            e.blendFunc(1, 1)
        };
        t.BlendOverlay = function(e) {
            e.blendFunc(1, 769)
        };
        t.BlendLight = function(e) {
            e.blendFunc(1, 1)
        };
        t.BlendNormalTarget = function(e) {
            e.blendFunc(1, 771)
        };
        t.BlendAddTarget = function(e) {
            e.blendFunc(1, 772)
        };
        t.BlendMultiplyTarget = function(e) {
            e.blendFunc(774, 771)
        };
        t.BlendScreenTarget = function(e) {
            e.blendFunc(1, 1)
        };
        t.BlendOverlayTarget = function(e) {
            e.blendFunc(1, 769)
        };
        t.BlendLightTarget = function(e) {
            e.blendFunc(1, 1)
        };
        t.BlendMask = function(e) {
            e.blendFunc(0, 770)
        };
        t.BlendDestinationOut = function(e) {
            e.blendFunc(0, 0)
        };
        t.activeBlendFunction = null;
        t.NAMES = ["normal", "add", "multiply", "screen", "overlay", "light", "mask", "destination-out"];
        t.TOINT = {
            normal: 0,
            add: 1,
            multiply: 2,
            screen: 3,
            lighter: 1,
            overlay: 4,
            light: 5,
            mask: 6,
            "destination-out": 7
        };
        t.NORMAL = "normal";
        t.ADD = "add";
        t.MULTIPLY = "multiply";
        t.SCREEN = "screen";
        t.LIGHT = "light";
        t.OVERLAY = "overlay";
        t.DESTINATIONOUT = "destination-out";
        t.fns = [];
        t.targetFns = [];
        return t
    } ();
    var te = function() {
        function i(e) {
            this._color = p.create("black");
            this.setValue(e)
        }
        _(i, "laya.webgl.canvas.DrawStyle");
        var e = i.prototype;
        e.setValue = function(e) {
            if (e) {
                if (typeof e == "string") {
                    this._color = p.create(e);
                    return
                }
                if (e instanceof laya.utils.Color) {
                    this._color = e;
                    return
                }
            }
        };
        e.reset = function() {
            this._color = p.create("black")
        };
        e.equal = function(e) {
            if (typeof e == "string") return this._color.strColor === e;
            if (e instanceof laya.utils.Color) return this._color.numColor === e.numColor;
            return false
        };
        e.toColorStr = function() {
            return this._color.strColor
        };
        i.create = function(e) {
            if (e) {
                var t;
                if (typeof e == "string") t = p.create(e);
                else if (e instanceof laya.utils.Color) t = e;
                if (t) {
                    return t._drawStyle || (t._drawStyle = new i(e))
                }
            }
            return laya.webgl.canvas.DrawStyle.DEFAULT
        };
        r(i, ["DEFAULT",
        function() {
            return this.DEFAULT = new i("#000000")
        }]);
        return i
    } ();
    var ie = function() {
        function e() {
            this._x = 0;
            this._y = 0;
            this.dirty = false;
            this.offset = 0;
            this.count = 0;
            this.geoStart = 0;
            this.tempArray = [];
            this.closePath = false;
            this.geomatrys = [];
            var e = Pe.mainContext;
            this.ib = pt.create(35048);
            this.vb = _t.create(5)
        }
        _(e, "laya.webgl.canvas.Path");
        var t = e.prototype;
        t.addPoint = function(e, t) {
            this.tempArray.push(e, t)
        };
        t.getEndPointX = function() {
            return this.tempArray[this.tempArray.length - 2]
        };
        t.getEndPointY = function() {
            return this.tempArray[this.tempArray.length - 1]
        };
        t.polygon = function(e, t, i, n, s, a) {
            var r;
            this.geomatrys.push(this._curGeomatry = r = new je(e, t, i, n, s, a));
            if (!n) r.fill = false;
            if (a == undefined) r.borderWidth = 0;
            return r
        };
        t.setGeomtry = function(e) {
            this.geomatrys.push(this._curGeomatry = e)
        };
        t.drawLine = function(e, t, i, n, s) {
            var a;
            if (this.closePath) {
                this.geomatrys.push(this._curGeomatry = a = new Ye(e, t, i, n, s))
            } else {
                this.geomatrys.push(this._curGeomatry = a = new He(e, t, i, n, s))
            }
            a.fill = false;
            return a
        };
        t.update = function() {
            var e = this.ib._byteLength;
            var t = this.geomatrys.length;
            this.offset = e;
            for (var i = this.geoStart; i < t; i++) {
                this.geomatrys[i].getData(this.ib, this.vb, this.vb._byteLength / 20)
            }
            this.geoStart = t;
            this.count = (this.ib._byteLength - e) / De.BYTES_PIDX
        };
        t.reset = function() {
            this.vb.clear();
            this.ib.clear();
            this.offset = this.count = this.geoStart = 0;
            this.geomatrys.length = 0
        };
        t.recover = function() {
            this._curGeomatry = null;
            this.vb.destory();
            this.vb = null;
            this.ib.destory();
            this.ib = null
        };
        return e
    } ();
    var ne = function() {
        function o() {}
        _(o, "laya.webgl.canvas.save.SaveBase");
        var e = o.prototype;
        C.imps(e, {
            "laya.webgl.canvas.save.ISaveData": true
        });
        e.isSaveMark = function() {
            return false
        };
        e.restore = function(e) {
            this._dataObj[this._valueName] = this._value;
            o._cache[o._cache._length++] = this;
            this._newSubmit && (e._curSubmit = ye.RENDERBASE, e._renderKey = 0)
        };
        o._createArray = function() {
            var e = [];
            e._length = 0;
            return e
        };
        o._init = function() {
            var e = o._namemap = {};
            e[1] = "ALPHA";
            e[2] = "fillStyle";
            e[8] = "font";
            e[256] = "lineWidth";
            e[512] = "strokeStyle";
            e[8192] = "_mergeID";
            e[1024] = e[2048] = e[4096] = [];
            e[16384] = "textBaseline";
            e[32768] = "textAlign";
            e[65536] = "_nBlendType";
            e[1048576] = "shader";
            e[2097152] = "filters";
            return e
        };
        o.save = function(e, t, i, n) {
            if ((e._saveMark._saveuse & t) !== t) {
                e._saveMark._saveuse |= t;
                var s = o._cache;
                var a = s._length > 0 ? s[--s._length] : new o;
                a._value = i[a._valueName = o._namemap[t]];
                a._dataObj = i;
                a._newSubmit = n;
                var r = e._save;
                r[r._length++] = a
            }
        };
        o._cache = laya.webgl.canvas.save.SaveBase._createArray();
        o._namemap = o._init();
        return o
    } ();
    var se = function() {
        function a() {
            this._clipRect = new D
        }
        _(a, "laya.webgl.canvas.save.SaveClipRect");
        var e = a.prototype;
        C.imps(e, {
            "laya.webgl.canvas.save.ISaveData": true
        });
        e.isSaveMark = function() {
            return false
        };
        e.restore = function(e) {
            e._clipRect = this._clipSaveRect;
            a._cache[a._cache._length++] = this;
            this._submitScissor.submitLength = e._submits._length - this._submitScissor.submitIndex;
            e._curSubmit = ye.RENDERBASE;
            e._renderKey = 0
        };
        a.save = function(e, t) {
            if ((e._saveMark._saveuse & 131072) == 131072) return;
            e._saveMark._saveuse |= 131072;
            var i = a._cache;
            var n = i._length > 0 ? i[--i._length] : new a;
            n._clipSaveRect = e._clipRect;
            e._clipRect = n._clipRect.copyFrom(e._clipRect);
            n._submitScissor = t;
            var s = e._save;
            s[s._length++] = n
        };
        r(a, ["_cache",
        function() {
            return this._cache = ne._createArray()
        }]);
        return a
    } ();
    var ae = function() {
        function d() {
            this._contextX = 0;
            this._contextY = 0;
            this._clipRect = new D;
            this._rect = new D;
            this._matrix = new L
        }
        _(d, "laya.webgl.canvas.save.SaveClipRectStencil");
        var e = d.prototype;
        C.imps(e, {
            "laya.webgl.canvas.save.ISaveData": true
        });
        e.isSaveMark = function() {
            return false
        };
        e.restore = function(e) {
            we.restore(e, this._rect, this._saveMatrix, this._contextX, this._contextY);
            e._clipRect = this._clipSaveRect;
            e._curMat = this._saveMatrix;
            e._x = this._contextX;
            e._y = this._contextY;
            d._cache[d._cache._length++] = this;
            e._curSubmit = ye.RENDERBASE
        };
        d.save = function(e, t, i, n, s, a, r, o, l, h) {
            if ((e._saveMark._saveuse & 262144) == 262144) return;
            e._saveMark._saveuse |= 262144;
            var u = d._cache;
            var c = u._length > 0 ? u[--u._length] : new d;
            c._clipSaveRect = e._clipRect;
            c._clipRect.setTo(r, o, l, h);
            e._clipRect = c._clipRect;
            c._rect.x = i;
            c._rect.y = n;
            c._rect.width = s;
            c._rect.height = a;
            c._contextX = e._x;
            c._contextY = e._y;
            c._saveMatrix = e._curMat;
            e._curMat.copyTo(c._matrix);
            e._curMat = c._matrix;
            c._submitStencil = t;
            var f = e._save;
            f[f._length++] = c
        };
        r(d, ["_cache",
        function() {
            return this._cache = ne._createArray()
        }]);
        return d
    } ();
    var re = function() {
        function n() {
            this._saveuse = 0
        }
        _(n, "laya.webgl.canvas.save.SaveMark");
        var e = n.prototype;
        C.imps(e, {
            "laya.webgl.canvas.save.ISaveData": true
        });
        e.isSaveMark = function() {
            return true
        };
        e.restore = function(e) {
            e._saveMark = this._preSaveMark;
            n._no[n._no._length++] = this
        };
        n.Create = function(e) {
            var t = n._no;
            var i = t._length > 0 ? t[--t._length] : new n;
            i._saveuse = 0;
            i._preSaveMark = e._saveMark;
            e._saveMark = i;
            return i
        };
        r(n, ["_no",
        function() {
            return this._no = ne._createArray()
        }]);
        return n
    } ();
    var oe = function() {
        function a() {
            this._matrix = new L
        }
        _(a, "laya.webgl.canvas.save.SaveTransform");
        var e = a.prototype;
        C.imps(e, {
            "laya.webgl.canvas.save.ISaveData": true
        });
        e.isSaveMark = function() {
            return false
        };
        e.restore = function(e) {
            e._curMat = this._savematrix;
            a._no[a._no._length++] = this
        };
        a.save = function(e) {
            var t = e._saveMark;
            if ((t._saveuse & 2048) === 2048) return;
            t._saveuse |= 2048;
            var i = a._no;
            var n = i._length > 0 ? i[--i._length] : new a;
            n._savematrix = e._curMat;
            e._curMat = e._curMat.copyTo(n._matrix);
            var s = e._save;
            s[s._length++] = n
        };
        r(a, ["_no",
        function() {
            return this._no = ne._createArray()
        }]);
        return a
    } ();
    var le = function() {
        function s() {}
        _(s, "laya.webgl.canvas.save.SaveTranslate");
        var e = s.prototype;
        C.imps(e, {
            "laya.webgl.canvas.save.ISaveData": true
        });
        e.isSaveMark = function() {
            return false
        };
        e.restore = function(e) {
            var t = e._curMat;
            e._x = this._x;
            e._y = this._y;
            s._no[s._no._length++] = this
        };
        s.save = function(e) {
            var t = s._no;
            var i = t._length > 0 ? t[--t._length] : new s;
            i._x = e._x;
            i._y = e._y;
            var n = e._save;
            n[n._length++] = i
        };
        r(s, ["_no",
        function() {
            return this._no = ne._createArray()
        }]);
        return s
    } ();
    var he = function() {
        function e() {
            this.target = null;
            this.repaint = false;
            this._width = NaN;
            this._height = NaN;
            this._sp = null;
            this._clipRect = new D
        }
        _(e, "laya.webgl.resource.RenderTargetMAX");
        var t = e.prototype;
        t.setSP = function(e) {
            this._sp = e
        };
        t.size = function(e, t) {
            var i = this;
            if (this._width === e && this._height === t) {
                this.target.size(e, t);
                return
            }
            this.repaint = true;
            this._width = e;
            this._height = t;
            if (!this.target) this.target = Qe.create(e, t);
            else this.target.size(e, t);
            if (!this.target.hasListener("recovered")) {
                this.target.on("recovered", this,
                function(e) {
                    C.timer.callLater(i._sp, i._sp.repaint)
                })
            }
        };
        t._flushToTarget = function(e, t) {
            if (t._destroy) return;
            var i = Be.worldScissorTest;
            var n = Be.worldClipRect;
            Be.worldClipRect = this._clipRect;
            this._clipRect.x = this._clipRect.y = 0;
            this._clipRect.width = this._width;
            this._clipRect.height = this._height;
            Be.worldScissorTest = false;
            Pe.mainContext.disable(3089);
            var s = Be.worldAlpha;
            var a = Be.worldMatrix4;
            var r = Be.worldMatrix;
            var o = Be.worldFilters;
            var l = Be.worldShaderDefines;
            Be.worldMatrix = L.EMPTY;
            Be.restoreTempArray();
            Be.worldMatrix4 = Be.TEMPMAT4_ARRAY;
            Be.worldAlpha = 1;
            Be.worldFilters = null;
            Be.worldShaderDefines = null;
            Ke.activeShader = null;
            t.start();
            b.showCanvasMark ? t.clear(0, 1, 0, .3) : t.clear(0, 0, 0, 0);
            e.flush();
            t.end();
            Ke.activeShader = null;
            Be.worldAlpha = s;
            Be.worldMatrix4 = a;
            Be.worldMatrix = r;
            Be.worldFilters = o;
            Be.worldShaderDefines = l;
            Be.worldScissorTest = i;
            if (i) {
                var h = Be.height - n.y - n.height;
                Pe.mainContext.scissor(n.x, h, n.width, n.height);
                Pe.mainContext.enable(3089)
            }
            Be.worldClipRect = n
        };
        t.flush = function(e) {
            if (this.repaint) {
                this._flushToTarget(e, this.target);
                this.repaint = false
            }
        };
        t.drawTo = function(e, t, i, n, s) {
            e.drawTexture(this.target.getTexture(), t, i, n, s, 0, 0)
        };
        t.destroy = function() {
            if (this.target) {
                this.target.destroy();
                this.target = null;
                this._sp = null
            }
        };
        return e
    } ();
    var ue = function() {
        function e() {
            this.ALPHA = 1;
            this.shaderType = 0;
            this.defines = new ze
        }
        _(e, "laya.webgl.shader.d2.Shader2D");
        var t = e.prototype;
        t.destroy = function() {
            this.defines = null;
            this.filters = null;
            this.glTexture = null;
            this.strokeStyle = null;
            this.fillStyle = null
        };
        e.__init__ = function() {
            ut.addInclude("parts/ColorFilter_ps_uniform.glsl", "uniform vec4 colorAlpha;\nuniform mat4 colorMat;");
            ut.addInclude("parts/ColorFilter_ps_logic.glsl", "mat4 alphaMat =colorMat;\n\nalphaMat[0][3] *= gl_FragColor.a;\nalphaMat[1][3] *= gl_FragColor.a;\nalphaMat[2][3] *= gl_FragColor.a;\n\ngl_FragColor = gl_FragColor * alphaMat;\ngl_FragColor += colorAlpha/255.0*gl_FragColor.a;\n");
            ut.addInclude("parts/GlowFilter_ps_uniform.glsl", "uniform vec4 u_color;\nuniform float u_strength;\nuniform float u_blurX;\nuniform float u_blurY;\nuniform float u_offsetX;\nuniform float u_offsetY;\nuniform float u_textW;\nuniform float u_textH;");
            ut.addInclude("parts/GlowFilter_ps_logic.glsl", "const float c_IterationTime = 10.0;\nfloat floatIterationTotalTime = c_IterationTime * c_IterationTime;\nvec4 vec4Color = vec4(0.0,0.0,0.0,0.0);\nvec2 vec2FilterDir = vec2(-(u_offsetX)/u_textW,-(u_offsetY)/u_textH);\nvec2 vec2FilterOff = vec2(u_blurX/u_textW/c_IterationTime * 2.0,u_blurY/u_textH/c_IterationTime * 2.0);\nfloat maxNum = u_blurX * u_blurY;\nvec2 vec2Off = vec2(0.0,0.0);\nfloat floatOff = c_IterationTime/2.0;\nfor(float i = 0.0;i<=c_IterationTime; ++i){\n\tfor(float j = 0.0;j<=c_IterationTime; ++j){\n\t\tvec2Off = vec2(vec2FilterOff.x * (i - floatOff),vec2FilterOff.y * (j - floatOff));\n\t\tvec4Color += texture2D(texture, v_texcoord + vec2FilterDir + vec2Off)/floatIterationTotalTime;\n\t}\n}\ngl_FragColor = vec4(u_color.rgb,vec4Color.a * u_strength);\ngl_FragColor.rgb *= gl_FragColor.a;");
            ut.addInclude("parts/BlurFilter_ps_logic.glsl", "gl_FragColor =   blur();\ngl_FragColor.w*=alpha;");
            ut.addInclude("parts/BlurFilter_ps_uniform.glsl", "uniform vec4 strength_sig2_2sig2_gauss1;\nuniform vec2 blurInfo;\n\n#define PI 3.141593\n\n//float sigma=strength/3.0;//3σ以外影响很小。即当σ=1的时候，半径为3\n//float sig2 = sigma*sigma;\n//float _2sig2 = 2.0*sig2;\n//return 1.0/(2*PI*sig2)*exp(-(x*x+y*y)/_2sig2)\n//float gauss1 = 1.0/(2.0*PI*sig2);\n\nfloat getGaussian(float x, float y){\n    return strength_sig2_2sig2_gauss1.w*exp(-(x*x+y*y)/strength_sig2_2sig2_gauss1.z);\n}\n\nvec4 blur(){\n    const float blurw = 9.0;\n    vec4 vec4Color = vec4(0.0,0.0,0.0,0.0);\n    vec2 halfsz=vec2(blurw,blurw)/2.0/blurInfo;    \n    vec2 startpos=v_texcoord-halfsz;\n    vec2 ctexcoord = startpos;\n    vec2 step = 1.0/blurInfo;  //每个像素      \n    \n    for(float y = 0.0;y<=blurw; ++y){\n        ctexcoord.x=startpos.x;\n        for(float x = 0.0;x<=blurw; ++x){\n            //TODO 纹理坐标的固定偏移应该在vs中处理\n            vec4Color += texture2D(texture, ctexcoord)*getGaussian(x-blurw/2.0,y-blurw/2.0);\n            ctexcoord.x+=step.x;\n        }\n        ctexcoord.y+=step.y;\n    }\n    return vec4Color;\n}");
            ut.addInclude("parts/ColorAdd_ps_uniform.glsl", "uniform vec4 colorAdd;\n");
            ut.addInclude("parts/ColorAdd_ps_logic.glsl", "gl_FragColor = vec4(colorAdd.rgb,colorAdd.a*gl_FragColor.a);\ngl_FragColor.xyz *= colorAdd.a;");
            var e, t;
            e = "attribute vec4 position;\nattribute vec2 texcoord;\nuniform vec2 size;\n\n#ifdef WORLDMAT\nuniform mat4 mmat;\n#endif\nvarying vec2 v_texcoord;\nvoid main() {\n  #ifdef WORLDMAT\n  vec4 pos=mmat*position;\n  gl_Position =vec4((pos.x/size.x-0.5)*2.0,(0.5-pos.y/size.y)*2.0,pos.z,1.0);\n  #else\n  gl_Position =vec4((position.x/size.x-0.5)*2.0,(0.5-position.y/size.y)*2.0,position.z,1.0);\n  #endif\n  \n  v_texcoord = texcoord;\n}";
            t = 'precision mediump float;\n//precision highp float;\nvarying vec2 v_texcoord;\nuniform sampler2D texture;\nuniform float alpha;\n#include?BLUR_FILTER  "parts/BlurFilter_ps_uniform.glsl";\n#include?COLOR_FILTER "parts/ColorFilter_ps_uniform.glsl";\n#include?GLOW_FILTER "parts/GlowFilter_ps_uniform.glsl";\n#include?COLOR_ADD "parts/ColorAdd_ps_uniform.glsl";\n\nvoid main() {\n   vec4 color= texture2D(texture, v_texcoord);\n   color.a*=alpha;\n   color.rgb*=alpha;\n   gl_FragColor=color;\n   #include?COLOR_ADD "parts/ColorAdd_ps_logic.glsl";   \n   #include?BLUR_FILTER  "parts/BlurFilter_ps_logic.glsl";\n   #include?COLOR_FILTER "parts/ColorFilter_ps_logic.glsl";\n   #include?GLOW_FILTER "parts/GlowFilter_ps_logic.glsl";\n}';
            ut.preCompile2D(0, 1, e, t, null);
            e = "attribute vec4 position;\nuniform vec2 size;\nuniform mat4 mmat;\nvoid main() {\n  vec4 pos=mmat*position;\n  gl_Position =vec4((pos.x/size.x-0.5)*2.0,(0.5-pos.y/size.y)*2.0,pos.z,1.0);\n}";
            t = 'precision mediump float;\nuniform vec4 color;\nuniform float alpha;\n#include?COLOR_FILTER "parts/ColorFilter_ps_uniform.glsl";\nvoid main() {\n\tvec4 a = vec4(color.r, color.g, color.b, color.a);\n\ta.w = alpha;\n\ta.xyz *= alpha;\n\tgl_FragColor = a;\n\t#include?COLOR_FILTER "parts/ColorFilter_ps_logic.glsl";\n}';
            ut.preCompile2D(0, 2, e, t, null);
            e = "attribute vec4 position;\nattribute vec3 a_color;\nuniform mat4 mmat;\nuniform mat4 u_mmat2;\nuniform vec2 u_pos;\nuniform vec2 size;\nvarying vec3 color;\nvoid main(){\n  vec4 tPos = vec4(position.x + u_pos.x,position.y + u_pos.y,position.z,position.w);\n  vec4 pos=mmat*u_mmat2*tPos;\n  gl_Position =vec4((pos.x/size.x-0.5)*2.0,(0.5-pos.y/size.y)*2.0,pos.z,1.0);\n  color=a_color;\n}";
            t = "precision mediump float;\n//precision mediump float;\nvarying vec3 color;\nuniform float alpha;\nvoid main(){\n\t//vec4 a=vec4(color.r, color.g, color.b, 1);\n\t//a.a*=alpha;\n    gl_FragColor=vec4(color.r, color.g, color.b, alpha);\n\tgl_FragColor.rgb*=alpha;\n}";
            ut.preCompile2D(0, 4, e, t, null);
            e = "attribute vec4 position;\nattribute vec2 texcoord;\nuniform vec2 size;\n\n#ifdef WORLDMAT\nuniform mat4 mmat;\n#endif\nvarying vec2 v_texcoord;\nvoid main() {\n  #ifdef WORLDMAT\n  vec4 pos=mmat*position;\n  gl_Position =vec4((pos.x/size.x-0.5)*2.0,(0.5-pos.y/size.y)*2.0,pos.z,1.0);\n  #else\n  gl_Position =vec4((position.x/size.x-0.5)*2.0,(0.5-position.y/size.y)*2.0,position.z,1.0);\n  #endif\n  \n  v_texcoord = texcoord;\n}";
            t = '#ifdef FSHIGHPRECISION\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n//precision highp float;\nvarying vec2 v_texcoord;\nuniform sampler2D texture;\nuniform float alpha;\nuniform vec4 u_TexRange;\nuniform vec2 u_offset;\n#include?BLUR_FILTER  "parts/BlurFilter_ps_uniform.glsl";\n#include?COLOR_FILTER "parts/ColorFilter_ps_uniform.glsl";\n#include?GLOW_FILTER "parts/GlowFilter_ps_uniform.glsl";\n#include?COLOR_ADD "parts/ColorAdd_ps_uniform.glsl";\n\nvoid main() {\n   vec2 newTexCoord;\n   newTexCoord.x = mod(u_offset.x + v_texcoord.x,u_TexRange.y) + u_TexRange.x;\n   newTexCoord.y = mod(u_offset.y + v_texcoord.y,u_TexRange.w) + u_TexRange.z;\n   vec4 color= texture2D(texture, newTexCoord);\n   color.a*=alpha;\n   gl_FragColor=color;\n   #include?COLOR_ADD "parts/ColorAdd_ps_logic.glsl";   \n   #include?BLUR_FILTER  "parts/BlurFilter_ps_logic.glsl";\n   #include?COLOR_FILTER "parts/ColorFilter_ps_logic.glsl";\n   #include?GLOW_FILTER "parts/GlowFilter_ps_logic.glsl";\n}';
            ut.preCompile2D(0, 256, e, t, null);
            e = "attribute vec2 position;\nattribute vec2 texcoord;\nattribute vec4 color;\nuniform vec2 size;\nuniform float offsetX;\nuniform float offsetY;\nuniform mat4 mmat;\nuniform mat4 u_mmat2;\nvarying vec2 v_texcoord;\nvarying vec4 v_color;\nvoid main() {\n  vec4 pos=mmat*u_mmat2*vec4(offsetX+position.x,offsetY+position.y,0,1 );\n  gl_Position = vec4((pos.x/size.x-0.5)*2.0,(0.5-pos.y/size.y)*2.0,pos.z,1.0);\n  v_color = color;\n  v_color.rgb *= v_color.a;\n  v_texcoord = texcoord;  \n}";
            t = "precision mediump float;\nvarying vec2 v_texcoord;\nvarying vec4 v_color;\nuniform sampler2D texture;\nuniform float alpha;\nvoid main() {\n\tvec4 t_color = texture2D(texture, v_texcoord);\n\tgl_FragColor = t_color.rgba * v_color;\n\tgl_FragColor *= alpha;\n}";
            ut.preCompile2D(0, 512, e, t, null)
        };
        return e
    } ();
    var ce = function() {
        function t(e, t, i) {
            this._value = 0;
            this._name2int = e;
            this._int2name = t;
            this._int2nameMap = i
        }
        _(t, "laya.webgl.shader.ShaderDefines");
        var e = t.prototype;
        e.add = function(e) {
            if (typeof e == "string") e = this._name2int[e];
            this._value |= e;
            return this._value
        };
        e.addInt = function(e) {
            this._value |= e;
            return this._value
        };
        e.remove = function(e) {
            if (typeof e == "string") e = this._name2int[e];
            this._value &= ~e;
            return this._value
        };
        e.isDefine = function(e) {
            return (this._value & e) === e
        };
        e.getValue = function() {
            return this._value
        };
        e.setValue = function(e) {
            this._value = e
        };
        e.toNameDic = function() {
            var e = this._int2nameMap[this._value];
            return e ? e: t._toText(this._value, this._int2name, this._int2nameMap)
        };
        t._reg = function(e, t, i, n) {
            i[e] = t;
            n[t] = e
        };
        t._toText = function(e, t, i) {
            var n = i[e];
            if (n) return n;
            var s = {};
            var a = 1;
            for (var r = 0; r < 32; r++) {
                a = 1 << r;
                if (a > e) break;
                if (e & a) {
                    var o = t[a];
                    o && (s[o] = "")
                }
            }
            i[e] = s;
            return s
        };
        t._toInt = function(e, t) {
            var i = e.split(".");
            var n = 0;
            for (var s = 0,
            a = i.length; s < a; s++) {
                var r = t[i[s]];
                if (!r) throw new Error("Defines to int err:" + e + "/" + i[s]);
                n |= r
            }
            return n
        };
        return t
    } ();
    var fe = function() {
        function h() {
            this.mVBBuffer = null;
            this.mIBBuffer = null;
            this.mVBData = null;
            this.mIBData = null;
            this.mEleNum = 0;
            this.mTexture = null;
            this.transform = null;
            this._vs = null;
            this._ps = null;
            this._indexStart = -1;
            this._verticles = null;
            this._uvs = null;
            this._tempMatrix = new L
        }
        _(h, "laya.webgl.shader.d2.skinAnishader.SkinMesh");
        var e = h.prototype;
        e.init = function(e, t, i) {
            if (t) {
                this._vs = t
            } else {
                this._vs = [];
                var n = e.width;
                var s = e.height;
                var a = 1;
                var r = 1;
                var o = 1;
                var l = 1;
                this._vs.push(0, 0, 0, 0, a, r, o, l);
                this._vs.push(n, 0, 1, 0, a, r, o, l);
                this._vs.push(n, s, 1, 1, a, r, o, l);
                this._vs.push(0, s, 0, 1, a, r, o, l)
            }
            if (i) {
                this._ps = i
            } else {
                if (!h._defaultPS) {
                    h._defaultPS = [];
                    h._defaultPS.push(0, 1, 3, 3, 1, 2)
                }
                this._ps = h._defaultPS
            }
            this.mVBData = new Float32Array(this._vs);
            this.mIBData = new Uint16Array(this._ps.length);
            this.mIBData["start"] = -1;
            this.mEleNum = this._ps.length;
            this.mTexture = e
        };
        e.init2 = function(e, t, i, n, s) {
            if (this.transform) this.transform = null;
            if (i) {
                this._ps = i
            } else {
                this._ps = [];
                this._ps.push(0, 1, 3, 3, 1, 2)
            }
            this._verticles = n;
            this._uvs = s;
            this.mEleNum = this._ps.length;
            this.mTexture = e;
            if (k.isConchNode || k.isConchApp) {
                this._initMyData();
                this.mVBData = new Float32Array(this._vs)
            }
        };
        e._initMyData = function() {
            var e = 0;
            var t = 0;
            var i = this._verticles.length;
            var n = i * 4;
            this._vs = h._tempVS;
            var s = false;
            if (k.isConchNode || k.isConchApp) {
                this._vs.length = n;
                s = true
            } else {
                if (this._vs.length < n) {
                    this._vs.length = n;
                    s = true
                }
            }
            h._tVSLen = n;
            if (s) {
                while (e < n) {
                    this._vs[e] = this._verticles[t];
                    this._vs[e + 1] = this._verticles[t + 1];
                    this._vs[e + 2] = this._uvs[t];
                    this._vs[e + 3] = this._uvs[t + 1];
                    this._vs[e + 4] = 1;
                    this._vs[e + 5] = 1;
                    this._vs[e + 6] = 1;
                    this._vs[e + 7] = 1;
                    e += 8;
                    t += 2
                }
            } else {
                while (e < n) {
                    this._vs[e] = this._verticles[t];
                    this._vs[e + 1] = this._verticles[t + 1];
                    this._vs[e + 2] = this._uvs[t];
                    this._vs[e + 3] = this._uvs[t + 1];
                    e += 8;
                    t += 2
                }
            }
        };
        e.getData2 = function(e, t, i) {
            this.mVBBuffer = e;
            this.mIBBuffer = t;
            this._initMyData();
            e.appendEx2(this._vs, Float32Array, h._tVSLen, 4);
            this._indexStart = t._byteLength;
            var n;
            n = h._tempIB;
            if (n.length < this._ps.length) {
                n.length = this._ps.length
            }
            for (var s = 0,
            a = this._ps.length; s < a; s++) {
                n[s] = this._ps[s] + i
            }
            t.appendEx2(n, Uint16Array, this._ps.length, 2)
        };
        e.getData = function(e, t, i) {
            this.mVBBuffer = e;
            this.mIBBuffer = t;
            e.append(this.mVBData);
            this._indexStart = t._byteLength;
            if (this.mIBData["start"] != i) {
                for (var n = 0,
                s = this._ps.length; n < s; n++) {
                    this.mIBData[n] = this._ps[n] + i
                }
                this.mIBData["start"] = i
            }
            t.append(this.mIBData)
        };
        e.render = function(e, t, i) {
            if (k.isWebGL && this.mTexture) {
                e._renderKey = 0;
                e._shader2D.glTexture = null;
                de.getInstance().addSkinMesh(this);
                var n = ye.createShape(e, this.mIBBuffer, this.mVBBuffer, this.mEleNum, this._indexStart, Fe.create(512, 0));
                this.transform || (this.transform = L.EMPTY);
                this.transform.translate(t, i);
                L.mul(this.transform, e._curMat, this._tempMatrix);
                this.transform.translate( - t, -i);
                var s = n.shaderValue;
                var a = s.u_mmat2 || Be.getMatrArray();
                Be.mat2MatArray(this._tempMatrix, a);
                s.textureHost = this.mTexture;
                s.offsetX = 0;
                s.offsetY = 0;
                s.u_mmat2 = a;
                s.ALPHA = e._shader2D.ALPHA;
                e._submits[e._submits._length++] = n
            } else if (k.isConchApp && this.mTexture) {
                this.transform || (this.transform = L.EMPTY);
                e.setSkinMesh && e.setSkinMesh(t, i, this._ps, this.mVBData, this.mEleNum, 0, this.mTexture, this.transform)
            }
        };
        h._tempVS = [];
        h._tempIB = [];
        h._defaultPS = null;
        h._tVSLen = 0;
        return h
    } ();
    var de = function() {
        function e() {
            this.ib = null;
            this.vb = null;
            var e = Pe.mainContext;
            this.ib = pt.create(35048);
            this.vb = _t.create(8)
        }
        _(e, "laya.webgl.shader.d2.skinAnishader.SkinMeshBuffer");
        var t = e.prototype;
        t.addSkinMesh = function(e) {
            e.getData2(this.vb, this.ib, this.vb._byteLength / 32)
        };
        t.reset = function() {
            this.vb.clear();
            this.ib.clear()
        };
        e.getInstance = function() {
            return e.instance = e.instance || new e
        };
        e.instance = null;
        return e
    } ();
    var ge = function() {
        function e(e, t, i, n, s, a, r, o, l) {
            this.r0 = 0;
            this.fill = true;
            this.r1 = Math.PI / 2;
            l === void 0 && (l = 0);
            this.x = e;
            this.y = t;
            this.width = i;
            this.height = n;
            this.edges = s;
            this.color = a;
            this.borderWidth = r;
            this.borderColor = o
        }
        _(e, "laya.webgl.shapes.BasePoly");
        var t = e.prototype;
        C.imps(t, {
            "laya.webgl.shapes.IShape": true
        });
        t.getData = function(e, t, i) {};
        t.rebuild = function(e) {};
        t.setMatrix = function(e) {};
        t.needUpdate = function(e) {
            return true
        };
        t.sector = function(e, t, i) {
            var n = this.x,
            s = this.y,
            a = this.edges,
            r = (this.r1 - this.r0) / a;
            var o = this.width,
            l = this.height,
            h = this.color;
            var u = (h >> 16 & 255) / 255,
            c = (h >> 8 & 255) / 255,
            f = (h & 255) / 255;
            e.push(n, s, u, c, f);
            for (var d = 0; d < a + 1; d++) {
                e.push(n + Math.sin(r * d + this.r0) * o, s + Math.cos(r * d + this.r0) * l);
                e.push(u, c, f)
            }
            for (d = 0; d < a; d++) {
                t.push(i, i + d + 1, i + d + 2)
            }
        };
        t.createLine2 = function(e, t, i, n, s, a) {
            var r = e.concat();
            var o = s;
            var l = this.borderColor;
            var h = (l >> 16 & 255) / 255,
            u = (l >> 8 & 255) / 255,
            c = (l & 255) / 255;
            var f = r.length / 2;
            var d = n,
            g = i / 2;
            var p, _, m, v, y, I, S, C;
            var b, w, x, R, L, T;
            var D, k, G, M, B, A;
            var P, U, E;
            m = r[0];
            v = r[1];
            y = r[2];
            I = r[3];
            b = -(v - I);
            w = m - y;
            E = Math.sqrt(b * b + w * w);
            b = b / E * g;
            w = w / E * g;
            o.push(m - b + this.x, v - w + this.y, h, u, c, m + b + this.x, v + w + this.y, h, u, c);
            for (var N = 1; N < f - 1; N++) {
                m = r[(N - 1) * 2];
                v = r[(N - 1) * 2 + 1];
                y = r[N * 2];
                I = r[N * 2 + 1];
                S = r[(N + 1) * 2];
                C = r[(N + 1) * 2 + 1];
                b = -(v - I);
                w = m - y;
                E = Math.sqrt(b * b + w * w);
                b = b / E * g;
                w = w / E * g;
                x = -(I - C);
                R = y - S;
                E = Math.sqrt(x * x + R * R);
                x = x / E * g;
                R = R / E * g;
                D = -w + v - ( - w + I);
                k = -b + y - ( - b + m);
                G = ( - b + m) * ( - w + I) - ( - b + y) * ( - w + v);
                M = -R + C - ( - R + I);
                B = -x + y - ( - x + S);
                A = ( - x + S) * ( - R + I) - ( - x + y) * ( - R + C);
                P = D * B - M * k;
                if (Math.abs(P) < .1) {
                    P += 10.1;
                    o.push(y - b + this.x, I - w + this.y, h, u, c, y + b + this.x, I + w + this.y, h, u, c);
                    continue
                }
                p = (k * A - B * G) / P;
                _ = (M * G - D * A) / P;
                U = (p - y) * (p - y) + (_ - I) + (_ - I);
                o.push(p + this.x, _ + this.y, h, u, c, y - (p - y) + this.x, I - (_ - I) + this.y, h, u, c)
            }
            m = r[r.length - 4];
            v = r[r.length - 3];
            y = r[r.length - 2];
            I = r[r.length - 1];
            b = -(v - I);
            w = m - y;
            E = Math.sqrt(b * b + w * w);
            b = b / E * g;
            w = w / E * g;
            o.push(y - b + this.x, I - w + this.y, h, u, c, y + b + this.x, I + w + this.y, h, u, c);
            var F = a;
            for (N = 1; N < F; N++) {
                t.push(d + (N - 1) * 2, d + (N - 1) * 2 + 1, d + N * 2 + 1, d + N * 2 + 1, d + N * 2, d + (N - 1) * 2)
            }
            return o
        };
        t.createLine = function(e, t, i, n) {
            var s = e.concat();
            var a = e;
            var r = this.borderColor;
            var o = (r >> 16 & 255) / 255,
            l = (r >> 8 & 255) / 255,
            h = (r & 255) / 255;
            s.splice(0, 5);
            var u = s.length / 5;
            var c = n,
            f = i / 2;
            var d, g, p, _, m, v, y, I;
            var S, C, b, w, x, R;
            var L, T, D, k, G, M;
            var B, A, P;
            p = s[0];
            _ = s[1];
            m = s[5];
            v = s[6];
            S = -(_ - v);
            C = p - m;
            P = Math.sqrt(S * S + C * C);
            S = S / P * f;
            C = C / P * f;
            a.push(p - S, _ - C, o, l, h, p + S, _ + C, o, l, h);
            for (var U = 1; U < u - 1; U++) {
                p = s[(U - 1) * 5];
                _ = s[(U - 1) * 5 + 1];
                m = s[U * 5];
                v = s[U * 5 + 1];
                y = s[(U + 1) * 5];
                I = s[(U + 1) * 5 + 1];
                S = -(_ - v);
                C = p - m;
                P = Math.sqrt(S * S + C * C);
                S = S / P * f;
                C = C / P * f;
                b = -(v - I);
                w = m - y;
                P = Math.sqrt(b * b + w * w);
                b = b / P * f;
                w = w / P * f;
                L = -C + _ - ( - C + v);
                T = -S + m - ( - S + p);
                D = ( - S + p) * ( - C + v) - ( - S + m) * ( - C + _);
                k = -w + I - ( - w + v);
                G = -b + m - ( - b + y);
                M = ( - b + y) * ( - w + v) - ( - b + m) * ( - w + I);
                B = L * G - k * T;
                if (Math.abs(B) < .1) {
                    B += 10.1;
                    a.push(m - S, v - C, o, l, h, m + S, v + C, o, l, h);
                    continue
                }
                d = (T * M - G * D) / B;
                g = (k * D - L * M) / B;
                A = (d - m) * (d - m) + (g - v) + (g - v);
                a.push(d, g, o, l, h, m - (d - m), v - (g - v), o, l, h)
            }
            p = s[s.length - 10];
            _ = s[s.length - 9];
            m = s[s.length - 5];
            v = s[s.length - 4];
            S = -(_ - v);
            C = p - m;
            P = Math.sqrt(S * S + C * C);
            S = S / P * f;
            C = C / P * f;
            a.push(m - S, v - C, o, l, h, m + S, v + C, o, l, h);
            var E = this.edges + 1;
            for (U = 1; U < E; U++) {
                t.push(c + (U - 1) * 2, c + (U - 1) * 2 + 1, c + U * 2 + 1, c + U * 2 + 1, c + U * 2, c + (U - 1) * 2)
            }
            return a
        };
        t.createLoopLine = function(e, t, i, n, s, a) {
            var r = e.concat();
            var o = s ? s: e;
            var l = this.borderColor;
            var h = (l >> 16 & 255) / 255,
            u = (l >> 8 & 255) / 255,
            c = (l & 255) / 255;
            r.splice(0, 5);
            var f = [r[0], r[1]];
            var d = [r[r.length - 5], r[r.length - 4]];
            var g = d[0] + (f[0] - d[0]) * .5;
            var p = d[1] + (f[1] - d[1]) * .5;
            r.unshift(g, p, 0, 0, 0);
            r.push(g, p, 0, 0, 0);
            var _ = r.length / 5;
            var m = n,
            v = i / 2;
            var y, I, S, C, b, w, x, R;
            var L, T, D, k, G, M;
            var B, A, P, U, E, N;
            var F, O, V;
            S = r[0];
            C = r[1];
            b = r[5];
            w = r[6];
            L = -(C - w);
            T = S - b;
            V = Math.sqrt(L * L + T * T);
            L = L / V * v;
            T = T / V * v;
            o.push(S - L, C - T, h, u, c, S + L, C + T, h, u, c);
            for (var q = 1; q < _ - 1; q++) {
                S = r[(q - 1) * 5];
                C = r[(q - 1) * 5 + 1];
                b = r[q * 5];
                w = r[q * 5 + 1];
                x = r[(q + 1) * 5];
                R = r[(q + 1) * 5 + 1];
                L = -(C - w);
                T = S - b;
                V = Math.sqrt(L * L + T * T);
                L = L / V * v;
                T = T / V * v;
                D = -(w - R);
                k = b - x;
                V = Math.sqrt(D * D + k * k);
                D = D / V * v;
                k = k / V * v;
                B = -T + C - ( - T + w);
                A = -L + b - ( - L + S);
                P = ( - L + S) * ( - T + w) - ( - L + b) * ( - T + C);
                U = -k + R - ( - k + w);
                E = -D + b - ( - D + x);
                N = ( - D + x) * ( - k + w) - ( - D + b) * ( - k + R);
                F = B * E - U * A;
                if (Math.abs(F) < .1) {
                    F += 10.1;
                    o.push(b - L, w - T, h, u, c, b + L, w + T, h, u, c);
                    continue
                }
                y = (A * N - E * P) / F;
                I = (U * P - B * N) / F;
                O = (y - b) * (y - b) + (I - w) + (I - w);
                o.push(y, I, h, u, c, b - (y - b), w - (I - w), h, u, c)
            }
            if (a) {
                t = a
            }
            var z = this.edges + 1;
            for (q = 1; q < z; q++) {
                t.push(m + (q - 1) * 2, m + (q - 1) * 2 + 1, m + q * 2 + 1, m + q * 2 + 1, m + q * 2, m + (q - 1) * 2)
            }
            t.push(m + (q - 1) * 2, m + (q - 1) * 2 + 1, m + 1, m + 1, m, m + (q - 1) * 2);
            return o
        };
        return e
    } ();
    var pe = function() {
        function p() {}
        _(p, "laya.webgl.shapes.Earcut");
        p.earcut = function(e, t, i) {
            i = i || 2;
            var n = t && t.length,
            s = n ? t[0] * i: e.length,
            a = p.linkedList(e, 0, s, i, true),
            r = [];
            if (!a) return r;
            var o, l, h, u, c, f, d;
            if (n) a = p.eliminateHoles(e, t, a, i);
            if (e.length > 80 * i) {
                o = h = e[0];
                l = u = e[1];
                for (var g = i; g < s; g += i) {
                    c = e[g];
                    f = e[g + 1];
                    if (c < o) o = c;
                    if (f < l) l = f;
                    if (c > h) h = c;
                    if (f > u) u = f
                }
                d = Math.max(h - o, u - l);
                d = d !== 0 ? 1 / d: 0
            }
            p.earcutLinked(a, r, i, o, l, d);
            return r
        };
        p.linkedList = function(e, t, i, n, s) {
            var a, r;
            if (s === p.signedArea(e, t, i, n) > 0) {
                for (a = t; a < i; a += n) r = p.insertNode(a, e[a], e[a + 1], r)
            } else {
                for (a = i - n; a >= t; a -= n) r = p.insertNode(a, e[a], e[a + 1], r)
            }
            if (r && p.equals(r, r.next)) {
                p.removeNode(r);
                r = r.next
            }
            return r
        };
        p.filterPoints = function(e, t) {
            if (!e) return e;
            if (!t) t = e;
            var i = e,
            n;
            do {
                n = false;
                if (!i.steiner && (p.equals(i, i.next) || p.area(i.prev, i, i.next) === 0)) {
                    p.removeNode(i);
                    i = t = i.prev;
                    if (i === i.next) break;
                    n = true
                } else {
                    i = i.next
                }
            } while ( n || i !== t );
            return t
        };
        p.earcutLinked = function(e, t, i, n, s, a, r) {
            if (!e) return;
            if (!r && a) p.indexCurve(e, n, s, a);
            var o = e,
            l, h;
            while (e.prev !== e.next) {
                l = e.prev;
                h = e.next;
                if (a ? p.isEarHashed(e, n, s, a) : p.isEar(e)) {
                    t.push(l.i / i);
                    t.push(e.i / i);
                    t.push(h.i / i);
                    p.removeNode(e);
                    e = h.next;
                    o = h.next;
                    continue
                }
                e = h;
                if (e === o) {
                    if (!r) {
                        p.earcutLinked(p.filterPoints(e, null), t, i, n, s, a, 1)
                    } else if (r === 1) {
                        e = p.cureLocalIntersections(e, t, i);
                        p.earcutLinked(e, t, i, n, s, a, 2)
                    } else if (r === 2) {
                        p.splitEarcut(e, t, i, n, s, a)
                    }
                    break
                }
            }
        };
        p.isEar = function(e) {
            var t = e.prev,
            i = e,
            n = e.next;
            if (p.area(t, i, n) >= 0) return false;
            var s = e.next.next;
            while (s !== e.prev) {
                if (p.pointInTriangle(t.x, t.y, i.x, i.y, n.x, n.y, s.x, s.y) && p.area(s.prev, s, s.next) >= 0) return false;
                s = s.next
            }
            return true
        };
        p.isEarHashed = function(e, t, i, n) {
            var s = e.prev,
            a = e,
            r = e.next;
            if (p.area(s, a, r) >= 0) return false;
            var o = s.x < a.x ? s.x < r.x ? s.x: r.x: a.x < r.x ? a.x: r.x,
            l = s.y < a.y ? s.y < r.y ? s.y: r.y: a.y < r.y ? a.y: r.y,
            h = s.x > a.x ? s.x > r.x ? s.x: r.x: a.x > r.x ? a.x: r.x,
            u = s.y > a.y ? s.y > r.y ? s.y: r.y: a.y > r.y ? a.y: r.y;
            var c = p.zOrder(o, l, t, i, n),
            f = p.zOrder(h, u, t, i, n);
            var d = e.nextZ;
            while (d && d.z <= f) {
                if (d !== e.prev && d !== e.next && p.pointInTriangle(s.x, s.y, a.x, a.y, r.x, r.y, d.x, d.y) && p.area(d.prev, d, d.next) >= 0) return false;
                d = d.nextZ
            }
            d = e.prevZ;
            while (d && d.z >= c) {
                if (d !== e.prev && d !== e.next && p.pointInTriangle(s.x, s.y, a.x, a.y, r.x, r.y, d.x, d.y) && p.area(d.prev, d, d.next) >= 0) return false;
                d = d.prevZ
            }
            return true
        };
        p.cureLocalIntersections = function(e, t, i) {
            var n = e;
            do {
                var s = n.prev,
                a = n.next.next;
                if (!p.equals(s, a) && p.intersects(s, n, n.next, a) && p.locallyInside(s, a) && p.locallyInside(a, s)) {
                    t.push(s.i / i);
                    t.push(n.i / i);
                    t.push(a.i / i);
                    p.removeNode(n);
                    p.removeNode(n.next);
                    n = e = a
                }
                n = n.next
            } while ( n !== e );
            return n
        };
        p.splitEarcut = function(e, t, i, n, s, a) {
            var r = e;
            do {
                var o = r.next.next;
                while (o !== r.prev) {
                    if (r.i !== o.i && p.isValidDiagonal(r, o)) {
                        var l = p.splitPolygon(r, o);
                        r = p.filterPoints(r, r.next);
                        l = p.filterPoints(l, l.next);
                        p.earcutLinked(r, t, i, n, s, a);
                        p.earcutLinked(l, t, i, n, s, a);
                        return
                    }
                    o = o.next
                }
                r = r.next
            } while ( r !== e )
        };
        p.eliminateHoles = function(e, t, i, n) {
            var s = [],
            a,
            r,
            o,
            l,
            h;
            for (a = 0, r = t.length; a < r; a++) {
                o = t[a] * n;
                l = a < r - 1 ? t[a + 1] * n: e.length;
                h = p.linkedList(e, o, l, n, false);
                if (h === h.next) h.steiner = true;
                s.push(p.getLeftmost(h))
            }
            s.sort(p.compareX);
            for (a = 0; a < s.length; a++) {
                p.eliminateHole(s[a], i);
                i = p.filterPoints(i, i.next)
            }
            return i
        };
        p.compareX = function(e, t) {
            return e.x - t.x
        };
        p.eliminateHole = function(e, t) {
            t = p.findHoleBridge(e, t);
            if (t) {
                var i = p.splitPolygon(t, e);
                p.filterPoints(i, i.next)
            }
        };
        p.findHoleBridge = function(e, t) {
            var i = t,
            n = e.x,
            s = e.y,
            a = -Infinity,
            r;
            do {
                if (s <= i.y && s >= i.next.y && i.next.y !== i.y) {
                    var o = i.x + (s - i.y) * (i.next.x - i.x) / (i.next.y - i.y);
                    if (o <= n && o > a) {
                        a = o;
                        if (o === n) {
                            if (s === i.y) return i;
                            if (s === i.next.y) return i.next
                        }
                        r = i.x < i.next.x ? i: i.next
                    }
                }
                i = i.next
            } while ( i !== t );
            if (!r) return null;
            if (n === a) return r.prev;
            var l = r,
            h = r.x,
            u = r.y,
            c = Infinity,
            f;
            i = r.next;
            while (i !== l) {
                if (n >= i.x && i.x >= h && n !== i.x && p.pointInTriangle(s < u ? n: a, s, h, u, s < u ? a: n, s, i.x, i.y)) {
                    f = Math.abs(s - i.y) / (n - i.x);
                    if ((f < c || f === c && i.x > r.x) && p.locallyInside(i, e)) {
                        r = i;
                        c = f
                    }
                }
                i = i.next
            }
            return r
        };
        p.indexCurve = function(e, t, i, n) {
            var s = e;
            do {
                if (s.z === null) s.z = p.zOrder(s.x, s.y, t, i, n);
                s.prevZ = s.prev;
                s.nextZ = s.next;
                s = s.next
            } while ( s !== e );
            s.prevZ.nextZ = null;
            s.prevZ = null;
            p.sortLinked(s)
        };
        p.sortLinked = function(e) {
            var t, i, n, s, a, r, o, l, h = 1;
            do {
                i = e;
                e = null;
                a = null;
                r = 0;
                while (i) {
                    r++;
                    n = i;
                    o = 0;
                    for (t = 0; t < h; t++) {
                        o++;
                        n = n.nextZ;
                        if (!n) break
                    }
                    l = h;
                    while (o > 0 || l > 0 && n) {
                        if (o !== 0 && (l === 0 || !n || i.z <= n.z)) {
                            s = i;
                            i = i.nextZ;
                            o--
                        } else {
                            s = n;
                            n = n.nextZ;
                            l--
                        }
                        if (a) a.nextZ = s;
                        else e = s;
                        s.prevZ = a;
                        a = s
                    }
                    i = n
                }
                a.nextZ = null;
                h *= 2
            } while ( r > 1 );
            return e
        };
        p.zOrder = function(e, t, i, n, s) {
            e = 32767 * (e - i) * s;
            t = 32767 * (t - n) * s;
            e = (e | e << 8) & 16711935;
            e = (e | e << 4) & 252645135;
            e = (e | e << 2) & 858993459;
            e = (e | e << 1) & 1431655765;
            t = (t | t << 8) & 16711935;
            t = (t | t << 4) & 252645135;
            t = (t | t << 2) & 858993459;
            t = (t | t << 1) & 1431655765;
            return e | t << 1
        };
        p.getLeftmost = function(e) {
            var t = e,
            i = e;
            do {
                if (t.x < i.x) i = t;
                t = t.next
            } while ( t !== e );
            return i
        };
        p.pointInTriangle = function(e, t, i, n, s, a, r, o) {
            return (s - r) * (t - o) - (e - r) * (a - o) >= 0 && (e - r) * (n - o) - (i - r) * (t - o) >= 0 && (i - r) * (a - o) - (s - r) * (n - o) >= 0
        };
        p.isValidDiagonal = function(e, t) {
            return e.next.i !== t.i && e.prev.i !== t.i && !p.intersectsPolygon(e, t) && p.locallyInside(e, t) && p.locallyInside(t, e) && p.middleInside(e, t)
        };
        p.area = function(e, t, i) {
            return (t.y - e.y) * (i.x - t.x) - (t.x - e.x) * (i.y - t.y)
        };
        p.equals = function(e, t) {
            return e.x === t.x && e.y === t.y
        };
        p.intersects = function(e, t, i, n) {
            if (p.equals(e, t) && p.equals(i, n) || p.equals(e, n) && p.equals(i, t)) return true;
            return p.area(e, t, i) > 0 !== p.area(e, t, n) > 0 && p.area(i, n, e) > 0 !== p.area(i, n, t) > 0
        };
        p.intersectsPolygon = function(e, t) {
            var i = e;
            do {
                if (i.i !== e.i && i.next.i !== e.i && i.i !== t.i && i.next.i !== t.i && p.intersects(i, i.next, e, t)) return true;
                i = i.next
            } while ( i !== e );
            return false
        };
        p.locallyInside = function(e, t) {
            return p.area(e.prev, e, e.next) < 0 ? p.area(e, t, e.next) >= 0 && p.area(e, e.prev, t) >= 0 : p.area(e, t, e.prev) < 0 || p.area(e, e.next, t) < 0
        };
        p.middleInside = function(e, t) {
            var i = e,
            n = false,
            s = (e.x + t.x) / 2,
            a = (e.y + t.y) / 2;
            do {
                if (i.y > a !== i.next.y > a && i.next.y !== i.y && s < (i.next.x - i.x) * (a - i.y) / (i.next.y - i.y) + i.x) n = !n;
                i = i.next
            } while ( i !== e );
            return n
        };
        p.splitPolygon = function(e, t) {
            var i = new _e(e.i, e.x, e.y),
            n = new _e(t.i, t.x, t.y),
            s = e.next,
            a = t.prev;
            e.next = t;
            t.prev = e;
            i.next = s;
            s.prev = i;
            n.next = i;
            i.prev = n;
            a.next = n;
            n.prev = a;
            return n
        };
        p.insertNode = function(e, t, i, n) {
            var s = new _e(e, t, i);
            if (!n) {
                s.prev = s;
                s.next = s
            } else {
                s.next = n.next;
                s.prev = n;
                n.next.prev = s;
                n.next = s
            }
            return s
        };
        p.removeNode = function(e) {
            e.next.prev = e.prev;
            e.prev.next = e.next;
            if (e.prevZ) e.prevZ.nextZ = e.nextZ;
            if (e.nextZ) e.nextZ.prevZ = e.prevZ
        };
        p.signedArea = function(e, t, i, n) {
            var s = 0;
            for (var a = t,
            r = i - n; a < i; a += n) {
                s += (e[r] - e[a]) * (e[a + 1] + e[r + 1]);
                r = a
            }
            return s
        };
        return p
    } ();
    var _e = function() {
        function e(e, t, i) {
            this.i = null;
            this.x = null;
            this.y = null;
            this.prev = null;
            this.next = null;
            this.z = null;
            this.prevZ = null;
            this.nextZ = null;
            this.steiner = null;
            this.i = e;
            this.x = t;
            this.y = i;
            this.prev = null;
            this.next = null;
            this.z = null;
            this.prevZ = null;
            this.nextZ = null;
            this.steiner = false
        }
        _(e, "laya.webgl.shapes.EarcutNode");
        return e
    } ();
    var me = function() {
        function e(e, t, i, n, s, a, r) {
            this.lineWidth = e;
            this.lineColor = t;
            this.lineAlpha = i;
            this.fillColor = n;
            this.fillAlpha = s;
            this.shape = r;
            this.fill = a
        }
        _(e, "laya.webgl.shapes.GeometryData");
        var t = e.prototype;
        t.clone = function() {
            return new e(this.lineWidth, this.lineColor, this.lineAlpha, this.fillColor, this.fillAlpha, this.fill, this.shape)
        };
        t.getIndexData = function() {
            return null
        };
        t.getVertexData = function() {
            return null
        };
        t.destroy = function() {
            this.shape = null
        };
        return e
    } ();
    var ve = function() {
        function e(e) {
            if (e instanceof Float32Array) this.points = e;
            else if (e instanceof Array) {
                var t = e.length;
                this.points = new Float32Array(e)
            }
        }
        _(e, "laya.webgl.shapes.Vertex");
        var t = e.prototype;
        C.imps(t, {
            "laya.webgl.shapes.IShape": true
        });
        t.getData = function(e, t, i) {};
        t.needUpdate = function(e) {
            return false
        };
        t.rebuild = function(e) {};
        t.setMatrix = function(e) {};
        return e
    } ();
    var ye = function() {
        function l(e) {
            e === void 0 && (e = 1e4);
            this._renderType = e
        }
        _(l, "laya.webgl.submit.Submit");
        var e = l.prototype;
        C.imps(e, {
            "laya.webgl.submit.ISubmit": true
        });
        e.releaseRender = function() {
            var e = l._cache;
            e[e._length++] = this;
            this.shaderValue.release();
            this._vb = null
        };
        e.getRenderType = function() {
            return this._renderType
        };
        e.renderSubmit = function() {
            if (this._numEle === 0) return 1;
            var e = this.shaderValue.textureHost;
            if (e) {
                var t = e.source;
                if (!e.bitmap || !t) return 1;
                this.shaderValue.texture = t
            }
            this._vb.bind_upload(this._ib);
            var i = Pe.mainContext;
            this.shaderValue.upload();
            if (ee.activeBlendFunction !== this._blendFn) {
                i.enable(3042);
                this._blendFn(i);
                ee.activeBlendFunction = this._blendFn
            }
            N.drawCall++;
            N.trianglesFaces += this._numEle / 3;
            i.drawElements(4, this._numEle, 5123, this._startIdx);
            return 1
        };
        l.__init__ = function() {
            var e = l.RENDERBASE = new l( - 1);
            e.shaderValue = new Fe(0, 0);
            e.shaderValue.ALPHA = -1234
        };
        l.createSubmit = function(e, t, i, n, s) {
            var a = l._cache._length ? l._cache[--l._cache._length] : new l;
            if (i == null) {
                i = a._selfVb || (a._selfVb = _t.create( - 1));
                i.clear();
                n = 0
            }
            a._ib = t;
            a._vb = i;
            a._startIdx = n * De.BYTES_PIDX;
            a._numEle = 0;
            var r = e._nBlendType;
            a._blendFn = e._targets ? ee.targetFns[r] : ee.fns[r];
            a.shaderValue = s;
            a.shaderValue.setValue(e._shader2D);
            var o = e._shader2D.filters;
            o && a.shaderValue.setFilters(o);
            return a
        };
        l.createShape = function(e, t, i, n, s, a) {
            var r = !l._cache._length ? new l: l._cache[--l._cache._length];
            r._ib = t;
            r._vb = i;
            r._numEle = n;
            r._startIdx = s;
            r.shaderValue = a;
            r.shaderValue.setValue(e._shader2D);
            var o = e._nBlendType;
            r._blendFn = e._targets ? ee.targetFns[o] : ee.fns[o];
            return r
        };
        l.TYPE_2D = 1e4;
        l.TYPE_CANVAS = 10003;
        l.TYPE_CMDSETRT = 10004;
        l.TYPE_CUSTOM = 10005;
        l.TYPE_BLURRT = 10006;
        l.TYPE_CMDDESTORYPRERT = 10007;
        l.TYPE_DISABLESTENCIL = 10008;
        l.TYPE_OTHERIBVB = 10009;
        l.TYPE_PRIMITIVE = 10010;
        l.TYPE_RT = 10011;
        l.TYPE_BLUR_RT = 10012;
        l.TYPE_TARGET = 10013;
        l.TYPE_CHANGE_VALUE = 10014;
        l.TYPE_SHAPE = 10015;
        l.TYPE_TEXTURE = 10016;
        l.TYPE_FILLTEXTURE = 10017;
        l.RENDERBASE = null;
        l._cache = (l._cache = [], l._cache._length = 0, l._cache);
        return l
    } ();
    var Ie = function() {
        function n() {
            this.fun = null;
            this.args = null
        }
        _(n, "laya.webgl.submit.SubmitCMD");
        var e = n.prototype;
        C.imps(e, {
            "laya.webgl.submit.ISubmit": true
        });
        e.renderSubmit = function() {
            this.fun.apply(null, this.args);
            return 1
        };
        e.getRenderType = function() {
            return 0
        };
        e.releaseRender = function() {
            var e = n._cache;
            e[e._length++] = this
        };
        n.create = function(e, t) {
            var i = n._cache._length ? n._cache[--n._cache._length] : new n;
            i.fun = t;
            i.args = e;
            return i
        };
        n._cache = (n._cache = [], n._cache._length = 0, n._cache);
        return n
    } ();
    var Se = function() {
        function t() {
            this.variables = {}
        }
        _(t, "laya.webgl.submit.SubmitCMDScope");
        var e = t.prototype;
        e.getValue = function(e) {
            return this.variables[e]
        };
        e.addValue = function(e, t) {
            return this.variables[e] = t
        };
        e.setValue = function(e, t) {
            if (this.variables.hasOwnProperty(e)) {
                return this.variables[e] = t
            }
            return null
        };
        e.clear = function() {
            for (var e in this.variables) {
                delete this.variables[e]
            }
        };
        e.recycle = function() {
            this.clear();
            t.POOL.push(this)
        };
        t.create = function() {
            var e = t.POOL.pop();
            e || (e = new t);
            return e
        };
        t.POOL = [];
        return t
    } ();
    var Ce = function() {
        function c() {
            this.offset = 0;
            this.startIndex = 0;
            this._mat = L.create()
        }
        _(c, "laya.webgl.submit.SubmitOtherIBVB");
        var e = c.prototype;
        C.imps(e, {
            "laya.webgl.submit.ISubmit": true
        });
        e.releaseRender = function() {
            var e = c._cache;
            e[e._length++] = this
        };
        e.getRenderType = function() {
            return 10009
        };
        e.renderSubmit = function() {
            var e = this._shaderValue.textureHost;
            if (e) {
                var t = e.source;
                if (!e.bitmap || !t) return 1;
                this._shaderValue.texture = t
            }
            this._vb.bind_upload(this._ib);
            var i = Be.worldMatrix4;
            var n = L.TEMP;
            L.mulPre(this._mat, i[0], i[1], i[4], i[5], i[12], i[13], n);
            var s = Be.worldMatrix4 = c.tempMatrix4;
            s[0] = n.a;
            s[1] = n.b;
            s[4] = n.c;
            s[5] = n.d;
            s[12] = n.tx;
            s[13] = n.ty;
            this._shader._offset = this.offset;
            this._shaderValue.refresh();
            this._shader.upload(this._shaderValue);
            this._shader._offset = 0;
            var a = Pe.mainContext;
            if (ee.activeBlendFunction !== this._blendFn) {
                a.enable(3042);
                this._blendFn(a);
                ee.activeBlendFunction = this._blendFn
            }
            N.drawCall++;
            N.trianglesFaces += this._numEle / 3;
            a.drawElements(4, this._numEle, 5123, this.startIndex);
            Be.worldMatrix4 = i;
            Ke.activeShader = null;
            return 1
        };
        c.create = function(e, t, i, n, s, a, r, o, l) {
            l === void 0 && (l = 0);
            var h = !c._cache._length ? new c: c._cache[--c._cache._length];
            h._ib = i;
            h._vb = t;
            h._numEle = n;
            h._shader = s;
            h._shaderValue = a;
            var u = e._nBlendType;
            h._blendFn = e._targets ? ee.targetFns[u] : ee.fns[u];
            switch (l) {
            case 0:
                h.offset = 0;
                h.startIndex = o / (De.BYTES_PE * t.vertexStride) * 1.5;
                h.startIndex *= De.BYTES_PIDX;
                break;
            case 1:
                h.startIndex = r;
                h.offset = o;
                break
            }
            return h
        };
        c._cache = (c._cache = [], c._cache._length = 0, c._cache);
        c.tempMatrix4 = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];
        return c
    } ();
    var be = function() {
        function i() {
            this.submitIndex = 0;
            this.submitLength = 0;
            this.context = null;
            this.clipRect = new D;
            this.screenRect = new D
        }
        _(i, "laya.webgl.submit.SubmitScissor");
        var e = i.prototype;
        C.imps(e, {
            "laya.webgl.submit.ISubmit": true
        });
        e._scissor = function(e, t, i, n) {
            var s = Be.worldMatrix4;
            var a = s[0],
            r = s[5],
            o = s[12],
            l = s[13];
            e = e * a + o;
            t = t * r + l;
            i *= a;
            n *= r;
            if (i < 1 || n < 1) {
                return false
            }
            var h = e + i;
            var u = t + n;
            e < 0 && (e = 0, i = h - e);
            t < 0 && (t = 0, n = u - t);
            var c = Be.worldClipRect;
            e = Math.max(e, c.x);
            t = Math.max(t, c.y);
            i = Math.min(h, c.right) - e;
            n = Math.min(u, c.bottom) - t;
            if (i < 1 || n < 1) {
                return false
            }
            var f = Be.worldScissorTest;
            this.screenRect.copyFrom(c);
            c.x = e;
            c.y = t;
            c.width = i;
            c.height = n;
            Be.worldScissorTest = true;
            t = Be.height - t - n;
            Pe.mainContext.scissor(e, t, i, n);
            Pe.mainContext.enable(3089);
            this.context.submitElement(this.submitIndex, this.submitIndex + this.submitLength);
            if (f) {
                t = Be.height - this.screenRect.y - this.screenRect.height;
                Pe.mainContext.scissor(this.screenRect.x, t, this.screenRect.width, this.screenRect.height);
                Pe.mainContext.enable(3089)
            } else {
                Pe.mainContext.disable(3089);
                Be.worldScissorTest = false
            }
            c.copyFrom(this.screenRect);
            return true
        };
        e._scissorWithTagart = function(e, t, i, n) {
            if (i < 1 || n < 1) {
                return false
            }
            var s = e + i;
            var a = t + n;
            e < 0 && (e = 0, i = s - e);
            t < 0 && (t = 0, n = a - t);
            var r = Be.worldClipRect;
            e = Math.max(e, r.x);
            t = Math.max(t, r.y);
            i = Math.min(s, r.right) - e;
            n = Math.min(a, r.bottom) - t;
            if (i < 1 || n < 1) {
                return false
            }
            var o = Be.worldScissorTest;
            this.screenRect.copyFrom(r);
            Be.worldScissorTest = true;
            r.x = e;
            r.y = t;
            r.width = i;
            r.height = n;
            t = Be.height - t - n;
            Pe.mainContext.scissor(e, t, i, n);
            Pe.mainContext.enable(3089);
            this.context.submitElement(this.submitIndex, this.submitIndex + this.submitLength);
            if (o) {
                t = Be.height - this.screenRect.y - this.screenRect.height;
                Pe.mainContext.scissor(this.screenRect.x, t, this.screenRect.width, this.screenRect.height);
                Pe.mainContext.enable(3089)
            } else {
                Pe.mainContext.disable(3089);
                Be.worldScissorTest = false
            }
            r.copyFrom(this.screenRect);
            return true
        };
        e.renderSubmit = function() {
            this.submitLength = Math.min(this.context._submits._length - 1, this.submitLength);
            if (this.submitLength < 1 || this.clipRect.width < 1 || this.clipRect.height < 1) return this.submitLength + 1;
            if (this.context._targets) this._scissorWithTagart(this.clipRect.x, this.clipRect.y, this.clipRect.width, this.clipRect.height);
            else this._scissor(this.clipRect.x, this.clipRect.y, this.clipRect.width, this.clipRect.height);
            return this.submitLength + 1
        };
        e.getRenderType = function() {
            return 0
        };
        e.releaseRender = function() {
            var e = i._cache;
            e[e._length++] = this;
            this.context = null
        };
        i.create = function(e) {
            var t = i._cache._length ? i._cache[--i._cache._length] : new i;
            t.context = e;
            return t
        };
        i._cache = (i._cache = [], i._cache._length = 0, i._cache);
        return i
    } ();
    var we = function() {
        function u() {
            this.step = 0;
            this.blendMode = null;
            this.level = 0
        }
        _(u, "laya.webgl.submit.SubmitStencil");
        var e = u.prototype;
        C.imps(e, {
            "laya.webgl.submit.ISubmit": true
        });
        e.renderSubmit = function() {
            switch (this.step) {
            case 1:
                this.do1();
                break;
            case 2:
                this.do2();
                break;
            case 3:
                this.do3();
                break;
            case 4:
                this.do4();
                break;
            case 5:
                this.do5();
                break;
            case 6:
                this.do6();
                break;
            case 7:
                this.do7();
                break;
            case 8:
                this.do8();
                break
            }
            return 1
        };
        e.getRenderType = function() {
            return 0
        };
        e.releaseRender = function() {
            var e = u._cache;
            e[e._length++] = this
        };
        e.do1 = function() {
            var e = Pe.mainContext;
            e.enable(2960);
            e.clear(1024);
            e.colorMask(false, false, false, false);
            e.stencilFunc(514, this.level, 255);
            e.stencilOp(7680, 7680, 7682)
        };
        e.do2 = function() {
            var e = Pe.mainContext;
            e.stencilFunc(514, this.level + 1, 255);
            e.colorMask(true, true, true, true);
            e.stencilOp(7680, 7680, 7680)
        };
        e.do3 = function() {
            var e = Pe.mainContext;
            e.colorMask(true, true, true, true);
            e.stencilOp(7680, 7680, 7680);
            e.clear(1024);
            e.disable(2960)
        };
        e.do4 = function() {
            var e = Pe.mainContext;
            if (this.level == 0) {
                e.enable(2960);
                e.clear(1024)
            }
            e.colorMask(false, false, false, false);
            e.stencilFunc(519, 0, 255);
            e.stencilOp(7680, 7680, 7682)
        };
        e.do5 = function() {
            var e = Pe.mainContext;
            e.stencilFunc(514, this.level, 255);
            e.colorMask(true, true, true, true);
            e.stencilOp(7680, 7680, 7680)
        };
        e.do6 = function() {
            var e = Pe.mainContext;
            ee.targetFns[ee.TOINT[this.blendMode]](e)
        };
        e.do7 = function() {
            var e = Pe.mainContext;
            e.colorMask(false, false, false, false);
            e.stencilOp(7680, 7680, 7683)
        };
        e.do8 = function() {
            var e = Pe.mainContext;
            e.colorMask(true, true, true, true);
            e.stencilFunc(514, this.level, 255);
            e.stencilOp(7680, 7680, 7680)
        };
        u.restore = function(e, t, i, n, s) {
            var a;
            e._renderKey = 0;
            if (u._mask > 0) {
                u._mask--
            }
            if (u._mask == 0) {
                a = laya.webgl.submit.SubmitStencil.create(3);
                e.addRenderObject(a);
                e._curSubmit = ye.RENDERBASE
            } else {
                a = laya.webgl.submit.SubmitStencil.create(7);
                e.addRenderObject(a);
                var r = e._vb;
                var o = r._byteLength >> 2;
                if (ke.fillRectImgVb(r, null, t.x, t.y, t.width, t.height, z.DEF_UV, i, n, s, 0, 0)) {
                    var l = e._shader2D;
                    l.glTexture = null;
                    var h = e._curSubmit = ye.createSubmit(e, e._ib, r, (r._byteLength - 16 * 4) / 32 * 3, Fe.create(2, 0));
                    h.shaderValue.ALPHA = 1;
                    e._submits[e._submits._length++] = h;
                    e._curSubmit._numEle += 6;
                    e._curSubmit = ye.RENDERBASE
                } else {
                    alert("clipRect calc stencil rect error")
                }
                a = laya.webgl.submit.SubmitStencil.create(8);
                e.addRenderObject(a)
            }
        };
        u.restore2 = function(e, t) {
            var i;
            e._renderKey = 0;
            if (u._mask > 0) {
                u._mask--
            }
            if (u._mask == 0) {
                i = laya.webgl.submit.SubmitStencil.create(3);
                e.addRenderObject(i);
                e._curSubmit = ye.RENDERBASE
            } else {
                i = laya.webgl.submit.SubmitStencil.create(7);
                e.addRenderObject(i);
                e._submits[e._submits._length++] = t;
                i = laya.webgl.submit.SubmitStencil.create(8);
                e.addRenderObject(i)
            }
        };
        u.create = function(e) {
            var t = u._cache._length ? u._cache[--u._cache._length] : new u;
            t.step = e;
            if (e == 5)++u._mask;
            t.level = u._mask;
            return t
        };
        u._cache = (u._cache = [], u._cache._length = 0, u._cache);
        u._mask = 0;
        return u
    } ();
    var xe = function() {
        function o() {
            this._renderType = 0;
            this._vb = null;
            this._ib = null;
            this._startIdx = 0;
            this._numEle = 0;
            this.shaderValue = null;
            this.blendType = 0;
            this.proName = null;
            this.scope = null
        }
        _(o, "laya.webgl.submit.SubmitTarget");
        var e = o.prototype;
        C.imps(e, {
            "laya.webgl.submit.ISubmit": true
        });
        e.renderSubmit = function() {
            this._vb.bind_upload(this._ib);
            var e = this.scope.getValue(this.proName);
            if (e) {
                this.shaderValue.texture = e.source;
                if (this.shaderValue["strength"] && !this.shaderValue["blurInfo"]) {
                    this.shaderValue["blurInfo"] = [e.width, e.height]
                }
                this.shaderValue.upload();
                this.blend();
                N.drawCall++;
                N.trianglesFaces += this._numEle / 3;
                Pe.mainContext.drawElements(4, this._numEle, 5123, this._startIdx)
            }
            return 1
        };
        e.blend = function() {
            if (ee.activeBlendFunction !== ee.fns[this.blendType]) {
                var e = Pe.mainContext;
                e.enable(3042);
                ee.fns[this.blendType](e);
                ee.activeBlendFunction = ee.fns[this.blendType]
            }
        };
        e.getRenderType = function() {
            return 0
        };
        e.releaseRender = function() {
            var e = o._cache;
            e[e._length++] = this
        };
        o.create = function(e, t, i, n, s, a) {
            var r = o._cache._length ? o._cache[--o._cache._length] : new o;
            r._ib = t;
            r._vb = i;
            r.proName = a;
            r._startIdx = n * De.BYTES_PIDX;
            r._numEle = 0;
            r.blendType = e._nBlendType;
            r.shaderValue = s;
            r.shaderValue.setValue(e._shader2D);
            return r
        };
        o._cache = (o._cache = [], o._cache._length = 0, o._cache);
        return o
    } ();
    var Re = function() {
        function e() {
            this._sourceStr = null
        }
        _(e, "laya.webgl.text.CharSegment");
        var t = e.prototype;
        C.imps(t, {
            "laya.webgl.text.ICharSegment": true
        });
        t.textToSpit = function(e) {
            this._sourceStr = e
        };
        t.getChar = function(e) {
            return this._sourceStr.charAt(e)
        };
        t.getCharCode = function(e) {
            return this._sourceStr.charCodeAt(e)
        };
        t.length = function() {
            return this._sourceStr.length
        };
        return e
    } ();
    var Le = function() {
        var e;
        function G() {}
        _(G, "laya.webgl.text.DrawText");
        G.__init__ = function() {
            G._charsTemp = new Array;
            G._drawValue = new e;
            G._charSeg = new Re
        };
        G.customCharSeg = function(e) {
            G._charSeg = e
        };
        G.getChar = function(e, t, i) {
            var n = ot.createOneChar(e, i);
            if (t != -1) G._charsCache[t] = n;
            return n
        };
        G._drawSlow = function(e, t, i, n, s, a, r, o, l, h, u, c, f, d, g) {
            var p = G._drawValue.value(a, o, l, h, f, d, g);
            var _ = 0,
            m = 0;
            var v = G._charsTemp;
            var y = 0,
            I, S, C = NaN;
            if (n) {
                v.length = n.length;
                for (_ = 0, m = n.length; _ < m; _++) {
                    S = n[_];
                    C = S.charNum + p.txtID;
                    v[_] = I = G._charsCache[C] || G.getChar(S.char, C, p);
                    I.active()
                }
            } else {
                var b = i instanceof laya.utils.WordText ? i.toString() : i;
                if (q.CharacterCache) {
                    G._charSeg.textToSpit(b);
                    var w = G._charSeg.length();
                    v.length = w;
                    for (_ = 0, m = w; _ < m; _++) {
                        C = G._charSeg.getCharCode(_) + p.txtID;
                        v[_] = I = G._charsCache[C] || G.getChar(G._charSeg.getChar(_), C, p);
                        I.active();
                        y += I.cw
                    }
                } else {
                    v.length = 0;
                    I = G.getChar(b, -1, p);
                    I.active();
                    y += I.cw;
                    v[0] = I
                }
            }
            var x = 0;
            if (r !== null && r !== "left") x = -(r == "center" ? y / 2 : y);
            var R, L = NaN,
            T, D, k = 0;
            if (n) {
                for (_ = 0, m = v.length; _ < m; _++) {
                    I = v[_];
                    if (!I.isSpace) {
                        S = n[_];
                        L = I.borderSize;
                        T = I.texture;
                        t._drawText(T, u + x + S.x * f - L, c + S.y * d - L, T.width, T.height, s, 0, 0, 0, 0)
                    }
                }
            } else {
                for (_ = 0, m = v.length; _ < m; _++) {
                    I = v[_];
                    if (!I.isSpace) {
                        L = I.borderSize;
                        T = I.texture;
                        t._drawText(T, u + x - L, c - L, T.width, T.height, s, 0, 0, 0, 0);
                        e && (D = e[k++], D || (D = e[k - 1] = []), D[0] = T, D[1] = x - L, D[2] = -L)
                    }
                    x += I.cw
                }
                e && (e.length = k)
            }
        };
        G._drawFast = function(e, t, i, n, s) {
            var a, r;
            for (var o = 0,
            l = e.length; o < l; o++) {
                r = e[o];
                a = r[0];
                a.active();
                t._drawText(a, n + r[1], s + r[2], a.width, a.height, i, 0, 0, 0, 0)
            }
        };
        G.drawText = function(e, t, i, n, s, a, r, o, l, h, u, c) {
            c === void 0 && (c = 0);
            if (t && t.length === 0 || i && i.length === 0) return;
            var f = n.a,
            d = n.d; (n.b !== 0 || n.c !== 0) && (f = d = 1);
            var g = f !== 1 || d !== 1;
            if (g && C.stage.transform) {
                var p = C.stage.transform;
                g = p.a === f && p.d === d
            } else g = false;
            if (g) {
                n = n.copyTo(Ne._tmpMatrix);
                var _ = n.tx;
                var m = n.ty;
                n.scale(1 / f, 1 / d);
                n._checkTransform();
                h *= f;
                u *= d;
                h += _ - n.tx;
                u += m - n.ty
            } else f = d = 1;
            if (i) {
                G._drawSlow(null, e, t, i, n, s, a, r, o, l, h, u, f, d, c)
            } else {
                if (t.toUpperCase === null) {
                    var v = f + d * 1e5;
                    var y = t;
                    if (!y.changed && y.id === v) {
                        G._drawFast(y.save, e, n, h, u)
                    } else {
                        y.id = v;
                        y.changed = false;
                        G._drawSlow(y.save, e, t, i, n, s, a, r, o, l, h, u, f, d, c)
                    }
                    return
                }
                var I = t + s.toString() + r + o + l + f + d + a;
                var S = G._textsCache[I];
                if (q.CharacterCache) {
                    if (S) {
                        G._drawFast(S, e, n, h, u)
                    } else {
                        G._textsCache.__length || (G._textsCache.__length = 0);
                        if (G._textsCache.__length > b.WebGLTextCacheCount) {
                            G._textsCache = {};
                            G._textsCache.__length = 0;
                            G._curPoolIndex = 0
                        }
                        G._textCachesPool[G._curPoolIndex] ? (S = G._textsCache[I] = G._textCachesPool[G._curPoolIndex], S.length = 0) : G._textCachesPool[G._curPoolIndex] = S = G._textsCache[I] = [];
                        G._textsCache.__length++;
                        G._curPoolIndex++;
                        G._drawSlow(S, e, t, i, n, s, a, r, o, l, h, u, f, d, c)
                    }
                } else {
                    G._drawSlow(S, e, t, i, n, s, a, r, o, l, h, u, f, d, c)
                }
            }
        };
        G._charsTemp = null;
        G._textCachesPool = [];
        G._curPoolIndex = 0;
        G._charsCache = {};
        G._textsCache = {};
        G._drawValue = null;
        G.d = [];
        G._charSeg = null;
        G.__init$ = function() {
            e = function() {
                function l() {}
                _(l, "");
                var e = l.prototype;
                e.value = function(e, t, i, n, s, a, r) {
                    this.font = e;
                    this.fillColor = t;
                    this.borderColor = i;
                    this.lineWidth = n;
                    this.scaleX = s;
                    this.scaleY = a;
                    this.underLine = r;
                    var o = e.toString() + s + a + n + t + i + r;
                    this.txtID = l._keymap[o];
                    if (!this.txtID) {
                        this.txtID = ++l._keymapCount * 1e-7;
                        l._keymap[o] = this.txtID
                    }
                    return this
                };
                l.clear = function() {
                    l._keymap = {};
                    l._keymapCount = 1
                };
                l._keymap = {};
                l._keymapCount = 1;
                return l
            } ()
        };
        return G
    } ();
    var Te = function() {
        function s(e) {
            this._index = 0;
            this._size = 14;
            this._italic = -2;
            s._cache2 = s._cache2 || [];
            this.setFont(e || "14px Arial")
        }
        _(s, "laya.webgl.text.FontInContext");
        var e = s.prototype;
        e.setFont = function(e) {
            var t = s._cache2[e];
            if (!t) {
                this._words = e.split(" ");
                for (var i = 0,
                n = this._words.length; i < n; i++) {
                    if (this._words[i].indexOf("px") > 0) {
                        this._index = i;
                        break
                    }
                }
                this._size = parseInt(this._words[this._index]);
                s._cache2[e] = [this._words, this._size]
            } else {
                this._words = t[0];
                this._size = t[1]
            }
            this._text = null;
            this._italic = -2
        };
        e.getItalic = function() {
            this._italic === -2 && (this._italic = this.hasType("italic"));
            return this._italic
        };
        e.hasType = function(e) {
            for (var t = 0,
            i = this._words.length; t < i; t++) if (this._words[t] === e) return t;
            return - 1
        };
        e.removeType = function(e) {
            for (var t = 0,
            i = this._words.length; t < i; t++) if (this._words[t] === e) {
                this._words.splice(t, 1);
                if (this._index > t) this._index--;
                break
            }
            this._text = null;
            this._italic = -2
        };
        e.copyTo = function(e) {
            e._text = this._text;
            e._size = this._size;
            e._index = this._index;
            e._words = this._words.slice();
            e._italic = -2;
            return e
        };
        e.toString = function() {
            return this._text ? this._text: this._text = this._words.join(" ")
        };
        l(0, e, "size",
        function() {
            return this._size
        },
        function(e) {
            this._size = e;
            this._words[this._index] = e + "px";
            this._text = null
        });
        s.create = function(e) {
            var t = s._cache[e];
            if (t) return t;
            t = s._cache[e] = new s(e);
            return t
        };
        s.EMPTY = new s;
        s._cache = {};
        s._cache2 = null;
        return s
    } ();
    var De = function() {
        function e() {}
        _(e, "laya.webgl.utils.CONST3D2D");
        e.defaultMatrix4 = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];
        e.defaultMinusYMatrix4 = [1, 0, 0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];
        e.uniformMatrix3 = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0];
        e._TMPARRAY = [];
        e._OFFSETX = 0;
        e._OFFSETY = 0;
        r(e, ["BYTES_PE",
        function() {
            return this.BYTES_PE = Float32Array.BYTES_PER_ELEMENT
        },
        "BYTES_PIDX",
        function() {
            return this.BYTES_PIDX = Uint16Array.BYTES_PER_ELEMENT
        }]);
        return e
    } ();
    var ke = function() {
        function g() {}
        _(g, "laya.webgl.utils.GlUtils");
        g.make2DProjection = function(e, t, i) {
            return [2 / e, 0, 0, 0, 0, -2 / t, 0, 0, 0, 0, 2 / i, 0, -1, 1, 0, 1]
        };
        g.fillIBQuadrangle = function(e, t) {
            if (t > 65535 / 4) {
                throw Error("IBQuadrangle count:" + t + " must<:" + Math.floor(65535 / 4));
                return false
            }
            t = Math.floor(t);
            e._resizeBuffer((t + 1) * 6 * 2, false);
            e.byteLength = e.bufferLength;
            var i = e.getUint16Array();
            var n = 0;
            for (var s = 0; s < t; s++) {
                i[n++] = s * 4;
                i[n++] = s * 4 + 2;
                i[n++] = s * 4 + 1;
                i[n++] = s * 4;
                i[n++] = s * 4 + 3;
                i[n++] = s * 4 + 2
            }
            e.setNeedUpload();
            return true
        };
        g.expandIBQuadrangle = function(e, t) {
            e.bufferLength >= t * 6 * 2 || g.fillIBQuadrangle(e, t)
        };
        g.mathCeilPowerOfTwo = function(e) {
            e--;
            e |= e >> 1;
            e |= e >> 2;
            e |= e >> 4;
            e |= e >> 8;
            e |= e >> 16;
            e++;
            return e
        };
        g.fillQuadrangleImgVb = function(e, t, i, n, s, a, r, o) {
            var l = (e._byteLength >> 2) + 16;
            e.byteLength = l << 2;
            var h = e.getFloat32Array();
            l -= 16;
            h[l + 2] = s[0];
            h[l + 3] = s[1];
            h[l + 6] = s[2];
            h[l + 7] = s[3];
            h[l + 10] = s[4];
            h[l + 11] = s[5];
            h[l + 14] = s[6];
            h[l + 15] = s[7];
            var u = a.a,
            c = a.b,
            f = a.c,
            d = a.d;
            if (u !== 1 || c !== 0 || f !== 0 || d !== 1) {
                a.bTransform = true;
                var g = a.tx + r,
                p = a.ty + o;
                h[l] = (n[0] + t) * u + (n[1] + i) * f + g;
                h[l + 1] = (n[0] + t) * c + (n[1] + i) * d + p;
                h[l + 4] = (n[2] + t) * u + (n[3] + i) * f + g;
                h[l + 5] = (n[2] + t) * c + (n[3] + i) * d + p;
                h[l + 8] = (n[4] + t) * u + (n[5] + i) * f + g;
                h[l + 9] = (n[4] + t) * c + (n[5] + i) * d + p;
                h[l + 12] = (n[6] + t) * u + (n[7] + i) * f + g;
                h[l + 13] = (n[6] + t) * c + (n[7] + i) * d + p
            } else {
                a.bTransform = false;
                t += a.tx + r;
                i += a.ty + o;
                h[l] = t + n[0];
                h[l + 1] = i + n[1];
                h[l + 4] = t + n[2];
                h[l + 5] = i + n[3];
                h[l + 8] = t + n[4];
                h[l + 9] = i + n[5];
                h[l + 12] = t + n[6];
                h[l + 13] = i + n[7]
            }
            e._upload = true;
            return true
        };
        g.fillTranglesVB = function(e, t, i, n, s, a, r) {
            var o = (e._byteLength >> 2) + n.length;
            e.byteLength = o << 2;
            var l = e.getFloat32Array();
            o -= n.length;
            var h = n.length;
            var u = s.a,
            c = s.b,
            f = s.c,
            d = s.d;
            for (var g = 0; g < h; g += 4) {
                l[o + g + 2] = n[g + 2];
                l[o + g + 3] = n[g + 3];
                if (u !== 1 || c !== 0 || f !== 0 || d !== 1) {
                    s.bTransform = true;
                    var p = s.tx + a,
                    _ = s.ty + r;
                    l[o + g] = (n[g] + t) * u + (n[g + 1] + i) * f + p;
                    l[o + g + 1] = (n[g] + t) * c + (n[g + 1] + i) * d + _
                } else {
                    s.bTransform = false;
                    t += s.tx + a;
                    i += s.ty + r;
                    l[o + g] = t + n[g];
                    l[o + g + 1] = i + n[g + 1]
                }
            }
            e._upload = true;
            return true
        };
        g.copyPreImgVb = function(e, t, i) {
            var n = e._byteLength >> 2;
            e.byteLength = n + 16 << 2;
            var s = e.getFloat32Array();
            for (var a = 0,
            r = n - 16; a < 4; a++) {
                s[n] = s[r] + t; ++n; ++r;
                s[n] = s[r] + i; ++n; ++r;
                s[n] = s[r]; ++n; ++r;
                s[n] = s[r]; ++n; ++r
            }
            e._upload = true
        };
        g.fillRectImgVb = function(e, t, i, n, s, a, r, o, l, h, u, c, f) {
            f === void 0 && (f = false);
            var d = 1;
            var g, p, _, m;
            var v, y, I, S;
            var C, b, w, x;
            var R, L, T, D;
            var k = o.a,
            G = o.b,
            M = o.c,
            B = o.d;
            var A = t && t.width < 99999999;
            if (k !== 1 || G !== 0 || M !== 0 || B !== 1) {
                o.bTransform = true;
                if (G === 0 && M === 0) {
                    d = 23;
                    C = s + i,
                    b = a + n;
                    w = o.tx + l,
                    x = o.ty + h;
                    g = k * i + w;
                    _ = k * C + w;
                    p = B * n + x;
                    m = B * b + x
                }
            } else {
                d = 23;
                o.bTransform = false;
                g = i + o.tx + l;
                _ = g + s;
                p = n + o.ty + h;
                m = p + a
            }
            if (A) {
                v = t.x,
                y = t.y,
                I = t.width + v,
                S = t.height + y
            }
            if (d !== 1) {
                if (Math.min(g, _) >= I) return false;
                if (Math.min(p, m) >= S) return false;
                if (Math.max(_, g) <= v) return false;
                if (Math.max(m, p) <= y) return false
            }
            var P = e._byteLength >> 2;
            e.byteLength = P + 16 << 2;
            var U = e.getFloat32Array();
            U[P + 2] = r[0];
            U[P + 3] = r[1];
            U[P + 6] = r[2];
            U[P + 7] = r[3];
            U[P + 10] = r[4];
            U[P + 11] = r[5];
            U[P + 14] = r[6];
            U[P + 15] = r[7];
            switch (d) {
            case 1:
                w = o.tx + l,
                x = o.ty + h;
                C = s + i,
                b = a + n;
                var E = i,
                N = n;
                var F = k * E,
                O = M * N,
                V = B * N,
                q = G * E;
                var z = k * C,
                W = M * b,
                H = B * b,
                Y = G * C;
                if (f) {
                    R = F + O + w;
                    T = Math.round(R) - R;
                    L = V + q + x;
                    D = Math.round(L) - L;
                    U[P] = R + T;
                    U[P + 1] = L + D;
                    U[P + 4] = z + O + w + T;
                    U[P + 5] = V + Y + x + D;
                    U[P + 8] = z + W + w + T;
                    U[P + 9] = H + Y + x + D;
                    U[P + 12] = F + W + w + T;
                    U[P + 13] = H + q + x + D
                } else {
                    U[P] = F + O + w;
                    U[P + 1] = V + q + x;
                    U[P + 4] = z + O + w;
                    U[P + 5] = V + Y + x;
                    U[P + 8] = z + W + w;
                    U[P + 9] = H + Y + x;
                    U[P + 12] = F + W + w;
                    U[P + 13] = H + q + x
                }
                break;
            case 23:
                if (f) {
                    R = g + u;
                    T = Math.round(R) - R;
                    L = p;
                    D = Math.round(L) - L;
                    U[P] = R + T;
                    U[P + 1] = L + D;
                    U[P + 4] = _ + u + T;
                    U[P + 5] = p + D;
                    U[P + 8] = _ + T;
                    U[P + 9] = m + D;
                    U[P + 12] = g + T;
                    U[P + 13] = m + D
                } else {
                    U[P] = g + u;
                    U[P + 1] = p;
                    U[P + 4] = _ + u;
                    U[P + 5] = p;
                    U[P + 8] = _;
                    U[P + 9] = m;
                    U[P + 12] = g;
                    U[P + 13] = m
                }
                break
            }
            e._upload = true;
            return true
        };
        g.fillLineVb = function(e, t, i, n, s, a, r, o) {
            var l = r * .5;
            var h = g._fillLineArray;
            var u = -(n - a),
            c = i - s;
            var f = Math.sqrt(u * u + c * c);
            u /= f,
            c /= f,
            u *= l,
            c *= l;
            h[0] = i - u,
            h[1] = n - c,
            h[4] = i + u,
            h[5] = n + c,
            h[8] = s + u,
            h[9] = a + c,
            h[12] = s - u,
            h[13] = a - c;
            o && o.transformPointArray(h, h);
            var d = (e._byteLength >> 2) + 16;
            e.byteLength = d << 2;
            e.insertData(h, d - 16);
            return true
        };
        g._fillLineArray = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
        return g
    } ();
    var Ge = function() {
        function l() {}
        _(l, "laya.webgl.utils.MatirxArray");
        l.ArrayMul = function(e, t, i) {
            if (!e) {
                l.copyArray(t, i);
                return
            }
            if (!t) {
                l.copyArray(e, i);
                return
            }
            var n = NaN,
            s = NaN,
            a = NaN,
            r = NaN;
            for (var o = 0; o < 4; o++) {
                n = e[o];
                s = e[o + 4];
                a = e[o + 8];
                r = e[o + 12];
                i[o] = n * t[0] + s * t[1] + a * t[2] + r * t[3];
                i[o + 4] = n * t[4] + s * t[5] + a * t[6] + r * t[7];
                i[o + 8] = n * t[8] + s * t[9] + a * t[10] + r * t[11];
                i[o + 12] = n * t[12] + s * t[13] + a * t[14] + r * t[15]
            }
        };
        l.copyArray = function(e, t) {
            if (!e) return;
            if (!t) return;
            for (var i = 0; i < e.length; i++) {
                t[i] = e[i]
            }
        };
        return l
    } ();
    var Me = function() {
        function t(e, t, i) {
            this._stride = 0;
            this.vertNum = 0;
            this.indexNum = 0;
            this._applied = false;
            this._vb = null;
            this._ib = null;
            this._vao = null;
            this._attribInfo = null;
            this._quadNum = 0;
            this.canReuse = false;
            this._stride = e;
            this._vb = new _t(e, 35048);
            if (t) {
                this._vb._resizeBuffer(t, false)
            } else {}
            this._ib = new pt;
            if (i) {
                this._ib._resizeBuffer(i, false)
            }
        }
        _(t, "laya.webgl.utils.Mesh2D");
        var e = t.prototype;
        e.cloneWithNewVB = function() {
            var e = new t(this._stride, 0, 0);
            e._ib = this._ib;
            e._quadNum = this._quadNum;
            e._attribInfo = this._attribInfo;
            return e
        };
        e.cloneWithNewVBIB = function() {
            var e = new t(this._stride, 0, 0);
            e._attribInfo = this._attribInfo;
            return e
        };
        e.getVBW = function() {
            this._vb.setNeedUpload();
            return this._vb
        };
        e.getVBR = function() {
            return this._vb
        };
        e.getIBR = function() {
            return this._ib
        };
        e.getIBW = function() {
            this._ib.setNeedUpload();
            return this._ib
        };
        e.createQuadIB = function(e) {
            this._quadNum = e;
            this._ib._resizeBuffer(e * 6 * 2, false);
            this._ib.byteLength = this._ib.bufferLength;
            var t = this._ib.getUint16Array();
            var i = 0;
            var n = 0;
            for (var s = 0; s < e; s++) {
                t[i++] = n;
                t[i++] = n + 2;
                t[i++] = n + 1;
                t[i++] = n;
                t[i++] = n + 3;
                t[i++] = n + 2;
                n += 4
            }
            this._ib.setNeedUpload()
        };
        e.setAttributes = function(e) {
            this._attribInfo = e;
            if (this._attribInfo.length % 3 != 0) {
                throw "Mesh2D setAttributes error!"
            }
        };
        e.getEleNum = function() {
            return this._ib.getBuffer().byteLength / 2
        };
        e.releaseMesh = function() {};
        e.destroy = function() {};
        e.clearVB = function() {
            this._vb.clear()
        };
        t._gvaoid = 0;
        return t
    } ();
    var Be = function() {
        function s() {}
        _(s, "laya.webgl.utils.RenderState2D");
        s.getMatrArray = function() {
            return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]
        };
        s.mat2MatArray = function(e, t) {
            var i = e;
            var n = t;
            n[0] = i.a;
            n[1] = i.b;
            n[2] = s.EMPTYMAT4_ARRAY[2];
            n[3] = s.EMPTYMAT4_ARRAY[3];
            n[4] = i.c;
            n[5] = i.d;
            n[6] = s.EMPTYMAT4_ARRAY[6];
            n[7] = s.EMPTYMAT4_ARRAY[7];
            n[8] = s.EMPTYMAT4_ARRAY[8];
            n[9] = s.EMPTYMAT4_ARRAY[9];
            n[10] = s.EMPTYMAT4_ARRAY[10];
            n[11] = s.EMPTYMAT4_ARRAY[11];
            n[12] = i.tx;
            n[13] = i.ty;
            n[14] = s.EMPTYMAT4_ARRAY[14];
            n[15] = s.EMPTYMAT4_ARRAY[15];
            return t
        };
        s.restoreTempArray = function() {
            s.TEMPMAT4_ARRAY[0] = 1;
            s.TEMPMAT4_ARRAY[1] = 0;
            s.TEMPMAT4_ARRAY[4] = 0;
            s.TEMPMAT4_ARRAY[5] = 1;
            s.TEMPMAT4_ARRAY[12] = 0;
            s.TEMPMAT4_ARRAY[13] = 0
        };
        s.clear = function() {
            s.worldScissorTest = false;
            s.worldShaderDefines = null;
            s.worldFilters = null;
            s.worldAlpha = 1;
            s.worldClipRect.x = s.worldClipRect.y = 0;
            s.worldClipRect.width = s.width;
            s.worldClipRect.height = s.height;
            s.curRenderTarget = null
        };
        s._MAXSIZE = 99999999;
        s.EMPTYMAT4_ARRAY = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];
        s.TEMPMAT4_ARRAY = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];
        s.worldMatrix4 = s.TEMPMAT4_ARRAY;
        s.worldAlpha = 1;
        s.worldScissorTest = false;
        s.worldFilters = null;
        s.worldShaderDefines = null;
        s.curRenderTarget = null;
        s.width = 0;
        s.height = 0;
        r(s, ["worldMatrix",
        function() {
            return this.worldMatrix = new L
        },
        "worldClipRect",
        function() {
            return this.worldClipRect = new D(0, 0, 99999999, 99999999)
        }]);
        return s
    } ();
    var Ae = function() {
        var v, i;
        function y(e, t, i, n, s) {
            var a = this;
            function r(e) {
                var t = [];
                var i = new v(t);
                a._compileToTree(i, e.split("\n"), 0, t, s);
                return i
            }
            var o = d.now();
            this._VS = r(t);
            this._PS = r(i);
            this._nameMap = n;
            if (d.now() - o > 2) console.log("ShaderCompile use time:" + (d.now() - o) + "  size:" + t.length + "/" + i.length)
        }
        _(y, "laya.webgl.utils.ShaderCompile");
        var e = y.prototype;
        e._compileToTree = function(e, t, i, n, s) {
            var a, r;
            var o, l, h;
            var u = 0,
            c, f;
            var d = 0,
            g = 0,
            p = 0;
            for (d = i; d < t.length; d++) {
                o = t[d];
                if (o.length < 1) continue;
                u = o.indexOf("//");
                if (u === 0) continue;
                if (u >= 0) o = o.substr(0, u);
                a = f || new v(n);
                f = null;
                a.text = o;
                a.noCompile = true;
                if ((u = o.indexOf("#")) >= 0) {
                    l = "#";
                    for (p = u + 1, g = o.length; p < g; p++) {
                        var _ = o.charAt(p);
                        if (_ === " " || _ === "\t" || _ === "?") break;
                        l += _
                    }
                    a.name = l;
                    switch (l) {
                    case "#ifdef":
                    case "#ifndef":
                        a.src = o;
                        a.noCompile = o.match(/[!&|()=<>]/) != null;
                        if (!a.noCompile) {
                            c = o.replace(/^\s*/, "").split(/\s+/);
                            a.setCondition(c[1], l === "#ifdef" ? 1 : 2);
                            a.text = "//" + a.text
                        } else {
                            console.log("function():Boolean{return " + o.substr(u + a.name.length) + "}")
                        }
                        a.setParent(e);
                        e = a;
                        if (s) {
                            c = o.substr(p).split(y._splitToWordExps3);
                            for (p = 0; p < c.length; p++) {
                                o = c[p];
                                o.length && (s[o] = true)
                            }
                        }
                        continue;
                    case "#if":
                        a.src = o;
                        a.noCompile = true;
                        a.setParent(e);
                        e = a;
                        if (s) {
                            c = o.substr(p).split(y._splitToWordExps3);
                            for (p = 0; p < c.length; p++) {
                                o = c[p];
                                o.length && o != "defined" && (s[o] = true)
                            }
                        }
                        continue;
                    case "#else":
                        a.src = o;
                        e = e.parent;
                        r = e.childs[e.childs.length - 1];
                        a.noCompile = r.noCompile;
                        if (!a.noCompile) {
                            a.condition = r.condition;
                            a.conditionType = r.conditionType == 1 ? 2 : 1;
                            a.text = "//" + a.text + " " + r.text + " " + a.conditionType
                        }
                        a.setParent(e);
                        e = a;
                        continue;
                    case "#endif":
                        e = e.parent;
                        r = e.childs[e.childs.length - 1];
                        a.noCompile = r.noCompile;
                        if (!a.noCompile) {
                            a.text = "//" + a.text
                        }
                        a.setParent(e);
                        continue;
                    case "#include":
                        c = y.splitToWords(o, null);
                        var m = y.includes[c[1]];
                        if (!m) {
                            throw "ShaderCompile error no this include file:" + c[1];
                            return
                        }
                        if ((u = c[0].indexOf("?")) < 0) {
                            a.setParent(e);
                            o = m.getWith(c[2] == "with" ? c[3] : null);
                            this._compileToTree(a, o.split("\n"), 0, n, s);
                            a.text = "";
                            continue
                        }
                        a.setCondition(c[0].substr(u + 1), 1);
                        a.text = m.getWith(c[2] == "with" ? c[3] : null);
                        break;
                    case "#import":
                        c = y.splitToWords(o, null);
                        h = c[1];
                        n.push({
                            node: a,
                            file: y.includes[h],
                            ofs: a.text.length
                        });
                        continue
                    }
                } else {
                    r = e.childs[e.childs.length - 1];
                    if (r && !r.name) {
                        n.length > 0 && y.splitToWords(o, r);
                        f = a;
                        r.text += "\n" + o;
                        continue
                    }
                    n.length > 0 && y.splitToWords(o, a)
                }
                a.setParent(e)
            }
        };
        e.createShader = function(e, t, i) {
            var n = {};
            var s = "";
            if (e) {
                for (var a in e) {
                    s += "#define " + a + "\n";
                    n[a] = true
                }
            }
            var r = this._VS.toscript(n, []);
            var o = this._PS.toscript(n, []);
            return (i || ut.create)(s + r.join("\n"), s + o.join("\n"), t, this._nameMap)
        };
        y._parseOne = function(e, t, i, n, s, a) {
            var r = {
                type: y.shaderParamsMap[i[n + 1]],
                name: i[n + 2],
                size: isNaN(parseInt(i[n + 3])) ? 1 : parseInt(i[n + 3])
            };
            if (a) {
                if (s == "attribute") {
                    e.push(r)
                } else {
                    t.push(r)
                }
            }
            if (i[n + 3] == ":") {
                r.type = i[n + 4];
                n += 2
            }
            n += 2;
            return n
        };
        y.addInclude = function(e, t) {
            if (!t || t.length === 0) throw new Error("add shader include file err:" + e);
            if (y.includes[e]) throw new Error("add shader include file err, has add:" + e);
            y.includes[e] = new i(t)
        };
        y.preGetParams = function(e, t) {
            var i = [e, t];
            var n = {};
            var s = [];
            var a = [];
            var r = {};
            var o = [];
            n.attributes = s;
            n.uniforms = a;
            n.defines = r;
            var l = 0,
            h = 0,
            u;
            for (var c = 0; c < 2; c++) {
                i[c] = i[c].replace(y._removeAnnotation, "");
                var f = i[c].match(y._reg);
                var d;
                for (l = 0, h = f.length; l < h; l++) {
                    var g = f[l];
                    if (g != "attribute" && g != "uniform") {
                        if (g == "#define") {
                            g = f[++l];
                            o[g] = 1;
                            continue
                        } else if (g == "#ifdef") {
                            d = f[++l];
                            var p = r[d] = r[d] || [];
                            for (l++; l < h; l++) {
                                g = f[l];
                                if (g != "attribute" && g != "uniform") {
                                    if (g == "#else") {
                                        for (l++; l < h; l++) {
                                            g = f[l];
                                            if (g != "attribute" && g != "uniform") {
                                                if (g == "#endif") {
                                                    break
                                                }
                                                continue
                                            }
                                            l = y._parseOne(s, a, f, l, g, !o[d])
                                        }
                                    }
                                    continue
                                }
                                l = y._parseOne(s, a, f, l, g, o[d])
                            }
                        }
                        continue
                    }
                    l = y._parseOne(s, a, f, l, g, true)
                }
            }
            return n
        };
        y.splitToWords = function(e, t) {
            var i = [];
            var n;
            var s = -1;
            var a;
            for (var r = 0,
            o = e.length; r < o; r++) {
                n = e.charAt(r);
                if (" \t=+-*/&%!<>()'\",;".indexOf(n) >= 0) {
                    if (s >= 0 && r - s > 1) {
                        a = e.substr(s, r - s);
                        i.push(a)
                    }
                    if (n == '"' || n == "'") {
                        var l = e.indexOf(n, r + 1);
                        if (l < 0) {
                            throw "Sharder err:" + e
                        }
                        i.push(e.substr(r + 1, l - r - 1));
                        r = l;
                        s = -1;
                        continue
                    }
                    if (n == "(" && t && i.length > 0) {
                        a = i[i.length - 1] + ";";
                        if ("vec4;main;".indexOf(a) < 0) t.useFuns += a
                    }
                    s = -1;
                    continue
                }
                if (s < 0) s = r
            }
            if (s < o && o - s > 1) {
                a = e.substr(s, o - s);
                i.push(a)
            }
            return i
        };
        y.IFDEF_NO = 0;
        y.IFDEF_YES = 1;
        y.IFDEF_ELSE = 2;
        y.IFDEF_PARENT = 3;
        y._removeAnnotation = new RegExp("(/\\*([^*]|[\\r\\\n]|(\\*+([^*/]|[\\r\\n])))*\\*+/)|(//.*)", "g");
        y._reg = new RegExp("(\".*\")|('.*')|([#\\w\\*-\\.+/()=<>{}\\\\]+)|([,;:\\\\])", "g");
        y._splitToWordExps = new RegExp("[(\".*\")]+|[('.*')]+|([ \\t=\\+\\-*/&%!<>!%(),;])", "g");
        y.includes = {};
        r(y, ["shaderParamsMap",
        function() {
            return this.shaderParamsMap = {
                float: 5126,
                int: 5124,
                bool: 35670,
                vec2: 35664,
                vec3: 35665,
                vec4: 35666,
                ivec2: 35667,
                ivec3: 35668,
                ivec4: 35669,
                bvec2: 35671,
                bvec3: 35672,
                bvec4: 35673,
                mat2: 35674,
                mat3: 35675,
                mat4: 35676,
                sampler2D: 35678,
                samplerCube: 35680
            }
        },
        "_splitToWordExps3",
        function() {
            return this._splitToWordExps3 = new RegExp("[ \\t=\\+\\-*/&%!<>!%(),;\\|]", "g")
        }]);
        y.__init$ = function() {
            v = function() {
                function i(e) {
                    this.childs = [];
                    this.text = "";
                    this.parent = null;
                    this.name = null;
                    this.noCompile = false;
                    this.includefiles = null;
                    this.condition = null;
                    this.conditionType = 0;
                    this.useFuns = "";
                    this.z = 0;
                    this.src = null;
                    this.includefiles = e
                }
                _(i, "");
                var e = i.prototype;
                e.setParent = function(e) {
                    e.childs.push(this);
                    this.z = e.z + 1;
                    this.parent = e
                };
                e.setCondition = function(e, t) {
                    if (e) {
                        this.conditionType = t;
                        e = e.replace(/(\s*$)/g, "");
                        this.condition = function() {
                            return this[e]
                        };
                        this.condition.__condition = e
                    }
                };
                e.toscript = function(e, t) {
                    return this._toscript(e, t, ++i.__id)
                };
                e._toscript = function(n, s, a) {
                    if (this.childs.length < 1 && !this.text) return s;
                    var e = s.length;
                    if (this.condition) {
                        var t = !!this.condition.call(n);
                        this.conditionType === 2 && (t = !t);
                        if (!t) return s
                    }
                    this.text && s.push(this.text);
                    this.childs.length > 0 && this.childs.forEach(function(e, t, i) {
                        e._toscript(n, s, a)
                    });
                    if (this.includefiles.length > 0 && this.useFuns.length > 0) {
                        var i;
                        for (var r = 0,
                        o = this.includefiles.length; r < o; r++) {
                            if (this.includefiles[r].curUseID == a) {
                                continue
                            }
                            i = this.includefiles[r].file.getFunsScript(this.useFuns);
                            if (i.length > 0) {
                                this.includefiles[r].curUseID = a;
                                s[0] = i + s[0]
                            }
                        }
                    }
                    return s
                };
                i.__id = 1;
                return i
            } ();
            i = function() {
                function e(e) {
                    this.script = null;
                    this.codes = {};
                    this.funs = {};
                    this.curUseID = -1;
                    this.funnames = "";
                    this.script = e;
                    var t = 0,
                    i = 0,
                    n = 0;
                    while (true) {
                        t = e.indexOf("#begin", t);
                        if (t < 0) break;
                        n = t + 5;
                        while (true) {
                            n = e.indexOf("#end", n);
                            if (n < 0) break;
                            if (e.charAt(n + 4) === "i") n += 5;
                            else break
                        }
                        if (n < 0) {
                            throw "add include err,no #end:" + e;
                            return
                        }
                        i = e.indexOf("\n", t);
                        var s = y.splitToWords(e.substr(t, i - t), null);
                        if (s[1] == "code") {
                            this.codes[s[2]] = e.substr(i + 1, n - i - 1)
                        } else if (s[1] == "function") {
                            i = e.indexOf("function", t);
                            i += "function".length;
                            this.funs[s[3]] = e.substr(i + 1, n - i - 1);
                            this.funnames += s[3] + ";"
                        }
                        t = n + 1
                    }
                }
                _(e, "");
                var t = e.prototype;
                t.getWith = function(e) {
                    var t = e ? this.codes[e] : this.script;
                    if (!t) {
                        throw "get with error:" + e
                    }
                    return t
                };
                t.getFunsScript = function(e) {
                    var t = "";
                    for (var i in this.funs) {
                        if (e.indexOf(i + ";") >= 0) {
                            t += this.funs[i]
                        }
                    }
                    return t
                };
                return e
            } ()
        };
        return y
    } ();
    var Pe = function() {
        function r() {}
        _(r, "laya.webgl.WebGL");
        r._uint8ArraySlice = function() {
            var e = this;
            var t = e.length;
            var i = new Uint8Array(e.length);
            for (var n = 0; n < t; n++) i[n] = e[n];
            return i
        };
        r._float32ArraySlice = function() {
            var e = this;
            var t = e.length;
            var i = new Float32Array(e.length);
            for (var n = 0; n < t; n++) i[n] = e[n];
            return i
        };
        r._uint16ArraySlice = function(e) {
            var t = arguments;
            var i = this;
            var n = 0;
            var s;
            var a = 0;
            if (t.length === 0) {
                n = i.length;
                s = new Uint16Array(n);
                for (a = 0; a < n; a++) s[a] = i[a]
            } else if (t.length === 2) {
                var r = t[0];
                var o = t[1];
                if (o > r) {
                    n = o - r;
                    s = new Uint16Array(n);
                    for (a = r; a < o; a++) s[a - r] = i[a]
                } else {
                    s = new Uint16Array(0)
                }
            }
            return s
        };
        r.expandContext = function() {
            var e = h.prototype;
            var t = CanvasRenderingContext2D.prototype;
            t.fillTrangles = e.fillTrangles;
            ct.__int__(null);
            t.setIBVB = function(e, t, i, n, s, a, r, o, l, h) {
                l === void 0 && (l = 0);
                h === void 0 && (h = 0);
                if (i === null) {
                    this._ib = this._ib || pt.QuadrangleIB;
                    i = this._ib;
                    ke.expandIBQuadrangle(i, n._byteLength / (4 * 16) + 8)
                }
                this._setIBVB(e, t, i, n, s, a, r, o, l, h)
            };
            t.fillTrangles = function(e, t, i, n, s) {
                this._curMat = this._curMat || L.create();
                this._vb = this._vb || _t.create();
                if (!this._ib) {
                    this._ib = pt.create();
                    ke.fillIBQuadrangle(this._ib, r / 4)
                }
                var a = this._vb;
                var r = n.length >> 4;
                ke.fillTranglesVB(a, t, i, n, s || this._curMat, 0, 0);
                ke.expandIBQuadrangle(this._ib, a._byteLength / (4 * 16) + 8);
                var o = new Fe(1, 0);
                o.textureHost = e;
                var l = new gt("attribute vec2 position; attribute vec2 texcoord; uniform vec2 size; uniform mat4 mmat; varying vec2 v_texcoord; void main() { vec4 p=vec4(position.xy,0.0,1.0);vec4 pos=mmat*p; gl_Position =vec4((pos.x/size.x-0.5)*2.0,(0.5-pos.y/size.y)*2.0,pos.z,1.0); v_texcoord = texcoord; }", "precision mediump float; varying vec2 v_texcoord; uniform sampler2D texture; void main() {vec4 color= texture2D(texture, v_texcoord); color.a*=1.0; gl_FragColor= color;}");
                a._vertType = 3;
                this._setIBVB(t, i, this._ib, a, r * 6, s, l, o, 0, 0)
            }
        };
        r.enable = function() {
            d.__init__();
            if (k.isConchApp) {
                if (!k.isConchWebGL) {
                    P.skinAniSprite = function() {
                        var e = new fe;
                        return e
                    };
                    r.expandContext();
                    return false
                }
            }
            P.getWebGLContext = function e(t) {
                var i;
                var n = ["webgl", "experimental-webgl", "webkit-3d", "moz-webgl"];
                for (var s = 0; s < n.length; s++) {
                    try {
                        i = t.getContext(n[s], {
                            stencil: b.isStencil,
                            alpha: b.isAlpha,
                            antialias: b.isAntialias,
                            premultipliedAlpha: b.premultipliedAlpha,
                            preserveDrawingBuffer: b.preserveDrawingBuffer
                        })
                    } catch(e) {}
                    if (i) return i
                }
                return null
            };
            r.mainContext = P.getWebGLContext(k._mainCanvas);
            if (r.mainContext == null) return false;
            if (k.isWebGL) return true;
            I.create = function(e, t) {
                return new mt(e, t)
            };
            S.create = function(e, t, i, n, s, a, r) {
                return new ht(e, t, i, n, s, a, r)
            };
            k.WebGL = r;
            k.isWebGL = true;
            Le.__init__();
            P.createRenderSprite = function(e, t) {
                return new Oe(e, t)
            };
            P.createWebGLContext2D = function(e) {
                return new Ne(e)
            };
            P.changeWebGLSize = function(e, t) {
                laya.webgl.WebGL.onStageResize(e, t)
            };
            P.createGraphics = function() {
                return new Ee
            };
            var e = P.createFilterAction;
            P.createFilterAction = e ? e: function(e) {
                return new Ve
            };
            P.clear = function(e) {
                Be.worldScissorTest && laya.webgl.WebGL.mainContext.disable(3089);
                var t = k.context.ctx;
                var i = t._submits._length == 0 || b.preserveDrawingBuffer ? p.create(e)._color: E._wgColor;
                if (i) t.clearBG(i[0], i[1], i[2], i[3]);
                Be.clear()
            };
            P.addToAtlas = function(e, t) {
                t === void 0 && (t = false);
                var i = e.bitmap;
                if (!k.optimizeTextureMemory(e.url, e)) {
                    i.enableMerageInAtlas = false;
                    return
                }
                if (C.__typeof(i, "laya.webgl.resource.IMergeAtlasBitmap") && i.allowMerageInAtlas) {
                    i.on("recovered", e, e.addTextureToAtlas)
                }
            };
            P.isAtlas = function(e) {
                return e instanceof laya.webgl.atlas.AtlasWebGLCanvas
            };
            Q._enable();
            P.beginFlush = function() {
                var e = Q.instance;
                var t = e.getAtlaserCount();
                for (var i = 0; i < t; i++) {
                    var n = e.getAtlaserByIndex(i).texture;
                    n._flashCacheImageNeedFlush && P.flashFlushImage(n)
                }
            };
            P.drawToCanvas = function(e, t, i, n, s, a) {
                if (i <= 0 || n <= 0) {
                    console.log("[error] canvasWidth and canvasHeight should greater than zero")
                }
                i |= 0;
                n |= 0;
                s |= 0;
                a |= 0;
                var r = Qe.create(i, n, 6408, 5121, 0, false);
                r.start();
                r.clear(0, 0, 0, 0);
                k.context.clear();
                M.renders[t]._fun(e, k.context, s, Be.height - n + a);
                k.context.flush();
                r.end();
                var o = r.getData(0, 0, i, n);
                r.recycle();
                if (o.byteLength != i * n * 4) {
                    console.log("drawToCanvas error: w:" + i + ",h:" + n + ",datalen:" + o.byteLength);
                    return
                }
                var l = new rt;
                l._canvas = d.createElement("canvas");
                l.size(i, n);
                var h = l._canvas.getContext("2d");
                d.canvas.size(i, n);
                var u = d.context;
                var c = u.createImageData(i, n);
                c.data.set(new Uint8ClampedArray(o.buffer));
                l._imgData = c;
                u.putImageData(c, 0, 0);
                h.save();
                h.translate(0, n);
                h.scale(1, -1);
                h.drawImage(d.canvas.source, 0, 0);
                h.restore();
                return l
            };
            P.createFilterAction = function(e) {
                var t;
                switch (e) {
                case 32:
                    t = new Ve;
                    break
                }
                return t
            };
            P.addTextureToAtlas = function(e) {
                e._uvID++;
                Q._atlasRestore++;
                e.bitmap.enableMerageInAtlas && Q.instance.addToAtlas(e)
            };
            P.getTexturePixels = function(e, t, i, n, s) {
                k.context.ctx.clear();
                var a = new U;
                a.graphics.drawTexture(e, -t, -i);
                var r = Qe.create(n, s);
                r.start();
                r.clear(0, 0, 0, 0);
                a.render(k.context, 0, 0);
                k.context.ctx.flush();
                r.end();
                var o = r.getData(0, 0, n, s);
                var l = [];
                var h = 0;
                for (var u = s - 1; u >= 0; u--) {
                    for (var c = 0; c < n; c++) {
                        h = (u * n + c) * 4;
                        l.push(o[h]);
                        l.push(o[h + 1]);
                        l.push(o[h + 2]);
                        l.push(o[h + 3])
                    }
                }
                return l
            };
            P.skinAniSprite = function() {
                var e = new fe;
                return e
            };
            v.create = function(e, t) {
                var i = new rt;
                i._imgData = t;
                i.flipY = false;
                return i
            };
            w._filterStart = function(e, t, i, n, s) {
                var a = e.getValue("bounds");
                var r = Qe.create(a.width, a.height);
                r.start();
                r.clear(0, 0, 0, 0);
                e.addValue("src", r);
                e.addValue("ScissorTest", Be.worldScissorTest);
                if (Be.worldScissorTest) {
                    var o = new D;
                    o.copyFrom(i.ctx._clipRect);
                    e.addValue("clipRect", o);
                    Be.worldScissorTest = false;
                    laya.webgl.WebGL.mainContext.disable(3089)
                }
            };
            w._filterEnd = function(e, t, i, n, s) {
                var a = e.getValue("bounds");
                var r = e.getValue("src");
                r.end();
                var o = Qe.create(a.width, a.height);
                o.start();
                o.clear(0, 0, 0, 0);
                e.addValue("out", o);
                t._set$P("_filterCache", o);
                t._set$P("_isHaveGlowFilter", e.getValue("_isHaveGlowFilter"))
            };
            w._EndTarget = function(e, t) {
                var i = e.getValue("src");
                i.recycle();
                var n = e.getValue("out");
                n.end();
                var s = e.getValue("ScissorTest");
                if (s) {
                    Be.worldScissorTest = true;
                    laya.webgl.WebGL.mainContext.enable(3089);
                    t.ctx.save();
                    var a = e.getValue("clipRect");
                    t.ctx.clipRect(a.x, a.y, a.width, a.height)
                }
            };
            w._useSrc = function(e) {
                var t = e.getValue("out");
                t.end();
                t = e.getValue("src");
                t.start();
                t.clear(0, 0, 0, 0)
            };
            w._endSrc = function(e) {
                var t = e.getValue("src");
                t.end()
            };
            w._useOut = function(e) {
                var t = e.getValue("src");
                t.end();
                t = e.getValue("out");
                t.start();
                t.clear(0, 0, 0, 0)
            };
            w._endOut = function(e) {
                var t = e.getValue("out");
                t.end()
            };
            w._recycleScope = function(e) {
                e.recycle()
            };
            w._filter = function(e, t, i, n) {
                var s = this._next;
                if (s) {
                    var a = e.filters,
                    r = a.length;
                    if (r == 1 && a[0].type == 32) {
                        t.ctx.save();
                        t.ctx.setFilters([a[0]]);
                        s._fun.call(s, e, t, i, n);
                        t.ctx.restore();
                        return
                    }
                    var o;
                    var l;
                    var h = Se.create();
                    var u = T.TEMP;
                    var c = t.ctx._getTransformMatrix();
                    var f = L.create();
                    c.copyTo(f);
                    var d = 0;
                    var g = 0;
                    var p = false;
                    var _ = e._$P._filterCache ? e._$P._filterCache: null;
                    if (!_ || e._repaint) {
                        p = e._isHaveGlowFilter();
                        h.addValue("_isHaveGlowFilter", p);
                        if (p) {
                            d = 50;
                            g = 25
                        }
                        l = new D;
                        l.copyFrom(e.getSelfBounds());
                        l.x += e.x;
                        l.y += e.y;
                        l.x -= e.pivotX + 4;
                        l.y -= e.pivotY + 4;
                        var m = l.x;
                        var v = l.y;
                        l.width += d + 8;
                        l.height += d + 8;
                        u.x = l.x * f.a + l.y * f.c;
                        u.y = l.y * f.d + l.x * f.b;
                        l.x = u.x;
                        l.y = u.y;
                        u.x = l.width * f.a + l.height * f.c;
                        u.y = l.height * f.d + l.width * f.b;
                        l.width = u.x;
                        l.height = u.y;
                        if (l.width <= 0 || l.height <= 0) {
                            return
                        }
                        _ && _.recycle();
                        h.addValue("bounds", l);
                        var y = Ie.create([h, e, t, 0, 0], w._filterStart);
                        t.addRenderObject(y);
                        t.ctx._renderKey = 0;
                        t.ctx._shader2D.glTexture = null;
                        var I = e.x - m + g;
                        var S = e.y - v + g;
                        s._fun.call(s, e, t, I, S);
                        y = Ie.create([h, e, t, 0, 0], w._filterEnd);
                        t.addRenderObject(y);
                        for (var C = 0; C < r; C++) {
                            if (C != 0) {
                                y = Ie.create([h], w._useSrc);
                                t.addRenderObject(y);
                                o = Fe.create(1, 0);
                                L.TEMP.identity();
                                t.ctx.drawTarget(h, 0, 0, l.width, l.height, L.TEMP, "out", o, null, ee.TOINT.overlay);
                                y = Ie.create([h], w._useOut);
                                t.addRenderObject(y)
                            }
                            var b = a[C];
                            b.action.apply3d(h, e, t, 0, 0)
                        }
                        y = Ie.create([h, t], w._EndTarget);
                        t.addRenderObject(y)
                    } else {
                        p = e._$P._isHaveGlowFilter ? e._$P._isHaveGlowFilter: false;
                        if (p) {
                            d = 50;
                            g = 25
                        }
                        l = e.getBounds();
                        if (l.width <= 0 || l.height <= 0) {
                            return
                        }
                        l.width += d;
                        l.height += d;
                        u.x = l.x * f.a + l.y * f.c;
                        u.y = l.y * f.d + l.x * f.b;
                        l.x = u.x;
                        l.y = u.y;
                        u.x = l.width * f.a + l.height * f.c;
                        u.y = l.height * f.d + l.width * f.b;
                        l.width = u.x;
                        l.height = u.y;
                        h.addValue("out", _)
                    }
                    i = i - g - e.x;
                    n = n - g - e.y;
                    u.setTo(i, n);
                    f.transformPoint(u);
                    i = u.x + l.x;
                    n = u.y + l.y;
                    o = Fe.create(1, 0);
                    L.TEMP.identity();
                    t.ctx.drawTarget(h, i, n, l.width, l.height, L.TEMP, "out", o, null, ee.TOINT.overlay);
                    y = Ie.create([h], w._recycleScope);
                    t.addRenderObject(y);
                    f.destroy()
                }
            };
            Float32Array.prototype.slice || (Float32Array.prototype.slice = r._float32ArraySlice);
            Uint16Array.prototype.slice || (Uint16Array.prototype.slice = r._uint16ArraySlice);
            Uint8Array.prototype.slice || (Uint8Array.prototype.slice = r._uint8ArraySlice);
            return true
        };
        r.onStageResize = function(e, t) {
            if (r.mainContext == null) return;
            r.mainContext.viewport(0, 0, e, t);
            Be.width = e;
            Be.height = t
        };
        r.onInvalidGLRes = function() {
            Q.instance.freeAll();
            A.releaseContentManagers(true);
            r.doNodeRepaint(C.stage);
            r.mainContext.viewport(0, 0, Be.width, Be.height);
            C.stage.event("devicelost")
        };
        r.doNodeRepaint = function(e) {
            e.numChildren == 0 && e.repaint();
            for (var t = 0; t < e.numChildren; t++) r.doNodeRepaint(e.getChildAt(t))
        };
        r.init = function(e, t, i) {
            r.mainCanvas = e;
            v._createContext = function(e) {
                return new Ne(e)
            };
            rt._createContext = function(e) {
                return new Ne(e)
            };
            var n = laya.webgl.WebGL.mainContext;
            if (n.getShaderPrecisionFormat != null) {
                var s = n.getShaderPrecisionFormat(35633, 36338);
                var a = n.getShaderPrecisionFormat(35632, 36338);
                r.shaderHighPrecision = s.precision && a.precision ? true: false
            } else {
                r.shaderHighPrecision = false
            }
            r.compressAstc = n.getExtension("WEBGL_compressed_texture_astc");
            r.compressAtc = n.getExtension("WEBGL_compressed_texture_atc");
            r.compressEtc = n.getExtension("WEBGL_compressed_texture_etc");
            r.compressEtc1 = n.getExtension("WEBGL_compressed_texture_etc1");
            r.compressPvrtc = n.getExtension("WEBGL_compressed_texture_pvrtc");
            r.compressS3tc = n.getExtension("WEBGL_compressed_texture_s3tc");
            r.compressS3tc_srgb = n.getExtension("WEBGL_compressed_texture_s3tc_srgb");
            n.deleteTexture1 = n.deleteTexture;
            n.deleteTexture = function(e) {
                if (e == Ue.curBindTexValue) {
                    Ue.curBindTexValue = null
                }
                n.deleteTexture1(e)
            };
            r.onStageResize(t, i);
            if (r.mainContext == null) throw new Error("webGL getContext err!");
            V.__init__();
            Q.__init__();
            ze.__init__();
            ye.__init__();
            Ne.__init__();
            Fe.__init__();
            ue.__init__();
            ct.__int__(n);
            ee._init_(n);
            if (k.isConchApp) {
                conch.setOnInvalidGLRes(r.onInvalidGLRes)
            }
        };
        r.compressAstc = null;
        r.compressAtc = null;
        r.compressEtc = null;
        r.compressEtc1 = null;
        r.compressPvrtc = null;
        r.compressS3tc = null;
        r.compressS3tc_srgb = null;
        r.mainCanvas = null;
        r.mainContext = null;
        r.antialias = true;
        r.shaderHighPrecision = false;
        r._bg_null = [0, 0, 0, 0];
        return r
    } ();
    var Ue = function() {
        function n() {}
        _(n, "laya.webgl.WebGLContext");
        n.UseProgram = function(e) {
            if (n._useProgram === e) return false;
            Pe.mainContext.useProgram(e);
            n._useProgram = e;
            return true
        };
        n.setDepthTest = function(e, t) {
            t !== n._depthTest && (n._depthTest = t, t ? e.enable(2929) : e.disable(2929))
        };
        n.setDepthMask = function(e, t) {
            t !== n._depthMask && (n._depthMask = t, e.depthMask(t))
        };
        n.setDepthFunc = function(e, t) {
            t !== n._depthFunc && (n._depthFunc = t, e.depthFunc(t))
        };
        n.setBlend = function(e, t) {
            t !== n._blend && (n._blend = t, t ? e.enable(3042) : e.disable(3042))
        };
        n.setBlendFunc = function(e, t, i) { (t !== n._sFactor || i !== n._dFactor) && (n._sFactor = t, n._dFactor = i, e.blendFunc(t, i))
        };
        n.setCullFace = function(e, t) {
            t !== n._cullFace && (n._cullFace = t, t ? e.enable(2884) : e.disable(2884))
        };
        n.setFrontFace = function(e, t) {
            t !== n._frontFace && (n._frontFace = t, e.frontFace(t))
        };
        n.bindTexture = function(e, t, i) {
            e.bindTexture(t, i);
            n.curBindTexTarget = t;
            n.curBindTexValue = i
        };
        n.DEPTH_BUFFER_BIT = 256;
        n.STENCIL_BUFFER_BIT = 1024;
        n.COLOR_BUFFER_BIT = 16384;
        n.POINTS = 0;
        n.LINES = 1;
        n.LINE_LOOP = 2;
        n.LINE_STRIP = 3;
        n.TRIANGLES = 4;
        n.TRIANGLE_STRIP = 5;
        n.TRIANGLE_FAN = 6;
        n.ZERO = 0;
        n.ONE = 1;
        n.SRC_COLOR = 768;
        n.ONE_MINUS_SRC_COLOR = 769;
        n.SRC_ALPHA = 770;
        n.ONE_MINUS_SRC_ALPHA = 771;
        n.DST_ALPHA = 772;
        n.ONE_MINUS_DST_ALPHA = 773;
        n.DST_COLOR = 774;
        n.ONE_MINUS_DST_COLOR = 775;
        n.SRC_ALPHA_SATURATE = 776;
        n.FUNC_ADD = 32774;
        n.BLEND_EQUATION = 32777;
        n.BLEND_EQUATION_RGB = 32777;
        n.BLEND_EQUATION_ALPHA = 34877;
        n.FUNC_SUBTRACT = 32778;
        n.FUNC_REVERSE_SUBTRACT = 32779;
        n.BLEND_DST_RGB = 32968;
        n.BLEND_SRC_RGB = 32969;
        n.BLEND_DST_ALPHA = 32970;
        n.BLEND_SRC_ALPHA = 32971;
        n.CONSTANT_COLOR = 32769;
        n.ONE_MINUS_CONSTANT_COLOR = 32770;
        n.CONSTANT_ALPHA = 32771;
        n.ONE_MINUS_CONSTANT_ALPHA = 32772;
        n.BLEND_COLOR = 32773;
        n.ARRAY_BUFFER = 34962;
        n.ELEMENT_ARRAY_BUFFER = 34963;
        n.ARRAY_BUFFER_BINDING = 34964;
        n.ELEMENT_ARRAY_BUFFER_BINDING = 34965;
        n.STREAM_DRAW = 35040;
        n.STATIC_DRAW = 35044;
        n.DYNAMIC_DRAW = 35048;
        n.BUFFER_SIZE = 34660;
        n.BUFFER_USAGE = 34661;
        n.CURRENT_VERTEX_ATTRIB = 34342;
        n.FRONT = 1028;
        n.BACK = 1029;
        n.CULL_FACE = 2884;
        n.FRONT_AND_BACK = 1032;
        n.BLEND = 3042;
        n.DITHER = 3024;
        n.STENCIL_TEST = 2960;
        n.DEPTH_TEST = 2929;
        n.SCISSOR_TEST = 3089;
        n.POLYGON_OFFSET_FILL = 32823;
        n.SAMPLE_ALPHA_TO_COVERAGE = 32926;
        n.SAMPLE_COVERAGE = 32928;
        n.NO_ERROR = 0;
        n.INVALID_ENUM = 1280;
        n.INVALID_VALUE = 1281;
        n.INVALID_OPERATION = 1282;
        n.OUT_OF_MEMORY = 1285;
        n.CW = 2304;
        n.CCW = 2305;
        n.LINE_WIDTH = 2849;
        n.ALIASED_POINT_SIZE_RANGE = 33901;
        n.ALIASED_LINE_WIDTH_RANGE = 33902;
        n.CULL_FACE_MODE = 2885;
        n.FRONT_FACE = 2886;
        n.DEPTH_RANGE = 2928;
        n.DEPTH_WRITEMASK = 2930;
        n.DEPTH_CLEAR_VALUE = 2931;
        n.DEPTH_FUNC = 2932;
        n.STENCIL_CLEAR_VALUE = 2961;
        n.STENCIL_FUNC = 2962;
        n.STENCIL_FAIL = 2964;
        n.STENCIL_PASS_DEPTH_FAIL = 2965;
        n.STENCIL_PASS_DEPTH_PASS = 2966;
        n.STENCIL_REF = 2967;
        n.STENCIL_VALUE_MASK = 2963;
        n.STENCIL_WRITEMASK = 2968;
        n.STENCIL_BACK_FUNC = 34816;
        n.STENCIL_BACK_FAIL = 34817;
        n.STENCIL_BACK_PASS_DEPTH_FAIL = 34818;
        n.STENCIL_BACK_PASS_DEPTH_PASS = 34819;
        n.STENCIL_BACK_REF = 36003;
        n.STENCIL_BACK_VALUE_MASK = 36004;
        n.STENCIL_BACK_WRITEMASK = 36005;
        n.VIEWPORT = 2978;
        n.SCISSOR_BOX = 3088;
        n.COLOR_CLEAR_VALUE = 3106;
        n.COLOR_WRITEMASK = 3107;
        n.UNPACK_ALIGNMENT = 3317;
        n.PACK_ALIGNMENT = 3333;
        n.MAX_TEXTURE_SIZE = 3379;
        n.MAX_VIEWPORT_DIMS = 3386;
        n.SUBPIXEL_BITS = 3408;
        n.RED_BITS = 3410;
        n.GREEN_BITS = 3411;
        n.BLUE_BITS = 3412;
        n.ALPHA_BITS = 3413;
        n.DEPTH_BITS = 3414;
        n.STENCIL_BITS = 3415;
        n.POLYGON_OFFSET_UNITS = 10752;
        n.POLYGON_OFFSET_FACTOR = 32824;
        n.TEXTURE_BINDING_2D = 32873;
        n.SAMPLE_BUFFERS = 32936;
        n.SAMPLES = 32937;
        n.SAMPLE_COVERAGE_VALUE = 32938;
        n.SAMPLE_COVERAGE_INVERT = 32939;
        n.NUM_COMPRESSED_TEXTURE_FORMATS = 34466;
        n.COMPRESSED_TEXTURE_FORMATS = 34467;
        n.DONT_CARE = 4352;
        n.FASTEST = 4353;
        n.NICEST = 4354;
        n.GENERATE_MIPMAP_HINT = 33170;
        n.BYTE = 5120;
        n.UNSIGNED_BYTE = 5121;
        n.SHORT = 5122;
        n.UNSIGNED_SHORT = 5123;
        n.INT = 5124;
        n.UNSIGNED_INT = 5125;
        n.FLOAT = 5126;
        n.DEPTH_COMPONENT = 6402;
        n.ALPHA = 6406;
        n.RGB = 6407;
        n.RGBA = 6408;
        n.LUMINANCE = 6409;
        n.LUMINANCE_ALPHA = 6410;
        n.UNSIGNED_SHORT_4_4_4_4 = 32819;
        n.UNSIGNED_SHORT_5_5_5_1 = 32820;
        n.UNSIGNED_SHORT_5_6_5 = 33635;
        n.FRAGMENT_SHADER = 35632;
        n.VERTEX_SHADER = 35633;
        n.MAX_VERTEX_ATTRIBS = 34921;
        n.MAX_VERTEX_UNIFORM_VECTORS = 36347;
        n.MAX_VARYING_VECTORS = 36348;
        n.MAX_COMBINED_TEXTURE_IMAGE_UNITS = 35661;
        n.MAX_VERTEX_TEXTURE_IMAGE_UNITS = 35660;
        n.MAX_TEXTURE_IMAGE_UNITS = 34930;
        n.MAX_FRAGMENT_UNIFORM_VECTORS = 36349;
        n.SHADER_TYPE = 35663;
        n.DELETE_STATUS = 35712;
        n.LINK_STATUS = 35714;
        n.VALIDATE_STATUS = 35715;
        n.ATTACHED_SHADERS = 35717;
        n.ACTIVE_UNIFORMS = 35718;
        n.ACTIVE_ATTRIBUTES = 35721;
        n.SHADING_LANGUAGE_VERSION = 35724;
        n.CURRENT_PROGRAM = 35725;
        n.NEVER = 512;
        n.LESS = 513;
        n.EQUAL = 514;
        n.LEQUAL = 515;
        n.GREATER = 516;
        n.NOTEQUAL = 517;
        n.GEQUAL = 518;
        n.ALWAYS = 519;
        n.KEEP = 7680;
        n.REPLACE = 7681;
        n.INCR = 7682;
        n.DECR = 7683;
        n.INVERT = 5386;
        n.INCR_WRAP = 34055;
        n.DECR_WRAP = 34056;
        n.VENDOR = 7936;
        n.RENDERER = 7937;
        n.VERSION = 7938;
        n.NEAREST = 9728;
        n.LINEAR = 9729;
        n.NEAREST_MIPMAP_NEAREST = 9984;
        n.LINEAR_MIPMAP_NEAREST = 9985;
        n.NEAREST_MIPMAP_LINEAR = 9986;
        n.LINEAR_MIPMAP_LINEAR = 9987;
        n.TEXTURE_MAG_FILTER = 10240;
        n.TEXTURE_MIN_FILTER = 10241;
        n.TEXTURE_WRAP_S = 10242;
        n.TEXTURE_WRAP_T = 10243;
        n.TEXTURE_2D = 3553;
        n.TEXTURE = 5890;
        n.TEXTURE_CUBE_MAP = 34067;
        n.TEXTURE_BINDING_CUBE_MAP = 34068;
        n.TEXTURE_CUBE_MAP_POSITIVE_X = 34069;
        n.TEXTURE_CUBE_MAP_NEGATIVE_X = 34070;
        n.TEXTURE_CUBE_MAP_POSITIVE_Y = 34071;
        n.TEXTURE_CUBE_MAP_NEGATIVE_Y = 34072;
        n.TEXTURE_CUBE_MAP_POSITIVE_Z = 34073;
        n.TEXTURE_CUBE_MAP_NEGATIVE_Z = 34074;
        n.MAX_CUBE_MAP_TEXTURE_SIZE = 34076;
        n.TEXTURE0 = 33984;
        n.TEXTURE1 = 33985;
        n.TEXTURE2 = 33986;
        n.TEXTURE3 = 33987;
        n.TEXTURE4 = 33988;
        n.TEXTURE5 = 33989;
        n.TEXTURE6 = 33990;
        n.TEXTURE7 = 33991;
        n.TEXTURE8 = 33992;
        n.TEXTURE9 = 33993;
        n.TEXTURE10 = 33994;
        n.TEXTURE11 = 33995;
        n.TEXTURE12 = 33996;
        n.TEXTURE13 = 33997;
        n.TEXTURE14 = 33998;
        n.TEXTURE15 = 33999;
        n.TEXTURE16 = 34e3;
        n.TEXTURE17 = 34001;
        n.TEXTURE18 = 34002;
        n.TEXTURE19 = 34003;
        n.TEXTURE20 = 34004;
        n.TEXTURE21 = 34005;
        n.TEXTURE22 = 34006;
        n.TEXTURE23 = 34007;
        n.TEXTURE24 = 34008;
        n.TEXTURE25 = 34009;
        n.TEXTURE26 = 34010;
        n.TEXTURE27 = 34011;
        n.TEXTURE28 = 34012;
        n.TEXTURE29 = 34013;
        n.TEXTURE30 = 34014;
        n.TEXTURE31 = 34015;
        n.ACTIVE_TEXTURE = 34016;
        n.REPEAT = 10497;
        n.CLAMP_TO_EDGE = 33071;
        n.MIRRORED_REPEAT = 33648;
        n.FLOAT_VEC2 = 35664;
        n.FLOAT_VEC3 = 35665;
        n.FLOAT_VEC4 = 35666;
        n.INT_VEC2 = 35667;
        n.INT_VEC3 = 35668;
        n.INT_VEC4 = 35669;
        n.BOOL = 35670;
        n.BOOL_VEC2 = 35671;
        n.BOOL_VEC3 = 35672;
        n.BOOL_VEC4 = 35673;
        n.FLOAT_MAT2 = 35674;
        n.FLOAT_MAT3 = 35675;
        n.FLOAT_MAT4 = 35676;
        n.SAMPLER_2D = 35678;
        n.SAMPLER_CUBE = 35680;
        n.VERTEX_ATTRIB_ARRAY_ENABLED = 34338;
        n.VERTEX_ATTRIB_ARRAY_SIZE = 34339;
        n.VERTEX_ATTRIB_ARRAY_STRIDE = 34340;
        n.VERTEX_ATTRIB_ARRAY_TYPE = 34341;
        n.VERTEX_ATTRIB_ARRAY_NORMALIZED = 34922;
        n.VERTEX_ATTRIB_ARRAY_POINTER = 34373;
        n.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = 34975;
        n.COMPILE_STATUS = 35713;
        n.LOW_FLOAT = 36336;
        n.MEDIUM_FLOAT = 36337;
        n.HIGH_FLOAT = 36338;
        n.LOW_INT = 36339;
        n.MEDIUM_INT = 36340;
        n.HIGH_INT = 36341;
        n.FRAMEBUFFER = 36160;
        n.RENDERBUFFER = 36161;
        n.RGBA4 = 32854;
        n.RGB5_A1 = 32855;
        n.RGB565 = 36194;
        n.DEPTH_COMPONENT16 = 33189;
        n.STENCIL_INDEX = 6401;
        n.STENCIL_INDEX8 = 36168;
        n.DEPTH_STENCIL = 34041;
        n.RENDERBUFFER_WIDTH = 36162;
        n.RENDERBUFFER_HEIGHT = 36163;
        n.RENDERBUFFER_INTERNAL_FORMAT = 36164;
        n.RENDERBUFFER_RED_SIZE = 36176;
        n.RENDERBUFFER_GREEN_SIZE = 36177;
        n.RENDERBUFFER_BLUE_SIZE = 36178;
        n.RENDERBUFFER_ALPHA_SIZE = 36179;
        n.RENDERBUFFER_DEPTH_SIZE = 36180;
        n.RENDERBUFFER_STENCIL_SIZE = 36181;
        n.FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = 36048;
        n.FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = 36049;
        n.FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = 36050;
        n.FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = 36051;
        n.COLOR_ATTACHMENT0 = 36064;
        n.DEPTH_ATTACHMENT = 36096;
        n.STENCIL_ATTACHMENT = 36128;
        n.DEPTH_STENCIL_ATTACHMENT = 33306;
        n.NONE = 0;
        n.FRAMEBUFFER_COMPLETE = 36053;
        n.FRAMEBUFFER_INCOMPLETE_ATTACHMENT = 36054;
        n.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 36055;
        n.FRAMEBUFFER_INCOMPLETE_DIMENSIONS = 36057;
        n.FRAMEBUFFER_UNSUPPORTED = 36061;
        n.FRAMEBUFFER_BINDING = 36006;
        n.RENDERBUFFER_BINDING = 36007;
        n.MAX_RENDERBUFFER_SIZE = 34024;
        n.INVALID_FRAMEBUFFER_OPERATION = 1286;
        n.UNPACK_FLIP_Y_WEBGL = 37440;
        n.UNPACK_PREMULTIPLY_ALPHA_WEBGL = 37441;
        n.CONTEXT_LOST_WEBGL = 37442;
        n.UNPACK_COLORSPACE_CONVERSION_WEBGL = 37443;
        n.BROWSER_DEFAULT_WEBGL = 37444;
        n._useProgram = null;
        n._depthTest = true;
        n._depthMask = true;
        n._blend = false;
        n._cullFace = false;
        n.curBindTexTarget = null;
        n.curBindTexValue = null;
        r(n, ["_depthFunc",
        function() {
            return this._depthFunc = 513
        },
        "_sFactor",
        function() {
            return this._sFactor = 1
        },
        "_dFactor",
        function() {
            return this._dFactor = 0
        },
        "_frontFace",
        function() {
            return this._frontFace = 2305
        }]);
        return n
    } ();
    var Ee = function(e) {
        function t() {
            t.__super.call(this)
        }
        _(t, "laya.webgl.display.GraphicsGL", e);
        var i = t.prototype;
        i.setShader = function(e) {
            this._saveToCmd(k.context._setShader, [e])
        };
        i.setIBVB = function(e, t, i, n, s, a) {
            this._saveToCmd(k.context._setIBVB, [e, t, i, n, s, a])
        };
        i.drawParticle = function(e, t, i) {
            var n = P.createParticleTemplate2D(i);
            n.x = e;
            n.y = t;
            this._saveToCmd(k.context._drawParticle, [n])
        };
        return t
    } (m);
    var Ne = function(e) {
        var i;
        function H(e) {
            this._x = 0;
            this._y = 0;
            this._id = ++H._COUNT;
            this._path = null;
            this._drawCount = 1;
            this._maxNumEle = 0;
            this._clear = false;
            this._isMain = false;
            this._atlasResourceChange = 0;
            this._submits = null;
            this._curSubmit = null;
            this._ib = null;
            this._vb = null;
            this._nBlendType = 0;
            this._saveMark = null;
            this._shader2D = null;
            this.meshlist = [];
            this.mId = -1;
            this.mHaveKey = false;
            this.mHaveLineKey = false;
            this.mX = 0;
            this.mY = 0;
            H.__super.call(this);
            this._width = 99999999;
            this._height = 99999999;
            this._clipRect = H.MAXCLIPRECT;
            this.mOutPoint;
            this._canvas = e;
            H._contextcount++;
            if (k.isFlash) {
                this._ib = pt.create(35044);
                ke.fillIBQuadrangle(this._ib, 16)
            } else this._ib = pt.QuadrangleIB;
            this.clear()
        }
        _(H, "laya.webgl.canvas.WebGLContext2D", e);
        var t = H.prototype;
        t.setIsMainContext = function() {
            this._isMain = true
        };
        t.clearBG = function(e, t, i, n) {
            var s = Pe.mainContext;
            s.clearColor(e, t, i, n);
            s.clear(16384)
        };
        t._getSubmits = function() {
            return this._submits
        };
        t._releaseMem = function() {
            if (!this._submits) return;
            this._curMat.destroy();
            this._curMat = null;
            this._shader2D.destroy();
            this._shader2D = null;
            for (var e = 0,
            t = this._submits._length; e < t; e++) this._submits[e].releaseRender();
            this._submits.length = 0;
            this._submits._length = 0;
            this._submits = null;
            this._curSubmit = null;
            this._path && this._path.recover();
            this._path = null;
            this._other && (this._other.font = null);
            this._save = null;
            if (this._vb) {
                this._vb.releaseResource();
                this._vb.destroy();
                this._vb.destory();
                this._vb = null
            }
        };
        t.destroy = function() {--H._contextcount;
            this.sprite = null;
            this._releaseMem();
            this._targets && this._targets.destroy();
            this._targets = null;
            this._canvas = null;
            this._ib && this._ib != pt.QuadrangleIB && this._ib.releaseResource()
        };
        t.clear = function() {
            if (!this._submits) {
                this._other = i.DEFAULT;
                this._curMat = L.create();
                this._vb = _t.create( - 1);
                this._submits = [];
                this._save = [re.Create(this)];
                this._save.length = 10;
                this._shader2D = new ue;
                this._triangleMesh = $e.getAMesh()
            }
            this._vb.clear();
            this._targets && (this._targets.repaint = true);
            this._other = i.DEFAULT;
            this._clear = true;
            this._repaint = false;
            this._drawCount = 1;
            this._renderKey = 0;
            this._other.lineWidth = this._shader2D.ALPHA = 1;
            this._nBlendType = 0;
            this._clipRect = H.MAXCLIPRECT;
            this._curSubmit = ye.RENDERBASE;
            this._shader2D.glTexture = null;
            this._shader2D.fillStyle = this._shader2D.strokeStyle = te.DEFAULT;
            for (var e = 0,
            t = this._submits._length; e < t; e++) this._submits[e].releaseRender();
            this._submits._length = 0;
            this._curMat.identity();
            this._other.clear();
            this._saveMark = this._save[0];
            this._save._length = 1
        };
        t.size = function(e, t) {
            if (this._width != e || this._height != t) {
                if (e == 0 || t == 0) {
                    if (this._vb._byteLength != 0) {
                        this._width = e;
                        this._height = t;
                        this._vb.clear();
                        this._vb.upload()
                    }
                    for (var i = 0,
                    n = this._submits._length; i < n; i++) this._submits[i].releaseRender();
                    this._submits.length = 0;
                    this._submits._length = 0;
                    this._curSubmit = null;
                    this._path && this._path.recover();
                    this._path = null;
                    this.sprite = null;
                    this._targets && this._targets.destroy();
                    this._targets = null
                } else {
                    this._width = e;
                    this._height = t;
                    this._targets && this._targets.size(e, t);
                    this._canvas.memorySize -= this._canvas.memorySize
                }
            }
            if (e === 0 && t === 0) this._releaseMem()
        };
        t._getTransformMatrix = function() {
            return this._curMat
        };
        t.translate = function(e, t) {
            if (e !== 0 || t !== 0) {
                le.save(this);
                if (this._curMat.bTransform) {
                    oe.save(this);
                    this._curMat.transformPointN(T.TEMP.setTo(e, t));
                    e = T.TEMP.x;
                    t = T.TEMP.y
                }
                this._x += e;
                this._y += t
            }
        };
        t.save = function() {
            this._save[this._save._length++] = re.Create(this)
        };
        t.restore = function() {
            var e = this._save._length;
            if (e < 1) return;
            for (var t = e - 1; t >= 0; t--) {
                var i = this._save[t];
                i.restore(this);
                if (i.isSaveMark()) {
                    this._save._length = t;
                    return
                }
            }
        };
        t._fillText = function(e, t, i, n, s, a, r, o, l, h) {
            h === void 0 && (h = 0);
            var u = this._shader2D;
            var c = this._curSubmit.shaderValue;
            var f = s ? Te.create(s) : this._other.font;
            if (Q.enabled) {
                if (u.ALPHA !== c.ALPHA) u.glTexture = null;
                Le.drawText(this, e, t, this._curMat, f, l || this._other.textAlign, a, r, o, i, n, h)
            } else {
                var d = this._shader2D.defines.getValue();
                var g = a ? p.create(a)._color: u.colorAdd;
                if (u.ALPHA !== c.ALPHA || g !== u.colorAdd || c.colorAdd !== u.colorAdd) {
                    u.glTexture = null;
                    u.colorAdd = g
                }
                Le.drawText(this, e, t, this._curMat, f, l || this._other.textAlign, a, r, o, i, n, h)
            }
        };
        t.fillWords = function(e, t, i, n, s, a) {
            this._fillText(null, e, t, i, n, s, null, -1, null, a)
        };
        t.fillBorderWords = function(e, t, i, n, s, a, r) {
            this._fillBorderText(null, e, t, i, n, s, a, r, null)
        };
        t.fillText = function(e, t, i, n, s, a) {
            this._fillText(e, null, t, i, n, s, null, -1, a)
        };
        t.strokeText = function(e, t, i, n, s, a, r) {
            this._fillText(e, null, t, i, n, null, s, a || 1, r)
        };
        t.fillBorderText = function(e, t, i, n, s, a, r, o) {
            this._fillBorderText(e, null, t, i, n, s, a, r, o)
        };
        t._fillBorderText = function(e, t, i, n, s, a, r, o, l) {
            if (!Q.enabled) {
                this._fillText(e, t, i, n, s, null, r, o || 1, l);
                this._fillText(e, t, i, n, s, a, null, -1, l);
                return
            }
            var h = this._shader2D;
            var u = this._curSubmit.shaderValue;
            if (h.ALPHA !== u.ALPHA) h.glTexture = null;
            var c = s ? (H._fontTemp.setFont(s), H._fontTemp) : this._other.font;
            Le.drawText(this, e, t, this._curMat, c, l || this._other.textAlign, a, r, o || 1, i, n, 0)
        };
        t.fillRect = function(e, t, i, n, s) {
            var a = this._vb;
            if (ke.fillRectImgVb(a, this._clipRect, e, t, i, n, z.DEF_UV, this._curMat, this._x, this._y, 0, 0)) {
                this._renderKey = 0;
                var r = this._shader2D.fillStyle;
                s && (this._shader2D.fillStyle = te.create(s));
                var o = this._shader2D;
                var l = this._curSubmit.shaderValue;
                if (o.fillStyle !== l.fillStyle || o.ALPHA !== l.ALPHA) {
                    o.glTexture = null;
                    var h = this._curSubmit = ye.createSubmit(this, this._ib, a, (a._byteLength - 16 * 4) / 32 * 3, Fe.create(2, 0));
                    h.shaderValue.color = o.fillStyle._color._color;
                    h.shaderValue.ALPHA = o.ALPHA;
                    this._submits[this._submits._length++] = h
                }
                this._curSubmit._numEle += 6;
                this._shader2D.fillStyle = r
            }
        };
        t.fillTexture = function(e, t, i, n, s, a, r, o) {
            if (! (e.loaded && e.bitmap && e.source)) {
                if (this.sprite) {
                    C.timer.callLater(this, this._repaintSprite)
                }
                return
            }
            var l = this._vb;
            var h = e.bitmap.width,
            u = e.bitmap.height,
            c = e.uv;
            var f = r.x % e.width,
            d = r.y % e.height;
            if (h != o.w || u != o.h) {
                if (!o.w && !o.h) {
                    o.oy = o.ox = 0;
                    switch (a) {
                    case "repeat":
                        o.width = n;
                        o.height = s;
                        break;
                    case "repeat-x":
                        o.width = n;
                        if (d < 0) {
                            if (e.height + d > s) {
                                o.height = s
                            } else {
                                o.height = e.height + d
                            }
                        } else {
                            o.oy = d;
                            if (e.height + d > s) {
                                o.height = s - d
                            } else {
                                o.height = e.height
                            }
                        }
                        break;
                    case "repeat-y":
                        if (f < 0) {
                            if (e.width + f > n) {
                                o.width = n
                            } else {
                                o.width = e.width + f
                            }
                        } else {
                            o.ox = f;
                            if (e.width + f > n) {
                                o.width = n - f
                            } else {
                                o.width = e.width
                            }
                        }
                        o.height = s;
                        break;
                    case "no-repeat":
                        if (f < 0) {
                            if (e.width + f > n) {
                                o.width = n
                            } else {
                                o.width = e.width + f
                            }
                        } else {
                            o.ox = f;
                            if (e.width + f > n) {
                                o.width = n - f
                            } else {
                                o.width = e.width
                            }
                        }
                        if (d < 0) {
                            if (e.height + d > s) {
                                o.height = s
                            } else {
                                o.height = e.height + d
                            }
                        } else {
                            o.oy = d;
                            if (e.height + d > s) {
                                o.height = s - d
                            } else {
                                o.height = e.height
                            }
                        }
                        break;
                    default:
                        o.width = n;
                        o.height = s;
                        break
                    }
                }
                o.w = h;
                o.h = u;
                o.uv = [0, 0, o.width / h, 0, o.width / h, o.height / u, 0, o.height / u]
            }
            t += o.ox;
            i += o.oy;
            f -= o.ox;
            d -= o.oy;
            if (ke.fillRectImgVb(l, this._clipRect, t, i, o.width, o.height, o.uv, this._curMat, this._x, this._y, 0, 0)) {
                this._renderKey = 0;
                var g = Je.create(this, this._ib, l, (l._byteLength - 16 * 4) / 32 * 3, Fe.create(256, 0));
                this._submits[this._submits._length++] = g;
                var p = g.shaderValue;
                p.textureHost = e;
                var _ = c[0] * h;
                var m = c[1] * u;
                var v = (c[2] - c[0]) * h;
                var y = (c[5] - c[3]) * u;
                var I = -f / h;
                var S = -d / u;
                p.u_TexRange[0] = _ / h;
                p.u_TexRange[1] = v / h;
                p.u_TexRange[2] = m / u;
                p.u_TexRange[3] = y / u;
                p.u_offset[0] = I;
                p.u_offset[1] = S;
                if (Q.enabled && !this._isMain) g.addTexture(e, (l._byteLength >> 2) - 16);
                this._curSubmit = g;
                g._renderType = 10017;
                g._numEle += 6
            }
        };
        t.setShader = function(e) {
            ne.save(this, 1048576, this._shader2D, true);
            this._shader2D.shader = e
        };
        t.setFilters = function(e) {
            ne.save(this, 2097152, this._shader2D, true);
            this._shader2D.filters = e;
            this._curSubmit = ye.RENDERBASE;
            this._renderKey = 0;
            this._drawCount++
        };
        t.drawTexture = function(e, t, i, n, s, a, r) {
            this._drawTextureM(e, t, i, n, s, a, r, null, 1)
        };
        t.addTextureVb = function(e, t, i) {
            var n = this._curSubmit._vb || this._vb;
            var s = n._byteLength >> 2;
            n.byteLength = s + 16 << 2;
            var a = n.getFloat32Array();
            for (var r = 0,
            o = 0; r < 16; r += 4) {
                a[s++] = e[r] + t;
                a[s++] = e[r + 1] + i;
                a[s++] = e[r + 2];
                a[s++] = e[r + 3]
            }
            this._curSubmit._numEle += 6;
            this._maxNumEle = Math.max(this._maxNumEle, this._curSubmit._numEle);
            n._upload = true
        };
        t.willDrawTexture = function(e, t) {
            if (! (e.loaded && e.bitmap && e.source)) {
                if (this.sprite) {
                    C.timer.callLater(this, this._repaintSprite)
                }
                return 0
            }
            var i = e.bitmap;
            var n = i.id + this._shader2D.ALPHA * t + 10016;
            if (n == this._renderKey) return n;
            var s = this._shader2D;
            var a = s.ALPHA;
            var r = this._curSubmit.shaderValue;
            s.ALPHA *= t;
            this._renderKey = n;
            this._drawCount++;
            s.glTexture = i;
            var o = this._vb;
            var l = null;
            var h = o._byteLength / 32 * 3;
            l = Je.create(this, this._ib, o, h, Fe.create(1, 0));
            this._submits[this._submits._length++] = l;
            l.shaderValue.textureHost = e;
            l._renderType = 10016;
            l._preIsSameTextureShader = this._curSubmit._renderType === 10016 && s.ALPHA === r.ALPHA;
            this._curSubmit = l;
            s.ALPHA = a;
            return n
        };
        t.drawTextures = function(e, t, i, n) {
            if (! (e.loaded && e.bitmap && e.source)) {
                this.sprite && C.timer.callLater(this, this._repaintSprite);
                return
            }
            var s = this._clipRect;
            this._clipRect = H.MAXCLIPRECT;
            if (!this._drawTextureM(e, t[0], t[1], e.width, e.height, i, n, null, 1)) {
                alert("drawTextures err");
                return
            }
            this._clipRect = s;
            N.drawCall++;
            if (t.length < 4) return;
            var a = this._curSubmit._vb || this._vb;
            var r = this._curMat.a,
            o = this._curMat.d;
            for (var l = 2,
            h = t.length; l < h; l += 2) {
                ke.copyPreImgVb(a, (t[l] - t[l - 2]) * r, (t[l + 1] - t[l - 1]) * o);
                this._curSubmit._numEle += 6
            }
            this._maxNumEle = Math.max(this._maxNumEle, this._curSubmit._numEle)
        };
        t._drawTextureM = function(e, t, i, n, s, a, r, o, l) {
            if (! (e.loaded && e.source)) {
                if (this.sprite) {
                    C.timer.callLater(this, this._repaintSprite)
                }
                return false
            }
            var h = this._curSubmit._vb || this._vb;
            var u = e.bitmap;
            t += a;
            i += r;
            this._drawCount++;
            var c = u.id + this._shader2D.ALPHA * l + 10016;
            if (c != this._renderKey) {
                this._renderKey = c;
                var f = this._curSubmit.shaderValue;
                var d = this._shader2D;
                var g = d.ALPHA;
                d.ALPHA *= l;
                d.glTexture = u;
                var p = this._vb;
                var _ = null;
                var m = p._byteLength / 32 * 3;
                _ = Je.create(this, this._ib, p, m, Fe.create(1, 0));
                this._submits[this._submits._length++] = _;
                _.shaderValue.textureHost = e;
                _._renderType = 10016;
                _._preIsSameTextureShader = this._curSubmit._renderType === 10016 && d.ALPHA === f.ALPHA;
                this._curSubmit = _;
                h = this._curSubmit._vb || this._vb;
                d.ALPHA = g
            }
            if (ke.fillRectImgVb(h, this._clipRect, t, i, n || e.width, s || e.height, e.uv, o || this._curMat, this._x, this._y, 0, 0)) {
                if (Q.enabled && !this._isMain) this._curSubmit.addTexture(e, (h._byteLength >> 2) - 16);
                this._curSubmit._numEle += 6;
                this._maxNumEle = Math.max(this._maxNumEle, this._curSubmit._numEle);
                return true
            }
            return false
        };
        t._repaintSprite = function() {
            if (this.sprite) this.sprite.repaint()
        };
        t._drawText = function(e, t, i, n, s, a, r, o, l, h) {
            var u = e.bitmap;
            this._drawCount++;
            var c = u.id + this._shader2D.ALPHA + 10016;
            if (c != this._renderKey) {
                this._renderKey = c;
                var f = this._curSubmit.shaderValue;
                var d = this._shader2D;
                d.glTexture = u;
                var g = this._vb;
                var p = null;
                var _ = NaN;
                var m = g._byteLength / 32 * 3;
                if (Q.enabled) {
                    p = Je.create(this, this._ib, g, m, Fe.create(1, 0))
                } else {
                    p = Je.create(this, this._ib, g, m, dt.create())
                }
                p._preIsSameTextureShader = this._curSubmit._renderType === 10016 && d.ALPHA === f.ALPHA;
                this._submits[this._submits._length++] = p;
                p.shaderValue.textureHost = e;
                p._renderType = 10016;
                this._curSubmit = p
            }
            e.active();
            var v = this._curSubmit._vb || this._vb;
            if (ke.fillRectImgVb(v, this._clipRect, t + r, i + o, n || e.width, s || e.height, e.uv, a || this._curMat, this._x, this._y, l, h, true)) {
                if (Q.enabled && !this._isMain) {
                    this._curSubmit.addTexture(e, (v._byteLength >> 2) - 16)
                }
                this._curSubmit._numEle += 6;
                this._maxNumEle = Math.max(this._maxNumEle, this._curSubmit._numEle)
            }
        };
        t.drawTextureWithTransform = function(e, t, i, n, s, a, r, o, l) {
            if (!a) {
                this._drawTextureM(e, t, i, n, s, r, o, null, l);
                return
            }
            var h = this._curMat;
            var u = this._x;
            var c = this._y; (r !== 0 || o !== 0) && (this._x = r * h.a + o * h.c, this._y = o * h.d + r * h.b);
            if (a && h.bTransform) {
                L.mul(a, h, H._tmpMatrix);
                a = H._tmpMatrix;
                a._checkTransform()
            } else {
                this._x += h.tx;
                this._y += h.ty
            }
            this._drawTextureM(e, t, i, n, s, 0, 0, a, l);
            this._x = u;
            this._y = c
        };
        t.fillQuadrangle = function(e, t, i, n, s) {
            var a = this._curSubmit;
            var r = this._vb;
            var o = this._shader2D;
            var l = a.shaderValue;
            this._renderKey = 0;
            if (e.bitmap) {
                var h = e.bitmap;
                if (o.glTexture != h || o.ALPHA !== l.ALPHA) {
                    o.glTexture = h;
                    a = this._curSubmit = ye.createSubmit(this, this._ib, r, r._byteLength / 32 * 3, Fe.create(1, 0));
                    a.shaderValue.glTexture = h;
                    this._submits[this._submits._length++] = a
                }
                ke.fillQuadrangleImgVb(r, t, i, n, e.uv, s || this._curMat, this._x, this._y)
            } else {
                if (!a.shaderValue.fillStyle || !a.shaderValue.fillStyle.equal(e) || o.ALPHA !== l.ALPHA) {
                    o.glTexture = null;
                    a = this._curSubmit = ye.createSubmit(this, this._ib, r, r._byteLength / 32 * 3, Fe.create(2, 0));
                    a.shaderValue.defines.add(2);
                    a.shaderValue.fillStyle = te.create(e);
                    this._submits[this._submits._length++] = a
                }
                ke.fillQuadrangleImgVb(r, t, i, n, z.DEF_UV, s || this._curMat, this._x, this._y)
            }
            a._numEle += 6
        };
        t.drawTexture2 = function(e, t, i, n, s, a, r, o) {
            if (a == 0) return;
            var l = this._curMat;
            this._x = e * l.a + t * l.c;
            this._y = t * l.d + e * l.b;
            if (s) {
                if (l.bTransform || s.bTransform) {
                    L.mul(s, l, H._tmpMatrix);
                    s = H._tmpMatrix
                } else {
                    this._x += s.tx + l.tx;
                    this._y += s.ty + l.ty;
                    s = L.EMPTY
                }
            }
            if (a === 1 && !r) this._drawTextureM(o[0], o[1] - i, o[2] - n, o[3], o[4], 0, 0, s, 1);
            else {
                var h = this._shader2D.ALPHA;
                var u = this._nBlendType;
                this._shader2D.ALPHA = a;
                r && (this._nBlendType = ee.TOINT(r));
                this._drawTextureM(o[0], o[1] - i, o[2] - n, o[3], o[4], 0, 0, s, 1);
                this._shader2D.ALPHA = h;
                this._nBlendType = u
            }
            this._x = this._y = 0
        };
        t.drawCanvas = function(e, t, i, n, s) {
            var a = e.context;
            this._renderKey = 0;
            if (a._targets) {
                this._submits[this._submits._length++] = Xe.create(a, 0, null);
                this._curSubmit = ye.RENDERBASE;
                a._targets.drawTo(this, t, i, n, s)
            } else {
                var r = this._submits[this._submits._length++] = Xe.create(a, this._shader2D.ALPHA, this._shader2D.filters);
                var o = n / e.width;
                var l = s / e.height;
                var h = r._matrix;
                this._curMat.copyTo(h);
                o != 1 && l != 1 && h.scale(o, l);
                var u = h.tx,
                c = h.ty;
                h.tx = h.ty = 0;
                h.transformPoint(T.TEMP.setTo(t, i));
                h.translate(T.TEMP.x + u, T.TEMP.y + c);
                this._curSubmit = ye.RENDERBASE
            }
            if (b.showCanvasMark) {
                this.save();
                this.lineWidth = 4;
                this.strokeStyle = a._targets ? "yellow": "green";
                this.strokeRect(t - 1, i - 1, n + 2, s + 2, 1);
                this.strokeRect(t, i, n, s, 1);
                this.restore()
            }
        };
        t.drawTarget = function(e, t, i, n, s, a, r, o, l, h) {
            h === void 0 && (h = -1);
            var u = this._vb;
            if (ke.fillRectImgVb(u, this._clipRect, t, i, n, s, l || z.DEF_UV, a || this._curMat, this._x, this._y, 0, 0)) {
                this._renderKey = 0;
                var c = this._shader2D;
                c.glTexture = null;
                var f = this._curSubmit.shaderValue;
                var d = this._curSubmit = xe.create(this, this._ib, u, (u._byteLength - 16 * 4) / 32 * 3, o, r);
                if (h == -1) {
                    d.blendType = this._nBlendType
                } else {
                    d.blendType = h
                }
                d.scope = e;
                this._submits[this._submits._length++] = d;
                this._curSubmit._numEle += 6
            }
        };
        t.mixRGBandAlpha = function(e) {
            return this._mixRGBandAlpha(e, this._shader2D.ALPHA)
        };
        t._mixRGBandAlpha = function(e, t) {
            var i = (e & 4278190080) >>> 24;
            if (i != 0) {
                i *= t
            } else {
                i = t * 255
            }
            return e & 16777215 | i << 24
        };
        t.drawTriangles = function(e, t, i, n, s, a, r, o, l, h) {
            if (! (e.loaded && e.source)) {
                if (this.sprite) {
                    C.timer.callLater(this, this._repaintSprite)
                }
                return false
            }
            this._drawCount++;
            var u = e.bitmap;
            var c = this._mixRGBandAlpha(4294967295, o);
            var f = n.length / 2;
            var d = a.length;
            this._renderKey = -1;
            var g = this._curSubmit = Je.create(this, this._triangleMesh.getIBR(), this._triangleMesh.getVBR(), this._triangleMesh.indexNum, Fe.create(1, 0));
            g.shaderValue.textureHost = e;
            g._renderType = 10016;
            this._submits[this._submits._length++] = g;
            if (r) {
                H._tmpMatrix.a = r.a;
                H._tmpMatrix.b = r.b;
                H._tmpMatrix.c = r.c;
                H._tmpMatrix.d = r.d;
                H._tmpMatrix.tx = r.tx + t;
                H._tmpMatrix.ty = r.ty + i;
                L.mul(H._tmpMatrix, this._curMat, H._tmpMatrix)
            } else {
                H._tmpMatrix.a = this._curMat.a;
                H._tmpMatrix.b = this._curMat.b;
                H._tmpMatrix.c = this._curMat.c;
                H._tmpMatrix.d = this._curMat.d;
                H._tmpMatrix.tx = this._curMat.tx + t;
                H._tmpMatrix.ty = this._curMat.ty + i
            }
            this._triangleMesh.addData(n, s, a, H._tmpMatrix, c, this);
            this._curSubmit._numEle += d;
            this._maxNumEle = Math.max(this._maxNumEle, this._curSubmit._numEle);
            return true
        };
        t.transform = function(e, t, i, n, s, a) {
            oe.save(this);
            L.mul(L.TEMP.setTo(e, t, i, n, s, a), this._curMat, this._curMat);
            this._curMat._checkTransform()
        };
        t.setTransformByMatrix = function(e) {
            e.copyTo(this._curMat)
        };
        t.transformByMatrix = function(e) {
            oe.save(this);
            L.mul(e, this._curMat, this._curMat);
            this._curMat._checkTransform()
        };
        t.rotate = function(e) {
            oe.save(this);
            this._curMat.rotateEx(e)
        };
        t.scale = function(e, t) {
            oe.save(this);
            this._curMat.scaleEx(e, t)
        };
        t.clipRect = function(e, t, i, n) {
            if (this._curMat.b != 0 || this._curMat.c != 0) {
                this._renderKey = 0;
                var s = we.create(4);
                this.addRenderObject(s);
                var a = this._vb;
                var r = a._byteLength >> 2;
                if (ke.fillRectImgVb(a, null, e, t, i, n, z.DEF_UV, this._curMat, this._x, this._y, 0, 0)) {
                    var o = this._shader2D;
                    o.glTexture = null;
                    var l = this._curSubmit = ye.createSubmit(this, this._ib, a, (a._byteLength - 16 * 4) / 32 * 3, Fe.create(2, 0));
                    l.shaderValue.ALPHA = 1;
                    this._submits[this._submits._length++] = l;
                    this._curSubmit._numEle += 6
                } else {
                    alert("clipRect calc stencil rect error")
                }
                var h = we.create(5);
                this.addRenderObject(h);
                var u = a.getFloat32Array();
                var c = Math.min(Math.min(Math.min(u[r + 0], u[r + 4]), u[r + 8]), u[r + 12]);
                var f = Math.max(Math.max(Math.max(u[r + 0], u[r + 4]), u[r + 8]), u[r + 12]);
                var d = Math.min(Math.min(Math.min(u[r + 1], u[r + 5]), u[r + 9]), u[r + 13]);
                var g = Math.max(Math.max(Math.max(u[r + 1], u[r + 5]), u[r + 9]), u[r + 13]);
                ae.save(this, h, e, t, i, n, c, d, f - c, g - d);
                this._curSubmit = ye.RENDERBASE
            } else {
                i *= this._curMat.a;
                n *= this._curMat.d;
                var p = T.TEMP;
                this._curMat.transformPoint(p.setTo(e, t));
                if (i < 0) {
                    p.x = p.x + i;
                    i = -i
                }
                if (n < 0) {
                    p.y = p.y + n;
                    n = -n
                }
                this._renderKey = 0;
                var _ = this._curSubmit = be.create(this);
                this._submits[this._submits._length++] = _;
                _.submitIndex = this._submits._length;
                _.submitLength = 9999999;
                se.save(this, _);
                var m = this._clipRect;
                var v = m.x,
                y = m.y;
                var I = p.x + i,
                S = p.y + n;
                v < p.x && (m.x = p.x);
                y < p.y && (m.y = p.y);
                m.width = Math.min(I, v + m.width) - m.x;
                m.height = Math.min(S, y + m.height) - m.y;
                this._shader2D.glTexture = null;
                _.clipRect.copyFrom(m);
                this._curSubmit = ye.RENDERBASE
            }
        };
        t.setIBVB = function(e, t, i, n, s, a, r, o, l, h, u) {
            l === void 0 && (l = 0);
            h === void 0 && (h = 0);
            u === void 0 && (u = 0);
            if (i === null) {
                if (!k.isFlash) {
                    i = this._ib
                } else {
                    var c = n;
                    c._selfIB || (c._selfIB = pt.create(35044));
                    c._selfIB.clear();
                    i = c._selfIB
                }
                ke.expandIBQuadrangle(i, n._byteLength / (4 * n.vertexStride * 4))
            }
            if (!o || !r) throw Error("setIBVB must input:shader shaderValues");
            var f = Ce.create(this, n, i, s, r, o, l, h, u);
            a || (a = L.EMPTY);
            a.translate(e, t);
            L.mul(a, this._curMat, f._mat);
            a.translate( - e, -t);
            this._submits[this._submits._length++] = f;
            this._curSubmit = ye.RENDERBASE;
            this._renderKey = 0
        };
        t.addRenderObject = function(e) {
            this._submits[this._submits._length++] = e
        };
        t.fillTrangles = function(e, t, i, n, s) {
            var a = this._curSubmit;
            var r = this._vb;
            var o = this._shader2D;
            var l = a.shaderValue;
            var h = n.length >> 4;
            var u = e.bitmap;
            this._renderKey = 0;
            if (o.glTexture != u || o.ALPHA !== l.ALPHA) {
                a = this._curSubmit = ye.createSubmit(this, this._ib, r, r._byteLength / 32 * 3, Fe.create(1, 0));
                a.shaderValue.textureHost = e;
                this._submits[this._submits._length++] = a
            }
            ke.fillTranglesVB(r, t, i, n, s || this._curMat, this._x, this._y);
            a._numEle += h * 6
        };
        t.submitElement = function(e, t) {
            var i = this._submits;
            t < 0 && (t = i._length);
            while (e < t) {
                e += i[e].renderSubmit()
            }
        };
        t.finish = function() {
            Pe.mainContext.finish()
        };
        t.flush = function() {
            var e = Math.max(this._vb._byteLength / (4 * 16), this._maxNumEle / 6) + 8;
            if (e > this._ib.bufferLength / (6 * 2)) {
                ke.expandIBQuadrangle(this._ib, e)
            }
            if (!this._isMain && Q.enabled && Q._atlasRestore > this._atlasResourceChange) {
                this._atlasResourceChange = Q._atlasRestore;
                var t = this._submits;
                for (var i = 0,
                n = t._length; i < n; i++) {
                    var s = t[i];
                    if (s.getRenderType() === 10016) s.checkTexture()
                }
            }
            this.submitElement(0, this._submits._length);
            this._path && this._path.reset();
            de.instance && de.getInstance().reset();
            var a = 0;
            for (i = 0, a = this.meshlist.length; i < a; i++) {
                var r = this.meshlist[i];
                r.canReuse ? r.releaseMesh() : r.destroy()
            }
            this.meshlist.length = 0;
            this._curSubmit = ye.RENDERBASE;
            this._renderKey = 0;
            this._triangleMesh = $e.getAMesh();
            this.meshlist.push(this._triangleMesh);
            return this._submits._length
        };
        t.setPathId = function(e) {
            this.mId = e;
            if (this.mId != -1) {
                this.mHaveKey = false;
                var t = j.getInstance();
                if (t.shapeDic[this.mId]) {
                    this.mHaveKey = true
                }
                this.mHaveLineKey = false;
                if (t.shapeLineDic[this.mId]) {
                    this.mHaveLineKey = true
                }
            }
        };
        t.movePath = function(e, t) {
            var i = e,
            n = t;
            e = this._curMat.a * i + this._curMat.c * n + this._curMat.tx;
            t = this._curMat.b * i + this._curMat.d * n + this._curMat.ty;
            this.mX += e;
            this.mY += t
        };
        t.beginPath = function() {
            var e = this._getPath();
            e.tempArray.length = 0;
            e.closePath = false;
            this.mX = 0;
            this.mY = 0
        };
        t.closePath = function() {
            this._path.closePath = true
        };
        t.fill = function(e) {
            e === void 0 && (e = false);
            var t = this._getPath();
            this.drawPoly(0, 0, t.tempArray, this.fillStyle._color.numColor, 0, 0, e)
        };
        t.stroke = function() {
            var e = this._getPath();
            if (this.lineWidth > 0) {
                if (this.mId == -1) {
                    e.drawLine(0, 0, e.tempArray, this.lineWidth, this.strokeStyle._color.numColor)
                } else {
                    if (this.mHaveLineKey) {
                        var t = j.getInstance().shapeLineDic[this.mId];
                        t.rebuild(e.tempArray);
                        e.setGeomtry(t)
                    } else {
                        j.getInstance().addLine(this.mId, e.drawLine(0, 0, e.tempArray, this.lineWidth, this.strokeStyle._color.numColor))
                    }
                }
                e.update();
                var i = [this.mX, this.mY];
                var n = ye.createShape(this, e.ib, e.vb, e.count, e.offset, Fe.create(4, 0));
                n.shaderValue.ALPHA = this._shader2D.ALPHA;
                n.shaderValue.u_pos = i;
                n.shaderValue.u_mmat2 = Be.TEMPMAT4_ARRAY;
                this._submits[this._submits._length++] = n;
                this._renderKey = -1
            }
        };
        t.line = function(e, t, i, n, s, a) {
            var r = this._curSubmit;
            var o = this._vb;
            if (ke.fillLineVb(o, this._clipRect, e, t, i, n, s, a)) {
                this._renderKey = 0;
                var l = this._shader2D;
                var h = r.shaderValue;
                if (l.strokeStyle !== h.strokeStyle || l.ALPHA !== h.ALPHA) {
                    l.glTexture = null;
                    r = this._curSubmit = ye.createSubmit(this, this._ib, o, (o._byteLength - 16 * 4) / 32 * 3, Fe.create(2, 0));
                    r.shaderValue.strokeStyle = l.strokeStyle;
                    r.shaderValue.mainID = 2;
                    r.shaderValue.ALPHA = l.ALPHA;
                    this._submits[this._submits._length++] = r
                }
                r._numEle += 6
            }
        };
        t.moveTo = function(e, t, i) {
            i === void 0 && (i = true);
            var n = this._getPath();
            if (i) {
                var s = e,
                a = t;
                e = this._curMat.a * s + this._curMat.c * a;
                t = this._curMat.b * s + this._curMat.d * a
            }
            n.addPoint(e, t)
        };
        t.lineTo = function(e, t, i) {
            i === void 0 && (i = true);
            var n = this._getPath();
            if (i) {
                var s = e,
                a = t;
                e = this._curMat.a * s + this._curMat.c * a;
                t = this._curMat.b * s + this._curMat.d * a
            }
            n.addPoint(e, t)
        };
        t.drawCurves = function(e, t, i) {
            this.setPathId( - 1);
            this.beginPath();
            this.strokeStyle = i[3];
            this.lineWidth = i[4];
            var n = i[2];
            e += i[0],
            t += i[1];
            this.movePath(e, t);
            this.moveTo(n[0], n[1]);
            var s = 2,
            a = n.length;
            while (s < a) {
                this.quadraticCurveTo(n[s++], n[s++], n[s++], n[s++])
            }
            this.stroke()
        };
        t.arcTo = function(e, t, i, n, s) {
            if (this.mId != -1) {
                if (this.mHaveKey) {
                    return
                }
            }
            var a = 0;
            var r = 0,
            o = 0;
            var l = this._getPath();
            this._curMat.copyTo(H._tmpMatrix);
            H._tmpMatrix.tx = H._tmpMatrix.ty = 0;
            H._tempPoint.setTo(l.getEndPointX(), l.getEndPointY());
            H._tmpMatrix.invertTransformPoint(H._tempPoint);
            var h = H._tempPoint.x - e;
            var u = H._tempPoint.y - t;
            var c = Math.sqrt(h * h + u * u);
            if (c <= 1e-6) {
                return
            }
            var f = h / c;
            var d = u / c;
            var g = i - e;
            var p = n - t;
            var _ = g * g + p * p;
            var m = Math.sqrt(_);
            if (m <= 1e-6) {
                return
            }
            var v = g / m;
            var y = p / m;
            var I = f + v;
            var S = d + y;
            var C = Math.sqrt(I * I + S * S);
            if (C <= 1e-6) {
                return
            }
            var b = I / C;
            var w = S / C;
            var x = Math.acos(b * f + w * d);
            var R = Math.PI / 2 - x;
            c = s / Math.tan(R);
            var L = c * f + e;
            var T = c * d + t;
            var D = Math.sqrt(c * c + s * s);
            var k = e + b * D;
            var G = t + w * D;
            var M = c * v + e;
            var B = c * y + t;
            var A = f * y - d * v;
            var P = 0;
            var U = 0;
            var E = 0;
            if (A >= 0) {
                P = R * 2;
                var N = P / H.SEGNUM;
                U = Math.sin(N);
                E = Math.cos(N)
            } else {
                P = -R * 2;
                N = P / H.SEGNUM;
                U = Math.sin(N);
                E = Math.cos(N)
            }
            r = this._curMat.a * L + this._curMat.c * T;
            o = this._curMat.b * L + this._curMat.d * T;
            if (r != this._path.getEndPointX() || o != this._path.getEndPointY()) {
                l.addPoint(r, o)
            }
            var F = L - k;
            var O = T - G;
            var V = 0;
            var q = 0;
            for (a = 0; a < H.SEGNUM; a++) {
                var z = F * E + O * U;
                var W = -F * U + O * E;
                r = z + k;
                o = W + G;
                e = this._curMat.a * r + this._curMat.c * o;
                t = this._curMat.b * r + this._curMat.d * o;
                r = e;
                o = t;
                if (r != this._path.getEndPointX() || o != this._path.getEndPointY()) {
                    l.addPoint(r, o)
                }
                F = z;
                O = W
            }
        };
        t.arc = function(e, t, i, n, s, a, r) {
            a === void 0 && (a = false);
            r === void 0 && (r = true);
            if (this.mId != -1) {
                var o = j.getInstance().shapeDic[this.mId];
                if (o) {
                    if (this.mHaveKey && !o.needUpdate(this._curMat)) return
                }
                e = 0;
                t = 0
            }
            var l = 0,
            h = 0,
            u = 0,
            c = 0;
            var f = 0,
            d = 0,
            g = 0,
            p = 0,
            _ = 0,
            m = 0;
            var v = 0,
            y = 0,
            I = 0,
            S = 0;
            var C = 0,
            b = 0,
            w = 0;
            h = s - n;
            if (!a) {
                if (Math.abs(h) >= Math.PI * 2) {
                    h = Math.PI * 2
                } else {
                    while (h < 0) {
                        h += Math.PI * 2
                    }
                }
            } else {
                if (Math.abs(h) >= Math.PI * 2) {
                    h = -Math.PI * 2
                } else {
                    while (h > 0) {
                        h -= Math.PI * 2
                    }
                }
            }
            if (i < 101) {
                b = Math.max(10, h * i / 5)
            } else if (i < 201) {
                b = Math.max(10, h * i / 20)
            } else {
                b = Math.max(10, h * i / 40)
            }
            u = h / b / 2;
            c = Math.abs(4 / 3 * (1 - Math.cos(u)) / Math.sin(u));
            if (a) c = -c;
            w = 0;
            var x = this._getPath();
            var R = NaN,
            L = NaN;
            for (C = 0; C <= b; C++) {
                l = n + h * (C / b);
                f = Math.cos(l);
                d = Math.sin(l);
                g = e + f * i;
                p = t + d * i;
                if (r) {
                    R = g,
                    L = p;
                    g = this._curMat.a * R + this._curMat.c * L;
                    p = this._curMat.b * R + this._curMat.d * L
                }
                if (g != this._path.getEndPointX() || p != this._path.getEndPointY()) {
                    x.addPoint(g, p)
                }
            }
            f = Math.cos(s);
            d = Math.sin(s);
            g = e + f * i;
            p = t + d * i;
            if (r) {
                R = g,
                L = p;
                g = this._curMat.a * R + this._curMat.c * L;
                p = this._curMat.b * R + this._curMat.d * L
            }
            if (g != this._path.getEndPointX() || p != this._path.getEndPointY()) {
                x.addPoint(g, p)
            }
        };
        t.quadraticCurveTo = function(e, t, i, n) {
            var s = f.I;
            var a = [];
            var r = i,
            o = n;
            i = this._curMat.a * r + this._curMat.c * o;
            n = this._curMat.b * r + this._curMat.d * o;
            r = e,
            o = t;
            e = this._curMat.a * r + this._curMat.c * o;
            t = this._curMat.b * r + this._curMat.d * o;
            var l = s.getBezierPoints([this._path.getEndPointX(), this._path.getEndPointY(), e, t, i, n], 30, 2);
            for (var h = 0,
            u = l.length / 2; h < u; h++) {
                this.lineTo(l[h * 2], l[h * 2 + 1], false)
            }
            this.lineTo(i, n, false)
        };
        t.rect = function(e, t, i, n) {
            this._other = this._other.make();
            this._other.path || (this._other.path = new ie);
            this._other.path.rect(e, t, i, n)
        };
        t.strokeRect = function(e, t, i, n, s) {
            var a = s * .5;
            this.line(e - a, t, e + i + a, t, s, this._curMat);
            this.line(e + i, t, e + i, t + n, s, this._curMat);
            this.line(e, t, e, t + n, s, this._curMat);
            this.line(e - a, t + n, e + i + a, t + n, s, this._curMat)
        };
        t.clip = function() {};
        t.drawPoly = function(e, t, i, n, s, a, r) {
            r === void 0 && (r = false);
            this._renderKey = 0;
            this._shader2D.glTexture = null;
            var o = this._getPath();
            if (this.mId == -1) {
                o.polygon(e, t, i, n, s ? s: 1, a)
            } else {
                if (this.mHaveKey) {
                    var l = j.getInstance().shapeDic[this.mId];
                    l.setMatrix(this._curMat);
                    l.rebuild(o.tempArray);
                    o.setGeomtry(l)
                } else {
                    var h = o.polygon(e, t, i, n, s ? s: 1, a);
                    j.getInstance().addShape(this.mId, h);
                    h.setMatrix(this._curMat)
                }
            }
            o.update();
            var u = [this.mX, this.mY];
            var c;
            c = ye.createShape(this, o.ib, o.vb, o.count, o.offset, Fe.create(4, 0));
            c.shaderValue.ALPHA = this._shader2D.ALPHA;
            c.shaderValue.u_pos = u;
            c.shaderValue.u_mmat2 = Be.EMPTYMAT4_ARRAY;
            this._submits[this._submits._length++] = c;
            if (s > 0) {
                if (this.mHaveLineKey) {
                    var f = j.getInstance().shapeLineDic[this.mId];
                    f.rebuild(o.tempArray);
                    o.setGeomtry(f)
                } else {
                    j.getInstance().addShape(this.mId, o.drawLine(e, t, i, s, a))
                }
                o.update();
                c = ye.createShape(this, o.ib, o.vb, o.count, o.offset, Fe.create(4, 0));
                c.shaderValue.ALPHA = this._shader2D.ALPHA;
                c.shaderValue.u_mmat2 = Be.EMPTYMAT4_ARRAY;
                this._submits[this._submits._length++] = c
            }
        };
        t.drawParticle = function(e, t, i) {
            i.x = e;
            i.y = t;
            this._submits[this._submits._length++] = i
        };
        t._getPath = function() {
            return this._path || (this._path = new ie)
        };
        l(0, t, "globalCompositeOperation",
        function() {
            return ee.NAMES[this._nBlendType]
        },
        function(e) {
            var t = ee.TOINT[e];
            t == null || this._nBlendType === t || (ne.save(this, 65536, this, true), this._curSubmit = ye.RENDERBASE, this._renderKey = 0, this._nBlendType = t)
        });
        l(0, t, "strokeStyle",
        function() {
            return this._shader2D.strokeStyle
        },
        function(e) {
            this._shader2D.strokeStyle.equal(e) || (ne.save(this, 512, this._shader2D, false), this._shader2D.strokeStyle = te.create(e))
        });
        l(0, t, "globalAlpha",
        function() {
            return this._shader2D.ALPHA
        },
        function(e) {
            e = Math.floor(e * 1e3) / 1e3;
            if (e != this._shader2D.ALPHA) {
                ne.save(this, 1, this._shader2D, true);
                this._shader2D.ALPHA = e
            }
        });
        l(0, t, "asBitmap", null,
        function(e) {
            if (e) {
                this._targets || (this._targets = new he);
                this._targets.repaint = true;
                if (!this._width || !this._height) throw Error("asBitmap no size!");
                this._targets.setSP(this.sprite);
                this._targets.size(this._width, this._height)
            } else this._targets = null
        });
        l(0, t, "fillStyle",
        function() {
            return this._shader2D.fillStyle
        },
        function(e) {
            this._shader2D.fillStyle.equal(e) || (ne.save(this, 2, this._shader2D, false), this._shader2D.fillStyle = te.create(e))
        });
        l(0, t, "textAlign",
        function() {
            return this._other.textAlign
        },
        function(e) {
            this._other.textAlign === e || (this._other = this._other.make(), ne.save(this, 32768, this._other, false), this._other.textAlign = e)
        });
        l(0, t, "lineWidth",
        function() {
            return this._other.lineWidth
        },
        function(e) {
            this._other.lineWidth === e || (this._other = this._other.make(), ne.save(this, 256, this._other, false), this._other.lineWidth = e)
        });
        l(0, t, "textBaseline",
        function() {
            return this._other.textBaseline
        },
        function(e) {
            this._other.textBaseline === e || (this._other = this._other.make(), ne.save(this, 16384, this._other, false), this._other.textBaseline = e)
        });
        l(0, t, "font", null,
        function(e) {
            if (e == this._other.font.toString()) return;
            this._other = this._other.make();
            ne.save(this, 8, this._other, false);
            this._other.font === Te.EMPTY ? this._other.font = new Te(e) : this._other.font.setFont(e)
        });
        H.__init__ = function() {
            i.DEFAULT = new i
        };
        H._tempPoint = new T;
        H._SUBMITVBSIZE = 32e3;
        H._MAXSIZE = 99999999;
        H._RECTVBSIZE = 16;
        H.MAXCLIPRECT = new D(0, 0, 99999999, 99999999);
        H._COUNT = 0;
        H._tmpMatrix = new L;
        H.SEGNUM = 32;
        H._contextcount = 0;
        r(H, ["_fontTemp",
        function() {
            return this._fontTemp = new Te
        },
        "_drawStyleTemp",
        function() {
            return this._drawStyleTemp = new te(null)
        }]);
        H.__init$ = function() {
            i = function() {
                function e() {
                    this.lineWidth = 1;
                    this.path = null;
                    this.textAlign = null;
                    this.textBaseline = null;
                    this.font = Te.EMPTY
                }
                _(e, "");
                var t = e.prototype;
                t.clear = function() {
                    this.lineWidth = 1;
                    this.path && this.path.clear();
                    this.textAlign = this.textBaseline = null;
                    this.font = Te.EMPTY
                };
                t.make = function() {
                    return this === e.DEFAULT ? new e: this
                };
                e.DEFAULT = null;
                return e
            } ()
        };
        return H
    } (h);
    var Fe = function(e) {
        function n(e, t) {
            this.size = [0, 0];
            this.alpha = 1;
            this.ALPHA = 1;
            this.subID = 0;
            this._cacheID = 0;
            n.__super.call(this);
            this.defines = new ze;
            this.position = n._POSITION;
            this.mainID = e;
            this.subID = t;
            this.textureHost = null;
            this.texture = null;
            this.fillStyle = null;
            this.color = null;
            this.strokeStyle = null;
            this.colorAdd = null;
            this.glTexture = null;
            this.u_mmat2 = null;
            this._cacheID = e | t;
            this._inClassCache = n._cache[this._cacheID];
            if (e > 0 && !this._inClassCache) {
                this._inClassCache = n._cache[this._cacheID] = [];
                this._inClassCache._length = 0
            }
            this.clear()
        }
        _(n, "laya.webgl.shader.d2.value.Value2D", e);
        var t = n.prototype;
        t.setValue = function(e) {};
        t.refresh = function() {
            var e = this.size;
            e[0] = Be.width;
            e[1] = Be.height;
            this.alpha = this.ALPHA * Be.worldAlpha;
            this.mmat = Be.worldMatrix4;
            return this
        };
        t._ShaderWithCompile = function() {
            return ut.withCompile2D(0, this.mainID, this.defines.toNameDic(), this.mainID | this.defines._value, gt.create)
        };
        t._withWorldShaderDefines = function() {
            var e = Be.worldShaderDefines;
            var t = ut.sharders[this.mainID | this.defines._value | e.getValue()];
            if (!t) {
                var i = {};
                var n;
                var s;
                n = this.defines.toNameDic();
                for (s in n) i[s] = "";
                n = e.toNameDic();
                for (s in n) i[s] = "";
                t = ut.withCompile2D(0, this.mainID, i, this.mainID | this.defines._value | e.getValue(), gt.create)
            }
            var a = Be.worldFilters;
            if (!a) return t;
            var r = a.length,
            o;
            for (var l = 0; l < r; l++) { (o = a[l]) && o.action.setValue(this)
            }
            return t
        };
        t.upload = function() {
            var e = Be;
            this.alpha = this.ALPHA * e.worldAlpha;
            if (Be.worldMatrix4 !== Be.TEMPMAT4_ARRAY) this.defines.add(128);
            Pe.shaderHighPrecision && this.defines.add(1024);
            var t = e.worldShaderDefines ? this._withWorldShaderDefines() : ut.sharders[this.mainID | this.defines._value] || this._ShaderWithCompile();
            var i;
            this.size[0] = e.width,
            this.size[1] = e.height;
            this.mmat = e.worldMatrix4;
            if (Ke.activeShader !== t) {
                if (t._shaderValueWidth !== e.width || t._shaderValueHeight !== e.height) {
                    t._shaderValueWidth = e.width;
                    t._shaderValueHeight = e.height
                } else {
                    i = t._params2dQuick2 || t._make2dQuick2()
                }
                t.upload(this, i)
            } else {
                if (t._shaderValueWidth !== e.width || t._shaderValueHeight !== e.height) {
                    t._shaderValueWidth = e.width;
                    t._shaderValueHeight = e.height
                } else {
                    i = t._params2dQuick1 || t._make2dQuick1()
                }
                t.upload(this, i)
            }
        };
        t.setFilters = function(e) {
            this.filters = e;
            if (!e) return;
            var t = e.length,
            i;
            for (var n = 0; n < t; n++) {
                i = e[n];
                if (i) {
                    this.defines.add(i.type);
                    i.action.setValue(this)
                }
            }
        };
        t.clear = function() {
            this.defines.setValue(this.subID)
        };
        t.release = function() {
            this._inClassCache[this._inClassCache._length++] = this;
            this.fillStyle = null;
            this.strokeStyle = null;
            this.clear()
        };
        n._initone = function(e, t) {
            n._typeClass[e] = t;
            n._cache[e] = [];
            n._cache[e]._length = 0
        };
        n.__init__ = function() {
            n._POSITION = [2, 5126, false, 4 * De.BYTES_PE, 0];
            n._TEXCOORD = [2, 5126, false, 4 * De.BYTES_PE, 2 * De.BYTES_PE];
            n._initone(2, tt);
            n._initone(4, st);
            n._initone(256, it);
            n._initone(512, et);
            n._initone(1, nt);
            n._initone(1 | 64, dt);
            n._initone(1 | 8, nt)
        };
        n.create = function(e, t) {
            var i = n._cache[e | t];
            if (i._length) return i[--i._length];
            else return new n._typeClass[e | t](t)
        };
        n._POSITION = null;
        n._TEXCOORD = null;
        n._cache = [];
        n._typeClass = [];
        n.TEMPMAT4_ARRAY = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];
        return n
    } ($);
    var Oe = function(e) {
        function m(e, t) {
            m.__super.call(this, e, t)
        }
        _(m, "laya.webgl.utils.RenderSprite3D", e);
        var t = m.prototype;
        t.onCreate = function(e) {
            switch (e) {
            case 8:
                this._fun = this._blend;
                return;
            case 4:
                this._fun = this._transform;
                return
            }
        };
        t._mask = function(e, t, i, n) {
            var s = this._next;
            var a = e.mask;
            var r;
            var o;
            if (a) {
                t.ctx.save();
                var l = t.ctx.globalCompositeOperation;
                var h = new D;
                h.copyFrom(a.getBounds());
                h.width = Math.round(h.width);
                h.height = Math.round(h.height);
                h.x = Math.round(h.x);
                h.y = Math.round(h.y);
                if (h.width > 0 && h.height > 0) {
                    var u = e._style._tf;
                    var c = Se.create();
                    c.addValue("bounds", h);
                    r = Ie.create([c, t], laya.webgl.utils.RenderSprite3D.tmpTarget);
                    t.addRenderObject(r);
                    a.render(t, -h.x, -h.y);
                    r = Ie.create([c], laya.webgl.utils.RenderSprite3D.endTmpTarget);
                    t.addRenderObject(r);
                    t.ctx.save();
                    t.clipRect(i - u.translateX + h.x, n - u.translateY + h.y, h.width, h.height);
                    s._fun.call(s, e, t, i, n);
                    t.ctx.restore();
                    o = we.create(6);
                    l = t.ctx.globalCompositeOperation;
                    o.blendMode = "mask";
                    t.addRenderObject(o);
                    L.TEMP.identity();
                    var f = Fe.create(1, 0);
                    var d = z.INV_UV;
                    var g = h.width;
                    var p = h.height;
                    var _ = 32;
                    if (h.width < _ || h.height < _) {
                        d = m.tempUV;
                        d[0] = 0;
                        d[1] = 0;
                        d[2] = h.width >= 32 ? 1 : h.width / _;
                        d[3] = 0;
                        d[4] = h.width >= 32 ? 1 : h.width / _;
                        d[5] = h.height >= 32 ? 1 : h.height / _;
                        d[6] = 0;
                        d[7] = h.height >= 32 ? 1 : h.height / _;
                        h.width = h.width >= 32 ? h.width: _;
                        h.height = h.height >= 32 ? h.height: _;
                        d[1] *= -1;
                        d[3] *= -1;
                        d[5] *= -1;
                        d[7] *= -1;
                        d[1] += 1;
                        d[3] += 1;
                        d[5] += 1;
                        d[7] += 1
                    }
                    t.ctx.drawTarget(c, i + h.x - u.translateX, n + h.y - u.translateY, g, p, L.TEMP, "tmpTarget", f, d, 6);
                    r = Ie.create([c], laya.webgl.utils.RenderSprite3D.recycleTarget);
                    t.addRenderObject(r);
                    o = we.create(6);
                    o.blendMode = l;
                    t.addRenderObject(o)
                }
                t.ctx.restore()
            } else {
                s._fun.call(s, e, t, i, n)
            }
        };
        t._blend = function(e, t, i, n) {
            var s = e._style;
            var a = this._next;
            if (s.blendMode) {
                t.ctx.save();
                t.ctx.globalCompositeOperation = s.blendMode;
                a._fun.call(a, e, t, i, n);
                t.ctx.restore()
            } else {
                a._fun.call(a, e, t, i, n)
            }
        };
        t._transform = function(e, t, i, n) {
            var s = e.transform,
            a = this._next;
            if (s && a != M.NORENDER) {
                var r = t.ctx;
                var o = e._style;
                s.tx = i;
                s.ty = n;
                var l = r._getTransformMatrix();
                var h = l.clone();
                L.mul(s, l, l);
                l._checkTransform();
                s.tx = s.ty = 0;
                a._fun.call(a, e, t, 0, 0);
                h.copyTo(l);
                h.destroy()
            } else {
                a._fun.call(a, e, t, i, n)
            }
        };
        m.tmpTarget = function(e, t) {
            var i = e.getValue("bounds");
            var n = Qe.create(i.width, i.height);
            n.start();
            n.clear(0, 0, 0, 0);
            e.addValue("tmpTarget", n)
        };
        m.endTmpTarget = function(e) {
            var t = e.getValue("tmpTarget");
            t.end()
        };
        m.recycleTarget = function(e) {
            var t = e.getValue("tmpTarget");
            t.recycle();
            e.recycle()
        };
        r(m, ["tempUV",
        function() {
            return this.tempUV = new Array(8)
        }]);
        return m
    } (M);
    var Ve = function(e) {
        function t() {
            this.data = null;
            t.__super.call(this)
        }
        _(t, "laya.filters.webgl.ColorFilterActionGL", e);
        var i = t.prototype;
        C.imps(i, {
            "laya.filters.IFilterActionGL": true
        });
        i.setValue = function(e) {
            e.colorMat = this.data._mat;
            e.colorAlpha = this.data._alpha
        };
        i.apply3d = function(e, t, i, n, s) {
            var a = e.getValue("bounds");
            var r = Fe.create(1, 0);
            r.setFilters([this.data]);
            var o = L.TEMP;
            o.identity();
            i.ctx.drawTarget(e, 0, 0, a.width, a.height, o, "src", r)
        };
        return t
    } (J);
    var qe = function(e) {
        function a(e, t, i, n, s) {
            this._atlasCanvas = null;
            this._inAtlasTextureKey = null;
            this._inAtlasTextureBitmapValue = null;
            this._inAtlasTextureOriUVValue = null;
            this._InAtlasWebGLImagesKey = null;
            this._InAtlasWebGLImagesOffsetValue = null;
            a.__super.call(this, e, t, s);
            this._inAtlasTextureKey = [];
            this._inAtlasTextureBitmapValue = [];
            this._inAtlasTextureOriUVValue = [];
            this._InAtlasWebGLImagesKey = {};
            this._InAtlasWebGLImagesOffsetValue = [];
            this._atlasCanvas = new at;
            this._atlasCanvas._atlaser = this;
            this._atlasCanvas.width = i;
            this._atlasCanvas.height = n;
            this._atlasCanvas.activeResource();
            this._atlasCanvas.lock = true
        }
        _(a, "laya.webgl.atlas.Atlaser", e);
        var t = a.prototype;
        t.computeUVinAtlasTexture = function(e, t, i, n) {
            var s = e;
            var a = Q.atlasTextureWidth;
            var r = Q.atlasTextureHeight;
            var o = i / a,
            l = n / r,
            h = (i + e.bitmap.width) / a,
            u = (n + e.bitmap.height) / r;
            var c = e.bitmap.width / a,
            f = e.bitmap.height / r;
            e.uv = [o + t[0] * c, l + t[1] * f, h - (1 - t[2]) * c, l + t[3] * f, h - (1 - t[4]) * c, u - (1 - t[5]) * f, o + t[6] * c, u - (1 - t[7]) * f]
        };
        t.findBitmapIsExist = function(e) {
            if (e instanceof laya.webgl.resource.WebGLImage) {
                var t = e;
                var i = t.url;
                var n = this._InAtlasWebGLImagesKey[i ? i: t.id];
                if (n) {
                    return n.offsetInfoID
                }
            }
            return - 1
        };
        t.addToAtlasTexture = function(e, t, i) {
            if (e instanceof laya.webgl.resource.WebGLImage) {
                var n = e;
                var s = n.url;
                this._InAtlasWebGLImagesKey[s ? s: n.id] = {
                    bitmap: e,
                    offsetInfoID: this._InAtlasWebGLImagesOffsetValue.length
                };
                this._InAtlasWebGLImagesOffsetValue.push([t, i])
            }
            this._atlasCanvas.texSubImage2D(t, i, e.atlasImgData || e.atlasSource);
            e.clearAtlasSource()
        };
        t.addToAtlas = function(e, t, i) {
            e._atlasID = this._inAtlasTextureKey.length;
            var n = e.uv.slice();
            var s = e.bitmap;
            this._inAtlasTextureKey.push(e);
            this._inAtlasTextureOriUVValue.push(n);
            this._inAtlasTextureBitmapValue.push(s);
            this.computeUVinAtlasTexture(e, n, t, i);
            e.bitmap = this._atlasCanvas
        };
        t.clear = function() {
            for (var e = 0,
            t = this._inAtlasTextureKey.length; e < t; e++) {
                this._inAtlasTextureKey[e].bitmap = this._inAtlasTextureBitmapValue[e];
                this._inAtlasTextureKey[e].uv = this._inAtlasTextureOriUVValue[e];
                this._inAtlasTextureKey[e]._atlasID = -1;
                this._inAtlasTextureKey[e].bitmap.lock = false;
                this._inAtlasTextureKey[e].bitmap.releaseResource()
            }
            this._inAtlasTextureKey.length = 0;
            this._inAtlasTextureBitmapValue.length = 0;
            this._inAtlasTextureOriUVValue.length = 0;
            this._InAtlasWebGLImagesKey = null;
            this._InAtlasWebGLImagesOffsetValue.length = 0
        };
        t.dispose = function() {
            this.clear();
            this._atlasCanvas.destroy()
        };
        l(0, t, "InAtlasWebGLImagesOffsetValue",
        function() {
            return this._InAtlasWebGLImagesOffsetValue
        });
        l(0, t, "texture",
        function() {
            return this._atlasCanvas
        });
        l(0, t, "inAtlasWebGLImagesKey",
        function() {
            return this._InAtlasWebGLImagesKey
        });
        return a
    } (K);
    var ze = function(e) {
        function i() {
            i.__super.call(this, i.__name2int, i.__int2name, i.__int2nameMap)
        }
        _(i, "laya.webgl.shader.d2.ShaderDefines2D", e);
        i.__init__ = function() {
            i.reg("TEXTURE2D", 1);
            i.reg("COLOR2D", 2);
            i.reg("PRIMITIVE", 4);
            i.reg("GLOW_FILTER", 8);
            i.reg("BLUR_FILTER", 16);
            i.reg("COLOR_FILTER", 32);
            i.reg("COLOR_ADD", 64);
            i.reg("WORLDMAT", 128);
            i.reg("FILLTEXTURE", 256);
            i.reg("FSHIGHPRECISION", 1024)
        };
        i.reg = function(e, t) {
            ce._reg(e, t, i.__name2int, i.__int2name)
        };
        i.toText = function(e, t, i) {
            return ce._toText(e, t, i)
        };
        i.toInt = function(e) {
            return ce._toInt(e, i.__name2int)
        };
        i.TEXTURE2D = 1;
        i.COLOR2D = 2;
        i.PRIMITIVE = 4;
        i.FILTERGLOW = 8;
        i.FILTERBLUR = 16;
        i.FILTERCOLOR = 32;
        i.COLORADD = 64;
        i.WORLDMAT = 128;
        i.FILLTEXTURE = 256;
        i.SKINMESH = 512;
        i.SHADERDEFINE_FSHIGHPRECISION = 1024;
        i.__name2int = {};
        i.__int2name = [];
        i.__int2nameMap = [];
        return i
    } (ce);
    var We = function(e) {
        function o(e, t, i, n, s, a, r) {
            o.__super.call(this, e, t, i, n, 40, s, a, r)
        }
        _(o, "laya.webgl.shapes.Ellipse", e);
        return o
    } (ge);
    var He = function(e) {
        function a(e, t, i, n, s) {
            this._points = [];
            this.rebuild(i);
            a.__super.call(this, e, t, 0, 0, 0, s, n, s, 0)
        }
        _(a, "laya.webgl.shapes.Line", e);
        var t = a.prototype;
        t.rebuild = function(e) {
            var t = e.length;
            var i = this._points.length;
            if (t != i) {
                this.mUint16Array = new Uint16Array((t / 2 - 1) * 6);
                this.mFloat32Array = new Float32Array(t * 5)
            }
            this._points.length = 0;
            var n = NaN;
            var s = NaN;
            var a = -1;
            var r = -1;
            var o = e.length / 2;
            for (var l = 0; l < o; l++) {
                n = e[l * 2];
                s = e[l * 2 + 1];
                if (Math.abs(a - n) > .01 || Math.abs(r - s) > .01) {
                    this._points.push(n, s)
                }
                a = n;
                r = s
            }
        };
        t.getData = function(e, t, i) {
            var n = [];
            var s = [];
            this.borderWidth > 0 && this.createLine2(this._points, n, this.borderWidth, i, s, this._points.length / 2);
            this.mUint16Array.set(n, 0);
            this.mFloat32Array.set(s, 0);
            e.append(this.mUint16Array);
            t.append(this.mFloat32Array)
        };
        return a
    } (ge);
    var Ye = function(e) {
        function c(e, t, i, n, s) {
            this._points = [];
            var a = NaN;
            var r = NaN;
            var o = -1;
            var l = -1;
            var h = i.length / 2 - 1;
            for (var u = 0; u < h; u++) {
                a = i[u * 2];
                r = i[u * 2 + 1];
                if (Math.abs(o - a) > .01 || Math.abs(l - r) > .01) {
                    this._points.push(a, r)
                }
                o = a;
                l = r
            }
            a = i[h * 2];
            r = i[h * 2 + 1];
            o = this._points[0];
            l = this._points[1];
            if (Math.abs(o - a) > .01 || Math.abs(l - r) > .01) {
                this._points.push(a, r)
            }
            c.__super.call(this, e, t, 0, 0, this._points.length / 2, 0, n, s)
        }
        _(c, "laya.webgl.shapes.LoopLine", e);
        var t = c.prototype;
        t.getData = function(e, t, i) {
            if (this.borderWidth > 0) {
                var n = this.color;
                var s = (n >> 16 & 255) / 255,
                a = (n >> 8 & 255) / 255,
                r = (n & 255) / 255;
                var o = [];
                var l = -1,
                h = -1;
                var u = 0,
                c = 0;
                var f = [];
                var d = Math.floor(this._points.length / 2);
                for (var g = 0; g < d; g++) {
                    u = this._points[g * 2];
                    c = this._points[g * 2 + 1];
                    o.push(this.x + u, this.y + c, s, a, r)
                }
                this.createLoopLine(o, f, this.borderWidth, i + o.length / 5);
                e.append(new Uint16Array(f));
                t.append(new Float32Array(o))
            }
        };
        t.createLoopLine = function(e, t, i, n, s, a) {
            var r = e.length / 5;
            var o = e.concat();
            var l = s ? s: e;
            var h = this.borderColor;
            var u = (h >> 16 & 255) / 255,
            c = (h >> 8 & 255) / 255,
            f = (h & 255) / 255;
            var d = [o[0], o[1]];
            var g = [o[o.length - 5], o[o.length - 4]];
            var p = g[0] + (d[0] - g[0]) * .5;
            var _ = g[1] + (d[1] - g[1]) * .5;
            o.unshift(p, _, 0, 0, 0);
            o.push(p, _, 0, 0, 0);
            var m = o.length / 5;
            var v = n,
            y = i / 2;
            var I, S, C, b, w, x, R, L;
            var T, D, k, G, M, B;
            var A, P, U, E, N, F;
            var O, V, q;
            C = o[0];
            b = o[1];
            w = o[5];
            x = o[6];
            T = -(b - x);
            D = C - w;
            q = Math.sqrt(T * T + D * D);
            T = T / q * y;
            D = D / q * y;
            l.push(C - T, b - D, u, c, f, C + T, b + D, u, c, f);
            for (var z = 1; z < m - 1; z++) {
                C = o[(z - 1) * 5];
                b = o[(z - 1) * 5 + 1];
                w = o[z * 5];
                x = o[z * 5 + 1];
                R = o[(z + 1) * 5];
                L = o[(z + 1) * 5 + 1];
                T = -(b - x);
                D = C - w;
                q = Math.sqrt(T * T + D * D);
                T = T / q * y;
                D = D / q * y;
                k = -(x - L);
                G = w - R;
                q = Math.sqrt(k * k + G * G);
                k = k / q * y;
                G = G / q * y;
                A = -D + b - ( - D + x);
                P = -T + w - ( - T + C);
                U = ( - T + C) * ( - D + x) - ( - T + w) * ( - D + b);
                E = -G + L - ( - G + x);
                N = -k + w - ( - k + R);
                F = ( - k + R) * ( - G + x) - ( - k + w) * ( - G + L);
                O = A * N - E * P;
                if (Math.abs(O) < .1) {
                    O += 10.1;
                    l.push(w - T, x - D, u, c, f, w + T, x + D, u, c, f);
                    continue
                }
                I = (P * F - N * U) / O;
                S = (E * U - A * F) / O;
                V = (I - w) * (I - w) + (S - x) + (S - x);
                l.push(I, S, u, c, f, w - (I - w), x - (S - x), u, c, f)
            }
            if (a) {
                t = a
            }
            var W = this.edges + 1;
            for (z = 1; z < W; z++) {
                t.push(v + (z - 1) * 2, v + (z - 1) * 2 + 1, v + z * 2 + 1, v + z * 2 + 1, v + z * 2, v + (z - 1) * 2)
            }
            t.push(v + (z - 1) * 2, v + (z - 1) * 2 + 1, v + 1, v + 1, v, v + (z - 1) * 2);
            return l
        };
        return c
    } (ge);
    var je = function(e) {
        function r(e, t, i, n, s, a) {
            this._points = null;
            this._start = -1;
            this._repaint = false;
            this.earcutTriangles = null;
            this._mat = L.create();
            this._points = i.slice(0, i.length);
            r.__super.call(this, e, t, 0, 0, this._points.length / 2, n, s, a)
        }
        _(r, "laya.webgl.shapes.Polygon", e);
        var t = r.prototype;
        t.rebuild = function(e) {
            if (!this._repaint) {
                this._points.length = 0;
                this._points = this._points.concat(e)
            }
        };
        t.setMatrix = function(e) {
            e.copyTo(this._mat)
        };
        t.needUpdate = function(e) {
            this._repaint = this._mat.a == e.a && this._mat.b == e.b && this._mat.c == e.c && this._mat.d == e.d && this._mat.tx == e.tx && this._mat.ty == e.ty;
            return ! this._repaint
        };
        t.getData = function(e, t, i) {
            var n, s = 0;
            var a = this._points;
            var r = 0;
            if (this.mUint16Array && this.mFloat32Array && this._repaint) {
                if (this._start != i) {
                    this._start = i;
                    n = [];
                    r = this.earcutTriangles.length;
                    for (s = 0; s < r; s++) {
                        n.push(this.earcutTriangles[s] + i)
                    }
                    this.mUint16Array = new Uint16Array(n)
                }
            } else {
                this._start = i;
                n = [];
                var o = [];
                var l = [];
                var h = this.color;
                var u = (h >> 16 & 255) / 255,
                c = (h >> 8 & 255) / 255,
                f = (h & 255) / 255;
                r = Math.floor(a.length / 2);
                for (s = 0; s < r; s++) {
                    o.push(this.x + a[s * 2], this.y + a[s * 2 + 1], u, c, f);
                    l.push(this.x + a[s * 2], this.y + a[s * 2 + 1])
                }
                this.earcutTriangles = pe.earcut(l, null, 2);
                r = this.earcutTriangles.length;
                for (s = 0; s < r; s++) {
                    n.push(this.earcutTriangles[s] + i)
                }
                this.mUint16Array = new Uint16Array(n);
                this.mFloat32Array = new Float32Array(o)
            }
            e.append(this.mUint16Array);
            t.append(this.mFloat32Array)
        };
        return r
    } (ge);
    var Xe = function(e) {
        function a() {
            this._matrix = new L;
            this._matrix4 = De.defaultMatrix4.concat();
            a.__super.call(this, 1e4);
            this.shaderValue = new Fe(0, 0)
        }
        _(a, "laya.webgl.submit.SubmitCanvas", e);
        var t = a.prototype;
        t.renderSubmit = function() {
            if (this._ctx_src._targets) {
                this._ctx_src._targets.flush(this._ctx_src);
                return 1
            }
            var e = Be.worldAlpha;
            var t = Be.worldMatrix4;
            var i = Be.worldMatrix;
            var n = Be.worldFilters;
            var s = Be.worldShaderDefines;
            var a = this.shaderValue;
            var r = this._matrix;
            var o = this._matrix4;
            var l = L.TEMP;
            L.mul(r, i, l);
            o[0] = l.a;
            o[1] = l.b;
            o[4] = l.c;
            o[5] = l.d;
            o[12] = l.tx;
            o[13] = l.ty;
            Be.worldMatrix = l.clone();
            Be.worldMatrix4 = o;
            Be.worldAlpha = Be.worldAlpha * a.alpha;
            if (a.filters && a.filters.length) {
                Be.worldFilters = a.filters;
                Be.worldShaderDefines = a.defines
            }
            this._ctx_src.flush();
            Be.worldAlpha = e;
            Be.worldMatrix4 = t;
            Be.worldMatrix.destroy();
            Be.worldMatrix = i;
            Be.worldFilters = n;
            Be.worldShaderDefines = s;
            return 1
        };
        t.releaseRender = function() {
            var e = a._cache;
            this._ctx_src = null;
            e[e._length++] = this
        };
        t.getRenderType = function() {
            return 10003
        };
        a.create = function(e, t, i) {
            var n = !a._cache._length ? new a: a._cache[--a._cache._length];
            n._ctx_src = e;
            var s = n.shaderValue;
            s.alpha = t;
            s.defines.setValue(0);
            i && i.length && s.setFilters(i);
            return n
        };
        a._cache = (a._cache = [], a._cache._length = 0, a._cache);
        return a
    } (ye);
    var Je = function(e) {
        function h(e) {
            this._preIsSameTextureShader = false;
            this._isSameTexture = true;
            this._texs = new Array;
            this._texsID = new Array;
            this._vbPos = new Array;
            e === void 0 && (e = 1e4);
            h.__super.call(this, e)
        }
        _(h, "laya.webgl.submit.SubmitTexture", e);
        var t = h.prototype;
        t.releaseRender = function() {
            var e = h._cache;
            e[e._length++] = this;
            this.shaderValue.release();
            this._preIsSameTextureShader = false;
            this._vb = null;
            this._texs.length = 0;
            this._vbPos.length = 0;
            this._isSameTexture = true
        };
        t.addTexture = function(e, t) {
            this._texsID[this._texs.length] = e._uvID;
            this._texs.push(e);
            this._vbPos.push(t)
        };
        t.checkTexture = function() {
            if (this._texs.length < 1) {
                this._isSameTexture = true;
                return
            }
            var e = this.shaderValue.textureHost;
            var t = e.bitmap;
            if (t === null) return;
            var i = this._vb.getFloat32Array();
            for (var n = 0,
            s = this._texs.length; n < s; n++) {
                var a = this._texs[n];
                a.active();
                var r = a.uv;
                if (this._texsID[n] !== a._uvID) {
                    this._texsID[n] = a._uvID;
                    var o = this._vbPos[n];
                    i[o + 2] = r[0];
                    i[o + 3] = r[1];
                    i[o + 6] = r[2];
                    i[o + 7] = r[3];
                    i[o + 10] = r[4];
                    i[o + 11] = r[5];
                    i[o + 14] = r[6];
                    i[o + 15] = r[7];
                    this._vb.setNeedUpload()
                }
                if (a.bitmap !== t) {
                    this._isSameTexture = false
                }
            }
        };
        t.renderSubmit = function() {
            if (this._numEle === 0) {
                h._shaderSet = false;
                return 1
            }
            var e = this.shaderValue.textureHost;
            if (e) {
                var t = e.source;
                if (!e.bitmap || !t) {
                    h._shaderSet = false;
                    return 1
                }
                this.shaderValue.texture = t
            }
            this._vb.bind_upload(this._ib);
            var i = Pe.mainContext;
            if (ee.activeBlendFunction !== this._blendFn) {
                i.enable(3042);
                this._blendFn(i);
                ee.activeBlendFunction = this._blendFn
            }
            N.drawCall++;
            N.trianglesFaces += this._numEle / 3;
            if (this._preIsSameTextureShader && Ke.activeShader && h._shaderSet) Ke.activeShader.uploadTexture2D(this.shaderValue.texture);
            else this.shaderValue.upload();
            h._shaderSet = true;
            if (this._texs.length > 1 && !this._isSameTexture) {
                var n = e.bitmap;
                var s = 0;
                var a = Ke.activeShader;
                for (var r = 0,
                o = this._texs.length; r < o; r++) {
                    var l = this._texs[r];
                    if (l.bitmap !== n || r + 1 === o) {
                        a.uploadTexture2D(l.source);
                        i.drawElements(4, (r - s + 1) * 6, 5123, this._startIdx + s * 6 * De.BYTES_PIDX);
                        n = l.bitmap;
                        s = r
                    }
                }
            } else {
                i.drawElements(4, this._numEle, 5123, this._startIdx)
            }
            return 1
        };
        h.create = function(e, t, i, n, s) {
            var a = h._cache._length ? h._cache[--h._cache._length] : new h;
            if (i == null) {
                i = a._selfVb || (a._selfVb = _t.create( - 1));
                i.clear();
                n = 0
            }
            a._ib = t;
            a._vb = i;
            a._startIdx = n * De.BYTES_PIDX;
            a._numEle = 0;
            var r = e._nBlendType;
            a._blendFn = e._targets ? ee.targetFns[r] : ee.fns[r];
            a.shaderValue = s;
            a.shaderValue.setValue(e._shader2D);
            var o = e._shader2D.filters;
            o && a.shaderValue.setFilters(o);
            return a
        };
        h._cache = (h._cache = [], h._cache._length = 0, h._cache);
        h._shaderSet = true;
        return h
    } (ye);
    var $e = function(e) {
        function y() {
            y.__super.call(this, laya.webgl.utils.MeshTexture.const_stride, 0, 0);
            this.canReuse = true;
            this.setAttributes(laya.webgl.utils.MeshTexture._fixattriInfo)
        }
        _(y, "laya.webgl.utils.MeshTexture", e);
        var t = y.prototype;
        t.addData = function(e, t, i, n, s, a) {
            var r = e.length / 2;
            var o = this._vb.needSize(r * y.const_stride);
            var l = o >> 2;
            var h = this._vb.getFloat32Array();
            var u = 0;
            for (var c = 0; c < r; c++) {
                var f = e[u],
                d = e[u + 1];
                var g = f * n.a + d * n.c + n.tx;
                var p = f * n.b + d * n.d + n.ty;
                h[l++] = g;
                h[l++] = p;
                h[l++] = t[u];
                h[l++] = t[u + 1];
                u += 2
            }
            this._vb.setNeedUpload();
            var _ = this.vertNum;
            if (_ > 0) {
                var m = i.length;
                if (m > y.tmpIdx.length) y.tmpIdx = new Uint16Array(m);
                for (var v = 0; v < m; v++) {
                    y.tmpIdx[v] = i[v] + _
                }
                this._ib.appendU16Array(y.tmpIdx, i.length)
            } else {
                this._ib.append(i)
            }
            this._ib.setNeedUpload();
            this.vertNum += r;
            this.indexNum += i.length
        };
        t.releaseMesh = function() {
            this._vb._byteLength = 0;
            this._ib._byteLength = 0;
            this.vertNum = 0;
            this.indexNum = 0;
            laya.webgl.utils.MeshTexture._POOL.push(this)
        };
        t.destroy = function() {
            this._ib.destroy();
            this._vb.destroy()
        };
        y.getAMesh = function() {
            if (laya.webgl.utils.MeshTexture._POOL.length) {
                return laya.webgl.utils.MeshTexture._POOL.pop()
            }
            return new y
        };
        y.const_stride = 16;
        y._POOL = [];
        r(y, ["_fixattriInfo",
        function() {
            return this._fixattriInfo = [5126, 2, 0, 5126, 2, 8]
        },
        "tmpIdx",
        function() {
            return this.tmpIdx = new Uint16Array(4)
        }]);
        return y
    } (Me);
    var Ke = function(e) {
        function t() {
            t.__super.call(this);
            this.lock = true
        }
        _(t, "laya.webgl.shader.BaseShader", e);
        t.activeShader = null;
        t.bindShader = null;
        return t
    } (B);
    var Qe = function(t) {
        function u(e, t, i, n, s, a, r, o, l) {
            this._type = 0;
            this._svWidth = NaN;
            this._svHeight = NaN;
            this._preRenderTarget = null;
            this._alreadyResolved = false;
            this._looked = false;
            this._surfaceFormat = 0;
            this._surfaceType = 0;
            this._depthStencilFormat = 0;
            this._mipMap = false;
            this._repeat = false;
            this._minFifter = 0;
            this._magFifter = 0;
            this._destroy = false;
            i === void 0 && (i = 6408);
            n === void 0 && (n = 5121);
            s === void 0 && (s = 34041);
            a === void 0 && (a = false);
            r === void 0 && (r = false);
            o === void 0 && (o = -1);
            l === void 0 && (l = -1);
            this._type = 1;
            this._w = e;
            this._h = t;
            this._surfaceFormat = i;
            this._surfaceType = n;
            this._depthStencilFormat = s;
            if (k.isConchWebGL && this._depthStencilFormat === 34041) {
                this._depthStencilFormat = 33189
            }
            this._mipMap = a;
            this._repeat = r;
            this._minFifter = o;
            this._magFifter = l;
            this._createWebGLRenderTarget();
            this.bitmap.lock = true;
            u.__super.call(this, this.bitmap, z.INV_UV)
        }
        _(u, "laya.webgl.resource.RenderTarget2D", t);
        var e = u.prototype;
        C.imps(e, {
            "laya.resource.IDispose": true
        });
        e.getType = function() {
            return this._type
        };
        e.getTexture = function() {
            return this
        };
        e.size = function(e, t) {
            if (this._w == e && this._h == t) return;
            this._w = e;
            this._h = t;
            this.release();
            if (this._w != 0 && this._h != 0) this._createWebGLRenderTarget()
        };
        e.release = function() {
            this.destroy()
        };
        e.recycle = function() {
            u.POOL.push(this)
        };
        e.start = function() {
            var e = Pe.mainContext;
            this._preRenderTarget = Be.curRenderTarget;
            Be.curRenderTarget = this;
            e.bindFramebuffer(36160, this.bitmap.frameBuffer);
            this._alreadyResolved = false;
            if (this._type == 1) {
                e.viewport(0, 0, this._w, this._h);
                this._svWidth = Be.width;
                this._svHeight = Be.height;
                Be.width = this._w;
                Be.height = this._h;
                Ke.activeShader = null
            }
            return this
        };
        e.clear = function(e, t, i, n) {
            e === void 0 && (e = 0);
            t === void 0 && (t = 0);
            i === void 0 && (i = 0);
            n === void 0 && (n = 1);
            var s = Pe.mainContext;
            s.clearColor(e, t, i, n);
            var a = 16384;
            switch (this._depthStencilFormat) {
            case 33189:
                a |= 256;
                break;
            case 36168:
                a |= 1024;
                break;
            case 34041:
                a |= 256;
                a |= 1024;
                break
            }
            s.clear(a)
        };
        e.end = function() {
            var e = Pe.mainContext;
            e.bindFramebuffer(36160, this._preRenderTarget ? this._preRenderTarget.bitmap.frameBuffer: null);
            this._alreadyResolved = true;
            Be.curRenderTarget = this._preRenderTarget;
            if (this._type == 1) {
                e.viewport(0, 0, this._svWidth, this._svHeight);
                Be.width = this._svWidth;
                Be.height = this._svHeight;
                Ke.activeShader = null
            } else e.viewport(0, 0, C.stage.width, C.stage.height)
        };
        e.getData = function(e, t, i, n) {
            var s = Pe.mainContext;
            s.bindFramebuffer(36160, this.bitmap.frameBuffer);
            var a = s.checkFramebufferStatus(36160) === 36053;
            if (!a) {
                s.bindFramebuffer(36160, null);
                return null
            }
            var r = new Uint8Array(this._w * this._h * 4);
            s.readPixels(e, t, i, n, this._surfaceFormat, this._surfaceType, r);
            s.bindFramebuffer(36160, null);
            return r
        };
        e.destroy = function(e) {
            e === void 0 && (e = false);
            if (!this._destroy) {
                this._loaded = false;
                this.bitmap.offAll();
                this.bitmap.disposeResource();
                this.bitmap.dispose();
                this.offAll();
                this.bitmap = null;
                this._alreadyResolved = false;
                this._destroy = true;
                t.prototype.destroy.call(this)
            }
        };
        e.dispose = function() {};
        e._createWebGLRenderTarget = function() {
            this.bitmap = new lt(this.width, this.height, this._surfaceFormat, this._surfaceType, this._depthStencilFormat, this._mipMap, this._repeat, this._minFifter, this._magFifter);
            this.bitmap.activeResource();
            this._alreadyResolved = true;
            this._destroy = false;
            this._loaded = true;
            this.bitmap.on("recovered", this,
            function(e) {
                this.event("recovered")
            })
        };
        l(0, e, "surfaceFormat",
        function() {
            return this._surfaceFormat
        });
        l(0, e, "magFifter",
        function() {
            return this._magFifter
        });
        l(0, e, "surfaceType",
        function() {
            return this._surfaceType
        });
        l(0, e, "mipMap",
        function() {
            return this._mipMap
        });
        l(0, e, "depthStencilFormat",
        function() {
            return this._depthStencilFormat
        });
        l(0, e, "minFifter",
        function() {
            return this._minFifter
        });
        l(0, e, "source",
        function() {
            if (this._alreadyResolved) return C.superGet(z, this, "source");
            return null
        });
        u.create = function(e, t, i, n, s, a, r, o, l) {
            i === void 0 && (i = 6408);
            n === void 0 && (n = 5121);
            s === void 0 && (s = 34041);
            a === void 0 && (a = false);
            r === void 0 && (r = false);
            o === void 0 && (o = -1);
            l === void 0 && (l = -1);
            var h = u.POOL.pop();
            h || (h = new u(e, t));
            if (!h.bitmap || h._w != e || h._h != t || h._surfaceFormat != i || h._surfaceType != n || h._depthStencilFormat != s || h._mipMap != a || h._repeat != r || h._minFifter != o || h._magFifter != l) {
                h._w = e;
                h._h = t;
                h._surfaceFormat = i;
                h._surfaceType = n;
                h._depthStencilFormat = s;
                if (k.isConchWebGL && h._depthStencilFormat === 34041) {
                    h._depthStencilFormat = 33189
                }
                h._mipMap = a;
                h._repeat = r;
                h._minFifter = o;
                h._magFifter = l;
                h.release();
                h._createWebGLRenderTarget()
            }
            return h
        };
        u.TYPE2D = 1;
        u.TYPE3D = 2;
        u.POOL = [];
        return u
    } (z);
    var Ze = function(e) {
        function t() {
            this._glBuffer = null;
            this._buffer = null;
            this._bufferType = 0;
            this._bufferUsage = 0;
            this._byteLength = 0;
            t.__super.call(this);
            t._gl = Pe.mainContext
        }
        _(t, "laya.webgl.utils.Buffer", e);
        var i = t.prototype;
        i._bind = function() {
            this.activeResource();
            if (t._bindActive[this._bufferType] !== this._glBuffer) {
                this._bufferType === 34962 && (t._bindVertexBuffer = this._glBuffer);
                t._gl.bindBuffer(this._bufferType, t._bindActive[this._bufferType] = this._glBuffer);
                Ke.activeShader = null
            }
        };
        i.recreateResource = function() {
            this._glBuffer || (this._glBuffer = t._gl.createBuffer());
            this.completeCreate()
        };
        i.disposeResource = function() {
            if (this._glBuffer) {
                Pe.mainContext.deleteBuffer(this._glBuffer);
                this._glBuffer = null
            }
            this.memorySize = 0
        };
        l(0, i, "bufferUsage",
        function() {
            return this._bufferUsage
        });
        t._gl = null;
        t._bindActive = {};
        t._bindVertexBuffer = null;
        t._enableAtributes = [];
        return t
    } (B);
    var et = function(e) {
        function i(e) {
            this.texcoord = null;
            this.offsetX = 300;
            this.offsetY = 0;
            i.__super.call(this, 512, 0);
            var t = 8 * De.BYTES_PE;
            this.position = [2, 5126, false, t, 0];
            this.texcoord = [2, 5126, false, t, 2 * De.BYTES_PE];
            this.color = [4, 5126, false, t, 4 * De.BYTES_PE]
        }
        _(i, "laya.webgl.shader.d2.skinAnishader.SkinSV", e);
        return i
    } (Fe);
    var tt = function(e) {
        function t(e) {
            t.__super.call(this, 2, 0);
            this.color = []
        }
        _(t, "laya.webgl.shader.d2.value.Color2dSV", e);
        var i = t.prototype;
        i.setValue = function(e) {
            e.fillStyle && (this.color = e.fillStyle._color._color);
            e.strokeStyle && (this.color = e.strokeStyle._color._color)
        };
        return t
    } (Fe);
    var it = function(e) {
        function t(e) {
            this.u_colorMatrix = null;
            this.strength = 0;
            this.colorMat = null;
            this.colorAlpha = null;
            this.u_TexRange = [0, 1, 0, 1];
            this.u_offset = [0, 0];
            this.texcoord = Fe._TEXCOORD;
            t.__super.call(this, 256, 0)
        }
        _(t, "laya.webgl.shader.d2.value.FillTextureSV", e);
        var i = t.prototype;
        i.setValue = function(e) {
            this.ALPHA = e.ALPHA;
            e.filters && this.setFilters(e.filters)
        };
        i.clear = function() {
            this.texture = null;
            this.shader = null;
            this.defines.setValue(0)
        };
        return t
    } (Fe);
    var nt = function(e) {
        function t(e) {
            this.u_colorMatrix = null;
            this.strength = 0;
            this.blurInfo = null;
            this.colorMat = null;
            this.colorAlpha = null;
            this.texcoord = Fe._TEXCOORD;
            e === void 0 && (e = 0);
            t.__super.call(this, 1, e)
        }
        _(t, "laya.webgl.shader.d2.value.TextureSV", e);
        var i = t.prototype;
        i.setValue = function(e) {
            this.ALPHA = e.ALPHA;
            e.filters && this.setFilters(e.filters)
        };
        i.clear = function() {
            this.texture = null;
            this.shader = null;
            this.defines.setValue(0)
        };
        return t
    } (Fe);
    var st = function(e) {
        function t(e) {
            this.a_color = null;
            this.u_pos = [0, 0];
            t.__super.call(this, 4, 0);
            this.position = [2, 5126, false, 5 * De.BYTES_PE, 0];
            this.a_color = [3, 5126, false, 5 * De.BYTES_PE, 2 * De.BYTES_PE]
        }
        _(t, "laya.webgl.shader.d2.value.PrimitiveSV", e);
        return t
    } (Fe);
    var at = function(e) {
        function t() {
            this._atlaser = null;
            this._flashCacheImage = null;
            this._flashCacheImageNeedFlush = false;
            t.__super.call(this)
        }
        _(t, "laya.webgl.atlas.AtlasWebGLCanvas", e);
        var i = t.prototype;
        i.recreateResource = function() {
            var e = Pe.mainContext;
            var t = this._source = e.createTexture();
            var i = Ue.curBindTexTarget;
            var n = Ue.curBindTexValue;
            Ue.bindTexture(e, 3553, t);
            e.texImage2D(3553, 0, 6408, this._w, this._h, 0, 6408, 5121, null);
            e.texParameteri(3553, 10241, 9729);
            e.texParameteri(3553, 10240, 9729);
            e.texParameteri(3553, 10242, 33071);
            e.texParameteri(3553, 10243, 33071);
            i && n && Ue.bindTexture(e, i, n);
            this.memorySize = this._w * this._h * 4;
            this.completeCreate()
        };
        i.disposeResource = function() {
            if (this._source) {
                Pe.mainContext.deleteTexture(this._source);
                this._source = null;
                this.memorySize = 0
            }
        };
        i.texSubImage2D = function(e, t, i) {
            if (!k.isFlash) {
                var n = Pe.mainContext;
                var s = Ue.curBindTexTarget;
                var a = Ue.curBindTexValue;
                Ue.bindTexture(n, 3553, this._source);
                if (k.isConchWebGL) {
                    if (i !== ConchTextCanvas) {
                        e - 1 >= 0 && n.texSubImage2DEx(true, 3553, 0, e - 1, t, 6408, 5121, i);
                        e + 1 <= this._w && n.texSubImage2DEx(true, 3553, 0, e + 1, t, 6408, 5121, i);
                        t - 1 >= 0 && n.texSubImage2DEx(true, 3553, 0, e, t - 1, 6408, 5121, i);
                        t + 1 <= this._h && n.texSubImage2DEx(true, 3553, 0, e, t + 1, 6408, 5121, i)
                    }
                    n.texSubImage2DEx(true, 3553, 0, e, t, 6408, 5121, i)
                } else {
                    n.pixelStorei(37441, true);
                    e - 1 >= 0 && n.texSubImage2D(3553, 0, e - 1, t, 6408, 5121, i);
                    e + 1 <= this._w && n.texSubImage2D(3553, 0, e + 1, t, 6408, 5121, i);
                    t - 1 >= 0 && n.texSubImage2D(3553, 0, e, t - 1, 6408, 5121, i);
                    t + 1 <= this._h && n.texSubImage2D(3553, 0, e, t + 1, 6408, 5121, i);
                    n.texSubImage2D(3553, 0, e, t, 6408, 5121, i);
                    n.pixelStorei(37441, false)
                }
                s && a && Ue.bindTexture(n, s, a)
            } else {
                if (!this._flashCacheImage) {
                    this._flashCacheImage = I.create("");
                    this._flashCacheImage._image.createCanvas(this._w, this._h)
                }
                var r = i.bitmapdata;
                this._flashCacheImage._image.copyPixels(r, 0, 0, r.width, r.height, e, t);
                this._flashCacheImageNeedFlush || (this._flashCacheImageNeedFlush = true)
            }
        };
        i.texSubImage2DPixel = function(e, t, i, n, s) {
            var a = Pe.mainContext;
            var r = Ue.curBindTexTarget;
            var o = Ue.curBindTexValue;
            Ue.bindTexture(a, 3553, this._source);
            var l = new Uint8Array(s.data);
            if (k.isConchWebGL) {
                a.texSubImage2DEx(true, 3553, 0, e, t, i, n, 6408, 5121, l)
            } else {
                a.pixelStorei(37441, true);
                a.texSubImage2D(3553, 0, e, t, i, n, 6408, 5121, l);
                a.pixelStorei(37441, false)
            }
            r && o && Ue.bindTexture(a, r, o)
        };
        l(0, i, "width", e.prototype._$get_width,
        function(e) {
            this._w = e
        });
        l(0, i, "height", e.prototype._$get_height,
        function(e) {
            this._h = e
        });
        return t
    } (s);
    var rt = function(e) {
        function s() {
            this.flipY = true;
            this.alwaysChange = false;
            s.__super.call(this)
        }
        _(s, "laya.webgl.resource.WebGLCanvas", e);
        var t = s.prototype;
        t.getCanvas = function() {
            return this._canvas
        };
        t.clear = function() {
            this._ctx && this._ctx.clear()
        };
        t.destroy = function() {
            this._ctx && this._ctx.destroy();
            this._ctx = null;
            laya.resource.Resource.prototype.destroy.call(this)
        };
        t._setContext = function(e) {
            this._ctx = e
        };
        t.getContext = function(e, t) {
            return this._ctx ? this._ctx: this._ctx = s._createContext(this)
        };
        t.size = function(e, t) {
            if (this._w != e || this._h != t) {
                this._w = e;
                this._h = t;
                this._ctx && this._ctx.size(e, t);
                this._canvas && (this._canvas.height = t, this._canvas.width = e)
            }
        };
        t.activeResource = function(e) {
            e === void 0 && (e = false);
            if (!this._source) {
                this.recreateResource()
            }
        };
        t.recreateResource = function() {
            this.createWebGlTexture();
            this.completeCreate()
        };
        t.disposeResource = function() {
            if (this._source && !this.iscpuSource) {
                Pe.mainContext.deleteTexture(this._source);
                this._source = null;
                this.memorySize = 0
            }
        };
        t.createWebGlTexture = function() {
            var e = Pe.mainContext;
            if (!this._canvas) {}
            var t = this._source = e.createTexture();
            this.iscpuSource = false;
            var i = Ue.curBindTexTarget;
            var n = Ue.curBindTexValue;
            Ue.bindTexture(e, 3553, t);
            e.pixelStorei(37440, this.flipY ? 1 : 0);
            if (k.isConchWebGL) {
                e.texImage2DEx(s.premulAlpha, 3553, 0, 6408, 6408, 5121, this._imgData)
            } else {
                s.premulAlpha && e.pixelStorei(37441, true);
                e.texImage2D(3553, 0, 6408, 6408, 5121, this._imgData);
                s.premulAlpha && e.pixelStorei(37441, false)
            }
            e.texParameteri(3553, 10240, 9729);
            e.texParameteri(3553, 10241, 9729);
            e.texParameteri(3553, 10242, 33071);
            e.texParameteri(3553, 10243, 33071);
            e.pixelStorei(37440, 0);
            this.memorySize = this._w * this._h * 4;
            i && n && Ue.bindTexture(e, i, n)
        };
        t.reloadCanvasData = function() {
            var e = Pe.mainContext;
            if (!this._source) {
                throw "reloadCanvasData error, gl texture not created!"
            }
            var t = Ue.curBindTexTarget;
            var i = Ue.curBindTexValue;
            Ue.bindTexture(e, 3553, this._source);
            if (k.isConchWebGL) {
                e.texImage2DEx(s.premulAlpha, 3553, 0, 6408, 6408, 5121, this._imgData)
            } else {
                s.premulAlpha && e.pixelStorei(37441, true);
                e.texImage2D(3553, 0, 6408, 6408, 5121, this._imgData);
                s.premulAlpha && e.pixelStorei(37441, false)
            }
            e.pixelStorei(37440, 0);
            t && i && Ue.bindTexture(e, t, i)
        };
        t.texSubImage2D = function(e, t, i) {
            var n = Pe.mainContext;
            var s = Ue.curBindTexTarget;
            var a = Ue.curBindTexValue;
            Ue.bindTexture(n, 3553, this._source);
            if (k.isConchWebGL) {
                n.texSubImage2DEx(true, 3553, 0, t, i, 6408, 5121, e._source)
            } else {
                n.pixelStorei(37441, true);
                n.texSubImage2D(3553, 0, t, i, 6408, 5121, e._source);
                n.pixelStorei(37441, false)
            }
            s && a && Ue.bindTexture(n, s, a)
        };
        t.toBase64 = function(e, t, i) {
            var n = null;
            if (this._canvas) {
                n = this._canvas.toDataURL(e, t)
            }
            i.call(this, n)
        };
        l(0, t, "context",
        function() {
            return this._ctx
        });
        l(0, t, "source",
        function() {
            if (this.alwaysChange) this.reloadCanvasData();
            return this._source
        });
        l(0, t, "asBitmap", null,
        function(e) {
            this._ctx && (this._ctx.asBitmap = e)
        });
        s._createContext = null;
        s.premulAlpha = false;
        return s
    } (s);
    var ot = function(e) {
        function a(e, t) {
            this.CborderSize = 12;
            a.__super.call(this);
            this.char = e;
            this.isSpace = e === " ";
            this.xs = t.scaleX;
            this.ys = t.scaleY;
            this.font = t.font.toString();
            this.fontSize = t.font.size;
            this.fillColor = t.fillColor;
            this.borderColor = t.borderColor;
            this.lineWidth = t.lineWidth;
            this.underLine = t.underLine;
            var i = k.isConchApp;
            var n;
            if (i) {
                n = ConchTextCanvas;
                n._source = ConchTextCanvas;
                n._source.canvas = ConchTextCanvas
            } else {
                n = d.canvas.source
            }
            this.canvas = n;
            this._enableMerageInAtlas = true;
            if (i) {
                this._ctx = n
            } else {
                this._ctx = this.canvas.getContext("2d", undefined)
            }
            var s = Y.measureText(this.char, this.font);
            this.cw = s.width * this.xs;
            this.ch = (s.height || this.fontSize) * this.ys;
            this.onresize(this.cw + this.CborderSize * 2, this.ch + this.CborderSize * 2);
            this.texture = new z(this)
        }
        _(a, "laya.webgl.resource.WebGLCharImage", e);
        var t = a.prototype;
        C.imps(t, {
            "laya.webgl.resource.IMergeAtlasBitmap": true
        });
        t.active = function() {
            this.texture.active()
        };
        t.recreateResource = function() {
            var e = k.isConchApp;
            this.onresize(this.cw + this.CborderSize * 2, this.ch + this.CborderSize * 2);
            this.canvas && (this.canvas.height = this._h, this.canvas.width = this._w);
            if (e) {
                var t = this.fontSize;
                if (this.xs != 1 || this.ys != 1) {
                    t = parseInt(t * (this.xs > this.ys ? this.xs: this.ys) + "")
                }
                var i = "normal 100 " + this.font;
                i = i.replace(a._fontSizeReg, t);
                if (this.borderColor) {
                    i += " 1 " + this.borderColor
                }
                this._ctx.font = i;
                this._ctx.textBaseline = "top";
                this._ctx.fillStyle = this.fillColor;
                this._ctx.fillText(this.char, this.CborderSize, this.CborderSize, null, null, null)
            } else {
                this._ctx.save();
                this._ctx.lineJoin = "round";
                this._ctx.clearRect(0, 0, this.cw + this.CborderSize * 2, this.ch + this.CborderSize * 2);
                this._ctx.font = this.font;
                if (q.RightToLeft) {
                    this._ctx.textAlign = "end"
                }
                this._ctx.textBaseline = "top";
                if (this.xs != 1 || this.ys != 1) {
                    this._ctx.setTransform(this.xs, 0, 0, this.ys, this.CborderSize, this.CborderSize)
                } else {
                    this._ctx.setTransform(1, 0, 0, 1, this.CborderSize, this.CborderSize)
                }
                if (this.fillColor && this.borderColor) {
                    this._ctx.strokeStyle = this.borderColor;
                    this._ctx.lineWidth = this.lineWidth;
                    this._ctx.strokeText(this.char, 0, 0, null, null, 0, null);
                    this._ctx.fillStyle = this.fillColor;
                    this._ctx.fillText(this.char, 0, 0, null, null, null)
                } else {
                    if (this.lineWidth === -1) {
                        this._ctx.fillStyle = this.fillColor ? this.fillColor: "white";
                        this._ctx.fillText(this.char, 0, 0, null, null, null)
                    } else {
                        this._ctx.strokeStyle = this.borderColor ? this.borderColor: "white";
                        this._ctx.lineWidth = this.lineWidth;
                        this._ctx.strokeText(this.char, 0, 0, null, null, 0, null)
                    }
                }
                if (this.underLine) {
                    this._ctx.lineWidth = 1;
                    this._ctx.strokeStyle = this.fillColor;
                    this._ctx.beginPath();
                    this._ctx.moveTo(0, this.fontSize + 1);
                    var n = this._ctx.measureText(this.char).width + 1;
                    this._ctx.lineTo(n, this.fontSize + 1);
                    this._ctx.stroke()
                }
                this._ctx.restore()
            }
            this.borderSize = this.CborderSize;
            this.completeCreate()
        };
        t.onresize = function(e, t) {
            this._w = e;
            this._h = t;
            this._allowMerageInAtlas = true
        };
        t.clearAtlasSource = function() {};
        l(0, t, "allowMerageInAtlas",
        function() {
            return this._allowMerageInAtlas
        });
        l(0, t, "atlasSource",
        function() {
            return this.canvas
        });
        l(0, t, "atlasImgData",
        function() {
            if (!a.canUseCanvas) {
                if (this._ctx.getImageData) return this._ctx.getImageData(0, 0, this._w, this._h)
            }
            return null
        });
        l(0, t, "enableMerageInAtlas",
        function() {
            return this._enableMerageInAtlas
        },
        function(e) {
            this._enableMerageInAtlas = e
        });
        a.createOneChar = function(e, t) {
            var i = new a(e, t);
            return i
        };
        a.canUseCanvas = true;
        a._fontSizeReg = new RegExp("\\d+(?=px)", "g");
        return a
    } (s);
    var lt = function(e) {
        function h(e, t, i, n, s, a, r, o, l) {
            i === void 0 && (i = 6408);
            n === void 0 && (n = 5121);
            s === void 0 && (s = 34041);
            a === void 0 && (a = false);
            r === void 0 && (r = false);
            o === void 0 && (o = -1);
            l === void 0 && (l = 1);
            h.__super.call(this);
            this._w = e;
            this._h = t;
            this._surfaceFormat = i;
            this._surfaceType = n;
            this._depthStencilFormat = s;
            if (k.isConchWebGL && this._depthStencilFormat === 34041) {
                this._depthStencilFormat = 33189
            }
            this._mipMap = a;
            this._repeat = r;
            this._minFifter = o;
            this._magFifter = l
        }
        _(h, "laya.webgl.resource.WebGLRenderTarget", e);
        var t = h.prototype;
        t.recreateResource = function() {
            var e = Pe.mainContext;
            this._frameBuffer || (this._frameBuffer = e.createFramebuffer());
            this._source || (this._source = e.createTexture());
            var t = Ue.curBindTexTarget;
            var i = Ue.curBindTexValue;
            Ue.bindTexture(e, 3553, this._source);
            e.texImage2D(3553, 0, 6408, this._w, this._h, 0, this._surfaceFormat, this._surfaceType, null);
            var n = this._minFifter;
            var s = this._magFifter;
            var a = this._repeat ? 10497 : 33071;
            var r = c.isPOT(this._w, this._h);
            if (r) {
                if (this._mipMap) n !== -1 || (n = 9987);
                else n !== -1 || (n = 9729);
                s !== -1 || (s = 9729);
                e.texParameteri(3553, 10241, n);
                e.texParameteri(3553, 10240, s);
                e.texParameteri(3553, 10242, a);
                e.texParameteri(3553, 10243, a);
                this._mipMap && e.generateMipmap(3553)
            } else {
                n !== -1 || (n = 9729);
                s !== -1 || (s = 9729);
                e.texParameteri(3553, 10241, n);
                e.texParameteri(3553, 10240, s);
                e.texParameteri(3553, 10242, 33071);
                e.texParameteri(3553, 10243, 33071)
            }
            e.bindFramebuffer(36160, this._frameBuffer);
            e.framebufferTexture2D(36160, 36064, 3553, this._source, 0);
            if (this._depthStencilFormat) {
                this._depthStencilBuffer || (this._depthStencilBuffer = e.createRenderbuffer());
                e.bindRenderbuffer(36161, this._depthStencilBuffer);
                e.renderbufferStorage(36161, this._depthStencilFormat, this._w, this._h);
                switch (this._depthStencilFormat) {
                case 33189:
                    e.framebufferRenderbuffer(36160, 36096, 36161, this._depthStencilBuffer);
                    break;
                case 36168:
                    e.framebufferRenderbuffer(36160, 36128, 36161, this._depthStencilBuffer);
                    break;
                case 34041:
                    e.framebufferRenderbuffer(36160, 33306, 36161, this._depthStencilBuffer);
                    break
                }
            }
            e.bindFramebuffer(36160, null);
            t && i && Ue.bindTexture(e, t, i);
            e.bindRenderbuffer(36161, null);
            if (r && this._mipMap) this.memorySize = this._w * this._h * 4 * (1 + 1 / 3);
            else this.memorySize = this._w * this._h * 4;
            this.completeCreate()
        };
        t.disposeResource = function() {
            if (this._frameBuffer) {
                Pe.mainContext.deleteTexture(this._source);
                Pe.mainContext.deleteFramebuffer(this._frameBuffer);
                Pe.mainContext.deleteRenderbuffer(this._depthStencilBuffer);
                this._source = null;
                this._frameBuffer = null;
                this._depthStencilBuffer = null;
                this.memorySize = 0
            }
        };
        l(0, t, "depthStencilBuffer",
        function() {
            return this._depthStencilBuffer
        });
        l(0, t, "frameBuffer",
        function() {
            return this._frameBuffer
        });
        return h
    } (s);
    var ht = function(e) {
        function o(e, t, i, n, s, a, r) {
            this.offsetX = 0;
            this.offsetY = 0;
            o.__super.call(this);
            this.repeat = true;
            this.mipmap = false;
            this.minFifter = -1;
            this.magFifter = -1;
            this.atlasImage = a;
            this.canvas = e;
            this._ctx = e.getContext("2d", undefined);
            this._w = n;
            this._h = s;
            this.offsetX = t;
            this.offsetY = i;
            this.src = r;
            this._enableMerageInAtlas = true;
            Q.enabled && (this._w < Q.atlasLimitWidth && this._h < Q.atlasLimitHeight) ? this._allowMerageInAtlas = true: this._allowMerageInAtlas = false
        }
        _(o, "laya.webgl.resource.WebGLSubImage", e);
        var t = o.prototype;
        C.imps(t, {
            "laya.webgl.resource.IMergeAtlasBitmap": true
        });
        t.size = function(e, t) {
            this._w = e;
            this._h = t;
            this._ctx && this._ctx.size(e, t);
            this.canvas && (this.canvas.height = t, this.canvas.width = e)
        };
        t.recreateResource = function() {
            this.size(this._w, this._h);
            this._ctx.drawImage(this.atlasImage, this.offsetX, this.offsetY, this._w, this._h, 0, 0, this._w, this._h); ! (this._allowMerageInAtlas && this._enableMerageInAtlas) ? this.createWebGlTexture() : this.memorySize = 0;
            this.completeCreate()
        };
        t.createWebGlTexture = function() {
            var e = Pe.mainContext;
            if (!this.canvas) {
                throw "create GLTextur err:no data:" + this.canvas
            }
            var t = this._source = e.createTexture();
            var i = Ue.curBindTexTarget;
            var n = Ue.curBindTexValue;
            Ue.bindTexture(e, 3553, t);
            if (k.isConchWebGL) {
                e.texImage2DEx(true, 3553, 0, 6408, 6408, 5121, this.canvas)
            } else {
                e.pixelStorei(37441, true);
                e.texImage2D(3553, 0, 6408, 6408, 5121, this.canvas);
                e.pixelStorei(37441, false)
            }
            var s = this.minFifter;
            var a = this.magFifter;
            var r = this.repeat ? 10497 : 33071;
            var o = c.isPOT(this.width, this.height);
            if (o) {
                if (this.mipmap) s !== -1 || (s = 9987);
                else s !== -1 || (s = 9729);
                a !== -1 || (a = 9729);
                e.texParameteri(3553, 10240, a);
                e.texParameteri(3553, 10241, s);
                e.texParameteri(3553, 10242, r);
                e.texParameteri(3553, 10243, r);
                this.mipmap && e.generateMipmap(3553)
            } else {
                s !== -1 || (s = 9729);
                a !== -1 || (a = 9729);
                e.texParameteri(3553, 10241, s);
                e.texParameteri(3553, 10240, a);
                e.texParameteri(3553, 10242, 33071);
                e.texParameteri(3553, 10243, 33071)
            }
            i && n && Ue.bindTexture(e, i, n);
            this.canvas = null;
            if (o && this.mipmap) this.memorySize = this._w * this._h * 4 * (1 + 1 / 3);
            else this.memorySize = this._w * this._h * 4
        };
        t.disposeResource = function() {
            if (! (Q.enabled && this._allowMerageInAtlas) && this._source) {
                Pe.mainContext.deleteTexture(this._source);
                this._source = null;
                this.memorySize = 0
            }
        };
        t.clearAtlasSource = function() {};
        l(0, t, "allowMerageInAtlas",
        function() {
            return this._allowMerageInAtlas
        });
        l(0, t, "atlasSource",
        function() {
            return this.canvas
        });
        l(0, t, "enableMerageInAtlas",
        function() {
            return this._allowMerageInAtlas
        },
        function(e) {
            this._allowMerageInAtlas = e
        });
        return o
    } (s);
    var ut = function(e) {
        function f(e, t, i, n) {
            this._curActTexIndex = 0;
            this.tag = {};
            this._program = null;
            this._params = null;
            this._paramsMap = {};
            this._offset = 0;
            f.__super.call(this);
            if (!e || !t) throw "Shader Error";
            this._id = ++f._count;
            this._vs = e;
            this._ps = t;
            this._nameMap = n ? n: {};
            i != null && (f.sharders[i] = this)
        }
        _(f, "laya.webgl.shader.Shader", e);
        var t = f.prototype;
        t.recreateResource = function() {
            this._compile();
            this.completeCreate();
            this.memorySize = 0
        };
        t.disposeResource = function() {
            Pe.mainContext.deleteShader(this._vshader);
            Pe.mainContext.deleteShader(this._pshader);
            Pe.mainContext.deleteProgram(this._program);
            this._vshader = this._pshader = this._program = null;
            this._params = null;
            this._paramsMap = {};
            this.memorySize = 0;
            this._curActTexIndex = 0
        };
        t._compile = function() {
            if (!this._vs || !this._ps || this._params) return;
            this._reCompile = true;
            this._params = [];
            var e = [this._vs, this._ps];
            var t;
            var i = Pe.mainContext;
            this._program = i.createProgram();
            this._vshader = f._createShader(i, e[0], 35633);
            this._pshader = f._createShader(i, e[1], 35632);
            i.attachShader(this._program, this._vshader);
            i.attachShader(this._program, this._pshader);
            i.linkProgram(this._program);
            if (!k.isConchApp && !i.getProgramParameter(this._program, 35714)) {
                throw i.getProgramInfoLog(this._program)
            }
            var n, s = 0,
            a = 0,
            r = 0,
            o;
            var l = 0;
            if (k.isConchApp) {
                l = i.getProgramParameterEx(this._vs, this._ps, "", 35721)
            } else {
                l = i.getProgramParameter(this._program, 35721)
            }
            for (s = 0; s < l; s++) {
                var h = null;
                if (k.isConchApp) {
                    h = i.getActiveAttribEx(this._vs, this._ps, "", s)
                } else {
                    h = i.getActiveAttrib(this._program, s)
                }
                o = i.getAttribLocation(this._program, h.name);
                n = {
                    vartype: "attribute",
                    glfun: null,
                    ivartype: 0,
                    attrib: h,
                    location: o,
                    name: h.name,
                    type: h.type,
                    isArray: false,
                    isSame: false,
                    preValue: null,
                    indexOfParams: 0
                };
                this._params.push(n)
            }
            var u = 0;
            if (k.isConchApp) {
                u = i.getProgramParameterEx(this._vs, this._ps, "", 35718)
            } else {
                u = i.getProgramParameter(this._program, 35718)
            }
            for (s = 0; s < u; s++) {
                var c = null;
                if (k.isConchApp) {
                    c = i.getActiveUniformEx(this._vs, this._ps, "", s)
                } else {
                    c = i.getActiveUniform(this._program, s)
                }
                o = i.getUniformLocation(this._program, c.name);
                n = {
                    vartype: "uniform",
                    glfun: null,
                    ivartype: 1,
                    attrib: h,
                    location: o,
                    name: c.name,
                    type: c.type,
                    isArray: false,
                    isSame: false,
                    preValue: null,
                    indexOfParams: 0
                };
                if (n.name.indexOf("[0]") > 0) {
                    n.name = n.name.substr(0, n.name.length - 3);
                    n.isArray = true;
                    n.location = i.getUniformLocation(this._program, n.name)
                }
                this._params.push(n)
            }
            for (s = 0, r = this._params.length; s < r; s++) {
                n = this._params[s];
                n.indexOfParams = s;
                n.index = 1;
                n.value = [n.location, null];
                n.codename = n.name;
                n.name = this._nameMap[n.codename] ? this._nameMap[n.codename] : n.codename;
                this._paramsMap[n.name] = n;
                n._this = this;
                n.uploadedValue = [];
                if (n.vartype === "attribute") {
                    n.fun = this._attribute;
                    continue
                }
                switch (n.type) {
                case 5124:
                    n.fun = n.isArray ? this._uniform1iv: this._uniform1i;
                    break;
                case 5126:
                    n.fun = n.isArray ? this._uniform1fv: this._uniform1f;
                    break;
                case 35664:
                    n.fun = n.isArray ? this._uniform_vec2v: this._uniform_vec2;
                    break;
                case 35665:
                    n.fun = n.isArray ? this._uniform_vec3v: this._uniform_vec3;
                    break;
                case 35666:
                    n.fun = n.isArray ? this._uniform_vec4v: this._uniform_vec4;
                    break;
                case 35678:
                    n.fun = this._uniform_sampler2D;
                    break;
                case 35680:
                    n.fun = this._uniform_samplerCube;
                    break;
                case 35676:
                    n.glfun = i.uniformMatrix4fv;
                    n.fun = this._uniformMatrix4fv;
                    break;
                case 35670:
                    n.fun = this._uniform1i;
                    break;
                case 35674:
                case 35675:
                    throw new Error("compile shader err!");
                    break;
                default:
                    throw new Error("compile shader err!");
                    break
                }
            }
        };
        t.getUniform = function(e) {
            return this._paramsMap[e]
        };
        t._attribute = function(e, t) {
            var i = Pe.mainContext;
            var n = Ze._enableAtributes;
            var s = e.location;
            n[s] || i.enableVertexAttribArray(s);
            i.vertexAttribPointer(s, t[0], t[1], t[2], t[3], t[4] + this._offset);
            n[s] = Ze._bindVertexBuffer;
            return 1
        };
        t._uniform1f = function(e, t) {
            var i = e.uploadedValue;
            if (i[0] !== t) {
                Pe.mainContext.uniform1f(e.location, i[0] = t);
                return 1
            }
            return 0
        };
        t._uniform1fv = function(e, t) {
            if (t.length < 4) {
                var i = e.uploadedValue;
                if (i[0] !== t[0] || i[1] !== t[1] || i[2] !== t[2] || i[3] !== t[3]) {
                    Pe.mainContext.uniform1fv(e.location, t);
                    i[0] = t[0];
                    i[1] = t[1];
                    i[2] = t[2];
                    i[3] = t[3];
                    return 1
                }
                return 0
            } else {
                Pe.mainContext.uniform1fv(e.location, t);
                return 1
            }
        };
        t._uniform_vec2 = function(e, t) {
            var i = e.uploadedValue;
            if (i[0] !== t[0] || i[1] !== t[1]) {
                Pe.mainContext.uniform2f(e.location, i[0] = t[0], i[1] = t[1]);
                return 1
            }
            return 0
        };
        t._uniform_vec2v = function(e, t) {
            if (t.length < 2) {
                var i = e.uploadedValue;
                if (i[0] !== t[0] || i[1] !== t[1] || i[2] !== t[2] || i[3] !== t[3]) {
                    Pe.mainContext.uniform2fv(e.location, t);
                    i[0] = t[0];
                    i[1] = t[1];
                    i[2] = t[2];
                    i[3] = t[3];
                    return 1
                }
                return 0
            } else {
                Pe.mainContext.uniform2fv(e.location, t);
                return 1
            }
        };
        t._uniform_vec3 = function(e, t) {
            var i = e.uploadedValue;
            if (i[0] !== t[0] || i[1] !== t[1] || i[2] !== t[2]) {
                Pe.mainContext.uniform3f(e.location, i[0] = t[0], i[1] = t[1], i[2] = t[2]);
                return 1
            }
            return 0
        };
        t._uniform_vec3v = function(e, t) {
            Pe.mainContext.uniform3fv(e.location, t);
            return 1
        };
        t._uniform_vec4 = function(e, t) {
            var i = e.uploadedValue;
            if (i[0] !== t[0] || i[1] !== t[1] || i[2] !== t[2] || i[3] !== t[3]) {
                Pe.mainContext.uniform4f(e.location, i[0] = t[0], i[1] = t[1], i[2] = t[2], i[3] = t[3]);
                return 1
            }
            return 0
        };
        t._uniform_vec4v = function(e, t) {
            Pe.mainContext.uniform4fv(e.location, t);
            return 1
        };
        t._uniformMatrix2fv = function(e, t) {
            Pe.mainContext.uniformMatrix2fv(e.location, false, t);
            return 1
        };
        t._uniformMatrix3fv = function(e, t) {
            Pe.mainContext.uniformMatrix3fv(e.location, false, t);
            return 1
        };
        t._uniformMatrix4fv = function(e, t) {
            Pe.mainContext.uniformMatrix4fv(e.location, false, t);
            return 1
        };
        t._uniform1i = function(e, t) {
            var i = e.uploadedValue;
            if (i[0] !== t) {
                Pe.mainContext.uniform1i(e.location, i[0] = t);
                return 1
            }
            return 0
        };
        t._uniform1iv = function(e, t) {
            Pe.mainContext.uniform1iv(e.location, t);
            return 1
        };
        t._uniform_ivec2 = function(e, t) {
            var i = e.uploadedValue;
            if (i[0] !== t[0] || i[1] !== t[1]) {
                Pe.mainContext.uniform2i(e.location, i[0] = t[0], i[1] = t[1]);
                return 1
            }
            return 0
        };
        t._uniform_ivec2v = function(e, t) {
            Pe.mainContext.uniform2iv(e.location, t);
            return 1
        };
        t._uniform_vec3i = function(e, t) {
            var i = e.uploadedValue;
            if (i[0] !== t[0] || i[1] !== t[1] || i[2] !== t[2]) {
                Pe.mainContext.uniform3i(e.location, i[0] = t[0], i[1] = t[1], i[2] = t[2]);
                return 1
            }
            return 0
        };
        t._uniform_vec3vi = function(e, t) {
            Pe.mainContext.uniform3iv(e.location, t);
            return 1
        };
        t._uniform_vec4i = function(e, t) {
            var i = e.uploadedValue;
            if (i[0] !== t[0] || i[1] !== t[1] || i[2] !== t[2] || i[3] !== t[3]) {
                Pe.mainContext.uniform4i(e.location, i[0] = t[0], i[1] = t[1], i[2] = t[2], i[3] = t[3]);
                return 1
            }
            return 0
        };
        t._uniform_vec4vi = function(e, t) {
            Pe.mainContext.uniform4iv(e.location, t);
            return 1
        };
        t._uniform_sampler2D = function(e, t) {
            var i = Pe.mainContext;
            var n = e.uploadedValue;
            if (n[0] == null) {
                n[0] = this._curActTexIndex;
                i.uniform1i(e.location, this._curActTexIndex);
                i.activeTexture(f._TEXTURES[this._curActTexIndex]);
                Ue.bindTexture(i, 3553, t);
                this._curActTexIndex++;
                return 1
            } else {
                i.activeTexture(f._TEXTURES[n[0]]);
                Ue.bindTexture(i, 3553, t);
                return 0
            }
        };
        t._uniform_samplerCube = function(e, t) {
            var i = Pe.mainContext;
            var n = e.uploadedValue;
            if (n[0] == null) {
                n[0] = this._curActTexIndex;
                i.uniform1i(e.location, this._curActTexIndex);
                i.activeTexture(f._TEXTURES[this._curActTexIndex]);
                Ue.bindTexture(i, 34067, t);
                this._curActTexIndex++;
                return 1
            } else {
                i.activeTexture(f._TEXTURES[n[0]]);
                Ue.bindTexture(i, 34067, t);
                return 0
            }
        };
        t._noSetValue = function(e) {
            console.log("no....:" + e.name)
        };
        t.uploadOne = function(e, t) {
            this.activeResource();
            Ue.UseProgram(this._program);
            var i = this._paramsMap[e];
            i.fun.call(this, i, t)
        };
        t.uploadTexture2D = function(e) {
            N.shaderCall++;
            var t = Pe.mainContext;
            t.activeTexture(33984);
            Ue.bindTexture(t, 3553, e)
        };
        t.upload = function(e, t) {
            Ke.activeShader = Ke.bindShader = this;
            this._lastUseFrameCount === N.loopCount || this.activeResource();
            Ue.UseProgram(this._program);
            if (this._reCompile) {
                t = this._params;
                this._reCompile = false
            } else {
                t = t || this._params
            }
            var i = Pe.mainContext;
            var n, s, a = t.length,
            r = 0;
            for (var o = 0; o < a; o++) {
                n = t[o];
                if ((s = e[n.name]) !== null) r += n.fun.call(this, n, s)
            }
            N.shaderCall += r
        };
        t.uploadArray = function(e, t, i) {
            Ke.activeShader = this;
            Ke.bindShader = this;
            this.activeResource();
            Ue.UseProgram(this._program);
            var n = this._params,
            s;
            var a, r = 0;
            for (var o = t - 2; o >= 0; o -= 2) {
                a = this._paramsMap[e[o]];
                if (!a) continue;
                s = e[o + 1];
                if (s != null) {
                    i && i[a.name] && i[a.name].bind();
                    r += a.fun.call(this, a, s)
                }
            }
            N.shaderCall += r
        };
        t.getParams = function() {
            return this._params
        };
        f.getShader = function(e) {
            return f.sharders[e]
        };
        f.create = function(e, t, i, n) {
            return new f(e, t, i, n)
        };
        f.withCompile = function(e, t, i, n) {
            if (i && f.sharders[i]) return f.sharders[i];
            var s = f._preCompileShader[2e-4 * e];
            if (!s) throw new Error("withCompile shader err!" + e);
            return s.createShader(t, i, n)
        };
        f.withCompile2D = function(e, t, i, n, s) {
            if (n && f.sharders[n]) return f.sharders[n];
            var a = f._preCompileShader[2e-4 * e + t];
            if (!a) throw new Error("withCompile shader err!" + e + " " + t);
            return a.createShader(i, n, s)
        };
        f.addInclude = function(e, t) {
            Ae.addInclude(e, t)
        };
        f.preCompile = function(e, t, i, n) {
            var s = 2e-4 * e;
            f._preCompileShader[s] = new Ae(s, t, i, n)
        };
        f.preCompile2D = function(e, t, i, n, s) {
            var a = 2e-4 * e + t;
            f._preCompileShader[a] = new Ae(a, i, n, s)
        };
        f._createShader = function(e, t, i) {
            var n = e.createShader(i);
            e.shaderSource(n, t);
            e.compileShader(n);
            return n
        };
        f._TEXTURES = [33984, 33985, 33986, 33987, 33988, 33989, 33990, , 33991, 33992];
        f._count = 0;
        f._preCompileShader = {};
        f.SHADERNAME2ID = 2e-4;
        f.sharders = (f.sharders = [], f.sharders.length = 32, f.sharders);
        r(f, ["nameKey",
        function() {
            return this.nameKey = new F
        }]);
        return f
    } (Ke);
    var ct = function(e) {
        function t() {
            this._maxsize = 0;
            this._upload = true;
            this._uploadSize = 0;
            t.__super.call(this);
            this.lock = true
        }
        _(t, "laya.webgl.utils.Buffer2D", e);
        var i = t.prototype;
        i.needSize = function(e) {
            var t = this._byteLength;
            if (e) {
                var i = this._byteLength + e;
                i <= this._buffer.byteLength || this._resizeBuffer(i << 1, true);
                this._byteLength = i
            }
            return t
        };
        i._bufferData = function() {
            this._maxsize = Math.max(this._maxsize, this._byteLength);
            if (N.loopCount % 30 == 0) {
                if (this._buffer.byteLength > this._maxsize + 64) {
                    this.memorySize = this._buffer.byteLength;
                    this._buffer = this._buffer.slice(0, this._maxsize + 64);
                    this._checkArrayUse()
                }
                this._maxsize = this._byteLength
            }
            if (this._uploadSize < this._buffer.byteLength) {
                this._uploadSize = this._buffer.byteLength;
                Ze._gl.bufferData(this._bufferType, this._uploadSize, this._bufferUsage);
                this.memorySize = this._uploadSize
            }
            Ze._gl.bufferSubData(this._bufferType, 0, this._buffer)
        };
        i._bufferSubData = function(e, t, i) {
            e === void 0 && (e = 0);
            t === void 0 && (t = 0);
            i === void 0 && (i = 0);
            this._maxsize = Math.max(this._maxsize, this._byteLength);
            if (N.loopCount % 30 == 0) {
                if (this._buffer.byteLength > this._maxsize + 64) {
                    this.memorySize = this._buffer.byteLength;
                    this._buffer = this._buffer.slice(0, this._maxsize + 64);
                    this._checkArrayUse()
                }
                this._maxsize = this._byteLength
            }
            if (this._uploadSize < this._buffer.byteLength) {
                this._uploadSize = this._buffer.byteLength;
                Ze._gl.bufferData(this._bufferType, this._uploadSize, this._bufferUsage);
                this.memorySize = this._uploadSize
            }
            if (t || i) {
                var n = this._buffer.slice(t, i);
                Ze._gl.bufferSubData(this._bufferType, e, n)
            } else {
                Ze._gl.bufferSubData(this._bufferType, e, this._buffer)
            }
        };
        i._checkArrayUse = function() {};
        i._bind_upload = function() {
            if (!this._upload) return false;
            this._upload = false;
            this._bind();
            this._bufferData();
            return true
        };
        i._bind_subUpload = function(e, t, i) {
            e === void 0 && (e = 0);
            t === void 0 && (t = 0);
            i === void 0 && (i = 0);
            if (!this._upload) return false;
            this._upload = false;
            this._bind();
            this._bufferSubData(e, t, i);
            return true
        };
        i._resizeBuffer = function(e, t) {
            if (e < this._buffer.byteLength) return this;
            this.memorySize = e;
            if (t && this._buffer && this._buffer.byteLength > 0) {
                var i = new ArrayBuffer(e);
                var n = new Uint8Array(i);
                n.set(new Uint8Array(this._buffer), 0);
                this._buffer = i
            } else this._buffer = new ArrayBuffer(e);
            this._checkArrayUse();
            this._upload = true;
            return this
        };
        i.append = function(e) {
            this._upload = true;
            var t = 0,
            i;
            t = e.byteLength;
            if (e instanceof Uint8Array) {
                this._resizeBuffer(this._byteLength + t, true);
                i = new Uint8Array(this._buffer, this._byteLength)
            } else if (e instanceof Uint16Array) {
                this._resizeBuffer(this._byteLength + t, true);
                i = new Uint16Array(this._buffer, this._byteLength)
            } else if (e instanceof Float32Array) {
                this._resizeBuffer(this._byteLength + t, true);
                i = new Float32Array(this._buffer, this._byteLength)
            }
            i.set(e, 0);
            this._byteLength += t;
            this._checkArrayUse()
        };
        i.appendU16Array = function(e, t) {
            this._resizeBuffer(this._byteLength + t * 2, true);
            var i = new Uint16Array(this._buffer, this._byteLength, t);
            for (var n = 0; n < t; n++) {
                i[n] = e[n]
            }
            this._byteLength += t * 2;
            this._checkArrayUse()
        };
        i.appendEx = function(e, t) {
            this._upload = true;
            var i = 0,
            n;
            i = e.byteLength;
            this._resizeBuffer(this._byteLength + i, true);
            n = new t(this._buffer, this._byteLength);
            n.set(e, 0);
            this._byteLength += i;
            this._checkArrayUse()
        };
        i.appendEx2 = function(e, t, i, n) {
            n === void 0 && (n = 1);
            this._upload = true;
            var s = 0,
            a;
            s = i * n;
            this._resizeBuffer(this._byteLength + s, true);
            a = new t(this._buffer, this._byteLength);
            var r = 0;
            for (r = 0; r < i; r++) {
                a[r] = e[r]
            }
            this._byteLength += s;
            this._checkArrayUse()
        };
        i.getBuffer = function() {
            return this._buffer
        };
        i.setNeedUpload = function() {
            this._upload = true
        };
        i.getNeedUpload = function() {
            return this._upload
        };
        i.upload = function() {
            var e = this._bind_upload();
            Ze._gl.bindBuffer(this._bufferType, null);
            Ze._bindActive[this._bufferType] = null;
            Ke.activeShader = null;
            return e
        };
        i.subUpload = function(e, t, i) {
            e === void 0 && (e = 0);
            t === void 0 && (t = 0);
            i === void 0 && (i = 0);
            var n = this._bind_subUpload();
            Ze._gl.bindBuffer(this._bufferType, null);
            Ze._bindActive[this._bufferType] = null;
            Ke.activeShader = null;
            return n
        };
        i.disposeResource = function() {
            e.prototype.disposeResource.call(this);
            this._upload = true;
            this._uploadSize = 0
        };
        i.clear = function() {
            this._byteLength = 0;
            this._upload = true
        };
        l(0, i, "bufferLength",
        function() {
            return this._buffer.byteLength
        });
        l(0, i, "byteLength", null,
        function(e) {
            if (this._byteLength === e) return;
            e <= this._buffer.byteLength || this._resizeBuffer(e * 2 + 256, true);
            this._byteLength = e
        });
        t.__int__ = function(e) {
            pt.QuadrangleIB = pt.create(35044);
            ke.fillIBQuadrangle(pt.QuadrangleIB, 16)
        };
        t.FLOAT32 = 4;
        t.SHORT = 2;
        return t
    } (Ze);
    var ft = function(t) {
        function i(e) {
            this.u_blurX = false;
            this.u_color = null;
            this.u_offset = null;
            this.u_strength = NaN;
            this.u_texW = 0;
            this.u_texH = 0;
            i.__super.call(this, 8 | 1)
        }
        _(i, "laya.webgl.shader.d2.value.GlowSV", t);
        var e = i.prototype;
        e.setValue = function(e) {
            t.prototype.setValue.call(this, e)
        };
        e.clear = function() {
            t.prototype.clear.call(this)
        };
        return i
    } (nt);
    var dt = function(e) {
        function t(e) {
            t.__super.call(this, 64);
            this.defines.add(64)
        }
        _(t, "laya.webgl.shader.d2.value.TextSV", e);
        var i = t.prototype;
        i.release = function() {
            t.pool[t._length++] = this;
            this.clear()
        };
        i.clear = function() {
            e.prototype.clear.call(this)
        };
        t.create = function() {
            if (t._length) return t.pool[--t._length];
            else return new t(null)
        };
        t.pool = [];
        t._length = 0;
        return t
    } (nt);
    var gt = function(e) {
        function s(e, t, i, n) {
            this._params2dQuick1 = null;
            this._params2dQuick2 = null;
            this._shaderValueWidth = NaN;
            this._shaderValueHeight = NaN;
            s.__super.call(this, e, t, i, n)
        }
        _(s, "laya.webgl.shader.d2.Shader2X", e);
        var t = s.prototype;
        t.upload2dQuick1 = function(e) {
            this.upload(e, this._params2dQuick1 || this._make2dQuick1())
        };
        t._make2dQuick1 = function() {
            if (!this._params2dQuick1) {
                this.activeResource();
                this._params2dQuick1 = [];
                var e = this._params,
                t;
                for (var i = 0,
                n = e.length; i < n; i++) {
                    t = e[i];
                    if (!k.isFlash && (t.name === "size" || t.name === "position" || t.name === "texcoord")) continue;
                    this._params2dQuick1.push(t)
                }
            }
            return this._params2dQuick1
        };
        t.disposeResource = function() {
            e.prototype.disposeResource.call(this);
            this._params2dQuick1 = null;
            this._params2dQuick2 = null
        };
        t.upload2dQuick2 = function(e) {
            this.upload(e, this._params2dQuick2 || this._make2dQuick2())
        };
        t._make2dQuick2 = function() {
            if (!this._params2dQuick2) {
                this.activeResource();
                this._params2dQuick2 = [];
                var e = this._params,
                t;
                for (var i = 0,
                n = e.length; i < n; i++) {
                    t = e[i];
                    if (!k.isFlash && t.name === "size") continue;
                    this._params2dQuick2.push(t)
                }
            }
            return this._params2dQuick2
        };
        s.create = function(e, t, i, n) {
            return new s(e, t, i, n)
        };
        return s
    } (ut);
    var pt = function(e) {
        function t(e) {
            this._uint8Array = null;
            this._uint16Array = null;
            e === void 0 && (e = 35044);
            t.__super.call(this);
            this._bufferUsage = e;
            this._bufferType = 34963;
            k.isFlash || (this._buffer = new ArrayBuffer(8))
        }
        _(t, "laya.webgl.utils.IndexBuffer2D", e);
        var i = t.prototype;
        i._checkArrayUse = function() {
            this._uint8Array && (this._uint8Array = new Uint8Array(this._buffer));
            this._uint16Array && (this._uint16Array = new Uint16Array(this._buffer))
        };
        i.getUint8Array = function() {
            return this._uint8Array || (this._uint8Array = new Uint8Array(this._buffer))
        };
        i.getUint16Array = function() {
            return this._uint16Array || (this._uint16Array = new Uint16Array(this._buffer))
        };
        i.destory = function() {
            this._uint16Array = null;
            this._uint8Array = null;
            this._buffer = null
        };
        t.QuadrangleIB = null;
        t.create = function(e) {
            e === void 0 && (e = 35044);
            return new t(e)
        };
        return t
    } (ct);
    var _t = function(i) {
        function n(e, t) {
            this._floatArray32 = null;
            this._vertexStride = 0;
            n.__super.call(this);
            this._vertexStride = e;
            this._bufferUsage = t;
            this._bufferType = 34962;
            k.isFlash || (this._buffer = new ArrayBuffer(8));
            this.getFloat32Array()
        }
        _(n, "laya.webgl.utils.VertexBuffer2D", i);
        var e = n.prototype;
        e.getFloat32Array = function() {
            return this._floatArray32 || (this._floatArray32 = new Float32Array(this._buffer))
        };
        e.bind = function(e) {
            e && e._bind();
            this._bind()
        };
        e.insertData = function(e, t) {
            var i = this.getFloat32Array();
            i.set(e, t);
            this._upload = true
        };
        e.bind_upload = function(e) {
            e._bind_upload() || e._bind();
            this._bind_upload() || this._bind()
        };
        e._checkArrayUse = function() {
            this._floatArray32 && (this._floatArray32 = new Float32Array(this._buffer))
        };
        e.disposeResource = function() {
            i.prototype.disposeResource.call(this);
            return;
            var e = Ze._enableAtributes;
            if (!k.isConchWebGL) {
                for (var t = 0; t < 10; t++) {
                    Pe.mainContext.disableVertexAttribArray(t);
                    e[t] = null
                }
            }
        };
        e.destory = function() {
            this._byteLength = 0;
            this._upload = true;
            this._buffer = null;
            this._floatArray32 = null
        };
        l(0, e, "vertexStride",
        function() {
            return this._vertexStride
        });
        n.create = function(e, t) {
            t === void 0 && (t = 35048);
            return new n(e, t)
        };
        return n
    } (ct);
    var mt = function(e) {
        function u(e, t, i, n) {
            this._format = 0;
            this._mipmap = false;
            this._allowMerageInAtlas = false;
            this._enableMerageInAtlas = false;
            this.repeat = false;
            this._image = null;
            this.minFifter = 0;
            this.magFifter = 0;
            i === void 0 && (i = 6408);
            n === void 0 && (n = true);
            u.__super.call(this, e, t);
            this._format = i;
            this._mipmap = n;
            this.repeat = false;
            this.minFifter = -1;
            this.magFifter = -1;
            if (typeof e == "string") {
                this._url = e;
                this._src = e;
                this._image = new d.window.Image;
                if (t) {
                    t.onload && (this.onload = t.onload);
                    t.onerror && (this.onerror = t.onerror);
                    t.onCreate && t.onCreate(this)
                }
                this._image.crossOrigin = e && e.indexOf("data:") == 0 ? null: "";
                e && (this._image.src = e)
            } else if (e instanceof ArrayBuffer) {
                this._src = t;
                this._url = this._src;
                var s = new g(e);
                var a = s.readUTFBytes(4);
                var r = s.readUTFBytes(2);
                var o = s.getInt16();
                s.endian = "bigEndian";
                this._w = s.getInt16();
                this._h = s.getInt16();
                var l = s.getInt16();
                var h = s.getInt16();
                this._image = new Uint8Array(e, s.pos);
                this._format = Pe.compressEtc1.COMPRESSED_RGB_ETC1_WEBGL;
                Q.enabled && (this._w < Q.atlasLimitWidth && this._h < Q.atlasLimitHeight) ? this._allowMerageInAtlas = true: this._allowMerageInAtlas = false
            } else {
                this._src = t;
                this._url = this._src;
                this._image = e["source"] || e;
                this.onresize()
            }
            this._$5__enableMerageInAtlas = true
        }
        _(u, "laya.webgl.resource.WebGLImage", e);
        var t = u.prototype;
        C.imps(t, {
            "laya.webgl.resource.IMergeAtlasBitmap": true
        });
        t._init_ = function(e, t) {};
        t._createWebGlTexture = function() {
            if (!this._image) {
                throw "create GLTextur err:no data:" + this._image
            }
            var e = Pe.mainContext;
            var t = this._source = e.createTexture();
            var i = Ue.curBindTexTarget;
            var n = Ue.curBindTexValue;
            Ue.bindTexture(e, 3553, t);
            if (k.isConchWebGL) {
                switch (this._format) {
                case 6408:
                    e.texImage2DEx(true, 3553, 0, this._format, 6408, 5121, this._image);
                    break;
                case Pe.compressEtc1.COMPRESSED_RGB_ETC1_WEBGL:
                    e.compressedTexImage2D(3553, 0, this._format, this._w, this._h, 0, this._image);
                    break
                }
            } else {
                e.pixelStorei(37441, true);
                switch (this._format) {
                case 6408:
                    e.texImage2D(3553, 0, this._format, 6408, 5121, this._image);
                    break;
                case Pe.compressEtc1.COMPRESSED_RGB_ETC1_WEBGL:
                    e.compressedTexImage2D(3553, 0, this._format, this._w, this._h, 0, this._image);
                    break
                }
                e.pixelStorei(37441, false)
            }
            var s = this.minFifter;
            var a = this.magFifter;
            var r = this.repeat ? 10497 : 33071;
            var o = c.isPOT(this._w, this._h);
            if (o) {
                if (this.mipmap) s !== -1 || (s = 9987);
                else s !== -1 || (s = 9729);
                a !== -1 || (a = 9729);
                e.texParameteri(3553, 10241, s);
                e.texParameteri(3553, 10240, a);
                e.texParameteri(3553, 10242, r);
                e.texParameteri(3553, 10243, r);
                this.mipmap && e.generateMipmap(3553)
            } else {
                s !== -1 || (s = 9729);
                a !== -1 || (a = 9729);
                e.texParameteri(3553, 10241, s);
                e.texParameteri(3553, 10240, a);
                e.texParameteri(3553, 10242, 33071);
                e.texParameteri(3553, 10243, 33071)
            }
            i && n && Ue.bindTexture(e, i, n);
            this._image.onload = null;
            this._image = null;
            if (o && this.mipmap) this.memorySize = this._w * this._h * 4 * (1 + 1 / 3);
            else this.memorySize = this._w * this._h * 4;
            this._recreateLock = false
        };
        t.recreateResource = function() {
            var e = this;
            if (this._src == null || this._src === "") return;
            this._needReleaseAgain = false;
            if (!this._image) {
                this._recreateLock = true;
                var t = this;
                this._image = new d.window.Image;
                this._image.crossOrigin = this._src.indexOf("data:") == 0 ? null: "";
                this._image.onload = function() {
                    if (t._needReleaseAgain) {
                        t._needReleaseAgain = false;
                        t._image.onload = null;
                        t._image = null;
                        return
                    } ! (t._allowMerageInAtlas && t._enableMerageInAtlas) ? t._createWebGlTexture() : (e.memorySize = 0, e._recreateLock = false);
                    t.completeCreate()
                };
                this._image.src = this._src
            } else {
                if (this._recreateLock) {
                    return
                } ! (this._allowMerageInAtlas && this._$5__enableMerageInAtlas) ? this._createWebGlTexture() : (this.memorySize = 0, this._recreateLock = false);
                this.completeCreate()
            }
        };
        t.disposeResource = function() {
            if (this._recreateLock) {
                this._needReleaseAgain = true
            }
            if (this._source) {
                Pe.mainContext.deleteTexture(this._source);
                this._source = null;
                this._image = null;
                this.memorySize = 0
            }
        };
        t.onresize = function() {
            this._w = this._image.width;
            this._h = this._image.height;
            Q.enabled && (this._w < Q.atlasLimitWidth && this._h < Q.atlasLimitHeight) ? this._allowMerageInAtlas = true: this._allowMerageInAtlas = false
        };
        t.clearAtlasSource = function() {
            this._image = null
        };
        l(0, t, "format",
        function() {
            return this._format
        });
        l(0, t, "enableMerageInAtlas",
        function() {
            return this._$5__enableMerageInAtlas
        },
        function(e) {
            this._$5__enableMerageInAtlas = e
        });
        l(0, t, "mipmap",
        function() {
            return this._mipmap
        });
        l(0, t, "allowMerageInAtlas",
        function() {
            return this._allowMerageInAtlas
        });
        l(0, t, "atlasSource",
        function() {
            return this._image
        });
        l(0, t, "onload", null,
        function(e) {
            var t = this;
            this._onload = e;
            this._image && (this._image.onload = this._onload != null ?
            function() {
                t.onresize();
                t._onload()
            }: null)
        });
        l(0, t, "onerror", null,
        function(e) {
            var t = this;
            this._onerror = e;
            this._image && (this._image.onerror = this._onerror != null ?
            function() {
                t._onerror()
            }: null)
        });
        return u
    } (I);
    C.__init([Le, K, Ne, Ae])
})(window, document, Laya);
if (typeof define === "function" && define.amd) {
    define("laya.core", ["require", "exports"],
    function(e, t) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: true
        });
        for (var i in Laya) {
            var n = Laya[i];
            n && n.__isclass && (t[i] = n)
        }
    })
} (function(e, t, se) {
    var i = se.un,
    n = se.uns,
    s = se.static,
    r = se.class,
    o = se.getset,
    m = se.__newvec;
    var l = laya.maths.Bezier,
    c = laya.utils.Browser,
    Ae = laya.utils.Byte,
    a = laya.events.Event;
    var h = laya.events.EventDispatcher,
    u = laya.display.Graphics,
    f = laya.resource.HTMLCanvas;
    var _ = laya.utils.Handler,
    d = laya.net.Loader,
    g = laya.maths.MathUtil,
    Pe = laya.maths.Matrix;
    var p = laya.display.Node,
    v = laya.maths.Point,
    y = laya.maths.Rectangle,
    S = laya.renders.Render;
    var I = laya.renders.RenderContext,
    C = laya.resource.Resource,
    b = laya.utils.RunDriver;
    var ae = laya.display.Sprite,
    w = laya.utils.Stat,
    Ue = laya.resource.Texture,
    x = laya.net.URL,
    R = laya.utils.Utils;
    var k = function() {
        function e() {
            this.nodes = null;
            this.name = null;
            this.playTime = NaN;
            this.bone3DMap = null;
            this.totalKeyframeDatasLength = 0
        }
        r(e, "laya.ani.AnimationContent");
        return e
    } ();
    var G = function() {
        function e() {
            this.name = null;
            this.parentIndex = 0;
            this.parent = null;
            this.keyframeWidth = 0;
            this.lerpType = 0;
            this.interpolationMethod = null;
            this.childs = null;
            this.keyFrame = null;
            this.playTime = NaN;
            this.extenData = null;
            this.dataOffset = 0
        }
        r(e, "laya.ani.AnimationNodeContent");
        return e
    } ();
    var L = function() {
        function e() {}
        r(e, "laya.ani.AnimationParser01");
        e.parse = function(e, t) {
            var i = t.__getBuffer();
            var n = 0,
            s = 0,
            a = 0,
            r = 0,
            o = 0,
            l = 0,
            h = 0;
            var u = t.readUTFString();
            e._aniClassName = u;
            var c = t.readUTFString().split("\n");
            var f = t.getUint8();
            var d = t.getUint32();
            var g = t.getUint32();
            var p;
            if (d > 0) p = i.slice(d, g);
            var _ = new Ae(p);
            if (g > 0) e._publicExtData = i.slice(g, i.byteLength);
            e._useParent = !!t.getUint8();
            e._anis.length = f;
            for (n = 0; n < f; n++) {
                var m = e._anis[n] = new k; {}
                m.nodes = new Array;
                var v = m.name = c[t.getUint16()];
                e._aniMap[v] = n;
                m.bone3DMap = {};
                m.playTime = t.getFloat32();
                var y = m.nodes.length = t.getUint8();
                m.totalKeyframeDatasLength = 0;
                for (s = 0; s < y; s++) {
                    var I = m.nodes[s] = new G; {}
                    I.childs = [];
                    var S = t.getInt16();
                    if (S >= 0) {
                        I.name = c[S];
                        m.bone3DMap[I.name] = s
                    }
                    I.keyFrame = new Array;
                    I.parentIndex = t.getInt16();
                    I.parentIndex == -1 ? I.parent = null: I.parent = m.nodes[I.parentIndex];
                    I.lerpType = t.getUint8();
                    var C = t.getUint32();
                    _.pos = C;
                    var b = I.keyframeWidth = _.getUint16();
                    m.totalKeyframeDatasLength += b;
                    if (I.lerpType === 0 || I.lerpType === 1) {
                        I.interpolationMethod = [];
                        I.interpolationMethod.length = b;
                        for (a = 0; a < b; a++) I.interpolationMethod[a] = W.interpolation[_.getUint8()]
                    }
                    if (I.parent != null) I.parent.childs.push(I);
                    var w = t.getUint16();
                    if (w > 0) {
                        I.extenData = i.slice(t.pos, t.pos + w);
                        t.pos += w
                    }
                    var x = t.getUint16();
                    I.keyFrame.length = x;
                    var R = 0;
                    var L;
                    for (a = 0, r = x; a < r; a++) {
                        L = I.keyFrame[a] = new F; {}
                        L.duration = t.getFloat32();
                        L.startTime = R;
                        if (I.lerpType === 2) {
                            L.interpolationData = [];
                            var T = t.getUint8();
                            var D = 0;
                            D = t.getFloat32();
                            switch (D) {
                            case 254:
                                L.interpolationData.length = b;
                                for (h = 0; h < b; h++) L.interpolationData[h] = 0;
                                break;
                            case 255:
                                L.interpolationData.length = b;
                                for (h = 0; h < b; h++) L.interpolationData[h] = 5;
                                break;
                            default:
                                L.interpolationData.push(D);
                                for (l = 1; l < T; l++) {
                                    L.interpolationData.push(t.getFloat32())
                                }
                            }
                        }
                        L.data = new Float32Array(b);
                        for (o = 0; o < b; o++) {
                            L.data[o] = t.getFloat32();
                            if (L.data[o] > -1e-8 && L.data[o] < 1e-8) L.data[o] = 0
                        }
                        R += L.duration
                    }
                    L.startTime = m.playTime;
                    I.playTime = m.playTime;
                    e._calculateKeyFrame(I, x, b)
                }
            }
        };
        return e
    } ();
    var T = function() {
        function C() {}
        r(C, "laya.ani.AnimationParser02");
        C.READ_DATA = function() {
            C._DATA.offset = C._reader.getUint32();
            C._DATA.size = C._reader.getUint32()
        };
        C.READ_BLOCK = function() {
            var e = C._BLOCK.count = C._reader.getUint16();
            var t = C._BLOCK.blockStarts = [];
            var i = C._BLOCK.blockLengths = [];
            for (var n = 0; n < e; n++) {
                t.push(C._reader.getUint32());
                i.push(C._reader.getUint32())
            }
        };
        C.READ_STRINGS = function() {
            var e = C._reader.getUint32();
            var t = C._reader.getUint16();
            var i = C._reader.pos;
            C._reader.pos = e + C._DATA.offset;
            for (var n = 0; n < t; n++) C._strings[n] = C._reader.readUTFString();
            C._reader.pos = i
        };
        C.parse = function(e, t) {
            C._templet = e;
            C._reader = t;
            var i = t.__getBuffer();
            C.READ_DATA();
            C.READ_BLOCK();
            C.READ_STRINGS();
            for (var n = 0,
            s = C._BLOCK.count; n < s; n++) {
                var a = t.getUint16();
                var r = C._strings[a];
                var o = C["READ_" + r];
                if (o == null) throw new Error("model file err,no this function:" + a + " " + r);
                else o.call()
            }
        };
        C.READ_ANIMATIONS = function() {
            var e = C._reader;
            var t = e.__getBuffer();
            var i = 0,
            n = 0,
            s = 0,
            a = 0,
            r = 0;
            var o = e.getUint16();
            var l = [];
            l.length = o;
            for (i = 0; i < o; i++) l[i] = W.interpolation[e.getByte()];
            var h = e.getUint8();
            C._templet._anis.length = h;
            for (i = 0; i < h; i++) {
                var u = C._templet._anis[i] = {};
                u.nodes = new Array;
                var c = u.name = C._strings[e.getUint16()];
                C._templet._aniMap[c] = i;
                u.bone3DMap = {};
                u.playTime = e.getFloat32();
                var f = u.nodes.length = e.getInt16();
                u.totalKeyframeDatasLength = 0;
                for (n = 0; n < f; n++) {
                    var d = u.nodes[n] = {};
                    d.keyframeWidth = o;
                    d.childs = [];
                    var g = e.getUint16();
                    if (g >= 0) {
                        d.name = C._strings[g];
                        u.bone3DMap[d.name] = n
                    }
                    d.keyFrame = new Array;
                    d.parentIndex = e.getInt16();
                    d.parentIndex == -1 ? d.parent = null: d.parent = u.nodes[d.parentIndex];
                    u.totalKeyframeDatasLength += o;
                    d.interpolationMethod = l;
                    if (d.parent != null) d.parent.childs.push(d);
                    var p = e.getUint16();
                    d.keyFrame.length = p;
                    var _ = null,
                    m = null;
                    for (s = 0, a = p; s < a; s++) {
                        _ = d.keyFrame[s] = {};
                        _.startTime = e.getFloat32();
                        m && (m.duration = _.startTime - m.startTime);
                        var v = C._DATA.offset;
                        var y = e.getUint32();
                        var I = o * 4;
                        var S = t.slice(v + y, v + y + I);
                        _.data = new Float32Array(S);
                        m = _
                    }
                    _.duration = 0;
                    d.playTime = u.playTime;
                    C._templet._calculateKeyFrame(d, p, o)
                }
            }
        };
        C._templet = null;
        C._reader = null;
        C._strings = [];
        s(C, ["_BLOCK",
        function() {
            return this._BLOCK = {
                count: 0
            }
        },
        "_DATA",
        function() {
            return this._DATA = {
                offset: 0,
                size: 0
            }
        }]);
        return C
    } ();
    var D = function() {
        function e() {}
        r(e, "laya.ani.AnimationState");
        e.stopped = 0;
        e.paused = 1;
        e.playing = 2;
        return e
    } ();
    var Ee = function() {
        function a() {
            this.name = null;
            this.root = null;
            this.parentBone = null;
            this.length = 10;
            this.transform = null;
            this.inheritScale = true;
            this.inheritRotation = true;
            this.rotation = NaN;
            this.resultRotation = NaN;
            this.d = -1;
            this._tempMatrix = null;
            this._sprite = null;
            this.resultTransform = new $e;
            this.resultMatrix = new Pe;
            this._children = []
        }
        r(a, "laya.ani.bone.Bone");
        var e = a.prototype;
        e.setTempMatrix = function(e) {
            this._tempMatrix = e;
            var t = 0,
            i = 0;
            var n;
            for (t = 0, i = this._children.length; t < i; t++) {
                n = this._children[t];
                n.setTempMatrix(this._tempMatrix)
            }
        };
        e.update = function(e) {
            this.rotation = this.transform.skX;
            var t;
            if (e) {
                t = this.resultTransform.getMatrix();
                Pe.mul(t, e, this.resultMatrix);
                this.resultRotation = this.rotation
            } else {
                this.resultRotation = this.rotation + this.parentBone.resultRotation;
                if (this.parentBone) {
                    if (this.inheritRotation && this.inheritScale) {
                        t = this.resultTransform.getMatrix();
                        Pe.mul(t, this.parentBone.resultMatrix, this.resultMatrix)
                    } else {
                        var i = 0;
                        var n = this.parentBone;
                        var s = NaN;
                        var a = NaN;
                        var r = NaN;
                        var o = this.parentBone.resultMatrix;
                        t = this.resultTransform.getMatrix();
                        var l = o.a * t.tx + o.c * t.ty + o.tx;
                        var h = o.b * t.tx + o.d * t.ty + o.ty;
                        var u = new Pe;
                        if (this.inheritRotation) {
                            s = Math.atan2(n.resultMatrix.b, n.resultMatrix.a);
                            a = Math.cos(s),
                            r = Math.sin(s);
                            u.setTo(a, r, -r, a, 0, 0);
                            Pe.mul(this._tempMatrix, u, Pe.TEMP);
                            Pe.TEMP.copyTo(u);
                            t = this.resultTransform.getMatrix();
                            Pe.mul(t, u, this.resultMatrix);
                            if (this.resultTransform.scX * this.resultTransform.scY < 0) {
                                this.resultMatrix.rotate(Math.PI * .5)
                            }
                            this.resultMatrix.tx = l;
                            this.resultMatrix.ty = h
                        } else if (this.inheritScale) {
                            t = this.resultTransform.getMatrix();
                            Pe.TEMP.identity();
                            Pe.TEMP.d = this.d;
                            Pe.mul(t, Pe.TEMP, this.resultMatrix);
                            this.resultMatrix.tx = l;
                            this.resultMatrix.ty = h
                        } else {
                            t = this.resultTransform.getMatrix();
                            Pe.TEMP.identity();
                            Pe.TEMP.d = this.d;
                            Pe.mul(t, Pe.TEMP, this.resultMatrix);
                            this.resultMatrix.tx = l;
                            this.resultMatrix.ty = h
                        }
                    }
                } else {
                    t = this.resultTransform.getMatrix();
                    t.copyTo(this.resultMatrix)
                }
            }
            var c = 0,
            f = 0;
            var d;
            for (c = 0, f = this._children.length; c < f; c++) {
                d = this._children[c];
                d.update()
            }
        };
        e.updateChild = function() {
            var e = 0,
            t = 0;
            var i;
            for (e = 0, t = this._children.length; e < t; e++) {
                i = this._children[e];
                i.update()
            }
        };
        e.setRotation = function(e) {
            if (this._sprite) {
                this._sprite.rotation = e * 180 / Math.PI
            }
        };
        e.updateDraw = function(e, t) {
            if (!a.ShowBones || a.ShowBones[this.name]) {
                if (this._sprite) {
                    this._sprite.x = e + this.resultMatrix.tx;
                    this._sprite.y = t + this.resultMatrix.ty
                } else {
                    this._sprite = new ae;
                    this._sprite.graphics.drawCircle(0, 0, 5, "#ff0000");
                    this._sprite.graphics.drawLine(0, 0, this.length, 0, "#00ff00");
                    this._sprite.graphics.fillText(this.name, 0, 0, "20px Arial", "#00ff00", "center");
                    se.stage.addChild(this._sprite);
                    this._sprite.x = e + this.resultMatrix.tx;
                    this._sprite.y = t + this.resultMatrix.ty
                }
            }
            var i = 0,
            n = 0;
            var s;
            for (i = 0, n = this._children.length; i < n; i++) {
                s = this._children[i];
                s.updateDraw(e, t)
            }
        };
        e.addChild = function(e) {
            this._children.push(e);
            e.parentBone = this
        };
        e.findBone = function(e) {
            if (this.name == e) {
                return this
            } else {
                var t = 0,
                i = 0;
                var n;
                var s;
                for (t = 0, i = this._children.length; t < i; t++) {
                    n = this._children[t];
                    s = n.findBone(e);
                    if (s) {
                        return s
                    }
                }
            }
            return null
        };
        e.localToWorld = function(e) {
            var t = e[0];
            var i = e[1];
            e[0] = t * this.resultMatrix.a + i * this.resultMatrix.c + this.resultMatrix.tx;
            e[1] = t * this.resultMatrix.b + i * this.resultMatrix.d + this.resultMatrix.ty
        };
        a.ShowBones = {};
        return a
    } ();
    var Ne = function() {
        function I() {
            this.name = null;
            this.parent = null;
            this.attachmentName = null;
            this.srcDisplayIndex = -1;
            this.type = "src";
            this.templet = null;
            this.currSlotData = null;
            this.currTexture = null;
            this.currDisplayData = null;
            this.displayIndex = -1;
            this.originalIndex = -1;
            this._diyTexture = null;
            this._parentMatrix = null;
            this._resultMatrix = null;
            this._replaceDic = {};
            this._curDiyUV = null;
            this._curDiyVS = null;
            this._skinSprite = null;
            this.deformData = null;
            this._mVerticleArr = null
        }
        r(I, "laya.ani.bone.BoneSlot");
        var e = I.prototype;
        e.showSlotData = function(e, t) {
            t === void 0 && (t = true);
            this.currSlotData = e;
            if (t) this.displayIndex = this.srcDisplayIndex;
            this.currDisplayData = null;
            this.currTexture = null
        };
        e.showDisplayByName = function(e) {
            if (this.currSlotData) {
                this.showDisplayByIndex(this.currSlotData.getDisplayByName(e))
            }
        };
        e.replaceDisplayByName = function(e, t) {
            if (!this.currSlotData) return;
            var i = 0;
            i = this.currSlotData.getDisplayByName(e);
            var n = 0;
            n = this.currSlotData.getDisplayByName(t);
            this.replaceDisplayByIndex(i, n)
        };
        e.replaceDisplayByIndex = function(e, t) {
            if (!this.currSlotData) return;
            this._replaceDic[e] = t;
            if (this.originalIndex == e) {
                this.showDisplayByIndex(e)
            }
        };
        e.showDisplayByIndex = function(e) {
            this.originalIndex = e;
            if (this._replaceDic[e] != null) e = this._replaceDic[e];
            if (this.currSlotData && e > -1 && e < this.currSlotData.displayArr.length) {
                this.displayIndex = e;
                this.currDisplayData = this.currSlotData.displayArr[e];
                if (this.currDisplayData) {
                    var t = this.currDisplayData.name;
                    this.currTexture = this.templet.getTexture(t);
                    if (this.currTexture && this.currDisplayData.type == 0 && this.currDisplayData.uvs && (!S.isConchApp || S.isConchApp && ae.RUNTIMEVERION > "0.9.15")) {
                        this.currTexture = this.currDisplayData.createTexture(this.currTexture)
                    }
                }
            } else {
                this.displayIndex = -1;
                this.currDisplayData = null;
                this.currTexture = null
            }
        };
        e.replaceSkin = function(e) {
            this._diyTexture = e;
            if (this._curDiyUV) this._curDiyUV.length = 0;
            if (this.currDisplayData && this._diyTexture == this.currDisplayData.texture) {
                this._diyTexture = null
            }
        };
        e.setParentMatrix = function(e) {
            this._parentMatrix = e
        };
        e.draw = function(e, t, i, n) {
            i === void 0 && (i = false);
            n === void 0 && (n = 1);
            if (this._diyTexture == null && this.currTexture == null || this.currDisplayData == null) {
                if (! (this.currDisplayData && this.currDisplayData.type == 3)) {
                    return
                }
            }
            var s = this.currTexture;
            if (this._diyTexture) s = this._diyTexture;
            var a;
            switch (this.currDisplayData.type) {
            case 0:
                if (e) {
                    var r = this.getDisplayMatrix();
                    if (this._parentMatrix) {
                        var o = false;
                        if (r) {
                            Pe.mul(r, this._parentMatrix, Pe.TEMP);
                            var l;
                            if (i) {
                                if (this._resultMatrix == null) this._resultMatrix = new Pe;
                                l = this._resultMatrix
                            } else {
                                l = new Pe
                            }
                            if (!S.isWebGL && this.currDisplayData.uvs || S.isWebGL && this._diyTexture && this.currDisplayData.uvs) {
                                var h = I._tempMatrix;
                                h.identity();
                                if (this.currDisplayData.uvs[1] > this.currDisplayData.uvs[5]) {
                                    h.d = -1
                                }
                                if (this.currDisplayData.uvs[0] > this.currDisplayData.uvs[4] && this.currDisplayData.uvs[1] > this.currDisplayData.uvs[5]) {
                                    o = true;
                                    h.rotate( - Math.PI / 2)
                                }
                                Pe.mul(h, Pe.TEMP, l)
                            } else {
                                Pe.TEMP.copyTo(l)
                            }
                            if (o) {
                                e.drawTexture(s, -this.currDisplayData.height / 2, -this.currDisplayData.width / 2, this.currDisplayData.height, this.currDisplayData.width, l)
                            } else {
                                e.drawTexture(s, -this.currDisplayData.width / 2, -this.currDisplayData.height / 2, this.currDisplayData.width, this.currDisplayData.height, l)
                            }
                        }
                    }
                }
                break;
            case 1:
                if (i) {
                    if (this._skinSprite == null) {
                        this._skinSprite = I.createSkinMesh()
                    }
                    a = this._skinSprite
                } else {
                    a = I.createSkinMesh()
                }
                if (a == null) {
                    return
                };
                var u;
                var c = 1;
                var f = 1;
                var d = 1;
                var g = 1;
                if (this.currDisplayData.bones == null) {
                    var p = this.currDisplayData.weights;
                    if (this.deformData) {
                        p = this.deformData
                    }
                    var _;
                    if (this._diyTexture) {
                        if (!this._curDiyUV) {
                            this._curDiyUV = []
                        }
                        if (this._curDiyUV.length == 0) {
                            this._curDiyUV = N.getRelativeUV(this.currTexture.uv, this.currDisplayData.uvs, this._curDiyUV);
                            this._curDiyUV = N.getAbsoluteUV(this._diyTexture.uv, this._curDiyUV, this._curDiyUV)
                        }
                        _ = this._curDiyUV
                    } else {
                        _ = this.currDisplayData.uvs
                    }
                    this._mVerticleArr = p;
                    var m = this.currDisplayData.triangles.length / 3;
                    u = this.currDisplayData.triangles;
                    a.init2(s, null, u, this._mVerticleArr, _);
                    var v = this.getDisplayMatrix();
                    if (this._parentMatrix) {
                        if (v) {
                            Pe.mul(v, this._parentMatrix, Pe.TEMP);
                            var y;
                            if (i) {
                                if (this._resultMatrix == null) this._resultMatrix = new Pe;
                                y = this._resultMatrix
                            } else {
                                y = new Pe
                            }
                            Pe.TEMP.copyTo(y);
                            a.transform = y
                        }
                    }
                } else {
                    this.skinMesh(t, a, n)
                }
                e.drawSkin(a);
                break;
            case 2:
                if (i) {
                    if (this._skinSprite == null) {
                        this._skinSprite = I.createSkinMesh()
                    }
                    a = this._skinSprite
                } else {
                    a = I.createSkinMesh()
                }
                if (a == null) {
                    return
                }
                this.skinMesh(t, a, n);
                e.drawSkin(a);
                break;
            case 3:
                break
            }
        };
        e.skinMesh = function(e, t, i) {
            var n = this.currTexture;
            var s = this.currDisplayData.bones;
            var a;
            if (this._diyTexture) {
                n = this._diyTexture;
                if (!this._curDiyUV) {
                    this._curDiyUV = []
                }
                if (this._curDiyUV.length == 0) {
                    this._curDiyUV = N.getRelativeUV(this.currTexture.uv, this.currDisplayData.uvs, this._curDiyUV);
                    this._curDiyUV = N.getAbsoluteUV(this._diyTexture.uv, this._curDiyUV, this._curDiyUV)
                }
                a = this._curDiyUV
            } else {
                a = this.currDisplayData.uvs
            }
            var r = this.currDisplayData.weights;
            var o = this.currDisplayData.triangles;
            var l;
            var h = 0;
            var u = 0;
            var c = 0;
            var f;
            var d = NaN;
            var g = NaN;
            var p = 0;
            var _ = 0;
            var m = [];
            var v = 0,
            y = 0,
            I = 0;
            var S = 1;
            var C = 1;
            var b = 1;
            var w = i;
            if (this.deformData && this.deformData.length > 0) {
                var x = 0;
                for (v = 0, I = s.length; v < I;) {
                    c = s[v++] + v;
                    h = 0,
                    u = 0;
                    for (; v < c; v++) {
                        f = e[s[v]];
                        d = r[p] + this.deformData[x++];
                        g = r[p + 1] + this.deformData[x++];
                        _ = r[p + 2];
                        h += (d * f.a + g * f.c + f.tx) * _;
                        u += (d * f.b + g * f.d + f.ty) * _;
                        p += 3
                    }
                    m.push(h, u)
                }
            } else {
                for (v = 0, I = s.length; v < I;) {
                    c = s[v++] + v;
                    h = 0,
                    u = 0;
                    for (; v < c; v++) {
                        f = e[s[v]];
                        d = r[p];
                        g = r[p + 1];
                        _ = r[p + 2];
                        h += (d * f.a + g * f.c + f.tx) * _;
                        u += (d * f.b + g * f.d + f.ty) * _;
                        p += 3
                    }
                    m.push(h, u)
                }
            }
            this._mVerticleArr = m;
            l = o;
            t.init2(n, null, l, this._mVerticleArr, a)
        };
        e.drawBonePoint = function(e) {
            if (e && this._parentMatrix) {
                e.drawCircle(this._parentMatrix.tx, this._parentMatrix.ty, 5, "#ff0000")
            }
        };
        e.getDisplayMatrix = function() {
            if (this.currDisplayData) {
                return this.currDisplayData.transform.getMatrix()
            }
            return null
        };
        e.getMatrix = function() {
            return this._resultMatrix
        };
        e.copy = function() {
            var e = new I;
            e.type = "copy";
            e.name = this.name;
            e.attachmentName = this.attachmentName;
            e.srcDisplayIndex = this.srcDisplayIndex;
            e.parent = this.parent;
            e.displayIndex = this.displayIndex;
            e.templet = this.templet;
            e.currSlotData = this.currSlotData;
            e.currTexture = this.currTexture;
            e.currDisplayData = this.currDisplayData;
            return e
        };
        I.createSkinMesh = function() {
            if (S.isWebGL || S.isConchApp) {
                return b.skinAniSprite()
            } else {
                if (!S.isWebGL) {
                    if (j.useSimpleMeshInCanvas) {
                        return new Y
                    } else {
                        return new z
                    }
                }
            }
            return null
        };
        s(I, ["_tempMatrix",
        function() {
            return this._tempMatrix = new Pe
        }]);
        return I
    } ();
    var M = function() {
        function e() {
            this.mesh = null;
            this.transform = null;
            this.context = null;
            this.mode = 0
        }
        r(e, "laya.ani.bone.canvasmesh.CanvasMeshRender");
        var t = e.prototype;
        t.renderToContext = function(e) {
            this.context = e.ctx || e;
            if (this.mesh) {
                if (this.mode == 0) {
                    this._renderWithIndexes(this.mesh)
                } else {
                    this._renderNoIndexes(this.mesh)
                }
            }
        };
        t._renderNoIndexes = function(e) {
            var t = 0,
            i = e.vertices.length / 2;
            var n = 0;
            for (t = 0; t < i - 2; t++) {
                n = t * 2;
                this._renderDrawTriangle(e, n, n + 2, n + 4)
            }
        };
        t._renderWithIndexes = function(e) {
            var t = e.indexes;
            var i = 0,
            n = t.length;
            for (i = 0; i < n; i += 3) {
                var s = t[i] * 2;
                var a = t[i + 1] * 2;
                var r = t[i + 2] * 2;
                this._renderDrawTriangle(e, s, a, r)
            }
        };
        t._renderDrawTriangle = function(e, t, i, n) {
            var s = this.context;
            var a = e.uvs;
            var r = e.vertices;
            var o = e.texture;
            var l = o.bitmap;
            var h = l.source;
            var u = o.width;
            var c = o.height;
            var f = l.width;
            var d = l.height;
            var g = NaN;
            var p = NaN;
            var _ = NaN;
            var m = NaN;
            var v = NaN;
            var y = NaN;
            if (e.useUvTransform) {
                var I = e.uvTransform;
                g = (a[t] * I.a + a[t + 1] * I.c + I.tx) * f;
                p = (a[i] * I.a + a[i + 1] * I.c + I.tx) * f;
                _ = (a[n] * I.a + a[n + 1] * I.c + I.tx) * f;
                m = (a[t] * I.b + a[t + 1] * I.d + I.ty) * d;
                v = (a[i] * I.b + a[i + 1] * I.d + I.ty) * d;
                y = (a[n] * I.b + a[n + 1] * I.d + I.ty) * d
            } else {
                g = a[t] * f;
                p = a[i] * f;
                _ = a[n] * f;
                m = a[t + 1] * d;
                v = a[i + 1] * d;
                y = a[n + 1] * d
            }
            var S = r[t];
            var C = r[i];
            var b = r[n];
            var w = r[t + 1];
            var x = r[i + 1];
            var R = r[n + 1];
            if (e.canvasPadding > 0) {
                var L = e.canvasPadding;
                var T = e.canvasPadding;
                var D = (S + C + b) / 3;
                var k = (w + x + R) / 3;
                var G = S - D;
                var M = w - k;
                var B = Math.sqrt(G * G + M * M);
                S = D + G / B * (B + L);
                w = k + M / B * (B + T);
                G = C - D;
                M = x - k;
                B = Math.sqrt(G * G + M * M);
                C = D + G / B * (B + L);
                x = k + M / B * (B + T);
                G = b - D;
                M = R - k;
                B = Math.sqrt(G * G + M * M);
                b = D + G / B * (B + L);
                R = k + M / B * (B + T)
            }
            s.save();
            if (this.transform) {
                var A = this.transform;
                s.transform(A.a, A.b, A.c, A.d, A.tx, A.ty)
            }
            s.beginPath();
            s.moveTo(S, w);
            s.lineTo(C, x);
            s.lineTo(b, R);
            s.closePath();
            s.clip();
            var P = g * v + m * _ + p * y - v * _ - m * p - g * y;
            var U = 1 / P;
            var E = S * v + m * b + C * y - v * b - m * C - S * y;
            var N = g * C + S * _ + p * b - C * _ - S * p - g * b;
            var F = g * v * b + m * C * _ + S * p * y - S * v * _ - m * p * b - g * C * y;
            var O = w * v + m * R + x * y - v * R - m * x - w * y;
            var V = g * x + w * _ + p * R - x * _ - w * p - g * R;
            var q = g * v * R + m * x * _ + w * p * y - w * v * _ - m * p * R - g * x * y;
            s.transform(E * U, O * U, N * U, V * U, F * U, q * U);
            s.drawImage(h, o.uv[0] * f, o.uv[1] * d, u, c, o.uv[0] * f, o.uv[1] * d, u, c);
            s.restore()
        };
        return e
    } ();
    var B = function() {
        function e() {
            this.texture = null;
            this.uvs = [0, 0, 1, 0, 1, 1, 0, 1];
            this.vertices = [0, 0, 100, 0, 100, 100, 0, 100];
            this.indexes = [0, 1, 3, 3, 1, 2];
            this.uvTransform = null;
            this.useUvTransform = false;
            this.canvasPadding = 1
        }
        r(e, "laya.ani.bone.canvasmesh.MeshData");
        var t = e.prototype;
        t.getBounds = function() {
            return y._getWrapRec(this.vertices)
        };
        return e
    } ();
    var Fe = function() {
        function e() {
            this.skinName = null;
            this.deformSlotDataList = []
        }
        r(e, "laya.ani.bone.DeformAniData");
        return e
    } ();
    var Oe = function() {
        function e() {
            this.deformSlotDisplayList = []
        }
        r(e, "laya.ani.bone.DeformSlotData");
        return e
    } ();
    var Ve = function() {
        function e() {
            this.boneSlot = null;
            this.slotIndex = -1;
            this.attachment = null;
            this.deformData = null;
            this.frameIndex = 0;
            this.timeList = [];
            this.vectices = [];
            this.tweenKeyList = []
        }
        r(e, "laya.ani.bone.DeformSlotDisplayData");
        var t = e.prototype;
        t.binarySearch1 = function(e, t) {
            var i = 0;
            var n = e.length - 2;
            if (n == 0) return 1;
            var s = n >>> 1;
            while (true) {
                if (e[Math.floor(s + 1)] <= t) i = s + 1;
                else n = s;
                if (i == n) return i + 1;
                s = i + n >>> 1
            }
            return 0
        };
        t.apply = function(e, t, i) {
            i === void 0 && (i = 1);
            e += .05;
            if (this.timeList.length <= 0) {
                return
            }
            var n = 0;
            var s = 0;
            var a = this.timeList[0];
            if (e < a) {
                return
            }
            var r = this.vectices[0].length;
            var o = [];
            var l = this.binarySearch1(this.timeList, e);
            this.frameIndex = l;
            if (e >= this.timeList[this.timeList.length - 1]) {
                var h = this.vectices[this.vectices.length - 1];
                if (i < 1) {
                    for (n = 0; n < r; n++) {
                        o[n] += (h[n] - o[n]) * i
                    }
                } else {
                    for (n = 0; n < r; n++) {
                        o[n] = h[n]
                    }
                }
                this.deformData = o;
                return
            }
            var u = this.tweenKeyList[this.frameIndex];
            var c = this.vectices[this.frameIndex - 1];
            var f = this.vectices[this.frameIndex];
            var d = this.timeList[this.frameIndex - 1];
            var g = this.timeList[this.frameIndex];
            if (this.tweenKeyList[l - 1]) {
                i = (e - d) / (g - d)
            } else {
                i = 0
            }
            var p = NaN;
            for (n = 0; n < r; n++) {
                p = c[n];
                o[n] = p + (f[n] - p) * i
            }
            this.deformData = o
        };
        return e
    } ();
    var qe = function() {
        function e() {
            this.time = NaN;
            this.drawOrder = []
        }
        r(e, "laya.ani.bone.DrawOrderData");
        return e
    } ();
    var ze = function() {
        function e() {
            this.name = null;
            this.intValue = 0;
            this.floatValue = NaN;
            this.stringValue = null;
            this.time = NaN
        }
        r(e, "laya.ani.bone.EventData");
        return e
    } ();
    var A = function() {
        function ne(e, t) {
            this._targetBone = null;
            this._bones = null;
            this._data = null;
            this.name = null;
            this.mix = NaN;
            this.bendDirection = NaN;
            this.isSpine = true;
            this._sp = null;
            this.isDebug = false;
            this._data = e;
            this._targetBone = t[e.targetBoneIndex];
            this.isSpine = e.isSpine;
            if (this._bones == null) this._bones = [];
            this._bones.length = 0;
            for (var i = 0,
            n = e.boneIndexs.length; i < n; i++) {
                this._bones.push(t[e.boneIndexs[i]])
            }
            this.name = e.name;
            this.mix = e.mix;
            this.bendDirection = e.bendDirection
        }
        r(ne, "laya.ani.bone.IkConstraint");
        var e = ne.prototype;
        e.apply = function() {
            switch (this._bones.length) {
            case 1:
                this._applyIk1(this._bones[0], this._targetBone.resultMatrix.tx, this._targetBone.resultMatrix.ty, this.mix);
                break;
            case 2:
                if (this.isSpine) {
                    this._applyIk2(this._bones[0], this._bones[1], this._targetBone.resultMatrix.tx, this._targetBone.resultMatrix.ty, this.bendDirection, this.mix)
                } else {
                    this._applyIk3(this._bones[0], this._bones[1], this._targetBone.resultMatrix.tx, this._targetBone.resultMatrix.ty, this.bendDirection, this.mix)
                }
                break
            }
        };
        e._applyIk1 = function(e, t, i, n) {
            var s = e.parentBone;
            var a = 1 / (s.resultMatrix.a * s.resultMatrix.d - s.resultMatrix.b * s.resultMatrix.c);
            var r = t - s.resultMatrix.tx;
            var o = i - s.resultMatrix.ty;
            var l = (r * s.resultMatrix.d - o * s.resultMatrix.c) * a - e.transform.x;
            var h = (o * s.resultMatrix.a - r * s.resultMatrix.b) * a - e.transform.y;
            var u = Math.atan2(h, l) * ne.radDeg - 0 - e.transform.skX;
            if (e.transform.scX < 0) u += 180;
            if (u > 180) u -= 360;
            else if (u < -180) u += 360;
            e.transform.skX = e.transform.skY = e.transform.skX + u * n;
            e.update()
        };
        e.updatePos = function(e, t) {
            if (this._sp) {
                this._sp.pos(e, t)
            }
        };
        e._applyIk2 = function(e, t, i, n, s, a) {
            if (a == 0) {
                return
            }
            var r = e.resultTransform.x,
            o = e.resultTransform.y;
            var l = e.transform.scX,
            h = e.transform.scY;
            var u = t.transform.scX;
            var c = 0,
            f = 0,
            d = 0;
            if (l < 0) {
                l = -l;
                c = 180;
                d = -1
            } else {
                c = 0;
                d = 1
            }
            if (h < 0) {
                h = -h;
                d = -d
            }
            if (u < 0) {
                u = -u;
                f = 180
            } else {
                f = 0
            }
            var g = t.resultTransform.x,
            p = NaN,
            _ = NaN,
            m = NaN;
            var v = e.resultMatrix.a,
            y = e.resultMatrix.c;
            var I = e.resultMatrix.b,
            S = e.resultMatrix.d;
            var C = Math.abs(l - h) <= 1e-4;
            if (!C) {
                p = 0;
                _ = v * g + e.resultMatrix.tx;
                m = I * g + e.resultMatrix.ty
            } else {
                p = t.resultTransform.y;
                _ = v * g + y * p + e.resultMatrix.tx;
                m = I * g + S * p + e.resultMatrix.ty
            }
            if (this.isDebug) {
                if (!this._sp) {
                    this._sp = new ae;
                    se.stage.addChild(this._sp)
                }
                this._sp.graphics.clear();
                this._sp.graphics.drawCircle(i, n, 15, "#ffff00");
                this._sp.graphics.drawCircle(_, m, 15, "#ff00ff")
            }
            e.setRotation(Math.atan2(m - e.resultMatrix.ty, _ - e.resultMatrix.tx));
            var b = e.parentBone;
            v = b.resultMatrix.a;
            y = b.resultMatrix.c;
            I = b.resultMatrix.b;
            S = b.resultMatrix.d;
            var w = 1 / (v * S - y * I);
            var x = i - b.resultMatrix.tx,
            R = n - b.resultMatrix.ty;
            var L = (x * S - R * y) * w - r;
            var T = (R * v - x * I) * w - o;
            x = _ - b.resultMatrix.tx;
            R = m - b.resultMatrix.ty;
            var D = (x * S - R * y) * w - r;
            var k = (R * v - x * I) * w - o;
            var G = Math.sqrt(D * D + k * k);
            var M = t.length * u;
            var B = NaN,
            A = NaN;
            if (C) {
                M *= l;
                var P = (L * L + T * T - G * G - M * M) / (2 * G * M);
                if (P < -1) P = -1;
                else if (P > 1) P = 1;
                A = Math.acos(P) * s;
                v = G + M * P;
                y = M * Math.sin(A);
                B = Math.atan2(T * v - L * y, L * v + T * y)
            } else {
                v = l * M;
                y = h * M;
                var U = v * v,
                E = y * y,
                N = L * L + T * T,
                F = Math.atan2(T, L);
                I = E * G * G + U * N - U * E;
                var O = -2 * E * G,
                V = E - U;
                S = O * O - 4 * V * I;
                if (S > 0) {
                    var q = Math.sqrt(S);
                    if (O < 0) q = -q;
                    q = -(O + q) / 2;
                    var z = q / V,
                    W = I / q;
                    var H = Math.abs(z) < Math.abs(W) ? z: W;
                    if (H * H <= N) {
                        R = Math.sqrt(N - H * H) * s;
                        B = F - Math.atan2(R, H);
                        A = Math.atan2(R / h, (H - G) / l)
                    }
                }
                var Y = 0,
                j = Number.MAX_VALUE,
                X = 0,
                J = 0;
                var $ = 0,
                K = 0,
                Q = 0,
                Z = 0;
                x = G + v;
                S = x * x;
                if (S > K) {
                    $ = 0;
                    K = S;
                    Q = x
                }
                x = G - v;
                S = x * x;
                if (S < j) {
                    Y = Math.PI;
                    j = S;
                    X = x
                }
                var ee = Math.acos( - v * G / (U - E));
                x = v * Math.cos(ee) + G;
                R = y * Math.sin(ee);
                S = x * x + R * R;
                if (S < j) {
                    Y = ee;
                    j = S;
                    X = x;
                    J = R
                }
                if (S > K) {
                    $ = ee;
                    K = S;
                    Q = x;
                    Z = R
                }
                if (N <= (j + K) / 2) {
                    B = F - Math.atan2(J * s, X);
                    A = Y * s
                } else {
                    B = F - Math.atan2(Z * s, Q);
                    A = $ * s
                }
            }
            var te = Math.atan2(p, g) * d;
            var ie = e.resultTransform.skX;
            B = (B - te) * ne.radDeg + c - ie;
            if (B > 180) B -= 360;
            else if (B < -180) B += 360;
            e.resultTransform.x = r;
            e.resultTransform.y = o;
            e.resultTransform.skX = e.resultTransform.skY = ie + B * a;
            ie = t.resultTransform.skX;
            ie = ie % 360;
            A = ((A + te) * ne.radDeg - 0) * d + f - ie;
            if (A > 180) A -= 360;
            else if (A < -180) A += 360;
            t.resultTransform.x = g;
            t.resultTransform.y = p;
            t.resultTransform.skX = t.resultTransform.skY = t.resultTransform.skY + A * a;
            e.update()
        };
        e._applyIk3 = function(e, t, i, n, s, a) {
            if (a == 0) {
                return
            }
            var r = NaN,
            o = NaN;
            var l = t.resultMatrix.a * t.length;
            var h = t.resultMatrix.b * t.length;
            var u = l * l + h * h;
            var c = Math.sqrt(u);
            var f = e.resultMatrix.tx;
            var d = e.resultMatrix.ty;
            var g = t.resultMatrix.tx;
            var p = t.resultMatrix.ty;
            var _ = g - f;
            var m = p - d;
            var v = _ * _ + m * m;
            var y = Math.sqrt(v);
            _ = i - e.resultMatrix.tx;
            m = n - e.resultMatrix.ty;
            var I = _ * _ + m * m;
            var S = Math.sqrt(I);
            var C = 0;
            if (c + y <= S || S + c <= y || S + y <= c) {
                var b = NaN;
                if (c + y <= S) {
                    b = 1
                } else {
                    b = -1
                }
                g = f + b * (i - f) * y / S;
                p = d + b * (n - d) * y / S
            } else {
                var w = (v - u + I) / (2 * I);
                var x = Math.sqrt(v - w * w * I) / S;
                var R = f + _ * w;
                var L = d + m * w;
                var T = -m * x;
                var D = _ * x;
                if (s > 0) {
                    g = R - T;
                    p = L - D
                } else {
                    g = R + T;
                    p = L + D
                }
            }
            r = g;
            o = p;
            if (this.isDebug) {
                if (!this._sp) {
                    this._sp = new ae;
                    se.stage.addChild(this._sp)
                }
                this._sp.graphics.clear();
                this._sp.graphics.drawCircle(f, d, 15, "#ff00ff");
                this._sp.graphics.drawCircle(i, n, 15, "#ffff00");
                this._sp.graphics.drawCircle(r, o, 15, "#ff00ff")
            }
            var k = NaN;
            k = Math.atan2(o - e.resultMatrix.ty, r - e.resultMatrix.tx);
            e.setRotation(k);
            var G;
            G = ne._tempMatrix;
            G.identity();
            G.rotate(k);
            G.scale(e.resultMatrix.getScaleX(), e.resultMatrix.getScaleY());
            G.translate(e.resultMatrix.tx, e.resultMatrix.ty);
            G.copyTo(e.resultMatrix);
            e.updateChild();
            var M = NaN;
            M = Math.atan2(n - o, i - r);
            t.setRotation(M);
            var B;
            B = ne._tempMatrix;
            B.identity();
            B.rotate(M);
            B.scale(t.resultMatrix.getScaleX(), t.resultMatrix.getScaleY());
            B.translate(r, o);
            G.copyTo(t.resultMatrix);
            t.updateChild()
        };
        s(ne, ["radDeg",
        function() {
            return this.radDeg = 180 / Math.PI
        },
        "degRad",
        function() {
            return this.degRad = Math.PI / 180
        },
        "_tempMatrix",
        function() {
            return this._tempMatrix = new Pe
        }]);
        return ne
    } ();
    var We = function() {
        function e() {
            this.name = null;
            this.targetBoneName = null;
            this.bendDirection = 1;
            this.mix = 1;
            this.isSpine = true;
            this.targetBoneIndex = -1;
            this.boneNames = [];
            this.boneIndexs = []
        }
        r(e, "laya.ani.bone.IkConstraintData");
        return e
    } ();
    var P = function() {
        function g() {}
        r(g, "laya.ani.bone.MeshTools");
        g.findEdge = function(e, t, i) {
            t === void 0 && (t = 0);
            i === void 0 && (i = true);
            var n = 0,
            s = 0;
            var a = 0;
            s = e.length;
            a = -1;
            for (n = 0; n < s; n += 2) {
                if (a < 0 || i == e[a + t] < e[n + t]) {
                    a = n
                }
            }
            return a
        };
        g.findBestTriangle = function(e) {
            var t = 0;
            t = g.findEdge(e, 1, true);
            var i = 0;
            i = g.findEdge(e, 1, false);
            var n = 0;
            n = g.findEdge(e, 0, true);
            var s = 0;
            s = g.findEdge(e, 0, false);
            var a;
            a = g._bestTriangle;
            a.length = 0;
            a.push(n, s);
            if (a.indexOf(t) < 0) a.push(t);
            if (a.indexOf(i) < 0) a.push(i);
            return a
        };
        g.solveMesh = function(e, t) {
            t = t || [];
            t.length = 0;
            var i;
            i = e.uvs;
            var n;
            n = e.vertices;
            var s;
            var a;
            a = g.findBestTriangle(i);
            var r = 0;
            var o = 0;
            var l = 0;
            r = a[0];
            o = a[1];
            l = a[2];
            g._absArr.length = 0;
            var h;
            if (g.isNormalUV(e.texture.uv)) {
                g.adptTexture(e)
            }
            s = g.solvePoints(e.texture.uv, i[r], i[r + 1], i[o] - i[r], i[o + 1] - i[r + 1], i[l] - i[r], i[l + 1] - i[r + 1], g._absArr);
            h = g.transPoints(s, n[r], n[r + 1], n[o] - n[r], n[o + 1] - n[r + 1], n[l] - n[r], n[l + 1] - n[r + 1], t);
            return h
        };
        g.findWrapRect = function(e) {
            var t = 0;
            t = g.findEdge(e, 1, true);
            var i = 0;
            i = g.findEdge(e, 1, false);
            var n = 0;
            n = g.findEdge(e, 0, true);
            var s = 0;
            s = g.findEdge(e, 0, false);
            var a = NaN;
            a = e[n];
            var r = NaN;
            r = e[s];
            var o = NaN;
            o = e[t + 1];
            var l = NaN;
            l = e[i + 1];
            var h;
            return [r, l, a - r, o - l]
        };
        g.adptTexture = function(e) {
            var t;
            t = g.findWrapRect(e.uvs);
            var i;
            var n;
            i = e.texture;
            var s = i.width;
            var a = i.height;
            n = Ue.create(i, t[0] * s, t[1] * a, t[2] * s, t[3] * a);
            e.texture = n
        };
        g.isNormalUV = function(e) {
            return e[0] == 0 && e[1] == 0 && e[4] == 1 && e[5] == 1
        };
        g.solvePoints = function(e, t, i, n, s, a, r, o) {
            o = o || [];
            var l = 0,
            h = 0;
            h = e.length;
            var u;
            for (l = 0; l < h; l += 2) {
                u = g.solve2(e[l], e[l + 1], t, i, n, s, a, r);
                o.push(u[0], u[1])
            }
            return o
        };
        g.transPoints = function(e, t, i, n, s, a, r, o) {
            o = o || [];
            var l = 0,
            h = 0;
            h = e.length;
            var u;
            for (l = 0; l < h; l += 2) {
                u = g.transPoint(e[l], e[l + 1], t, i, n, s, a, r, o)
            }
            return o
        };
        g.transPoint = function(e, t, i, n, s, a, r, o, l) {
            l = l || [];
            var h = NaN;
            var u = NaN;
            h = i + s * e + r * t;
            u = n + a * e + o * t;
            l.push(h, u);
            return l
        };
        g.solve2 = function(e, t, i, n, s, a, r, o, l, h) {
            l === void 0 && (l = false);
            h = h || [];
            var u = NaN,
            c = NaN;
            if (s == 0) {
                return g.solve2(e, t, i, n, r, o, s, a, true, h)
            }
            var f = NaN;
            var d = NaN;
            f = e - i;
            d = t - n;
            c = (d - f * a / s) / (o - r * a / s);
            u = (f - c * r) / s;
            if (l) {
                h.push(c, u)
            } else {
                h.push(u, c)
            }
            return h
        };
        g.solve = function(e, t, i, n) {
            return g.solve2(e.x, e.y, t.x, t.y, i.x, i.y, n.x, n.y)
        };
        g._bestTriangle = [];
        g._absArr = [];
        return g
    } ();
    var U = function() {
        function oe(e, t) {
            this.target = null;
            this.data = null;
            this.bones = null;
            this.position = NaN;
            this.spacing = NaN;
            this.rotateMix = NaN;
            this.translateMix = NaN;
            this._debugKey = false;
            this._spaces = null;
            this._segments = [];
            this._curves = [];
            this.data = e;
            this.position = e.position;
            this.spacing = e.spacing;
            this.rotateMix = e.rotateMix;
            this.translateMix = e.translateMix;
            this.bones = [];
            var i = this.data.bones;
            for (var n = 0,
            s = i.length; n < s; n++) {
                this.bones.push(t[i[n]])
            }
        }
        r(oe, "laya.ani.bone.PathConstraint");
        var e = oe.prototype;
        e.apply = function(e, t) {
            if (!this.target) return;
            var i = this.translateMix;
            var n = this.translateMix;
            var s = i > 0;
            var a = n > 0;
            var r = this.data.spacingMode;
            var o = r == "length";
            var l = this.data.rotateMode;
            var h = l == "tangent";
            var u = l == "chainScale";
            var c = [];
            var f = this.bones.length;
            var d = h ? f: f + 1;
            var g = [];
            this._spaces = g;
            g[0] = this.position;
            var p = this.spacing;
            if (u || o) {
                for (var _ = 0,
                m = d - 1; _ < m;) {
                    var v = this.bones[_];
                    var y = v.length;
                    var I = y * v.resultMatrix.a;
                    var S = y * v.resultMatrix.b;
                    y = Math.sqrt(I * I + S * S);
                    if (u) c[_] = y;
                    g[++_] = o ? Math.max(0, y + p) : p
                }
            } else {
                for (_ = 1; _ < d; _++) {
                    g[_] = p
                }
            }
            var C = this.computeWorldPositions(this.target, e, t, d, h, this.data.positionMode == "percent", r == "percent");
            if (this._debugKey) {
                for (_ = 0; _ < C.length; _++) {
                    t.drawCircle(C[_++], C[_++], 5, "#00ff00")
                }
                var b = [];
                for (_ = 0; _ < C.length; _++) {
                    b.push(C[_++], C[_++])
                }
                t.drawLines(0, 0, b, "#ff0000")
            }
            var w = NaN;
            var x = NaN;
            var R = C[0];
            var L = C[1];
            var T = this.data.offsetRotation;
            var D = l == "chain" && T == 0;
            var k = NaN;
            for (_ = 0, k = 3; _ < f; _++, k += 3) {
                v = this.bones[_];
                v.resultMatrix.tx += (R - v.resultMatrix.tx) * i;
                v.resultMatrix.ty += (L - v.resultMatrix.ty) * i;
                I = C[k];
                S = C[k + 1];
                var G = I - R,
                M = S - L;
                if (u) {
                    y = c[_];
                    if (y != 0) {
                        var B = (Math.sqrt(G * G + M * M) / y - 1) * n + 1;
                        v.resultMatrix.a *= B;
                        v.resultMatrix.c *= B
                    }
                }
                R = I;
                L = S;
                if (a) {
                    var A = v.resultMatrix.a;
                    var P = v.resultMatrix.c;
                    var U = v.resultMatrix.b;
                    var E = v.resultMatrix.d;
                    var N = NaN;
                    var F = NaN;
                    var O = NaN;
                    if (h) {
                        N = C[k - 1]
                    } else if (g[_ + 1] == 0) {
                        N = C[k + 2]
                    } else {
                        N = Math.atan2(M, G)
                    }
                    N -= Math.atan2(U, A) - T / 180 * Math.PI;
                    if (D) {
                        F = Math.cos(N);
                        O = Math.sin(N);
                        y = v.length;
                        R += (y * (F * A - O * U) - G) * n;
                        L += (y * (O * A + F * U) - M) * n
                    }
                    if (N > Math.PI) {
                        N -= Math.PI * 2
                    } else if (N < -Math.PI) {
                        N += Math.PI * 2
                    }
                    N *= n;
                    F = Math.cos(N);
                    O = Math.sin(N);
                    v.resultMatrix.a = F * A - O * U;
                    v.resultMatrix.c = F * P - O * E;
                    v.resultMatrix.b = O * A + F * U;
                    v.resultMatrix.d = O * P + F * E
                }
            }
        };
        e.computeWorldVertices2 = function(e, t, i, n, s, a) {
            var r = e.currDisplayData.bones;
            var o = e.currDisplayData.weights;
            var l = e.currDisplayData.triangles;
            var h;
            var u = 0;
            var c = 0;
            var f = 0;
            var d = 0;
            var g = 0;
            var p = 0;
            var _ = 0;
            var m = 0;
            var v = 0;
            var y = 0;
            var I;
            var S = 0;
            if (r == null) {
                if (!l) l = o;
                if (e.deformData) l = e.deformData;
                var C;
                C = e.parent;
                if (t) {
                    S = t.length;
                    for (u = 0; u < S; u++) {
                        if (t[u].name == C) {
                            I = t[u];
                            break
                        }
                    }
                }
                var b;
                if (I) {
                    b = I.resultMatrix
                }
                if (!b) b = oe._tempMt;
                var w = b.tx;
                var x = b.ty;
                var R = b.a,
                L = b.b,
                T = b.c,
                D = b.d;
                if (I) D *= I.d;
                for (c = i, g = a; g < n; c += 2, g += 2) {
                    v = l[c],
                    y = l[c + 1];
                    s[g] = v * R + y * L + w;
                    s[g + 1] = -(v * T + y * D + x)
                }
                return
            }
            for (u = 0; u < i; u += 2) {
                d = r[c];
                c += d + 1;
                f += d
            }
            var k = t;
            for (g = a, p = f * 3; g < n; g += 2) {
                _ = 0,
                m = 0;
                d = r[c++];
                d += c;
                for (; c < d; c++, p += 3) {
                    h = k[r[c]].resultMatrix;
                    v = o[p];
                    y = o[p + 1];
                    var G = o[p + 2];
                    _ += (v * h.a + y * h.c + h.tx) * G;
                    m += (v * h.b + y * h.d + h.ty) * G
                }
                s[g] = _;
                s[g + 1] = m
            }
        };
        e.computeWorldPositions = function(e, t, i, n, s, a, r) {
            var o = e.currDisplayData.bones;
            var l = e.currDisplayData.weights;
            var h = e.currDisplayData.triangles;
            var u = 0;
            var c = 0;
            var f = 0;
            var d;
            var g = NaN;
            var p = NaN;
            var _ = 0;
            var m = 0;
            var v = [];
            var y = 0,
            I = 0,
            S = 0;
            var C = e.currDisplayData.verLen;
            var b = e;
            var w = this.position;
            var x = this._spaces;
            var R = [];
            var L = [];
            var T = false;
            var D = C / 6;
            var k = -1;
            var G = NaN;
            var M = 0,
            B = 0;
            var A = NaN;
            var P = NaN;
            var U = NaN;
            var E = NaN;
            if (!true) {
                var N = e.currDisplayData.lengths;
                D -= T ? 1 : 2;
                G = N[D];
                if (a) w *= G;
                if (r) {
                    for (y = 0; y < n; y++) x[y] *= G
                }
                R.length = 8;
                for (y = 0, M = 0, B = 0; y < n; y++, M += 3) {
                    P = x[y];
                    w += P;
                    A = w;
                    if (T) {
                        A %= G;
                        if (A < 0) A += G;
                        B = 0
                    } else if (A < 0) {
                        if (k != oe.BEFORE) {
                            k = oe.BEFORE;
                            this.computeWorldVertices2(b, t, 2, 4, R, 0)
                        }
                        this.addBeforePosition(A, R, 0, L, M);
                        continue
                    } else if (A > G) {
                        if (k != oe.AFTER) {
                            k = oe.AFTER;
                            this.computeWorldVertices2(b, t, C - 6, 4, R, 0)
                        }
                        this.addAfterPosition(A - G, R, 0, L, M);
                        continue
                    }
                    for (;; B++) {
                        E = N[B];
                        if (A > E) continue;
                        if (B == 0) A /= E;
                        else {
                            U = N[B - 1];
                            A = (A - U) / (E - U)
                        }
                        break
                    }
                    if (B != k) {
                        k = B;
                        if (T && B == D) {
                            this.computeWorldVertices2(b, t, C - 4, 4, R, 0);
                            this.computeWorldVertices2(b, t, 0, 4, R, 4)
                        } else this.computeWorldVertices2(b, t, B * 6 + 2, 8, R, 0)
                    }
                    this.addCurvePosition(A, R[0], R[1], R[2], R[3], R[4], R[5], R[6], R[7], L, M, s || y > 0 && P == 0)
                }
                return L
            }
            if (T) {
                C += 2;
                R[C - 2] = R[0];
                R[C - 1] = R[1]
            } else {
                D--;
                C -= 4;
                this.computeWorldVertices2(e, t, 2, C, v, 0);
                if (this._debugKey) {
                    for (y = 0; y < v.length;) {
                        i.drawCircle(v[y++], v[y++], 10, "#ff0000")
                    }
                }
                R = v
            }
            this._curves.length = D;
            var F = this._curves;
            G = 0;
            var O = R[0],
            V = R[1],
            q = 0,
            z = 0,
            W = 0,
            H = 0,
            Y = 0,
            j = 0;
            var X = NaN,
            J = NaN,
            $ = NaN,
            K = NaN,
            Q = NaN,
            Z = NaN,
            ee = NaN,
            te = NaN;
            var ie = 0;
            for (y = 0, ie = 2; y < D; y++, ie += 6) {
                q = R[ie];
                z = R[ie + 1];
                W = R[ie + 2];
                H = R[ie + 3];
                Y = R[ie + 4];
                j = R[ie + 5];
                X = (O - q * 2 + W) * .1875;
                J = (V - z * 2 + H) * .1875;
                $ = ((q - W) * 3 - O + Y) * .09375;
                K = ((z - H) * 3 - V + j) * .09375;
                Q = X * 2 + $;
                Z = J * 2 + K;
                ee = (q - O) * .75 + X + $ * .16666667;
                te = (z - V) * .75 + J + K * .16666667;
                G += Math.sqrt(ee * ee + te * te);
                ee += Q;
                te += Z;
                Q += $;
                Z += K;
                G += Math.sqrt(ee * ee + te * te);
                ee += Q;
                te += Z;
                G += Math.sqrt(ee * ee + te * te);
                ee += Q + $;
                te += Z + K;
                G += Math.sqrt(ee * ee + te * te);
                F[y] = G;
                O = Y;
                V = j
            }
            if (a) w *= G;
            if (r) {
                for (y = 0; y < n; y++) x[y] *= G
            }
            var ne = this._segments;
            var se = 0;
            var ae = 0;
            for (y = 0, M = 0, B = 0, ae = 0; y < n; y++, M += 3) {
                P = x[y];
                w += P;
                A = w;
                if (T) {
                    A %= G;
                    if (A < 0) A += G;
                    B = 0
                } else if (A < 0) {
                    this.addBeforePosition(A, R, 0, L, M);
                    continue
                } else if (A > G) {
                    this.addAfterPosition(A - G, R, C - 4, L, M);
                    continue
                }
                for (;; B++) {
                    E = F[B];
                    if (A > E) continue;
                    if (B == 0) A /= E;
                    else {
                        U = F[B - 1];
                        A = (A - U) / (E - U)
                    }
                    break
                }
                if (B != k) {
                    k = B;
                    var re = B * 6;
                    O = R[re];
                    V = R[re + 1];
                    q = R[re + 2];
                    z = R[re + 3];
                    W = R[re + 4];
                    H = R[re + 5];
                    Y = R[re + 6];
                    j = R[re + 7];
                    X = (O - q * 2 + W) * .03;
                    J = (V - z * 2 + H) * .03;
                    $ = ((q - W) * 3 - O + Y) * .006;
                    K = ((z - H) * 3 - V + j) * .006;
                    Q = X * 2 + $;
                    Z = J * 2 + K;
                    ee = (q - O) * .3 + X + $ * .16666667;
                    te = (z - V) * .3 + J + K * .16666667;
                    se = Math.sqrt(ee * ee + te * te);
                    ne[0] = se;
                    for (re = 1; re < 8; re++) {
                        ee += Q;
                        te += Z;
                        Q += $;
                        Z += K;
                        se += Math.sqrt(ee * ee + te * te);
                        ne[re] = se
                    }
                    ee += Q;
                    te += Z;
                    se += Math.sqrt(ee * ee + te * te);
                    ne[8] = se;
                    ee += Q + $;
                    te += Z + K;
                    se += Math.sqrt(ee * ee + te * te);
                    ne[9] = se;
                    ae = 0
                }
                A *= se;
                for (;; ae++) {
                    E = ne[ae];
                    if (A > E) continue;
                    if (ae == 0) A /= E;
                    else {
                        U = ne[ae - 1];
                        A = ae + (A - U) / (E - U)
                    }
                    break
                }
                this.addCurvePosition(A * .1, O, V, q, z, W, H, Y, j, L, M, s || y > 0 && P == 0)
            }
            return L
        };
        e.addBeforePosition = function(e, t, i, n, s) {
            var a = t[i],
            r = t[i + 1],
            o = t[i + 2] - a,
            l = t[i + 3] - r,
            h = Math.atan2(l, o);
            n[s] = a + e * Math.cos(h);
            n[s + 1] = r + e * Math.sin(h);
            n[s + 2] = h
        };
        e.addAfterPosition = function(e, t, i, n, s) {
            var a = t[i + 2],
            r = t[i + 3],
            o = a - t[i],
            l = r - t[i + 1],
            h = Math.atan2(l, o);
            n[s] = a + e * Math.cos(h);
            n[s + 1] = r + e * Math.sin(h);
            n[s + 2] = h
        };
        e.addCurvePosition = function(e, t, i, n, s, a, r, o, l, h, u, c) {
            if (e == 0) e = 1e-4;
            var f = e * e,
            d = f * e,
            g = 1 - e,
            p = g * g,
            _ = p * g;
            var m = g * e,
            v = m * 3,
            y = g * v,
            I = v * e;
            var S = t * _ + n * y + a * I + o * d,
            C = i * _ + s * y + r * I + l * d;
            h[u] = S;
            h[u + 1] = C;
            if (c) {
                h[u + 2] = Math.atan2(C - (i * p + s * m * 2 + r * f), S - (t * p + n * m * 2 + a * f))
            } else {
                h[u + 2] = 0
            }
        };
        oe.NONE = -1;
        oe.BEFORE = -2;
        oe.AFTER = -3;
        s(oe, ["_tempMt",
        function() {
            return this._tempMt = new Pe
        }]);
        return oe
    } ();
    var He = function() {
        function e() {
            this.name = null;
            this.target = null;
            this.positionMode = null;
            this.spacingMode = null;
            this.rotateMode = null;
            this.offsetRotation = NaN;
            this.position = NaN;
            this.spacing = NaN;
            this.rotateMix = NaN;
            this.translateMix = NaN;
            this.bones = []
        }
        r(e, "laya.ani.bone.PathConstraintData");
        return e
    } ();
    var Ye = function() {
        function e() {
            this.name = null;
            this.slotArr = []
        }
        r(e, "laya.ani.bone.SkinData");
        return e
    } ();
    var je = function() {
        function e() {
            this.name = null;
            this.attachmentName = null;
            this.type = 0;
            this.transform = null;
            this.width = NaN;
            this.height = NaN;
            this.texture = null;
            this.bones = null;
            this.uvs = null;
            this.weights = null;
            this.triangles = null;
            this.vertices = null;
            this.lengths = null;
            this.verLen = 0
        }
        r(e, "laya.ani.bone.SkinSlotDisplayData");
        var t = e.prototype;
        t.createTexture = function(e) {
            if (this.texture) return this.texture;
            this.texture = new Ue(e.bitmap, this.uvs);
            if (this.uvs[0] > this.uvs[4] && this.uvs[1] > this.uvs[5]) {
                this.texture.width = e.height;
                this.texture.height = e.width;
                this.texture.offsetX = -e.offsetX;
                this.texture.offsetY = -e.offsetY;
                this.texture.sourceWidth = e.sourceHeight;
                this.texture.sourceHeight = e.sourceWidth
            } else {
                this.texture.width = e.width;
                this.texture.height = e.height;
                this.texture.offsetX = -e.offsetX;
                this.texture.offsetY = -e.offsetY;
                this.texture.sourceWidth = e.sourceWidth;
                this.texture.sourceHeight = e.sourceHeight
            }
            if (!S.isWebGL) {
                if (this.uvs[1] > this.uvs[5]) {
                    this.texture.offsetY = this.texture.sourceHeight - this.texture.height - this.texture.offsetY
                }
            }
            return this.texture
        };
        t.destory = function() {
            if (this.texture) this.texture.destroy()
        };
        return e
    } ();
    var Xe = function() {
        function e() {
            this.name = null;
            this.displayArr = []
        }
        r(e, "laya.ani.bone.SlotData");
        var t = e.prototype;
        t.getDisplayByName = function(e) {
            var t;
            for (var i = 0,
            n = this.displayArr.length; i < n; i++) {
                t = this.displayArr[i];
                if (t.attachmentName == e) {
                    return i
                }
            }
            return - 1
        };
        return e
    } ();
    var E = function() {
        function e(e, t) {
            this._data = null;
            this._bones = null;
            this.target = null;
            this.rotateMix = NaN;
            this.translateMix = NaN;
            this.scaleMix = NaN;
            this.shearMix = NaN;
            this._temp = m(2, 0);
            this._data = e;
            if (this._bones == null) {
                this._bones = []
            }
            this.target = t[e.targetIndex];
            var i = 0,
            n = 0;
            for (i = 0, n = e.boneIndexs.length; i < n; i++) {
                this._bones.push(t[e.boneIndexs[i]])
            }
            this.rotateMix = e.rotateMix;
            this.translateMix = e.translateMix;
            this.scaleMix = e.scaleMix;
            this.shearMix = e.shearMix
        }
        r(e, "laya.ani.bone.TfConstraint");
        var t = e.prototype;
        t.apply = function() {
            var e;
            var t = this.target.resultMatrix.a,
            i = this.target.resultMatrix.b,
            n = this.target.resultMatrix.c,
            s = this.target.resultMatrix.d;
            for (var a = 0,
            r = this._bones.length; a < r; a++) {
                e = this._bones[a];
                if (this.rotateMix > 0) {
                    var o = e.resultMatrix.a,
                    l = e.resultMatrix.b,
                    h = e.resultMatrix.c,
                    u = e.resultMatrix.d;
                    var c = Math.atan2(n, t) - Math.atan2(h, o) + this._data.offsetRotation * Math.PI / 180;
                    if (c > Math.PI) c -= Math.PI * 2;
                    else if (c < -Math.PI) c += Math.PI * 2;
                    c *= this.rotateMix;
                    var f = Math.cos(c),
                    d = Math.sin(c);
                    e.resultMatrix.a = f * o - d * h;
                    e.resultMatrix.b = f * l - d * u;
                    e.resultMatrix.c = d * o + f * h;
                    e.resultMatrix.d = d * l + f * u
                }
                if (this.translateMix) {
                    this._temp[0] = this._data.offsetX;
                    this._temp[1] = this._data.offsetY;
                    this.target.localToWorld(this._temp);
                    e.resultMatrix.tx += (this._temp[0] - e.resultMatrix.tx) * this.translateMix;
                    e.resultMatrix.ty += (this._temp[1] - e.resultMatrix.ty) * this.translateMix;
                    e.updateChild()
                }
                if (this.scaleMix > 0) {
                    var g = Math.sqrt(e.resultMatrix.a * e.resultMatrix.a + e.resultMatrix.c * e.resultMatrix.c);
                    var p = Math.sqrt(t * t + n * n);
                    var _ = g > 1e-5 ? (g + (p - g + this._data.offsetScaleX) * this.scaleMix) / g: 0;
                    e.resultMatrix.a *= _;
                    e.resultMatrix.c *= _;
                    g = Math.sqrt(e.resultMatrix.b * e.resultMatrix.b + e.resultMatrix.d * e.resultMatrix.d);
                    p = Math.sqrt(i * i + s * s);
                    _ = g > 1e-5 ? (g + (p - g + this._data.offsetScaleY) * this.scaleMix) / g: 0;
                    e.resultMatrix.b *= _;
                    e.resultMatrix.d *= _
                }
                if (this.shearMix > 0) {
                    l = e.resultMatrix.b,
                    u = e.resultMatrix.d;
                    var m = Math.atan2(u, l);
                    c = Math.atan2(s, i) - Math.atan2(n, t) - (m - Math.atan2(e.resultMatrix.c, e.resultMatrix.a));
                    if (c > Math.PI) c -= Math.PI * 2;
                    else if (c < -Math.PI) c += Math.PI * 2;
                    c = m + (c + this._data.offsetShearY * Math.PI / 180) * this.shearMix;
                    _ = Math.sqrt(l * l + u * u);
                    e.resultMatrix.b = Math.cos(c) * _;
                    e.resultMatrix.d = Math.sin(c) * _
                }
            }
        };
        return e
    } ();
    var Je = function() {
        function e() {
            this.name = null;
            this.targetIndex = 0;
            this.rotateMix = NaN;
            this.translateMix = NaN;
            this.scaleMix = NaN;
            this.shearMix = NaN;
            this.offsetRotation = NaN;
            this.offsetX = NaN;
            this.offsetY = NaN;
            this.offsetScaleX = NaN;
            this.offsetScaleY = NaN;
            this.offsetShearY = NaN;
            this.boneIndexs = []
        }
        r(e, "laya.ani.bone.TfConstraintData");
        return e
    } ();
    var $e = function() {
        function e() {
            this.skX = 0;
            this.skY = 0;
            this.scX = 1;
            this.scY = 1;
            this.x = 0;
            this.y = 0;
            this.skewX = 0;
            this.skewY = 0;
            this.mMatrix = null
        }
        r(e, "laya.ani.bone.Transform");
        var t = e.prototype;
        t.initData = function(e) {
            if (e.x != undefined) {
                this.x = e.x
            }
            if (e.y != undefined) {
                this.y = e.y
            }
            if (e.skX != undefined) {
                this.skX = e.skX
            }
            if (e.skY != undefined) {
                this.skY = e.skY
            }
            if (e.scX != undefined) {
                this.scX = e.scX
            }
            if (e.scY != undefined) {
                this.scY = e.scY
            }
        };
        t.getMatrix = function() {
            var e;
            if (this.mMatrix) {
                e = this.mMatrix
            } else {
                e = this.mMatrix = new Pe
            }
            e.identity();
            e.scale(this.scX, this.scY);
            if (this.skewX || this.skewY) {
                this.skew(e, this.skewX * Math.PI / 180, this.skewY * Math.PI / 180)
            }
            e.rotate(this.skX * Math.PI / 180);
            e.translate(this.x, this.y);
            return e
        };
        t.skew = function(e, t, i) {
            var n = Math.sin(i);
            var s = Math.cos(i);
            var a = Math.sin(t);
            var r = Math.cos(t);
            e.setTo(e.a * r - e.b * n, e.a * a + e.b * s, e.c * r - e.d * n, e.c * a + e.d * s, e.tx * r - e.ty * n, e.tx * a + e.ty * s);
            return e
        };
        return e
    } ();
    var N = function() {
        function e() {}
        r(e, "laya.ani.bone.UVTools");
        e.getRelativeUV = function(e, t, i) {
            var n = e[0];
            var s = e[2] - e[0];
            var a = e[1];
            var r = e[5] - e[1];
            if (!i) i = [];
            i.length = t.length;
            var o = 0,
            l = 0;
            l = i.length;
            var h = 1 / s;
            var u = 1 / r;
            for (o = 0; o < l; o += 2) {
                i[o] = (t[o] - n) * h;
                i[o + 1] = (t[o + 1] - a) * u
            }
            return i
        };
        e.getAbsoluteUV = function(e, t, i) {
            if (e[0] == 0 && e[1] == 0 && e[4] == 1 && e[5] == 1) {
                if (i) {
                    R.copyArray(i, t);
                    return i
                } else {
                    return t
                }
            }
            var n = e[0];
            var s = e[2] - e[0];
            var a = e[1];
            var r = e[5] - e[1];
            if (!i) i = [];
            i.length = t.length;
            var o = 0,
            l = 0;
            l = i.length;
            for (o = 0; o < l; o += 2) {
                i[o] = t[o] * s + n;
                i[o + 1] = t[o + 1] * r + a
            }
            return i
        };
        return e
    } ();
    var F = function() {
        function e() {
            this.startTime = NaN;
            this.duration = NaN;
            this.interpolationData = null;
            this.data = null;
            this.nextData = null
        }
        r(e, "laya.ani.KeyFramesContent");
        return e
    } ();
    var O = function() {
        function u() {}
        r(u, "laya.ani.math.BezierLerp");
        u.getBezierRate = function(e, t, i, n, s) {
            var a = u._getBezierParamKey(t, i, n, s);
            var r = a * 100 + e;
            if (u._bezierResultCache[r]) return u._bezierResultCache[r];
            var o = u._getBezierPoints(t, i, n, s, a);
            var l = 0,
            h = 0;
            h = o.length;
            for (l = 0; l < h; l += 2) {
                if (e <= o[l]) {
                    u._bezierResultCache[r] = o[l + 1];
                    return o[l + 1]
                }
            }
            u._bezierResultCache[r] = 1;
            return 1
        };
        u._getBezierParamKey = function(e, t, i, n) {
            return (((e * 100 + t) * 100 + i) * 100 + n) * 100
        };
        u._getBezierPoints = function(e, t, i, n, s) {
            if (u._bezierPointsCache[s]) return u._bezierPointsCache[s];
            var a;
            a = [0, 0, e, t, i, n, 1, 1];
            var r;
            r = new l;
            var o;
            o = r.getBezierPoints(a, 100, 3);
            u._bezierPointsCache[s] = o;
            return o
        };
        u._bezierResultCache = {};
        u._bezierPointsCache = {};
        return u
    } ();
    var V = function(e) {
        function t() {
            this._destroyed = false;
            this._templet = null;
            this._currentTime = NaN;
            this._currentFrameTime = NaN;
            this._playStart = NaN;
            this._playEnd = NaN;
            this._playDuration = NaN;
            this._overallDuration = NaN;
            this._stopWhenCircleFinish = false;
            this._elapsedPlaybackTime = NaN;
            this._startUpdateLoopCount = NaN;
            this._currentAnimationClipIndex = 0;
            this._currentKeyframeIndex = 0;
            this._paused = false;
            this._cacheFrameRate = 0;
            this._cacheFrameRateInterval = NaN;
            this._cachePlayRate = NaN;
            this._fullFrames = null;
            this.isCache = true;
            this.playbackRate = 1;
            this.returnToZeroStopped = false;
            t.__super.call(this);
            this._destroyed = false;
            this._currentAnimationClipIndex = -1;
            this._currentKeyframeIndex = -1;
            this._currentTime = 0;
            this._overallDuration = Number.MAX_VALUE;
            this._stopWhenCircleFinish = false;
            this._elapsedPlaybackTime = 0;
            this._startUpdateLoopCount = -1;
            this._cachePlayRate = 1;
            this.cacheFrameRate = 60;
            this.returnToZeroStopped = false
        }
        r(t, "laya.ani.AnimationPlayer", e);
        var i = t.prototype;
        se.imps(i, {
            "laya.resource.IDestroy": true
        });
        i._onTempletLoadedComputeFullKeyframeIndices = function(e, t, i) {
            if (this._templet === i && this._cachePlayRate === e && this._cacheFrameRate === t) this._computeFullKeyframeIndices()
        };
        i._computeFullKeyframeIndices = function() {
            var e = this._fullFrames = [];
            var t = this._templet;
            var i = this._cacheFrameRateInterval * this._cachePlayRate;
            for (var n = 0,
            s = t.getAnimationCount(); n < s; n++) {
                var a = [];
                for (var r = 0,
                o = t.getAnimation(n).nodes.length; r < o; r++) {
                    var l = t.getAnimation(n).nodes[r];
                    var h = Math.floor(l.playTime / i + .01);
                    var u = new Uint16Array(h + 1);
                    var c = -1;
                    for (var f = 0,
                    d = l.keyFrame.length; f < d; f++) {
                        var g = l.keyFrame[f];
                        var p = g.startTime;
                        var _ = p + g.duration + i;
                        do {
                            var m = Math.floor(p / i + .5);
                            for (var v = c + 1; v < m; v++) u[v] = f;
                            c = m;
                            u[m] = f;
                            p += i
                        } while ( p <= _ )
                    }
                    a.push(u)
                }
                e.push(a)
            }
        };
        i._onAnimationTempletLoaded = function() {
            this.destroyed || this._calculatePlayDuration()
        };
        i._calculatePlayDuration = function() {
            if (this.state !== 0) {
                var e = this._templet.getAniDuration(this._currentAnimationClipIndex);
                this._playEnd === 0 && (this._playEnd = e);
                if (this._playEnd > e) this._playEnd = e;
                this._playDuration = this._playEnd - this._playStart
            }
        };
        i._setPlayParams = function(e, t) {
            this._currentTime = e;
            this._currentKeyframeIndex = Math.max(Math.floor(this.currentPlayTime / t + .01), 0);
            this._currentFrameTime = this._currentKeyframeIndex * t
        };
        i._setPlayParamsWhenStop = function(e, t) {
            this._currentTime = e;
            this._currentKeyframeIndex = Math.max(Math.floor(e / t + .01), 0);
            this._currentFrameTime = this._currentKeyframeIndex * t;
            this._currentAnimationClipIndex = -1
        };
        i._update = function(e) {
            if (this._currentAnimationClipIndex === -1 || this._paused || !this._templet || !this._templet.loaded) return;
            var t = this._cacheFrameRateInterval * this._cachePlayRate;
            var i = 0;
            this._startUpdateLoopCount !== w.loopCount && (i = e * this.playbackRate, this._elapsedPlaybackTime += i);
            var n = this.playDuration;
            if (this._overallDuration !== 0 && this._elapsedPlaybackTime >= this._overallDuration || this._overallDuration === 0 && this._elapsedPlaybackTime >= n) {
                this._setPlayParamsWhenStop(n, t);
                this.event("stopped");
                return
            }
            i += this._currentTime;
            if (n > 0) {
                if (i >= n) {
                    do {
                        i -= n;
                        if (this._stopWhenCircleFinish) {
                            this._setPlayParamsWhenStop(n, t);
                            this._stopWhenCircleFinish = false;
                            this.event("stopped");
                            return
                        }
                        if (i < n) {
                            this._setPlayParams(i, t);
                            this.event("complete")
                        }
                    } while ( i >= n )
                } else {
                    this._setPlayParams(i, t)
                }
            } else {
                if (this._stopWhenCircleFinish) {
                    this._setPlayParamsWhenStop(n, t);
                    this._stopWhenCircleFinish = false;
                    this.event("stopped");
                    return
                }
                this._currentTime = this._currentFrameTime = this._currentKeyframeIndex = 0;
                this.event("complete")
            }
        };
        i._destroy = function() {
            this.offAll();
            this._templet = null;
            this._fullFrames = null;
            this._destroyed = true
        };
        i.play = function(e, t, i, n, s) {
            e === void 0 && (e = 0);
            t === void 0 && (t = 1);
            i === void 0 && (i = 2147483647);
            n === void 0 && (n = 0);
            s === void 0 && (s = 0);
            if (!this._templet) throw new Error("AnimationPlayer:templet must not be null,maybe you need to set url.");
            if (i < 0 || n < 0 || s < 0) throw new Error("AnimationPlayer:overallDuration,playStart and playEnd must large than zero.");
            if (s !== 0 && n > s) throw new Error("AnimationPlayer:start must less than end.");
            this._currentTime = 0;
            this._currentFrameTime = 0;
            this._elapsedPlaybackTime = 0;
            this.playbackRate = t;
            this._overallDuration = i;
            this._playStart = n;
            this._playEnd = s;
            this._paused = false;
            this._currentAnimationClipIndex = e;
            this._currentKeyframeIndex = 0;
            this._startUpdateLoopCount = w.loopCount;
            this.event("played");
            if (this._templet.loaded) this._calculatePlayDuration();
            else this._templet.once("loaded", this, this._onAnimationTempletLoaded);
            this._update(0)
        };
        i.playByFrame = function(e, t, i, n, s, a) {
            e === void 0 && (e = 0);
            t === void 0 && (t = 1);
            i === void 0 && (i = 2147483647);
            n === void 0 && (n = 0);
            s === void 0 && (s = 0);
            a === void 0 && (a = 30);
            var r = 1e3 / a;
            this.play(e, t, i, n * r, s * r)
        };
        i.stop = function(e) {
            e === void 0 && (e = true);
            if (e) {
                this._currentTime = this._currentFrameTime = this._currentKeyframeIndex = 0;
                this._currentAnimationClipIndex = -1;
                this.event("stopped")
            } else {
                this._stopWhenCircleFinish = true
            }
        };
        o(0, i, "playEnd",
        function() {
            return this._playEnd
        });
        o(0, i, "templet",
        function() {
            return this._templet
        },
        function(e) {
            if (!this.state === 0) this.stop(true);
            if (this._templet !== e) {
                this._templet = e;
                if (e.loaded) this._computeFullKeyframeIndices();
                else e.once("loaded", this, this._onTempletLoadedComputeFullKeyframeIndices, [this._cachePlayRate, this._cacheFrameRate])
            }
        });
        o(0, i, "playStart",
        function() {
            return this._playStart
        });
        o(0, i, "playDuration",
        function() {
            return this._playDuration
        });
        o(0, i, "state",
        function() {
            if (this._currentAnimationClipIndex === -1) return 0;
            if (this._paused) return 1;
            return 2
        });
        o(0, i, "currentKeyframeIndex",
        function() {
            return this._currentKeyframeIndex
        });
        o(0, i, "overallDuration",
        function() {
            return this._overallDuration
        });
        o(0, i, "currentFrameTime",
        function() {
            return this._currentFrameTime
        });
        o(0, i, "currentAnimationClipIndex",
        function() {
            return this._currentAnimationClipIndex
        });
        o(0, i, "currentPlayTime",
        function() {
            return this._currentTime + this._playStart
        });
        o(0, i, "cachePlayRate",
        function() {
            return this._cachePlayRate
        },
        function(e) {
            if (this._cachePlayRate !== e) {
                this._cachePlayRate = e;
                if (this._templet) if (this._templet.loaded) this._computeFullKeyframeIndices();
                else this._templet.once("loaded", this, this._onTempletLoadedComputeFullKeyframeIndices, [e, this._cacheFrameRate])
            }
        });
        o(0, i, "cacheFrameRate",
        function() {
            return this._cacheFrameRate
        },
        function(e) {
            if (this._cacheFrameRate !== e) {
                this._cacheFrameRate = e;
                this._cacheFrameRateInterval = 1e3 / this._cacheFrameRate;
                if (this._templet) if (this._templet.loaded) this._computeFullKeyframeIndices();
                else this._templet.once("loaded", this, this._onTempletLoadedComputeFullKeyframeIndices, [this._cachePlayRate, e])
            }
        });
        o(0, i, "currentTime", null,
        function(e) {
            if (this._currentAnimationClipIndex === -1 || !this._templet || !this._templet.loaded) return;
            if (e < this._playStart || e > this._playEnd) throw new Error("AnimationPlayer:value must large than playStartTime,small than playEndTime.");
            this._startUpdateLoopCount = w.loopCount;
            var t = this._cacheFrameRateInterval * this._cachePlayRate;
            this._currentTime = e;
            this._currentKeyframeIndex = Math.max(Math.floor(this.currentPlayTime / t), 0);
            this._currentFrameTime = this._currentKeyframeIndex * t
        });
        o(0, i, "paused",
        function() {
            return this._paused
        },
        function(e) {
            this._paused = e;
            e && this.event("paused")
        });
        o(0, i, "cacheFrameRateInterval",
        function() {
            return this._cacheFrameRateInterval
        });
        o(0, i, "destroyed",
        function() {
            return this._destroyed
        });
        return t
    } (h);
    var q = function(e) {
        function t() {
            t.__super.call(this);
            if (S.isConchNode) {
                this["drawSkin"] = function(e) {
                    e.transform || (e.transform = Pe.EMPTY);
                    this._addCmd([e]);
                    this.setSkinMesh && this.setSkinMesh(e._ps, e.mVBData, e.mEleNum, 0, e.mTexture, e.transform)
                }
            }
        }
        r(t, "laya.ani.GraphicsAni", e);
        var i = t.prototype;
        i.drawSkin = function(e) {
            var t = [e];
            this._saveToCmd(S._context._drawSkin, t)
        };
        t.create = function() {
            var e = t._caches.pop();
            return e || new t
        };
        t.recycle = function(e) {
            e.clear();
            t._caches.push(e)
        };
        t._caches = [];
        return t
    } (u);
    var z = function(e) {
        function n() {
            n.__super.call(this);
            this.mesh = new B
        }
        r(n, "laya.ani.bone.canvasmesh.SkinMeshCanvas", e);
        var t = n.prototype;
        t.init2 = function(e, t, i, n, s) {
            if (this.transform) {
                this.transform = null
            }
            var a;
            if (i) {
                a = i
            } else {
                a = [];
                a.push(0, 1, 3, 3, 1, 2)
            }
            this.mesh.texture = e;
            this.mesh.indexes = a;
            this.mesh.vertices = n;
            this.mesh.uvs = s
        };
        t.render = function(e, t, i) {
            if (!this.mesh.texture) return;
            if (!this.transform) {
                this.transform = n._tempMatrix;
                this.transform.identity();
                this.transform.translate(t, i);
                this.renderToContext(e);
                this.transform.translate( - t, -i);
                this.transform = null
            } else {
                this.transform.translate(t, i);
                this.renderToContext(e);
                this.transform.translate( - t, -i)
            }
        };
        s(n, ["_tempMatrix",
        function() {
            return this._tempMatrix = new Pe
        }]);
        return n
    } (M);
    var W = function(e) {
        function y() {
            this._aniMap = {};
            this.unfixedLastAniIndex = -1;
            y.__super.call(this);
            this._anis = new Array
        }
        r(y, "laya.ani.AnimationTemplet", e);
        var t = y.prototype;
        t.parse = function(e) {
            var t = new Ae(e);
            this._aniVersion = t.readUTFString();
            L.parse(this, t)
        };
        t._calculateKeyFrame = function(e, t, i) {
            var n = e.keyFrame;
            n[t] = n[0];
            for (var s = 0; s < t; s++) {
                var a = n[s];
                a.nextData = a.duration === 0 ? a.data: n[s + 1].data
            }
            n.length--
        };
        t.onAsynLoaded = function(e, t, i) {
            var n = new Ae(t);
            this._aniVersion = n.readUTFString();
            switch (this._aniVersion) {
            case "LAYAANIMATION:02":
                T.parse(this, n);
                break;
            default:
                L.parse(this, n)
            }
            this._endLoaded()
        };
        t.disposeResource = function() {
            this._aniVersion = null;
            this._anis = null;
            this._aniMap = null;
            this._publicExtData = null;
            this.unfixedCurrentFrameIndexes = null;
            this.unfixedCurrentTimes = null;
            this.unfixedKeyframes = null;
            this._aniClassName = null;
            this._animationDatasCache = null
        };
        t.getAnimationCount = function() {
            return this._anis.length
        };
        t.getAnimation = function(e) {
            return this._anis[e]
        };
        t.getAniDuration = function(e) {
            return this._anis[e].playTime
        };
        t.getNodes = function(e) {
            return this._anis[e].nodes
        };
        t.getNodeIndexWithName = function(e, t) {
            return this._anis[e].bone3DMap[t]
        };
        t.getNodeCount = function(e) {
            return this._anis[e].nodes.length
        };
        t.getTotalkeyframesLength = function(e) {
            return this._anis[e].totalKeyframeDatasLength
        };
        t.getPublicExtData = function() {
            return this._publicExtData
        };
        t.getAnimationDataWithCache = function(e, t, i, n) {
            var s = t[i];
            if (!s) {
                return null
            } else {
                var a = s[e];
                if (!a) return null;
                else {
                    return a[n]
                }
            }
        };
        t.setAnimationDataWithCache = function(e, t, i, n, s) {
            var a = t[i] || (t[i] = {});
            var r = a[e] || (a[e] = []);
            r[n] = s
        };
        t.getOriginalData = function(e, t, i, n, s) {
            var a = this._anis[e];
            var r = a.nodes;
            var o = 0;
            for (var l = 0,
            h = r.length,
            u = 0; l < h; l++) {
                var c = r[l];
                var f;
                f = c.keyFrame[i[l][n]];
                c.dataOffset = u;
                var d = s - f.startTime;
                var g = c.lerpType;
                if (g) {
                    switch (g) {
                    case 0:
                    case 1:
                        for (o = 0; o < c.keyframeWidth;) o += c.interpolationMethod[o](c, o, t, u + o, f.data, d, null, f.duration, f.nextData);
                        break;
                    case 2:
                        ;
                        var p = f.interpolationData;
                        var _ = p.length;
                        var m = 0;
                        for (o = 0; o < _;) {
                            var v = p[o];
                            switch (v) {
                            case 6:
                                o += y.interpolation[v](c, m, t, u + m, f.data, d, null, f.duration, f.nextData, p, o + 1);
                                break;
                            case 7:
                                o += y.interpolation[v](c, m, t, u + m, f.data, d, null, f.duration, f.nextData, p, o + 1);
                                break;
                            default:
                                o += y.interpolation[v](c, m, t, u + m, f.data, d, null, f.duration, f.nextData)
                            }
                            m++
                        }
                        break
                    }
                } else {
                    for (o = 0; o < c.keyframeWidth;) o += c.interpolationMethod[o](c, o, t, u + o, f.data, d, null, f.duration, f.nextData)
                }
                u += c.keyframeWidth
            }
        };
        t.getNodesCurrentFrameIndex = function(e, t) {
            var i = this._anis[e];
            var n = i.nodes;
            if (e !== this.unfixedLastAniIndex) {
                this.unfixedCurrentFrameIndexes = new Uint32Array(n.length);
                this.unfixedCurrentTimes = new Float32Array(n.length);
                this.unfixedLastAniIndex = e
            }
            for (var s = 0,
            a = n.length,
            r = 0; s < a; s++) {
                var o = n[s];
                if (t < this.unfixedCurrentTimes[s]) this.unfixedCurrentFrameIndexes[s] = 0;
                this.unfixedCurrentTimes[s] = t;
                while (this.unfixedCurrentFrameIndexes[s] < o.keyFrame.length) {
                    if (o.keyFrame[this.unfixedCurrentFrameIndexes[s]].startTime > this.unfixedCurrentTimes[s]) break;
                    this.unfixedCurrentFrameIndexes[s]++
                }
                this.unfixedCurrentFrameIndexes[s]--
            }
            return this.unfixedCurrentFrameIndexes
        };
        t.getOriginalDataUnfixedRate = function(e, t, i) {
            var n = this._anis[e];
            var s = n.nodes;
            if (e !== this.unfixedLastAniIndex) {
                this.unfixedCurrentFrameIndexes = new Uint32Array(s.length);
                this.unfixedCurrentTimes = new Float32Array(s.length);
                this.unfixedKeyframes = m(s.length);
                this.unfixedLastAniIndex = e
            }
            var a = 0;
            for (var r = 0,
            o = s.length,
            l = 0; r < o; r++) {
                var h = s[r];
                if (i < this.unfixedCurrentTimes[r]) this.unfixedCurrentFrameIndexes[r] = 0;
                this.unfixedCurrentTimes[r] = i;
                while (this.unfixedCurrentFrameIndexes[r] < h.keyFrame.length) {
                    if (h.keyFrame[this.unfixedCurrentFrameIndexes[r]].startTime > this.unfixedCurrentTimes[r]) break;
                    this.unfixedKeyframes[r] = h.keyFrame[this.unfixedCurrentFrameIndexes[r]];
                    this.unfixedCurrentFrameIndexes[r]++
                }
                var u = this.unfixedKeyframes[r];
                h.dataOffset = l;
                var c = i - u.startTime;
                var f = h.lerpType;
                if (f) {
                    switch (h.lerpType) {
                    case 0:
                    case 1:
                        for (a = 0; a < h.keyframeWidth;) a += h.interpolationMethod[a](h, a, t, l + a, u.data, c, null, u.duration, u.nextData);
                        break;
                    case 2:
                        ;
                        var d = u.interpolationData;
                        var g = d.length;
                        var p = 0;
                        for (a = 0; a < g;) {
                            var _ = d[a];
                            switch (_) {
                            case 6:
                                a += y.interpolation[_](h, p, t, l + p, u.data, c, null, u.duration, u.nextData, d, a + 1);
                                break;
                            case 7:
                                a += y.interpolation[_](h, p, t, l + p, u.data, c, null, u.duration, u.nextData, d, a + 1);
                                break;
                            default:
                                a += y.interpolation[_](h, p, t, l + p, u.data, c, null, u.duration, u.nextData)
                            }
                            p++
                        }
                        break
                    }
                } else {
                    for (a = 0; a < h.keyframeWidth;) a += h.interpolationMethod[a](h, a, t, l + a, u.data, c, null, u.duration, u.nextData)
                }
                l += h.keyframeWidth
            }
        };
        y._LinearInterpolation_0 = function(e, t, i, n, s, a, r, o, l, h) {
            var u = o === 0 ? 0 : a / o;
            i[n] = (1 - u) * s[t] + u * l[t];
            return 1
        };
        y._QuaternionInterpolation_1 = function(e, t, i, n, s, a, r, o, l, h) {
            var u = o === 0 ? 0 : a / o;
            g.slerpQuaternionArray(s, t, l, t, u, i, n);
            return 4
        };
        y._AngleInterpolation_2 = function(e, t, i, n, s, a, r, o, l, h) {
            return 0
        };
        y._RadiansInterpolation_3 = function(e, t, i, n, s, a, r, o, l, h) {
            return 0
        };
        y._Matrix4x4Interpolation_4 = function(e, t, i, n, s, a, r, o, l, h) {
            for (var u = 0; u < 16; u++, t++) i[n + u] = s[t] + a * r[t];
            return 16
        };
        y._NoInterpolation_5 = function(e, t, i, n, s, a, r, o, l, h) {
            i[n] = s[t];
            return 1
        };
        y._BezierInterpolation_6 = function(e, t, i, n, s, a, r, o, l, h, u) {
            u === void 0 && (u = 0);
            i[n] = s[t] + (l[t] - s[t]) * O.getBezierRate(a / o, h[u], h[u + 1], h[u + 2], h[u + 3]);
            return 5
        };
        y._BezierInterpolation_7 = function(e, t, i, n, s, a, r, o, l, h, u) {
            u === void 0 && (u = 0);
            i[n] = h[u + 4] + h[u + 5] * O.getBezierRate((a * .001 + h[u + 6]) / h[u + 7], h[u], h[u + 1], h[u + 2], h[u + 3]);
            return 9
        };
        y.load = function(e) {
            return se.loader.create(e, null, null, y)
        };
        y.interpolation = [y._LinearInterpolation_0, y._QuaternionInterpolation_1, y._AngleInterpolation_2, y._RadiansInterpolation_3, y._Matrix4x4Interpolation_4, y._NoInterpolation_5, y._BezierInterpolation_6, y._BezierInterpolation_7];
        return y
    } (C);
    var H = function(e) {
        function n() {
            this.isCached = false;
            this.canvas = null;
            this.tex = null;
            this.rec = null;
            n.__super.call(this)
        }
        r(n, "laya.ani.bone.canvasmesh.CacheAbleSkinMesh", e);
        var t = n.prototype;
        t.getCanvasPic = function() {
            var e = new f("2D");
            var t = e.getContext("2d");
            this.rec = this.mesh.getBounds();
            debugger;
            e.size(this.rec.width, this.rec.height);
            var i;
            i = this.transform;
            this.transform = n.tempMt;
            this.transform.identity();
            this.transform.translate( - this.rec.x, -this.rec.y);
            this.renderToContext(t);
            this.transform.translate( + this.rec.x, +this.rec.y);
            this.transform = i;
            return new Ue(e)
        };
        t.render = function(e, t, i) {
            if (!this.mesh.texture) return;
            if (!this.isCached) {
                this.isCached = true;
                this.tex = this.getCanvasPic()
            }
            if (!this.transform) {
                this.transform = z._tempMatrix;
                this.transform.identity();
                this.transform.translate(t, i);
                this._renderTextureToContext(e);
                this.transform.translate( - t, -i);
                this.transform = null
            } else {
                this.transform.translate(t, i);
                this._renderTextureToContext(e);
                this.transform.translate( - t, -i)
            }
        };
        t._renderTextureToContext = function(e) {
            this.context = e.ctx || e;
            e.save();
            var t;
            t = this.tex;
            if (this.transform) {
                var i = this.transform;
                e.transform(i.a, i.b, i.c, i.d, i.tx, i.ty)
            }
            this.rec = this.mesh.getBounds();
            e.translate(this.rec.x, this.rec.y);
            e.drawTexture(t, 0, 0, t.width, t.height, 0, 0);
            e.restore()
        };
        s(n, ["tempMt",
        function() {
            return this.tempMt = new Pe
        }]);
        return n
    } (z);
    var Y = function(a) {
        function e() {
            this.cacheOK = false;
            this.cacheCmdOK = false;
            this.transformCmds = [];
            this.drawCmds = [];
            e.__super.call(this);
            this.tempMesh = new B
        }
        r(e, "laya.ani.bone.canvasmesh.SimpleSkinMeshCanvas", a);
        var t = e.prototype;
        t.init2 = function(e, t, i, n, s) {
            a.prototype.init2.call(this, e, t, i, n, s);
            this.cacheOK = false;
            this.cacheCmdOK = false;
            this.transformCmds.length = 6;
            this.drawCmds.length = 9
        };
        t.renderToContext = function(e) {
            this.context = e.ctx || e;
            if (this.mesh) {
                if (this.mesh.uvs.length <= 8) {
                    if (this.mode == 0) {
                        this._renderWithIndexes(this.mesh)
                    } else {
                        this._renderNoIndexes(this.mesh)
                    }
                    return
                }
                if (!this.cacheOK) {
                    this.tempMesh.texture = this.mesh.texture;
                    this.tempMesh.uvs = this.mesh.texture.uv;
                    this.tempMesh.vertices = P.solveMesh(this.mesh, this.tempMesh.vertices);
                    this.cacheOK = true
                }
                if (this.mode == 0) {
                    this._renderWithIndexes(this.tempMesh)
                } else {
                    this._renderNoIndexes(this.tempMesh)
                }
            }
        };
        t._renderWithIndexes = function(e) {
            if (this.cacheCmdOK) {
                this.renderByCache(e);
                return
            }
            var t = e.indexes;
            var i = 0,
            n = t.length;
            if (n > 1) n = 1;
            for (i = 0; i < n; i += 3) {
                var s = t[i] * 2;
                var a = t[i + 1] * 2;
                var r = t[i + 2] * 2;
                this._renderDrawTriangle(e, s, a, r)
            }
            this.cacheCmdOK = true
        };
        t._renderDrawTriangle = function(e, t, i, n) {
            var s = this.context;
            var a = e.uvs;
            var r = e.vertices;
            var o = e.texture;
            var l = o.bitmap;
            var h = l.source;
            var u = o.width;
            var c = o.height;
            var f = l.width;
            var d = l.height;
            var g = NaN;
            var p = NaN;
            var _ = NaN;
            var m = NaN;
            var v = NaN;
            var y = NaN;
            if (e.useUvTransform) {
                var I = e.uvTransform;
                g = (a[t] * I.a + a[t + 1] * I.c + I.tx) * f;
                p = (a[i] * I.a + a[i + 1] * I.c + I.tx) * f;
                _ = (a[n] * I.a + a[n + 1] * I.c + I.tx) * f;
                m = (a[t] * I.b + a[t + 1] * I.d + I.ty) * d;
                v = (a[i] * I.b + a[i + 1] * I.d + I.ty) * d;
                y = (a[n] * I.b + a[n + 1] * I.d + I.ty) * d
            } else {
                g = a[t] * f;
                p = a[i] * f;
                _ = a[n] * f;
                m = a[t + 1] * d;
                v = a[i + 1] * d;
                y = a[n + 1] * d
            }
            var S = r[t];
            var C = r[i];
            var b = r[n];
            var w = r[t + 1];
            var x = r[i + 1];
            var R = r[n + 1];
            var L = g * v + m * _ + p * y - v * _ - m * p - g * y;
            var T = 1 / L;
            var D = S * v + m * b + C * y - v * b - m * C - S * y;
            var k = g * C + S * _ + p * b - C * _ - S * p - g * b;
            var G = g * v * b + m * C * _ + S * p * y - S * v * _ - m * p * b - g * C * y;
            var M = w * v + m * R + x * y - v * R - m * x - w * y;
            var B = g * x + w * _ + p * R - x * _ - w * p - g * R;
            var A = g * v * R + m * x * _ + w * p * y - w * v * _ - m * p * R - g * x * y;
            this.transformCmds[0] = D * T;
            this.transformCmds[1] = M * T;
            this.transformCmds[2] = k * T;
            this.transformCmds[3] = B * T;
            this.transformCmds[4] = G * T;
            this.transformCmds[5] = A * T;
            this.drawCmds[0] = h;
            this.drawCmds[1] = o.uv[0] * f;
            this.drawCmds[2] = o.uv[1] * d;
            this.drawCmds[3] = u;
            this.drawCmds[4] = c;
            this.drawCmds[5] = o.uv[0] * f;
            this.drawCmds[6] = o.uv[1] * d;
            this.drawCmds[7] = u;
            this.drawCmds[8] = c;
            s.save();
            if (this.transform) {
                var P = this.transform;
                s.transform(P.a, P.b, P.c, P.d, P.tx, P.ty)
            }
            s.transform.apply(s, this.transformCmds);
            s.drawImage.apply(s, this.drawCmds);
            s.restore()
        };
        t.renderByCache = function(e) {
            var t = this.context;
            t.save();
            if (this.transform) {
                var i = this.transform;
                t.transform(i.a, i.b, i.c, i.d, i.tx, i.ty)
            }
            t.transform.apply(t, this.transformCmds);
            t.drawImage.apply(t, this.drawCmds);
            t.restore()
        };
        return e
    } (z);
    var j = function(t) {
        function i(e, t) {
            this._templet = null;
            this._player = null;
            this._curOriginalData = null;
            this._boneMatrixArray = [];
            this._lastTime = 0;
            this._currAniName = null;
            this._currAniIndex = -1;
            this._pause = true;
            this._aniClipIndex = -1;
            this._clipIndex = -1;
            this._skinIndex = 0;
            this._skinName = "default";
            this._aniMode = 0;
            this._graphicsCache = null;
            this._boneSlotDic = null;
            this._bindBoneBoneSlotDic = null;
            this._boneSlotArray = null;
            this._index = -1;
            this._total = -1;
            this._indexControl = false;
            this._aniPath = null;
            this._texturePath = null;
            this._complete = null;
            this._loadAniMode = 0;
            this._yReverseMatrix = null;
            this._ikArr = null;
            this._tfArr = null;
            this._pathDic = null;
            this._rootBone = null;
            this._boneList = null;
            this._aniSectionDic = null;
            this._eventIndex = 0;
            this._drawOrderIndex = 0;
            this._drawOrder = null;
            this._lastAniClipIndex = -1;
            this._lastUpdateAniClipIndex = -1;
            i.__super.call(this);
            t === void 0 && (t = 0);
            if (e) this.init(e, t)
        }
        r(i, "laya.ani.bone.Skeleton", t);
        var e = i.prototype;
        e.init = function(e, t) {
            t === void 0 && (t = 0);
            var i = 0,
            n = 0;
            if (t == 1) {
                this._graphicsCache = [];
                for (i = 0, n = e.getAnimationCount(); i < n; i++) {
                    this._graphicsCache.push([])
                }
            }
            this._yReverseMatrix = e.yReverseMatrix;
            this._aniMode = t;
            this._templet = e;
            this._player = new V;
            this._player.cacheFrameRate = e.rate;
            this._player.templet = e;
            this._player.play();
            this._parseSrcBoneMatrix();
            this._boneList = e.mBoneArr;
            this._rootBone = e.mRootBone;
            this._aniSectionDic = e.aniSectionDic;
            if (e.ikArr.length > 0) {
                this._ikArr = [];
                for (i = 0, n = e.ikArr.length; i < n; i++) {
                    this._ikArr.push(new A(e.ikArr[i], this._boneList))
                }
            }
            if (e.pathArr.length > 0) {
                var s;
                var a;
                if (this._pathDic == null) this._pathDic = {};
                var r;
                for (i = 0, n = e.pathArr.length; i < n; i++) {
                    s = e.pathArr[i];
                    a = new U(s, this._boneList);
                    r = this._boneSlotDic[s.name];
                    if (r) {
                        a = new U(s, this._boneList);
                        a.target = r
                    }
                    this._pathDic[s.name] = a
                }
            }
            if (e.tfArr.length > 0) {
                this._tfArr = [];
                for (i = 0, n = e.tfArr.length; i < n; i++) {
                    this._tfArr.push(new E(e.tfArr[i], this._boneList))
                }
            }
            if (e.skinDataArray.length > 0) {
                var o = this._templet.skinDataArray[this._skinIndex];
                this._skinName = o.name
            }
            this._player.on("played", this, this._onPlay);
            this._player.on("stopped", this, this._onStop);
            this._player.on("paused", this, this._onPause)
        };
        e.load = function(e, t, i) {
            i === void 0 && (i = 0);
            this._aniPath = e;
            this._complete = t;
            this._loadAniMode = i;
            se.loader.load([{
                url: e,
                type: "arraybuffer"
            }], _.create(this, this._onLoaded))
        };
        e._onLoaded = function() {
            var e = d.getRes(this._aniPath);
            if (e == null) return;
            if (J.TEMPLET_DICTIONARY == null) {
                J.TEMPLET_DICTIONARY = {}
            }
            var t;
            t = J.TEMPLET_DICTIONARY[this._aniPath];
            if (t) {
                if (t.isParseFail) {
                    this._parseFail()
                } else {
                    if (t.isParserComplete) {
                        this._parseComplete()
                    } else {
                        t.on("complete", this, this._parseComplete);
                        t.on("error", this, this._parseFail)
                    }
                }
            } else {
                t = new J;
                t._setUrl(this._aniPath);
                J.TEMPLET_DICTIONARY[this._aniPath] = t;
                t.on("complete", this, this._parseComplete);
                t.on("error", this, this._parseFail);
                t.isParserComplete = false;
                t.parseData(null, e)
            }
        };
        e._parseComplete = function() {
            var e = J.TEMPLET_DICTIONARY[this._aniPath];
            if (e) {
                this.init(e, this._loadAniMode);
                this.play(0, true)
            }
            this._complete && this._complete.runWith(this)
        };
        e._parseFail = function() {
            console.log("[Error]:" + this._aniPath + "解析失败")
        };
        e._onPlay = function() {
            this.event("played")
        };
        e._onStop = function() {
            var e;
            var t = this._templet.eventAniArr;
            var i = t[this._aniClipIndex];
            if (i && this._eventIndex < i.length) {
                for (; this._eventIndex < i.length; this._eventIndex++) {
                    e = i[this._eventIndex];
                    if (e.time >= this._player.playStart && e.time <= this._player.playEnd) {
                        this.event("label", e)
                    }
                }
            }
            this._drawOrder = null;
            this.event("stopped")
        };
        e._onPause = function() {
            this.event("paused")
        };
        e._parseSrcBoneMatrix = function() {
            var e = 0,
            t = 0;
            t = this._templet.srcBoneMatrixArr.length;
            for (e = 0; e < t; e++) {
                this._boneMatrixArray.push(new Pe)
            }
            if (this._aniMode == 0) {
                this._boneSlotDic = this._templet.boneSlotDic;
                this._bindBoneBoneSlotDic = this._templet.bindBoneBoneSlotDic;
                this._boneSlotArray = this._templet.boneSlotArray
            } else {
                if (this._boneSlotDic == null) this._boneSlotDic = {};
                if (this._bindBoneBoneSlotDic == null) this._bindBoneBoneSlotDic = {};
                if (this._boneSlotArray == null) this._boneSlotArray = [];
                var i = this._templet.boneSlotArray;
                var n;
                var s;
                for (e = 0, t = i.length; e < t; e++) {
                    n = i[e];
                    s = this._bindBoneBoneSlotDic[n.parent];
                    if (s == null) {
                        this._bindBoneBoneSlotDic[n.parent] = s = []
                    }
                    this._boneSlotDic[n.name] = n = n.copy();
                    s.push(n);
                    this._boneSlotArray.push(n)
                }
            }
        };
        e._emitMissedEvents = function(e, t, i) {
            i === void 0 && (i = 0);
            var n = this._templet.eventAniArr;
            var s = n[this._player.currentAnimationClipIndex];
            if (s) {
                var a = 0,
                r = 0;
                var o;
                r = s.length;
                for (a = i; a < r; a++) {
                    o = s[a];
                    if (o.time >= this._player.playStart && o.time <= this._player.playEnd) {
                        this.event("label", o)
                    }
                }
            }
        };
        e._update = function(e) {
            e === void 0 && (e = true);
            if (this._pause) return;
            if (e && this._indexControl) {
                return
            }
            var t = this.timer.currTimer;
            var i = this._player.currentKeyframeIndex;
            var n = t - this._lastTime;
            if (e) {
                this._player._update(n)
            } else {
                i = -1
            }
            this._lastTime = t;
            if (!this._player) return;
            this._index = this._clipIndex = this._player.currentKeyframeIndex;
            if (this._index < 0) return;
            if (n > 0 && this._clipIndex == i && this._lastUpdateAniClipIndex == this._aniClipIndex) {
                return
            }
            this._lastUpdateAniClipIndex = this._aniClipIndex;
            if (i > this._clipIndex && this._eventIndex != 0) {
                this._emitMissedEvents(this._player.playStart, this._player.playEnd, this._eventIndex);
                this._eventIndex = 0
            }
            var s;
            var a = this._templet.eventAniArr;
            var r = a[this._aniClipIndex];
            if (r && this._eventIndex < r.length) {
                s = r[this._eventIndex];
                if (s.time >= this._player.playStart && s.time <= this._player.playEnd) {
                    if (this._player.currentPlayTime >= s.time) {
                        this.event("label", s);
                        this._eventIndex++
                    }
                } else {
                    this._eventIndex++
                }
            }
            var o;
            if (this._aniMode == 0) {
                o = this._templet.getGrahicsDataWithCache(this._aniClipIndex, this._clipIndex);
                if (o) {
                    if (this.graphics != o) {
                        this.graphics = o
                    }
                    return
                } else {
                    var l = 0,
                    h = 0;
                    h = this._clipIndex;
                    while (!this._templet.getGrahicsDataWithCache(this._aniClipIndex, h - 1) && h > 0) {
                        h--
                    }
                    if (h < this._clipIndex) {
                        for (l = h; l < this._clipIndex; l++) {
                            this._createGraphics(l)
                        }
                    }
                }
            } else if (this._aniMode == 1) {
                o = this._getGrahicsDataWithCache(this._aniClipIndex, this._clipIndex);
                if (o) {
                    if (this.graphics != o) {
                        this.graphics = o
                    }
                    return
                } else {
                    h = this._clipIndex;
                    while (!this._getGrahicsDataWithCache(this._aniClipIndex, h - 1) && h > 0) {
                        h--
                    }
                    if (h < this._clipIndex) {
                        for (l = h; l < this._clipIndex; l++) {
                            this._createGraphics(l)
                        }
                    }
                }
            }
            this._createGraphics()
        };
        e._createGraphics = function(e) {
            e === void 0 && (e = -1);
            if (e == -1) e = this._clipIndex;
            var t = e * this._player.cacheFrameRateInterval;
            var i;
            var n = this._templet.drawOrderAniArr;
            var s = n[this._aniClipIndex];
            if (s && s.length > 0) {
                this._drawOrderIndex = 0;
                i = s[this._drawOrderIndex];
                while (t >= i.time) {
                    this._drawOrder = i.drawOrder;
                    this._drawOrderIndex++;
                    if (this._drawOrderIndex >= s.length) {
                        break
                    }
                    i = s[this._drawOrderIndex]
                }
            }
            var a;
            if (this._aniMode == 0 || this._aniMode == 1) {
                this.graphics = q.create()
            } else {
                if (this.graphics instanceof laya.ani.GraphicsAni) {
                    this.graphics.clear()
                } else {
                    this.graphics = q.create()
                }
            }
            a = this.graphics;
            var r = this._templet.getNodes(this._aniClipIndex);
            this._templet.getOriginalData(this._aniClipIndex, this._curOriginalData, this._player._fullFrames[this._aniClipIndex], e, t);
            var o = this._aniSectionDic[this._aniClipIndex];
            var l;
            var h = 0;
            var u = 0,
            c = 0,
            f = 0,
            d = 0;
            var g;
            var p;
            var _;
            var m;
            var v = this._templet.srcBoneMatrixArr.length;
            for (u = 0, d = o[0]; u < v; u++) {
                m = this._boneList[u];
                _ = this._templet.srcBoneMatrixArr[u];
                m.resultTransform.scX = _.scX * this._curOriginalData[h++];
                m.resultTransform.skX = _.skX + this._curOriginalData[h++];
                m.resultTransform.skY = _.skY + this._curOriginalData[h++];
                m.resultTransform.scY = _.scY * this._curOriginalData[h++];
                m.resultTransform.x = _.x + this._curOriginalData[h++];
                m.resultTransform.y = _.y + this._curOriginalData[h++];
                if (this._templet.tMatrixDataLen === 8) {
                    m.resultTransform.skewX = _.skewX + this._curOriginalData[h++];
                    m.resultTransform.skewY = _.skewY + this._curOriginalData[h++]
                }
            }
            var y = {};
            var I = {};
            var S;
            for (d += o[1]; u < d; u++) {
                S = r[u];
                y[S.name] = this._curOriginalData[h++];
                I[S.name] = this._curOriginalData[h++];
                this._curOriginalData[h++];
                this._curOriginalData[h++];
                this._curOriginalData[h++];
                this._curOriginalData[h++]
            }
            var C = {};
            var b = {};
            for (d += o[2]; u < d; u++) {
                S = r[u];
                C[S.name] = this._curOriginalData[h++];
                b[S.name] = this._curOriginalData[h++];
                this._curOriginalData[h++];
                this._curOriginalData[h++];
                this._curOriginalData[h++];
                this._curOriginalData[h++]
            }
            if (this._pathDic) {
                var w;
                for (d += o[3]; u < d; u++) {
                    S = r[u];
                    w = this._pathDic[S.name];
                    if (w) {
                        var x = new Ae(S.extenData);
                        switch (x.getByte()) {
                        case 1:
                            w.position = this._curOriginalData[h++];
                            break;
                        case 2:
                            w.spacing = this._curOriginalData[h++];
                            break;
                        case 3:
                            w.rotateMix = this._curOriginalData[h++];
                            w.translateMix = this._curOriginalData[h++];
                            break
                        }
                    }
                }
            }
            if (this._yReverseMatrix) {
                this._rootBone.update(this._yReverseMatrix)
            } else {
                this._rootBone.update(Pe.TEMP.identity())
            }
            if (this._ikArr) {
                var R;
                for (u = 0, d = this._ikArr.length; u < d; u++) {
                    R = this._ikArr[u];
                    if (C.hasOwnProperty(R.name)) {
                        R.bendDirection = C[R.name]
                    }
                    if (b.hasOwnProperty(R.name)) {
                        R.mix = b[R.name]
                    }
                    R.apply()
                }
            }
            if (this._pathDic) {
                for (var L in this._pathDic) {
                    w = this._pathDic[L];
                    w.apply(this._boneList, a)
                }
            }
            if (this._tfArr) {
                var T;
                for (u = 0, f = this._tfArr.length; u < f; u++) {
                    T = this._tfArr[u];
                    T.apply()
                }
            }
            for (u = 0, f = this._boneList.length; u < f; u++) {
                m = this._boneList[u];
                p = this._bindBoneBoneSlotDic[m.name];
                m.resultMatrix.copyTo(this._boneMatrixArray[u]);
                if (p) {
                    for (c = 0, d = p.length; c < d; c++) {
                        g = p[c];
                        if (g) {
                            g.setParentMatrix(m.resultMatrix)
                        }
                    }
                }
            }
            var D = {};
            var k = this._templet.deformAniArr;
            var G;
            var M;
            var B;
            if (k && k.length > 0) {
                if (this._lastAniClipIndex != this._aniClipIndex) {
                    this._lastAniClipIndex = this._aniClipIndex;
                    for (u = 0, d = this._boneSlotArray.length; u < d; u++) {
                        g = this._boneSlotArray[u];
                        g.deformData = null
                    }
                }
                var A = k[this._aniClipIndex];
                G = A["default"];
                this._setDeform(G, D, this._boneSlotArray, t);
                var P;
                for (P in A) {
                    if (P != "default" && P != this._skinName) {
                        G = A[P];
                        this._setDeform(G, D, this._boneSlotArray, t)
                    }
                }
                G = A[this._skinName];
                this._setDeform(G, D, this._boneSlotArray, t)
            }
            var U;
            var E;
            var N;
            if (this._drawOrder) {
                for (u = 0, d = this._drawOrder.length; u < d; u++) {
                    g = this._boneSlotArray[this._drawOrder[u]];
                    U = y[g.name];
                    E = I[g.name];
                    if (!isNaN(E)) {
                        a.save();
                        a.alpha(E)
                    }
                    if (!isNaN(U) && U != -2) {
                        if (this._templet.attachmentNames) {
                            g.showDisplayByName(this._templet.attachmentNames[U])
                        } else {
                            g.showDisplayByIndex(U)
                        }
                    }
                    if (D[this._drawOrder[u]]) {
                        N = D[this._drawOrder[u]];
                        if (g.currDisplayData && N[g.currDisplayData.attachmentName]) {
                            g.deformData = N[g.currDisplayData.attachmentName]
                        } else {
                            g.deformData = null
                        }
                    } else {
                        g.deformData = null
                    }
                    if (!isNaN(E)) {
                        g.draw(a, this._boneMatrixArray, this._aniMode == 2, E)
                    } else {
                        g.draw(a, this._boneMatrixArray, this._aniMode == 2)
                    }
                    if (!isNaN(E)) {
                        a.restore()
                    }
                }
            } else {
                for (u = 0, d = this._boneSlotArray.length; u < d; u++) {
                    g = this._boneSlotArray[u];
                    U = y[g.name];
                    E = I[g.name];
                    if (!isNaN(E)) {
                        a.save();
                        a.alpha(E)
                    }
                    if (!isNaN(U) && U != -2) {
                        if (this._templet.attachmentNames) {
                            g.showDisplayByName(this._templet.attachmentNames[U])
                        } else {
                            g.showDisplayByIndex(U)
                        }
                    }
                    if (D[u]) {
                        N = D[u];
                        if (g.currDisplayData && N[g.currDisplayData.attachmentName]) {
                            g.deformData = N[g.currDisplayData.attachmentName]
                        } else {
                            g.deformData = null
                        }
                    } else {
                        g.deformData = null
                    }
                    if (!isNaN(E)) {
                        g.draw(a, this._boneMatrixArray, this._aniMode == 2, E)
                    } else {
                        g.draw(a, this._boneMatrixArray, this._aniMode == 2)
                    }
                    if (!isNaN(E)) {
                        a.restore()
                    }
                }
            }
            if (this._aniMode == 0) {
                this._templet.setGrahicsDataWithCache(this._aniClipIndex, e, a)
            } else if (this._aniMode == 1) {
                this._setGrahicsDataWithCache(this._aniClipIndex, e, a)
            }
        };
        e._setDeform = function(e, t, i, n) {
            if (!e) return;
            var s;
            var a;
            var r;
            var o = 0,
            l = 0,
            h = 0;
            if (e) {
                for (o = 0, l = e.deformSlotDataList.length; o < l; o++) {
                    s = e.deformSlotDataList[o];
                    for (h = 0; h < s.deformSlotDisplayList.length; h++) {
                        a = s.deformSlotDisplayList[h];
                        r = i[a.slotIndex];
                        a.apply(n, r);
                        if (!t[a.slotIndex]) {
                            t[a.slotIndex] = {}
                        }
                        t[a.slotIndex][a.attachment] = a.deformData
                    }
                }
            }
        };
        e.getAnimNum = function() {
            return this._templet.getAnimationCount()
        };
        e.getAniNameByIndex = function(e) {
            return this._templet.getAniNameByIndex(e)
        };
        e.getSlotByName = function(e) {
            return this._boneSlotDic[e]
        };
        e.showSkinByName = function(e, t) {
            t === void 0 && (t = true);
            this.showSkinByIndex(this._templet.getSkinIndexByName(e), t)
        };
        e.showSkinByIndex = function(e, t) {
            t === void 0 && (t = true);
            for (var i = 0; i < this._boneSlotArray.length; i++) {
                this._boneSlotArray[i].showSlotData(null, t)
            }
            if (this._templet.showSkinByIndex(this._boneSlotDic, e, t)) {
                var n = this._templet.skinDataArray[e];
                this._skinIndex = e;
                this._skinName = n.name
            }
            this._clearCache()
        };
        e.showSlotSkinByIndex = function(e, t) {
            if (this._aniMode == 0) return;
            var i = this.getSlotByName(e);
            if (i) {
                i.showDisplayByIndex(t)
            }
            this._clearCache()
        };
        e.showSlotSkinByName = function(e, t) {
            if (this._aniMode == 0) return;
            var i = this.getSlotByName(e);
            if (i) {
                i.showDisplayByName(t)
            }
            this._clearCache()
        };
        e.replaceSlotSkinName = function(e, t, i) {
            if (this._aniMode == 0) return;
            var n = this.getSlotByName(e);
            if (n) {
                n.replaceDisplayByName(t, i)
            }
            this._clearCache()
        };
        e.replaceSlotSkinByIndex = function(e, t, i) {
            if (this._aniMode == 0) return;
            var n = this.getSlotByName(e);
            if (n) {
                n.replaceDisplayByIndex(t, i)
            }
            this._clearCache()
        };
        e.setSlotSkin = function(e, t) {
            if (this._aniMode == 0) return;
            var i = this.getSlotByName(e);
            if (i) {
                i.replaceSkin(t)
            }
            this._clearCache()
        };
        e._clearCache = function() {
            if (this._aniMode == 1) {
                for (var e = 0,
                t = this._graphicsCache.length; e < t; e++) {
                    for (var i = 0,
                    n = this._graphicsCache[e].length; i < n; i++) {
                        var s = this._graphicsCache[e][i];
                        if (s != this.graphics) {
                            q.recycle(s)
                        }
                    }
                    this._graphicsCache[e].length = 0
                }
            }
        };
        e.play = function(e, t, i, n, s, a) {
            i === void 0 && (i = true);
            n === void 0 && (n = 0);
            s === void 0 && (s = 0);
            a === void 0 && (a = true);
            this._indexControl = false;
            var r = -1;
            var o = NaN;
            if (t) {
                o = 2147483647
            } else {
                o = 0
            }
            if (typeof e == "string") {
                for (var l = 0,
                h = this._templet.getAnimationCount(); l < h; l++) {
                    var u = this._templet.getAnimation(l);
                    if (u && e == u.name) {
                        r = l;
                        break
                    }
                }
            } else {
                r = e
            }
            if (r > -1 && r < this.getAnimNum()) {
                this._aniClipIndex = r;
                if (i || this._pause || this._currAniIndex != r) {
                    this._currAniIndex = r;
                    this._curOriginalData = new Float32Array(this._templet.getTotalkeyframesLength(r));
                    this._drawOrder = null;
                    this._eventIndex = 0;
                    this._player.play(r, this._player.playbackRate, o, n, s);
                    if (a) this._templet.showSkinByIndex(this._boneSlotDic, this._skinIndex);
                    if (this._pause) {
                        this._pause = false;
                        this._lastTime = c.now();
                        this.timer.frameLoop(1, this, this._update, null, true)
                    }
                    this._update()
                }
            }
        };
        e.stop = function() {
            if (!this._pause) {
                this._pause = true;
                if (this._player) {
                    this._player.stop(true)
                }
                this.timer.clear(this, this._update)
            }
        };
        e.playbackRate = function(e) {
            if (this._player) {
                this._player.playbackRate = e
            }
        };
        e.paused = function() {
            if (!this._pause) {
                this._pause = true;
                if (this._player) {
                    this._player.paused = true
                }
                this.timer.clear(this, this._update)
            }
        };
        e.resume = function() {
            this._indexControl = false;
            if (this._pause) {
                this._pause = false;
                if (this._player) {
                    this._player.paused = false
                }
                this._lastTime = c.now();
                this.timer.frameLoop(1, this, this._update, null, true)
            }
        };
        e._getGrahicsDataWithCache = function(e, t) {
            return this._graphicsCache[e][t]
        };
        e._setGrahicsDataWithCache = function(e, t, i) {
            this._graphicsCache[e][t] = i
        };
        e.destroy = function(e) {
            e === void 0 && (e = true);
            t.prototype.destroy.call(this, e);
            this._templet = null;
            if (this._player) this._player.offAll();
            this._player = null;
            this._curOriginalData = null;
            this._boneMatrixArray.length = 0;
            this._lastTime = 0;
            this.timer.clear(this, this._update)
        };
        o(0, e, "url",
        function() {
            return this._aniPath
        },
        function(e) {
            this.load(e)
        });
        o(0, e, "index",
        function() {
            return this._index
        },
        function(e) {
            if (this.player) {
                this._index = e;
                this._player.currentTime = this._index * 1e3 / this._player.cacheFrameRate;
                this._indexControl = true;
                this._update(false)
            }
        });
        o(0, e, "total",
        function() {
            if (this._templet && this._player) {
                this._total = Math.floor(this._templet.getAniDuration(this._player.currentAnimationClipIndex) / 1e3 * this._player.cacheFrameRate)
            } else {
                this._total = -1
            }
            return this._total
        });
        o(0, e, "templet",
        function() {
            return this._templet
        });
        o(0, e, "player",
        function() {
            return this._player
        });
        i.useSimpleMeshInCanvas = false;
        return i
    } (ae);
    var X = function(t) {
        function m(e) {
            this._start = 0;
            this._Pos = 0;
            this._data = null;
            this._curIndex = 0;
            this._preIndex = 0;
            this._playIndex = 0;
            this._playing = false;
            this._ended = true;
            this._count = 0;
            this._ids = null;
            this._loadedImage = {};
            this._idOfSprite = null;
            this._parentMovieClip = null;
            this._movieClipList = null;
            this._labels = null;
            this.basePath = null;
            this._atlasPath = null;
            this._url = null;
            this._isRoot = false;
            this._completeHandler = null;
            this._endFrame = -1;
            this.interval = 30;
            this.loop = false;
            m.__super.call(this);
            this._ids = {};
            this._idOfSprite = [];
            this._reset();
            this._playing = false;
            this._parentMovieClip = e;
            if (!e) {
                this._movieClipList = [this];
                this._isRoot = true;
                this._setUpNoticeType(1)
            } else {
                this._isRoot = false;
                this._movieClipList = e._movieClipList;
                this._movieClipList.push(this)
            }
        }
        r(m, "laya.ani.swf.MovieClip", t);
        var e = m.prototype;
        e.destroy = function(e) {
            e === void 0 && (e = true);
            this._clear();
            t.prototype.destroy.call(this, e)
        };
        e._setDisplay = function(e) {
            t.prototype._setDisplay.call(this, e);
            if (this._isRoot) {
                this._$3__onDisplay(e)
            }
        };
        e._$3__onDisplay = function(e) {
            if (e) this.timer.loop(this.interval, this, this.updates, null, true);
            else this.timer.clear(this, this.updates)
        };
        e.updates = function() {
            if (this._parentMovieClip) return;
            var e = 0,
            t = 0;
            t = this._movieClipList.length;
            for (e = 0; e < t; e++) {
                this._movieClipList[e] && this._movieClipList[e]._update()
            }
        };
        e.addLabel = function(e, t) {
            if (!this._labels) this._labels = {};
            this._labels[t] = e
        };
        e.removeLabel = function(e) {
            if (!e) this._labels = null;
            else if (!this._labels) {
                for (var t in this._labels) {
                    if (this._labels[t] === e) {
                        delete this._labels[t];
                        break
                    }
                }
            }
        };
        e._update = function() {
            if (!this._data) return;
            if (!this._playing) return;
            this._playIndex++;
            if (this._playIndex >= this._count) {
                if (!this.loop) {
                    this._playIndex--;
                    this.stop();
                    return
                }
                this._playIndex = 0
            }
            this._parse(this._playIndex);
            if (this._labels && this._labels[this._playIndex]) this.event("label", this._labels[this._playIndex]);
            if (this._endFrame != -1 && this._endFrame == this._playIndex) {
                this._endFrame = -1;
                if (this._completeHandler != null) {
                    var e = this._completeHandler;
                    this._completeHandler = null;
                    e.run()
                }
                this.stop()
            }
        };
        e.stop = function() {
            this._playing = false
        };
        e.gotoAndStop = function(e) {
            this.index = e;
            this.stop()
        };
        e._clear = function() {
            this.stop();
            this._idOfSprite.length = 0;
            if (!this._parentMovieClip) {
                this.timer.clear(this, this.updates);
                var e = 0,
                t = 0;
                t = this._movieClipList.length;
                for (e = 0; e < t; e++) {
                    if (this._movieClipList[e] != this) this._movieClipList[e]._clear()
                }
                this._movieClipList.length = 0
            }
            if (this._atlasPath) {
                d.clearRes(this._atlasPath)
            }
            var i;
            for (i in this._loadedImage) {
                if (this._loadedImage[i]) {
                    d.clearRes(i);
                    this._loadedImage[i] = false
                }
            }
            this.removeChildren();
            this.graphics = null;
            this._parentMovieClip = null
        };
        e.play = function(e, t) {
            e === void 0 && (e = 0);
            t === void 0 && (t = true);
            this.loop = t;
            this._playing = true;
            if (this._data) this._displayFrame(e)
        };
        e._displayFrame = function(e) {
            e === void 0 && (e = -1);
            if (e != -1) {
                if (this._curIndex > e) this._reset();
                this._parse(e)
            }
        };
        e._reset = function(e) {
            e === void 0 && (e = true);
            if (e && this._curIndex != 1) this.removeChildren();
            this._preIndex = this._curIndex = -1;
            this._Pos = this._start
        };
        e._parse = function(e) {
            var t = this;
            var i, n, s = 0,
            a = 0,
            r = 0,
            o = 0,
            l = false;
            var h = this._idOfSprite,
            u = this._data,
            c;
            if (this._ended) this._reset();
            u.pos = this._Pos;
            this._ended = false;
            this._playIndex = e;
            if (this._curIndex > e && e < this._preIndex) {
                this._reset(true);
                u.pos = this._Pos
            }
            while (this._curIndex <= e && !this._ended) {
                a = u.getUint16();
                switch (a) {
                case 12:
                    s = u.getUint16();
                    r = this._ids[u.getUint16()];
                    this._Pos = u.pos;
                    u.pos = r;
                    if ((o = u.getUint8()) == 0) {
                        var f = u.getUint16();
                        n = h[s];
                        if (!n) {
                            n = h[s] = new ae;
                            var d = new ae;
                            d.loadImage(this.basePath + f + ".png");
                            this._loadedImage[this.basePath + f + ".png"] = true;
                            n.addChild(d);
                            d.size(u.getFloat32(), u.getFloat32());
                            var g = u._getMatrix();
                            d.transform = g
                        }
                        n.alpha = 1
                    } else if (o == 1) {
                        i = h[s];
                        if (!i) {
                            h[s] = i = new m(this);
                            i.interval = this.interval;
                            i._ids = this._ids;
                            i.basePath = this.basePath;
                            i._setData(u, r);
                            i._initState();
                            i.play(0)
                        }
                        i.alpha = 1
                    }
                    u.pos = this._Pos;
                    break;
                case 3:
                    ;
                    var p = h[u.getUint16()];
                    if (p) {
                        this.addChild(p);
                        p.zOrder = u.getUint16();
                        l = true
                    }
                    break;
                case 4:
                    p = h[u.getUint16()];
                    p && p.removeSelf();
                    break;
                case 5:
                    h[u.getUint16()][m._ValueList[u.getUint16()]] = u.getFloat32();
                    break;
                case 6:
                    h[u.getUint16()].visible = u.getUint8() > 0;
                    break;
                case 7:
                    n = h[u.getUint16()];
                    var _ = n.transform || Pe.create();
                    _.setTo(u.getFloat32(), u.getFloat32(), u.getFloat32(), u.getFloat32(), u.getFloat32(), u.getFloat32());
                    n.transform = _;
                    break;
                case 8:
                    h[u.getUint16()].setPos(u.getFloat32(), u.getFloat32());
                    break;
                case 9:
                    h[u.getUint16()].setSize(u.getFloat32(), u.getFloat32());
                    break;
                case 10:
                    h[u.getUint16()].alpha = u.getFloat32();
                    break;
                case 11:
                    h[u.getUint16()].setScale(u.getFloat32(), u.getFloat32());
                    break;
                case 98:
                    c = u.getString();
                    this.event(c);
                    if (c == "stop") this.stop();
                    break;
                case 99:
                    this._curIndex = u.getUint16();
                    l && this.updateZOrder();
                    break;
                case 100:
                    this._count = this._curIndex + 1;
                    this._ended = true;
                    if (this._playing) {
                        this.event("enterframe");
                        this.event("end");
                        this.event("complete")
                    }
                    this._reset(false);
                    break
                }
            }
            if (this._playing && !this._ended) this.event("enterframe");
            this._Pos = u.pos
        };
        e._setData = function(e, t) {
            this._data = e;
            this._start = t + 3
        };
        e.load = function(e, t, i) {
            t === void 0 && (t = false);
            this._url = e;
            if (t) this._atlasPath = i ? i: e.split(".swf")[0] + ".json";
            this.stop();
            this._clear();
            this._movieClipList = [this];
            var n;
            n = [{
                url: e,
                type: "arraybuffer"
            }];
            if (this._atlasPath) {
                n.push({
                    url: this._atlasPath,
                    type: "atlas"
                })
            }
            se.loader.load(n, _.create(this, this._onLoaded))
        };
        e._onLoaded = function() {
            var e;
            e = d.getRes(this._url);
            if (!e) {
                this.event("error", "file not find");
                return
            }
            if (this._atlasPath && !d.getAtlas(this._atlasPath)) {
                this.event("error", "Atlas not find");
                return
            }
            this.basePath = this._atlasPath ? d.getAtlas(this._atlasPath).dir: this._url.split(".swf")[0] + "/image/";
            this._initData(e)
        };
        e._initState = function() {
            this._reset();
            this._ended = false;
            var e = this._playing;
            this._playing = false;
            this._curIndex = 0;
            while (!this._ended) this._parse(++this._curIndex);
            this._playing = e
        };
        e._initData = function(e) {
            this._data = new Ae(e);
            var t = 0,
            i = this._data.getUint16();
            for (t = 0; t < i; t++) this._ids[this._data.getInt16()] = this._data.getInt32();
            this.interval = 1e3 / this._data.getUint16();
            this._setData(this._data, this._ids[32767]);
            this._initState();
            this.play(0);
            this.event("loaded");
            if (!this._parentMovieClip) this.timer.loop(this.interval, this, this.updates, null, true)
        };
        e.playTo = function(e, t, i) {
            this._completeHandler = i;
            this._endFrame = t;
            this.play(e, false)
        };
        o(0, e, "index",
        function() {
            return this._playIndex
        },
        function(e) {
            this._playIndex = e;
            if (this._data) this._displayFrame(this._playIndex);
            if (this._labels && this._labels[e]) this.event("label", this._labels[e])
        });
        o(0, e, "count",
        function() {
            return this._count
        });
        o(0, e, "playing",
        function() {
            return this._playing
        });
        o(0, e, "url", null,
        function(e) {
            this.load(e)
        });
        m._ValueList = ["x", "y", "width", "height", "scaleX", "scaleY", "rotation", "alpha"];
        return m
    } (ae);
    var J = function(t) {
        function a() {
            this._mainTexture = null;
            this._textureJson = null;
            this._graphicsCache = [];
            this.srcBoneMatrixArr = [];
            this.ikArr = [];
            this.tfArr = [];
            this.pathArr = [];
            this.boneSlotDic = {};
            this.bindBoneBoneSlotDic = {};
            this.boneSlotArray = [];
            this.skinDataArray = [];
            this.skinDic = {};
            this.subTextureDic = {};
            this.isParseFail = false;
            this.yReverseMatrix = null;
            this.drawOrderAniArr = [];
            this.eventAniArr = [];
            this.attachmentNames = null;
            this.deformAniArr = [];
            this._isDestroyed = false;
            this._rate = 30;
            this.isParserComplete = false;
            this.aniSectionDic = {};
            this._skBufferUrl = null;
            this._textureDic = {};
            this._loadList = null;
            this._path = null;
            this.tMatrixDataLen = 0;
            this.mRootBone = null;
            a.__super.call(this);
            this.skinSlotDisplayDataArr = [];
            this.mBoneArr = []
        }
        r(a, "laya.ani.bone.Templet", t);
        var e = a.prototype;
        e.loadAni = function(e) {
            this._skBufferUrl = e;
            se.loader.load(e, _.create(this, this.onComplete), null, "arraybuffer")
        };
        e.onComplete = function(e) {
            if (this._isDestroyed) {
                this.destroy();
                return
            }
            var t = d.getRes(this._skBufferUrl);
            if (!t) {
                this.event("error", "load failed:" + this._skBufferUrl);
                return
            }
            this._path = this._skBufferUrl.slice(0, this._skBufferUrl.lastIndexOf("/")) + "/";
            this.parseData(null, t)
        };
        e.parseData = function(e, t, i) {
            i === void 0 && (i = 30);
            if (!this._path && this.url) this._path = this.url.slice(0, this.url.lastIndexOf("/")) + "/";
            this._mainTexture = e;
            if (this._mainTexture) {
                if (S.isWebGL && e.bitmap) {
                    e.bitmap.enableMerageInAtlas = false
                }
            }
            this._rate = i;
            this.parse(t)
        };
        e.buildArmature = function(e) {
            e === void 0 && (e = 0);
            return new j(this, e)
        };
        e.parse = function(e) {
            t.prototype.parse.call(this, e);
            this._endLoaded();
            if (this._aniVersion != a.LAYA_ANIMATION_VISION) {
                console.log("[Error] 版本不一致，请使用IDE版本配套的重新导出" + this._aniVersion + "->" + a.LAYA_ANIMATION_VISION);
                this._loaded = false
            }
            if (this.loaded) {
                if (this._mainTexture) {
                    this._parsePublicExtData()
                } else {
                    this._parseTexturePath()
                }
            } else {
                this.event("error", this);
                this.isParseFail = true
            }
        };
        e._parseTexturePath = function() {
            if (this._isDestroyed) {
                this.destroy();
                return
            }
            var e = 0;
            this._loadList = [];
            var t = new Ae(this.getPublicExtData());
            var i = 0,
            n = 0,
            s = 0,
            a = 0;
            var r = 0,
            o = 0,
            l = 0,
            h = 0;
            var u = 0;
            var c = t.getInt32();
            var f = t.readUTFString();
            var d = f.split("\n");
            var g;
            var p;
            for (e = 0; e < c; e++) {
                p = this._path + d[e * 2];
                f = d[e * 2 + 1];
                i = t.getFloat32();
                n = t.getFloat32();
                s = t.getFloat32();
                a = t.getFloat32();
                u = t.getFloat32();
                r = isNaN(u) ? 0 : u;
                u = t.getFloat32();
                o = isNaN(u) ? 0 : u;
                u = t.getFloat32();
                l = isNaN(u) ? s: u;
                u = t.getFloat32();
                h = isNaN(u) ? a: u;
                if (this._loadList.indexOf(p) == -1) {
                    this._loadList.push(p)
                }
            }
            se.loader.load(this._loadList, _.create(this, this._textureComplete))
        };
        e._textureComplete = function() {
            var e;
            var t;
            for (var i = 0,
            n = this._loadList.length; i < n; i++) {
                t = this._loadList[i];
                e = this._textureDic[t] = d.getRes(t);
                if (S.isWebGL && e && e.bitmap) {
                    e.bitmap.enableMerageInAtlas = false
                }
            }
            this._parsePublicExtData()
        };
        e._parsePublicExtData = function() {
            var e = 0,
            t = 0,
            i = 0,
            n = 0,
            s = 0;
            for (e = 0, s = this.getAnimationCount(); e < s; e++) {
                this._graphicsCache.push([])
            }
            var a = false;
            a = this._aniClassName != "Dragon";
            var r = new Ae(this.getPublicExtData());
            var o = 0,
            l = 0,
            h = 0,
            u = 0;
            var c = 0,
            f = 0,
            d = 0,
            g = 0;
            var p = 0;
            var _ = r.getInt32();
            var m = r.readUTFString();
            var v = m.split("\n");
            var y;
            var I;
            for (e = 0; e < _; e++) {
                y = this._mainTexture;
                I = this._path + v[e * 2];
                m = v[e * 2 + 1];
                if (this._mainTexture == null) {
                    y = this._textureDic[I]
                }
                if (!y) {
                    this.event("error", this);
                    this.isParseFail = true;
                    return
                }
                o = r.getFloat32();
                l = r.getFloat32();
                h = r.getFloat32();
                u = r.getFloat32();
                p = r.getFloat32();
                c = isNaN(p) ? 0 : p;
                p = r.getFloat32();
                f = isNaN(p) ? 0 : p;
                p = r.getFloat32();
                d = isNaN(p) ? h: p;
                p = r.getFloat32();
                g = isNaN(p) ? u: p;
                this.subTextureDic[m] = Ue.create(y, o, l, h, u, -c, -f, d, g)
            }
            this._mainTexture = y;
            var S = r.getUint16();
            var C;
            for (e = 0; e < S; e++) {
                C = [];
                C.push(r.getUint16());
                C.push(r.getUint16());
                C.push(r.getUint16());
                C.push(r.getUint16());
                this.aniSectionDic[e] = C
            }
            var b;
            var w;
            var x;
            var R;
            var L = r.getInt16();
            var T = {};
            var D;
            for (e = 0; e < L; e++) {
                b = new Ee;
                if (e == 0) {
                    D = b
                } else {
                    b.root = D
                }
                b.d = a ? -1 : 1;
                x = r.readUTFString();
                R = r.readUTFString();
                b.length = r.getFloat32();
                if (r.getByte() == 1) {
                    b.inheritRotation = false
                }
                if (r.getByte() == 1) {
                    b.inheritScale = false
                }
                b.name = x;
                if (R) {
                    w = T[R];
                    if (w) {
                        w.addChild(b)
                    } else {
                        this.mRootBone = b
                    }
                }
                T[x] = b;
                this.mBoneArr.push(b)
            }
            this.tMatrixDataLen = r.getUint16();
            var k = r.getUint16();
            var G = 0;
            var M = Math.floor(k / this.tMatrixDataLen);
            var B;
            var A = this.srcBoneMatrixArr;
            for (e = 0; e < M; e++) {
                B = new $e;
                B.scX = r.getFloat32();
                B.skX = r.getFloat32();
                B.skY = r.getFloat32();
                B.scY = r.getFloat32();
                B.x = r.getFloat32();
                B.y = r.getFloat32();
                if (this.tMatrixDataLen === 8) {
                    B.skewX = r.getFloat32();
                    B.skewY = r.getFloat32()
                }
                A.push(B);
                b = this.mBoneArr[e];
                b.transform = B
            }
            var P;
            var U = r.getUint16();
            var E = 0;
            for (e = 0; e < U; e++) {
                P = new We;
                E = r.getUint16();
                for (t = 0; t < E; t++) {
                    P.boneNames.push(r.readUTFString());
                    P.boneIndexs.push(r.getInt16())
                }
                P.name = r.readUTFString();
                P.targetBoneName = r.readUTFString();
                P.targetBoneIndex = r.getInt16();
                P.bendDirection = r.getFloat32();
                P.mix = r.getFloat32();
                P.isSpine = a;
                this.ikArr.push(P)
            }
            var N;
            var F = r.getUint16();
            var O = 0;
            for (e = 0; e < F; e++) {
                N = new Je;
                O = r.getUint16();
                for (t = 0; t < O; t++) {
                    N.boneIndexs.push(r.getInt16())
                }
                N.name = r.getUTFString();
                N.targetIndex = r.getInt16();
                N.rotateMix = r.getFloat32();
                N.translateMix = r.getFloat32();
                N.scaleMix = r.getFloat32();
                N.shearMix = r.getFloat32();
                N.offsetRotation = r.getFloat32();
                N.offsetX = r.getFloat32();
                N.offsetY = r.getFloat32();
                N.offsetScaleX = r.getFloat32();
                N.offsetScaleY = r.getFloat32();
                N.offsetShearY = r.getFloat32();
                this.tfArr.push(N)
            }
            var V;
            var q = r.getUint16();
            var z = 0;
            for (e = 0; e < q; e++) {
                V = new He;
                V.name = r.readUTFString();
                z = r.getUint16();
                for (t = 0; t < z; t++) {
                    V.bones.push(r.getInt16())
                }
                V.target = r.readUTFString();
                V.positionMode = r.readUTFString();
                V.spacingMode = r.readUTFString();
                V.rotateMode = r.readUTFString();
                V.offsetRotation = r.getFloat32();
                V.position = r.getFloat32();
                V.spacing = r.getFloat32();
                V.rotateMix = r.getFloat32();
                V.translateMix = r.getFloat32();
                this.pathArr.push(V)
            }
            var W = 0;
            var H = 0;
            var Y = 0;
            var j;
            var X = 0;
            var J = NaN;
            var $ = 0;
            var K;
            var Q;
            var Z;
            var ee;
            var te = r.getInt16();
            for (e = 0; e < te; e++) {
                var ie = r.getUint8();
                var ne = {};
                this.deformAniArr.push(ne);
                for (var se = 0; se < ie; se++) {
                    K = new Fe;
                    K.skinName = r.getUTFString();
                    ne[K.skinName] = K;
                    W = r.getInt16();
                    for (t = 0; t < W; t++) {
                        Q = new Oe;
                        K.deformSlotDataList.push(Q);
                        H = r.getInt16();
                        for (i = 0; i < H; i++) {
                            Z = new Ve;
                            Q.deformSlotDisplayList.push(Z);
                            Z.slotIndex = Y = r.getInt16();
                            Z.attachment = j = r.getUTFString();
                            X = r.getInt16();
                            for (n = 0; n < X; n++) {
                                if (r.getByte() == 1) {
                                    Z.tweenKeyList.push(true)
                                } else {
                                    Z.tweenKeyList.push(false)
                                }
                                J = r.getFloat32();
                                Z.timeList.push(J);
                                ee = [];
                                Z.vectices.push(ee);
                                $ = r.getInt16();
                                for (s = 0; s < $; s++) {
                                    ee.push(r.getFloat32())
                                }
                            }
                        }
                    }
                }
            }
            var ae;
            var re = r.getInt16();
            var oe = 0;
            var le;
            var he = 0;
            for (e = 0; e < re; e++) {
                oe = r.getInt16();
                ae = [];
                for (t = 0; t < oe; t++) {
                    le = new qe;
                    le.time = r.getFloat32();
                    he = r.getInt16();
                    for (i = 0; i < he; i++) {
                        le.drawOrder.push(r.getInt16())
                    }
                    ae.push(le)
                }
                this.drawOrderAniArr.push(ae)
            }
            var ue;
            var ce = r.getInt16();
            var fe = 0;
            var de;
            for (e = 0; e < ce; e++) {
                fe = r.getInt16();
                ue = [];
                for (t = 0; t < fe; t++) {
                    de = new ze;
                    de.name = r.getUTFString();
                    de.intValue = r.getInt32();
                    de.floatValue = r.getFloat32();
                    de.stringValue = r.getUTFString();
                    de.time = r.getFloat32();
                    ue.push(de)
                }
                this.eventAniArr.push(ue)
            }
            var ge = r.getInt16();
            if (ge > 0) {
                this.attachmentNames = [];
                for (e = 0; e < ge; e++) {
                    this.attachmentNames.push(r.getUTFString())
                }
            }
            var pe = r.getInt16();
            var _e;
            var me;
            for (e = 0; e < pe; e++) {
                _e = new Ne;
                _e.name = r.readUTFString();
                _e.parent = r.readUTFString();
                _e.attachmentName = r.readUTFString();
                _e.srcDisplayIndex = _e.displayIndex = r.getInt16();
                _e.templet = this;
                this.boneSlotDic[_e.name] = _e;
                me = this.bindBoneBoneSlotDic[_e.parent];
                if (me == null) {
                    this.bindBoneBoneSlotDic[_e.parent] = me = []
                }
                me.push(_e);
                this.boneSlotArray.push(_e)
            }
            var ve = r.readUTFString();
            var ye = ve.split("\n");
            var Ie = 0;
            var Se = r.getUint8();
            var Ce, be, we;
            var xe = 0,
            Re = 0;
            var Le = 0,
            Te = 0,
            De = 0,
            ke = 0,
            Ge = 0;
            for (e = 0; e < Se; e++) {
                Ce = new Ye;
                Ce.name = ye[Ie++];
                xe = r.getUint8();
                for (t = 0; t < xe; t++) {
                    be = new Xe;
                    be.name = ye[Ie++];
                    _e = this.boneSlotDic[be.name];
                    Re = r.getUint8();
                    for (i = 0; i < Re; i++) {
                        we = new je;
                        this.skinSlotDisplayDataArr.push(we);
                        we.name = ye[Ie++];
                        we.attachmentName = ye[Ie++];
                        we.transform = new $e;
                        we.transform.scX = r.getFloat32();
                        we.transform.skX = r.getFloat32();
                        we.transform.skY = r.getFloat32();
                        we.transform.scY = r.getFloat32();
                        we.transform.x = r.getFloat32();
                        we.transform.y = r.getFloat32();
                        be.displayArr.push(we);
                        we.width = r.getFloat32();
                        we.height = r.getFloat32();
                        we.type = r.getUint8();
                        we.verLen = r.getUint16();
                        L = r.getUint16();
                        if (L > 0) {
                            we.bones = [];
                            for (n = 0; n < L; n++) {
                                var Me = r.getUint16();
                                we.bones.push(Me)
                            }
                        }
                        Le = r.getUint16();
                        if (Le > 0) {
                            we.uvs = [];
                            for (n = 0; n < Le; n++) {
                                we.uvs.push(r.getFloat32())
                            }
                        }
                        Te = r.getUint16();
                        if (Te > 0) {
                            we.weights = [];
                            for (n = 0; n < Te; n++) {
                                we.weights.push(r.getFloat32())
                            }
                        }
                        De = r.getUint16();
                        if (De > 0) {
                            we.triangles = [];
                            for (n = 0; n < De; n++) {
                                we.triangles.push(r.getUint16())
                            }
                        }
                        ke = r.getUint16();
                        if (ke > 0) {
                            we.vertices = [];
                            for (n = 0; n < ke; n++) {
                                we.vertices.push(r.getFloat32())
                            }
                        }
                        Ge = r.getUint16();
                        if (Ge > 0) {
                            we.lengths = [];
                            for (n = 0; n < Ge; n++) {
                                we.lengths.push(r.getFloat32())
                            }
                        }
                    }
                    Ce.slotArr.push(be)
                }
                this.skinDic[Ce.name] = Ce;
                this.skinDataArray.push(Ce)
            }
            var Be = r.getUint8();
            if (Be == 1) {
                this.yReverseMatrix = new Pe(1, 0, 0, -1, 0, 0);
                if (D) {
                    D.setTempMatrix(this.yReverseMatrix)
                }
            } else {
                if (D) {
                    D.setTempMatrix(new Pe)
                }
            }
            this.showSkinByIndex(this.boneSlotDic, 0);
            this.isParserComplete = true;
            this.event("complete", this)
        };
        e.getTexture = function(e) {
            var t = this.subTextureDic[e];
            if (!t) {
                t = this.subTextureDic[e.substr(0, e.length - 1)]
            }
            if (t == null) {
                return this._mainTexture
            }
            return t
        };
        e.showSkinByIndex = function(e, t, i) {
            i === void 0 && (i = true);
            if (t < 0 && t >= this.skinDataArray.length) return false;
            var n = 0,
            s = 0;
            var a;
            var r;
            var o = this.skinDataArray[t];
            if (o) {
                for (n = 0, s = o.slotArr.length; n < s; n++) {
                    r = o.slotArr[n];
                    if (r) {
                        a = e[r.name];
                        if (a) {
                            a.showSlotData(r, i);
                            if (i && a.attachmentName != "undefined" && a.attachmentName != "null") {
                                a.showDisplayByName(a.attachmentName)
                            } else {
                                a.showDisplayByIndex(a.displayIndex)
                            }
                        }
                    }
                }
                return true
            }
            return false
        };
        e.getSkinIndexByName = function(e) {
            var t;
            for (var i = 0,
            n = this.skinDataArray.length; i < n; i++) {
                t = this.skinDataArray[i];
                if (t.name == e) {
                    return i
                }
            }
            return - 1
        };
        e.getGrahicsDataWithCache = function(e, t) {
            if (this._graphicsCache[e] && this._graphicsCache[e][t]) {
                return this._graphicsCache[e][t]
            }
            return null
        };
        e.setGrahicsDataWithCache = function(e, t, i) {
            this._graphicsCache[e][t] = i
        };
        e.destroy = function() {
            this._isDestroyed = true;
            var e;
            for (var t in this.subTextureDic) {
                e = this.subTextureDic[t];
                if (e) e.destroy()
            }
            var t;
            for (t in this._textureDic) {
                e = this._textureDic[t];
                if (e) e.destroy()
            }
            var i;
            for (var n = 0,
            s = this.skinSlotDisplayDataArr.length; n < s; n++) {
                i = this.skinSlotDisplayDataArr[n];
                i.destory()
            }
            this.skinSlotDisplayDataArr.length = 0;
            if (this.url) {
                delete a.TEMPLET_DICTIONARY[this.url]
            }
            laya.resource.Resource.prototype.destroy.call(this)
        };
        e.getAniNameByIndex = function(e) {
            var t = this.getAnimation(e);
            if (t) return t.name;
            return null
        };
        o(0, e, "rate",
        function() {
            return this._rate
        },
        function(e) {
            this._rate = e
        });
        a.LAYA_ANIMATION_VISION = "LAYAANIMATION:1.6.0";
        a.TEMPLET_DICTIONARY = null;
        return a
    } (W)
})(window, document, Laya);
if (typeof define === "function" && define.amd) {
    define("laya.core", ["require", "exports"],
    function(e, t) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: true
        });
        for (var i in Laya) {
            var n = Laya[i];
            n && n.__isclass && (t[i] = n)
        }
    })
} (function(e, t, n) {
    var i = n.un,
    s = n.uns,
    a = n.static,
    r = n.class,
    o = n.getset,
    l = n.__newvec;
    var h = laya.utils.Browser,
    u = laya.utils.Color,
    c = laya.filters.ColorFilterAction;
    var f = laya.filters.webgl.ColorFilterActionGL,
    d = laya.filters.Filter,
    g = laya.filters.webgl.FilterActionGL;
    var p = laya.maths.Matrix,
    _ = laya.maths.Rectangle,
    m = laya.renders.Render,
    v = laya.renders.RenderContext;
    var y = laya.webgl.resource.RenderTarget2D,
    I = laya.utils.RunDriver,
    S = laya.webgl.shader.d2.ShaderDefines2D;
    var C = laya.display.Sprite,
    b = laya.resource.Texture,
    w = laya.webgl.shader.d2.value.Value2D;
    var x = function() {
        function e() {
            this.data = null
        }
        r(e, "laya.filters.FilterAction");
        var t = e.prototype;
        n.imps(t, {
            "laya.filters.IFilterAction": true
        });
        t.apply = function(e) {
            return null
        };
        return e
    } ();
    var R = function() {
        function e() {}
        r(e, "laya.filters.WebGLFilter");
        e.enable = function() {
            if (e.isInit) return;
            e.isInit = true;
            if (!m.isWebGL) return;
            I.createFilterAction = function(e) {
                var t;
                switch (e) {
                case 32:
                    t = new f;
                    break;
                case 16:
                    t = new D;
                    break;
                case 8:
                    t = new k;
                    break
                }
                return t
            }
        };
        e.isInit = false;
        e.__init$ = function() {
            D;
            f;
            k;
            m;
            I; {
                I.createFilterAction = function(e) {
                    var t;
                    switch (e) {
                    case 16:
                        t = new x;
                        break;
                    case 8:
                        t = new x;
                        break;
                    case 32:
                        t = new c;
                        break
                    }
                    return t
                }
            }
        };
        return e
    } ();
    var L = function(e) {
        function t(e) {
            this.strength = NaN;
            this.strength_sig2_2sig2_gauss1 = [];
            t.__super.call(this);
            e === void 0 && (e = 4);
            if (m.isWebGL) R.enable();
            this.strength = e;
            this._action = I.createFilterAction(16);
            this._action.data = this
        }
        r(t, "laya.filters.BlurFilter", e);
        var i = t.prototype;
        i.callNative = function(e) {
            e.conchModel && e.conchModel.blurFilter && e.conchModel.blurFilter(this.strength)
        };
        o(0, i, "action",
        function() {
            return this._action
        });
        o(0, i, "type",
        function() {
            return 16
        });
        return t
    } (d);
    var T = function(e) {
        function s(e, t, i, n) {
            this._color = null;
            s.__super.call(this);
            this._elements = new Float32Array(9);
            t === void 0 && (t = 4);
            i === void 0 && (i = 6);
            n === void 0 && (n = 6);
            if (m.isWebGL) {
                R.enable()
            }
            this._color = new u(e);
            this.blur = Math.min(t, 20);
            this.offX = i;
            this.offY = n;
            this._action = I.createFilterAction(8);
            this._action.data = this
        }
        r(s, "laya.filters.GlowFilter", e);
        var t = s.prototype;
        t.getColor = function() {
            return this._color._color
        };
        t.callNative = function(e) {
            e.conchModel && e.conchModel.glowFilter && e.conchModel.glowFilter(this._color.strColor, this._elements[4], this._elements[5], this._elements[6])
        };
        o(0, t, "type",
        function() {
            return 8
        });
        o(0, t, "action",
        function() {
            return this._action
        });
        o(0, t, "offY",
        function() {
            return this._elements[6]
        },
        function(e) {
            this._elements[6] = e
        });
        o(0, t, "offX",
        function() {
            return this._elements[5]
        },
        function(e) {
            this._elements[5] = e
        });
        o(0, t, "blur",
        function() {
            return this._elements[4]
        },
        function(e) {
            this._elements[4] = e
        });
        return s
    } (d);
    var D = function(e) {
        function t() {
            this.data = null;
            t.__super.call(this)
        }
        r(t, "laya.filters.webgl.BlurFilterActionGL", e);
        var i = t.prototype;
        i.setValueMix = function(e) {
            e.defines.add(this.data.type);
            var t = e
        };
        i.apply3d = function(e, t, i, n, s) {
            var a = e.getValue("bounds");
            var r = w.create(1, 0);
            r.setFilters([this.data]);
            var o = p.EMPTY;
            o.identity();
            i.ctx.drawTarget(e, 0, 0, a.width, a.height, p.EMPTY, "src", r);
            r.setFilters(null)
        };
        i.setValue = function(e) {
            e.strength = this.data.strength;
            var t = this.data.strength / 3;
            var i = t * t;
            this.data.strength_sig2_2sig2_gauss1[0] = this.data.strength;
            this.data.strength_sig2_2sig2_gauss1[1] = i;
            this.data.strength_sig2_2sig2_gauss1[2] = 2 * i;
            this.data.strength_sig2_2sig2_gauss1[3] = 1 / (2 * Math.PI * i);
            e.strength_sig2_2sig2_gauss1 = this.data.strength_sig2_2sig2_gauss1
        };
        o(0, i, "typeMix",
        function() {
            return 16
        });
        return t
    } (g);
    var k = function(e) {
        function t() {
            this.data = null;
            this._initKey = false;
            this._textureWidth = 0;
            this._textureHeight = 0;
            t.__super.call(this)
        }
        r(t, "laya.filters.webgl.GlowFilterActionGL", e);
        var i = t.prototype;
        n.imps(i, {
            "laya.filters.IFilterActionGL": true
        });
        i.setValueMix = function(e) {};
        i.apply3d = function(e, t, i, n, s) {
            var a = e.getValue("bounds");
            e.addValue("color", this.data.getColor());
            var r = a.width,
            o = a.height;
            this._textureWidth = r;
            this._textureHeight = o;
            var l;
            var h = p.TEMP;
            h.identity();
            l = w.create(1, 0);
            l.setFilters([this.data]);
            i.ctx.drawTarget(e, 0, 0, this._textureWidth, this._textureHeight, h, "src", l, null);
            l = w.create(1, 0);
            i.ctx.drawTarget(e, 0, 0, this._textureWidth, this._textureHeight, h, "src", l);
            return null
        };
        i.setSpriteWH = function(e) {
            this._textureWidth = e.width;
            this._textureHeight = e.height
        };
        i.setValue = function(e) {
            e.u_offsetX = this.data.offX;
            e.u_offsetY = -this.data.offY;
            e.u_strength = 1;
            e.u_blurX = this.data.blur;
            e.u_blurY = this.data.blur;
            e.u_textW = this._textureWidth;
            e.u_textH = this._textureHeight;
            e.u_color = this.data.getColor()
        };
        o(0, i, "typeMix",
        function() {
            return 8
        });
        t.tmpTarget = function(e, t, i, n, s) {
            var a = e.getValue("bounds");
            var r = e.getValue("out");
            r.end();
            var o = y.create(a.width, a.height);
            o.start();
            var l = e.getValue("color");
            if (l) {
                o.clear(l[0], l[1], l[2], 0)
            }
            e.addValue("tmpTarget", o)
        };
        t.startOut = function(e, t, i, n, s) {
            var a = e.getValue("tmpTarget");
            a.end();
            var r = e.getValue("out");
            r.start();
            var o = e.getValue("color");
            if (o) {
                r.clear(o[0], o[1], o[2], 0)
            }
        };
        t.recycleTarget = function(e, t, i, n, s) {
            var a = e.getValue("src");
            var r = e.getValue("tmpTarget");
            r.recycle()
        };
        return t
    } (g);
    n.__init([R])
})(window, document, Laya);
if (typeof define === "function" && define.amd) {
    define("laya.core", ["require", "exports"],
    function(e, t) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: true
        });
        for (var i in Laya) {
            var n = Laya[i];
            n && n.__isclass && (t[i] = n)
        }
    })
} (function(e, t, n) {
    var i = n.un,
    s = n.uns,
    a = n.static,
    r = n.class,
    o = n.getset,
    l = n.__newvec;
    var h = laya.utils.Browser,
    u = laya.display.css.CSSStyle,
    g = laya.utils.ClassUtils;
    var c = laya.events.Event,
    f = laya.utils.HTMLChar,
    d = laya.net.Loader,
    p = laya.display.Node,
    _ = laya.maths.Rectangle;
    var m = laya.renders.Render,
    v = laya.renders.RenderContext,
    y = laya.renders.RenderSprite;
    var I = laya.display.Sprite,
    S = laya.utils.Stat,
    N = laya.display.Text,
    C = laya.resource.Texture;
    var b = laya.net.URL,
    w = laya.utils.Utils;
    var x = function() {
        function d() {}
        r(d, "laya.html.utils.HTMLParse");
        d.parse = function(e, t, i) {
            t = t.replace(/<br>/g, "<br/>");
            t = "<root>" + t + "</root>";
            t = t.replace(d.spacePattern, d.char255);
            var n = w.parseXMLFromString(t);
            d._parseXML(e, n.childNodes[0].childNodes, i)
        };
        d._parseXML = function(e, t, i, n) {
            var s = 0,
            a = 0;
            if (t.join || t.item) {
                for (s = 0, a = t.length; s < a; ++s) {
                    d._parseXML(e, t[s], i, n)
                }
            } else {
                var r;
                var o;
                if (t.nodeType == 3) {
                    var l;
                    if (e instanceof laya.html.dom.HTMLDivElement) {
                        if (t.nodeName == null) {
                            t.nodeName = "#text"
                        }
                        o = t.nodeName.toLowerCase();
                        l = t.textContent.replace(/^\s+|\s+$/g, "");
                        if (l.length > 0) {
                            r = g.getInstance(o);
                            if (r) {
                                e.addChild(r);
                                r.innerTEXT = l.replace(d.char255AndOneSpacePattern, " ")
                            }
                        }
                    } else {
                        l = t.textContent.replace(/^\s+|\s+$/g, "");
                        if (l.length > 0) {
                            e.innerTEXT = l.replace(d.char255AndOneSpacePattern, " ")
                        }
                    }
                    return
                } else {
                    o = t.nodeName.toLowerCase();
                    if (o == "#comment") return;
                    r = g.getInstance(o);
                    if (r) {
                        r = e.addChild(r);
                        r.URI = i;
                        r.href = n;
                        var h = t.attributes;
                        if (h && h.length > 0) {
                            for (s = 0, a = h.length; s < a; ++s) {
                                var u = h[s];
                                var c = u.nodeName;
                                var f = u.value;
                                r._setAttributes(c, f)
                            }
                        }
                        d._parseXML(r, t.childNodes, i, r.href)
                    } else {
                        d._parseXML(e, t.childNodes, i, n)
                    }
                }
            }
        };
        d.char255 = String.fromCharCode(255);
        d.spacePattern = /&nbsp;|&#160;/g;
        d.char255AndOneSpacePattern = new RegExp(String.fromCharCode(255) + "|(\\s+)", "g");
        return d
    } ();
    var R = function() {
        function E() {}
        r(E, "laya.html.utils.Layout");
        E.later = function(e) {
            if (E._will == null) {
                E._will = [];
                n.stage.frameLoop(1, null,
                function() {
                    if (E._will.length < 1) return;
                    for (var e = 0; e < E._will.length; e++) {
                        laya.html.utils.Layout.layout(E._will[e])
                    }
                    E._will.length = 0
                })
            }
            E._will.push(e)
        };
        E.layout = function(e) {
            if (!e || !e._style) return null;
            if ((e._style._type & 512) === 0) return null;
            e.getStyle()._type &= ~512;
            var t = E._multiLineLayout(e);
            if (m.isConchApp && e["layaoutCallNative"]) {
                e.layaoutCallNative()
            }
            return t
        };
        E._multiLineLayout = function(e) {
            if (N.RightToLeft) return E._multiLineLayout2(e);
            var t = new Array;
            e._addChildsToLayout(t);
            var i = 0,
            n = t.length,
            s = 0;
            var a = e._getCSSStyle();
            var r = a.letterSpacing;
            var o = a.leading;
            var l = a.lineHeight;
            var h = a._widthAuto() || !a.wordWrap;
            var u = h ? 999999 : e.width;
            var c = e.height;
            var f = 0;
            var d = a.italic ? a.fontSize / 3 : 0;
            var g = a._getAlign();
            var p = a._getValign();
            var _ = p !== 0 || g !== 0 || l != 0;
            var m;
            var v = 0;
            var y = 0;
            var I = 0;
            var S = 0;
            var C = 0;
            var b = new Array;
            var w;
            var x;
            var R = b[0] = new F;
            var L = false,
            T = false;
            var D;
            var k;
            R.h = 0;
            if (a.italic) u -= a.fontSize / 3;
            var G = 0;
            var M = true;
            function B() {
                R.y = y;
                y += R.h + o;
                if (R.h == 0) y += l;
                R.mWidth = G;
                G = 0;
                R = new F;
                b.push(R);
                R.h = 0;
                v = 0;
                M = true;
                L = false
            }
            for (i = 0; i < n; i++) {
                m = t[i];
                if (m == null) {
                    if (!M) {
                        v += E.DIV_ELEMENT_PADDING
                    }
                    R.wordStartIndex = R.elements.length;
                    continue
                }
                M = false;
                if (m instanceof laya.html.dom.HTMLBrElement) {
                    B();
                    R.y = y;
                    continue
                } else if (m._isChar()) {
                    D = m;
                    if (!D.isWord) {
                        if (b.length > 0 && v + I > u && R.wordStartIndex > 0) {
                            var A = 0;
                            A = R.elements.length - R.wordStartIndex + 1;
                            R.elements.length = R.wordStartIndex;
                            i -= A;
                            B();
                            continue
                        }
                        L = false;
                        G += D.width
                    } else {
                        L = T || D.char === "\n";
                        R.wordStartIndex = R.elements.length
                    }
                    I = D.width + r;
                    S = D.height;
                    T = false;
                    L = L || v + I > u;
                    L && B();
                    R.minTextHeight = Math.min(R.minTextHeight, m.height)
                } else {
                    w = m._getCSSStyle();
                    k = m;
                    x = w.padding;
                    w._getCssFloat() === 0 || (_ = true);
                    L = T || w.lineElement;
                    I = k.width * k._style._tf.scaleX + x[1] + x[3] + r;
                    S = k.height * k._style._tf.scaleY + x[0] + x[2];
                    T = w.lineElement;
                    L = L || v + I > u && w.wordWrap;
                    L && B()
                }
                R.elements.push(m);
                R.h = Math.max(R.h, S);
                m.x = v;
                m.y = y;
                v += I;
                R.w = v - r;
                R.y = y;
                f = Math.max(v + d, f)
            }
            y = R.y + R.h;
            if (_) {
                var P = 0;
                var U = u;
                if (h && e.width > 0) {
                    U = e.width
                }
                for (i = 0, n = b.length; i < n; i++) {
                    b[i].updatePos(0, U, i, P, g, p, l);
                    P += Math.max(l, b[i].h + o)
                }
                y = P
            }
            h && (e.width = f);
            y > e.height && (e.height = y);
            return [f, y]
        };
        E._multiLineLayout2 = function(e) {
            var t = new Array;
            e._addChildsToLayout(t);
            var i = 0,
            n = t.length,
            s = 0;
            var a = e._getCSSStyle();
            var r = a.letterSpacing;
            var o = a.leading;
            var l = a.lineHeight;
            var h = a._widthAuto() || !a.wordWrap;
            var u = h ? 999999 : e.width;
            var c = e.height;
            var f = 0;
            var d = a.italic ? a.fontSize / 3 : 0;
            var g = 2 - a._getAlign();
            var p = a._getValign();
            var _ = p !== 0 || g !== 0 || l != 0;
            var m;
            var v = 0;
            var y = 0;
            var I = 0;
            var S = 0;
            var C = 0;
            var b = new Array;
            var w;
            var x;
            var R = b[0] = new F;
            var L = false,
            T = false;
            var D;
            var k;
            R.h = 0;
            if (a.italic) u -= a.fontSize / 3;
            var G = 0;
            var M = true;
            function B() {
                R.y = y;
                y += R.h + o;
                if (R.h == 0) y += l;
                R.mWidth = G;
                G = 0;
                R = new F;
                b.push(R);
                R.h = 0;
                v = 0;
                M = true;
                L = false
            }
            for (i = 0; i < n; i++) {
                m = t[i];
                if (m == null) {
                    if (!M) {
                        v += E.DIV_ELEMENT_PADDING
                    }
                    R.wordStartIndex = R.elements.length;
                    continue
                }
                M = false;
                if (m instanceof laya.html.dom.HTMLBrElement) {
                    B();
                    R.y = y;
                    continue
                } else if (m._isChar()) {
                    D = m;
                    if (!D.isWord) {
                        if (b.length > 0 && v + I > u && R.wordStartIndex > 0) {
                            var A = 0;
                            A = R.elements.length - R.wordStartIndex + 1;
                            R.elements.length = R.wordStartIndex;
                            i -= A;
                            B();
                            continue
                        }
                        L = false;
                        G += D.width
                    } else {
                        L = T || D.char === "\n";
                        R.wordStartIndex = R.elements.length
                    }
                    I = D.width + r;
                    S = D.height;
                    T = false;
                    L = L || v + I > u;
                    L && B();
                    R.minTextHeight = Math.min(R.minTextHeight, m.height)
                } else {
                    w = m._getCSSStyle();
                    k = m;
                    x = w.padding;
                    w._getCssFloat() === 0 || (_ = true);
                    L = T || w.lineElement;
                    I = k.width * k._style._tf.scaleX + x[1] + x[3] + r;
                    S = k.height * k._style._tf.scaleY + x[0] + x[2];
                    T = w.lineElement;
                    L = L || v + I > u && w.wordWrap;
                    L && B()
                }
                R.elements.push(m);
                R.h = Math.max(R.h, S);
                m.x = v;
                m.y = y;
                v += I;
                R.w = v - r;
                R.y = y;
                f = Math.max(v + d, f)
            }
            y = R.y + R.h;
            if (_) {
                var P = 0;
                var U = u;
                for (i = 0, n = b.length; i < n; i++) {
                    b[i].updatePos(0, U, i, P, g, p, l);
                    P += Math.max(l, b[i].h + o)
                }
                y = P
            }
            h && (e.width = f);
            y > e.height && (e.height = y);
            for (i = 0, n = b.length; i < n; i++) {
                b[i].revertOrder(u)
            }
            return [f, y]
        };
        E._will = null;
        E.DIV_ELEMENT_PADDING = 0;
        return E
    } ();
    var F = function() {
        function e() {
            this.x = 0;
            this.y = 0;
            this.w = 0;
            this.h = 0;
            this.wordStartIndex = 0;
            this.minTextHeight = 99999;
            this.mWidth = 0;
            this.elements = new Array
        }
        r(e, "laya.html.utils.LayoutLine");
        var t = e.prototype;
        t.updatePos = function(e, t, i, n, s, a, r) {
            var o = 0;
            var l;
            if (this.elements.length > 0) {
                l = this.elements[this.elements.length - 1];
                o = l.x + l.width - this.elements[0].x
            }
            var h = 0,
            u = NaN;
            s === 1 && (h = (t - o) / 2);
            s === 2 && (h = t - o);
            r === 0 || a != 0 || (a = 1);
            for (var c = 0,
            f = this.elements.length; c < f; c++) {
                l = this.elements[c];
                var d = l._getCSSStyle();
                h !== 0 && (l.x += h);
                switch (d._getValign()) {
                case 0:
                    l.y = n;
                    break;
                case 1:
                    ;
                    var g = 0;
                    if (this.minTextHeight != 99999) {
                        g = this.minTextHeight
                    };
                    var p = (g + r) / 2;
                    p = Math.max(p, this.h);
                    if (l instanceof laya.html.dom.HTMLImageElement) {
                        u = n + p - l.height
                    } else {
                        u = n + p - l.height
                    }
                    l.y = u;
                    break;
                case 2:
                    l.y = n + (r - l.height);
                    break
                }
            }
        };
        t.revertOrder = function(e) {
            var t;
            if (this.elements.length > 0) {
                var i = 0,
                n = 0;
                n = this.elements.length;
                for (i = 0; i < n; i++) {
                    t = this.elements[i];
                    t.x = e - t.x - t.width
                }
            }
        };
        return e
    } ();
    var L = function(i) {
        function t() {
            this.URI = null;
            this._href = null;
            t.__super.call(this);
            this._text = t._EMPTYTEXT;
            this.setStyle(new u(this));
            this._getCSSStyle().valign = "middle";
            this.mouseEnabled = true
        }
        r(t, "laya.html.dom.HTMLElement", i);
        var e = t.prototype;
        e.layaoutCallNative = function() {
            var e = 0;
            if (this._childs && (e = this._childs.length) > 0) {
                for (var t = 0; t < e; t++) {
                    this._childs[t].layaoutCallNative && this._childs[t].layaoutCallNative()
                }
            }
            var i = this._getWords();
            i ? laya.html.dom.HTMLElement.fillWords(this, i, 0, 0, this.style.font, this.style.color, this.style.underLine) : this.graphics.clear()
        };
        e.appendChild = function(e) {
            return this.addChild(e)
        };
        e._getWords2 = function() {
            var e = this._text.text;
            if (!e || e.length === 0) return null;
            var t = 0,
            i = 0;
            var n;
            var s;
            if (!this._text.drawWords) {
                n = e.split(" ");
                i = n.length - 1;
                s = [];
                for (t = 0; t < i; t++) {
                    s.push(n[t], " ")
                }
                if (i >= 0) s.push(n[i]);
                this._text.drawWords = s
            } else {
                s = this._text.drawWords
            }
            var a = this._text.words;
            if (a && a.length === s.length) return a;
            a === null && (this._text.words = a = []);
            a.length = s.length;
            var r;
            var o = this.style;
            var l = o.font;
            for (t = 0, i = s.length; t < i; t++) {
                r = w.measureText(s[t], l);
                var h = a[t] = new f(s[t], r.width, r.height || o.fontSize, o);
                if (h.char.length > 1) {
                    h.charNum = h.char
                }
                if (this.href) {
                    var u = new I;
                    this.addChild(u);
                    h.setSprite(u)
                }
            }
            return a
        };
        e._getWords = function() {
            if (!N.CharacterCache) return this._getWords2();
            var e = this._text.text;
            if (!e || e.length === 0) return null;
            var t = this._text.words;
            if (t && t.length === e.length) return t;
            t === null && (this._text.words = t = []);
            t.length = e.length;
            var i;
            var n = this.style;
            var s = n.font;
            var a = 0;
            for (var r = 0,
            o = e.length; r < o; r++) {
                i = w.measureText(e.charAt(r), s);
                var l = t[r] = new f(e.charAt(r), i.width, i.height || n.fontSize, n);
                if (this.href) {
                    var h = new I;
                    this.addChild(h);
                    l.setSprite(h)
                }
            }
            return t
        };
        e.showLinkSprite = function() {
            var e = this._text.words;
            if (e) {
                var t = [];
                var i;
                var n;
                for (var s = 0; s < e.length; s++) {
                    n = e[s];
                    i = new I;
                    i.graphics.drawRect(0, 0, n.width, n.height, "#ff0000");
                    i.width = n.width;
                    i.height = n.height;
                    this.addChild(i);
                    t.push(i)
                }
            }
        };
        e._layoutLater = function() {
            var e = this.style;
            if (e._type & 512) return;
            if (e.widthed(this) && (this._childs.length > 0 || this._getWords() != null) && e.block) {
                R.later(this);
                e._type |= 512
            } else {
                this.parent && this.parent._layoutLater()
            }
        };
        e._setAttributes = function(e, t) {
            switch (e) {
            case "style":
                this.style.cssText(t);
                return;
            case "class":
                this.className = t;
                return
            }
            i.prototype._setAttributes.call(this, e, t)
        };
        e.updateHref = function() {
            if (this._href != null) {
                var e = this._getWords();
                if (e) {
                    var t;
                    var i;
                    for (var n = 0; n < e.length; n++) {
                        t = e[n];
                        i = t.getSprite();
                        if (i) {
                            i.size(t.width, t.height);
                            i.on("click", this, this.onLinkHandler)
                        }
                    }
                }
            }
        };
        e.onLinkHandler = function(e) {
            switch (e.type) {
            case "click":
                ;
                var t = this;
                while (t) {
                    t.event("link", [this.href]);
                    t = t.parent
                }
                break
            }
        };
        e.formatURL = function(e) {
            if (!this.URI) return e;
            return b.formatURL(e, this.URI ? this.URI.path: null)
        };
        o(0, e, "href",
        function() {
            return this._href
        },
        function(e) {
            this._href = e;
            if (e != null) {
                this._getCSSStyle().underLine = 1;
                this.updateHref()
            }
        });
        o(0, e, "color", null,
        function(e) {
            this.style.color = e
        });
        o(0, e, "onClick", null,
        function(e) {
            var t;
            n._runScript("fn=function(event){" + e + ";}");
            this.on("click", this, t)
        });
        o(0, e, "id", null,
        function(e) {
            k.document.setElementById(e, this)
        });
        o(0, e, "innerTEXT",
        function() {
            return this._text.text
        },
        function(e) {
            this.text = e
        });
        o(0, e, "style",
        function() {
            return this._style
        });
        o(0, e, "text",
        function() {
            return this._text.text
        },
        function(e) {
            if (this._text == t._EMPTYTEXT) {
                this._text = {
                    text: e,
                    words: null
                }
            } else {
                this._text.text = e;
                this._text.words && (this._text.words.length = 0)
            }
            m.isConchApp && this.layaoutCallNative();
            this._renderType |= 2048;
            this.repaint();
            this.updateHref()
        });
        o(0, e, "parent", i.prototype._$get_parent,
        function(e) {
            if (e instanceof laya.html.dom.HTMLElement) {
                var t = e;
                this.URI || (this.URI = t.URI);
                this.style.inherit(t.style)
            }
            n.superSet(I, this, "parent", e)
        });
        o(0, e, "className", null,
        function(e) {
            this.style.attrs(k.document.styleSheets["." + e])
        });
        t.fillWords = function(e, t, i, n, s, a, r) {
            e.graphics.clear();
            for (var o = 0,
            l = t.length; o < l; o++) {
                var h = t[o];
                e.graphics.fillText(h.char, h.x + i, h.y + n, s, a, "left", r)
            }
        };
        t._EMPTYTEXT = {
            text: null,
            words: null
        };
        return t
    } (I);
    var T = function(e) {
        function t() {
            t.__super.call(this);
            this.style.lineElement = true;
            this.style.block = true
        }
        r(t, "laya.html.dom.HTMLBrElement", e);
        return t
    } (L);
    var D = function(e) {
        function t() {
            this.contextHeight = NaN;
            this.contextWidth = NaN;
            t.__super.call(this);
            this.style.block = true;
            this.style.lineElement = true;
            this.style.width = 200;
            this.style.height = 200;
            B
        }
        r(t, "laya.html.dom.HTMLDivElement", e);
        var i = t.prototype;
        i.appendHTML = function(e) {
            x.parse(this, e, this.URI);
            this.layout()
        };
        i._addChildsToLayout = function(t) {
            var e = this._getWords();
            if (e == null && this._childs.length == 0) return false;
            e && e.forEach(function(e) {
                t.push(e)
            });
            var i = true;
            for (var n = 0,
            s = this._childs.length; n < s; n++) {
                var a = this._childs[n];
                if (i) {
                    i = false
                } else {
                    t.push(null)
                }
                a._addToLayout(t)
            }
            return true
        };
        i._addToLayout = function(e) {
            this.layout()
        };
        i.layout = function() {
            if (!this.style) return;
            this.style._type |= 512;
            var e = R.layout(this);
            if (e) {
                if (!this._$P.mHtmlBounds) this._set$P("mHtmlBounds", new _);
                var t = this._$P.mHtmlBounds;
                t.x = t.y = 0;
                t.width = this.contextWidth = e[0];
                t.height = this.contextHeight = e[1];
                this.setBounds(t)
            }
        };
        o(0, i, "height",
        function() {
            if (this._height) return this._height;
            return this.contextHeight
        },
        e.prototype._$set_height);
        o(0, i, "innerHTML", null,
        function(e) {
            this.destroyChildren();
            this.appendHTML(e)
        });
        o(0, i, "width",
        function() {
            if (this._width) return this._width;
            return this.contextWidth
        },
        function(e) {
            var t = false;
            if (e === 0) {
                t = e != this._width
            } else {
                t = e != this.width
            }
            n.superSet(L, this, "width", e);
            if (t) this.layout()
        });
        return t
    } (L);
    var k = function(e) {
        function t() {
            this.all = new Array;
            this.styleSheets = u.styleSheets;
            t.__super.call(this)
        }
        r(t, "laya.html.dom.HTMLDocument", e);
        var i = t.prototype;
        i.getElementById = function(e) {
            return this.all[e]
        };
        i.setElementById = function(e, t) {
            this.all[e] = t
        };
        a(t, ["document",
        function() {
            return this.document = new t
        }]);
        return t
    } (L);
    var G = function(e) {
        function t() {
            this._tex = null;
            this._url = null;
            this._renderArgs = [];
            t.__super.call(this);
            this.style.block = true
        }
        r(t, "laya.html.dom.HTMLImageElement", e);
        var i = t.prototype;
        i._addToLayout = function(e) { ! this._style.absolute && e.push(this)
        };
        i.render = function(e, t, i) {
            if (!this._tex || !this._tex.loaded || !this._tex.loaded || this._width < 1 || this._height < 1) return;
            S.spriteCount++;
            this._renderArgs[0] = this._tex;
            this._renderArgs[1] = this.x;
            this._renderArgs[2] = this.y;
            this._renderArgs[3] = this.width || this._tex.width;
            this._renderArgs[4] = this.height || this._tex.height;
            e.ctx.drawTexture2(t, i, this.style.translateX, this.style.translateY, this.transform, this.style.alpha, this.style.blendMode, this._renderArgs)
        };
        i.layaoutCallNative = function() {
            var e = 0;
            if (this._childs && (e = this._childs.length) > 0) {
                for (var t = 0; t < e; t++) {
                    this._childs[t].layaoutCallNative && this._childs[t].layaoutCallNative()
                }
            }
        };
        o(0, i, "src", null,
        function(e) {
            var n = this;
            e = this.formatURL(e);
            if (this._url == e) return;
            this._url = e;
            var t = this._tex = d.getRes(e);
            if (!t) {
                this._tex = t = new C;
                t.load(e);
                d.cacheRes(e, t)
            }
            function i() {
                if (!n._style) return;
                var e = n._style;
                var t = e.widthed(n) ? -1 : n._tex.width;
                var i = e.heighted(n) ? -1 : n._tex.height;
                if (!e.widthed(n) && n._width != n._tex.width) {
                    n.width = n._tex.width;
                    n.parent && n.parent._layoutLater()
                }
                if (!e.heighted(n) && n._height != n._tex.height) {
                    n.height = n._tex.height;
                    n.parent && n.parent._layoutLater()
                }
                if (m.isConchApp) {
                    n._renderArgs[0] = n._tex;
                    n._renderArgs[1] = n.x;
                    n._renderArgs[2] = n.y;
                    n._renderArgs[3] = n.width || n._tex.width;
                    n._renderArgs[4] = n.height || n._tex.height;
                    n.graphics.drawTexture(n._tex, 0, 0, n._renderArgs[3], n._renderArgs[4])
                }
                n.repaint();
                n.parentRepaint()
            }
            t.loaded ? i() : t.on("loaded", null, i)
        });
        return t
    } (L);
    var M = function(e) {
        function t() {
            this.type = null;
            t.__super.call(this);
            this.visible = false
        }
        r(t, "laya.html.dom.HTMLLinkElement", e);
        var i = t.prototype;
        i._onload = function(e) {
            switch (this.type) {
            case "text/css":
                u.parseCSS(e, this.URI);
                break
            }
        };
        o(0, i, "href", e.prototype._$get_href,
        function(e) {
            var t = this;
            e = this.formatURL(e);
            this.URI = new b(e);
            var i = new d;
            i.once("complete", null,
            function(e) {
                t._onload(e)
            });
            i.load(e, "text")
        });
        t._cuttingStyle = new RegExp("((@keyframes[\\s\\t]+|)(.+))[\\t\\n\\r\\s]*{", "g");
        return t
    } (L);
    var B = function(e) {
        function t() {
            t.__super.call(this);
            this.visible = false
        }
        r(t, "laya.html.dom.HTMLStyleElement", e);
        var i = t.prototype;
        o(0, i, "text", e.prototype._$get_text,
        function(e) {
            u.parseCSS(e, null)
        });
        return t
    } (L);
    var A = function(e) {
        function t() {
            t.__super.call(this);
            this._getCSSStyle().valign = "middle"
        }
        r(t, "laya.html.dom.HTMLIframeElement", e);
        var i = t.prototype;
        o(0, i, "href", e.prototype._$get_href,
        function(i) {
            var n = this;
            i = this.formatURL(i);
            var e = new d;
            e.once("complete", null,
            function(e) {
                var t = n.URI;
                n.URI = new b(i);
                n.innerHTML = e; ! t || (n.URI = t)
            });
            e.load(i, "text")
        });
        return t
    } (D)
})(window, document, Laya);
if (typeof define === "function" && define.amd) {
    define("laya.core", ["require", "exports"],
    function(e, t) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: true
        });
        for (var i in Laya) {
            var n = Laya[i];
            n && n.__isclass && (t[i] = n)
        }
    })
} (function(s, e, a) {
    var t = a.un,
    i = a.uns,
    n = a.static,
    r = a.class,
    o = a.getset,
    l = a.__newvec;
    var h = laya.webgl.canvas.BlendMode,
    u = laya.events.Event,
    c = laya.resource.HTMLCanvas;
    var f = laya.utils.Handler,
    d = laya.webgl.utils.IndexBuffer2D,
    g = laya.net.Loader,
    p = laya.maths.MathUtil;
    var _ = laya.maths.Matrix,
    m = laya.renders.Render,
    v = laya.renders.RenderContext,
    y = laya.renders.RenderSprite;
    var I = laya.webgl.shader.Shader,
    S = laya.display.Sprite,
    C = laya.utils.Stat,
    b = laya.resource.Texture;
    var w = laya.utils.Utils,
    x = laya.webgl.shader.d2.value.Value2D,
    R = laya.webgl.utils.VertexBuffer2D;
    var L = laya.webgl.WebGL,
    T = laya.webgl.WebGLContext;
    var D = function() {
        function e() {
            this._frameTime = 0;
            this._emissionRate = 60;
            this._emissionTime = 0;
            this.minEmissionTime = 1 / 60;
            this._particleTemplate = null
        }
        r(e, "laya.particle.emitter.EmitterBase");
        var t = e.prototype;
        t.start = function(e) {
            e === void 0 && (e = 2147483647);
            if (this._emissionRate != 0) this._emissionTime = e
        };
        t.stop = function() {
            this._emissionTime = 0
        };
        t.clear = function() {
            this._emissionTime = 0
        };
        t.emit = function() {};
        t.advanceTime = function(e) {
            e === void 0 && (e = 1);
            this._emissionTime -= e;
            if (this._emissionTime < 0) return;
            this._frameTime += e;
            if (this._frameTime < this.minEmissionTime) return;
            while (this._frameTime > this.minEmissionTime) {
                this._frameTime -= this.minEmissionTime;
                this.emit()
            }
        };
        o(0, t, "particleTemplate", null,
        function(e) {
            this._particleTemplate = e
        });
        o(0, t, "emissionRate",
        function() {
            return this._emissionRate
        },
        function(e) {
            if (e <= 0) return;
            this._emissionRate = e;
            e > 0 && (this.minEmissionTime = 1 / e)
        });
        return e
    } ();
    var k = function() {
        function c() {
            this.position = null;
            this.velocity = null;
            this.startColor = null;
            this.endColor = null;
            this.sizeRotation = null;
            this.radius = null;
            this.radian = null;
            this.durationAddScale = NaN;
            this.time = NaN
        }
        r(c, "laya.particle.ParticleData");
        c.Create = function(e, t, i, n) {
            var s = new c;
            s.position = t;
            p.scaleVector3(i, e.emitterVelocitySensitivity, c._tempVelocity);
            var a = p.lerp(e.minHorizontalVelocity, e.maxHorizontalVelocity, Math.random());
            var r = Math.random() * Math.PI * 2;
            c._tempVelocity[0] += a * Math.cos(r);
            c._tempVelocity[2] += a * Math.sin(r);
            c._tempVelocity[1] += p.lerp(e.minVerticalVelocity, e.maxVerticalVelocity, Math.random());
            s.velocity = c._tempVelocity;
            s.startColor = c._tempStartColor;
            s.endColor = c._tempEndColor;
            var o = 0;
            if (e.disableColor) {
                for (o = 0; o < 4; o++) {
                    s.startColor[o] = 1;
                    s.endColor[o] = 1
                }
            } else {
                if (e.colorComponentInter) {
                    for (o = 0; o < 4; o++) {
                        s.startColor[o] = p.lerp(e.minStartColor[o], e.maxStartColor[o], Math.random());
                        s.endColor[o] = p.lerp(e.minEndColor[o], e.maxEndColor[o], Math.random())
                    }
                } else {
                    p.lerpVector4(e.minStartColor, e.maxStartColor, Math.random(), s.startColor);
                    p.lerpVector4(e.minEndColor, e.maxEndColor, Math.random(), s.endColor)
                }
            }
            s.sizeRotation = c._tempSizeRotation;
            var l = Math.random();
            s.sizeRotation[0] = p.lerp(e.minStartSize, e.maxStartSize, l);
            s.sizeRotation[1] = p.lerp(e.minEndSize, e.maxEndSize, l);
            s.sizeRotation[2] = p.lerp(e.minRotateSpeed, e.maxRotateSpeed, Math.random());
            s.radius = c._tempRadius;
            var h = Math.random();
            s.radius[0] = p.lerp(e.minStartRadius, e.maxStartRadius, h);
            s.radius[1] = p.lerp(e.minEndRadius, e.maxEndRadius, h);
            s.radian = c._tempRadian;
            s.radian[0] = p.lerp(e.minHorizontalStartRadian, e.maxHorizontalStartRadian, Math.random());
            s.radian[1] = p.lerp(e.minVerticalStartRadian, e.maxVerticalStartRadian, Math.random());
            var u = e.useEndRadian;
            s.radian[2] = u ? p.lerp(e.minHorizontalEndRadian, e.maxHorizontalEndRadian, Math.random()) : s.radian[0];
            s.radian[3] = u ? p.lerp(e.minVerticalEndRadian, e.maxVerticalEndRadian, Math.random()) : s.radian[1];
            s.durationAddScale = e.ageAddScale * Math.random();
            s.time = n;
            return s
        };
        n(c, ["_tempVelocity",
        function() {
            return this._tempVelocity = new Float32Array(3)
        },
        "_tempStartColor",
        function() {
            return this._tempStartColor = new Float32Array(4)
        },
        "_tempEndColor",
        function() {
            return this._tempEndColor = new Float32Array(4)
        },
        "_tempSizeRotation",
        function() {
            return this._tempSizeRotation = new Float32Array(3)
        },
        "_tempRadius",
        function() {
            return this._tempRadius = new Float32Array(2)
        },
        "_tempRadian",
        function() {
            return this._tempRadian = new Float32Array(4)
        }]);
        return c
    } ();
    var G = function() {
        function e(e, t, i) {
            this._templet = null;
            this._timeBetweenParticles = NaN;
            this._previousPosition = null;
            this._timeLeftOver = 0;
            this._tempVelocity = new Float32Array([0, 0, 0]);
            this._tempPosition = new Float32Array([0, 0, 0]);
            this._templet = e;
            this._timeBetweenParticles = 1 / t;
            this._previousPosition = i
        }
        r(e, "laya.particle.ParticleEmitter");
        var t = e.prototype;
        t.update = function(e, t) {
            e = e / 1e3;
            if (e > 0) {
                p.subtractVector3(t, this._previousPosition, this._tempVelocity);
                p.scaleVector3(this._tempVelocity, 1 / e, this._tempVelocity);
                var i = this._timeLeftOver + e;
                var n = -this._timeLeftOver;
                while (i > this._timeBetweenParticles) {
                    n += this._timeBetweenParticles;
                    i -= this._timeBetweenParticles;
                    p.lerpVector3(this._previousPosition, t, n / e, this._tempPosition);
                    this._templet.addParticleArray(this._tempPosition, this._tempVelocity)
                }
                this._timeLeftOver = i
            }
            this._previousPosition[0] = t[0];
            this._previousPosition[1] = t[1];
            this._previousPosition[2] = t[2]
        };
        return e
    } ();
    var M = function() {
        function i() {
            this.textureName = null;
            this.textureCount = 1;
            this.maxPartices = 100;
            this.duration = 1;
            this.ageAddScale = 0;
            this.emitterVelocitySensitivity = 1;
            this.minStartSize = 100;
            this.maxStartSize = 100;
            this.minEndSize = 100;
            this.maxEndSize = 100;
            this.minHorizontalVelocity = 0;
            this.maxHorizontalVelocity = 0;
            this.minVerticalVelocity = 0;
            this.maxVerticalVelocity = 0;
            this.endVelocity = 1;
            this.minRotateSpeed = 0;
            this.maxRotateSpeed = 0;
            this.minStartRadius = 0;
            this.maxStartRadius = 0;
            this.minEndRadius = 0;
            this.maxEndRadius = 0;
            this.minHorizontalStartRadian = 0;
            this.maxHorizontalStartRadian = 0;
            this.minVerticalStartRadian = 0;
            this.maxVerticalStartRadian = 0;
            this.useEndRadian = true;
            this.minHorizontalEndRadian = 0;
            this.maxHorizontalEndRadian = 0;
            this.minVerticalEndRadian = 0;
            this.maxVerticalEndRadian = 0;
            this.colorComponentInter = false;
            this.disableColor = false;
            this.blendState = 0;
            this.emitterType = "null";
            this.emissionRate = 0;
            this.sphereEmitterRadius = 1;
            this.sphereEmitterVelocity = 0;
            this.sphereEmitterVelocityAddVariance = 0;
            this.ringEmitterRadius = 30;
            this.ringEmitterVelocity = 0;
            this.ringEmitterVelocityAddVariance = 0;
            this.ringEmitterUp = 2;
            this.gravity = new Float32Array([0, 0, 0]);
            this.minStartColor = new Float32Array([1, 1, 1, 1]);
            this.maxStartColor = new Float32Array([1, 1, 1, 1]);
            this.minEndColor = new Float32Array([1, 1, 1, 1]);
            this.maxEndColor = new Float32Array([1, 1, 1, 1]);
            this.pointEmitterPosition = new Float32Array([0, 0, 0]);
            this.pointEmitterPositionVariance = new Float32Array([0, 0, 0]);
            this.pointEmitterVelocity = new Float32Array([0, 0, 0]);
            this.pointEmitterVelocityAddVariance = new Float32Array([0, 0, 0]);
            this.boxEmitterCenterPosition = new Float32Array([0, 0, 0]);
            this.boxEmitterSize = new Float32Array([0, 0, 0]);
            this.boxEmitterVelocity = new Float32Array([0, 0, 0]);
            this.boxEmitterVelocityAddVariance = new Float32Array([0, 0, 0]);
            this.sphereEmitterCenterPosition = new Float32Array([0, 0, 0]);
            this.ringEmitterCenterPosition = new Float32Array([0, 0, 0]);
            this.positionVariance = new Float32Array([0, 0, 0])
        }
        r(i, "laya.particle.ParticleSetting");
        i.checkSetting = function(e) {
            var t;
            for (t in i._defaultSetting) {
                if (!e.hasOwnProperty(t)) {
                    e[t] = i._defaultSetting[t]
                }
            }
            e.endVelocity = +e.endVelocity;
            e.gravity[0] = +e.gravity[0];
            e.gravity[1] = +e.gravity[1];
            e.gravity[2] = +e.gravity[2]
        };
        n(i, ["_defaultSetting",
        function() {
            return this._defaultSetting = new i
        }]);
        return i
    } ();
    var B = function() {
        function e() {
            this.settings = null;
            this.texture = null
        }
        r(e, "laya.particle.ParticleTemplateBase");
        var t = e.prototype;
        t.addParticleArray = function(e, t) {};
        return e
    } ();
    var A = function() {
        function e() {
            this.u_Duration = NaN;
            this.u_EndVelocity = NaN;
            this.u_Gravity = null;
            this.a_Position = null;
            this.a_Velocity = null;
            this.a_StartColor = null;
            this.a_EndColor = null;
            this.a_SizeRotation = null;
            this.a_Radius = null;
            this.a_Radian = null;
            this.a_AgeAddScale = NaN;
            this.gl_Position = null;
            this.v_Color = null;
            this.oSize = NaN;
            this._color = new Float32Array(4);
            this._position = new Float32Array(3)
        }
        r(e, "laya.particle.particleUtils.CanvasShader");
        var t = e.prototype;
        t.getLen = function(e) {
            return Math.sqrt(e[0] * e[0] + e[1] * e[1] + e[2] * e[2])
        };
        t.ComputeParticlePosition = function(e, t, i, n) {
            this._position[0] = e[0];
            this._position[1] = e[1];
            this._position[2] = e[2];
            var s = this.getLen(t);
            var a = s * this.u_EndVelocity;
            var r = s * n + (a - s) * n * n / 2;
            var o = NaN;
            o = this.getLen(t);
            var l = 0,
            h = 0;
            h = 3;
            for (l = 0; l < h; l++) {
                this._position[l] = this._position[l] + t[l] / o * r * this.u_Duration;
                this._position[l] += this.u_Gravity[l] * i * n
            }
            var u = p.lerp(this.a_Radius[0], this.a_Radius[1], n);
            var c = p.lerp(this.a_Radian[0], this.a_Radian[2], n);
            var f = p.lerp(this.a_Radian[1], this.a_Radian[3], n);
            var d = Math.cos(f) * u;
            this._position[1] += Math.sin(f) * u;
            this._position[0] += Math.cos(c) * d;
            this._position[2] += Math.sin(c) * d;
            return new Float32Array([this._position[0], this._position[1], 0, 1])
        };
        t.ComputeParticleSize = function(e, t, i) {
            var n = p.lerp(e, t, i);
            return n
        };
        t.ComputeParticleRotation = function(e, t) {
            return e * t
        };
        t.ComputeParticleColor = function(e, t, i) {
            var n = this._color;
            p.lerpVector4(e, t, i, n);
            n[3] = n[3] * i * (1 - i) * (1 - i) * 6.7;
            return n
        };
        t.clamp = function(e, t, i) {
            if (e < t) return t;
            if (e > i) return i;
            return e
        };
        t.getData = function(e) {
            e *= 1 + this.a_AgeAddScale;
            var t = this.clamp(e / this.u_Duration, 0, 1);
            this.gl_Position = this.ComputeParticlePosition(this.a_Position, this.a_Velocity, e, t);
            var i = this.ComputeParticleSize(this.a_SizeRotation[0], this.a_SizeRotation[1], t);
            var n = this.ComputeParticleRotation(this.a_SizeRotation[2], e);
            this.v_Color = this.ComputeParticleColor(this.a_StartColor, this.a_EndColor, t);
            var s = new _;
            var a = NaN;
            a = i / this.oSize * 2;
            s.scale(a, a);
            s.rotate(n);
            s.setTranslate(this.gl_Position[0], -this.gl_Position[1]);
            var r = NaN;
            r = this.v_Color[3];
            return [this.v_Color, r, s, this.v_Color[0] * r, this.v_Color[1] * r, this.v_Color[2] * r]
        };
        return e
    } ();
    var P = function() {
        function e() {
            this.maxIndex = 0;
            this.cmds = null;
            this.id = 0
        }
        r(e, "laya.particle.particleUtils.CMDParticle");
        var t = e.prototype;
        t.setCmds = function(e) {
            this.cmds = e;
            this.maxIndex = e.length - 1
        };
        return e
    } ();
    var U = function() {
        function i() {}
        r(i, "laya.particle.particleUtils.PicTool");
        i.getCanvasPic = function(e, t) {
            e = e.bitmap;
            var i = new c("2D");
            var n = i.getContext("2d");
            i.size(e.width, e.height);
            var s = t >> 16 & 255;
            var a = t >> 8 & 255;
            var r = t & 255;
            if (m.isConchApp) {
                n.setFilter(s / 255, a / 255, r / 255, 0)
            }
            n.drawImage(e.source, 0, 0);
            if (!m.isConchApp) {
                var o = n.getImageData(0, 0, i.width, i.height);
                var l = o.data;
                for (var h = 0,
                u = l.length; h < u; h += 4) {
                    if (l[h + 3] == 0) continue;
                    l[h] *= s / 255;
                    l[h + 1] *= a / 255;
                    l[h + 2] *= r / 255
                }
                n.putImageData(o, 0, 0)
            }
            return i
        };
        i.getRGBPic = function(e) {
            var t;
            t = [new b(i.getCanvasPic(e, 16711680)), new b(i.getCanvasPic(e, 65280)), new b(i.getCanvasPic(e, 255))];
            return t
        };
        return i
    } ();
    var E = function(e) {
        function t(e) {
            this.setting = null;
            this._posRange = null;
            this._canvasTemplate = null;
            this._emitFun = null;
            t.__super.call(this);
            this.template = e
        }
        r(t, "laya.particle.emitter.Emitter2D", e);
        var i = t.prototype;
        i.emit = function() {
            e.prototype.emit.call(this);
            if (this._emitFun != null) this._emitFun()
        };
        i.getRandom = function(e) {
            return (Math.random() * 2 - 1) * e
        };
        i.webGLEmit = function() {
            var e = new Float32Array(3);
            e[0] = this.getRandom(this._posRange[0]);
            e[1] = this.getRandom(this._posRange[1]);
            e[2] = this.getRandom(this._posRange[2]);
            var t = new Float32Array(3);
            t[0] = 0;
            t[1] = 0;
            t[2] = 0;
            this._particleTemplate.addParticleArray(e, t)
        };
        i.canvasEmit = function() {
            var e = new Float32Array(3);
            e[0] = this.getRandom(this._posRange[0]);
            e[1] = this.getRandom(this._posRange[1]);
            e[2] = this.getRandom(this._posRange[2]);
            var t = new Float32Array(3);
            t[0] = 0;
            t[1] = 0;
            t[2] = 0;
            this._particleTemplate.addParticleArray(e, t)
        };
        o(0, i, "template",
        function() {
            return this._particleTemplate
        },
        function(e) {
            this._particleTemplate = e;
            if (!e) {
                this._emitFun = null;
                this.setting = null;
                this._posRange = null
            }
            this.setting = e.settings;
            this._posRange = this.setting.positionVariance;
            if (this._particleTemplate instanceof laya.particle.ParticleTemplate2D) {
                this._emitFun = this.webGLEmit
            } else if (this._particleTemplate instanceof laya.particle.ParticleTemplateCanvas) {
                this._canvasTemplate = e;
                this._emitFun = this.canvasEmit
            }
        });
        return t
    } (D);
    var N = function(e) {
        function t(e) {
            this._vertices = null;
            this._vertexBuffer = null;
            this._indexBuffer = null;
            this._floatCountPerVertex = 29;
            this._firstActiveElement = 0;
            this._firstNewElement = 0;
            this._firstFreeElement = 0;
            this._firstRetiredElement = 0;
            this._currentTime = 0;
            this._drawCounter = 0;
            t.__super.call(this);
            this.settings = e
        }
        r(t, "laya.particle.ParticleTemplateWebGL", e);
        var i = t.prototype;
        i.initialize = function() {
            this._vertices = new Float32Array(this.settings.maxPartices * this._floatCountPerVertex * 4);
            var e = 0;
            for (var t = 0; t < this.settings.maxPartices; t++) {
                var i = Math.random();
                var n = this.settings.textureCount ? 1 / this.settings.textureCount: 1;
                var s = NaN;
                for (s = 0; s < this.settings.textureCount; s += n) {
                    if (i < s + n) break
                }
                e = t * this._floatCountPerVertex * 4;
                this._vertices[e + this._floatCountPerVertex * 0 + 0] = -1;
                this._vertices[e + this._floatCountPerVertex * 0 + 1] = -1;
                this._vertices[e + this._floatCountPerVertex * 0 + 2] = 0;
                this._vertices[e + this._floatCountPerVertex * 0 + 3] = s;
                this._vertices[e + this._floatCountPerVertex * 1 + 0] = 1;
                this._vertices[e + this._floatCountPerVertex * 1 + 1] = -1;
                this._vertices[e + this._floatCountPerVertex * 1 + 2] = 1;
                this._vertices[e + this._floatCountPerVertex * 1 + 3] = s;
                this._vertices[e + this._floatCountPerVertex * 2 + 0] = 1;
                this._vertices[e + this._floatCountPerVertex * 2 + 1] = 1;
                this._vertices[e + this._floatCountPerVertex * 2 + 2] = 1;
                this._vertices[e + this._floatCountPerVertex * 2 + 3] = s + n;
                this._vertices[e + this._floatCountPerVertex * 3 + 0] = -1;
                this._vertices[e + this._floatCountPerVertex * 3 + 1] = 1;
                this._vertices[e + this._floatCountPerVertex * 3 + 2] = 0;
                this._vertices[e + this._floatCountPerVertex * 3 + 3] = s + n
            }
        };
        i.loadContent = function() {};
        i.update = function(e) {
            this._currentTime += e / 1e3;
            this.retireActiveParticles();
            this.freeRetiredParticles();
            if (this._firstActiveElement == this._firstFreeElement) this._currentTime = 0;
            if (this._firstRetiredElement == this._firstActiveElement) this._drawCounter = 0
        };
        i.retireActiveParticles = function() {
            var e = 1e-4;
            var t = this.settings.duration;
            while (this._firstActiveElement != this._firstNewElement) {
                var i = this._firstActiveElement * this._floatCountPerVertex * 4;
                var n = i + 28;
                var s = this._currentTime - this._vertices[n];
                s *= 1 + this._vertices[i + 27];
                if (s + e < t) break;
                this._vertices[n] = this._drawCounter;
                this._firstActiveElement++;
                if (this._firstActiveElement >= this.settings.maxPartices) this._firstActiveElement = 0
            }
        };
        i.freeRetiredParticles = function() {
            while (this._firstRetiredElement != this._firstActiveElement) {
                var e = this._drawCounter - this._vertices[this._firstRetiredElement * this._floatCountPerVertex * 4 + 28];
                if (e < 3) break;
                this._firstRetiredElement++;
                if (this._firstRetiredElement >= this.settings.maxPartices) this._firstRetiredElement = 0
            }
        };
        i.addNewParticlesToVertexBuffer = function() {};
        i.addParticleArray = function(e, t) {
            var i = this._firstFreeElement + 1;
            if (i >= this.settings.maxPartices) i = 0;
            if (i === this._firstRetiredElement) return;
            var n = k.Create(this.settings, e, t, this._currentTime);
            var s = this._firstFreeElement * this._floatCountPerVertex * 4;
            for (var a = 0; a < 4; a++) {
                var r = 0,
                o = 0;
                for (r = 0, o = 4; r < 3; r++) this._vertices[s + a * this._floatCountPerVertex + o + r] = n.position[r];
                for (r = 0, o = 7; r < 3; r++) this._vertices[s + a * this._floatCountPerVertex + o + r] = n.velocity[r];
                for (r = 0, o = 10; r < 4; r++) this._vertices[s + a * this._floatCountPerVertex + o + r] = n.startColor[r];
                for (r = 0, o = 14; r < 4; r++) this._vertices[s + a * this._floatCountPerVertex + o + r] = n.endColor[r];
                for (r = 0, o = 18; r < 3; r++) this._vertices[s + a * this._floatCountPerVertex + o + r] = n.sizeRotation[r];
                for (r = 0, o = 21; r < 2; r++) this._vertices[s + a * this._floatCountPerVertex + o + r] = n.radius[r];
                for (r = 0, o = 23; r < 4; r++) this._vertices[s + a * this._floatCountPerVertex + o + r] = n.radian[r];
                this._vertices[s + a * this._floatCountPerVertex + 27] = n.durationAddScale;
                this._vertices[s + a * this._floatCountPerVertex + 28] = n.time
            }
            this._firstFreeElement = i
        };
        return t
    } (B);
    var F = function(e) {
        function t(e) {
            this._ready = false;
            this.textureList = [];
            this.particleList = [];
            this.pX = 0;
            this.pY = 0;
            this.activeParticles = [];
            this.deadParticles = [];
            this.iList = [];
            this._maxNumParticles = 0;
            this.textureWidth = NaN;
            this.dTextureWidth = NaN;
            this.colorChange = true;
            this.step = 1 / 60;
            this.canvasShader = new A;
            t.__super.call(this);
            this.settings = e;
            this._maxNumParticles = e.maxPartices;
            this.texture = new b;
            this.texture.on("loaded", this, this._textureLoaded);
            this.texture.load(e.textureName)
        }
        r(t, "laya.particle.ParticleTemplateCanvas", e);
        var i = t.prototype;
        i._textureLoaded = function(e) {
            this.setTexture(this.texture);
            this._ready = true
        };
        i.clear = function(e) {
            e === void 0 && (e = true);
            this.deadParticles.length = 0;
            this.activeParticles.length = 0;
            this.textureList.length = 0
        };
        i.setTexture = function(e) {
            this.texture = e;
            this.textureWidth = e.width;
            this.dTextureWidth = 1 / this.textureWidth;
            this.pX = -e.width * .5;
            this.pY = -e.height * .5;
            this.textureList = t.changeTexture(e, this.textureList);
            this.particleList.length = 0;
            this.deadParticles.length = 0;
            this.activeParticles.length = 0
        };
        i._createAParticleData = function(e, t) {
            this.canvasShader.u_EndVelocity = this.settings.endVelocity;
            this.canvasShader.u_Gravity = this.settings.gravity;
            this.canvasShader.u_Duration = this.settings.duration;
            var i;
            i = k.Create(this.settings, e, t, 0);
            this.canvasShader.a_Position = i.position;
            this.canvasShader.a_Velocity = i.velocity;
            this.canvasShader.a_StartColor = i.startColor;
            this.canvasShader.a_EndColor = i.endColor;
            this.canvasShader.a_SizeRotation = i.sizeRotation;
            this.canvasShader.a_Radius = i.radius;
            this.canvasShader.a_Radian = i.radian;
            this.canvasShader.a_AgeAddScale = i.durationAddScale;
            this.canvasShader.oSize = this.textureWidth;
            var n = new P;
            var s = 0,
            a = this.settings.duration / (1 + i.durationAddScale);
            var r = [];
            var o = NaN;
            for (s = 0; s < a; s += this.step) {
                r.push(this.canvasShader.getData(s))
            }
            n.id = this.particleList.length;
            this.particleList.push(n);
            n.setCmds(r);
            return n
        };
        i.addParticleArray = function(e, t) {
            if (!this._ready) return;
            var i;
            if (this.particleList.length < this._maxNumParticles) {
                i = this._createAParticleData(e, t);
                this.iList[i.id] = 0;
                this.activeParticles.push(i)
            } else {
                if (this.deadParticles.length > 0) {
                    i = this.deadParticles.pop();
                    this.iList[i.id] = 0;
                    this.activeParticles.push(i)
                }
            }
        };
        i.advanceTime = function(e) {
            e === void 0 && (e = 1);
            if (!this._ready) return;
            var t = this.activeParticles;
            var i = this.deadParticles;
            var n = 0,
            s = t.length;
            var a;
            var r = 0;
            var o = this.iList;
            for (n = s - 1; n > -1; n--) {
                a = t[n];
                r = o[a.id];
                if (r >= a.maxIndex) {
                    r = 0;
                    t.splice(n, 1);
                    i.push(a)
                } else {
                    r += 1
                }
                o[a.id] = r
            }
        };
        i.render = function(e, t, i) {
            if (!this._ready) return;
            if (this.activeParticles.length < 1) return;
            if (this.textureList.length < 2) return;
            if (this.settings.disableColor) {
                this.noColorRender(e, t, i)
            } else {
                this.canvasRender(e, t, i)
            }
        };
        i.noColorRender = function(e, t, i) {
            var n = this.activeParticles;
            var s = 0,
            a = n.length;
            var r;
            var o;
            var l = NaN;
            var h = this.pX,
            u = this.pY;
            var c = -h * 2,
            f = -u * 2;
            var d = 0;
            var g = this.textureList;
            var p = this.iList;
            var _ = NaN;
            e.translate(t, i);
            _ = e.ctx.globalAlpha;
            for (s = 0; s < a; s++) {
                r = n[s];
                d = p[r.id];
                o = r.cmds[d];
                if (!o) continue;
                if ((l = o[1]) <= .01) continue;
                e.setAlpha(_ * l);
                e.drawTextureWithTransform(this.texture, h, u, c, f, o[2], 1)
            }
            e.setAlpha(_);
            e.translate( - t, -i)
        };
        i.canvasRender = function(e, t, i) {
            var n = this.activeParticles;
            var s = 0,
            a = n.length;
            var r;
            var o;
            var l = NaN;
            var h = this.pX,
            u = this.pY;
            var c = -h * 2,
            f = -u * 2;
            var d = 0;
            var g = this.textureList;
            var p = this.iList;
            var _ = NaN;
            var m;
            e.translate(t, i);
            _ = e.ctx.globalAlpha;
            m = e.ctx.globalCompositeOperation;
            e.blendMode("lighter");
            for (s = 0; s < a; s++) {
                r = n[s];
                d = p[r.id];
                o = r.cmds[d];
                if (!o) continue;
                if ((l = o[1]) <= .01) continue;
                e.save();
                e.transformByMatrix(o[2]);
                if (o[3] > .01) {
                    e.setAlpha(_ * o[3]);
                    e.drawTexture(g[0], h, u, c, f)
                }
                if (o[4] > .01) {
                    e.setAlpha(_ * o[4]);
                    e.drawTexture(g[1], h, u, c, f)
                }
                if (o[5] > .01) {
                    e.setAlpha(_ * o[5]);
                    e.drawTexture(g[2], h, u, c, f)
                }
                e.restore()
            }
            e.setAlpha(_);
            e.translate( - t, -i);
            e.blendMode(m)
        };
        t.changeTexture = function(e, t, i) {
            if (!t) t = [];
            t.length = 0;
            if (i && i.disableColor) {
                t.push(e, e, e)
            } else {
                w.copyArray(t, U.getRGBPic(e))
            }
            return t
        };
        return t
    } (B);
    var O = function(i) {
        function n(e) {
            this._vertexBuffer2D = null;
            this._indexBuffer2D = null;
            this.x = 0;
            this.y = 0;
            this._blendFn = null;
            this._startTime = 0;
            this.sv = new V;
            n.__super.call(this, e);
            var t = this;
            a.loader.load(this.settings.textureName, f.create(null,
            function(e) {
                e.bitmap.enableMerageInAtlas = false;
                t.texture = e
            }));
            this.sv.u_Duration = this.settings.duration;
            this.sv.u_Gravity = this.settings.gravity;
            this.sv.u_EndVelocity = this.settings.endVelocity;
            this._blendFn = h.fns[e.blendState];
            this.initialize();
            this._vertexBuffer = this._vertexBuffer2D = R.create( - 1, 35048);
            this._indexBuffer = this._indexBuffer2D = d.create(35044);
            this.loadContent()
        }
        r(n, "laya.particle.ParticleTemplate2D", i);
        var e = n.prototype;
        a.imps(e, {
            "laya.webgl.submit.ISubmit": true
        });
        e.getRenderType = function() {
            return - 111
        };
        e.releaseRender = function() {};
        e.addParticleArray = function(e, t) {
            e[0] += this.x;
            e[1] += this.y;
            i.prototype.addParticleArray.call(this, e, t)
        };
        e.loadContent = function() {
            var e = new Uint16Array(this.settings.maxPartices * 6);
            for (var t = 0; t < this.settings.maxPartices; t++) {
                e[t * 6 + 0] = t * 4 + 0;
                e[t * 6 + 1] = t * 4 + 1;
                e[t * 6 + 2] = t * 4 + 2;
                e[t * 6 + 3] = t * 4 + 0;
                e[t * 6 + 4] = t * 4 + 2;
                e[t * 6 + 5] = t * 4 + 3
            }
            this._indexBuffer2D.clear();
            this._indexBuffer2D.append(e);
            this._indexBuffer2D.upload()
        };
        e.addNewParticlesToVertexBuffer = function() {
            this._vertexBuffer2D.clear();
            this._vertexBuffer2D.append(this._vertices);
            var e = 0;
            if (this._firstNewElement < this._firstFreeElement) {
                e = this._firstNewElement * 4 * this._floatCountPerVertex * 4;
                this._vertexBuffer2D.subUpload(e, e, e + (this._firstFreeElement - this._firstNewElement) * 4 * this._floatCountPerVertex * 4)
            } else {
                e = this._firstNewElement * 4 * this._floatCountPerVertex * 4;
                this._vertexBuffer2D.subUpload(e, e, e + (this.settings.maxPartices - this._firstNewElement) * 4 * this._floatCountPerVertex * 4);
                if (this._firstFreeElement > 0) {
                    this._vertexBuffer2D.setNeedUpload();
                    this._vertexBuffer2D.subUpload(0, 0, this._firstFreeElement * 4 * this._floatCountPerVertex * 4)
                }
            }
            this._firstNewElement = this._firstFreeElement
        };
        e.renderSubmit = function() {
            if (this.texture && this.texture.loaded) {
                this.update(a.timer.delta);
                this.sv.u_CurrentTime = this._currentTime;
                if (this._firstNewElement != this._firstFreeElement) {
                    this.addNewParticlesToVertexBuffer()
                }
                this.blend();
                if (this._firstActiveElement != this._firstFreeElement) {
                    var e = L.mainContext;
                    this._vertexBuffer2D.bind(this._indexBuffer2D);
                    this.sv.u_texture = this.texture.source;
                    this.sv.upload();
                    if (this._firstActiveElement < this._firstFreeElement) {
                        L.mainContext.drawElements(4, (this._firstFreeElement - this._firstActiveElement) * 6, 5123, this._firstActiveElement * 6 * 2)
                    } else {
                        L.mainContext.drawElements(4, (this.settings.maxPartices - this._firstActiveElement) * 6, 5123, this._firstActiveElement * 6 * 2);
                        if (this._firstFreeElement > 0) L.mainContext.drawElements(4, this._firstFreeElement * 6, 5123, 0)
                    }
                    C.drawCall++
                }
                this._drawCounter++
            }
            return 1
        };
        e.blend = function() {
            if (h.activeBlendFunction !== this._blendFn) {
                var e = L.mainContext;
                e.enable(3042);
                this._blendFn(e);
                h.activeBlendFunction = this._blendFn
            }
        };
        e.dispose = function() {
            this._vertexBuffer2D.dispose();
            this._indexBuffer2D.dispose()
        };
        n.activeBlendType = -1;
        return n
    } (N);
    var V = function(e) {
        function t() {
            this.a_CornerTextureCoordinate = [4, 5126, false, 116, 0];
            this.a_Position = [3, 5126, false, 116, 16];
            this.a_Velocity = [3, 5126, false, 116, 28];
            this.a_StartColor = [4, 5126, false, 116, 40];
            this.a_EndColor = [4, 5126, false, 116, 56];
            this.a_SizeRotation = [3, 5126, false, 116, 72];
            this.a_Radius = [2, 5126, false, 116, 84];
            this.a_Radian = [4, 5126, false, 116, 92];
            this.a_AgeAddScale = [1, 5126, false, 116, 108];
            this.a_Time = [1, 5126, false, 116, 112];
            this.u_CurrentTime = NaN;
            this.u_Duration = NaN;
            this.u_Gravity = null;
            this.u_EndVelocity = NaN;
            this.u_texture = null;
            t.__super.call(this, 0, 0)
        }
        r(t, "laya.particle.shader.value.ParticleShaderValue", e);
        var i = t.prototype;
        i.upload = function() {
            this.refresh();
            t.pShader.upload(this)
        };
        n(t, ["pShader",
        function() {
            return this.pShader = new z
        }]);
        return t
    } (x);
    var q = function(t) {
        function i(e) {
            this._matrix4 = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];
            this._particleTemplate = null;
            this._canvasTemplate = null;
            this._emitter = null;
            this.autoPlay = true;
            i.__super.call(this);
            if (e) this.setParticleSetting(e)
        }
        r(i, "laya.particle.Particle2D", t);
        var e = i.prototype;
        e.load = function(e) {
            a.loader.load(e, f.create(this, this.setParticleSetting), null, "json")
        };
        e.setParticleSetting = function(t) {
            var i = this;
            if (!t) return this.stop();
            M.checkSetting(t);
            if (!s.ConchParticleTemplate2D || m.isWebGL) this.customRenderEnable = true;
            if (m.isWebGL) {
                this._particleTemplate = new O(t);
                this.graphics._saveToCmd(m.context._drawParticle, [this._particleTemplate])
            } else if (m.isConchApp && s.ConchParticleTemplate2D) {
                this._particleTemplate = new ConchParticleTemplate2D;
                var n = this;
                a.loader.load(t.textureName, f.create(null,
                function(e) {
                    n._particleTemplate.texture = e;
                    n._particleTemplate.settings = t;
                    if (m.isConchNode) {
                        n.graphics.drawParticle(n._particleTemplate)
                    } else {
                        n.graphics._saveToCmd(m.context._drawParticle, [i._particleTemplate])
                    }
                }));
                this._emitter = {
                    start: function() {}
                };
                this.play = this._particleTemplate.play.bind(this._particleTemplate);
                this.stop = this._particleTemplate.stop.bind(this._particleTemplate);
                if (this.autoPlay) this.play();
                return
            } else {
                this._particleTemplate = this._canvasTemplate = new F(t)
            }
            if (!this._emitter) {
                this._emitter = new E(this._particleTemplate)
            } else {
                this._emitter.template = this._particleTemplate
            }
            if (this.autoPlay) {
                this.emitter.start();
                this.play()
            }
        };
        e.play = function() {
            this.timer.frameLoop(1, this, this._loop)
        };
        e.stop = function() {
            this.timer.clear(this, this._loop)
        };
        e._loop = function() {
            this.advanceTime(1 / 60)
        };
        e.advanceTime = function(e) {
            e === void 0 && (e = 1);
            if (this._canvasTemplate && this._canvasTemplate.advanceTime) {
                this._canvasTemplate.advanceTime(e)
            }
            if (this._emitter && this._emitter.advanceTime) {
                this._emitter.advanceTime(e)
            }
        };
        e.customRender = function(e, t, i) {
            if (m.isWebGL) {
                this._matrix4[0] = e.ctx._curMat.a;
                this._matrix4[1] = e.ctx._curMat.b;
                this._matrix4[4] = e.ctx._curMat.c;
                this._matrix4[5] = e.ctx._curMat.d;
                this._matrix4[12] = e.ctx._curMat.tx;
                this._matrix4[13] = e.ctx._curMat.ty;
                var n = this._particleTemplate.sv;
                n.u_mmat = this._matrix4
            }
            if (this._canvasTemplate) {
                this._canvasTemplate.render(e, t, i)
            }
        };
        e.destroy = function(e) {
            e === void 0 && (e = true);
            if (this._particleTemplate instanceof laya.particle.ParticleTemplate2D) this._particleTemplate.dispose();
            t.prototype.destroy.call(this, e)
        };
        o(0, e, "url", null,
        function(e) {
            this.load(e)
        });
        o(0, e, "emitter",
        function() {
            return this._emitter
        });
        return i
    } (S);
    var z = function(e) {
        function t() {
            t.__super.call(this, t.vs, t.ps, "ParticleShader")
        }
        r(t, "laya.particle.shader.ParticleShader", e);
        n(t, ["vs",
        function() {
            return this.vs = "attribute vec4 a_CornerTextureCoordinate;\nattribute vec3 a_Position;\nattribute vec3 a_Velocity;\nattribute vec4 a_StartColor;\nattribute vec4 a_EndColor;\nattribute vec3 a_SizeRotation;\nattribute vec2 a_Radius;\nattribute vec4 a_Radian;\nattribute float a_AgeAddScale;\nattribute float a_Time;\n\nvarying vec4 v_Color;\nvarying vec2 v_TextureCoordinate;\n\nuniform float u_CurrentTime;\nuniform float u_Duration;\nuniform float u_EndVelocity;\nuniform vec3 u_Gravity;\n\n#ifdef PARTICLE3D\n uniform mat4 u_WorldMat;\n uniform mat4 u_View;\n uniform mat4 u_Projection;\n uniform vec2 u_ViewportScale;\n#else\n uniform vec2 size;\n uniform mat4 mmat;\n uniform mat4 u_mmat;\n#endif\n\nvec4 ComputeParticlePosition(in vec3 position, in vec3 velocity,in float age,in float normalizedAge)\n{\n\n   float startVelocity = length(velocity);//起始标量速度\n   float endVelocity = startVelocity * u_EndVelocity;//结束标量速度\n\n   float velocityIntegral = startVelocity * normalizedAge +(endVelocity - startVelocity) * normalizedAge *normalizedAge/2.0;//计算当前速度的标量（单位空间），vt=v0*t+(1/2)*a*(t^2)\n   \n   vec3 addPosition = normalize(velocity) * velocityIntegral * u_Duration;//计算受自身速度影响的位置，转换标量到矢量    \n   addPosition += u_Gravity * age * normalizedAge;//计算受重力影响的位置\n   \n   float radius=mix(a_Radius.x, a_Radius.y, normalizedAge); //计算粒子受半径和角度影响（无需计算角度和半径时，可用宏定义优化屏蔽此计算）\n   float radianHorizontal =mix(a_Radian.x,a_Radian.z,normalizedAge);\n   float radianVertical =mix(a_Radian.y,a_Radian.w,normalizedAge);\n   \n   float r =cos(radianVertical)* radius;\n   addPosition.y += sin(radianVertical) * radius;\n\t\n   addPosition.x += cos(radianHorizontal) *r;\n   addPosition.z += sin(radianHorizontal) *r;\n  \n   #ifdef PARTICLE3D\n   position+=addPosition;\n    return  u_Projection*u_View*u_WorldMat*(vec4(position, 1.0));\n   #else\n   addPosition.y=-addPosition.y;//2D粒子位置更新需要取负，2D粒子坐标系Y轴正向朝上\n   position+=addPosition;\n    return  vec4(position,1.0);\n   #endif\n}\n\nfloat ComputeParticleSize(in float startSize,in float endSize, in float normalizedAge)\n{    \n    float size = mix(startSize, endSize, normalizedAge);\n    \n\t#ifdef PARTICLE3D\n    //Project the size into screen coordinates.\n     return size * u_Projection[1][1];\n\t#else\n\t return size;\n\t#endif\n}\n\nmat2 ComputeParticleRotation(in float rot,in float age)\n{    \n    float rotation =rot * age;\n    //计算2x2旋转矩阵.\n    float c = cos(rotation);\n    float s = sin(rotation);\n    return mat2(c, -s, s, c);\n}\n\nvec4 ComputeParticleColor(in vec4 startColor,in vec4 endColor,in float normalizedAge)\n{\n\tvec4 color=mix(startColor,endColor,normalizedAge);\n    //硬编码设置，使粒子淡入很快，淡出很慢,6.7的缩放因子把置归一在0到1之间，可以谷歌x*(1-x)*(1-x)*6.7的制图表\n    color.a *= normalizedAge * (1.0-normalizedAge) * (1.0-normalizedAge) * 6.7;\n   \n    return color;\n}\n\nvoid main()\n{\n   float age = u_CurrentTime - a_Time;\n   age *= 1.0 + a_AgeAddScale;\n   float normalizedAge = clamp(age / u_Duration,0.0,1.0);\n   gl_Position = ComputeParticlePosition(a_Position, a_Velocity, age, normalizedAge);//计算粒子位置\n   float pSize = ComputeParticleSize(a_SizeRotation.x,a_SizeRotation.y, normalizedAge);\n   mat2 rotation = ComputeParticleRotation(a_SizeRotation.z, age);\n\t\n   #ifdef PARTICLE3D\n\tgl_Position.xy += (rotation*a_CornerTextureCoordinate.xy) * pSize * u_ViewportScale;\n   #else\n    mat4 mat=u_mmat*mmat;\n    gl_Position=vec4((mat*gl_Position).xy,0.0,1.0);\n\tgl_Position.xy += (rotation*a_CornerTextureCoordinate.xy) * pSize*vec2(mat[0][0],mat[1][1]);\n    gl_Position=vec4((gl_Position.x/size.x-0.5)*2.0,(0.5-gl_Position.y/size.y)*2.0,0.0,1.0);\n   #endif\n   \n   v_Color = ComputeParticleColor(a_StartColor,a_EndColor, normalizedAge);\n   v_TextureCoordinate =a_CornerTextureCoordinate.zw;\n}\n\n"
        },
        "ps",
        function() {
            return this.ps = "#ifdef FSHIGHPRECISION\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n\nvarying vec4 v_Color;\nvarying vec2 v_TextureCoordinate;\nuniform sampler2D u_texture;\n\nvoid main()\n{\t\n\tgl_FragColor=texture2D(u_texture,v_TextureCoordinate)*v_Color;\n\tgl_FragColor.xyz *= v_Color.w;\n}"
        }]);
        return t
    } (I)
})(window, document, Laya);
if (typeof define === "function" && define.amd) {
    define("laya.core", ["require", "exports"],
    function(e, t) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: true
        });
        for (var i in Laya) {
            var n = Laya[i];
            n && n.__isclass && (t[i] = n)
        }
    })
} (function(e, t, v) {
    var i = v.un,
    n = v.uns,
    s = v.static,
    r = v.class,
    o = v.getset,
    a = v.__newvec;
    var l = laya.utils.Browser,
    h = laya.resource.HTMLCanvas,
    u = laya.utils.Handler,
    p = laya.net.Loader;
    var d = laya.maths.Point,
    c = laya.maths.Rectangle,
    _ = laya.renders.Render,
    f = laya.renders.RenderContext;
    var m = laya.display.Sprite,
    y = laya.resource.Texture;
    var g = function() {
        var e, d, g;
        function a() {
            this._jsonData = null;
            this._tileTexSetArr = [];
            this._texArray = [];
            this._x = 0;
            this._y = 0;
            this._width = 0;
            this._height = 0;
            this._mapW = 0;
            this._mapH = 0;
            this._mapTileW = 0;
            this._mapTileH = 0;
            this._mapSprite = null;
            this._layerArray = [];
            this._renderLayerArray = [];
            this._gridArray = [];
            this._showGridKey = false;
            this._totalGridNum = 0;
            this._gridW = 0;
            this._gridH = 0;
            this._gridWidth = 450;
            this._gridHeight = 450;
            this._jsonLoader = null;
            this._loader = null;
            this._tileSetArray = [];
            this._currTileSet = null;
            this._completeHandler = null;
            this._index = 0;
            this._animationDic = {};
            this._properties = null;
            this._tileProperties = {};
            this._tileProperties2 = {};
            this._orientation = "orthogonal";
            this._renderOrder = "right-down";
            this._colorArray = ["FF", "00", "33", "66"];
            this._scale = 1;
            this._pivotScaleX = .5;
            this._pivotScaleY = .5;
            this._centerX = 0;
            this._centerY = 0;
            this._viewPortX = 0;
            this._viewPortY = 0;
            this._viewPortWidth = 0;
            this._viewPortHeight = 0;
            this._enableLinear = true;
            this._resPath = null;
            this._pathArray = null;
            this._limitRange = false;
            this._fastDirty = true;
            this.autoCache = true;
            this.autoCacheType = "normal";
            this.enableMergeLayer = false;
            this.removeCoveredTile = false;
            this.showGridTextureCount = false;
            this.antiCrack = true;
            this.cacheAllAfterInit = false;
            this._texutreStartDic = {};
            this._rect = new c;
            this._paddingRect = new c;
            this._mapRect = new e;
            this._mapLogicRect = new e;
            this._mapLastRect = new e;
            this._mapSprite = new m
        }
        r(a, "laya.map.TiledMap");
        var t = a.prototype;
        t.createMap = function(e, t, i, n, s, a, r) {
            a === void 0 && (a = true);
            r === void 0 && (r = false);
            this._enableLinear = a;
            this._limitRange = r;
            this._rect.x = t.x;
            this._rect.y = t.y;
            this._rect.width = t.width;
            this._rect.height = t.height;
            this._viewPortWidth = t.width / this._scale;
            this._viewPortHeight = t.height / this._scale;
            this._completeHandler = i;
            if (n) {
                this._paddingRect.copyFrom(n)
            } else {
                this._paddingRect.setTo(0, 0, 0, 0)
            }
            if (s) {
                this._gridWidth = s.x;
                this._gridHeight = s.y
            }
            var o = e.lastIndexOf("/");
            if (o > -1) {
                this._resPath = e.substr(0, o);
                this._pathArray = this._resPath.split("/")
            } else {
                this._resPath = "";
                this._pathArray = []
            }
            this._jsonLoader = new p;
            this._jsonLoader.once("complete", this, this.onJsonComplete);
            this._jsonLoader.load(e, "json", false)
        };
        t.onJsonComplete = function(e) {
            var t = this._jsonData = e;
            this._properties = t.properties;
            this._orientation = t.orientation;
            this._renderOrder = t.renderorder;
            this._mapW = t.width;
            this._mapH = t.height;
            this._mapTileW = t.tilewidth;
            this._mapTileH = t.tileheight;
            this._width = this._mapTileW * this._mapW;
            this._height = this._mapTileH * this._mapH;
            if (this._orientation == "staggered") {
                this._height = (.5 + this._mapH * .5) * this._mapTileH
            }
            this._mapLastRect.top = this._mapLastRect.bottom = this._mapLastRect.left = this._mapLastRect.right = -1;
            var i = t.tilesets;
            var n;
            var s;
            var a = 0;
            for (a = 0; a < i.length; a++) {
                n = i[a];
                s = new g;
                s.init(n);
                if (s.properties && s.properties.ignore) continue;
                this._tileProperties[a] = s.tileproperties;
                this.addTileProperties(s.tileproperties);
                this._tileSetArray.push(s);
                var r = n.tiles;
                if (r) {
                    for (var o in r) {
                        var l = r[o].animation;
                        if (l) {
                            var h = new d;
                            this._animationDic[o] = h;
                            h.image = n.image;
                            for (var u = 0; u < l.length; u++) {
                                var c = l[u];
                                h.mAniIdArray.push(c.tileid);
                                h.mDurationTimeArray.push(c.duration)
                            }
                        }
                    }
                }
            }
            this._tileTexSetArr.push(null);
            if (this._tileSetArray.length > 0) {
                s = this._currTileSet = this._tileSetArray.shift();
                this._loader = new p;
                this._loader.once("complete", this, this.onTextureComplete);
                var f = this.mergePath(this._resPath, s.image);
                this._loader.load(f, "image", false)
            }
        };
        t.mergePath = function(e, t) {
            var i = "";
            var n = t.split("/");
            var s = 0;
            var a = 0;
            for (a = n.length - 1; a >= 0; a--) {
                if (n[a] == "..") {
                    s++
                }
            }
            if (s == 0) {
                if (this._pathArray.length > 0) {
                    i = e + "/" + t
                } else {
                    i = t
                }
                return i
            }
            var r = this._pathArray.length - s;
            if (r < 0) {
                console.log("[error]path does not exist", this._pathArray, n, e, t)
            }
            for (a = 0; a < r; a++) {
                if (a == 0) {
                    i += this._pathArray[a]
                } else {
                    i = i + "/" + this._pathArray[a]
                }
            }
            for (a = s; a < n.length; a++) {
                i = i + "/" + n[a]
            }
            return i
        };
        t.onTextureComplete = function(e) {
            var t = this._jsonData;
            var i = e;
            if (_.isWebGL && !this._enableLinear) {
                i.bitmap.minFifter = 9728;
                i.bitmap.magFifter = 9728;
                i.bitmap.enableMerageInAtlas = false
            }
            this._texArray.push(i);
            var n = null;
            var s = this._currTileSet;
            var a = s.tilewidth;
            var r = s.tileheight;
            var o = s.imagewidth;
            var l = s.imageheight;
            var h = s.firstgid;
            var u = Math.floor((o - s.margin - a) / (a + s.spacing)) + 1;
            var c = Math.floor((l - s.margin - r) / (r + s.spacing)) + 1;
            var f = null;
            this._texutreStartDic[s.image] = this._tileTexSetArr.length;
            for (var d = 0; d < c; d++) {
                for (var g = 0; g < u; g++) {
                    f = new I;
                    f.offX = s.titleoffsetX;
                    f.offY = s.titleoffsetY - (r - this._mapTileH);
                    f.texture = y.createFromTexture(i, s.margin + (a + s.spacing) * g, s.margin + (r + s.spacing) * d, a, r);
                    if (this.antiCrack) this.adptTexture(f.texture);
                    this._tileTexSetArr.push(f);
                    f.gid = this._tileTexSetArr.length
                }
            }
            if (this._tileSetArray.length > 0) {
                s = this._currTileSet = this._tileSetArray.shift();
                this._loader.once("complete", this, this.onTextureComplete);
                var p = this.mergePath(this._resPath, s.image);
                this._loader.load(p, "image", false)
            } else {
                this._currTileSet = null;
                this.initMap()
            }
        };
        t.adptTexture = function(e) {
            if (!e) return;
            var t = e.uv[0];
            var i = e.uv[2];
            var n = e.uv[1];
            var s = e.uv[7];
            var a = 1 / e.bitmap.width;
            var r = 1 / e.bitmap.height;
            e.uv[0] = e.uv[6] = t + a;
            e.uv[2] = e.uv[4] = i - a;
            e.uv[1] = e.uv[3] = n + r;
            e.uv[5] = e.uv[7] = s - r
        };
        t.initMap = function() {
            var e = 0,
            t = 0;
            for (var i in this._animationDic) {
                var n = this._animationDic[i];
                var s = 0;
                s = this._texutreStartDic[n.image];
                var a = this.getTexture(parseInt(i) + s);
                if (n.mAniIdArray.length > 0) {
                    a.textureArray = [];
                    a.durationTimeArray = n.mDurationTimeArray;
                    a.isAnimation = true;
                    a.animationTotalTime = 0;
                    for (e = 0, t = a.durationTimeArray.length; e < t; e++) {
                        a.animationTotalTime += a.durationTimeArray[e]
                    }
                    for (e = 0, t = n.mAniIdArray.length; e < t; e++) {
                        var r = this.getTexture(n.mAniIdArray[e] + s);
                        a.textureArray.push(r)
                    }
                }
            }
            this._gridWidth = Math.floor(this._gridWidth / this._mapTileW) * this._mapTileW;
            this._gridHeight = Math.floor(this._gridHeight / this._mapTileH) * this._mapTileH;
            if (this._gridWidth < this._mapTileW) {
                this._gridWidth = this._mapTileW
            }
            if (this._gridHeight < this._mapTileH) {
                this._gridHeight = this._mapTileH
            }
            this._gridW = Math.ceil(this._width / this._gridWidth);
            this._gridH = Math.ceil(this._height / this._gridHeight);
            this._totalGridNum = this._gridW * this._gridH;
            for (e = 0; e < this._gridH; e++) {
                var o = [];
                this._gridArray.push(o);
                for (var l = 0; l < this._gridW; l++) {
                    o.push(null)
                }
            }
            var h = this._jsonData.layers;
            var u = true;
            var c = 1;
            var f;
            var d;
            var g;
            for (var p = 0; p < h.length; p++) {
                var _ = h[p];
                if (_.visible == true) {
                    var m = new C;
                    m.init(_, this);
                    if (!this.enableMergeLayer) {
                        this._mapSprite.addChild(m);
                        this._renderLayerArray.push(m)
                    } else {
                        f = m.getLayerProperties("layer");
                        u = u || !g || f != d;
                        if (u) {
                            u = false;
                            m.tarLayer = m;
                            g = m;
                            this._mapSprite.addChild(m);
                            this._renderLayerArray.push(m)
                        } else {
                            m.tarLayer = g
                        }
                        d = f
                    }
                    this._layerArray.push(m)
                }
            }
            if (this.removeCoveredTile) {
                this.adptTiledMapData()
            }
            if (this.cacheAllAfterInit) {
                this.cacheAllGrid()
            }
            this.moveViewPort(this._rect.x, this._rect.y);
            v.stage.addChild(this.mapSprite());
            if (this._completeHandler != null) {
                this._completeHandler.run()
            }
        };
        t.addTileProperties = function(e) {
            var t;
            for (t in e) {
                this._tileProperties2[t] = e[t]
            }
        };
        t.getTileUserData = function(e, t, i) {
            if (!this._tileProperties2 || !this._tileProperties2[e] || !(t in this._tileProperties2[e])) return i;
            return this._tileProperties2[e][t]
        };
        t.adptTiledMapData = function() {
            var e = 0,
            t = 0;
            t = this._layerArray.length;
            var i;
            var n = {};
            var s;
            for (e = t - 1; e >= 0; e--) {
                i = this._layerArray[e];
                s = i._mapData;
                if (!s) continue;
                this.removeCoverd(s, n);
                this.collectCovers(s, n, e)
            }
        };
        t.removeCoverd = function(e, t) {
            var i = 0,
            n = 0;
            n = e.length;
            for (i = 0; i < n; i++) {
                if (t[i]) {
                    e[i] = 0
                }
            }
        };
        t.collectCovers = function(e, t, i) {
            var n = 0,
            s = 0;
            s = e.length;
            var a = 0;
            var r = 0;
            for (n = 0; n < s; n++) {
                a = e[n];
                if (a > 0) {
                    r = this.getTileUserData(a - 1, "type", 0);
                    if (r > 0) {
                        t[n] = a
                    }
                }
            }
        };
        t.getTexture = function(e) {
            if (e < this._tileTexSetArr.length) {
                return this._tileTexSetArr[e]
            }
            return null
        };
        t.getMapProperties = function(e) {
            if (this._properties) {
                return this._properties[e]
            }
            return null
        };
        t.getTileProperties = function(e, t, i) {
            if (this._tileProperties[e] && this._tileProperties[e][t]) {
                return this._tileProperties[e][t][i]
            }
            return null
        };
        t.getSprite = function(e, t, i) {
            if (0 < this._tileTexSetArr.length) {
                var n = new S;
                n.initData(this, true);
                n.size(t, i);
                var s = this._tileTexSetArr[e];
                if (s != null && s.texture != null) {
                    if (s.isAnimation) {
                        var a = new b;
                        this._index++;
                        a.setTileTextureSet(this._index.toString(), s);
                        n.addAniSprite(a);
                        n.addChild(a)
                    } else {
                        n.graphics.drawTexture(s.texture, 0, 0, t, i)
                    }
                    n.drawImageNum++
                }
                return n
            }
            return null
        };
        t.setViewPortPivotByScale = function(e, t) {
            this._pivotScaleX = e;
            this._pivotScaleY = t;
            this._fastDirty = true
        };
        t.moveViewPort = function(e, t) {
            this._x = -e;
            this._y = -t;
            if (this._fastDirty) {
                this._rect.x = e;
                this._rect.y = t;
                this.updateViewPort()
            } else {
                var i = NaN,
                n = NaN;
                i = e - this._rect.x;
                n = t - this._rect.y;
                this._rect.x = e;
                this._rect.y = t;
                this.updateViewPortFast(i, n)
            }
        };
        t.changeViewPort = function(e, t, i, n) {
            if (e == this._rect.x && t == this._rect.y && i == this._rect.width && n == this._rect.height) return;
            if (i == this._rect.width && n == this._rect.height) {
                this.moveViewPort(e, t);
                return
            }
            this._fastDirty = true;
            this._x = -e;
            this._y = -t;
            this._rect.x = e;
            this._rect.y = t;
            this._rect.width = i;
            this._rect.height = n;
            this._viewPortWidth = i / this._scale;
            this._viewPortHeight = n / this._scale;
            this.updateViewPort()
        };
        t.changeViewPortBySize = function(e, t, i) {
            if (i == null) {
                i = new c
            }
            this._centerX = this._rect.x + this._rect.width * this._pivotScaleX;
            this._centerY = this._rect.y + this._rect.height * this._pivotScaleY;
            i.x = this._centerX - e * this._pivotScaleX;
            i.y = this._centerY - t * this._pivotScaleY;
            i.width = e;
            i.height = t;
            this.changeViewPort(i.x, i.y, i.width, i.height);
            return i
        };
        t.updateViewPortFast = function(e, t) {
            this._centerX += e;
            this._centerY += t;
            this._viewPortX += e;
            this._viewPortY += t;
            var i = false;
            var n = t / this._gridHeight;
            var s = e / this._gridWidth;
            this._mapLogicRect.top += n;
            this._mapLogicRect.bottom += n;
            this._mapLogicRect.left += s;
            this._mapLogicRect.right += s;
            this._mapRect.top = 0 | this._mapLogicRect.top;
            this._mapRect.bottom = 0 | this._mapLogicRect.bottom;
            this._mapRect.left = 0 | this._mapLogicRect.left;
            this._mapRect.right = 0 | this._mapLogicRect.right;
            if (this._mapRect.top != this._mapLastRect.top || this._mapRect.bottom != this._mapLastRect.bottom || this._mapRect.left != this._mapLastRect.left || this._mapRect.right != this._mapLastRect.right) {
                this.clipViewPort();
                this._mapLastRect.top = this._mapRect.top;
                this._mapLastRect.bottom = this._mapRect.bottom;
                this._mapLastRect.left = this._mapRect.left;
                this._mapLastRect.right = this._mapRect.right;
                i = true
            }
            i = i || (e != 0 || t != 0);
            if (!i) return;
            this.updateMapLayersPos()
        };
        t.updateMapLayersPos = function() {
            var e;
            var t = this._renderLayerArray.length;
            for (var i = 0; i < t; i++) {
                e = this._renderLayerArray[i];
                if (e._gridSpriteArray.length > 0) {
                    e.updateAloneObject();
                    e.pos( - this._viewPortX, -this._viewPortY)
                }
            }
        };
        t.updateViewPort = function() {
            this._fastDirty = false;
            var e = this._rect.width * this._pivotScaleX;
            var t = this._rect.height * this._pivotScaleY;
            this._centerX = this._rect.x + e;
            this._centerY = this._rect.y + t;
            var i = false;
            var n = this._viewPortX;
            this._viewPortX = this._centerX - e / this._scale;
            if (n != this._viewPortX) {
                i = true
            } else {
                n = this._viewPortY
            }
            this._viewPortY = this._centerY - t / this._scale;
            if (!i && n != this._viewPortY) {
                i = true
            }
            if (this._limitRange) {
                var s = this._viewPortX + this._viewPortWidth;
                if (s > this._width) {
                    this._viewPortX = this._width - this._viewPortWidth
                }
                var a = this._viewPortY + this._viewPortHeight;
                if (a > this._height) {
                    this._viewPortY = this._height - this._viewPortHeight
                }
                if (this._viewPortX < 0) {
                    this._viewPortX = 0
                }
                if (this._viewPortY < 0) {
                    this._viewPortY = 0
                }
            }
            var r = this._paddingRect;
            this._mapLogicRect.top = (this._viewPortY - r.y) / this._gridHeight;
            this._mapLogicRect.bottom = (this._viewPortY + this._viewPortHeight + r.height + r.y) / this._gridHeight;
            this._mapLogicRect.left = (this._viewPortX - r.x) / this._gridWidth;
            this._mapLogicRect.right = (this._viewPortX + this._viewPortWidth + r.width + r.x) / this._gridWidth;
            this._mapRect.top = 0 | this._mapLogicRect.top;
            this._mapRect.bottom = 0 | this._mapLogicRect.bottom;
            this._mapRect.left = 0 | this._mapLogicRect.left;
            this._mapRect.right = 0 | this._mapLogicRect.right;
            if (this._mapRect.top != this._mapLastRect.top || this._mapRect.bottom != this._mapLastRect.bottom || this._mapRect.left != this._mapLastRect.left || this._mapRect.right != this._mapLastRect.right) {
                this.clipViewPort();
                this._mapLastRect.top = this._mapRect.top;
                this._mapLastRect.bottom = this._mapRect.bottom;
                this._mapLastRect.left = this._mapRect.left;
                this._mapLastRect.right = this._mapRect.right;
                i = true
            }
            if (!i) return;
            this.updateMapLayersPos()
        };
        t.clipViewPort = function() {
            var e = 0;
            var t;
            var i = 0;
            var n = 0;
            var s = 0;
            var a = 0,
            r = 0;
            if (this._mapRect.left > this._mapLastRect.left) {
                n = this._mapRect.left - this._mapLastRect.left;
                if (n > 0) {
                    for (r = this._mapLastRect.left; r < this._mapLastRect.left + n; r++) {
                        for (a = this._mapLastRect.top; a <= this._mapLastRect.bottom; a++) {
                            this.hideGrid(r, a)
                        }
                    }
                }
            } else {
                s = Math.min(this._mapLastRect.left, this._mapRect.right + 1) - this._mapRect.left;
                if (s > 0) {
                    for (r = this._mapRect.left; r < this._mapRect.left + s; r++) {
                        for (a = this._mapRect.top; a <= this._mapRect.bottom; a++) {
                            this.showGrid(r, a)
                        }
                    }
                }
            }
            if (this._mapRect.right > this._mapLastRect.right) {
                s = this._mapRect.right - this._mapLastRect.right;
                if (s > 0) {
                    for (r = Math.max(this._mapLastRect.right + 1, this._mapRect.left); r <= this._mapLastRect.right + s; r++) {
                        for (a = this._mapRect.top; a <= this._mapRect.bottom; a++) {
                            this.showGrid(r, a)
                        }
                    }
                }
            } else {
                n = this._mapLastRect.right - this._mapRect.right;
                if (n > 0) {
                    for (r = this._mapRect.right + 1; r <= this._mapRect.right + n; r++) {
                        for (a = this._mapLastRect.top; a <= this._mapLastRect.bottom; a++) {
                            this.hideGrid(r, a)
                        }
                    }
                }
            }
            if (this._mapRect.top > this._mapLastRect.top) {
                n = this._mapRect.top - this._mapLastRect.top;
                if (n > 0) {
                    for (a = this._mapLastRect.top; a < this._mapLastRect.top + n; a++) {
                        for (r = this._mapLastRect.left; r <= this._mapLastRect.right; r++) {
                            this.hideGrid(r, a)
                        }
                    }
                }
            } else {
                s = Math.min(this._mapLastRect.top, this._mapRect.bottom + 1) - this._mapRect.top;
                if (s > 0) {
                    for (a = this._mapRect.top; a < this._mapRect.top + s; a++) {
                        for (r = this._mapRect.left; r <= this._mapRect.right; r++) {
                            this.showGrid(r, a)
                        }
                    }
                }
            }
            if (this._mapRect.bottom > this._mapLastRect.bottom) {
                s = this._mapRect.bottom - this._mapLastRect.bottom;
                if (s > 0) {
                    for (a = Math.max(this._mapLastRect.bottom + 1, this._mapRect.top); a <= this._mapLastRect.bottom + s; a++) {
                        for (r = this._mapRect.left; r <= this._mapRect.right; r++) {
                            this.showGrid(r, a)
                        }
                    }
                }
            } else {
                n = this._mapLastRect.bottom - this._mapRect.bottom;
                if (n > 0) {
                    for (a = this._mapRect.bottom + 1; a <= this._mapRect.bottom + n; a++) {
                        for (r = this._mapLastRect.left; r <= this._mapLastRect.right; r++) {
                            this.hideGrid(r, a)
                        }
                    }
                }
            }
        };
        t.showGrid = function(e, t) {
            if (e < 0 || e >= this._gridW || t < 0 || t >= this._gridH) {
                return
            }
            var i = 0,
            n = 0;
            var s;
            var a = this._gridArray[t][e];
            if (a == null) {
                a = this.getGridArray(e, t)
            } else {
                for (i = 0; i < a.length && i < this._layerArray.length; i++) {
                    var r = this._layerArray[i];
                    if (r && a[i]) {
                        s = a[i];
                        if (s.visible == false && s.drawImageNum > 0) {
                            s.show()
                        }
                    }
                }
            }
        };
        t.cacheAllGrid = function() {
            var e = 0,
            t = 0;
            var i;
            for (e = 0; e < this._gridW; e++) {
                for (t = 0; t < this._gridH; t++) {
                    i = this.getGridArray(e, t);
                    this.cacheGridsArray(i)
                }
            }
        };
        t.cacheGridsArray = function(e) {
            var t;
            if (!a._tempContext) {
                a._tempContext = new f(1, 1, h.create("AUTO"))
            }
            t = a._tempContext.canvas;
            t.context.asBitmap = false;
            var i = 0,
            n = 0;
            n = e.length;
            var s;
            for (i = 0; i < n; i++) {
                s = e[i];
                t.clear();
                t.size(1, 1);
                s.render(a._tempContext, 0, 0);
                s.hide()
            }
            t.clear();
            t.size(1, 1)
        };
        t.getGridArray = function(e, t) {
            var i = 0,
            n = 0;
            var s;
            var a = this._gridArray[t][e];
            if (a == null) {
                a = this._gridArray[t][e] = [];
                var r = 0;
                var o = 0;
                var l = 0;
                var h = 0;
                var u = this._gridWidth;
                var c = this._gridHeight;
                switch (this.orientation) {
                case "isometric":
                    r = Math.floor(e * u);
                    o = Math.floor(e * u + u);
                    l = Math.floor(t * c);
                    h = Math.floor(t * c + c);
                    var f = 0,
                    d = 0,
                    g = 0,
                    p = 0;
                    break;
                case "staggered":
                    r = Math.floor(e * u / this._mapTileW);
                    o = Math.floor((e * u + u) / this._mapTileW);
                    l = Math.floor(t * c / (this._mapTileH / 2));
                    h = Math.floor((t * c + c) / (this._mapTileH / 2));
                    break;
                case "orthogonal":
                    r = Math.floor(e * u / this._mapTileW);
                    o = Math.floor((e * u + u) / this._mapTileW);
                    l = Math.floor(t * c / this._mapTileH);
                    h = Math.floor((t * c + c) / this._mapTileH);
                    break;
                case "hexagonal":
                    ;
                    var _ = this._mapTileH * 2 / 3;
                    r = Math.floor(e * u / this._mapTileW);
                    o = Math.ceil((e * u + u) / this._mapTileW);
                    l = Math.floor(t * c / _);
                    h = Math.ceil((t * c + c) / _);
                    break
                }
                var m = null;
                var v;
                var y;
                for (var I = 0; I < this._layerArray.length; I++) {
                    m = this._layerArray[I];
                    if (this.enableMergeLayer) {
                        if (m.tarLayer != y) {
                            v = null;
                            y = m.tarLayer
                        }
                        if (!v) {
                            v = y.getDrawSprite(e, t);
                            a.push(v)
                        }
                        s = v
                    } else {
                        s = m.getDrawSprite(e, t);
                        a.push(s)
                    }
                    var S;
                    if (this._showGridKey) {
                        S = "#";
                        S += this._colorArray[Math.floor(Math.random() * this._colorArray.length)];
                        S += this._colorArray[Math.floor(Math.random() * this._colorArray.length)];
                        S += this._colorArray[Math.floor(Math.random() * this._colorArray.length)]
                    }
                    switch (this.orientation) {
                    case "isometric":
                        ;
                        var C = this.tileHeight / 2;
                        var b = this.tileWidth / 2;
                        var w = this._width / 2;
                        g = Math.floor(l / C);
                        p = Math.floor(h / C);
                        f = this._mapW + Math.floor((r - w) / b);
                        d = this._mapW + Math.floor((o - w) / b);
                        var x = this._mapW * 2;
                        var R = this._mapH * 2;
                        if (g < 0) {
                            g = 0
                        }
                        if (g >= R) {
                            g = R - 1
                        }
                        if (p < 0) {
                            h = 0
                        }
                        if (p >= R) {
                            p = R - 1
                        }
                        s.zOrder = this._totalGridNum * I + t * this._gridW + e;
                        for (i = g; i < p; i++) {
                            for (n = 0; n <= i; n++) {
                                var L = i - n;
                                var T = n;
                                var D = L - T + this._mapW;
                                if (D > f && D <= d) {
                                    if (m.drawTileTexture(s, L, T)) {
                                        s.drawImageNum++
                                    }
                                }
                            }
                        }
                        break;
                    case "staggered":
                        s.zOrder = I * this._totalGridNum + t * this._gridW + e;
                        for (i = l; i < h; i++) {
                            for (n = r; n < o; n++) {
                                if (m.drawTileTexture(s, n, i)) {
                                    s.drawImageNum++
                                }
                            }
                        }
                        break;
                    case "orthogonal":
                    case "hexagonal":
                        switch (this._renderOrder) {
                        case "right-down":
                            s.zOrder = I * this._totalGridNum + t * this._gridW + e;
                            for (i = l; i < h; i++) {
                                for (n = r; n < o; n++) {
                                    if (m.drawTileTexture(s, n, i)) {
                                        s.drawImageNum++
                                    }
                                }
                            }
                            break;
                        case "right-up":
                            s.zOrder = I * this._totalGridNum + (this._gridH - 1 - t) * this._gridW + e;
                            for (i = h - 1; i >= l; i--) {
                                for (n = r; n < o; n++) {
                                    if (m.drawTileTexture(s, n, i)) {
                                        s.drawImageNum++
                                    }
                                }
                            }
                            break;
                        case "left-down":
                            s.zOrder = I * this._totalGridNum + t * this._gridW + (this._gridW - 1 - e);
                            for (i = l; i < h; i++) {
                                for (n = o - 1; n >= r; n--) {
                                    if (m.drawTileTexture(s, n, i)) {
                                        s.drawImageNum++
                                    }
                                }
                            }
                            break;
                        case "left-up":
                            s.zOrder = I * this._totalGridNum + (this._gridH - 1 - t) * this._gridW + (this._gridW - 1 - e);
                            for (i = h - 1; i >= l; i--) {
                                for (n = o - 1; n >= r; n--) {
                                    if (m.drawTileTexture(s, n, i)) {
                                        s.drawImageNum++
                                    }
                                }
                            }
                            break
                        }
                        break
                    }
                    if (!s.isHaveAnimation) {
                        s.autoSize = true;
                        if (this.autoCache) s.cacheAs = this.autoCacheType;
                        s.autoSize = false
                    }
                    if (!this.enableMergeLayer) {
                        if (s.drawImageNum > 0) {
                            m.addChild(s);
                            s.visible = false;
                            s.show()
                        }
                        if (this._showGridKey) {
                            s.graphics.drawRect(0, 0, u, c, null, S)
                        }
                    } else {
                        if (v && v.drawImageNum > 0 && y) {
                            y.addChild(v);
                            v.visible = false;
                            v.show()
                        }
                    }
                }
                if (this.enableMergeLayer && this.showGridTextureCount) {
                    if (v) {
                        v.graphics.fillText(v.drawImageNum + "", 20, 20, null, "#ff0000", "left")
                    }
                }
            }
            return a
        };
        t.hideGrid = function(e, t) {
            if (e < 0 || e >= this._gridW || t < 0 || t >= this._gridH) {
                return
            }
            var i = this._gridArray[t][e];
            if (i) {
                var n;
                for (var s = 0; s < i.length; s++) {
                    n = i[s];
                    if (n.drawImageNum > 0) {
                        if (n != null) {
                            n.hide()
                        }
                    }
                }
            }
        };
        t.getLayerObject = function(e, t) {
            var i = null;
            for (var n = 0; n < this._layerArray.length; n++) {
                i = this._layerArray[n];
                if (i.layerName == e) {
                    break
                }
            }
            if (i) {
                return i.getObjectByName(t)
            }
            return null
        };
        t.destroy = function() {
            this._orientation = "orthogonal";
            this._jsonData = null;
            var e = 0;
            var t = 0;
            var i = 0;
            this._gridArray = [];
            var n;
            for (e = 0; e < this._tileTexSetArr.length; e++) {
                n = this._tileTexSetArr[e];
                if (n) {
                    n.clearAll()
                }
            }
            this._tileTexSetArr = [];
            var s;
            for (e = 0; e < this._texArray.length; e++) {
                s = this._texArray[e];
                s.destroy()
            }
            this._texArray = [];
            this._width = 0;
            this._height = 0;
            this._mapW = 0;
            this._mapH = 0;
            this._mapTileW = 0;
            this._mapTileH = 0;
            this._rect.setTo(0, 0, 0, 0);
            var a;
            for (e = 0; e < this._layerArray.length; e++) {
                a = this._layerArray[e];
                a.clearAll()
            }
            this._layerArray = [];
            this._renderLayerArray = [];
            if (this._mapSprite) {
                this._mapSprite.destroy();
                this._mapSprite = null
            }
            this._jsonLoader = null;
            this._loader = null;
            var r = this._animationDic;
            for (var o in r) {
                delete r[o]
            }
            this._properties = null;
            r = this._tileProperties;
            for (o in r) {
                delete r[o]
            }
            this._currTileSet = null;
            this._completeHandler = null;
            this._mapRect.clearAll();
            this._mapLastRect.clearAll();
            this._tileSetArray = [];
            this._gridWidth = 450;
            this._gridHeight = 450;
            this._gridW = 0;
            this._gridH = 0;
            this._x = 0;
            this._y = 0;
            this._index = 0;
            this._enableLinear = true;
            this._resPath = null;
            this._pathArray = null
        };
        t.mapSprite = function() {
            return this._mapSprite
        };
        t.getLayerByName = function(e) {
            var t;
            for (var i = 0; i < this._layerArray.length; i++) {
                t = this._layerArray[i];
                if (e == t.layerName) {
                    return t
                }
            }
            return null
        };
        t.getLayerByIndex = function(e) {
            if (e < this._layerArray.length) {
                return this._layerArray[e]
            }
            return null
        };
        o(0, t, "orientation",
        function() {
            return this._orientation
        });
        o(0, t, "viewPortX",
        function() {
            return - this._viewPortX
        });
        o(0, t, "scale",
        function() {
            return this._scale
        },
        function(e) {
            if (e <= 0) return;
            this._scale = e;
            this._viewPortWidth = this._rect.width / e;
            this._viewPortHeight = this._rect.height / e;
            this._mapSprite.scale(this._scale, this._scale);
            this.updateViewPort()
        });
        o(0, t, "tileWidth",
        function() {
            return this._mapTileW
        });
        o(0, t, "viewPortY",
        function() {
            return - this._viewPortY
        });
        o(0, t, "tileHeight",
        function() {
            return this._mapTileH
        });
        o(0, t, "width",
        function() {
            return this._width
        });
        o(0, t, "numRowsTile",
        function() {
            return this._mapH
        });
        o(0, t, "numColumnsTile",
        function() {
            return this._mapW
        });
        o(0, t, "height",
        function() {
            return this._height
        });
        o(0, t, "viewPortWidth",
        function() {
            return this._viewPortWidth
        });
        o(0, t, "viewPortHeight",
        function() {
            return this._viewPortHeight
        });
        o(0, t, "x",
        function() {
            return this._x
        });
        o(0, t, "y",
        function() {
            return this._y
        });
        o(0, t, "gridWidth",
        function() {
            return this._gridWidth
        });
        o(0, t, "gridHeight",
        function() {
            return this._gridHeight
        });
        o(0, t, "numColumnsGrid",
        function() {
            return this._gridW
        });
        o(0, t, "numRowsGrid",
        function() {
            return this._gridH
        });
        o(0, t, "renderOrder",
        function() {
            return this._renderOrder
        });
        a.ORIENTATION_ORTHOGONAL = "orthogonal";
        a.ORIENTATION_ISOMETRIC = "isometric";
        a.ORIENTATION_STAGGERED = "staggered";
        a.ORIENTATION_HEXAGONAL = "hexagonal";
        a.RENDERORDER_RIGHTDOWN = "right-down";
        a.RENDERORDER_RIGHTUP = "right-up";
        a.RENDERORDER_LEFTDOWN = "left-down";
        a.RENDERORDER_LEFTUP = "left-up";
        a._tempContext = null;
        a.__init$ = function() {
            e = function() {
                function e() {
                    this.left = 0;
                    this.top = 0;
                    this.right = 0;
                    this.bottom = 0
                }
                r(e, "");
                var t = e.prototype;
                t.clearAll = function() {
                    this.left = this.top = this.right = this.bottom = 0
                };
                return e
            } ();
            d = function() {
                function e() {
                    this.mAniIdArray = [];
                    this.mDurationTimeArray = [];
                    this.mTileTexSetArr = [];
                    this.image = null
                }
                r(e, "");
                return e
            } ();
            g = function() {
                function e() {
                    this.firstgid = 0;
                    this.image = "";
                    this.imageheight = 0;
                    this.imagewidth = 0;
                    this.margin = 0;
                    this.name = 0;
                    this.properties = null;
                    this.spacing = 0;
                    this.tileheight = 0;
                    this.tilewidth = 0;
                    this.titleoffsetX = 0;
                    this.titleoffsetY = 0;
                    this.tileproperties = null
                }
                r(e, "");
                var t = e.prototype;
                t.init = function(e) {
                    this.firstgid = e.firstgid;
                    this.image = e.image;
                    this.imageheight = e.imageheight;
                    this.imagewidth = e.imagewidth;
                    this.margin = e.margin;
                    this.name = e.name;
                    this.properties = e.properties;
                    this.spacing = e.spacing;
                    this.tileheight = e.tileheight;
                    this.tilewidth = e.tilewidth;
                    this.tileproperties = e.tileproperties;
                    var t = e.tileoffset;
                    if (t) {
                        this.titleoffsetX = t.x;
                        this.titleoffsetY = t.y
                    }
                };
                return e
            } ()
        };
        return a
    } ();
    var I = function() {
        function e() {
            this.gid = -1;
            this.texture = null;
            this.offX = 0;
            this.offY = 0;
            this.textureArray = null;
            this.durationTimeArray = null;
            this.animationTotalTime = 0;
            this.isAnimation = false;
            this._spriteNum = 0;
            this._aniDic = null;
            this._frameIndex = 0;
            this._time = 0;
            this._interval = 0;
            this._preFrameTime = 0
        }
        r(e, "laya.map.TileTexSet");
        var t = e.prototype;
        t.addAniSprite = function(e, t) {
            if (this.animationTotalTime == 0) {
                return
            }
            if (this._aniDic == null) {
                this._aniDic = {}
            }
            if (this._spriteNum == 0) {
                v.timer.frameLoop(3, this, this.animate);
                this._preFrameTime = l.now();
                this._frameIndex = 0;
                this._time = 0;
                this._interval = 0
            }
            this._spriteNum++;
            this._aniDic[e] = t;
            if (this.textureArray && this._frameIndex < this.textureArray.length) {
                var i = this.textureArray[this._frameIndex];
                this.drawTexture(t, i)
            }
        };
        t.animate = function() {
            if (this.textureArray && this.textureArray.length > 0 && this.durationTimeArray && this.durationTimeArray.length > 0) {
                var e = l.now();
                this._interval = e - this._preFrameTime;
                this._preFrameTime = e;
                if (this._interval > this.animationTotalTime) {
                    this._interval = this._interval % this.animationTotalTime
                }
                this._time += this._interval;
                var t = this.durationTimeArray[this._frameIndex];
                while (this._time > t) {
                    this._time -= t;
                    this._frameIndex++;
                    if (this._frameIndex >= this.durationTimeArray.length || this._frameIndex >= this.textureArray.length) {
                        this._frameIndex = 0
                    }
                    var i = this.textureArray[this._frameIndex];
                    var n;
                    for (var s in this._aniDic) {
                        n = this._aniDic[s];
                        this.drawTexture(n, i)
                    }
                    t = this.durationTimeArray[this._frameIndex]
                }
            }
        };
        t.drawTexture = function(e, t) {
            e.graphics.clear();
            e.graphics.drawTexture(t.texture, t.offX, t.offY)
        };
        t.removeAniSprite = function(e) {
            if (this._aniDic && this._aniDic[e]) {
                delete this._aniDic[e];
                this._spriteNum--;
                if (this._spriteNum == 0) {
                    v.timer.clear(this, this.animate)
                }
            }
        };
        t.showDebugInfo = function() {
            var e = null;
            if (this._spriteNum > 0) {
                e = "TileTextureSet::gid:" + this.gid.toString() + " 动画数:" + this._spriteNum.toString()
            }
            return e
        };
        t.clearAll = function() {
            this.gid = -1;
            if (this.texture) {
                this.texture.destroy();
                this.texture = null
            }
            this.offX = 0;
            this.offY = 0;
            this.textureArray = null;
            this.durationTimeArray = null;
            this.isAnimation = false;
            this._spriteNum = 0;
            this._aniDic = null;
            this._frameIndex = 0;
            this._preFrameTime = 0;
            this._time = 0;
            this._interval = 0
        };
        return e
    } ();
    var S = function(n) {
        function e() {
            this.relativeX = 0;
            this.relativeY = 0;
            this.isAloneObject = false;
            this.isHaveAnimation = false;
            this.aniSpriteArray = null;
            this.drawImageNum = 0;
            this._map = null;
            e.__super.call(this)
        }
        r(e, "laya.map.GridSprite", n);
        var t = e.prototype;
        t.initData = function(e, t) {
            t === void 0 && (t = false);
            this._map = e;
            this.isAloneObject = t
        };
        t._setDisplay = function(e) {
            if (!e) {
                var t = this._$P.cacheCanvas;
                if (t && t.ctx) {
                    t.ctx.canvas.destroy();
                    t.ctx = null
                }
                var i = this._$P._filterCache;
                if (i) {
                    i.destroy();
                    i.recycle();
                    this._set$P("_filterCache", null)
                }
                this._$P._isHaveGlowFilter && this._set$P("_isHaveGlowFilter", false)
            }
            n.prototype._setDisplay.call(this, e)
        };
        t.addAniSprite = function(e) {
            if (this.aniSpriteArray == null) {
                this.aniSpriteArray = []
            }
            this.aniSpriteArray.push(e)
        };
        t.show = function() {
            if (!this.visible) {
                this.visible = true;
                if (!this.isAloneObject) {
                    var e;
                    e = this.parent;
                    if (e) {
                        e.showGridSprite(this)
                    }
                }
                if (!_.isWebGL && this._map.autoCache) {
                    this.cacheAs = this._map.autoCacheType
                }
                if (this.aniSpriteArray == null) {
                    return
                }
                var t;
                for (var i = 0; i < this.aniSpriteArray.length; i++) {
                    t = this.aniSpriteArray[i];
                    t.show()
                }
            }
        };
        t.hide = function() {
            if (this.visible) {
                this.visible = false;
                if (!this.isAloneObject) {
                    var e;
                    e = this.parent;
                    if (e) {
                        e.hideGridSprite(this)
                    }
                }
                if (!_.isWebGL && this._map.autoCache) {
                    this.cacheAs = "none"
                }
                if (this.aniSpriteArray == null) {
                    return
                }
                var t;
                for (var i = 0; i < this.aniSpriteArray.length; i++) {
                    t = this.aniSpriteArray[i];
                    t.hide()
                }
            }
        };
        t.updatePos = function() {
            if (this.isAloneObject) {
                if (this._map) {
                    this.x = this.relativeX;
                    this.y = this.relativeY
                }
                if (this.x < 0 || this.x > this._map.viewPortWidth || this.y < 0 || this.y > this._map.viewPortHeight) {
                    this.hide()
                } else {
                    this.show()
                }
            } else {
                if (this._map) {
                    this.x = this.relativeX;
                    this.y = this.relativeY
                }
            }
        };
        t.clearAll = function() {
            if (this._map) {
                this._map = null
            }
            this.visible = false;
            var e;
            if (this.aniSpriteArray != null) {
                for (var t = 0; t < this.aniSpriteArray.length; t++) {
                    e = this.aniSpriteArray[t];
                    e.clearAll()
                }
            }
            this.destroy();
            this.relativeX = 0;
            this.relativeY = 0;
            this.isHaveAnimation = false;
            this.aniSpriteArray = null;
            this.drawImageNum = 0
        };
        return e
    } (m);
    var C = function(s) {
        function e() {
            this._map = null;
            this._mapData = null;
            this._tileWidthHalf = 0;
            this._tileHeightHalf = 0;
            this._mapWidthHalf = 0;
            this._mapHeightHalf = 0;
            this._gridSpriteArray = [];
            this._objDic = null;
            this._dataDic = null;
            this._properties = null;
            this.tarLayer = null;
            this.layerName = null;
            this._showGridList = [];
            this._aloneObjs = [];
            e.__super.call(this);
            this._tempMapPos = new d
        }
        r(e, "laya.map.MapLayer", s);
        var t = e.prototype;
        t.init = function(e, t) {
            this._map = t;
            this._mapData = e.data;
            var i = e.height;
            var n = e.width;
            var s = t.tileWidth;
            var a = t.tileHeight;
            this.layerName = e.name;
            this._properties = e.properties;
            this.alpha = e.opacity;
            this._tileWidthHalf = s / 2;
            this._tileHeightHalf = a / 2;
            this._mapWidthHalf = this._map.width / 2 - this._tileWidthHalf;
            this._mapHeightHalf = this._map.height / 2;
            switch (e.type) {
            case "tilelayer":
                break;
            case "objectgroup":
                ;
                var r = 0;
                var o = e.objects;
                if (o.length > 0) {
                    this._objDic = {};
                    this._dataDic = {}
                };
                var l;
                var h = NaN;
                var u = NaN;
                for (var c = 0; c < o.length; c++) {
                    l = o[c];
                    this._dataDic[l.name] = l;
                    if (l.visible == true) {
                        h = l.width;
                        u = l.height;
                        var f = t.getSprite(l.gid, h, u);
                        if (f != null) {
                            switch (this._map.orientation) {
                            case "isometric":
                                this.getScreenPositionByTilePos(l.x / a, l.y / a, d.TEMP);
                                f.pivot(h / 2, u / 2);
                                f.rotation = l.rotation;
                                f.x = f.relativeX = d.TEMP.x + this._map.viewPortX;
                                f.y = f.relativeY = d.TEMP.y + this._map.viewPortY - u / 2;
                                break;
                            case "staggered":
                                f.pivot(h / 2, u / 2);
                                f.rotation = l.rotation;
                                f.x = f.relativeX = l.x + h / 2;
                                f.y = f.relativeY = l.y - u / 2;
                                break;
                            case "orthogonal":
                                f.pivot(h / 2, u / 2);
                                f.rotation = l.rotation;
                                f.x = f.relativeX = l.x + h / 2;
                                f.y = f.relativeY = l.y - u / 2;
                                break;
                            case "hexagonal":
                                f.x = f.relativeX = l.x;
                                f.y = f.relativeY = l.y;
                                break
                            }
                            this.addChild(f);
                            this._gridSpriteArray.push(f);
                            if (f.isAloneObject) {
                                this._showGridList.push(f);
                                this._aloneObjs.push(f)
                            }
                            this._objDic[l.name] = f
                        }
                    }
                }
                break
            }
        };
        t.getObjectByName = function(e) {
            if (this._objDic) {
                return this._objDic[e]
            }
            return null
        };
        t.getObjectDataByName = function(e) {
            if (this._dataDic) {
                return this._dataDic[e]
            }
            return null
        };
        t.getLayerProperties = function(e) {
            if (this._properties) {
                return this._properties[e]
            }
            return null
        };
        t.getTileData = function(e, t) {
            if (t >= 0 && t < this._map.numRowsTile && e >= 0 && e < this._map.numColumnsTile) {
                var i = t * this._map.numColumnsTile + e;
                var n = this._mapData;
                if (n != null && i < n.length) {
                    return n[i]
                }
            }
            return 0
        };
        t.getScreenPositionByTilePos = function(e, t, i) {
            if (i) {
                switch (this._map.orientation) {
                case "isometric":
                    i.x = this._map.width / 2 - (t - e) * this._tileWidthHalf;
                    i.y = (t + e) * this._tileHeightHalf;
                    break;
                case "staggered":
                    e = Math.floor(e);
                    t = Math.floor(t);
                    i.x = e * this._map.tileWidth + (t & 1) * this._tileWidthHalf;
                    i.y = t * this._tileHeightHalf;
                    break;
                case "orthogonal":
                    i.x = e * this._map.tileWidth;
                    i.y = t * this._map.tileHeight;
                    break;
                case "hexagonal":
                    e = Math.floor(e);
                    t = Math.floor(t);
                    var n = this._map.tileHeight * 2 / 3;
                    i.x = (e * this._map.tileWidth + t % 2 * this._tileWidthHalf) % this._map.gridWidth;
                    i.y = t * n % this._map.gridHeight;
                    break
                }
                i.x = (i.x + this._map.viewPortX) * this._map.scale;
                i.y = (i.y + this._map.viewPortY) * this._map.scale
            }
        };
        t.getTileDataByScreenPos = function(e, t) {
            var i = 0;
            if (this.getTilePositionByScreenPos(e, t, this._tempMapPos)) {
                i = this.getTileData(Math.floor(this._tempMapPos.x), Math.floor(this._tempMapPos.y))
            }
            return i
        };
        t.getTilePositionByScreenPos = function(e, t, i) {
            e = e / this._map.scale - this._map.viewPortX;
            t = t / this._map.scale - this._map.viewPortY;
            var n = this._map.tileWidth;
            var s = this._map.tileHeight;
            var a = 0;
            var r = 0;
            switch (this._map.orientation) {
            case "isometric":
                ;
                var o = e - this._map.width / 2;
                var l = t;
                a = -(o / n - l / s);
                r = o / n + l / s;
                if (i) {
                    i.x = r;
                    i.y = a
                }
                return true;
                break;
            case "staggered":
                if (i) {
                    var h = 0,
                    u = 0,
                    c = 0,
                    f = 0;
                    h = Math.floor(e / n) * n + n / 2;
                    u = Math.floor(t / s) * s + s / 2;
                    c = (e - h) * s / 2;
                    f = (t - u) * n / 2;
                    if (Math.abs(c) + Math.abs(f) <= n * s / 4) {
                        r = Math.floor(e / n);
                        a = Math.floor(t / s) * 2
                    } else {
                        e = e - n / 2;
                        r = Math.floor(e / n) + 1;
                        t = t - s / 2;
                        a = Math.floor(t / s) * 2 + 1
                    }
                    i.x = r - (a & 1);
                    i.y = a
                }
                return true;
                break;
            case "orthogonal":
                r = e / n;
                a = t / s;
                if (i) {
                    i.x = r;
                    i.y = a
                }
                return true;
                break;
            case "hexagonal":
                ;
                var d = s * 2 / 3;
                a = t / d;
                r = (e - a % 2 * this._tileWidthHalf) / n;
                if (i) {
                    i.x = r;
                    i.y = a
                }
                break
            }
            return false
        };
        t.getDrawSprite = function(e, t) {
            var i = new S;
            i.relativeX = e * this._map.gridWidth;
            i.relativeY = t * this._map.gridHeight;
            i.initData(this._map);
            i.updatePos();
            this._gridSpriteArray.push(i);
            return i
        };
        t.showGridSprite = function(e) {
            var t = this._showGridList;
            var i = 0,
            n = 0;
            n = t.length;
            var s = -1;
            var a;
            for (i = 0; i < n; i++) {
                a = t[i];
                if (a == e) return;
                if (!a.isAloneObject && !a.visible) {
                    s = i
                }
            }
            if (s >= 0) {
                t[s] = e
            } else {
                t.push(e)
            }
        };
        t.hideGridSprite = function(e) {
            e.visible = false
        };
        t.updateGridPos = function() {
            var e;
            var t;
            t = this._showGridList;
            var i = 0;
            i = t.length;
            for (var n = 0; n < i; n++) {
                e = t[n];
                if ((e._style.visible || e.isAloneObject) && e.drawImageNum > 0) {
                    e.updatePos()
                }
            }
        };
        t.updateAloneObject = function() {
            var e;
            var t;
            t = this._aloneObjs;
            var i = 0;
            i = t.length;
            for (var n = 0; n < i; n++) {
                e = t[n];
                if (e.drawImageNum > 0) {
                    e.updatePos()
                }
            }
        };
        t.render = function(e, t, i) {
            var n = this._childs;
            this._childs = this._showGridList;
            s.prototype.render.call(this, e, t, i);
            this._childs = n
        };
        t.drawTileTexture = function(e, t, i) {
            if (i >= 0 && i < this._map.numRowsTile && t >= 0 && t < this._map.numColumnsTile) {
                var n = i * this._map.numColumnsTile + t;
                var s = this._mapData;
                if (s != null && n < s.length) {
                    if (s[n] != 0) {
                        var a = this._map.getTexture(s[n]);
                        if (a) {
                            var r = 0;
                            var o = 0;
                            var l = a.texture;
                            switch (this._map.orientation) {
                            case "staggered":
                                r = t * this._map.tileWidth % this._map.gridWidth + (i & 1) * this._tileWidthHalf;
                                o = i * this._tileHeightHalf % this._map.gridHeight;
                                break;
                            case "orthogonal":
                                r = t * this._map.tileWidth % this._map.gridWidth;
                                o = i * this._map.tileHeight % this._map.gridHeight;
                                break;
                            case "isometric":
                                r = (this._mapWidthHalf + (t - i) * this._tileWidthHalf) % this._map.gridWidth;
                                o = (t + i) * this._tileHeightHalf % this._map.gridHeight;
                                break;
                            case "hexagonal":
                                ;
                                var h = this._map.tileHeight * 2 / 3;
                                r = (t * this._map.tileWidth + i % 2 * this._tileWidthHalf) % this._map.gridWidth;
                                o = i * h % this._map.gridHeight;
                                break
                            }
                            if (a.isAnimation) {
                                var u = new b;
                                u.x = r;
                                u.y = o;
                                u.setTileTextureSet(n.toString(), a);
                                e.addAniSprite(u);
                                e.addChild(u);
                                e.isHaveAnimation = true
                            } else {
                                e.graphics.drawTexture(a.texture, r + a.offX, o + a.offY)
                            }
                            return true
                        }
                    }
                }
            }
            return false
        };
        t.clearAll = function() {
            this._map = null;
            this._mapData = null;
            this._tileWidthHalf = 0;
            this._tileHeightHalf = 0;
            this._mapWidthHalf = 0;
            this._mapHeightHalf = 0;
            this.layerName = null;
            var e = 0;
            if (this._objDic) {
                for (var t in this._objDic) {
                    delete this._objDic[t]
                }
                this._objDic = null
            }
            if (this._dataDic) {
                for (t in this._dataDic) {
                    delete this._dataDic[t]
                }
                this._dataDic = null
            }
            var i;
            for (e = 0; e < this._gridSpriteArray.length; e++) {
                i = this._gridSpriteArray[e];
                i.clearAll()
            }
            this._properties = null;
            this._tempMapPos = null;
            this.tarLayer = null
        };
        return e
    } (m);
    var b = function(e) {
        function t() {
            this._tileTextureSet = null;
            this._aniName = null;
            t.__super.call(this)
        }
        r(t, "laya.map.TileAniSprite", e);
        var i = t.prototype;
        i.setTileTextureSet = function(e, t) {
            this._aniName = e;
            this._tileTextureSet = t;
            t.addAniSprite(this._aniName, this)
        };
        i.show = function() {
            this._tileTextureSet.addAniSprite(this._aniName, this)
        };
        i.hide = function() {
            this._tileTextureSet.removeAniSprite(this._aniName)
        };
        i.clearAll = function() {
            this._tileTextureSet.removeAniSprite(this._aniName);
            this.destroy();
            this._tileTextureSet = null;
            this._aniName = null
        };
        return t
    } (m);
    v.__init([g])
})(window, document, Laya);
if (typeof define === "function" && define.amd) {
    define("laya.core", ["require", "exports"],
    function(e, t) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: true
        });
        for (var i in Laya) {
            var n = Laya[i];
            n && n.__isclass && (t[i] = n)
        }
    })
} (function(e, r, p) {
    var t = p.un,
    i = p.uns,
    n = p.static,
    a = p.class,
    s = p.getset,
    o = p.__newvec;
    var l = laya.display.Animation,
    f = laya.utils.Browser,
    _ = laya.utils.ClassUtils,
    h = laya.filters.ColorFilter;
    var u = laya.utils.Ease,
    c = laya.events.Event,
    d = laya.events.EventDispatcher,
    g = laya.display.css.Font;
    var m = laya.display.FrameAnimation,
    v = laya.display.Graphics,
    y = laya.utils.Handler;
    var I = laya.net.HttpRequest,
    S = laya.display.Input,
    C = laya.net.Loader,
    b = laya.net.LocalStorage;
    var w = laya.display.Node,
    x = laya.maths.Point,
    R = laya.maths.Rectangle,
    L = laya.renders.Render;
    var T = laya.display.Sprite,
    D = laya.display.Stage,
    k = laya.display.Text,
    G = laya.resource.Texture;
    var M = laya.utils.TimeLine,
    B = laya.utils.Tween,
    A = laya.utils.Utils,
    P = laya.utils.WeakObject;
    p.interface("laya.ui.IItem");
    p.interface("laya.ui.ISelect");
    p.interface("laya.ui.IRender");
    p.interface("laya.ui.IComponent");
    p.interface("laya.ui.IBox", "IComponent");
    var U = function() {
        function e() {
            this.enable = false;
            this.top = NaN;
            this.bottom = NaN;
            this.left = NaN;
            this.right = NaN;
            this.centerX = NaN;
            this.centerY = NaN;
            this.anchorX = NaN;
            this.anchorY = NaN
        }
        a(e, "laya.ui.LayoutStyle");
        n(e, ["EMPTY",
        function() {
            return this.EMPTY = new e
        }]);
        return e
    } ();
    var E = function() {
        function e() {}
        a(e, "laya.ui.Styles");
        e.labelColor = "#000000";
        e.buttonStateNum = 3;
        e.scrollBarMinNum = 15;
        e.scrollBarDelayTime = 500;
        n(e, ["defaultSizeGrid",
        function() {
            return this.defaultSizeGrid = [4, 4, 4, 4, 0]
        },
        "labelPadding",
        function() {
            return this.labelPadding = [2, 2, 2, 2]
        },
        "inputLabelPadding",
        function() {
            return this.inputLabelPadding = [1, 1, 1, 3]
        },
        "buttonLabelColors",
        function() {
            return this.buttonLabelColors = ["#32556b", "#32cc6b", "#ff0000", "#C0C0C0"]
        },
        "comboBoxItemColors",
        function() {
            return this.comboBoxItemColors = ["#5e95b6", "#ffffff", "#000000", "#8fa4b1", "#ffffff"]
        }]);
        return e
    } ();
    var N = function() {
        function s() {}
        a(s, "laya.ui.UIUtils");
        s.fillArray = function(e, t, i) {
            var n = e.concat();
            if (t) {
                var s = t.split(",");
                for (var a = 0,
                r = Math.min(n.length, s.length); a < r; a++) {
                    var o = s[a];
                    n[a] = o == "true" ? true: o == "false" ? false: o;
                    if (i != null) n[a] = i(o)
                }
            }
            return n
        };
        s.toColor = function(e) {
            return A.toHexColor(e)
        };
        s.gray = function(e, t) {
            t === void 0 && (t = true);
            if (t) {
                s.addFilter(e, s.grayFilter)
            } else {
                s.clearFilter(e, h)
            }
        };
        s.addFilter = function(e, t) {
            var i = e.filters || [];
            i.push(t);
            e.filters = i
        };
        s.clearFilter = function(e, t) {
            if (e) {
                var i = e.filters;
                if (i != null && i.length > 0) {
                    for (var n = i.length - 1; n > -1; n--) {
                        var s = i[n];
                        if (p.__typeof(s, t)) i.splice(n, 1)
                    }
                    e.filters = i
                }
            }
        };
        s._getReplaceStr = function(e) {
            return s.escapeSequence[e]
        };
        s.adptString = function(e) {
            return e.replace(/\\(\w)/g, s._getReplaceStr)
        };
        s.getBindFun = function(e) {
            var t = s._funMap.get(e);
            if (t == null) {
                var i = '"' + e + '"';
                i = i.replace(/^"\${|}"$/g, "").replace(/\${/g, '"+').replace(/}/g, '+"');
                var n = "(function(data){if(data==null)return;with(data){try{\nreturn " + i + "\n}catch(e){}}})";
                t = p._runScript(n);
                s._funMap.set(e, t)
            }
            return t
        };
        n(s, ["grayFilter",
        function() {
            return this.grayFilter = new h([.3086, .6094, .082, 0, 0, .3086, .6094, .082, 0, 0, .3086, .6094, .082, 0, 0, 0, 0, 0, 1, 0])
        },
        "escapeSequence",
        function() {
            return this.escapeSequence = {
                "\\n": "\n",
                "\\t": "\t"
            }
        },
        "_funMap",
        function() {
            return this._funMap = new P
        }]);
        return s
    } ();
    var F = function() {
        function e() {}
        a(e, "UIConfig");
        e.touchScrollEnable = true;
        e.mouseWheelEnable = true;
        e.showButtons = true;
        e.popupBgColor = "#000000";
        e.popupBgAlpha = .5;
        e.closeDialogOnSide = true;
        return e
    } ();
    var O = function(t) {
        function g() {
            this.autoCacheCmd = true;
            this._width = 0;
            this._height = 0;
            this._source = null;
            this._sizeGrid = null;
            this._isChanged = false;
            this._offset = null;
            g.__super.call(this)
        }
        a(g, "laya.ui.AutoBitmap", t);
        var e = g.prototype;
        e.destroy = function() {
            t.prototype.destroy.call(this);
            this._source = null;
            this._sizeGrid = null;
            this._offset = null
        };
        e._setChanged = function() {
            if (!this._isChanged) {
                this._isChanged = true;
                p.timer.callLater(this, this.changeSource)
            }
        };
        e.changeSource = function() {
            this._isChanged = false;
            var e = this._source;
            if (!e || !e.bitmap) return;
            var t = this.width;
            var i = this.height;
            var n = this._sizeGrid;
            var s = e.sourceWidth;
            var a = e.sourceHeight;
            if (!n || s === t && a === i) {
                this.clear();
                this.drawTexture(e, this._offset ? this._offset[0] : 0, this._offset ? this._offset[1] : 0, t, i)
            } else {
                e.$_GID || (e.$_GID = A.getGID());
                var r = e.$_GID + "." + t + "." + i + "." + n.join(".");
                if (A.isOKCmdList(P.I.get(r))) {
                    this.cmds = P.I.get(r);
                    return
                }
                this.clear();
                var o = n[0];
                var l = n[1];
                var h = n[2];
                var u = n[3];
                var c = n[4];
                var f = false;
                if (t == s) {
                    u = l = 0
                }
                if (i == a) {
                    o = h = 0
                }
                if (u + l > t) {
                    var d = t;
                    f = true;
                    t = u + l;
                    this.save();
                    this.clipRect(0, 0, d, i)
                }
                u && o && this.drawTexture(g.getTexture(e, 0, 0, u, o), 0, 0, u, o);
                l && o && this.drawTexture(g.getTexture(e, s - l, 0, l, o), t - l, 0, l, o);
                u && h && this.drawTexture(g.getTexture(e, 0, a - h, u, h), 0, i - h, u, h);
                l && h && this.drawTexture(g.getTexture(e, s - l, a - h, l, h), t - l, i - h, l, h);
                o && this.drawBitmap(c, g.getTexture(e, u, 0, s - u - l, o), u, 0, t - u - l, o);
                h && this.drawBitmap(c, g.getTexture(e, u, a - h, s - u - l, h), u, i - h, t - u - l, h);
                u && this.drawBitmap(c, g.getTexture(e, 0, o, u, a - o - h), 0, o, u, i - o - h);
                l && this.drawBitmap(c, g.getTexture(e, s - l, o, l, a - o - h), t - l, o, l, i - o - h);
                this.drawBitmap(c, g.getTexture(e, u, o, s - u - l, a - o - h), u, o, t - u - l, i - o - h);
                if (f) this.restore();
                if (this.autoCacheCmd && !L.isConchApp) P.I.set(r, this.cmds)
            }
            this._repaint()
        };
        e.drawBitmap = function(e, t, i, n, s, a) {
            s === void 0 && (s = 0);
            a === void 0 && (a = 0);
            if (s < .1 || a < .1) return;
            if (e && (t.width != s || t.height != a)) this.fillTexture(t, i, n, s, a);
            else this.drawTexture(t, i, n, s, a)
        };
        e.clear = function(e) {
            e === void 0 && (e = true);
            t.prototype.clear.call(this, false)
        };
        s(0, e, "sizeGrid",
        function() {
            return this._sizeGrid
        },
        function(e) {
            this._sizeGrid = e;
            this._setChanged()
        });
        s(0, e, "width",
        function() {
            if (this._width) return this._width;
            if (this._source) return this._source.sourceWidth;
            return 0
        },
        function(e) {
            if (this._width != e) {
                this._width = e;
                this._setChanged()
            }
        });
        s(0, e, "height",
        function() {
            if (this._height) return this._height;
            if (this._source) return this._source.sourceHeight;
            return 0
        },
        function(e) {
            if (this._height != e) {
                this._height = e;
                this._setChanged()
            }
        });
        s(0, e, "source",
        function() {
            return this._source
        },
        function(e) {
            if (e) {
                this._source = e;
                this._setChanged()
            } else {
                this._source = null;
                this.clear()
            }
        });
        g.getTexture = function(e, t, i, n, s) {
            if (n <= 0) n = 1;
            if (s <= 0) s = 1;
            e.$_GID || (e.$_GID = A.getGID());
            var a = e.$_GID + "." + t + "." + i + "." + n + "." + s;
            var r = P.I.get(a);
            if (!r || !r.source) {
                r = G.createFromTexture(e, t, i, n, s);
                P.I.set(a, r)
            }
            return r
        };
        return g
    } (v);
    var V = function(e) {
        function t() {
            t.__super.call(this)
        }
        a(t, "laya.ui.UIEvent", e);
        t.SHOW_TIP = "showtip";
        t.HIDE_TIP = "hidetip";
        return t
    } (c);
    var q = function(t) {
        function e() {
            this._comXml = null;
            this._dataSource = null;
            this._toolTip = null;
            this._tag = null;
            this._disabled = false;
            this._gray = false;
            this.layoutEnabled = true;
            e.__super.call(this);
            this._layout = U.EMPTY;
            this.preinitialize();
            this.createChildren();
            this.initialize()
        }
        a(e, "laya.ui.Component", t);
        var i = e.prototype;
        p.imps(i, {
            "laya.ui.IComponent": true
        });
        i.destroy = function(e) {
            e === void 0 && (e = true);
            t.prototype.destroy.call(this, e);
            this._dataSource = this._layout = null;
            this._tag = null;
            this._toolTip = null
        };
        i.preinitialize = function() {};
        i.createChildren = function() {};
        i.initialize = function() {};
        i.callLater = function(e, t) {
            p.timer.callLater(this, e, t)
        };
        i.runCallLater = function(e) {
            p.timer.runCallLater(this, e)
        };
        i.commitMeasure = function() {};
        i.changeSize = function() {
            this.event("resize");
            if (this._layout.enable) {
                this.resetLayoutX();
                this.resetLayoutY()
            }
        };
        i.getLayout = function() {
            this._layout === U.EMPTY && (this._layout = new U);
            return this._layout
        };
        i._setLayoutEnabled = function(e) {
            if (this._layout && this._layout.enable != e) {
                this._layout.enable = e;
                this.on("added", this, this.onAdded);
                this.on("removed", this, this.onRemoved);
                if (this.parent) {
                    this.onAdded()
                }
            }
        };
        i.onRemoved = function() {
            this.parent.off("resize", this, this.onCompResize)
        };
        i.onAdded = function() {
            this.parent.on("resize", this, this.onCompResize);
            this.resetLayoutX();
            this.resetLayoutY()
        };
        i.onCompResize = function() {
            if (this._layout && this._layout.enable) {
                this.resetLayoutX();
                this.resetLayoutY()
            }
        };
        i.resetLayoutX = function() {
            var e = this._layout;
            if (!isNaN(e.anchorX)) this.pivotX = e.anchorX * this.width;
            if (!this.layoutEnabled) return;
            var t = this.parent;
            if (t) {
                if (!isNaN(e.centerX)) {
                    this.x = Math.round((t.width - this.displayWidth) * .5 + e.centerX + this.pivotX * this.scaleX)
                } else if (!isNaN(e.left)) {
                    this.x = Math.round(e.left + this.pivotX * this.scaleX);
                    if (!isNaN(e.right)) {
                        this.width = (t._width - e.left - e.right) / (this.scaleX || .01)
                    }
                } else if (!isNaN(e.right)) {
                    this.x = Math.round(t.width - this.displayWidth - e.right + this.pivotX * this.scaleX)
                }
            }
        };
        i.resetLayoutY = function() {
            var e = this._layout;
            if (!isNaN(e.anchorY)) this.pivotY = e.anchorY * this.height;
            if (!this.layoutEnabled) return;
            var t = this.parent;
            if (t) {
                if (!isNaN(e.centerY)) {
                    this.y = Math.round((t.height - this.displayHeight) * .5 + e.centerY + this.pivotY * this.scaleY)
                } else if (!isNaN(e.top)) {
                    this.y = Math.round(e.top + this.pivotY * this.scaleY);
                    if (!isNaN(e.bottom)) {
                        this.height = (t._height - e.top - e.bottom) / (this.scaleY || .01)
                    }
                } else if (!isNaN(e.bottom)) {
                    this.y = Math.round(t.height - this.displayHeight - e.bottom + this.pivotY * this.scaleY)
                }
            }
        };
        i.onMouseOver = function(e) {
            p.stage.event("showtip", this._toolTip)
        };
        i.onMouseOut = function(e) {
            p.stage.event("hidetip", this._toolTip)
        };
        i._childChanged = function(e) {
            this.callLater(this.changeSize);
            t.prototype._childChanged.call(this, e)
        };
        s(0, i, "displayWidth",
        function() {
            return this.width * this.scaleX
        });
        s(0, i, "width",
        function() {
            if (this._width) return this._width;
            return this.measureWidth
        },
        function(e) {
            if (this._width != e) {
                this._width = e;
                this.conchModel && this.conchModel.size(this._width, this._height);
                this.callLater(this.changeSize);
                if (this._layout.enable && (!isNaN(this._layout.centerX) || !isNaN(this._layout.right) || !isNaN(this._layout.anchorX))) this.resetLayoutX()
            }
        });
        s(0, i, "measureWidth",
        function() {
            var e = 0;
            this.commitMeasure();
            for (var t = this.numChildren - 1; t > -1; t--) {
                var i = this.getChildAt(t);
                if (i.visible) {
                    e = Math.max(i.x + i.width * i.scaleX, e)
                }
            }
            return e
        });
        s(0, i, "displayHeight",
        function() {
            return this.height * this.scaleY
        });
        s(0, i, "height",
        function() {
            if (this._height) return this._height;
            return this.measureHeight
        },
        function(e) {
            if (this._height != e) {
                this._height = e;
                this.conchModel && this.conchModel.size(this._width, this._height);
                this.callLater(this.changeSize);
                if (this._layout.enable && (!isNaN(this._layout.centerY) || !isNaN(this._layout.bottom) || !isNaN(this._layout.anchorY))) this.resetLayoutY()
            }
        });
        s(0, i, "dataSource",
        function() {
            return this._dataSource
        },
        function(e) {
            this._dataSource = e;
            for (var t in this._dataSource) {
                if (this.hasOwnProperty(t) && !(typeof this[t] == "function")) {
                    this[t] = this._dataSource[t]
                }
            }
        });
        s(0, i, "scaleY", t.prototype._$get_scaleY,
        function(e) {
            if (p.superGet(T, this, "scaleY") != e) {
                p.superSet(T, this, "scaleY", e);
                this.callLater(this.changeSize);
                this._layout.enable && this.resetLayoutY()
            }
        });
        s(0, i, "measureHeight",
        function() {
            var e = 0;
            this.commitMeasure();
            for (var t = this.numChildren - 1; t > -1; t--) {
                var i = this.getChildAt(t);
                if (i.visible) {
                    e = Math.max(i.y + i.height * i.scaleY, e)
                }
            }
            return e
        });
        s(0, i, "scaleX", t.prototype._$get_scaleX,
        function(e) {
            if (p.superGet(T, this, "scaleX") != e) {
                p.superSet(T, this, "scaleX", e);
                this.callLater(this.changeSize);
                this._layout.enable && this.resetLayoutX()
            }
        });
        s(0, i, "top",
        function() {
            return this._layout.top
        },
        function(e) {
            if (e != this._layout.top) {
                this.getLayout().top = e;
                this._setLayoutEnabled(true)
            }
            this.resetLayoutY()
        });
        s(0, i, "bottom",
        function() {
            return this._layout.bottom
        },
        function(e) {
            if (e != this._layout.bottom) {
                this.getLayout().bottom = e;
                this._setLayoutEnabled(true)
            }
            this.resetLayoutY()
        });
        s(0, i, "left",
        function() {
            return this._layout.left
        },
        function(e) {
            if (e != this._layout.left) {
                this.getLayout().left = e;
                this._setLayoutEnabled(true)
            }
            this.resetLayoutX()
        });
        s(0, i, "right",
        function() {
            return this._layout.right
        },
        function(e) {
            if (e != this._layout.right) {
                this.getLayout().right = e;
                this._setLayoutEnabled(true)
            }
            this.resetLayoutX()
        });
        s(0, i, "centerX",
        function() {
            return this._layout.centerX
        },
        function(e) {
            if (e != this._layout.centerX) {
                this.getLayout().centerX = e;
                this._setLayoutEnabled(true)
            }
            this.resetLayoutX()
        });
        s(0, i, "centerY",
        function() {
            return this._layout.centerY
        },
        function(e) {
            if (e != this._layout.centerY) {
                this.getLayout().centerY = e;
                this._setLayoutEnabled(true)
            }
            this.resetLayoutY()
        });
        s(0, i, "anchorX",
        function() {
            return this._layout.anchorX
        },
        function(e) {
            if (e != this._layout.anchorX) {
                this.getLayout().anchorX = e;
                this._setLayoutEnabled(true)
            }
            this.resetLayoutX()
        });
        s(0, i, "anchorY",
        function() {
            return this._layout.anchorY
        },
        function(e) {
            if (e != this._layout.anchorY) {
                this.getLayout().anchorY = e;
                this._setLayoutEnabled(true)
            }
            this.resetLayoutY()
        });
        s(0, i, "tag",
        function() {
            return this._tag
        },
        function(e) {
            this._tag = e
        });
        s(0, i, "toolTip",
        function() {
            return this._toolTip
        },
        function(e) {
            if (this._toolTip != e) {
                this._toolTip = e;
                if (e != null) {
                    this.on("mouseover", this, this.onMouseOver);
                    this.on("mouseout", this, this.onMouseOut)
                } else {
                    this.off("mouseover", this, this.onMouseOver);
                    this.off("mouseout", this, this.onMouseOut)
                }
            }
        });
        s(0, i, "comXml",
        function() {
            return this._comXml
        },
        function(e) {
            this._comXml = e
        });
        s(0, i, "gray",
        function() {
            return this._gray
        },
        function(e) {
            if (e !== this._gray) {
                this._gray = e;
                N.gray(this, e)
            }
        });
        s(0, i, "disabled",
        function() {
            return this._disabled
        },
        function(e) {
            if (e !== this._disabled) {
                this.gray = this._disabled = e;
                this.mouseEnabled = !e
            }
        });
        return e
    } (T);
    var z = function(e) {
        function t() {
            this.lockLayer = null;
            this.popupEffect = function(e) {
                e.scale(1, 1);
                B.from(e, {
                    x: p.stage.width / 2,
                    y: p.stage.height / 2,
                    scaleX: 0,
                    scaleY: 0
                },
                300, u.backOut, y.create(this, this.doOpen, [e]))
            };
            this.closeEffect = function(e, t) {
                B.to(e, {
                    x: p.stage.width / 2,
                    y: p.stage.height / 2,
                    scaleX: 0,
                    scaleY: 0
                },
                300, u.strongOut, y.create(this, this.doClose, [e, t]))
            };
            t.__super.call(this);
            this.maskLayer = new T;
            this.popupEffectHandler = new y(this, this.popupEffect);
            this.closeEffectHandler = new y(this, this.closeEffect);
            this.mouseEnabled = this.maskLayer.mouseEnabled = true;
            this.zOrder = 1e3;
            p.stage.addChild(this);
            p.stage.on("resize", this, this._onResize);
            if (F.closeDialogOnSide) this.maskLayer.on("click", this, this._closeOnSide);
            this._onResize(null)
        }
        a(t, "laya.ui.DialogManager", e);
        var i = t.prototype;
        i._closeOnSide = function() {
            var e = this.getChildAt(this.numChildren - 1);
            if (e instanceof laya.ui.Dialog) e.close("side")
        };
        i.setLockView = function(e) {
            if (!this.lockLayer) {
                this.lockLayer = new H;
                this.lockLayer.mouseEnabled = true;
                this.lockLayer.size(p.stage.width, p.stage.height)
            }
            this.lockLayer.removeChildren();
            if (e) {
                e.centerX = e.centerY = 0;
                this.lockLayer.addChild(e)
            }
        };
        i._onResize = function(e) {
            var t = this.maskLayer.width = p.stage.width;
            var i = this.maskLayer.height = p.stage.height;
            if (this.lockLayer) this.lockLayer.size(t, i);
            this.maskLayer.graphics.clear();
            this.maskLayer.graphics.drawRect(0, 0, t, i, F.popupBgColor);
            this.maskLayer.alpha = F.popupBgAlpha;
            for (var n = this.numChildren - 1; n > -1; n--) {
                var s = this.getChildAt(n);
                if (s.popupCenter) this._centerDialog(s)
            }
        };
        i._centerDialog = function(e) {
            e.x = Math.round((p.stage.width - e.width >> 1) + e.pivotX);
            e.y = Math.round((p.stage.height - e.height >> 1) + e.pivotY)
        };
        i.open = function(e, t, i) {
            t === void 0 && (t = false);
            i === void 0 && (i = false);
            if (t) this._closeAll();
            if (e.popupCenter) this._centerDialog(e);
            this.addChild(e);
            if (e.isModal || this._$P["hasZorder"]) this.timer.callLater(this, this._checkMask);
            if (i && e.popupEffect != null) e.popupEffect.runWith(e);
            else this.doOpen(e);
            this.event("open")
        };
        i.doOpen = function(e) {
            e.onOpened()
        };
        i.lock = function(e) {
            if (this.lockLayer) {
                if (e) this.addChild(this.lockLayer);
                else this.lockLayer.removeSelf()
            }
        };
        i.close = function(e, t, i) {
            i === void 0 && (i = false);
            if (i && e.closeEffect != null) e.closeEffect.runWith([e, t]);
            else this.doClose(e, t);
            this.event("close")
        };
        i.doClose = function(e, t) {
            e.removeSelf();
            e.isModal && this._checkMask();
            e.closeHandler && e.closeHandler.runWith(t);
            e.onClosed(t)
        };
        i.closeAll = function() {
            this._closeAll();
            this.event("close")
        };
        i._closeAll = function() {
            for (var e = this.numChildren - 1; e > -1; e--) {
                var t = this.getChildAt(e);
                if (t && t.close != null) {
                    this.doClose(t)
                }
            }
        };
        i.getDialogsByGroup = function(e) {
            var t = [];
            for (var i = this.numChildren - 1; i > -1; i--) {
                var n = this.getChildAt(i);
                if (n && n.group === e) {
                    t.push(n)
                }
            }
            return t
        };
        i.closeByGroup = function(e) {
            var t = [];
            for (var i = this.numChildren - 1; i > -1; i--) {
                var n = this.getChildAt(i);
                if (n && n.group === e) {
                    n.close();
                    t.push(n)
                }
            }
            return t
        };
        i._checkMask = function() {
            this.maskLayer.removeSelf();
            for (var e = this.numChildren - 1; e > -1; e--) {
                var t = this.getChildAt(e);
                if (t && t.isModal) {
                    this.addChildAt(this.maskLayer, e);
                    return
                }
            }
        };
        return t
    } (T);
    var W = function(t) {
        function i(e) {
            this._bitmap = null;
            this._skin = null;
            this._group = null;
            i.__super.call(this);
            this.skin = e
        }
        a(i, "laya.ui.Image", t);
        var e = i.prototype;
        e.destroy = function(e) {
            e === void 0 && (e = true);
            t.prototype.destroy.call(this, true);
            this._bitmap && this._bitmap.destroy();
            this._bitmap = null
        };
        e.dispose = function() {
            this.destroy(true);
            p.loader.clearRes(this._skin)
        };
        e.createChildren = function() {
            this.graphics = this._bitmap = new O;
            this._bitmap.autoCacheCmd = false
        };
        e.setSource = function(e, t) {
            if (e === this._skin && t) {
                this.source = t;
                this.onCompResize()
            }
        };
        s(0, e, "source",
        function() {
            return this._bitmap.source
        },
        function(e) {
            if (!this._bitmap) return;
            this._bitmap.source = e;
            this.event("loaded");
            this.repaint()
        });
        s(0, e, "dataSource", t.prototype._$get_dataSource,
        function(e) {
            this._dataSource = e;
            if (typeof e == "string") this.skin = e;
            else p.superSet(q, this, "dataSource", e)
        });
        s(0, e, "measureHeight",
        function() {
            return this._bitmap.height
        });
        s(0, e, "skin",
        function() {
            return this._skin
        },
        function(e) {
            if (this._skin != e) {
                this._skin = e;
                if (e) {
                    var t = C.getRes(e);
                    if (t) {
                        this.source = t;
                        this.onCompResize()
                    } else p.loader.load(this._skin, y.create(this, this.setSource, [this._skin]), null, "image", 1, true, this._group)
                } else {
                    this.source = null
                }
            }
        });
        s(0, e, "group",
        function() {
            return this._group
        },
        function(e) {
            if (e && this._skin) C.setGroup(this._skin, e);
            this._group = e
        });
        s(0, e, "sizeGrid",
        function() {
            if (this._bitmap.sizeGrid) return this._bitmap.sizeGrid.join(",");
            return null
        },
        function(e) {
            this._bitmap.sizeGrid = N.fillArray(E.defaultSizeGrid, e, Number)
        });
        s(0, e, "measureWidth",
        function() {
            return this._bitmap.width
        });
        s(0, e, "width", t.prototype._$get_width,
        function(e) {
            p.superSet(q, this, "width", e);
            this._bitmap.width = e == 0 ? 1e-7: e
        });
        s(0, e, "height", t.prototype._$get_height,
        function(e) {
            p.superSet(q, this, "height", e);
            this._bitmap.height = e == 0 ? 1e-7: e
        });
        return i
    } (q);
    var H = function(e) {
        function t() {
            t.__super.call(this)
        }
        a(t, "laya.ui.Box", e);
        var i = t.prototype;
        p.imps(i, {
            "laya.ui.IBox": true
        });
        s(0, i, "dataSource", e.prototype._$get_dataSource,
        function(e) {
            this._dataSource = e;
            for (var t in e) {
                var i = this.getChildByName(t);
                if (i) i.dataSource = e[t];
                else if (this.hasOwnProperty(t) && !(typeof this[t] == "function")) this[t] = e[t]
            }
        });
        return t
    } (q);
    var Y = function(t) {
        function i(e, t) {
            this.toggle = false;
            this._bitmap = null;
            this._text = null;
            this._strokeColors = null;
            this._state = 0;
            this._selected = false;
            this._skin = null;
            this._autoSize = true;
            this._sources = null;
            this._clickHandler = null;
            this._stateChanged = false;
            i.__super.call(this);
            this._labelColors = E.buttonLabelColors;
            this._stateNum = E.buttonStateNum;
            t === void 0 && (t = "");
            this.skin = e;
            this.label = t
        }
        a(i, "laya.ui.Button", t);
        var e = i.prototype;
        p.imps(e, {
            "laya.ui.ISelect": true
        });
        e.destroy = function(e) {
            e === void 0 && (e = true);
            t.prototype.destroy.call(this, e);
            this._bitmap && this._bitmap.destroy();
            this._text && this._text.destroy(e);
            this._bitmap = null;
            this._text = null;
            this._clickHandler = null;
            this._labelColors = this._sources = this._strokeColors = null
        };
        e.createChildren = function() {
            this.graphics = this._bitmap = new O
        };
        e.createText = function() {
            if (!this._text) {
                this._text = new k;
                this._text.overflow = k.HIDDEN;
                this._text.align = "center";
                this._text.valign = "middle";
                this._text.width = this._width;
                this._text.height = this._height
            }
        };
        e.initialize = function() {
            if (this._mouseEnableState !== 1) {
                this.mouseEnabled = true;
                this._setBit(2, true)
            }
            this._createListener("mouseover", this, this.onMouse, null, false, false);
            this._createListener("mouseout", this, this.onMouse, null, false, false);
            this._createListener("mousedown", this, this.onMouse, null, false, false);
            this._createListener("mouseup", this, this.onMouse, null, false, false);
            this._createListener("click", this, this.onMouse, null, false, false)
        };
        e.onMouse = function(e) {
            if (this.toggle === false && this._selected) return;
            if (e.type === "click") {
                this.toggle && (this.selected = !this._selected);
                this._clickHandler && this._clickHandler.run();
                return
            } ! this._selected && (this.state = i.stateMap[e.type])
        };
        e.changeClips = function() {
            var e = C.getRes(this._skin);
            if (!e) {
                console.log("lose skin", this._skin);
                return
            }
            var t = e.sourceWidth;
            var i = e.sourceHeight / this._stateNum;
            e.$_GID || (e.$_GID = A.getGID());
            var n = e.$_GID + "-" + this._stateNum;
            var s = P.I.get(n);
            if (!A.isOkTextureList(s)) {
                s = null
            }
            if (s) this._sources = s;
            else {
                this._sources = [];
                if (this._stateNum === 1) {
                    this._sources.push(e)
                } else {
                    for (var a = 0; a < this._stateNum; a++) {
                        this._sources.push(G.createFromTexture(e, 0, i * a, t, i))
                    }
                }
                P.I.set(n, this._sources)
            }
            if (this._autoSize) {
                this._bitmap.width = this._width || t;
                this._bitmap.height = this._height || i;
                if (this._text) {
                    this._text.width = this._bitmap.width;
                    this._text.height = this._bitmap.height
                }
            } else {
                this._text && (this._text.x = t)
            }
        };
        e.changeState = function() {
            this._stateChanged = false;
            this.runCallLater(this.changeClips);
            var e = this._state < this._stateNum ? this._state: this._stateNum - 1;
            this._sources && (this._bitmap.source = this._sources[e]);
            if (this.label) {
                this._text.color = this._labelColors[e];
                if (this._strokeColors) this._text.strokeColor = this._strokeColors[e]
            }
        };
        e._setStateChanged = function() {
            if (!this._stateChanged) {
                this._stateChanged = true;
                this.callLater(this.changeState)
            }
        };
        s(0, e, "labelStrokeColor",
        function() {
            this.createText();
            return this._text.strokeColor
        },
        function(e) {
            this.createText();
            this._text.strokeColor = e
        });
        s(0, e, "measureHeight",
        function() {
            this.runCallLater(this.changeClips);
            return this._text ? Math.max(this._bitmap.height, this._text.height) : this._bitmap.height
        });
        s(0, e, "skin",
        function() {
            return this._skin
        },
        function(e) {
            if (this._skin != e) {
                this._skin = e;
                this.callLater(this.changeClips);
                this._setStateChanged()
            }
        });
        s(0, e, "state",
        function() {
            return this._state
        },
        function(e) {
            if (this._state != e) {
                this._state = e;
                this._setStateChanged()
            }
        });
        s(0, e, "text",
        function() {
            this.createText();
            return this._text
        });
        s(0, e, "stateNum",
        function() {
            return this._stateNum
        },
        function(e) {
            if (typeof e == "string") {
                e = parseInt(e)
            }
            if (this._stateNum != e) {
                this._stateNum = e < 1 ? 1 : e > 3 ? 3 : e;
                this.callLater(this.changeClips)
            }
        });
        s(0, e, "strokeColors",
        function() {
            return this._strokeColors ? this._strokeColors.join(",") : ""
        },
        function(e) {
            this._strokeColors = N.fillArray(E.buttonLabelColors, e, String);
            this._setStateChanged()
        });
        s(0, e, "labelColors",
        function() {
            return this._labelColors.join(",")
        },
        function(e) {
            this._labelColors = N.fillArray(E.buttonLabelColors, e, String);
            this._setStateChanged()
        });
        s(0, e, "measureWidth",
        function() {
            this.runCallLater(this.changeClips);
            if (this._autoSize) return this._bitmap.width;
            this.runCallLater(this.changeState);
            return this._bitmap.width + (this._text ? this._text.width: 0)
        });
        s(0, e, "label",
        function() {
            return this._text ? this._text.text: null
        },
        function(e) {
            if (!this._text && !e) return;
            this.createText();
            if (this._text.text != e) {
                e && !this._text.parent && this.addChild(this._text);
                this._text.text = (e + "").replace(/\\n/g, "\n");
                this._setStateChanged()
            }
        });
        s(0, e, "selected",
        function() {
            return this._selected
        },
        function(e) {
            if (this._selected != e) {
                this._selected = e;
                this.state = this._selected ? 2 : 0;
                this.event("change")
            }
        });
        s(0, e, "labelPadding",
        function() {
            this.createText();
            return this._text.padding.join(",")
        },
        function(e) {
            this.createText();
            this._text.padding = N.fillArray(E.labelPadding, e, Number)
        });
        s(0, e, "labelSize",
        function() {
            this.createText();
            return this._text.fontSize
        },
        function(e) {
            this.createText();
            this._text.fontSize = e
        });
        s(0, e, "labelStroke",
        function() {
            this.createText();
            return this._text.stroke
        },
        function(e) {
            this.createText();
            this._text.stroke = e
        });
        s(0, e, "labelBold",
        function() {
            this.createText();
            return this._text.bold
        },
        function(e) {
            this.createText();
            this._text.bold = e
        });
        s(0, e, "labelFont",
        function() {
            this.createText();
            return this._text.font
        },
        function(e) {
            this.createText();
            this._text.font = e
        });
        s(0, e, "labelAlign",
        function() {
            this.createText();
            return this._text.align
        },
        function(e) {
            this.createText();
            this._text.align = e
        });
        s(0, e, "clickHandler",
        function() {
            return this._clickHandler
        },
        function(e) {
            this._clickHandler = e
        });
        s(0, e, "sizeGrid",
        function() {
            if (this._bitmap.sizeGrid) return this._bitmap.sizeGrid.join(",");
            return null
        },
        function(e) {
            this._bitmap.sizeGrid = N.fillArray(E.defaultSizeGrid, e, Number)
        });
        s(0, e, "width", t.prototype._$get_width,
        function(e) {
            p.superSet(q, this, "width", e);
            if (this._autoSize) {
                this._bitmap.width = e;
                this._text && (this._text.width = e)
            }
        });
        s(0, e, "height", t.prototype._$get_height,
        function(e) {
            p.superSet(q, this, "height", e);
            if (this._autoSize) {
                this._bitmap.height = e;
                this._text && (this._text.height = e)
            }
        });
        s(0, e, "dataSource", t.prototype._$get_dataSource,
        function(e) {
            this._dataSource = e;
            if (typeof e == "number" || typeof e == "string") this.label = e + "";
            else p.superSet(q, this, "dataSource", e)
        });
        s(0, e, "iconOffset",
        function() {
            return this._bitmap._offset ? this._bitmap._offset.join(",") : null
        },
        function(e) {
            if (e) this._bitmap._offset = N.fillArray([1, 1], e, Number);
            else this._bitmap._offset = []
        });
        n(i, ["stateMap",
        function() {
            return this.stateMap = {
                mouseup: 0,
                mouseover: 1,
                mousedown: 2,
                mouseout: 0
            }
        }]);
        return i
    } (q);
    var j = function(t) {
        function n(e, t, i) {
            this._sources = null;
            this._bitmap = null;
            this._skin = null;
            this._clipX = 1;
            this._clipY = 1;
            this._clipWidth = 0;
            this._clipHeight = 0;
            this._autoPlay = false;
            this._interval = 50;
            this._complete = null;
            this._isPlaying = false;
            this._index = 0;
            this._clipChanged = false;
            this._group = null;
            this._toIndex = -1;
            n.__super.call(this);
            t === void 0 && (t = 1);
            i === void 0 && (i = 1);
            this._clipX = t;
            this._clipY = i;
            this.skin = e
        }
        a(n, "laya.ui.Clip", t);
        var e = n.prototype;
        e.destroy = function(e) {
            e === void 0 && (e = true);
            t.prototype.destroy.call(this, true);
            this._bitmap && this._bitmap.destroy();
            this._bitmap = null;
            this._sources = null
        };
        e.dispose = function() {
            this.destroy(true);
            p.loader.clearRes(this._skin)
        };
        e.createChildren = function() {
            this.graphics = this._bitmap = new O
        };
        e._onDisplay = function(e) {
            if (this._isPlaying) {
                if (this._displayedInStage) this.play();
                else this.stop()
            } else if (this._autoPlay) {
                this.play()
            }
        };
        e.changeClip = function() {
            this._clipChanged = false;
            if (!this._skin) return;
            var e = C.getRes(this._skin);
            if (e) {
                this.loadComplete(this._skin, e)
            } else {
                p.loader.load(this._skin, y.create(this, this.loadComplete, [this._skin]))
            }
        };
        e.loadComplete = function(e, t) {
            if (e === this._skin && t) {
                var i = this._clipWidth || Math.ceil(t.sourceWidth / this._clipX);
                var n = this._clipHeight || Math.ceil(t.sourceHeight / this._clipY);
                var s = this._skin + i + n;
                var a = P.I.get(s);
                if (!A.isOkTextureList(a)) {
                    a = null
                }
                if (a) this._sources = a;
                else {
                    this._sources = [];
                    for (var r = 0; r < this._clipY; r++) {
                        for (var o = 0; o < this._clipX; o++) {
                            this._sources.push(G.createFromTexture(t, i * o, n * r, i, n))
                        }
                    }
                    P.I.set(s, this._sources)
                }
                this.index = this._index;
                this.event("loaded");
                this.onCompResize()
            }
        };
        e.play = function(e, t) {
            e === void 0 && (e = 0);
            t === void 0 && (t = -1);
            this._isPlaying = true;
            this.index = e;
            this._toIndex = t;
            this._index++;
            p.timer.loop(this.interval, this, this._loop);
            this.on("display", this, this._onDisplay);
            this.on("undisplay", this, this._onDisplay)
        };
        e._loop = function() {
            if (this._style.visible && this._sources) {
                this._index++;
                if (this._toIndex > -1 && this._index >= this._toIndex) this.stop();
                else if (this._index >= this._sources.length) this._index = 0;
                this.index = this._index
            }
        };
        e.stop = function() {
            this._isPlaying = false;
            p.timer.clear(this, this._loop);
            this.event("complete")
        };
        e._setClipChanged = function() {
            if (!this._clipChanged) {
                this._clipChanged = true;
                this.callLater(this.changeClip)
            }
        };
        s(0, e, "interval",
        function() {
            return this._interval
        },
        function(e) {
            if (this._interval != e) {
                this._interval = e;
                if (this._isPlaying) this.play()
            }
        });
        s(0, e, "skin",
        function() {
            return this._skin
        },
        function(e) {
            if (this._skin != e) {
                this._skin = e;
                if (e) {
                    this._setClipChanged()
                } else {
                    this._bitmap.source = null
                }
            }
        });
        s(0, e, "sources",
        function() {
            return this._sources
        },
        function(e) {
            this._sources = e;
            this.index = this._index;
            this.event("loaded")
        });
        s(0, e, "clipX",
        function() {
            return this._clipX
        },
        function(e) {
            this._clipX = e || 1;
            this._setClipChanged()
        });
        s(0, e, "clipY",
        function() {
            return this._clipY
        },
        function(e) {
            this._clipY = e || 1;
            this._setClipChanged()
        });
        s(0, e, "total",
        function() {
            this.runCallLater(this.changeClip);
            return this._sources ? this._sources.length: 0
        });
        s(0, e, "clipWidth",
        function() {
            return this._clipWidth
        },
        function(e) {
            this._clipWidth = e;
            this._setClipChanged()
        });
        s(0, e, "sizeGrid",
        function() {
            if (this._bitmap.sizeGrid) return this._bitmap.sizeGrid.join(",");
            return null
        },
        function(e) {
            this._bitmap.sizeGrid = N.fillArray(E.defaultSizeGrid, e, Number)
        });
        s(0, e, "group",
        function() {
            return this._group
        },
        function(e) {
            if (e && this._skin) C.setGroup(this._skin, e);
            this._group = e
        });
        s(0, e, "clipHeight",
        function() {
            return this._clipHeight
        },
        function(e) {
            this._clipHeight = e;
            this._setClipChanged()
        });
        s(0, e, "width", t.prototype._$get_width,
        function(e) {
            p.superSet(q, this, "width", e);
            this._bitmap.width = e
        });
        s(0, e, "height", t.prototype._$get_height,
        function(e) {
            p.superSet(q, this, "height", e);
            this._bitmap.height = e
        });
        s(0, e, "measureWidth",
        function() {
            this.runCallLater(this.changeClip);
            return this._bitmap.width
        });
        s(0, e, "measureHeight",
        function() {
            this.runCallLater(this.changeClip);
            return this._bitmap.height
        });
        s(0, e, "index",
        function() {
            return this._index
        },
        function(e) {
            this._index = e;
            this._bitmap && this._sources && (this._bitmap.source = this._sources[e]);
            this.event("change")
        });
        s(0, e, "autoPlay",
        function() {
            return this._autoPlay
        },
        function(e) {
            if (this._autoPlay != e) {
                this._autoPlay = e;
                e ? this.play() : this.stop()
            }
        });
        s(0, e, "isPlaying",
        function() {
            return this._isPlaying
        },
        function(e) {
            this._isPlaying = e
        });
        s(0, e, "dataSource", t.prototype._$get_dataSource,
        function(e) {
            this._dataSource = e;
            if (typeof e == "number" && Math.floor(e) == e || typeof e == "string") this.index = parseInt(e);
            else p.superSet(q, this, "dataSource", e)
        });
        s(0, e, "bitmap",
        function() {
            return this._bitmap
        });
        return n
    } (q);
    var X = function(t) {
        function e() {
            this.changeHandler = null;
            this._gridSize = 11;
            this._bgColor = "#ffffff";
            this._borderColor = "#000000";
            this._inputColor = "#000000";
            this._inputBgColor = "#efefef";
            this._colorPanel = null;
            this._colorTiles = null;
            this._colorBlock = null;
            this._colorInput = null;
            this._colorButton = null;
            this._colors = [];
            this._selectedColor = "#000000";
            this._panelChanged = false;
            e.__super.call(this)
        }
        a(e, "laya.ui.ColorPicker", t);
        var i = e.prototype;
        i.destroy = function(e) {
            e === void 0 && (e = true);
            t.prototype.destroy.call(this, e);
            this._colorPanel && this._colorPanel.destroy(e);
            this._colorButton && this._colorButton.destroy(e);
            this._colorPanel = null;
            this._colorTiles = null;
            this._colorBlock = null;
            this._colorInput = null;
            this._colorButton = null;
            this._colors = null;
            this.changeHandler = null
        };
        i.createChildren = function() {
            this.addChild(this._colorButton = new Y);
            this._colorPanel = new H;
            this._colorPanel.size(230, 166);
            this._colorPanel.addChild(this._colorTiles = new T);
            this._colorPanel.addChild(this._colorBlock = new T);
            this._colorPanel.addChild(this._colorInput = new S)
        };
        i.initialize = function() {
            this._colorButton.on("click", this, this.onColorButtonClick);
            this._colorBlock.pos(5, 5);
            this._colorInput.pos(60, 5);
            this._colorInput.size(60, 20);
            this._colorInput.on("change", this, this.onColorInputChange);
            this._colorInput.on("keydown", this, this.onColorFieldKeyDown);
            this._colorTiles.pos(5, 30);
            this._colorTiles.on("mousemove", this, this.onColorTilesMouseMove);
            this._colorTiles.on("click", this, this.onColorTilesClick);
            this._colorTiles.size(20 * this._gridSize, 12 * this._gridSize);
            this._colorPanel.on("mousedown", this, this.onPanelMouseDown);
            this.bgColor = this._bgColor
        };
        i.onPanelMouseDown = function(e) {
            e.stopPropagation()
        };
        i.changePanel = function() {
            this._panelChanged = false;
            var e = this._colorPanel.graphics;
            e.clear();
            e.drawRect(0, 0, 230, 166, this._bgColor, this._borderColor);
            this.drawBlock(this._selectedColor);
            this._colorInput.borderColor = this._borderColor;
            this._colorInput.bgColor = this._inputBgColor;
            this._colorInput.color = this._inputColor;
            e = this._colorTiles.graphics;
            e.clear();
            var t = [0, 3355443, 6710886, 10066329, 13421772, 16777215, 16711680, 65280, 255, 16776960, 65535, 16711935];
            for (var i = 0; i < 12; i++) {
                for (var n = 0; n < 20; n++) {
                    var s = 0;
                    if (n === 0) s = t[i];
                    else if (n === 1) s = 0;
                    else s = (((i * 3 + n / 6) % 3 << 0) + (i / 6 << 0) * 3) * 51 << 16 | n % 6 * 51 << 8 | (i << 0) % 6 * 51;
                    var a = N.toColor(s);
                    this._colors.push(a);
                    var r = n * this._gridSize;
                    var o = i * this._gridSize;
                    e.drawRect(r, o, this._gridSize, this._gridSize, a, "#000000")
                }
            }
        };
        i.onColorButtonClick = function(e) {
            if (this._colorPanel.parent) this.close();
            else this.open()
        };
        i.open = function() {
            var e = this.localToGlobal(new x);
            var t = e.x + this._colorPanel.width <= p.stage.width ? e.x: p.stage.width - this._colorPanel.width;
            var i = e.y + this._colorButton.height;
            i = i + this._colorPanel.height <= p.stage.height ? i: e.y - this._colorPanel.height;
            this._colorPanel.pos(t, i);
            this._colorPanel.zOrder = 1001;
            p._currentStage.addChild(this._colorPanel);
            p.stage.on("mousedown", this, this.removeColorBox)
        };
        i.close = function() {
            p.stage.off("mousedown", this, this.removeColorBox);
            this._colorPanel.removeSelf()
        };
        i.removeColorBox = function(e) {
            this.close()
        };
        i.onColorFieldKeyDown = function(e) {
            if (e.keyCode == 13) {
                if (this._colorInput.text) this.selectedColor = this._colorInput.text;
                else this.selectedColor = null;
                this.close();
                e.stopPropagation()
            }
        };
        i.onColorInputChange = function(e) {
            if (this._colorInput.text) this.drawBlock(this._colorInput.text);
            else this.drawBlock("#FFFFFF")
        };
        i.onColorTilesClick = function(e) {
            this.selectedColor = this.getColorByMouse();
            this.close()
        };
        i.onColorTilesMouseMove = function(e) {
            this._colorInput.focus = false;
            var t = this.getColorByMouse();
            this._colorInput.text = t;
            this.drawBlock(t)
        };
        i.getColorByMouse = function() {
            var e = this._colorTiles.getMousePoint();
            var t = Math.floor(e.x / this._gridSize);
            var i = Math.floor(e.y / this._gridSize);
            return this._colors[i * 20 + t]
        };
        i.drawBlock = function(e) {
            var t = this._colorBlock.graphics;
            t.clear();
            var i = e ? e: "#ffffff";
            t.drawRect(0, 0, 50, 20, i, this._borderColor);
            e || t.drawLine(0, 0, 50, 20, "#ff0000")
        };
        i.changeColor = function() {
            var e = this.graphics;
            e.clear();
            var t = this._selectedColor || "#000000";
            e.drawRect(0, 0, this._colorButton.width, this._colorButton.height, t)
        };
        i._setPanelChanged = function() {
            if (!this._panelChanged) {
                this._panelChanged = true;
                this.callLater(this.changePanel)
            }
        };
        s(0, i, "inputBgColor",
        function() {
            return this._inputBgColor
        },
        function(e) {
            this._inputBgColor = e;
            this._setPanelChanged()
        });
        s(0, i, "selectedColor",
        function() {
            return this._selectedColor
        },
        function(e) {
            if (this._selectedColor != e) {
                this._selectedColor = this._colorInput.text = e;
                this.drawBlock(e);
                this.changeColor();
                this.changeHandler && this.changeHandler.runWith(this._selectedColor);
                this.event("change", c.EMPTY.setTo("change", this, this))
            }
        });
        s(0, i, "skin",
        function() {
            return this._colorButton.skin
        },
        function(e) {
            this._colorButton.skin = e;
            this.changeColor()
        });
        s(0, i, "bgColor",
        function() {
            return this._bgColor
        },
        function(e) {
            this._bgColor = e;
            this._setPanelChanged()
        });
        s(0, i, "borderColor",
        function() {
            return this._borderColor
        },
        function(e) {
            this._borderColor = e;
            this._setPanelChanged()
        });
        s(0, i, "inputColor",
        function() {
            return this._inputColor
        },
        function(e) {
            this._inputColor = e;
            this._setPanelChanged()
        });
        return e
    } (q);
    var J = function(t) {
        function i(e, t) {
            this._visibleNum = 6;
            this._button = null;
            this._list = null;
            this._isOpen = false;
            this._itemSize = 12;
            this._labels = [];
            this._selectedIndex = -1;
            this._selectHandler = null;
            this._itemHeight = NaN;
            this._listHeight = NaN;
            this._listChanged = false;
            this._itemChanged = false;
            this._scrollBarSkin = null;
            this._isCustomList = false;
            this.itemRender = null;
            i.__super.call(this);
            this._itemColors = E.comboBoxItemColors;
            this.skin = e;
            this.labels = t
        }
        a(i, "laya.ui.ComboBox", t);
        var e = i.prototype;
        e.destroy = function(e) {
            e === void 0 && (e = true);
            t.prototype.destroy.call(this, e);
            this._button && this._button.destroy(e);
            this._list && this._list.destroy(e);
            this._button = null;
            this._list = null;
            this._itemColors = null;
            this._labels = null;
            this._selectHandler = null
        };
        e.createChildren = function() {
            this.addChild(this._button = new Y);
            this._button.text.align = "left";
            this._button.labelPadding = "0,0,0,5";
            this._button.on("mousedown", this, this.onButtonMouseDown)
        };
        e._createList = function() {
            this._list = new re;
            if (this._scrollBarSkin) this._list.vScrollBarSkin = this._scrollBarSkin;
            this._setListEvent(this._list)
        };
        e._setListEvent = function(e) {
            this._list.selectEnable = true;
            this._list.on("mousedown", this, this.onListDown);
            this._list.mouseHandler = y.create(this, this.onlistItemMouse, null, false);
            if (this._list.scrollBar) this._list.scrollBar.on("mousedown", this, this.onScrollBarDown)
        };
        e.onListDown = function(e) {
            e.stopPropagation()
        };
        e.onScrollBarDown = function(e) {
            e.stopPropagation()
        };
        e.onButtonMouseDown = function(e) {
            this.callLater(this.switchTo, [!this._isOpen])
        };
        e.changeList = function() {
            this._listChanged = false;
            var e = this.width - 2;
            var t = this._itemColors[2];
            this._itemHeight = this._itemSize + 6;
            this._list.itemRender = this.itemRender || {
                type: "Box",
                child: [{
                    type: "Label",
                    props: {
                        name: "label",
                        x: 1,
                        padding: "3,3,3,3",
                        width: e,
                        height: this._itemHeight,
                        fontSize: this._itemSize,
                        color: t
                    }
                }]
            };
            this._list.repeatY = this._visibleNum;
            this._list.refresh()
        };
        e.onlistItemMouse = function(e, t) {
            var i = e.type;
            if (i === "mouseover" || i === "mouseout") {
                if (this._isCustomList) return;
                var n = this._list.getCell(t);
                if (!n) return;
                var s = n.getChildByName("label");
                if (s) {
                    if (i === "mouseover") {
                        s.bgColor = this._itemColors[0];
                        s.color = this._itemColors[1]
                    } else {
                        s.bgColor = null;
                        s.color = this._itemColors[2]
                    }
                }
            } else if (i === "click") {
                this.selectedIndex = t;
                this.isOpen = false
            }
        };
        e.switchTo = function(e) {
            this.isOpen = e
        };
        e.changeOpen = function() {
            this.isOpen = !this._isOpen
        };
        e.changeItem = function() {
            this._itemChanged = false;
            this._listHeight = this._labels.length > 0 ? Math.min(this._visibleNum, this._labels.length) * this._itemHeight: this._itemHeight;
            if (!this._isCustomList) {
                var e = this._list.graphics;
                e.clear();
                e.drawRect(0, 0, this.width - 1, this._listHeight, this._itemColors[4], this._itemColors[3])
            }
            var t = this._list.array || [];
            t.length = 0;
            for (var i = 0,
            n = this._labels.length; i < n; i++) {
                t.push({
                    label: this._labels[i]
                })
            }
            this._list.height = this._listHeight;
            this._list.array = t
        };
        e.changeSelected = function() {
            this._button.label = this.selectedLabel
        };
        e._onStageMouseWheel = function(e) {
            if (!this._list || this._list.contains(e.target)) return;
            this.removeList(null)
        };
        e.removeList = function(e) {
            p.stage.off("mousedown", this, this.removeList);
            p.stage.off("mousewheel", this, this._onStageMouseWheel);
            this.isOpen = false
        };
        s(0, e, "selectedIndex",
        function() {
            return this._selectedIndex
        },
        function(e) {
            if (this._selectedIndex != e) {
                this._selectedIndex = e;
                if (this._labels.length > 0) this.changeSelected();
                else this.callLater(this.changeSelected);
                this.event("change", [c.EMPTY.setTo("change", this, this)]);
                this._selectHandler && this._selectHandler.runWith(this._selectedIndex)
            }
        });
        s(0, e, "measureHeight",
        function() {
            return this._button.height
        });
        s(0, e, "skin",
        function() {
            return this._button.skin
        },
        function(e) {
            if (this._button.skin != e) {
                this._button.skin = e;
                this._listChanged = true
            }
        });
        s(0, e, "measureWidth",
        function() {
            return this._button.width
        });
        s(0, e, "width", t.prototype._$get_width,
        function(e) {
            p.superSet(q, this, "width", e);
            this._button.width = this._width;
            this._itemChanged = true;
            this._listChanged = true
        });
        s(0, e, "selectedLabel",
        function() {
            return this._selectedIndex > -1 && this._selectedIndex < this._labels.length ? this._labels[this._selectedIndex] : null
        },
        function(e) {
            this.selectedIndex = this._labels.indexOf(e)
        });
        s(0, e, "labels",
        function() {
            return this._labels.join(",")
        },
        function(e) {
            if (this._labels.length > 0) this.selectedIndex = -1;
            if (e) this._labels = e.split(",");
            else this._labels.length = 0;
            this._itemChanged = true
        });
        s(0, e, "height", t.prototype._$get_height,
        function(e) {
            p.superSet(q, this, "height", e);
            this._button.height = this._height
        });
        s(0, e, "selectHandler",
        function() {
            return this._selectHandler
        },
        function(e) {
            this._selectHandler = e
        });
        s(0, e, "visibleNum",
        function() {
            return this._visibleNum
        },
        function(e) {
            this._visibleNum = e;
            this._listChanged = true
        });
        s(0, e, "labelBold",
        function() {
            return this._button.text.bold
        },
        function(e) {
            this._button.text.bold = e
        });
        s(0, e, "itemColors",
        function() {
            return String(this._itemColors)
        },
        function(e) {
            this._itemColors = N.fillArray(this._itemColors, e, String);
            this._listChanged = true
        });
        s(0, e, "itemSize",
        function() {
            return this._itemSize
        },
        function(e) {
            this._itemSize = e;
            this._listChanged = true
        });
        s(0, e, "scrollBar",
        function() {
            return this.list.scrollBar
        });
        s(0, e, "isOpen",
        function() {
            return this._isOpen
        },
        function(e) {
            if (this._isOpen != e) {
                this._isOpen = e;
                this._button.selected = this._isOpen;
                if (this._isOpen) {
                    this._list || this._createList();
                    this._listChanged && !this._isCustomList && this.changeList();
                    this._itemChanged && this.changeItem();
                    var t = this.localToGlobal(x.TEMP.setTo(0, 0));
                    var i = t.y + this._button.height;
                    i = i + this._listHeight <= p.stage.height ? i: t.y - this._listHeight;
                    this._list.pos(t.x, i);
                    this._list.zOrder = 1001;
                    p._currentStage.addChild(this._list);
                    p.stage.once("mousedown", this, this.removeList);
                    p.stage.on("mousewheel", this, this._onStageMouseWheel);
                    this._list.selectedIndex = this._selectedIndex
                } else {
                    this._list && this._list.removeSelf()
                }
            }
        });
        s(0, e, "scrollBarSkin",
        function() {
            return this._scrollBarSkin
        },
        function(e) {
            this._scrollBarSkin = e
        });
        s(0, e, "sizeGrid",
        function() {
            return this._button.sizeGrid
        },
        function(e) {
            this._button.sizeGrid = e
        });
        s(0, e, "button",
        function() {
            return this._button
        });
        s(0, e, "list",
        function() {
            this._list || this._createList();
            return this._list
        },
        function(e) {
            if (e) {
                e.removeSelf();
                this._isCustomList = true;
                this._list = e;
                this._setListEvent(e);
                this._itemHeight = e.getCell(0).height + e.spaceY
            }
        });
        s(0, e, "dataSource", t.prototype._$get_dataSource,
        function(e) {
            this._dataSource = e;
            if (typeof e == "number" && Math.floor(e) == e || typeof e == "string") this.selectedIndex = parseInt(e);
            else if (e instanceof Array) this.labels = e.join(",");
            else p.superSet(q, this, "dataSource", e)
        });
        s(0, e, "labelColors",
        function() {
            return this._button.labelColors
        },
        function(e) {
            if (this._button.labelColors != e) {
                this._button.labelColors = e
            }
        });
        s(0, e, "labelPadding",
        function() {
            return this._button.text.padding.join(",")
        },
        function(e) {
            this._button.text.padding = N.fillArray(E.labelPadding, e, Number)
        });
        s(0, e, "labelSize",
        function() {
            return this._button.text.fontSize
        },
        function(e) {
            this._button.text.fontSize = e
        });
        s(0, e, "labelFont",
        function() {
            return this._button.text.font
        },
        function(e) {
            this._button.text.font = e
        });
        s(0, e, "stateNum",
        function() {
            return this._button.stateNum
        },
        function(e) {
            this._button.stateNum = e
        });
        return i
    } (q);
    var $ = function(t) {
        function i(e) {
            this.rollRatio = .95;
            this.changeHandler = null;
            this.scaleBar = true;
            this.autoHide = false;
            this.elasticDistance = 0;
            this.elasticBackTime = 500;
            this.upButton = null;
            this.downButton = null;
            this.slider = null;
            this._scrollSize = 1;
            this._skin = null;
            this._thumbPercent = 1;
            this._target = null;
            this._lastPoint = null;
            this._lastOffset = 0;
            this._checkElastic = false;
            this._isElastic = false;
            this._value = NaN;
            this._hide = false;
            this._clickOnly = true;
            this._offsets = null;
            i.__super.call(this);
            this._showButtons = F.showButtons;
            this._touchScrollEnable = F.touchScrollEnable;
            this._mouseWheelEnable = F.mouseWheelEnable;
            this.skin = e;
            this.max = 1
        }
        a(i, "laya.ui.ScrollBar", t);
        var e = i.prototype;
        e.destroy = function(e) {
            e === void 0 && (e = true);
            this.stopScroll();
            this.target = null;
            t.prototype.destroy.call(this, e);
            this.upButton && this.upButton.destroy(e);
            this.downButton && this.downButton.destroy(e);
            this.slider && this.slider.destroy(e);
            this.upButton = this.downButton = null;
            this.slider = null;
            this.changeHandler = null;
            this._offsets = null
        };
        e.createChildren = function() {
            this.addChild(this.slider = new K);
            this.addChild(this.upButton = new Y);
            this.addChild(this.downButton = new Y)
        };
        e.initialize = function() {
            this.slider.showLabel = false;
            this.slider.on("change", this, this.onSliderChange);
            this.slider.setSlider(0, 0, 0);
            this.upButton.on("mousedown", this, this.onButtonMouseDown);
            this.downButton.on("mousedown", this, this.onButtonMouseDown)
        };
        e.onSliderChange = function() {
            if (this._value != this.slider.value) this.value = this.slider.value
        };
        e.onButtonMouseDown = function(e) {
            var t = e.currentTarget === this.upButton;
            this.slide(t);
            p.timer.once(E.scrollBarDelayTime, this, this.startLoop, [t]);
            p.stage.once("mouseup", this, this.onStageMouseUp)
        };
        e.startLoop = function(e) {
            p.timer.frameLoop(1, this, this.slide, [e])
        };
        e.slide = function(e) {
            if (e) this.value -= this._scrollSize;
            else this.value += this._scrollSize
        };
        e.onStageMouseUp = function(e) {
            p.timer.clear(this, this.startLoop);
            p.timer.clear(this, this.slide)
        };
        e.changeScrollBar = function() {
            this.upButton.visible = this._showButtons;
            this.downButton.visible = this._showButtons;
            if (this._showButtons) {
                this.upButton.skin = this._skin.replace(".png", "$up.png");
                this.downButton.skin = this._skin.replace(".png", "$down.png")
            }
            if (this.slider.isVertical) this.slider.y = this._showButtons ? this.upButton.height: 0;
            else this.slider.x = this._showButtons ? this.upButton.width: 0;
            this.resetPositions();
            this.repaint()
        };
        e.changeSize = function() {
            t.prototype.changeSize.call(this);
            this.repaint();
            this.resetPositions();
            this.event("change");
            this.changeHandler && this.changeHandler.runWith(this.value)
        };
        e.resetPositions = function() {
            if (this.slider.isVertical) this.slider.height = this.height - (this._showButtons ? this.upButton.height + this.downButton.height: 0);
            else this.slider.width = this.width - (this._showButtons ? this.upButton.width + this.downButton.width: 0);
            this.resetButtonPosition()
        };
        e.resetButtonPosition = function() {
            if (this.slider.isVertical) this.downButton.y = this.slider.y + this.slider.height;
            else this.downButton.x = this.slider.x + this.slider.width
        };
        e.setScroll = function(e, t, i) {
            this.runCallLater(this.changeSize);
            this.slider.setSlider(e, t, i);
            this.slider.bar.visible = t > 0;
            if (!this._hide && this.autoHide) this.visible = false
        };
        e.onTargetMouseWheel = function(e) {
            this.value -= e.delta * this._scrollSize;
            this.target = this._target
        };
        e.onTargetMouseDown = function(e) {
            this._clickOnly = true;
            this._lastOffset = 0;
            this._checkElastic = false;
            this._lastPoint || (this._lastPoint = new x);
            this._lastPoint.setTo(p.stage.mouseX, p.stage.mouseY);
            p.timer.clear(this, this.tweenMove);
            B.clearTween(this);
            p.stage.once("mouseup", this, this.onStageMouseUp2);
            p.stage.once("mouseout", this, this.onStageMouseUp2);
            p.timer.frameLoop(1, this, this.loop)
        };
        e.loop = function() {
            var e = p.stage.mouseY;
            var t = p.stage.mouseX;
            this._lastOffset = this.isVertical ? e - this._lastPoint.y: t - this._lastPoint.x;
            if (this._clickOnly) {
                if (Math.abs(this._lastOffset * (this.isVertical ? p.stage._canvasTransform.getScaleY() : p.stage._canvasTransform.getScaleX())) > 1) {
                    this._clickOnly = false;
                    this._offsets || (this._offsets = []);
                    this._offsets.length = 0;
                    this._target.mouseEnabled = false;
                    if (!this.hide && this.autoHide) {
                        this.alpha = 1;
                        this.visible = true
                    }
                    this.event("start")
                } else return
            }
            this._offsets.push(this._lastOffset);
            this._lastPoint.x = t;
            this._lastPoint.y = e;
            if (this._lastOffset === 0) return;
            if (!this._checkElastic) {
                if (this.elasticDistance > 0) {
                    if (!this._checkElastic && this._lastOffset != 0) {
                        if (this._lastOffset > 0 && this._value <= this.min || this._lastOffset < 0 && this._value >= this.max) {
                            this._isElastic = true;
                            this._checkElastic = true
                        } else {
                            this._isElastic = false
                        }
                    }
                } else {
                    this._checkElastic = true
                }
            }
            if (this._isElastic) {
                if (this._value <= this.min) {
                    this.value -= this._lastOffset * Math.max(0, 1 - (this.min - this._value) / this.elasticDistance)
                } else if (this._value >= this.max) {
                    this.value -= this._lastOffset * Math.max(0, 1 - (this._value - this.max) / this.elasticDistance)
                }
            } else {
                this.value -= this._lastOffset
            }
        };
        e.onStageMouseUp2 = function(e) {
            p.stage.off("mouseup", this, this.onStageMouseUp2);
            p.stage.off("mouseout", this, this.onStageMouseUp2);
            p.timer.clear(this, this.loop);
            if (this._clickOnly) {
                if (this._value >= this.min && this._value <= this.max) return
            }
            this._target.mouseEnabled = true;
            if (this._isElastic) {
                if (this._value < this.min) {
                    B.to(this, {
                        value: this.min
                    },
                    this.elasticBackTime, u.sineOut, y.create(this, this.elasticOver))
                } else if (this._value > this.max) {
                    B.to(this, {
                        value: this.max
                    },
                    this.elasticBackTime, u.sineOut, y.create(this, this.elasticOver))
                }
            } else {
                if (!this._offsets) return;
                if (this._offsets.length < 1) {
                    this._offsets[0] = this.isVertical ? p.stage.mouseY - this._lastPoint.y: p.stage.mouseX - this._lastPoint.x
                }
                var t = 0;
                var i = Math.min(this._offsets.length, 3);
                for (var n = 0; n < i; n++) {
                    t += this._offsets[this._offsets.length - 1 - n]
                }
                this._lastOffset = t / i;
                t = Math.abs(this._lastOffset);
                if (t < 2) {
                    this.event("end");
                    return
                }
                if (t > 60) this._lastOffset = this._lastOffset > 0 ? 60 : -60;
                var s = Math.round(Math.abs(this.elasticDistance * (this._lastOffset / 240)));
                p.timer.frameLoop(1, this, this.tweenMove, [s])
            }
        };
        e.elasticOver = function() {
            this._isElastic = false;
            if (!this.hide && this.autoHide) {
                B.to(this, {
                    alpha: 0
                },
                500)
            }
            this.event("end")
        };
        e.tweenMove = function(e) {
            this._lastOffset *= this.rollRatio;
            var t = NaN;
            if (e > 0) {
                if (this._lastOffset > 0 && this.value <= this.min) {
                    this._isElastic = true;
                    t = -(this.min - e - this.value) * .5;
                    if (this._lastOffset > t) this._lastOffset = t
                } else if (this._lastOffset < 0 && this.value >= this.max) {
                    this._isElastic = true;
                    t = -(this.max + e - this.value) * .5;
                    if (this._lastOffset < t) this._lastOffset = t
                }
            }
            this.value -= this._lastOffset;
            if (Math.abs(this._lastOffset) < 1) {
                p.timer.clear(this, this.tweenMove);
                if (this._isElastic) {
                    if (this._value < this.min) {
                        B.to(this, {
                            value: this.min
                        },
                        this.elasticBackTime, u.sineOut, y.create(this, this.elasticOver))
                    } else if (this._value > this.max) {
                        B.to(this, {
                            value: this.max
                        },
                        this.elasticBackTime, u.sineOut, y.create(this, this.elasticOver))
                    } else {
                        this.elasticOver()
                    }
                    return
                }
                this.event("end");
                if (!this.hide && this.autoHide) {
                    B.to(this, {
                        alpha: 0
                    },
                    500)
                }
            }
        };
        e.stopScroll = function() {
            this.onStageMouseUp2(null);
            p.timer.clear(this, this.tweenMove);
            B.clearTween(this)
        };
        s(0, e, "measureHeight",
        function() {
            if (this.slider.isVertical) return 100;
            return this.slider.height
        });
        s(0, e, "skin",
        function() {
            return this._skin
        },
        function(e) {
            if (this._skin != e) {
                this._skin = e;
                this.slider.skin = this._skin;
                this.callLater(this.changeScrollBar)
            }
        });
        s(0, e, "max",
        function() {
            return this.slider.max
        },
        function(e) {
            this.slider.max = e
        });
        s(0, e, "showButtons",
        function() {
            return this._showButtons
        },
        function(e) {
            this._showButtons = e;
            this.callLater(this.changeScrollBar)
        });
        s(0, e, "measureWidth",
        function() {
            if (this.slider.isVertical) return this.slider.width;
            return 100
        });
        s(0, e, "min",
        function() {
            return this.slider.min
        },
        function(e) {
            this.slider.min = e
        });
        s(0, e, "value",
        function() {
            return this._value
        },
        function(e) {
            if (e !== this._value) {
                this._value = e;
                if (!this._isElastic) {
                    if (this.slider._value != e) {
                        this.slider._value = e;
                        this.slider.changeValue()
                    }
                    this._value = this.slider._value
                }
                this.event("change");
                this.changeHandler && this.changeHandler.runWith(this._value)
            }
        });
        s(0, e, "isVertical",
        function() {
            return this.slider.isVertical
        },
        function(e) {
            this.slider.isVertical = e
        });
        s(0, e, "sizeGrid",
        function() {
            return this.slider.sizeGrid
        },
        function(e) {
            this.slider.sizeGrid = e
        });
        s(0, e, "scrollSize",
        function() {
            return this._scrollSize
        },
        function(e) {
            this._scrollSize = e
        });
        s(0, e, "dataSource", t.prototype._$get_dataSource,
        function(e) {
            this._dataSource = e;
            if (typeof e == "number" || typeof e == "string") this.value = Number(e);
            else p.superSet(q, this, "dataSource", e)
        });
        s(0, e, "thumbPercent",
        function() {
            return this._thumbPercent
        },
        function(e) {
            this.runCallLater(this.changeScrollBar);
            this.runCallLater(this.changeSize);
            e = e >= 1 ? .99 : e;
            this._thumbPercent = e;
            if (this.scaleBar) {
                if (this.slider.isVertical) this.slider.bar.height = Math.max(this.slider.height * e, E.scrollBarMinNum);
                else this.slider.bar.width = Math.max(this.slider.width * e, E.scrollBarMinNum)
            }
        });
        s(0, e, "target",
        function() {
            return this._target
        },
        function(e) {
            if (this._target) {
                this._target.off("mousewheel", this, this.onTargetMouseWheel);
                this._target.off("mousedown", this, this.onTargetMouseDown)
            }
            this._target = e;
            if (e) {
                this._mouseWheelEnable && this._target.on("mousewheel", this, this.onTargetMouseWheel);
                this._touchScrollEnable && this._target.on("mousedown", this, this.onTargetMouseDown)
            }
        });
        s(0, e, "hide",
        function() {
            return this._hide
        },
        function(e) {
            this._hide = e;
            this.visible = !e
        });
        s(0, e, "touchScrollEnable",
        function() {
            return this._touchScrollEnable
        },
        function(e) {
            this._touchScrollEnable = e;
            this.target = this._target
        });
        s(0, e, "mouseWheelEnable",
        function() {
            return this._mouseWheelEnable
        },
        function(e) {
            this._mouseWheelEnable = e;
            this.target = this._target
        });
        s(0, e, "tick",
        function() {
            return this.slider.tick
        },
        function(e) {
            this.slider.tick = e
        });
        return i
    } (q);
    var K = function(t) {
        function i(e) {
            this.changeHandler = null;
            this.isVertical = true;
            this.showLabel = true;
            this._allowClickBack = false;
            this._max = 100;
            this._min = 0;
            this._tick = 1;
            this._value = 0;
            this._skin = null;
            this._bg = null;
            this._progress = null;
            this._bar = null;
            this._tx = NaN;
            this._ty = NaN;
            this._maxMove = NaN;
            this._globalSacle = null;
            i.__super.call(this);
            this.skin = e
        }
        a(i, "laya.ui.Slider", t);
        var e = i.prototype;
        e.destroy = function(e) {
            e === void 0 && (e = true);
            t.prototype.destroy.call(this, e);
            this._bg && this._bg.destroy(e);
            this._bar && this._bar.destroy(e);
            this._progress && this._progress.destroy(e);
            this._bg = null;
            this._bar = null;
            this._progress = null;
            this.changeHandler = null
        };
        e.createChildren = function() {
            this.addChild(this._bg = new W);
            this.addChild(this._bar = new Y)
        };
        e.initialize = function() {
            this._bar.on("mousedown", this, this.onBarMouseDown);
            this._bg.sizeGrid = this._bar.sizeGrid = "4,4,4,4,0";
            if (this._progress) this._progress.sizeGrid = this._bar.sizeGrid;
            this.allowClickBack = true
        };
        e.onBarMouseDown = function(e) {
            this._globalSacle || (this._globalSacle = new x);
            this._globalSacle.setTo(this.globalScaleX || .01, this.globalScaleY || .01);
            this._maxMove = this.isVertical ? this.height - this._bar.height: this.width - this._bar.width;
            this._tx = p.stage.mouseX;
            this._ty = p.stage.mouseY;
            p.stage.on("mousemove", this, this.mouseMove);
            p.stage.once("mouseup", this, this.mouseUp);
            p.stage.once("mouseout", this, this.mouseUp);
            this.showValueText()
        };
        e.showValueText = function() {
            if (this.showLabel) {
                var e = laya.ui.Slider.label;
                this.addChild(e);
                e.textField.changeText(this._value + "");
                if (this.isVertical) {
                    e.x = this._bar.x + 20;
                    e.y = (this._bar.height - e.height) * .5 + this._bar.y
                } else {
                    e.y = this._bar.y - 20;
                    e.x = (this._bar.width - e.width) * .5 + this._bar.x
                }
            }
        };
        e.hideValueText = function() {
            laya.ui.Slider.label && laya.ui.Slider.label.removeSelf()
        };
        e.mouseUp = function(e) {
            p.stage.off("mousemove", this, this.mouseMove);
            p.stage.off("mouseup", this, this.mouseUp);
            p.stage.off("mouseout", this, this.mouseUp);
            this.sendChangeEvent("changed");
            this.hideValueText()
        };
        e.mouseMove = function(e) {
            var t = this._value;
            if (this.isVertical) {
                this._bar.y += (p.stage.mouseY - this._ty) / this._globalSacle.y;
                if (this._bar.y > this._maxMove) this._bar.y = this._maxMove;
                else if (this._bar.y < 0) this._bar.y = 0;
                this._value = this._bar.y / this._maxMove * (this._max - this._min) + this._min;
                if (this._progress) this._progress.height = this._bar.y + .5 * this._bar.height
            } else {
                this._bar.x += (p.stage.mouseX - this._tx) / this._globalSacle.x;
                if (this._bar.x > this._maxMove) this._bar.x = this._maxMove;
                else if (this._bar.x < 0) this._bar.x = 0;
                this._value = this._bar.x / this._maxMove * (this._max - this._min) + this._min;
                if (this._progress) this._progress.width = this._bar.x + .5 * this._bar.width
            }
            this._tx = p.stage.mouseX;
            this._ty = p.stage.mouseY;
            var i = Math.pow(10, (this._tick + "").length - 1);
            this._value = Math.round(Math.round(this._value / this._tick) * this._tick * i) / i;
            if (this._value != t) {
                this.sendChangeEvent()
            }
            this.showValueText()
        };
        e.sendChangeEvent = function(e) {
            e === void 0 && (e = "change");
            this.event(e);
            this.changeHandler && this.changeHandler.runWith(this._value)
        };
        e.setBarPoint = function() {
            if (this.isVertical) this._bar.x = Math.round((this._bg.width - this._bar.width) * .5);
            else this._bar.y = Math.round((this._bg.height - this._bar.height) * .5)
        };
        e.changeSize = function() {
            t.prototype.changeSize.call(this);
            if (this.isVertical) this._bg.height = this.height;
            else this._bg.width = this.width;
            this.setBarPoint();
            this.changeValue()
        };
        e.setSlider = function(e, t, i) {
            this._value = -1;
            this._min = e;
            this._max = t > e ? t: e;
            this.value = i < e ? e: i > t ? t: i
        };
        e.changeValue = function() {
            var e = Math.pow(10, (this._tick + "").length - 1);
            this._value = Math.round(Math.round(this._value / this._tick) * this._tick * e) / e;
            this._value = this._value > this._max ? this._max: this._value < this._min ? this._min: this._value;
            var t = this._max - this._min;
            if (t === 0) t = 1;
            if (this.isVertical) {
                this._bar.y = (this._value - this._min) / t * (this.height - this._bar.height);
                if (this._progress) this._progress.height = this._bar.y + .5 * this._bar.height
            } else {
                this._bar.x = (this._value - this._min) / t * (this.width - this._bar.width);
                if (this._progress) this._progress.width = this._bar.x + .5 * this._bar.width
            }
        };
        e.onBgMouseDown = function(e) {
            var t = this._bg.getMousePoint();
            if (this.isVertical) this.value = t.y / (this.height - this._bar.height) * (this._max - this._min) + this._min;
            else this.value = t.x / (this.width - this._bar.width) * (this._max - this._min) + this._min
        };
        s(0, e, "measureHeight",
        function() {
            return Math.max(this._bg.height, this._bar.height)
        });
        s(0, e, "skin",
        function() {
            return this._skin
        },
        function(e) {
            if (this._skin != e) {
                this._skin = e;
                this._bg.skin = this._skin;
                this._bar.skin = this._skin.replace(".png", "$bar.png");
                var t = this._skin.replace(".png", "$progress.png");
                if (C.getRes(t)) {
                    if (!this._progress) {
                        this.addChild(this._progress = new W);
                        this._progress.sizeGrid = this._bar.sizeGrid;
                        this.setChildIndex(this._progress, 1)
                    }
                    this._progress.skin = t
                }
                this.setBarPoint();
                this.callLater(this.changeValue)
            }
        });
        s(0, e, "allowClickBack",
        function() {
            return this._allowClickBack
        },
        function(e) {
            if (this._allowClickBack != e) {
                this._allowClickBack = e;
                if (e) this._bg.on("mousedown", this, this.onBgMouseDown);
                else this._bg.off("mousedown", this, this.onBgMouseDown)
            }
        });
        s(0, e, "max",
        function() {
            return this._max
        },
        function(e) {
            if (this._max != e) {
                this._max = e;
                this.callLater(this.changeValue)
            }
        });
        s(0, e, "measureWidth",
        function() {
            return Math.max(this._bg.width, this._bar.width)
        });
        s(0, e, "tick",
        function() {
            return this._tick
        },
        function(e) {
            if (this._tick != e) {
                this._tick = e;
                this.callLater(this.changeValue)
            }
        });
        s(0, e, "sizeGrid",
        function() {
            return this._bg.sizeGrid
        },
        function(e) {
            this._bg.sizeGrid = e;
            this._bar.sizeGrid = e;
            if (this._progress) this._progress.sizeGrid = this._bar.sizeGrid
        });
        s(0, e, "min",
        function() {
            return this._min
        },
        function(e) {
            if (this._min != e) {
                this._min = e;
                this.callLater(this.changeValue)
            }
        });
        s(0, e, "value",
        function() {
            return this._value
        },
        function(e) {
            if (this._value != e) {
                var t = this._value;
                this._value = e;
                this.changeValue();
                if (this._value != t) {
                    this.sendChangeEvent()
                }
            }
        });
        s(0, e, "dataSource", t.prototype._$get_dataSource,
        function(e) {
            this._dataSource = e;
            if (typeof e == "number" || typeof e == "string") this.value = Number(e);
            else p.superSet(q, this, "dataSource", e)
        });
        s(0, e, "bar",
        function() {
            return this._bar
        });
        n(i, ["label",
        function() {
            return this.label = new Q
        }]);
        return i
    } (q);
    var Q = function(t) {
        function i(e) {
            this._tf = null;
            i.__super.call(this);
            e === void 0 && (e = "");
            g.defaultColor = E.labelColor;
            this.text = e
        }
        a(i, "laya.ui.Label", t);
        var e = i.prototype;
        e.destroy = function(e) {
            e === void 0 && (e = true);
            t.prototype.destroy.call(this, e);
            this._tf = null
        };
        e.createChildren = function() {
            this.addChild(this._tf = new k)
        };
        e.changeText = function(e) {
            this._tf.changeText(e)
        };
        s(0, e, "padding",
        function() {
            return this._tf.padding.join(",")
        },
        function(e) {
            this._tf.padding = N.fillArray(E.labelPadding, e, Number)
        });
        s(0, e, "bold",
        function() {
            return this._tf.bold
        },
        function(e) {
            this._tf.bold = e
        });
        s(0, e, "align",
        function() {
            return this._tf.align
        },
        function(e) {
            this._tf.align = e
        });
        s(0, e, "text",
        function() {
            return this._tf.text
        },
        function(e) {
            if (this._tf.text != e) {
                if (e) e = N.adptString(e + "");
                this._tf.text = e;
                this.event("change");
                if (!this._width || !this._height) this.onCompResize()
            }
        });
        s(0, e, "italic",
        function() {
            return this._tf.italic
        },
        function(e) {
            this._tf.italic = e
        });
        s(0, e, "wordWrap",
        function() {
            return this._tf.wordWrap
        },
        function(e) {
            this._tf.wordWrap = e
        });
        s(0, e, "font",
        function() {
            return this._tf.font
        },
        function(e) {
            this._tf.font = e
        });
        s(0, e, "dataSource", t.prototype._$get_dataSource,
        function(e) {
            this._dataSource = e;
            if (typeof e == "number" || typeof e == "string") this.text = e + "";
            else p.superSet(q, this, "dataSource", e)
        });
        s(0, e, "color",
        function() {
            return this._tf.color
        },
        function(e) {
            this._tf.color = e
        });
        s(0, e, "valign",
        function() {
            return this._tf.valign
        },
        function(e) {
            this._tf.valign = e
        });
        s(0, e, "leading",
        function() {
            return this._tf.leading
        },
        function(e) {
            this._tf.leading = e
        });
        s(0, e, "fontSize",
        function() {
            return this._tf.fontSize
        },
        function(e) {
            this._tf.fontSize = e
        });
        s(0, e, "bgColor",
        function() {
            return this._tf.bgColor
        },
        function(e) {
            this._tf.bgColor = e
        });
        s(0, e, "borderColor",
        function() {
            return this._tf.borderColor
        },
        function(e) {
            this._tf.borderColor = e
        });
        s(0, e, "stroke",
        function() {
            return this._tf.stroke
        },
        function(e) {
            this._tf.stroke = e
        });
        s(0, e, "strokeColor",
        function() {
            return this._tf.strokeColor
        },
        function(e) {
            this._tf.strokeColor = e
        });
        s(0, e, "textField",
        function() {
            return this._tf
        });
        s(0, e, "measureWidth",
        function() {
            return this._tf.width
        });
        s(0, e, "measureHeight",
        function() {
            return this._tf.height
        });
        s(0, e, "width",
        function() {
            if (this._width || this._tf.text) return p.superGet(q, this, "width");
            return 0
        },
        function(e) {
            p.superSet(q, this, "width", e);
            this._tf.width = e
        });
        s(0, e, "height",
        function() {
            if (this._height || this._tf.text) return p.superGet(q, this, "height");
            return 0
        },
        function(e) {
            p.superSet(q, this, "height", e);
            this._tf.height = e
        });
        s(0, e, "overflow",
        function() {
            return this._tf.overflow
        },
        function(e) {
            this._tf.overflow = e
        });
        s(0, e, "underline",
        function() {
            return this._tf.underline
        },
        function(e) {
            this._tf.underline = e
        });
        s(0, e, "underlineColor",
        function() {
            return this._tf.underlineColor
        },
        function(e) {
            this._tf.underlineColor = e
        });
        return i
    } (q);
    var Z = function(t) {
        function i(e) {
            this.changeHandler = null;
            this._bg = null;
            this._bar = null;
            this._skin = null;
            this._value = .5;
            i.__super.call(this);
            this.skin = e
        }
        a(i, "laya.ui.ProgressBar", t);
        var e = i.prototype;
        e.destroy = function(e) {
            e === void 0 && (e = true);
            t.prototype.destroy.call(this, e);
            this._bg && this._bg.destroy(e);
            this._bar && this._bar.destroy(e);
            this._bg = this._bar = null;
            this.changeHandler = null
        };
        e.createChildren = function() {
            this.addChild(this._bg = new W);
            this.addChild(this._bar = new W);
            this._bar._bitmap.autoCacheCmd = false
        };
        e.changeValue = function() {
            if (this.sizeGrid) {
                var e = this.sizeGrid.split(",");
                var t = Number(e[3]);
                var i = Number(e[1]);
                var n = this.width - t - i;
                var s = n * this._value;
                this._bar.width = t + i + s;
                this._bar.visible = this._bar.width > t + i
            } else {
                this._bar.width = this.width * this._value
            }
        };
        s(0, e, "measureHeight",
        function() {
            return this._bg.height
        });
        s(0, e, "skin",
        function() {
            return this._skin
        },
        function(e) {
            if (this._skin != e) {
                this._skin = e;
                this._bg.skin = this._skin;
                this._bar.skin = this._skin.replace(".png", "$bar.png");
                this.callLater(this.changeValue)
            }
        });
        s(0, e, "measureWidth",
        function() {
            return this._bg.width
        });
        s(0, e, "height", t.prototype._$get_height,
        function(e) {
            p.superSet(q, this, "height", e);
            this._bg.height = this._height;
            this._bar.height = this._height
        });
        s(0, e, "bar",
        function() {
            return this._bar
        });
        s(0, e, "value",
        function() {
            return this._value
        },
        function(e) {
            if (this._value != e) {
                e = e > 1 ? 1 : e < 0 ? 0 : e;
                this._value = e;
                this.callLater(this.changeValue);
                this.event("change");
                this.changeHandler && this.changeHandler.runWith(e)
            }
        });
        s(0, e, "bg",
        function() {
            return this._bg
        });
        s(0, e, "sizeGrid",
        function() {
            return this._bg.sizeGrid
        },
        function(e) {
            this._bg.sizeGrid = this._bar.sizeGrid = e
        });
        s(0, e, "width", t.prototype._$get_width,
        function(e) {
            p.superSet(q, this, "width", e);
            this._bg.width = this._width;
            this.callLater(this.changeValue)
        });
        s(0, e, "dataSource", t.prototype._$get_dataSource,
        function(e) {
            this._dataSource = e;
            if (typeof e == "number" || typeof e == "string") this.value = Number(e);
            else p.superSet(q, this, "dataSource", e)
        });
        return i
    } (q);
    var ee = function(e) {
        function i() {
            this._tipBox = null;
            this._tipText = null;
            this._defaultTipHandler = null;
            i.__super.call(this);
            this._tipBox = new q;
            this._tipBox.addChild(this._tipText = new k);
            this._tipText.x = this._tipText.y = 5;
            this._tipText.color = i.tipTextColor;
            this._defaultTipHandler = this._showDefaultTip;
            p.stage.on("showtip", this, this._onStageShowTip);
            p.stage.on("hidetip", this, this._onStageHideTip);
            this.zOrder = 1100
        }
        a(i, "laya.ui.TipManager", e);
        var t = i.prototype;
        t._onStageHideTip = function(e) {
            p.timer.clear(this, this._showTip);
            this.closeAll();
            this.removeSelf()
        };
        t._onStageShowTip = function(e) {
            p.timer.once(i.tipDelay, this, this._showTip, [e], true)
        };
        t._showTip = function(e) {
            if (typeof e == "string") {
                var t = String(e);
                if (Boolean(t)) {
                    this._defaultTipHandler(t)
                }
            } else if (e instanceof laya.utils.Handler) {
                e.run()
            } else if (typeof e == "function") {
                e.apply()
            }
            if (true) {
                p.stage.on("mousemove", this, this._onStageMouseMove);
                p.stage.on("mousedown", this, this._onStageMouseDown)
            }
            this._onStageMouseMove(null)
        };
        t._onStageMouseDown = function(e) {
            this.closeAll()
        };
        t._onStageMouseMove = function(e) {
            this._showToStage(this, i.offsetX, i.offsetY)
        };
        t._showToStage = function(e, t, i) {
            t === void 0 && (t = 0);
            i === void 0 && (i = 0);
            var n = e.getBounds();
            e.x = p.stage.mouseX + t;
            e.y = p.stage.mouseY + i;
            if (e.x + n.width > p.stage.width) {
                e.x -= n.width + t
            }
            if (e.y + n.height > p.stage.height) {
                e.y -= n.height + i
            }
        };
        t.closeAll = function() {
            p.timer.clear(this, this._showTip);
            p.stage.off("mousemove", this, this._onStageMouseMove);
            p.stage.off("mousedown", this, this._onStageMouseDown);
            this.removeChildren()
        };
        t.showDislayTip = function(e) {
            this.addChild(e);
            this._showToStage(this);
            p._currentStage.addChild(this)
        };
        t._showDefaultTip = function(e) {
            this._tipText.text = e;
            var t = this._tipBox.graphics;
            t.clear();
            t.drawRect(0, 0, this._tipText.width + 10, this._tipText.height + 10, i.tipBackColor);
            this.addChild(this._tipBox);
            this._showToStage(this);
            p._currentStage.addChild(this)
        };
        s(0, t, "defaultTipHandler",
        function() {
            return this._defaultTipHandler
        },
        function(e) {
            this._defaultTipHandler = e
        });
        i.offsetX = 10;
        i.offsetY = 15;
        i.tipTextColor = "#ffffff";
        i.tipBackColor = "#111111";
        i.tipDelay = 200;
        return i
    } (q);
    var te = function(t) {
        function i(e) {
            this.advsListArr = [];
            this.resUrl = "https://unioncdn.layabox.com/config/iconlist.json";
            this._data = [];
            this._resquestTime = 36e4;
            this._appid = null;
            this._appCodeImgStr = null;
            this._playIndex = 0;
            this._lunboTime = 5e3;
            i.__super.call(this);
            this._http = new f.window.XMLHttpRequest;
            this.skin = e;
            this.init();
            this.size(120, 120)
        }
        a(i, "laya.ui.AdvImage", t);
        var e = i.prototype;
        e.init = function() {
            if (f.onMiniGame && this.isSupportJump) {
                p.timer.loop(this._resquestTime, this, this.onGetAdvsListData);
                this.onGetAdvsListData();
                this.initEvent()
            } else {
                this.visible = false
            }
        };
        e.initEvent = function() {
            this.on("click", this, this.onAdvsImgClick)
        };
        e.onAdvsImgClick = function() {
            var e = this.getCurrentAppidObj();
            if (e) this.jumptoGame()
        };
        e.revertAdvsData = function() {
            if (this.advsListArr[this._playIndex]) {
                this.visible = true;
                this.skin = this.advsListArr[this._playIndex]
            }
        };
        e.jumptoGame = function() {
            var t = this;
            if (!f.onMiniGame) return;
            if (this.isSupportJump) {
                wx.navigateToMiniProgram({
                    appId: this._appid,
                    path: "",
                    extraData: "",
                    envVersion: "release",
                    success: function e() {
                        console.log("-------------跳转成功--------------")
                    },
                    fail: function e() {
                        console.log("-------------跳转失败--------------")
                    },
                    complete: function e() {
                        console.log("-------------跳转接口调用成功--------------");
                        t.updateAdvsInfo()
                    }.bind(this)
                })
            }
        };
        e.updateAdvsInfo = function() {
            this.visible = false;
            this.onLunbo();
            p.timer.loop(this._lunboTime, this, this.onLunbo)
        };
        e.onLunbo = function() {
            if (this._playIndex >= this.advsListArr.length - 1) this._playIndex = 0;
            else this._playIndex += 1;
            this.visible = true;
            this.revertAdvsData()
        };
        e.getCurrentAppidObj = function() {
            return this.advsListArr[this._playIndex]
        };
        e.onGetAdvsListData = function() {
            var t = this;
            var e = this.randRange(1e4, 1e6);
            var i = this.resUrl + "?" + e;
            this._http.open("get", i, true);
            this._http.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
            this._http.responseType = "text";
            this._http.onerror = function(e) {
                t._onError(e)
            };
            this._http.onload = function(e) {
                t._onLoad(e)
            };
            this._http.send(null)
        };
        e.randRange = function(e, t) {
            return Math.floor(Math.random() * (t - e + 1)) + e
        };
        e._onError = function(e) {
            this.error("Request failed Status:" + this._http.status + " text:" + this._http.statusText)
        };
        e._onLoad = function(e) {
            var t = this._http;
            var i = t.status !== undefined ? t.status: 200;
            if (i === 200 || i === 204 || i === 0) {
                this.complete()
            } else {
                this.error("[" + t.status + "]" + t.statusText + ":" + t.responseURL)
            }
        };
        e.error = function(e) {
            this.event("error", e)
        };
        e.complete = function() {
            var t = true;
            try {
                this._data = this._http.response || this._http.responseText;
                this._data = JSON.parse(this._data);
                this.advsListArr = this._data.list;
                this._appid = this._data.appid;
                this._appCodeImgStr = this._data.qrcode;
                this.updateAdvsInfo();
                this.revertAdvsData()
            } catch(e) {
                t = false;
                this.error(e.message)
            }
        };
        e.clear = function() {
            var e = this._http;
            e.onerror = e.onabort = e.onprogress = e.onload = null
        };
        e.destroy = function(e) {
            e === void 0 && (e = true);
            t.prototype.destroy.call(this, true);
            p.timer.clear(this, this.onLunbo);
            p.timer.clear(this, this.onGetAdvsListData);
            this.clear()
        };
        s(0, e, "isSupportJump",
        function() {
            if (f.onMiniGame) {
                var e = typeof wx.navigateToMiniProgram == "function";
                return e
            }
            return false
        });
        return i
    } (W);
    var ie = function(e) {
        var d;
        function g() {
            this._idMap = null;
            this._aniList = null;
            this._watchMap = {};
            g.__super.call(this)
        }
        a(g, "laya.ui.View", e);
        var t = g.prototype;
        t.createView = function(e) {
            if (e.animations && !this._idMap) this._idMap = {};
            g.createComp(e, this, this);
            if (e.animations) {
                var t = [];
                var i = e.animations;
                var n = 0,
                s = i.length;
                var a;
                var r;
                for (n = 0; n < s; n++) {
                    a = new m;
                    r = i[n];
                    a._setUp(this._idMap, r);
                    this[r.name] = a;
                    a._setControlNode(this);
                    switch (r.action) {
                    case 1:
                        a.play(0, false);
                        break;
                    case 2:
                        a.play(0, true);
                        break
                    }
                    t.push(a)
                }
                this._aniList = t
            }
            if (this._width > 0 && e.props.hitTestPrior == null && !this.mouseThrough) this.hitTestPrior = true
        };
        t.onEvent = function(e, t) {};
        t.loadUI = function(e) {
            var t = g.uiMap[e];
            t && this.createView(t)
        };
        t.destroy = function(e) {
            e === void 0 && (e = true);
            if (this._aniList) this._aniList.length = 0;
            this._idMap = null;
            this._aniList = null;
            this._watchMap = null;
            laya.ui.Component.prototype.destroy.call(this, e)
        };
        t.changeData = function(e) {
            var t = this._watchMap[e];
            if (!t) return;
            console.log("change", e);
            for (var i = 0,
            n = t.length; i < n; i++) {
                var s = t[i];
                s.exe(this)
            }
        };
        g._regs = function() {
            for (var e in g.uiClassMap) {
                _.regClass(e, g.uiClassMap[e])
            }
        };
        g.createComp = function(e, t, i, n) {
            t = t || g.getCompInstance(e);
            if (!t) {
                console.warn("can not create:" + e.type);
                return null
            }
            var s = e.child;
            if (s) {
                var a = t instanceof laya.ui.List;
                for (var r = 0,
                o = s.length; r < o; r++) {
                    var l = s[r];
                    if (t.hasOwnProperty("itemRender") && (l.props.name == "render" || l.props.renderType === "render")) {
                        t.itemRender = l
                    } else if (l.type == "Graphic") {
                        _.addGraphicsToSprite(l, t)
                    } else if (_.isDrawType(l.type)) {
                        _.addGraphicToSprite(l, t, true)
                    } else {
                        if (a) {
                            var h = [];
                            var u = g.createComp(l, null, i, h);
                            if (h.length) u["_$bindData"] = h
                        } else {
                            u = g.createComp(l, null, i, n)
                        }
                        if (l.type == "Script") {
                            if ("owner" in u) {
                                u["owner"] = t
                            } else if ("target" in u) {
                                u["target"] = t
                            }
                        } else if (l.props.renderType == "mask" || l.props.name == "mask") {
                            t.mask = u
                        } else {
                            u instanceof laya.display.Sprite && t.addChild(u)
                        }
                    }
                }
            }
            var c = e.props;
            for (var f in c) {
                var d = c[f];
                if (g.eventDic[f]) {
                    if (d && i) {
                        t.on(f, i, i.onEvent, [d])
                    }
                } else g.setCompValue(t, f, d, i, n)
            }
            if (p.__typeof(t, "laya.ui.IItem")) t.initItems();
            if (e.compId && i && i._idMap) {
                i._idMap[e.compId] = t
            }
            return t
        };
        g.setCompValue = function(e, t, i, n, s) {
            if (typeof i == "string" && i.indexOf("${") > -1) {
                g._sheet || (g._sheet = _.getClass("laya.data.Table"));
                if (!g._sheet) {
                    console.warn("Can not find class Sheet");
                    return
                }
                if (s) {
                    s.push(e, t, i)
                } else if (n) {
                    if (i.indexOf("].") == -1) {
                        i = i.replace(".", "[0].")
                    }
                    var a = new d(e, t, i);
                    a.exe(n);
                    var r, o;
                    var l = i.replace(/\[.*?\]\./g, ".");
                    while ((r = g._parseWatchData.exec(l)) != null) {
                        var h = r[1];
                        while ((o = g._parseKeyWord.exec(h)) != null) {
                            var u = o[0];
                            var c = n._watchMap[u] || (n._watchMap[u] = []);
                            c.push(a);
                            g._sheet.I.notifer.on(u, n, n.changeData, [u])
                        }
                        c = n._watchMap[h] || (n._watchMap[h] = []);
                        c.push(a);
                        g._sheet.I.notifer.on(h, n, n.changeData, [h])
                    }
                }
                return
            }
            if (t === "var" && n) {
                n[i] = e
            } else if (t == "onClick") {
                var f = p._runScript("(function(){" + i + "})");
                e.on("click", n, f)
            } else {
                e[t] = i === "true" ? true: i === "false" ? false: i
            }
        };
        g.getCompInstance = function(e) {
            var t = e.props ? e.props.runtime: null;
            var i;
            i = t ? g.viewClassMap[t] || g.uiClassMap[t] || p["__classmap"][t] : g.uiClassMap[e.type];
            if (e.props && e.props.hasOwnProperty("renderType") && e.props["renderType"] == "instance") return i["instance"];
            return i ? new i: null
        };
        g.regComponent = function(e, t) {
            g.uiClassMap[e] = t;
            _.regClass(e, t)
        };
        g.regViewRuntime = function(e, t) {
            g.viewClassMap[e] = t
        };
        g.uiMap = {};
        g.viewClassMap = {};
        g._sheet = null;
        n(g, ["uiClassMap",
        function() {
            return this.uiClassMap = {
                ViewStack: de,
                LinkButton: Y,
                TextArea: be,
                ColorPicker: X,
                Box: H,
                Button: Y,
                CheckBox: ne,
                Clip: j,
                ComboBox: J,
                Component: q,
                HScrollBar: oe,
                HSlider: he,
                Image: W,
                Label: Q,
                List: re,
                Panel: le,
                ProgressBar: Z,
                Radio: ce,
                RadioGroup: Se,
                ScrollBar: $,
                Slider: K,
                Tab: Ce,
                TextInput: pe,
                View: g,
                VScrollBar: ge,
                VSlider: _e,
                Tree: fe,
                HBox: ve,
                VBox: Ie,
                Sprite: T,
                Animation: l,
                Text: k,
                FontClip: ae
            }
        },
        "eventDic",
        function() {
            return this.eventDic = {
                mousedown: true,
                mouseup: true,
                mousemove: true,
                mouseover: true,
                mouseout: true,
                click: true,
                doubleclick: true,
                rightmousedown: true,
                rightmouseup: true,
                rightclick: true
            }
        },
        "_parseWatchData",
        function() {
            return this._parseWatchData = /\${(.*?)}/g
        },
        "_parseKeyWord",
        function() {
            return this._parseKeyWord = /[a-zA-Z_][a-zA-Z0-9_]*(?:(?:\.[a-zA-Z_][a-zA-Z0-9_]*)+)/g
        }]);
        g.__init$ = function() {
            g._regs();
            d = function() {
                function e(e, t, i) {
                    this.comp = null;
                    this.prop = null;
                    this.value = null;
                    this.comp = e;
                    this.prop = t;
                    this.value = i
                }
                a(e, "");
                var t = e.prototype;
                t.exe = function(e) {
                    var t = N.getBindFun(this.value);
                    this.comp[this.prop] = t.call(this, e)
                };
                return e
            } ()
        };
        return g
    } (H);
    var ne = function(e) {
        function i(e, t) {
            t === void 0 && (t = "");
            i.__super.call(this, e, t)
        }
        a(i, "laya.ui.CheckBox", e);
        var t = i.prototype;
        t.preinitialize = function() {
            laya.ui.Component.prototype.preinitialize.call(this);
            this.toggle = true;
            this._autoSize = false
        };
        t.initialize = function() {
            e.prototype.initialize.call(this);
            this.createText();
            this._text.align = "left";
            this._text.valign = "top";
            this._text.width = 0
        };
        s(0, t, "dataSource", e.prototype._$get_dataSource,
        function(e) {
            this._dataSource = e;
            if (typeof e == "boolean") this.selected = e;
            else if (typeof e == "string") this.selected = e === "true";
            else p.superSet(Y, this, "dataSource", e)
        });
        return i
    } (Y);
    var se = function(e) {
        function t() {
            this._space = 0;
            this._align = "none";
            this._itemChanged = false;
            t.__super.call(this)
        }
        a(t, "laya.ui.LayoutBox", e);
        var i = t.prototype;
        i.addChild = function(e) {
            e.on("resize", this, this.onResize);
            this._setItemChanged();
            return laya.display.Node.prototype.addChild.call(this, e)
        };
        i.onResize = function(e) {
            this._setItemChanged()
        };
        i.addChildAt = function(e, t) {
            e.on("resize", this, this.onResize);
            this._setItemChanged();
            return laya.display.Node.prototype.addChildAt.call(this, e, t)
        };
        i.removeChildAt = function(e) {
            this.getChildAt(e).off("resize", this, this.onResize);
            this._setItemChanged();
            return laya.display.Node.prototype.removeChildAt.call(this, e)
        };
        i.refresh = function() {
            this._setItemChanged()
        };
        i.changeItems = function() {
            this._itemChanged = false
        };
        i.sortItem = function(e) {
            if (e) e.sort(function(e, t) {
                return e.y - t.y
            })
        };
        i._setItemChanged = function() {
            if (!this._itemChanged) {
                this._itemChanged = true;
                this.callLater(this.changeItems)
            }
        };
        s(0, i, "space",
        function() {
            return this._space
        },
        function(e) {
            this._space = e;
            this._setItemChanged()
        });
        s(0, i, "align",
        function() {
            return this._align
        },
        function(e) {
            this._align = e;
            this._setItemChanged()
        });
        return t
    } (H);
    var ae = function(t) {
        function i(e, t) {
            this._valueArr = null;
            this._indexMap = null;
            this._sheet = null;
            this._direction = "horizontal";
            this._spaceX = 0;
            this._spaceY = 0;
            this._align = "left";
            this._wordsW = 0;
            this._wordsH = 0;
            i.__super.call(this);
            if (e) this.skin = e;
            if (t) this.sheet = t
        }
        a(i, "laya.ui.FontClip", t);
        var e = i.prototype;
        e.createChildren = function() {
            this._bitmap = new O;
            this.on("loaded", this, this._onClipLoaded)
        };
        e._onClipLoaded = function() {
            this.callLater(this.changeValue)
        };
        e.changeValue = function() {
            if (!this._sources) return;
            if (!this._valueArr) return;
            this.graphics.clear(true);
            var e;
            e = this._sources[0];
            if (!e) return;
            var t = this._direction === "horizontal";
            if (t) {
                this._wordsW = this._valueArr.length * (e.sourceWidth + this.spaceX);
                this._wordsH = e.sourceHeight
            } else {
                this._wordsW = e.sourceWidth;
                this._wordsH = (e.sourceHeight + this.spaceY) * this._valueArr.length
            }
            var i = 0;
            if (this._width) {
                switch (this._align) {
                case "center":
                    i = .5 * (this._width - this._wordsW);
                    break;
                case "right":
                    i = this._width - this._wordsW;
                    break;
                default:
                    i = 0
                }
            }
            for (var n = 0,
            s = this._valueArr.length; n < s; n++) {
                var a = this._indexMap[this._valueArr.charAt(n)];
                if (!this.sources[a]) continue;
                e = this.sources[a];
                if (t) this.graphics.drawTexture(e, i + n * (e.sourceWidth + this.spaceX), 0, e.sourceWidth, e.sourceHeight);
                else this.graphics.drawTexture(e, 0 + i, n * (e.sourceHeight + this.spaceY), e.sourceWidth, e.sourceHeight)
            }
            if (!this._width) {
                this.resetLayoutX();
                this.callLater(this.changeSize)
            }
            if (!this._height) {
                this.resetLayoutY();
                this.callLater(this.changeSize)
            }
        };
        e.destroy = function(e) {
            e === void 0 && (e = true);
            this._valueArr = null;
            this._indexMap = null;
            this.graphics.clear(true);
            this.removeSelf();
            this.off("loaded", this, this._onClipLoaded);
            t.prototype.destroy.call(this, e)
        };
        s(0, e, "sheet",
        function() {
            return this._sheet
        },
        function(e) {
            e += "";
            this._sheet = e;
            var t = e.split(" ");
            this._clipX = String(t[0]).length;
            this.clipY = t.length;
            this._indexMap = {};
            for (var i = 0; i < this._clipY; i++) {
                var n = t[i].split("");
                for (var s = 0,
                a = n.length; s < a; s++) {
                    this._indexMap[n[s]] = i * this._clipX + s
                }
            }
        });
        s(0, e, "height", t.prototype._$get_height,
        function(e) {
            p.superSet(j, this, "height", e);
            this.callLater(this.changeValue)
        });
        s(0, e, "direction",
        function() {
            return this._direction
        },
        function(e) {
            this._direction = e;
            this.callLater(this.changeValue)
        });
        s(0, e, "value",
        function() {
            if (!this._valueArr) return "";
            return this._valueArr
        },
        function(e) {
            e += "";
            this._valueArr = e;
            this.callLater(this.changeValue)
        });
        s(0, e, "width", t.prototype._$get_width,
        function(e) {
            p.superSet(j, this, "width", e);
            this.callLater(this.changeValue)
        });
        s(0, e, "spaceX",
        function() {
            return this._spaceX
        },
        function(e) {
            this._spaceX = e;
            if (this._direction === "horizontal") this.callLater(this.changeValue)
        });
        s(0, e, "spaceY",
        function() {
            return this._spaceY
        },
        function(e) {
            this._spaceY = e;
            if (! (this._direction === "horizontal")) this.callLater(this.changeValue)
        });
        s(0, e, "align",
        function() {
            return this._align
        },
        function(e) {
            this._align = e;
            this.callLater(this.changeValue)
        });
        s(0, e, "measureWidth",
        function() {
            return this._wordsW
        });
        s(0, e, "measureHeight",
        function() {
            return this._wordsH
        });
        return i
    } (j);
    var re = function(e) {
        function t() {
            this.selectHandler = null;
            this.renderHandler = null;
            this.mouseHandler = null;
            this.selectEnable = false;
            this.totalPage = 0;
            this._content = null;
            this._scrollBar = null;
            this._itemRender = null;
            this._repeatX = 0;
            this._repeatY = 0;
            this._repeatX2 = 0;
            this._repeatY2 = 0;
            this._spaceX = 0;
            this._spaceY = 0;
            this._array = null;
            this._startIndex = 0;
            this._selectedIndex = -1;
            this._page = 0;
            this._isVertical = true;
            this._cellSize = 20;
            this._cellOffset = 0;
            this._isMoved = false;
            this.cacheContent = false;
            this._createdLine = 0;
            this._cellChanged = false;
            this._cells = [];
            this._offset = new x;
            t.__super.call(this)
        }
        a(t, "laya.ui.List", e);
        var i = t.prototype;
        p.imps(i, {
            "laya.ui.IRender": true,
            "laya.ui.IItem": true
        });
        i.destroy = function(e) {
            e === void 0 && (e = true);
            this._content && this._content.destroy(e);
            this._scrollBar && this._scrollBar.destroy(e);
            laya.ui.Component.prototype.destroy.call(this, e);
            this._content = null;
            this._scrollBar = null;
            this._itemRender = null;
            this._cells = null;
            this._array = null;
            this.selectHandler = this.renderHandler = this.mouseHandler = null
        };
        i.createChildren = function() {
            this.addChild(this._content = new H)
        };
        i.onScrollStart = function() {
            this._$P.cacheAs || (this._$P.cacheAs = p.superGet(H, this, "cacheAs"));
            p.superSet(H, this, "cacheAs", "none");
            this._scrollBar.once("end", this, this.onScrollEnd)
        };
        i.onScrollEnd = function() {
            p.superSet(H, this, "cacheAs", this._$P.cacheAs)
        };
        i._removePreScrollBar = function() {
            var e = this.removeChildByName("scrollBar");
            if (e) e.destroy(true)
        };
        i.changeCells = function() {
            this._cellChanged = false;
            if (this._itemRender) {
                this.scrollBar = this.getChildByName("scrollBar");
                var e = this._getOneCell();
                var t = e.width + this._spaceX || 1;
                var i = e.height + this._spaceY || 1;
                if (this._width > 0) this._repeatX2 = this._isVertical ? Math.round(this._width / t) : Math.ceil(this._width / t);
                if (this._height > 0) this._repeatY2 = this._isVertical ? Math.ceil(this._height / i) : Math.round(this._height / i);
                var n = this._width ? this._width: t * this.repeatX - this._spaceX;
                var s = this._height ? this._height: i * this.repeatY - this._spaceY;
                this._cellSize = this._isVertical ? i: t;
                this._cellOffset = this._isVertical ? i * Math.max(this._repeatY2, this._repeatY) - s - this._spaceY: t * Math.max(this._repeatX2, this._repeatX) - n - this._spaceX;
                if (this._isVertical && this._scrollBar) this._scrollBar.height = s;
                else if (!this._isVertical && this._scrollBar) this._scrollBar.width = n;
                this.setContentSize(n, s);
                var a = this._isVertical ? this.repeatX: this.repeatY;
                var r = (this._isVertical ? this.repeatY: this.repeatX) + (this._scrollBar ? 1 : 0);
                this._createItems(0, a, r);
                this._createdLine = r;
                if (this._array) {
                    this.array = this._array;
                    this.runCallLater(this.renderItems)
                }
            }
        };
        i._getOneCell = function() {
            if (this._cells.length === 0) {
                var e = this.createItem();
                this._offset.setTo(e.x, e.y);
                if (this.cacheContent) return e;
                this._cells.push(e)
            }
            return this._cells[0]
        };
        i._createItems = function(e, t, i) {
            var n = this._content;
            var s = this._getOneCell();
            var a = s.width + this._spaceX;
            var r = s.height + this._spaceY;
            if (this.cacheContent) {
                var o = new H;
                o.cacheAsBitmap = true;
                o.pos((this._isVertical ? 0 : e) * a, (this._isVertical ? e: 0) * r);
                this._content.addChild(o);
                this._content.optimizeScrollRect = true;
                n = o
            } else {
                var l = [];
                for (var h = this._cells.length - 1; h > -1; h--) {
                    var u = this._cells[h];
                    u.removeSelf();
                    l.push(u)
                }
                this._cells.length = 0
            }
            for (var c = e; c < i; c++) {
                for (var f = 0; f < t; f++) {
                    if (l && l.length) {
                        s = l.pop()
                    } else {
                        s = this.createItem()
                    }
                    s.x = (this._isVertical ? f: c) * a - n.x;
                    s.y = (this._isVertical ? c: f) * r - n.y;
                    s.name = "item" + (c * t + f);
                    n.addChild(s);
                    this.addCell(s)
                }
            }
        };
        i.createItem = function() {
            var e = [];
            if (typeof this._itemRender == "function") {
                var t = new this._itemRender
            } else {
                t = ie.createComp(this._itemRender, null, null, e)
            }
            if (e.length == 0 && t._watchMap) {
                var i = t._watchMap;
                for (var n in i) {
                    var s = i[n];
                    for (var a = 0; a < s.length; a++) {
                        var r = s[a];
                        e.push(r.comp, r.prop, r.value)
                    }
                }
            }
            if (e.length) t["_$bindData"] = e;
            return t
        };
        i.addCell = function(e) {
            e.on("click", this, this.onCellMouse);
            e.on("rightclick", this, this.onCellMouse);
            e.on("mouseover", this, this.onCellMouse);
            e.on("mouseout", this, this.onCellMouse);
            e.on("mousedown", this, this.onCellMouse);
            e.on("mouseup", this, this.onCellMouse);
            this._cells.push(e)
        };
        i.initItems = function() {
            if (!this._itemRender && this.getChildByName("item0") != null) {
                this.repeatX = 1;
                var e = 0;
                e = 0;
                for (var t = 0; t < 1e4; t++) {
                    var i = this.getChildByName("item" + t);
                    if (i) {
                        this.addCell(i);
                        e++;
                        continue
                    }
                    break
                }
                this.repeatY = e
            }
        };
        i.setContentSize = function(e, t) {
            this._content.width = e;
            this._content.height = t;
            if (this._scrollBar || this._offset.x != 0 || this._offset.y != 0) {
                this._content.scrollRect || (this._content.scrollRect = new R);
                this._content.scrollRect.setTo( - this._offset.x, -this._offset.y, e, t);
                this._content.scrollRect = this._content.scrollRect
            }
            this.event("resize")
        };
        i.onCellMouse = function(e) {
            if (e.type === "mousedown") this._isMoved = false;
            var t = e.currentTarget;
            var i = this._startIndex + this._cells.indexOf(t);
            if (i < 0) return;
            if (e.type === "click" || e.type === "rightclick") {
                if (this.selectEnable && !this._isMoved) this.selectedIndex = i;
                else this.changeCellState(t, true, 0)
            } else if ((e.type === "mouseover" || e.type === "mouseout") && this._selectedIndex !== i) {
                this.changeCellState(t, e.type === "mouseover", 0)
            }
            this.mouseHandler && this.mouseHandler.runWith([e, i])
        };
        i.changeCellState = function(e, t, i) {
            var n = e.getChildByName("selectBox");
            if (n) {
                this.selectEnable = true;
                n.visible = t;
                n.index = i
            }
        };
        i.changeSize = function() {
            laya.ui.Component.prototype.changeSize.call(this);
            this.setContentSize(this.width, this.height);
            if (this._scrollBar) this.callLater(this.onScrollBarChange)
        };
        i.onScrollBarChange = function(e) {
            this.runCallLater(this.changeCells);
            var t = this._scrollBar.value;
            var i = this._isVertical ? this.repeatX: this.repeatY;
            var n = this._isVertical ? this.repeatY: this.repeatX;
            var s = Math.floor(t / this._cellSize);
            if (!this.cacheContent) {
                var a = s * i;
                var r = 0;
                if (a > this._startIndex) {
                    r = a - this._startIndex;
                    var o = true;
                    var l = this._startIndex + i * (n + 1);
                    this._isMoved = true
                } else if (a < this._startIndex) {
                    r = this._startIndex - a;
                    o = false;
                    l = this._startIndex - 1;
                    this._isMoved = true
                }
                for (var h = 0; h < r; h++) {
                    if (o) {
                        var u = this._cells.shift();
                        this._cells[this._cells.length] = u;
                        var c = l + h
                    } else {
                        u = this._cells.pop();
                        this._cells.unshift(u);
                        c = l - h
                    }
                    var f = Math.floor(c / i) * this._cellSize;
                    this._isVertical ? u.y = f: u.x = f;
                    this.renderItem(u, c)
                }
                this._startIndex = a;
                this.changeSelectStatus()
            } else {
                r = n + 1;
                if (this._createdLine - s < r) {
                    this._createItems(this._createdLine, i, this._createdLine + r);
                    this.renderItems(this._createdLine * i, 0);
                    this._createdLine += r
                }
            }
            var d = this._content.scrollRect;
            if (this._isVertical) {
                d.y = t - this._offset.y;
                d.x = -this._offset.x
            } else {
                d.y = -this._offset.y;
                d.x = t - this._offset.x
            }
            this._content.scrollRect = d
        };
        i.posCell = function(e, t) {
            if (!this._scrollBar) return;
            var i = this._isVertical ? this.repeatX: this.repeatY;
            var n = this._isVertical ? this.repeatY: this.repeatX;
            var s = Math.floor(t / i) * this._cellSize;
            this._isVertical ? e.y = s: e.x = s
        };
        i.changeSelectStatus = function() {
            for (var e = 0,
            t = this._cells.length; e < t; e++) {
                this.changeCellState(this._cells[e], this._selectedIndex === this._startIndex + e, 1)
            }
        };
        i.renderItems = function(e, t) {
            e === void 0 && (e = 0);
            t === void 0 && (t = 0);
            for (var i = e,
            n = t || this._cells.length; i < n; i++) {
                this.renderItem(this._cells[i], this._startIndex + i)
            }
            this.changeSelectStatus()
        };
        i.renderItem = function(e, t) {
            if (this._array && t >= 0 && t < this._array.length) {
                e.visible = true;
                if (e._$bindData) {
                    e._dataSource = this._array[t];
                    this._bindData(e, this._array[t])
                } else e.dataSource = this._array[t];
                if (!this.cacheContent) {
                    this.posCell(e, t)
                }
                if (this.hasListener("render")) this.event("render", [e, t]);
                if (this.renderHandler) this.renderHandler.runWith([e, t])
            } else {
                e.visible = false;
                e.dataSource = null
            }
        };
        i._bindData = function(e, t) {
            var i = e._$bindData;
            for (var n = 0,
            s = i.length; n < s; n++) {
                var a = i[n++];
                var r = i[n++];
                var o = i[n];
                var l = N.getBindFun(o);
                a[r] = l.call(this, t)
            }
        };
        i.refresh = function() {
            this.array = this._array
        };
        i.getItem = function(e) {
            if (e > -1 && e < this._array.length) {
                return this._array[e]
            }
            return null
        };
        i.changeItem = function(e, t) {
            if (e > -1 && e < this._array.length) {
                this._array[e] = t;
                if (e >= this._startIndex && e < this._startIndex + this._cells.length) {
                    this.renderItem(this.getCell(e), e)
                }
            }
        };
        i.setItem = function(e, t) {
            this.changeItem(e, t)
        };
        i.addItem = function(e) {
            this._array.push(e);
            this.array = this._array
        };
        i.addItemAt = function(e, t) {
            this._array.splice(t, 0, e);
            this.array = this._array
        };
        i.deleteItem = function(e) {
            this._array.splice(e, 1);
            this.array = this._array
        };
        i.getCell = function(e) {
            this.runCallLater(this.changeCells);
            if (e > -1 && this._cells) {
                return this._cells[(e - this._startIndex) % this._cells.length]
            }
            return null
        };
        i.scrollTo = function(e) {
            if (this._scrollBar) {
                var t = this._isVertical ? this.repeatX: this.repeatY;
                this._scrollBar.value = Math.floor(e / t) * this._cellSize
            } else {
                this.startIndex = e
            }
        };
        i.tweenTo = function(e, t, i) {
            t === void 0 && (t = 200);
            if (this._scrollBar) {
                var n = this._isVertical ? this.repeatX: this.repeatY;
                B.to(this._scrollBar, {
                    value: Math.floor(e / n) * this._cellSize
                },
                t, null, i, 0, true)
            } else {
                this.startIndex = e;
                if (i) i.run()
            }
        };
        i._setCellChanged = function() {
            if (!this._cellChanged) {
                this._cellChanged = true;
                this.callLater(this.changeCells)
            }
        };
        i.commitMeasure = function() {
            this.runCallLater(this.changeCells)
        };
        s(0, i, "cacheAs", e.prototype._$get_cacheAs,
        function(e) {
            p.superSet(H, this, "cacheAs", e);
            if (this._scrollBar) {
                this._$P.cacheAs = null;
                if (e !== "none") this._scrollBar.on("start", this, this.onScrollStart);
                else this._scrollBar.off("start", this, this.onScrollStart)
            }
        });
        s(0, i, "content",
        function() {
            return this._content
        });
        s(0, i, "height", e.prototype._$get_height,
        function(e) {
            if (e != this._height) {
                p.superSet(H, this, "height", e);
                this._setCellChanged()
            }
        });
        s(0, i, "itemRender",
        function() {
            return this._itemRender
        },
        function(e) {
            if (this._itemRender != e) {
                this._itemRender = e;
                for (var t = this._cells.length - 1; t > -1; t--) {
                    this._cells[t].destroy()
                }
                this._cells.length = 0;
                this._setCellChanged()
            }
        });
        s(0, i, "vScrollBarSkin",
        function() {
            return this._scrollBar ? this._scrollBar.skin: null
        },
        function(e) {
            this._removePreScrollBar();
            var t = new ge;
            t.name = "scrollBar";
            t.right = 0;
            if (e && e != " ") t.skin = e;
            this.scrollBar = t;
            this.addChild(t);
            this._setCellChanged()
        });
        s(0, i, "page",
        function() {
            return this._page
        },
        function(e) {
            this._page = e;
            if (this._array) {
                this._page = e > 0 ? e: 0;
                this._page = this._page < this.totalPage ? this._page: this.totalPage - 1;
                this.startIndex = this._page * this.repeatX * this.repeatY
            }
        });
        s(0, i, "hScrollBarSkin",
        function() {
            return this._scrollBar ? this._scrollBar.skin: null
        },
        function(e) {
            this._removePreScrollBar();
            var t = new oe;
            t.name = "scrollBar";
            t.bottom = 0;
            if (e && e != " ") t.skin = e;
            this.scrollBar = t;
            this.addChild(t);
            this._setCellChanged()
        });
        s(0, i, "repeatX",
        function() {
            return this._repeatX > 0 ? this._repeatX: this._repeatX2 > 0 ? this._repeatX2: 1
        },
        function(e) {
            this._repeatX = e;
            this._setCellChanged()
        });
        s(0, i, "scrollBar",
        function() {
            return this._scrollBar
        },
        function(e) {
            if (this._scrollBar != e) {
                this._scrollBar = e;
                if (e) {
                    this._isVertical = this._scrollBar.isVertical;
                    this.addChild(this._scrollBar);
                    this._scrollBar.on("change", this, this.onScrollBarChange)
                }
            }
        });
        s(0, i, "width", e.prototype._$get_width,
        function(e) {
            if (e != this._width) {
                p.superSet(H, this, "width", e);
                this._setCellChanged()
            }
        });
        s(0, i, "repeatY",
        function() {
            return this._repeatY > 0 ? this._repeatY: this._repeatY2 > 0 ? this._repeatY2: 1
        },
        function(e) {
            this._repeatY = e;
            this._setCellChanged()
        });
        s(0, i, "spaceX",
        function() {
            return this._spaceX
        },
        function(e) {
            this._spaceX = e;
            this._setCellChanged()
        });
        s(0, i, "spaceY",
        function() {
            return this._spaceY
        },
        function(e) {
            this._spaceY = e;
            this._setCellChanged()
        });
        s(0, i, "selectedIndex",
        function() {
            return this._selectedIndex
        },
        function(e) {
            if (this._selectedIndex != e) {
                this._selectedIndex = e;
                this.changeSelectStatus();
                this.event("change");
                this.selectHandler && this.selectHandler.runWith(e);
                this.startIndex = this._startIndex
            }
        });
        s(0, i, "selectedItem",
        function() {
            return this._selectedIndex != -1 ? this._array[this._selectedIndex] : null
        },
        function(e) {
            this.selectedIndex = this._array.indexOf(e)
        });
        s(0, i, "length",
        function() {
            return this._array ? this._array.length: 0
        });
        s(0, i, "selection",
        function() {
            return this.getCell(this._selectedIndex)
        },
        function(e) {
            this.selectedIndex = this._startIndex + this._cells.indexOf(e)
        });
        s(0, i, "startIndex",
        function() {
            return this._startIndex
        },
        function(e) {
            this._startIndex = e > 0 ? e: 0;
            this.callLater(this.renderItems)
        });
        s(0, i, "array",
        function() {
            return this._array
        },
        function(e) {
            this.runCallLater(this.changeCells);
            this._array = e || [];
            var t = this._array.length;
            this.totalPage = Math.ceil(t / (this.repeatX * this.repeatY));
            this._selectedIndex = this._selectedIndex < t ? this._selectedIndex: t - 1;
            this.startIndex = this._startIndex;
            if (this._scrollBar) {
                this._scrollBar.stopScroll();
                var i = this._isVertical ? this.repeatX: this.repeatY;
                var n = this._isVertical ? this.repeatY: this.repeatX;
                var s = Math.ceil(t / i);
                var a = this._cellOffset > 0 ? this.totalPage + 1 : this.totalPage;
                if (a > 1) {
                    this._scrollBar.scrollSize = this._cellSize;
                    this._scrollBar.thumbPercent = n / s;
                    this._scrollBar.setScroll(0, (s - n) * this._cellSize + this._cellOffset, this._scrollBar.value);
                    this._scrollBar.target = this._content
                } else {
                    this._scrollBar.setScroll(0, 0, 0);
                    this._scrollBar.target = this._content
                }
            }
        });
        s(0, i, "dataSource", e.prototype._$get_dataSource,
        function(e) {
            this._dataSource = e;
            if (typeof e == "number" && Math.floor(e) == e || typeof e == "string") this.selectedIndex = parseInt(e);
            else if (e instanceof Array) this.array = e;
            else p.superSet(H, this, "dataSource", e)
        });
        s(0, i, "cells",
        function() {
            this.runCallLater(this.changeCells);
            return this._cells
        });
        return t
    } (H);
    var oe = function(e) {
        function t() {
            t.__super.call(this)
        }
        a(t, "laya.ui.HScrollBar", e);
        var i = t.prototype;
        i.initialize = function() {
            e.prototype.initialize.call(this);
            this.slider.isVertical = false
        };
        return t
    } ($);
    var le = function(e) {
        function t() {
            this._content = null;
            this._vScrollBar = null;
            this._hScrollBar = null;
            this._scrollChanged = false;
            t.__super.call(this);
            this.width = this.height = 100
        }
        a(t, "laya.ui.Panel", e);
        var i = t.prototype;
        i.destroy = function(e) {
            e === void 0 && (e = true);
            laya.ui.Component.prototype.destroy.call(this, e);
            this._content && this._content.destroy(e);
            this._vScrollBar && this._vScrollBar.destroy(e);
            this._hScrollBar && this._hScrollBar.destroy(e);
            this._vScrollBar = null;
            this._hScrollBar = null;
            this._content = null
        };
        i.destroyChildren = function() {
            this._content.destroyChildren()
        };
        i.createChildren = function() {
            laya.display.Node.prototype.addChild.call(this, this._content = new H)
        };
        i.addChild = function(e) {
            e.on("resize", this, this.onResize);
            this._setScrollChanged();
            return this._content.addChild(e)
        };
        i.onResize = function() {
            this._setScrollChanged()
        };
        i.addChildAt = function(e, t) {
            e.on("resize", this, this.onResize);
            this._setScrollChanged();
            return this._content.addChildAt(e, t)
        };
        i.removeChild = function(e) {
            e.off("resize", this, this.onResize);
            this._setScrollChanged();
            return this._content.removeChild(e)
        };
        i.removeChildAt = function(e) {
            this.getChildAt(e).off("resize", this, this.onResize);
            this._setScrollChanged();
            return this._content.removeChildAt(e)
        };
        i.removeChildren = function(e, t) {
            e === void 0 && (e = 0);
            t === void 0 && (t = 2147483647);
            this._content.removeChildren(e, t);
            this._setScrollChanged();
            return this
        };
        i.getChildAt = function(e) {
            return this._content.getChildAt(e)
        };
        i.getChildByName = function(e) {
            return this._content.getChildByName(e)
        };
        i.getChildIndex = function(e) {
            return this._content.getChildIndex(e)
        };
        i.changeScroll = function() {
            this._scrollChanged = false;
            var e = this.contentWidth || 1;
            var t = this.contentHeight || 1;
            var i = this._vScrollBar;
            var n = this._hScrollBar;
            var s = i && t > this._height;
            var a = n && e > this._width;
            var r = s ? this._width - i.width: this._width;
            var o = a ? this._height - n.height: this._height;
            if (i) {
                i.x = this._width - i.width;
                i.y = 0;
                i.height = this._height - (a ? n.height: 0);
                i.scrollSize = Math.max(this._height * .033, 1);
                i.thumbPercent = o / t;
                i.setScroll(0, t - o, i.value)
            }
            if (n) {
                n.x = 0;
                n.y = this._height - n.height;
                n.width = this._width - (s ? i.width: 0);
                n.scrollSize = Math.max(this._width * .033, 1);
                n.thumbPercent = r / e;
                n.setScroll(0, e - r, n.value)
            }
        };
        i.changeSize = function() {
            laya.ui.Component.prototype.changeSize.call(this);
            this.setContentSize(this._width, this._height)
        };
        i.setContentSize = function(e, t) {
            var i = this._content;
            i.width = e;
            i.height = t;
            i.scrollRect || (i.scrollRect = new R);
            i.scrollRect.setTo(0, 0, e, t);
            i.scrollRect = i.scrollRect
        };
        i.onScrollBarChange = function(e) {
            var t = this._content.scrollRect;
            if (t) {
                var i = Math.round(e.value);
                e.isVertical ? t.y = i: t.x = i;
                this._content.scrollRect = t
            }
        };
        i.scrollTo = function(e, t) {
            e === void 0 && (e = 0);
            t === void 0 && (t = 0);
            if (this.vScrollBar) this.vScrollBar.value = t;
            if (this.hScrollBar) this.hScrollBar.value = e
        };
        i.refresh = function() {
            this.changeScroll()
        };
        i.onScrollStart = function() {
            this._$P.cacheAs || (this._$P.cacheAs = p.superGet(H, this, "cacheAs"));
            p.superSet(H, this, "cacheAs", "none");
            this._hScrollBar && this._hScrollBar.once("end", this, this.onScrollEnd);
            this._vScrollBar && this._vScrollBar.once("end", this, this.onScrollEnd)
        };
        i.onScrollEnd = function() {
            p.superSet(H, this, "cacheAs", this._$P.cacheAs)
        };
        i._setScrollChanged = function() {
            if (!this._scrollChanged) {
                this._scrollChanged = true;
                this.callLater(this.changeScroll)
            }
        };
        s(0, i, "numChildren",
        function() {
            return this._content.numChildren
        });
        s(0, i, "hScrollBarSkin",
        function() {
            return this._hScrollBar ? this._hScrollBar.skin: null
        },
        function(e) {
            if (this._hScrollBar == null) {
                laya.display.Node.prototype.addChild.call(this, this._hScrollBar = new oe);
                this._hScrollBar.on("change", this, this.onScrollBarChange, [this._hScrollBar]);
                this._hScrollBar.target = this._content;
                this._setScrollChanged()
            }
            this._hScrollBar.skin = e
        });
        s(0, i, "contentWidth",
        function() {
            var e = 0;
            for (var t = this._content.numChildren - 1; t > -1; t--) {
                var i = this._content.getChildAt(t);
                e = Math.max(i.x + i.width * i.scaleX, e)
            }
            return e
        });
        s(0, i, "contentHeight",
        function() {
            var e = 0;
            for (var t = this._content.numChildren - 1; t > -1; t--) {
                var i = this._content.getChildAt(t);
                e = Math.max(i.y + i.height * i.scaleY, e)
            }
            return e
        });
        s(0, i, "width", e.prototype._$get_width,
        function(e) {
            p.superSet(H, this, "width", e);
            this._setScrollChanged()
        });
        s(0, i, "hScrollBar",
        function() {
            return this._hScrollBar
        });
        s(0, i, "content",
        function() {
            return this._content
        });
        s(0, i, "height", e.prototype._$get_height,
        function(e) {
            p.superSet(H, this, "height", e);
            this._setScrollChanged()
        });
        s(0, i, "vScrollBarSkin",
        function() {
            return this._vScrollBar ? this._vScrollBar.skin: null
        },
        function(e) {
            if (this._vScrollBar == null) {
                laya.display.Node.prototype.addChild.call(this, this._vScrollBar = new ge);
                this._vScrollBar.on("change", this, this.onScrollBarChange, [this._vScrollBar]);
                this._vScrollBar.target = this._content;
                this._setScrollChanged()
            }
            this._vScrollBar.skin = e
        });
        s(0, i, "vScrollBar",
        function() {
            return this._vScrollBar
        });
        s(0, i, "cacheAs", e.prototype._$get_cacheAs,
        function(e) {
            p.superSet(H, this, "cacheAs", e);
            this._$P.cacheAs = null;
            if (e !== "none") {
                this._hScrollBar && this._hScrollBar.on("start", this, this.onScrollStart);
                this._vScrollBar && this._vScrollBar.on("start", this, this.onScrollStart)
            } else {
                this._hScrollBar && this._hScrollBar.off("start", this, this.onScrollStart);
                this._vScrollBar && this._vScrollBar.off("start", this, this.onScrollStart)
            }
        });
        return t
    } (H);
    var he = function(e) {
        function t(e) {
            t.__super.call(this, e);
            this.isVertical = false
        }
        a(t, "laya.ui.HSlider", e);
        return t
    } (K);
    var ue = function(e) {
        function i(e, t) {
            this.selectHandler = null;
            this._items = null;
            this._selectedIndex = -1;
            this._skin = null;
            this._direction = "horizontal";
            this._space = 0;
            this._labels = null;
            this._labelColors = null;
            this._labelFont = null;
            this._labelStrokeColor = null;
            this._strokeColors = null;
            this._labelStroke = NaN;
            this._labelSize = 0;
            this._labelBold = false;
            this._labelPadding = null;
            this._labelAlign = null;
            this._stateNum = 0;
            this._labelChanged = false;
            i.__super.call(this);
            this.skin = t;
            this.labels = e
        }
        a(i, "laya.ui.UIGroup", e);
        var t = i.prototype;
        p.imps(t, {
            "laya.ui.IItem": true
        });
        t.preinitialize = function() {
            this.mouseEnabled = true
        };
        t.destroy = function(e) {
            e === void 0 && (e = true);
            laya.ui.Component.prototype.destroy.call(this, e);
            this._items && (this._items.length = 0);
            this._items = null;
            this.selectHandler = null
        };
        t.addItem = function(e, t) {
            t === void 0 && (t = true);
            var i = e;
            var n = this._items.length;
            i.name = "item" + n;
            this.addChild(i);
            this.initItems();
            if (t && n > 0) {
                var s = this._items[n - 1];
                if (this._direction == "horizontal") {
                    i.x = s.x + s.width + this._space
                } else {
                    i.y = s.y + s.height + this._space
                }
            } else {
                if (t) {
                    i.x = 0;
                    i.y = 0
                }
            }
            return n
        };
        t.delItem = function(e, t) {
            t === void 0 && (t = true);
            var i = this._items.indexOf(e);
            if (i != -1) {
                var n = e;
                this.removeChild(n);
                for (var s = i + 1,
                a = this._items.length; s < a; s++) {
                    var r = this._items[s];
                    r.name = "item" + (s - 1);
                    if (t) {
                        if (this._direction == "horizontal") {
                            r.x -= n.width + this._space
                        } else {
                            r.y -= n.height + this._space
                        }
                    }
                }
                this.initItems();
                if (this._selectedIndex > -1) {
                    var o = 0;
                    o = this._selectedIndex < this._items.length ? this._selectedIndex: this._selectedIndex - 1;
                    this._selectedIndex = -1;
                    this.selectedIndex = o
                }
            }
        };
        t.initItems = function() {
            this._items || (this._items = []);
            this._items.length = 0;
            for (var e = 0; e < 1e4; e++) {
                var t = this.getChildByName("item" + e);
                if (t == null) break;
                this._items.push(t);
                t.selected = e === this._selectedIndex;
                t.clickHandler = y.create(this, this.itemClick, [e], false)
            }
        };
        t.itemClick = function(e) {
            this.selectedIndex = e
        };
        t.setSelect = function(e, t) {
            if (this._items && e > -1 && e < this._items.length) this._items[e].selected = t
        };
        t.createItem = function(e, t) {
            return null
        };
        t.changeLabels = function() {
            this._labelChanged = false;
            if (this._items) {
                var e = 0;
                for (var t = 0,
                i = this._items.length; t < i; t++) {
                    var n = this._items[t];
                    this._skin && (n.skin = this._skin);
                    this._labelColors && (n.labelColors = this._labelColors);
                    this._labelSize && (n.labelSize = this._labelSize);
                    this._labelStroke && (n.labelStroke = this._labelStroke);
                    this._labelStrokeColor && (n.labelStrokeColor = this._labelStrokeColor);
                    this._strokeColors && (n.strokeColors = this._strokeColors);
                    this._labelBold && (n.labelBold = this._labelBold);
                    this._labelPadding && (n.labelPadding = this._labelPadding);
                    this._labelAlign && (n.labelAlign = this._labelAlign);
                    this._stateNum && (n.stateNum = this._stateNum);
                    this._labelFont && (n.labelFont = this._labelFont);
                    if (this._direction === "horizontal") {
                        n.y = 0;
                        n.x = e;
                        e += n.width + this._space
                    } else {
                        n.x = 0;
                        n.y = e;
                        e += n.height + this._space
                    }
                }
            }
            this.changeSize()
        };
        t.commitMeasure = function() {
            this.runCallLater(this.changeLabels)
        };
        t._setLabelChanged = function() {
            if (!this._labelChanged) {
                this._labelChanged = true;
                this.callLater(this.changeLabels)
            }
        };
        s(0, t, "labelStrokeColor",
        function() {
            return this._labelStrokeColor
        },
        function(e) {
            if (this._labelStrokeColor != e) {
                this._labelStrokeColor = e;
                this._setLabelChanged()
            }
        });
        s(0, t, "skin",
        function() {
            return this._skin
        },
        function(e) {
            if (this._skin != e) {
                this._skin = e;
                this._setLabelChanged()
            }
        });
        s(0, t, "selectedIndex",
        function() {
            return this._selectedIndex
        },
        function(e) {
            if (this._selectedIndex != e) {
                this.setSelect(this._selectedIndex, false);
                this._selectedIndex = e;
                this.setSelect(e, true);
                this.event("change");
                this.selectHandler && this.selectHandler.runWith(this._selectedIndex)
            }
        });
        s(0, t, "labels",
        function() {
            return this._labels
        },
        function(e) {
            if (this._labels != e) {
                this._labels = e;
                this.removeChildren();
                this._setLabelChanged();
                if (this._labels) {
                    var t = this._labels.split(",");
                    for (var i = 0,
                    n = t.length; i < n; i++) {
                        var s = this.createItem(this._skin, t[i]);
                        s.name = "item" + i;
                        this.addChild(s)
                    }
                }
                this.initItems()
            }
        });
        s(0, t, "strokeColors",
        function() {
            return this._strokeColors
        },
        function(e) {
            if (this._strokeColors != e) {
                this._strokeColors = e;
                this._setLabelChanged()
            }
        });
        s(0, t, "labelColors",
        function() {
            return this._labelColors
        },
        function(e) {
            if (this._labelColors != e) {
                this._labelColors = e;
                this._setLabelChanged()
            }
        });
        s(0, t, "labelStroke",
        function() {
            return this._labelStroke
        },
        function(e) {
            if (this._labelStroke != e) {
                this._labelStroke = e;
                this._setLabelChanged()
            }
        });
        s(0, t, "labelSize",
        function() {
            return this._labelSize
        },
        function(e) {
            if (this._labelSize != e) {
                this._labelSize = e;
                this._setLabelChanged()
            }
        });
        s(0, t, "stateNum",
        function() {
            return this._stateNum
        },
        function(e) {
            if (this._stateNum != e) {
                this._stateNum = e;
                this._setLabelChanged()
            }
        });
        s(0, t, "labelBold",
        function() {
            return this._labelBold
        },
        function(e) {
            if (this._labelBold != e) {
                this._labelBold = e;
                this._setLabelChanged()
            }
        });
        s(0, t, "labelFont",
        function() {
            return this._labelFont
        },
        function(e) {
            if (this._labelFont != e) {
                this._labelFont = e;
                this._setLabelChanged()
            }
        });
        s(0, t, "labelPadding",
        function() {
            return this._labelPadding
        },
        function(e) {
            if (this._labelPadding != e) {
                this._labelPadding = e;
                this._setLabelChanged()
            }
        });
        s(0, t, "direction",
        function() {
            return this._direction
        },
        function(e) {
            this._direction = e;
            this._setLabelChanged()
        });
        s(0, t, "space",
        function() {
            return this._space
        },
        function(e) {
            this._space = e;
            this._setLabelChanged()
        });
        s(0, t, "items",
        function() {
            return this._items
        });
        s(0, t, "selection",
        function() {
            return this._selectedIndex > -1 && this._selectedIndex < this._items.length ? this._items[this._selectedIndex] : null
        },
        function(e) {
            this.selectedIndex = this._items.indexOf(e)
        });
        s(0, t, "dataSource", e.prototype._$get_dataSource,
        function(e) {
            this._dataSource = e;
            if (typeof e == "number" && Math.floor(e) == e || typeof e == "string") this.selectedIndex = parseInt(e);
            else if (e instanceof Array) this.labels = e.join(",");
            else p.superSet(H, this, "dataSource", e)
        });
        return i
    } (H);
    var ce = function(t) {
        function i(e, t) {
            this._value = null;
            t === void 0 && (t = "");
            i.__super.call(this, e, t)
        }
        a(i, "laya.ui.Radio", t);
        var e = i.prototype;
        e.destroy = function(e) {
            e === void 0 && (e = true);
            t.prototype.destroy.call(this, e);
            this._value = null
        };
        e.preinitialize = function() {
            laya.ui.Component.prototype.preinitialize.call(this);
            this.toggle = false;
            this._autoSize = false
        };
        e.initialize = function() {
            t.prototype.initialize.call(this);
            this.createText();
            this._text.align = "left";
            this._text.valign = "top";
            this._text.width = 0;
            this.on("click", this, this.onClick)
        };
        e.onClick = function(e) {
            this.selected = true
        };
        s(0, e, "value",
        function() {
            return this._value != null ? this._value: this.label
        },
        function(e) {
            this._value = e
        });
        return i
    } (Y);
    var fe = function(e) {
        function t() {
            this._list = null;
            this._source = null;
            this._renderHandler = null;
            this._spaceLeft = 10;
            this._spaceBottom = 0;
            this._keepStatus = true;
            t.__super.call(this);
            this.width = this.height = 200
        }
        a(t, "laya.ui.Tree", e);
        var i = t.prototype;
        p.imps(i, {
            "laya.ui.IRender": true
        });
        i.destroy = function(e) {
            e === void 0 && (e = true);
            laya.ui.Component.prototype.destroy.call(this, e);
            this._list && this._list.destroy(e);
            this._list = null;
            this._source = null;
            this._renderHandler = null
        };
        i.createChildren = function() {
            this.addChild(this._list = new re);
            this._list.renderHandler = y.create(this, this.renderItem, null, false);
            this._list.repeatX = 1;
            this._list.on("change", this, this.onListChange)
        };
        i.onListChange = function(e) {
            this.event("change")
        };
        i.getArray = function() {
            var e = [];
            var t;
            for (var i in this._source) {
                t = this._source[i];
                if (this.getParentOpenStatus(t)) {
                    t.x = this._spaceLeft * this.getDepth(t);
                    e.push(t)
                }
            }
            return e
        };
        i.getDepth = function(e, t) {
            t === void 0 && (t = 0);
            if (e.nodeParent == null) return t;
            else return this.getDepth(e.nodeParent, t + 1)
        };
        i.getParentOpenStatus = function(e) {
            var t = e.nodeParent;
            if (t == null) {
                return true
            } else {
                if (t.isOpen) {
                    if (t.nodeParent != null) return this.getParentOpenStatus(t);
                    else return true
                } else {
                    return false
                }
            }
        };
        i.renderItem = function(e, t) {
            var i = e.dataSource;
            if (i) {
                e.left = i.x;
                var n = e.getChildByName("arrow");
                if (n) {
                    if (i.hasChild) {
                        n.visible = true;
                        n.index = i.isOpen ? 1 : 0;
                        n.tag = t;
                        n.off("click", this, this.onArrowClick);
                        n.on("click", this, this.onArrowClick)
                    } else {
                        n.visible = false
                    }
                }
                var s = e.getChildByName("folder");
                if (s) {
                    if (s.clipY == 2) {
                        s.index = i.isDirectory ? 0 : 1
                    } else {
                        s.index = i.isDirectory ? i.isOpen ? 1 : 0 : 2
                    }
                }
                this._renderHandler && this._renderHandler.runWith([e, t])
            }
        };
        i.onArrowClick = function(e) {
            var t = e.currentTarget;
            var i = t.tag;
            this._list.array[i].isOpen = !this._list.array[i].isOpen;
            this.event("open");
            this._list.array = this.getArray()
        };
        i.setItemState = function(e, t) {
            if (!this._list.array[e]) return;
            this._list.array[e].isOpen = t;
            this._list.array = this.getArray()
        };
        i.fresh = function() {
            this._list.array = this.getArray();
            this.repaint()
        };
        i.parseXml = function(e, t, i, n) {
            var s;
            var a = e.childNodes;
            var r = a.length;
            if (!n) {
                s = {};
                var o = e.attributes;
                var l;
                for (var h in o) {
                    l = o[h];
                    var u = l.nodeName;
                    var c = l.nodeValue;
                    s[u] = c == "true" ? true: c == "false" ? false: c
                }
                s.nodeParent = i;
                if (r > 0) s.isDirectory = true;
                s.hasChild = r > 0;
                t.push(s)
            }
            for (var f = 0; f < r; f++) {
                var d = a[f];
                this.parseXml(d, t, s, false)
            }
        };
        i.parseOpenStatus = function(e, t) {
            for (var i = 0,
            n = t.length; i < n; i++) {
                var s = t[i];
                if (s.isDirectory) {
                    for (var a = 0,
                    r = e.length; a < r; a++) {
                        var o = e[a];
                        if (o.isDirectory && this.isSameParent(o, s) && s.label == o.label) {
                            s.isOpen = o.isOpen;
                            break
                        }
                    }
                }
            }
        };
        i.isSameParent = function(e, t) {
            if (e.nodeParent == null && t.nodeParent == null) return true;
            else if (e.nodeParent == null || t.nodeParent == null) return false;
            else {
                if (e.nodeParent.label == t.nodeParent.label) return this.isSameParent(e.nodeParent, t.nodeParent);
                else return false
            }
        };
        i.filter = function(e) {
            if (Boolean(e)) {
                var t = [];
                this.getFilterSource(this._source, t, e);
                this._list.array = t
            } else {
                this._list.array = this.getArray()
            }
        };
        i.getFilterSource = function(e, t, i) {
            i = i.toLocaleLowerCase();
            var n;
            for (var s in e) {
                n = e[s];
                if (!n.isDirectory && String(n.label).toLowerCase().indexOf(i) > -1) {
                    n.x = 0;
                    t.push(n)
                }
                if (n.child && n.child.length > 0) {
                    this.getFilterSource(n.child, t, i)
                }
            }
        };
        s(0, i, "spaceBottom",
        function() {
            return this._list.spaceY
        },
        function(e) {
            this._list.spaceY = e
        });
        s(0, i, "keepStatus",
        function() {
            return this._keepStatus
        },
        function(e) {
            this._keepStatus = e
        });
        s(0, i, "itemRender",
        function() {
            return this._list.itemRender
        },
        function(e) {
            this._list.itemRender = e
        });
        s(0, i, "array",
        function() {
            return this._list.array
        },
        function(e) {
            if (this._keepStatus && this._list.array && e) {
                this.parseOpenStatus(this._list.array, e)
            }
            this._source = e;
            this._list.array = this.getArray()
        });
        s(0, i, "mouseHandler",
        function() {
            return this._list.mouseHandler
        },
        function(e) {
            this._list.mouseHandler = e
        });
        s(0, i, "dataSource", e.prototype._$get_dataSource,
        function(e) {
            this._dataSource = e;
            p.superSet(H, this, "dataSource", e)
        });
        s(0, i, "source",
        function() {
            return this._source
        });
        s(0, i, "scrollBar",
        function() {
            return this._list.scrollBar
        });
        s(0, i, "list",
        function() {
            return this._list
        });
        s(0, i, "scrollBarSkin",
        function() {
            return this._list.vScrollBarSkin
        },
        function(e) {
            this._list.vScrollBarSkin = e
        });
        s(0, i, "renderHandler",
        function() {
            return this._renderHandler
        },
        function(e) {
            this._renderHandler = e
        });
        s(0, i, "selectedIndex",
        function() {
            return this._list.selectedIndex
        },
        function(e) {
            this._list.selectedIndex = e
        });
        s(0, i, "spaceLeft",
        function() {
            return this._spaceLeft
        },
        function(e) {
            this._spaceLeft = e
        });
        s(0, i, "selectedItem",
        function() {
            return this._list.selectedItem
        },
        function(e) {
            this._list.selectedItem = e
        });
        s(0, i, "width", e.prototype._$get_width,
        function(e) {
            p.superSet(H, this, "width", e);
            this._list.width = e
        });
        s(0, i, "height", e.prototype._$get_height,
        function(e) {
            p.superSet(H, this, "height", e);
            this._list.height = e
        });
        s(0, i, "xml", null,
        function(e) {
            var t = [];
            this.parseXml(e.childNodes[0], t, null, true);
            this.array = t
        });
        s(0, i, "selectedPath",
        function() {
            if (this._list.selectedItem) {
                return this._list.selectedItem.path
            }
            return null
        });
        return t
    } (H);
    var de = function(e) {
        function t() {
            this._items = null;
            this._selectedIndex = 0;
            t.__super.call(this);
            this._setIndexHandler = y.create(this, this.setIndex, null, false)
        }
        a(t, "laya.ui.ViewStack", e);
        var i = t.prototype;
        p.imps(i, {
            "laya.ui.IItem": true
        });
        i.setItems = function(e) {
            this.removeChildren();
            var t = 0;
            for (var i = 0,
            n = e.length; i < n; i++) {
                var s = e[i];
                if (s) {
                    s.name = "item" + t;
                    this.addChild(s);
                    t++
                }
            }
            this.initItems()
        };
        i.addItem = function(e) {
            e.name = "item" + this._items.length;
            this.addChild(e);
            this.initItems()
        };
        i.initItems = function() {
            this._items = [];
            for (var e = 0; e < 1e4; e++) {
                var t = this.getChildByName("item" + e);
                if (t == null) {
                    break
                }
                this._items.push(t);
                t.visible = e == this._selectedIndex
            }
        };
        i.setSelect = function(e, t) {
            if (this._items && e > -1 && e < this._items.length) {
                this._items[e].visible = t
            }
        };
        i.setIndex = function(e) {
            this.selectedIndex = e
        };
        s(0, i, "dataSource", e.prototype._$get_dataSource,
        function(e) {
            this._dataSource = e;
            if (typeof e == "number" && Math.floor(e) == e || typeof e == "string") {
                this.selectedIndex = parseInt(e)
            } else {
                for (var t in this._dataSource) {
                    if (this.hasOwnProperty(t)) {
                        this[t] = this._dataSource[t]
                    }
                }
            }
        });
        s(0, i, "selectedIndex",
        function() {
            return this._selectedIndex
        },
        function(e) {
            if (this._selectedIndex != e) {
                this.setSelect(this._selectedIndex, false);
                this._selectedIndex = e;
                this.setSelect(this._selectedIndex, true)
            }
        });
        s(0, i, "selection",
        function() {
            return this._selectedIndex > -1 && this._selectedIndex < this._items.length ? this._items[this._selectedIndex] : null
        },
        function(e) {
            this.selectedIndex = this._items.indexOf(e)
        });
        s(0, i, "items",
        function() {
            return this._items
        });
        s(0, i, "setIndexHandler",
        function() {
            return this._setIndexHandler
        },
        function(e) {
            this._setIndexHandler = e
        });
        return t
    } (H);
    var ge = function(e) {
        function t() {
            t.__super.call(this)
        }
        a(t, "laya.ui.VScrollBar", e);
        return t
    } ($);
    var pe = function(t) {
        function i(e) {
            this._bg = null;
            this._skin = null;
            i.__super.call(this);
            e === void 0 && (e = "");
            this.text = e;
            this.skin = this.skin
        }
        a(i, "laya.ui.TextInput", t);
        var e = i.prototype;
        e.preinitialize = function() {
            this.mouseEnabled = true
        };
        e.destroy = function(e) {
            e === void 0 && (e = true);
            t.prototype.destroy.call(this, e);
            this._bg && this._bg.destroy();
            this._bg = null
        };
        e.createChildren = function() {
            this.addChild(this._tf = new S);
            this._tf.padding = E.inputLabelPadding;
            this._tf.on("input", this, this._onInput);
            this._tf.on("enter", this, this._onEnter);
            this._tf.on("blur", this, this._onBlur);
            this._tf.on("focus", this, this._onFocus)
        };
        e._onFocus = function() {
            this.event("focus", this)
        };
        e._onBlur = function() {
            this.event("blur", this)
        };
        e._onInput = function() {
            this.event("input", this)
        };
        e._onEnter = function() {
            this.event("enter", this)
        };
        e.initialize = function() {
            this.width = 128;
            this.height = 22
        };
        e.select = function() {
            this._tf.select()
        };
        e.setSelection = function(e, t) {
            this._tf.setSelection(e, t)
        };
        s(0, e, "text", t.prototype._$get_text,
        function(e) {
            if (this._tf.text != e) {
                e = e + "";
                this._tf.text = e;
                this.event("change")
            }
        });
        s(0, e, "bg",
        function() {
            return this._bg
        },
        function(e) {
            this.graphics = this._bg = e
        });
        s(0, e, "inputElementYAdjuster",
        function() {
            return this._tf.inputElementYAdjuster
        },
        function(e) {
            this._tf.inputElementYAdjuster = e
        });
        s(0, e, "multiline",
        function() {
            return this._tf.multiline
        },
        function(e) {
            this._tf.multiline = e
        });
        s(0, e, "skin",
        function() {
            return this._skin
        },
        function(e) {
            if (this._skin != e) {
                this._skin = e;
                this._bg || (this.graphics = this._bg = new O);
                this._bg.source = C.getRes(this._skin);
                this._width && (this._bg.width = this._width);
                this._height && (this._bg.height = this._height)
            }
        });
        s(0, e, "sizeGrid",
        function() {
            return this._bg && this._bg.sizeGrid ? this._bg.sizeGrid.join(",") : null
        },
        function(e) {
            this._bg || (this.graphics = this._bg = new O);
            this._bg.sizeGrid = N.fillArray(E.defaultSizeGrid, e, Number)
        });
        s(0, e, "inputElementXAdjuster",
        function() {
            return this._tf.inputElementXAdjuster
        },
        function(e) {
            this._tf.inputElementXAdjuster = e
        });
        s(0, e, "width", t.prototype._$get_width,
        function(e) {
            p.superSet(Q, this, "width", e);
            this._bg && (this._bg.width = e)
        });
        s(0, e, "height", t.prototype._$get_height,
        function(e) {
            p.superSet(Q, this, "height", e);
            this._bg && (this._bg.height = e)
        });
        s(0, e, "editable",
        function() {
            return this._tf.editable
        },
        function(e) {
            this._tf.editable = e
        });
        s(0, e, "restrict",
        function() {
            return this._tf.restrict
        },
        function(e) {
            this._tf.restrict = e
        });
        s(0, e, "prompt",
        function() {
            return this._tf.prompt
        },
        function(e) {
            this._tf.prompt = e
        });
        s(0, e, "promptColor",
        function() {
            return this._tf.promptColor
        },
        function(e) {
            this._tf.promptColor = e
        });
        s(0, e, "maxChars",
        function() {
            return this._tf.maxChars
        },
        function(e) {
            this._tf.maxChars = e
        });
        s(0, e, "focus",
        function() {
            return this._tf.focus
        },
        function(e) {
            this._tf.focus = e
        });
        s(0, e, "type",
        function() {
            return this._tf.type
        },
        function(e) {
            this._tf.type = e
        });
        s(0, e, "asPassword",
        function() {
            return this._tf.asPassword
        },
        function(e) {
            this._tf.asPassword = e
        });
        return i
    } (Q);
    var _e = function(e) {
        function t() {
            t.__super.call(this)
        }
        a(t, "laya.ui.VSlider", e);
        return t
    } (K);
    var me = function(e) {
        function n() {
            this.popupCenter = true;
            this.closeHandler = null;
            this.popupEffect = null;
            this.closeEffect = null;
            this.group = null;
            this.isModal = false;
            this._dragArea = null;
            n.__super.call(this)
        }
        a(n, "laya.ui.Dialog", e);
        var t = n.prototype;
        t.initialize = function() {
            this.popupEffect = n.manager.popupEffectHandler;
            this.closeEffect = n.manager.closeEffectHandler;
            this._dealDragArea();
            this.on("click", this, this._onClick)
        };
        t._dealDragArea = function() {
            var e = this.getChildByName("drag");
            if (e) {
                this.dragArea = e.x + "," + e.y + "," + e.width + "," + e.height;
                e.removeSelf()
            }
        };
        t._onClick = function(e) {
            var t = e.target;
            if (t) {
                switch (t.name) {
                case "close":
                case "cancel":
                case "sure":
                case "no":
                case "ok":
                case "yes":
                    this.close(t.name);
                    break
                }
            }
        };
        t.show = function(e, t) {
            e === void 0 && (e = false);
            t === void 0 && (t = true);
            this._open(false, e, t)
        };
        t.popup = function(e, t) {
            e === void 0 && (e = false);
            t === void 0 && (t = true);
            this._open(true, e, t)
        };
        t._open = function(e, t, i) {
            n.manager.lock(false);
            this.isModal = e;
            n.manager.open(this, t, i)
        };
        t.onOpened = function() {};
        t.close = function(e, t) {
            t === void 0 && (t = true);
            n.manager.close(this, e, t)
        };
        t.onClosed = function(e) {};
        t._onMouseDown = function(e) {
            var t = this.getMousePoint();
            if (this._dragArea.contains(t.x, t.y)) this.startDrag();
            else this.stopDrag()
        };
        s(0, t, "dragArea",
        function() {
            if (this._dragArea) return this._dragArea.toString();
            return null
        },
        function(e) {
            if (e) {
                var t = N.fillArray([0, 0, 0, 0], e, Number);
                this._dragArea = new R(t[0], t[1], t[2], t[3]);
                this.on("mousedown", this, this._onMouseDown)
            } else {
                this._dragArea = null;
                this.off("mousedown", this, this._onMouseDown)
            }
        });
        s(0, t, "isPopup",
        function() {
            return this.parent != null
        });
        s(0, t, "zOrder", e.prototype._$get_zOrder,
        function(e) {
            p.superSet(ie, this, "zOrder", e);
            n.manager._checkMask()
        });
        s(1, n, "manager",
        function() {
            return n._manager = n._manager || new z
        },
        function(e) {
            n._manager = e
        });
        n.setLockView = function(e) {
            n.manager.setLockView(e)
        };
        n.lock = function(e) {
            n.manager.lock(e)
        };
        n.closeAll = function() {
            n.manager.closeAll()
        };
        n.getDialogsByGroup = function(e) {
            return n.manager.getDialogsByGroup(e)
        };
        n.closeByGroup = function(e) {
            return n.manager.closeByGroup(e)
        };
        n.CLOSE = "close";
        n.CANCEL = "cancel";
        n.SURE = "sure";
        n.NO = "no";
        n.OK = "ok";
        n.YES = "yes";
        n._manager = null;
        return n
    } (ie);
    var ve = function(e) {
        function t() {
            t.__super.call(this)
        }
        a(t, "laya.ui.HBox", e);
        var i = t.prototype;
        i.sortItem = function(e) {
            if (e) e.sort(function(e, t) {
                return e.x - t.x
            })
        };
        i.changeItems = function() {
            this._itemChanged = false;
            var e = [];
            var t = 0;
            for (var i = 0,
            n = this.numChildren; i < n; i++) {
                var s = this.getChildAt(i);
                if (s && s.layoutEnabled) {
                    e.push(s);
                    t = this._height ? this._height: Math.max(t, s.height * s.scaleY)
                }
            }
            this.sortItem(e);
            var a = 0;
            for (i = 0, n = e.length; i < n; i++) {
                s = e[i];
                s.x = a;
                a += s.width * s.scaleX + this._space;
                if (this._align == "top") {
                    s.y = 0
                } else if (this._align == "middle") {
                    s.y = (t - s.height * s.scaleY) * .5
                } else if (this._align == "bottom") {
                    s.y = t - s.height * s.scaleY
                }
            }
            this.changeSize()
        };
        s(0, i, "height", e.prototype._$get_height,
        function(e) {
            if (this._height != e) {
                p.superSet(se, this, "height", e);
                this.callLater(this.changeItems)
            }
        });
        t.NONE = "none";
        t.TOP = "top";
        t.MIDDLE = "middle";
        t.BOTTOM = "bottom";
        return t
    } (se);
    var ye = function(e) {
        var u, h;
        function c(e) {
            this.gameStopHD = false;
            this.iconImgTl = null;
            this._iconImage = null;
            this._moreBox = null;
            this._gameBox = null;
            this.screenType = 0;
            this._moreGameDataUrl = "https://abc.layabox.com/public/more/gamelist2.json";
            this._iconImageObj = null;
            this.clickCallBack = null;
            this.closeCallBack = null;
            this.isShow = false;
            this.dinfo = null;
            this.ErrorUrlHttps = "https://elastic.layabox.com/";
            this.tongjiType = "bdm";
            e === void 0 && (e = 0);
            c.__super.call(this);
            this.screenType = e;
            this.init()
        }
        a(c, "laya.ui.MoreGame", e);
        var t = c.prototype;
        t.getLocalDateString = function(e) {
            e === void 0 && (e = 0);
            var t = this.getDateByTimestamp(e).toLocaleDateString();
            if (f.onLimixiu || f.onMiniGame) {
                var i = new Date;
                t = c.toLocaleDateString(i.getTime())
            }
            var n = new RegExp("/", "g");
            t = t.replace(n, "-");
            return t
        };
        t.getDateByTimestamp = function(e) {
            e === void 0 && (e = 0);
            if (!e || e == "") return new Date;
            return new Date(e)
        };
        t.reportError = function(e, t, i) {
            t === void 0 && (t = "");
            i = i || {};
            var n = Date.now();
            var s = new Date(n + 0);
            i.date = s.toLocaleString();
            i.etype = e;
            if (e != "error") {
                if (e != "statistics") {
                    e = "statistics"
                }
            }
            i.version = "V0.0.1";
            i.gameId = 10100;
            i.dinfo = this.dinfo;
            i.channel = -1e3;
            i.msg = t;
            i["@timestamp"] = s.toISOString();
            i.user = this.getUserId();
            i.openid = this.getOpenId();
            var a = c.getDay(s);
            i.rdate = a;
            i.day = s.getDate() + "";
            i.hour = s.getHours() + "";
            i.minute = s.getMinutes() + "";
            i.gameurl = r.baseURI;
            i.regTime = 0;
            if (e == "error") {
                this.sendLog(i, this.tongjiType + "error-" + a.substring(0, 6) + "/" + e + "/", e)
            } else {
                this.sendLog(i, this.tongjiType + "-" + a.substring(0, 6) + "/" + e + "/", e)
            }
        };
        t.getUserId = function() {
            var e = parseInt(b.getItem("layauserid") + "") || -1;
            if (e == -1) {
                e = this.randRange(0, 1e9);
                b.setItem("layauserid", e + "")
            }
            return e
        };
        t.getOpenId = function() {
            var e = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
            var t = b.getItem("openid");
            if (t == null || t == "") {
                t = "";
                for (var i = 0,
                n = 32; i < n; i++) {
                    var s = this.randRange(0, 62);
                    t += e.charAt(s)
                }
                b.setItem("openid", t)
            }
            return t
        };
        t.sendLog = function(e, t, i) {
            var s = this;
            var n = new I;
            n.on("error", this,
            function(e, t, i) {
                if (i && i.indexOf("[404]") != -1) {
                    var n = new I;
                    n.send(s.ErrorUrlHttps + "garbage/" + t + "/", JSON.stringify(e), "post", "text", ["Content-Type", "application/json"])
                }
            },
            [e, i]);
            if (f.onBDMiniGame) {
                e.gameurl = ""
            }
            n.send(this.ErrorUrlHttps + t, JSON.stringify(e), "post", "text", ["Content-Type", "application/json"])
        };
        t.initEvent = function() {
            this.on("click", this, this.onIconClick)
        };
        t.onStageResize = function() {
            var e = Math.min(p.stage.width / p.stage.designWidth, p.stage.height / p.stage.designHeight);
            if (p.stage.width < 720) e = .9;
            if (this._moreBox) {
                this._moreBox.scale(e, e)
            }
            if (this._gameBox) {
                this._gameBox.scale(e, e)
            }
        };
        t.tada = function(e, t, i, n) {
            i === void 0 && (i = 1.1);
            n === void 0 && (n = 1);
            var s = new M;
            s.reset();
            s.to(e, {
                scaleX: i,
                scaleY: i,
                rotation: 3
            },
            t * .1).to(e, {
                scaleX: i,
                scaleY: i,
                rotation: -3
            },
            t * .1).to(e, {
                scaleX: i,
                scaleY: i,
                rotation: 3
            },
            t * .1).to(e, {
                scaleX: i,
                scaleY: i,
                rotation: -3
            },
            t * .1).to(e, {
                scaleX: i,
                scaleY: i,
                rotation: 3
            },
            t * .1).to(e, {
                scaleX: i,
                scaleY: i,
                rotation: -3
            },
            t * .1).to(e, {
                scaleX: i,
                scaleY: i,
                rotation: 3
            },
            t * .1).to(e, {
                scaleX: i,
                scaleY: i,
                rotation: -3
            },
            t * .1).to(e, {
                scaleX: i,
                scaleY: i,
                rotation: 3
            },
            t * .1).to(e, {
                scaleX: n,
                scaleY: n,
                rotation: 0
            },
            t * .1);
            s.play(0);
            return s
        };
        t.dispose = function() {
            this.removeEvent();
            this.gameStopHD = true;
            c._moreGameData = null;
            this._iconImageObj = null;
            this.clickCallBack = null;
            this.closeCallBack = null;
            if (this.iconImgTl) {
                this.iconImgTl.offAll("complete");
                this.iconImgTl = null
            }
            if (this._moreBox) {
                this._moreBox.removeChildren();
                this._moreBox = null
            }
            if (this._gameBox) {
                this._gameBox.removeChildren();
                this._gameBox = null
            }
            if (this._iconImage) {
                this._iconImage.removeSelf();
                this._iconImage = null
            }
        };
        t.onSetIconType = function(e) {
            this.gameStopHD = !e;
            this.visible = e
        };
        t.checkIconImgHD = function() {
            if (!this.iconImgTl) this.iconImgTl = this.tada(this._iconImage, 1200, 1.1, .9);
            else this.iconImgTl.play(0);
            this.iconImgTl.on("complete", this, this.onTlComplete)
        };
        t.onTlComplete = function() {
            if (this.parent) {
                this._iconImage.scale(.9, .9);
                this._iconImage.rotation = 0;
                if (this.gameStopHD && this.iconImgTl) {
                    this.iconImgTl.offAll("complete");
                    this.iconImgTl = null;
                    return
                }
                p.timer.once(1e3, this, this.onYanChiPlay)
            } else {
                if (this.iconImgTl) {
                    this.iconImgTl.offAll();
                    this.iconImgTl = null
                }
            }
        };
        t.onYanChiPlay = function() {
            if (this.parent && this.iconImgTl) {
                this.iconImgTl.play(0)
            } else {
                if (this.iconImgTl) {
                    this.iconImgTl.offAll("complete");
                    this.iconImgTl = null
                }
            }
        };
        t.removeEvent = function() {
            this.off("click", this, this.onIconClick)
        };
        t.onIconClick = function() {
            this.isShow = true;
            this.clickCallBack != null && this.clickCallBack.run();
            var e = b.getItem("currentTime");
            var t = this.getLocalDateString();
            if (e != t) {
                b.setItem("currentTime", t);
                this.reportError(c._moreGameData.statid1)
            } else {
                this.reportError(c._moreGameData.statid2)
            }
            this.onResLoaded()
        };
        t.onResLoaded = function() {
            if (!this._moreBox) {
                this._moreBox = new H;
                p.stage.addChild(this._moreBox);
                this._moreBox.zOrder = 99999;
                this._moreBox.left = this._moreBox.right = this._moreBox.top = this._moreBox.bottom = 0;
                var e = this.onCreateImage(c.onGetAtlasDanImgUrl("img_white_bg"), this._moreBox);
                e.top = e.left = e.right = e.bottom = 0;
                e.sizeGrid = "1,1,1,1,1";
                var t = this.onCreateImage(c.onGetAtlasDanImgUrl("hengfengexian"), this._moreBox);
                t.left = t.right = 0;
                t.y = 132;
                t.alpha = .2;
                var i = this.onCreateImage(c.onGetAtlasDanImgUrl("img_font_jingcai"), this._moreBox);
                i.on("click", this, this.onJiantouImgClick);
                if (this.isQMP() && this.screenType) {
                    i.pos(15, 70)
                } else {
                    i.pos(15, 45)
                }
                var n = new re;
                this._moreBox.addChild(n);
                n.itemRender = u;
                n.selectEnable = true;
                n.vScrollBarSkin = "";
                n.scrollBar.autoHide = true;
                n.scrollBar.elasticDistance = 250;
                n.renderHandler = new y(this, this.onGameListRender);
                var s = c._moreGameData.marvellousGame.gameList;
                var a = [];
                a.push(s[0]);
                a.push(s[1]);
                var r = this.RandomNumBoth(a.length, s.length - a.length, s.length);
                if (!r) {
                    this.visible = false;
                    return
                }
                try {
                    for (var o = 0,
                    l = r.length; o < l; o++) {
                        var h = r[o];
                        a.push(s[h])
                    }
                    c._moreGameData.marvellousGame.gameList = [];
                    c._moreGameData.marvellousGame.gameList = a;
                    n.array = c._moreGameData.marvellousGame.gameList
                } catch(e) {
                    n.array = c._moreGameData.marvellousGame.gameList
                }
                if (this.screenType) {
                    n.spaceY = 10;
                    n.width = 690;
                    if (this.isQMP()) {
                        n.height = p.stage.height + 130
                    } else {
                        n.height = 1139
                    }
                    n.y = 139;
                    n.centerX = 0
                } else {}
                this.onStageResize()
            } else {
                this._moreBox.visible = true
            }
        };
        t.RandomNumBoth = function(e, t, i) {
            var n = [];
            for (var s = e; s < i; s++) {
                n.push(s)
            }
            var a = [];
            var r = n.length;
            for (s = 0; s < r; s++) {
                var o = n.length;
                var l = Math.floor(Math.random() * n.length);
                a.push(n[l]);
                n.splice(l, 1);
                if (n.length <= r - t) {
                    return a
                }
            }
            return null
        };
        t.isQMP = function() {
            var e = false;
            var t = 0;
            if (p.stage.screenMode == "horizontal") {
                t = f.height % 9
            } else {
                t = f.width % 9
            }
            if (f.onAndroid && t == 0) {
                var i = 0;
                if (p.stage.screenMode == "horizontal") {
                    i = f.width
                } else {
                    i = f.height
                }
                if ([2280, 2160, 2244, 3120, 2248, 2340, 2310].indexOf(i) != -1) {
                    e = true
                }
            }
            var n = /iPhone/gi.test(f.window.navigator.userAgent) && (Math.min(f.clientHeight, f.clientWidth) == 375 && Math.max(f.clientHeight, f.clientWidth) == 812);
            var s = Math.min(f.clientHeight, f.clientWidth) == 414 && Math.max(f.clientHeight, f.clientWidth) == 896;
            if ((f.onMiniGame || f.onBDMiniGame) && !f.onAndroid && (n || s)) {
                e = true
            }
            return e
        };
        t.onDrawShapes = function(e, t, i, n) {
            i === void 0 && (i = 5);
            n === void 0 && (n = false);
            var s = i;
            if (n) s = 0;
            var a = new T;
            a.graphics.drawPath(0, 0, [["moveTo", i, 0], ["lineTo", 105, 0], ["arcTo", e, 0, e, i, i], ["lineTo", e, t], ["arcTo", e, t + i, 105, t + i, s], ["lineTo", i, t + i], ["arcTo", 0, t + i, 0, t, s], ["lineTo", 0, i], ["arcTo", 0, 0, i, 0, i], ["closePath"]], {
                fillStyle: "#ff0000"
            });
            return a
        };
        t.onCreateMaskImg = function(e, t) {
            var i = this.onCreateImage(c.onGetAtlasDanImgUrl("dayuan"), t);
            var n = this.onCreateImage(e, i);
            n.pos(11, 10);
            var s = new T;
            s.graphics.drawCircle(71, 74, 68, "#ff0000");
            n.mask = s;
            i.scale(.7, .7);
            return i
        };
        t.onGameListRender = function(e, t) {
            var i = c._moreGameData.marvellousGame.gameList;
            if (t < 0 || t > i.length - 1) return;
            var n = i[t];
            e.init(n, this.screenType, new y(this, this.onItemClickCallBack))
        };
        t.onItemClickCallBack = function(i) {
            var n = this;
            if (!swan.navigateToMiniProgram) return;
            var e = i.appKey;
            var t = i.path;
            var s = i.extendInfo;
            swan.navigateToMiniProgram({
                appKey: e,
                path: t,
                extraData: s,
                success: function e(t) {},
                fail: function e(t) {},
                complete: function e(t) {
                    n.reportError(i.statid)
                }.bind(this)
            })
        };
        t.onJiantouImgClick = function(e) {
            this.isShow = false;
            if (this._moreBox) {
                this._moreBox.visible = false
            }
            this.closeCallBack != null && this.closeCallBack.run()
        };
        t.onCreateLabel = function(e, t, i, n, s, a, r) {
            i === void 0 && (i = 24);
            n === void 0 && (n = "#000000");
            s === void 0 && (s = false);
            a === void 0 && (a = "center");
            r === void 0 && (r = 10);
            var o = new Q;
            o.text = e;
            o.font = "Microsoft YaHei";
            o.fontSize = i;
            o.color = n;
            o.bold = true;
            o.leading = r;
            o.valign = "middle";
            o.align = a;
            o.wordWrap = s;
            t.addChild(o);
            return o
        };
        t.onCreateImage = function(e, t) {
            var i = new W;
            i.skin = e;
            t.addChild(i);
            return i
        };
        t.init = function() {
            var e = f.window.navigator.userAgent;
            var t = e.indexOf("SwanGame") > -1;
            this.visible = false;
            if (t) {
                this.dinfo = JSON.stringify(laya.bd.mini.BMiniAdapter.systemInfo);
                this.onGetAdvsListData()
            }
        };
        t.randRange = function(e, t) {
            return Math.floor(Math.random() * (t - e + 1)) + e
        };
        t.onGetAdvsListData = function() {
            var t = this;
            var e = this.randRange(1e4, 1e6);
            var i = this._moreGameDataUrl + "?" + e;
            c._http.open("get", i, true);
            c._http.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
            c._http.responseType = "text";
            c._http.onerror = function(e) {
                t._onError(e)
            };
            c._http.onload = function(e) {
                t._onLoad(e)
            };
            c._http.send(null)
        };
        t._onError = function(e) {
            this.error("Request failed Status:" + c._http.status + " text:" + c._http.statusText)
        };
        t._onLoad = function(e) {
            var t = c._http;
            var i = t.status !== undefined ? t.status: 200;
            if (i === 200 || i === 204 || i === 0) {
                this.complete()
            } else {
                this.error("[" + t.status + "]" + t.statusText + ":" + t.responseURL)
            }
        };
        t.error = function(e) {
            this.event("error", e)
        };
        t.complete = function() {
            var t = true;
            try {
                var e = c._http.response || c._http.responseText;
                c._moreGameData = JSON.parse(e);
                this.initUI()
            } catch(e) {
                t = false;
                this.error(e.message)
            }
        };
        t.initUI = function() {
            if (c._moreGameData.isOpen && this.screenType) {
                if (!this._iconImage) {
                    this._iconImage = new W;
                    this.addChild(this._iconImage)
                }
                this._iconImage.skin = c.onGetImgSkinUrl(c._moreGameData.icon);
                if (this._iconImageObj) {
                    this._iconImage.size(this._iconImageObj.width, this._iconImageObj.height);
                    this._iconImage.pivot(this._iconImageObj.width / 2, this._iconImageObj.height / 2);
                    this._iconImage.pos(this._iconImageObj.width / 2, this._iconImageObj.height / 2)
                }
                this.visible = true;
                this.initEvent();
                this.gameStopHD = false;
                this.checkIconImgHD()
            } else {
                this.visible = false
            }
        };
        t.setIconSize = function(e, t) {
            if (this._iconImage) {
                this._iconImage.size(e, t);
                this._iconImage.pivot(e / 2, t / 2);
                this._iconImage.pos(e / 2, t / 2)
            }
            this._iconImageObj = {
                width: e,
                height: t
            }
        };
        c.toLocaleDateString = function(e) {
            return c.getDateFormatStr(e, "/")
        };
        c.getDateFormatStr = function(e, t) {
            t === void 0 && (t = "yynndd");
            var i = new Date(e);
            var n = i.getFullYear();
            var s = i.getMonth() + 1;
            var a = i.getDate();
            var r = i.getHours();
            var o = i.getMinutes();
            var l = i.getSeconds();
            switch (t) {
            case "yynndd":
                return n.toString() + "年" + s.toString() + "月" + a.toString() + "日";
                break;
            case "/":
                return n.toString() + "/" + s.toString() + "/" + a.toString();
                break
            }
            return n.toString() + "年" + s.toString() + "月" + a.toString() + "日" + r.toString() + "时" + o.toString() + "分" + l.toString() + "秒"
        };
        c.getDay = function(e) {
            var t = e.getMonth() + 1;
            var i = e.getDate();
            var n = e.getFullYear() + "" + (t < 10 ? "0" + t: t) + "" + (i < 10 ? "0" + i: i);
            return n
        };
        c.onGetAtlasDanImgUrl = function(e) {
            return c._moreGameData.imgPath + c._moreGameData.atlas + e + ".png"
        };
        c.onGetImgSkinUrl = function(e) {
            return c._moreGameData.imgPath + e
        };
        c.onGetIconImgSkinUrl = function(e) {
            return c._moreGameData.iconPath + e
        };
        c._moreGameData = null;
        n(c, ["_http",
        function() {
            return this._http = new f.window.XMLHttpRequest
        }]);
        c.__init$ = function() {
            u = function(e) {
                function t() {
                    this.titleLabel = null;
                    this.gameListBox = null;
                    t.__super.call(this)
                }
                a(t, "", e);
                var i = t.prototype;
                i.init = function(e, t, i) {
                    if (!this.titleLabel) {
                        this.titleLabel = this.onCreateLabel(e.title, this, 32, "#3d3939");
                        this.titleLabel.pos(8, 0);
                        this.titleLabel.size(162, 50)
                    } else {
                        this.titleLabel.text = e.title
                    }
                    if (!this.gameListBox) {
                        this.gameListBox = new H;
                        this.addChild(this.gameListBox);
                        var n = 0;
                        var s = 65;
                        var a = 175;
                        for (var r = 0,
                        o = e.gameList.length; r < o; r++) {
                            var l = new h;
                            l.init(e.gameList[r], t, i);
                            l.x = n + r * a;
                            l.y = s;
                            this.gameListBox.addChild(l)
                        }
                    } else {
                        for (r = 0, o = this.gameListBox._childs.length; r < o; r++) {
                            l = this.gameListBox._childs[r];
                            l.init(e.gameList[r], t, i)
                        }
                    }
                    this.size(695, 340);
                    this.cacheAs = "bitmap"
                };
                i.onCreateLabel = function(e, t, i, n, s) {
                    i === void 0 && (i = 26);
                    n === void 0 && (n = "#000000");
                    s === void 0 && (s = true);
                    var a = new Q;
                    a.text = e;
                    a.font = "Microsoft YaHei";
                    a.fontSize = i;
                    a.color = n;
                    a.bold = s;
                    a.leading = 10;
                    a.valign = "middle";
                    a.align = "center";
                    a.overflow = "hidden";
                    t.addChild(a);
                    return a
                };
                return t
            } (H);
            h = function(e) {
                function t() {
                    this.kuangImg = null;
                    this.iconNameLabel = null;
                    this.iconImg = null;
                    this.playImg = null;
                    this.itemData = null;
                    this.callBackHandler = null;
                    t.__super.call(this)
                }
                a(t, "", e);
                var i = t.prototype;
                i.MoveGameItem = function() {};
                i.initEvent = function() {
                    this.on("click", this, this.onItemClick)
                };
                i.onItemClick = function() {
                    this.callBackHandler != null && this.callBackHandler.runWith([this.itemData])
                };
                i.init = function(e, t, i) {
                    this.itemData = e;
                    this.callBackHandler = i;
                    if (!this.kuangImg) this.kuangImg = this.onCreateImage(c.onGetAtlasDanImgUrl("dayuan"), this);
                    else {
                        this.kuangImg.skin = c.onGetAtlasDanImgUrl("dayuan")
                    }
                    if (!this.iconImg) {
                        this.iconImg = this.onCreateImage(c.onGetIconImgSkinUrl(e.icon), this);
                        var n = new T;
                        n.graphics.drawCircle(71, 74, 68, "#ff0000");
                        this.iconImg.mask = n;
                        this.iconImg.pos(13, 10)
                    } else {
                        this.iconImg.skin = c.onGetIconImgSkinUrl(e.icon)
                    }
                    if (!this.iconNameLabel) {
                        this.iconNameLabel = this.onCreateLabel(e.name, this, 28, "#3d3939");
                        this.iconNameLabel.pos(7, 165)
                    } else {
                        this.iconNameLabel.text = e.name
                    }
                    if (!this.playImg) {
                        this.playImg = this.onCreateImage(c.onGetAtlasDanImgUrl("img_play"), this);
                        this.playImg.pos(12, 210)
                    } else {
                        this.playImg.skin = c.onGetAtlasDanImgUrl("img_play")
                    }
                    this.size(165, 270);
                    this.initEvent()
                };
                i.onCreateLabel = function(e, t, i, n, s) {
                    i === void 0 && (i = 24);
                    n === void 0 && (n = "#000000");
                    s === void 0 && (s = false);
                    var a = new Q;
                    a.text = e;
                    a.font = "Microsoft YaHei";
                    a.fontSize = i;
                    a.color = n;
                    a.bold = s;
                    a.leading = 10;
                    a.valign = "middle";
                    a.align = "center";
                    a.size(152, 44);
                    a.overflow = "hidden";
                    t.addChild(a);
                    return a
                };
                i.onCreateImage = function(e, t) {
                    var i = new W;
                    i.skin = e;
                    t.addChild(i);
                    return i
                };
                return t
            } (H)
        };
        return c
    } (ie);
    var Ie = function(e) {
        function t() {
            t.__super.call(this)
        }
        a(t, "laya.ui.VBox", e);
        var i = t.prototype;
        i.changeItems = function() {
            this._itemChanged = false;
            var e = [];
            var t = 0;
            for (var i = 0,
            n = this.numChildren; i < n; i++) {
                var s = this.getChildAt(i);
                if (s && s.layoutEnabled) {
                    e.push(s);
                    t = this._width ? this._width: Math.max(t, s.width * s.scaleX)
                }
            }
            this.sortItem(e);
            var a = 0;
            for (i = 0, n = e.length; i < n; i++) {
                s = e[i];
                s.y = a;
                a += s.height * s.scaleY + this._space;
                if (this._align == "left") {
                    s.x = 0
                } else if (this._align == "center") {
                    s.x = (t - s.width * s.scaleX) * .5
                } else if (this._align == "right") {
                    s.x = t - s.width * s.scaleX
                }
            }
            this.changeSize()
        };
        s(0, i, "width", e.prototype._$get_width,
        function(e) {
            if (this._width != e) {
                p.superSet(se, this, "width", e);
                this.callLater(this.changeItems)
            }
        });
        t.NONE = "none";
        t.LEFT = "left";
        t.CENTER = "center";
        t.RIGHT = "right";
        return t
    } (se);
    var Se = function(e) {
        function t() {
            t.__super.call(this)
        }
        a(t, "laya.ui.RadioGroup", e);
        var i = t.prototype;
        i.createItem = function(e, t) {
            return new ce(e, t)
        };
        return t
    } (ue);
    var Ce = function(e) {
        function t() {
            t.__super.call(this)
        }
        a(t, "laya.ui.Tab", e);
        var i = t.prototype;
        i.createItem = function(e, t) {
            return new Y(e, t)
        };
        return t
    } (ue);
    var be = function(t) {
        function i(e) {
            this._vScrollBar = null;
            this._hScrollBar = null;
            e === void 0 && (e = "");
            i.__super.call(this, e)
        }
        a(i, "laya.ui.TextArea", t);
        var e = i.prototype;
        e.destroy = function(e) {
            e === void 0 && (e = true);
            t.prototype.destroy.call(this, e);
            this._vScrollBar && this._vScrollBar.destroy();
            this._hScrollBar && this._hScrollBar.destroy();
            this._vScrollBar = null;
            this._hScrollBar = null
        };
        e.initialize = function() {
            this.width = 180;
            this.height = 150;
            this._tf.wordWrap = true;
            this.multiline = true
        };
        e.onVBarChanged = function(e) {
            if (this._tf.scrollY != this._vScrollBar.value) {
                this._tf.scrollY = this._vScrollBar.value
            }
        };
        e.onHBarChanged = function(e) {
            if (this._tf.scrollX != this._hScrollBar.value) {
                this._tf.scrollX = this._hScrollBar.value
            }
        };
        e.changeScroll = function() {
            var e = this._vScrollBar && this._tf.maxScrollY > 0;
            var t = this._hScrollBar && this._tf.maxScrollX > 0;
            var i = e ? this._width - this._vScrollBar.width: this._width;
            var n = t ? this._height - this._hScrollBar.height: this._height;
            var s = this._tf.padding || E.labelPadding;
            this._tf.width = i;
            this._tf.height = n;
            if (this._vScrollBar) {
                this._vScrollBar.x = this._width - this._vScrollBar.width - s[2];
                this._vScrollBar.y = s[1];
                this._vScrollBar.height = this._height - (t ? this._hScrollBar.height: 0) - s[1] - s[3];
                this._vScrollBar.scrollSize = 1;
                this._vScrollBar.thumbPercent = n / Math.max(this._tf.textHeight, n);
                this._vScrollBar.setScroll(1, this._tf.maxScrollY, this._tf.scrollY);
                this._vScrollBar.visible = e
            }
            if (this._hScrollBar) {
                this._hScrollBar.x = s[0];
                this._hScrollBar.y = this._height - this._hScrollBar.height - s[3];
                this._hScrollBar.width = this._width - (e ? this._vScrollBar.width: 0) - s[0] - s[2];
                this._hScrollBar.scrollSize = Math.max(i * .033, 1);
                this._hScrollBar.thumbPercent = i / Math.max(this._tf.textWidth, i);
                this._hScrollBar.setScroll(0, this.maxScrollX, this.scrollX);
                this._hScrollBar.visible = t
            }
        };
        e.scrollTo = function(e) {
            this.commitMeasure();
            this._tf.scrollY = e
        };
        s(0, e, "scrollY",
        function() {
            return this._tf.scrollY
        });
        s(0, e, "width", t.prototype._$get_width,
        function(e) {
            p.superSet(pe, this, "width", e);
            this.callLater(this.changeScroll)
        });
        s(0, e, "hScrollBar",
        function() {
            return this._hScrollBar
        });
        s(0, e, "height", t.prototype._$get_height,
        function(e) {
            p.superSet(pe, this, "height", e);
            this.callLater(this.changeScroll)
        });
        s(0, e, "maxScrollX",
        function() {
            return this._tf.maxScrollX
        });
        s(0, e, "vScrollBarSkin",
        function() {
            return this._vScrollBar ? this._vScrollBar.skin: null
        },
        function(e) {
            if (this._vScrollBar == null) {
                this.addChild(this._vScrollBar = new ge);
                this._vScrollBar.on("change", this, this.onVBarChanged);
                this._vScrollBar.target = this._tf;
                this.callLater(this.changeScroll)
            }
            this._vScrollBar.skin = e
        });
        s(0, e, "hScrollBarSkin",
        function() {
            return this._hScrollBar ? this._hScrollBar.skin: null
        },
        function(e) {
            if (this._hScrollBar == null) {
                this.addChild(this._hScrollBar = new oe);
                this._hScrollBar.on("change", this, this.onHBarChanged);
                this._hScrollBar.mouseWheelEnable = false;
                this._hScrollBar.target = this._tf;
                this.callLater(this.changeScroll)
            }
            this._hScrollBar.skin = e
        });
        s(0, e, "vScrollBar",
        function() {
            return this._vScrollBar
        });
        s(0, e, "maxScrollY",
        function() {
            return this._tf.maxScrollY
        });
        s(0, e, "scrollX",
        function() {
            return this._tf.scrollX
        });
        return i
    } (pe);
    var we = function(e) {
        function t() {
            this._uiView = null;
            this.isCloseOther = false;
            t.__super.call(this)
        }
        a(t, "laya.ui.AsynDialog", e);
        var i = t.prototype;
        i.createView = function(e) {
            this._uiView = e
        };
        i._open = function(e, t, i) {
            this.isModal = e;
            this.isCloseOther = t;
            me.manager.lock(true);
            if (this._uiView) this.onCreated();
            else this.onOpen()
        };
        i.onCreated = function() {
            this.createUI();
            this.onOpen()
        };
        i.createUI = function() {
            laya.ui.View.prototype.createView.call(this, this._uiView);
            this._uiView = null;
            this._dealDragArea()
        };
        i.onOpen = function() {
            me.manager.open(this, this.isCloseOther);
            me.manager.lock(false)
        };
        i.close = function(e, t) {
            t === void 0 && (t = true);
            me.manager.close(this);
            this.onClose()
        };
        i.onClose = function() {};
        i.destroy = function(e) {
            e === void 0 && (e = true);
            laya.ui.View.prototype.destroy.call(this, e);
            this._uiView = null;
            this.onDestroy()
        };
        i.onDestroy = function() {};
        return t
    } (me);
    p.__init([ie, ye])
})(window, document, Laya);
if (typeof define === "function" && define.amd) {
    define("laya.core", ["require", "exports"],
    function(e, t) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: true
        });
        for (var i in Laya) {
            var n = Laya[i];
            n && n.__isclass && (t[i] = n)
        }
    })
}
var BaseView = function(e) {
    function t() {
        t.__super.call(this);
        this.once(Laya.Event.DISPLAY, this, this.displayFun);
        this.once(Laya.Event.UNDISPLAY, this, this.unDisplayFun)
    }
    Laya.class(t, "ui.efc.BaseViewUI", e);
    t.prototype.initEvent = function() {
        Laya.stage.off(Laya.Event.def_gameExit, this, this.resetFun);
        Laya.stage.once(Laya.Event.def_gameExit, this, this.resetFun)
    };
    t.prototype.destroyFun = function(e) {
        if (!this) return;
        if (!this.isDestroyFun) {
            if (!this._destroyed) this.destroy(e);
            this.isDestroyFun = true
        }
    };
    t.prototype.displayFun = function() {
        this.off(Laya.Event.DISPLAY, this, this.displayFun);
        if (this.display) {
            this.display()
        }
    };
    t.prototype.unDisplayFun = function() {
        this.off(Laya.Event.UNDISPLAY, this, this.unDisplayFun);
        Laya.stage.off(Laya.Event.def_gameExit, this, this.resetFun);
        if (this.isNeedDestroy) this.destroyFun();
        this.clearRes();
        if (this.unDisplay) {
            this.unDisplay()
        }
        if (this.offCaller) {
            this.offCaller(this)
        }
        if (WinUtils.myUISave && WinUtils.myUISave[this.name]) {
            WinUtils.myUISave[this.name] = null;
            delete WinUtils.myUISave[this.name]
        }
    };
    t.prototype.clearRes = function() {
        if (this.isClearRes && this.resList) {
            Resource.clearRes(this.resList, true)
        }
    };
    t.prototype.windowResize = function() {
        var e = this.isFullScene ? Game.ViewWidth: Game.UIWidth;
        var t = this.isFullScene ? Game.ViewHeight: Game.UIHeight;
        if (this.isFullScene) {
            if (this.size) this.size(Game.ViewWidth, Game.ViewHeight)
        } else {
            if (this && this.size) {
                this.x = (Game.ViewWidth - this.width) / 2;
                this.y = (Game.ViewHeight - this.height) / 2
            }
        }
        if (this._needFitViews && this._needFitViews.length > 0) {
            var i = (e - Game.UIWidth * Game.ViewScaleValue) / 2;
            var n = (t - Game.UIHeight * Game.ViewScaleValue) / 2;
            for (var s = 0; s < this._needFitViews.length; s++) {
                var a = this._needFitViews[s];
                if (a instanceof Object) {} else {
                    a = this[a]
                }
                if (!a) continue;
                a.pos(i, n);
                a.scale(Game.ViewScaleValue, Game.ViewScaleValue)
            }
        }
    };
    t.prototype.fitView = function(e) {
        var t = this.isFullScene ? Game.ViewWidth: Game.UIWidth;
        var i = this.isFullScene ? Game.ViewHeight: Game.UIHeight;
        var n = (t - Game.UIWidth * Game.ViewScaleValue) / 2;
        var s = (i - Game.UIHeight * Game.ViewScaleValue) / 2;
        e.pos(n, s);
        e.scale(Game.ViewScaleValue, Game.ViewScaleValue)
    };
    t.prototype.resetFun = function() {
        Laya.stage.off(Laya.Event.def_gameExit, this, this.resetFun);
        if (this.reset) {
            this.reset()
        }
        if (this.displayedInStage) {
            this.removeSelf()
        }
        if (this.isNeedDestroy) this.destroyFun()
    };
    t.prototype.initBase = function(e, t, i) {
        if (i) {
            this.isFullScene = i.isFullScene;
            this.isWindow = i.isWindow;
            this._needFitViews = i.needFitViews;
            if (this.isWindow) this.windowResize()
        }
        this.resList = t;
        this.name = e;
        if (!WinUtils.myUISave) {
            WinUtils.myUISave = {}
        }
        WinUtils.myUISave[this.name] = this;
        if (this.init) {
            this.init()
        }
        this.isNeedDestroy = true;
        this.isClearRes = true
    };
    t.prototype.setBtClick = function(e) {
        if (e instanceof Array) {
            for (var t = 0; t < e.length; t++) {
                e[t].on(Laya.Event.CLICK, this, this.clickFu)
            }
        } else {
            e.on(Laya.Event.CLICK, this, this.clickFu)
        }
    };
    t.prototype.clickFu = function(e) {
        if (this.onClick) {
            this.onClick(e)
        }
    };
    return t
} (laya.ui.View);
var BaseDialog = function(e) {
    function t() {
        t.__super.call(this);
        this.once(Laya.Event.DISPLAY, this, this.displayFun);
        this.once(Laya.Event.UNDISPLAY, this, this.unDisplayFun);
        Laya.stage.once(Laya.Event.def_gameExit, this, this.resetFun)
    }
    Laya.class(t, "ui.efc.BaseDialog", e);
    t.prototype.displayFun = function() {
        this.off(Laya.Event.DISPLAY, this, this.displayFun);
        if (this.display) {
            this.display()
        }
    };
    t.prototype.unDisplayFun = function() {
        this.off(Laya.Event.UNDISPLAY, this, this.unDisplayFun);
        Laya.stage.off(Laya.Event.def_gameExit, this, this.resetFun);
        if (this.unDisplay) {
            this.unDisplay()
        }
    };
    t.prototype.onClosed = function(e) {
        laya.ui.Dialog.prototype.onClosed.call(this, e);
        if (!this._destroyed && this.isNeedDestroy) this.destroy();
        if (this.isClearRes) {
            Resource.clearRes(this.resList, true)
        }
        Laya.stage.off(Laya.Event.def_gameExit, this, this.resetFun)
    };
    t.prototype.resetFun = function() {
        Laya.stage.off(Laya.Event.def_gameExit, this, this.resetFun);
        if (this.reset) {
            this.reset()
        }
        if (this.displayedInStage) {
            this.close()
        }
    };
    t.prototype.setBtClick = function(e) {
        if (e instanceof Array) {
            for (var t = 0; t < e.length; t++) {
                e[t].on(Laya.Event.CLICK, this, this.clickFu)
            }
        } else {
            e.on(Laya.Event.CLICK, this, this.clickFu)
        }
    };
    t.prototype.clickFu = function(e) {
        if (this.onClick) {
            this.onClick(e)
        }
    };
    return t
} (laya.ui.Dialog);
var WinUtilsFun = function() {
    function e() {
        this.myUISave = {}
    }
    e.prototype.getSaveUIByFun = function(e) {
        var t = Object.keys(this.myUISave);
        for (var i = 0; i < t.length; i++) {
            var n = this.myUISave[t[i]];
            if (n instanceof e) {
                return n
            }
        }
        return undefined
    };
    e.prototype.getSaveUI = function(e) {
        return this.myUISave[e]
    };
    e.prototype.removeSaveUI = function(e) {
        if (this.myUISave[e]) {
            this.myUISave[e] = null;
            delete this.myUISave[e]
        }
    };
    e.prototype.init = function() {
        Laya.stage.on(Laya.Event.RESIZE, this, this.windowResize);
        Game.UIRoot.size(Laya.stage.width, Laya.stage.height);
        Game.ViewWidth = Laya.stage.width;
        Game.ViewHeight = Laya.stage.height;
        Game.ViewScaleValue = Math.max(Laya.stage.width / Game.UIWidth, Laya.stage.height / Game.UIHeight)
    };
    e.prototype.windowResize = function() {
        Game.UIRoot.size(Laya.stage.width, Laya.stage.height);
        Game.ViewWidth = Laya.stage.width;
        Game.ViewHeight = Laya.stage.height;
        Game.ViewScaleValue = Math.max(Laya.stage.width / Game.UIWidth, Laya.stage.height / Game.UIHeight);
        var e = Object.keys(this.myUISave);
        for (var t = 0; t < e.length; t++) {
            if (this.myUISave[e[t]].isWindow) {
                if (this.myUISave[e[t]].windowResize) this.myUISave[e[t]].windowResize()
            }
        }
    };
    e.prototype.showView = function(t, i, n, s, a, r, o) {
        if (n.getChildByName(i) && !o) {
            console.log("node --" + i + " is already existed");
            a(n.getChildByName(i));
            a = null;
            return
        }
        Resource.load(t,
        function() {
            if (n.getChildByName(i) && !o) {
                console.log("node --" + i + " is already existed");
                a(n.getChildByName(i));
                a = null;
                return
            }
            var e = new s;
            if (e.initBase) {
                e.initBase(i, t, r)
            }
            n.addChild(e);
            if (a) {
                a(e);
                a = null
            }
        })
    };
    e.prototype.checkDialogIsPop = function(e, t, i) {
        if (i) return false;
        if (Laya.Dialog.manager) {
            var n = Laya.Dialog.manager._childs.length;
            for (var s = 0; s < n; s++) {
                var a = Laya.Dialog.manager._childs[s];
                if (a instanceof e) {
                    t(a);
                    t = null;
                    return true
                }
            }
        } else {
            return false
        }
    };
    e.prototype.showDialog = function(t, i, n, s) {
        if (WinUtils.checkDialogIsPop(i, n, s)) {
            return
        }
        Resource.load(t,
        function() {
            if (WinUtils.checkDialogIsPop(i, n, s)) {
                return
            }
            var e = new i;
            e.resList = t;
            e.isClearRes = true;
            if (e.init) {
                e.init()
            }
            if (n) {
                n(e);
                n = null
            }
        })
    };
    e.prototype.closeAllDialog = function() {
        if (Laya.Dialog.manager) {
            var e = Laya.Dialog.manager._childs.length;
            for (var t = 0; t < e; t++) {
                var i = Laya.Dialog.manager._childs[t];
                if (i instanceof BaseDialog) {
                    i.close()
                }
            }
        }
    };
    return e
} ();
var WinUtils = new WinUtilsFun;
var CLASS$ = Laya.class;
var STATICATTR$ = Laya.static;
var View = BaseView;
var Dialog = BaseDialog;
var Box = laya.ui.Box;
var EffectAnimation = laya.display.EffectAnimation;
var BankruptGiftUI = function(e) {
    function t() {
        this.menuList = null;
        this.firstBuyToOneView = null;
        this.firstRecharge = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.Aggregation.BankruptGiftUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("recharge.FirstBuyToOneView", recharge.FirstBuyToOneView);
        View.regComponent("recharge.FirstRechargeView", recharge.FirstRechargeView);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/Aggregation/BankruptGift")
    };
    return t
} (Dialog);
var BtnTeHuiUI = function(e) {
    function t() {
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.Aggregation.BtnTeHuiUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("EffectAnimation", laya.display.EffectAnimation);
        View.regComponent("ui.efc.MouseDownScaleUI", ui.efc.MouseDownScaleUI);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/Aggregation/BtnTeHui")
    };
    return t
} (View);
var FirstBuyToOneViewUI = function(e) {
    function t() {
        this.btnGet = null;
        this.firstOneBox = null;
        this.itemList = null;
        this.qtt = null;
        this.notQtt = null;
        this.fugou = null;
        this.btnClose = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.Aggregation.FirstBuyToOneViewUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/Aggregation/FirstBuyToOneView")
    };
    return t
} (View);
var FirstRechargeViewUI = function(e) {
    function t() {
        this.gift_1 = null;
        this.gift_2 = null;
        this.gift_3 = null;
        this.gift_4 = null;
        this.buy_now = null;
        this.wuqi = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.Aggregation.FirstRechargeViewUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/Aggregation/FirstRechargeView")
    };
    return t
} (View);
var LuckyShakeViewUI = function(e) {
    function t() {
        this.bgLight = null;
        this.ShakeBox = null;
        this.btnShake = null;
        this.fc_shakeTimes = null;
        this.shakeAni = null;
        this.lightBox = null;
        this.awardBox = null;
        this.fc_gold = null;
        this.btnGiveUp = null;
        this.btnBuy = null;
        this.fc_time = null;
        this.fc_price = null;
        this.orgPriceLabel = null;
        this.goldFx = null;
        this.fireAni = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.Aggregation.LuckyShakeViewUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("Text", laya.display.Text);
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("Particle2D", laya.particle.Particle2D);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/Aggregation/LuckyShakeView")
    };
    return t
} (View);
var OneMoneyGiftViewUI = function(e) {
    function t() {
        this.oldPrice = null;
        this.nowPrice = null;
        this.buyBtn = null;
        this.inviteBtn = null;
        this.inviteHint = null;
        this.goldLab = null;
        this.progressBox = null;
        this.progress = null;
        this.progressLight = null;
        this.progressText = null;
        this.des0 = null;
        this.nextRen = null;
        this.price = null;
        this.des1 = null;
        this.price1 = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.Aggregation.OneMoneyGiftViewUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/Aggregation/OneMoneyGiftView")
    };
    return t
} (View);
var PlayPackageViewUI = function(e) {
    function t() {
        this.dataList = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.Aggregation.PlayPackageViewUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("EffectAnimation", laya.display.EffectAnimation);
        View.regComponent("ui.efc.MouseDownScaleUI", ui.efc.MouseDownScaleUI);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/Aggregation/PlayPackageView")
    };
    return t
} (View);
var SpecialGiftViewUI = function(e) {
    function t() {
        this.goods = null;
        this.price = null;
        this.buyBt = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.Aggregation.SpecialGiftViewUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/Aggregation/SpecialGiftView")
    };
    return t
} (View);
var WeekCardViewUI = function(e) {
    function t() {
        this.ani1 = null;
        this.itemList = null;
        this.btnbuy = null;
        this.buy1 = null;
        this.buy2 = null;
        this.cost = null;
        this.leftLab = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.Aggregation.WeekCardViewUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/Aggregation/WeekCardView")
    };
    return t
} (View);
var AlmsUI = function(e) {
    function t() {
        this.ani1 = null;
        this.bg = null;
        this.num = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.FX.AlmsUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/FX/Alms")
    };
    return t
} (View);
var BaofuLaUI = function(e) {
    function t() {
        this.ani1 = null;
        this.fc_gold = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.FX.BaofuLaUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/FX/BaofuLa")
    };
    return t
} (View);
var TaibangleUI = function(e) {
    function t() {
        this.great = null;
        this.perfect = null;
        this.excellent = null;
        this.fc_gold = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.FX.JewelCity.TaibangleUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/FX/JewelCity/Taibangle")
    };
    return t
} (View);
var RightAwayPlayUI = function(e) {
    function t() {
        this.mashang = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.FX.RightAwayPlayUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/FX/RightAwayPlay")
    };
    return t
} (View);
var Shayubushou2UI = function(e) {
    function t() {
        this.ani1 = null;
        this.fc_mul = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.FX.Shayubushou2UI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/FX/Shayubushou2")
    };
    return t
} (View);
var baofuUI = function(e) {
    function t() {
        this.ani1 = null;
        this.fc_gold = null;
        this.fishName = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.FX.baofuUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/FX/baofu")
    };
    return t
} (View);
var bingdongUI = function(e) {
    function t() {
        this.ani1 = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.FX.bingdongUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/FX/bingdong")
    };
    return t
} (View);
var bossbaozhaUI = function(e) {
    function t() {
        this.ani1 = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.FX.bossbaozhaUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/FX/bossbaozha")
    };
    return t
} (View);
var bosslaixi2UI = function(e) {
    function t() {
        this.ani1 = null;
        this.bossWrap = null;
        this.bossIcon = null;
        this.beijinbi = null;
        this.zuigao = null;
        this.fc_beishu = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.FX.bosslaixi2UI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/FX/bosslaixi2")
    };
    return t
} (View);
var daodanbaozhaUI = function(e) {
    function t() {
        this.ani1 = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.FX.daodanbaozhaUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/FX/daodanbaozha")
    };
    return t
} (View);
var fenxiangUI = function(e) {
    function t() {
        this.ani1 = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.FX.fenxiangUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/FX/fenxiang")
    };
    return t
} (View);
var fenxiangyaoqingUI = function(e) {
    function t() {
        this.ani1 = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.FX.fenxiangyaoqingUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/FX/fenxiangyaoqing")
    };
    return t
} (View);
var haishenDropUI = function(e) {
    function t() {
        this.ani1 = null;
        this.bg = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.FX.haishenDropUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/FX/haishenDrop")
    };
    return t
} (View);
var jiangquanzhuanpanUI = function(e) {
    function t() {
        this.ani1 = null;
        this.fc_num = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.FX.jiangquanzhuanpanUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/FX/jiangquanzhuanpan")
    };
    return t
} (View);
var kaishiyouxiUI = function(e) {
    function t() {
        this.ani1 = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.FX.kaishiyouxiUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/FX/kaishiyouxi")
    };
    return t
} (View);
var mashangwanUI = function(e) {
    function t() {
        this.ani1 = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.FX.mashangwanUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/FX/mashangwan")
    };
    return t
} (View);
var qihanglibaoUI = function(e) {
    function t() {
        this.jiangluo = null;
        this.dakai = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.FX.qihanglibaoUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/FX/qihanglibao")
    };
    return t
} (View);
var shenshuizhadanUI = function(e) {
    function t() {
        this.ani1 = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.FX.shenshuizhadanUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/FX/shenshuizhadan")
    };
    return t
} (View);
var shuileibaozhaUI = function(e) {
    function t() {
        this.ani1 = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.FX.shuileibaozhaUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/FX/shuileibaozha")
    };
    return t
} (View);
var shuileixiaoguoUI = function(e) {
    function t() {
        this.ani1 = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.FX.shuileixiaoguoUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/FX/shuileixiaoguo")
    };
    return t
} (View);
var weizhitishiUI = function(e) {
    function t() {
        this.ani1 = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.FX.weizhitishiUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/FX/weizhitishi")
    };
    return t
} (View);
var yuchaolailinUI = function(e) {
    function t() {
        this.ani1 = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.FX.yuchaolailinUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/FX/yuchaolailin")
    };
    return t
} (View);
var zhuanpan1UI = function(e) {
    function t() {
        this.ani1 = null;
        this.fc_gold = null;
        this.dantou = null;
        this.fishName = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.FX.zhuanpan1UI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/FX/zhuanpan1")
    };
    return t
} (View);
var zhuanpan2UI = function(e) {
    function t() {
        this.ani1 = null;
        this.fishName = null;
        this.fc_gold = null;
        this.dantou = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.FX.zhuanpan2UI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/FX/zhuanpan2")
    };
    return t
} (View);
var zhuanpan3UI = function(e) {
    function t() {
        this.ani1 = null;
        this.fishName = null;
        this.fc_gold = null;
        this.dantou = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.FX.zhuanpan3UI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/FX/zhuanpan3")
    };
    return t
} (View);
var zhuanpanBingxueqiyuanUI = function(e) {
    function t() {
        this.ani1 = null;
        this.fishName = null;
        this.dantou = null;
        this.fc_gold = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.FX.zhuanpanBingxueqiyuanUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/FX/zhuanpanBingxueqiyuan")
    };
    return t
} (View);
var zhuanpanCaishenjiadaoUI = function(e) {
    function t() {
        this.ani1 = null;
        this.fishName = null;
        this.dantou = null;
        this.fc_gold = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.FX.zhuanpanCaishenjiadaoUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/FX/zhuanpanCaishenjiadao")
    };
    return t
} (View);
var zhuanpanDanShenGouUI = function(e) {
    function t() {
        this.ani1 = null;
        this.fishName = null;
        this.dantou = null;
        this.fc_gold = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.FX.zhuanpanDanShenGouUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/FX/zhuanpanDanShenGou")
    };
    return t
} (View);
var zhuanpanJinzhusongfuUI = function(e) {
    function t() {
        this.ani1 = null;
        this.fishName = null;
        this.dantou = null;
        this.fc_gold = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.FX.zhuanpanJinzhusongfuUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/FX/zhuanpanJinzhusongfu")
    };
    return t
} (View);
var zhuanpanJinzhusongfu2UI = function(e) {
    function t() {
        this.ani1 = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.FX.zhuanpanJinzhusongfu2UI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/FX/zhuanpanJinzhusongfu2")
    };
    return t
} (View);
var zhuanpanMilujinglingUI = function(e) {
    function t() {
        this.ani1 = null;
        this.fishName = null;
        this.dantou = null;
        this.fc_gold = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.FX.zhuanpanMilujinglingUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/FX/zhuanpanMilujingling")
    };
    return t
} (View);
var zhuanpanSaibotanUI = function(e) {
    function t() {
        this.ani1 = null;
        this.fishName = null;
        this.dantou = null;
        this.fc_gold = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.FX.zhuanpanSaibotanUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/FX/zhuanpanSaibotan")
    };
    return t
} (View);
var zhuanpanSupermeUI = function(e) {
    function t() {
        this.ani1 = null;
        this.fishName = null;
        this.dantou = null;
        this.fc_gold = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.FX.zhuanpanSupermeUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/FX/zhuanpanSuperme")
    };
    return t
} (View);
var zhuanpanWanshengUI = function(e) {
    function t() {
        this.ani1 = null;
        this.dantou = null;
        this.fc_gold = null;
        this.fishName = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.FX.zhuanpanWanshengUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/FX/zhuanpanWansheng")
    };
    return t
} (View);
var zhuanpanXinnianUI = function(e) {
    function t() {
        this.ani1 = null;
        this.fishName = null;
        this.dantou = null;
        this.fc_gold = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.FX.zhuanpanXinnianUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/FX/zhuanpanXinnian")
    };
    return t
} (View);
var zhuanpanbingfengwangzuoUI = function(e) {
    function t() {
        this.ani1 = null;
        this.dantou = null;
        this.fc_gold = null;
        this.fishName = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.FX.zhuanpanbingfengwangzuoUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/FX/zhuanpanbingfengwangzuo")
    };
    return t
} (View);
var zhuanpanguoqingUI = function(e) {
    function t() {
        this.ani1 = null;
        this.dantou = null;
        this.fc_gold = null;
        this.fishName = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.FX.zhuanpanguoqingUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/FX/zhuanpanguoqing")
    };
    return t
} (View);
var zhuanpanliuxingUI = function(e) {
    function t() {
        this.ani1 = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.FX.zhuanpanliuxingUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/FX/zhuanpanliuxing")
    };
    return t
} (View);
var zhuanpanlongUI = function(e) {
    function t() {
        this.ani1 = null;
        this.fishName = null;
        this.dantou = null;
        this.fc_gold = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.FX.zhuanpanlongUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/FX/zhuanpanlong")
    };
    return t
} (View);
var zhuanpanmixinlieshouUI = function(e) {
    function t() {
        this.ani1 = null;
        this.dantou = null;
        this.fc_gold = null;
        this.fishName = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.FX.zhuanpanmixinlieshouUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/FX/zhuanpanmixinlieshou")
    };
    return t
} (View);
var zhuanpanshengdanUI = function(e) {
    function t() {
        this.ani1 = null;
        this.dantou = null;
        this.fc_gold = null;
        this.fishName = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.FX.zhuanpanshengdanUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/FX/zhuanpanshengdan")
    };
    return t
} (View);
var zhuanpanshuang11UI = function(e) {
    function t() {
        this.ani1 = null;
        this.dantou = null;
        this.fc_gold = null;
        this.fishName = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.FX.zhuanpanshuang11UI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/FX/zhuanpanshuang11")
    };
    return t
} (View);
var GuidanceRedActivityUI = function(e) {
    function t() {
        this.contain = null;
        this.contentBox = null;
        this.fontBox = null;
        this.txt1 = null;
        this.needText1 = null;
        this.txt2 = null;
        this.txt3 = null;
        this.needText3 = null;
        this.txt4 = null;
        this.txt5 = null;
        this.needText5 = null;
        this.txt6 = null;
        this.sockLightBox = null;
        this.fingerFx = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.GuidanceRedActivityUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/GuidanceRedActivity")
    };
    return t
} (View);
var HitMonsterViewUI = function(e) {
    function t() {
        this.ani1 = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.Lobby.HitMonsterViewUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/Lobby/HitMonsterView")
    };
    return t
} (View);
var NoviceGuidanceOnMinGameUI = function(e) {
    function t() {
        this.warpBox = null;
        this.bg = null;
        this.interactionArea = null;
        this.fontBox = null;
        this.txt_first1 = null;
        this.txt_first = null;
        this.txt_second = null;
        this.txt_second1 = null;
        this.txt_third = null;
        this.txt_four = null;
        this.txt_four1 = null;
        this.txt_five = null;
        this.fontLast = null;
        this.sockLightBox = null;
        this.fingerFx = null;
        this.welcomeBox = null;
        this.welcomeTxtBox = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.NoviceGuidanceOnMinGameUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/NoviceGuidanceOnMinGame")
    };
    return t
} (View);
var StartViewUI = function(e) {
    function t() {
        this.bg = null;
        this.startBtn = null;
        this.logo = null;
        this.btnLight = null;
        this.kefu = null;
        this.refresh = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.StartViewUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ui.UIRoot.FX.kaishiyouxiUI", ui.UIRoot.FX.kaishiyouxiUI);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/StartView")
    };
    return t
} (View);
var ActApkMiniGameUI = function(e) {
    function t() {
        this.miniList = null;
        this.appList = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.activity.ActApkMiniGameUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/activity/ActApkMiniGame")
    };
    return t
} (View);
var ActCardsUI = function(e) {
    function t() {
        this.box_gonggao = null;
        this.label_acttime = null;
        this.spize_tip = null;
        this.box_choujiangchi = null;
        this.btn_choujiang = null;
        this.superprize_sign = null;
        this.box_prize_1 = null;
        this.card_bg_1 = null;
        this.prizeIcon_1 = null;
        this.prizeName_1 = null;
        this.superPrize_owned_1 = null;
        this.zhengxi_1 = null;
        this.prizeShine_1 = null;
        this.prize_time_1 = null;
        this.box_prize_2 = null;
        this.card_bg_2 = null;
        this.prizeIcon_2 = null;
        this.prizeName_2 = null;
        this.prize_time_2 = null;
        this.box_prize_3 = null;
        this.card_bg_3 = null;
        this.prizeIcon_3 = null;
        this.prizeName_3 = null;
        this.prizeShine_3 = null;
        this.prize_time_3 = null;
        this.box_prize_4 = null;
        this.card_bg_4 = null;
        this.prizeIcon_4 = null;
        this.prizeName_4 = null;
        this.prize_time_4 = null;
        this.box_prize_5 = null;
        this.card_bg_5 = null;
        this.prizeIcon_5 = null;
        this.prizeName_5 = null;
        this.prize_time_5 = null;
        this.box_prize_6 = null;
        this.card_bg_6 = null;
        this.prizeIcon_6 = null;
        this.prizeName_6 = null;
        this.prize_time_6 = null;
        this.box_prize_7 = null;
        this.card_bg_7 = null;
        this.prizeIcon_7 = null;
        this.prizeName_7 = null;
        this.prize_time_7 = null;
        this.box_prize_8 = null;
        this.card_bg_8 = null;
        this.prizeIcon_8 = null;
        this.prizeName_8 = null;
        this.prize_time_8 = null;
        this.box_prize_9 = null;
        this.card_bg_9 = null;
        this.prizeIcon_9 = null;
        this.prizeName_9 = null;
        this.prize_time_9 = null;
        this.box_prize_10 = null;
        this.card_bg_10 = null;
        this.prizeIcon_10 = null;
        this.prizeName_10 = null;
        this.prize_time_10 = null;
        this.box_dajiang = null;
        this.label_topPrize_tip = null;
        this.label_topPrizeNumer = null;
        this.box_choujiang = null;
        this.btn_choujiang_1 = null;
        this.btn_choujiang_2 = null;
        this.btn_choujiang_3 = null;
        this.btn_choujiang_4 = null;
        this.box_cards = null;
        this.card_num_1 = null;
        this.card_num_2 = null;
        this.card_num_3 = null;
        this.card_num_4 = null;
        this.card_num_5 = null;
        this.card_num_6 = null;
        this.label_choujiang_times = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.activity.ActCardsUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("Text", laya.display.Text);
        View.regComponent("EffectAnimation", laya.display.EffectAnimation);
        View.regComponent("ui.efc.MouseDownScaleUI", ui.efc.MouseDownScaleUI);
        View.regComponent("ButtonSound", ButtonSound);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/activity/ActCards")
    };
    return t
} (View);
var ActDayLoginUI = function(e) {
    function t() {
        this.btnGet = null;
        this.btnIcon = null;
        this.lab_actTime = null;
        this.loginPacksList = null;
        this.alreadyReceived = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.activity.ActDayLoginUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/activity/ActDayLogin")
    };
    return t
} (View);
var ActExchangeUI = function(e) {
    function t() {
        this.exchangeId = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.activity.ActExchangeUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/activity/ActExchange")
    };
    return t
} (View);
var ActFireOfWarUI = function(e) {
    function t() {
        this.icon_0 = null;
        this.icon_2 = null;
        this.icon_3 = null;
        this.icon_1 = null;
        this.dateTxt = null;
        this.descriptionLabel = null;
        this.listUI = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.activity.ActFireOfWarUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/activity/ActFireOfWar")
    };
    return t
} (View);
var ActHappyPrizeUI = function(e) {
    function t() {
        this.task_list = null;
        this.btn_drew = null;
        this.itemBg = null;
        this.itemIcon = null;
        this.num = null;
        this.valid = null;
        this.btn_drawPrize = null;
        this.btn_toComplete = null;
        this.score_text = null;
        this.quota_text = null;
        this.qouta_tip = null;
        this.buyuScore_type = null;
        this.buyuScore_text = null;
        this.hp_actStartTime = null;
        this.hp_actRule = null;
        this.hp_actEndTime = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.activity.ActHappyPrizeUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/activity/ActHappyPrize")
    };
    return t
} (View);
var ActLuckCodeItemUI = function(e) {
    function t() {
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.activity.ActLuckOrder.ActLuckCodeItemUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/activity/ActLuckOrder/ActLuckCodeItem")
    };
    return t
} (View);
var ActLuckCodeListUI = function(e) {
    function t() {
        this.noData = null;
        this.dataList = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.activity.ActLuckOrder.ActLuckCodeListUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ui.UIRoot.activity.ActLuckOrder.ActLuckCodeItemUI", ui.UIRoot.activity.ActLuckOrder.ActLuckCodeItemUI);
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/activity/ActLuckOrder/ActLuckCodeList")
    };
    return t
} (Dialog);
var ActLuckOrderUI = function(e) {
    function t() {
        this.ani1 = null;
        this.btnRecharge = null;
        this.btnMyCode = null;
        this.redP = null;
        this.btnRank = null;
        this.btnRule = null;
        this.actTime = null;
        this.progressImg = null;
        this.progressDanImg = null;
        this.progressDan = null;
        this.nowDan = null;
        this.totalDan = null;
        this.chouDan = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.activity.ActLuckOrder.ActLuckOrderUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/activity/ActLuckOrder/ActLuckOrder")
    };
    return t
} (View);
var ActLuckOrderItemUI = function(e) {
    function t() {
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.activity.ActLuckOrder.ActLuckOrderItemUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/activity/ActLuckOrder/ActLuckOrderItem")
    };
    return t
} (View);
var ActLuckOrderListUI = function(e) {
    function t() {
        this.noData = null;
        this.dataList = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.activity.ActLuckOrder.ActLuckOrderListUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ui.UIRoot.activity.ActLuckOrder.ActLuckOrderItemUI", ui.UIRoot.activity.ActLuckOrder.ActLuckOrderItemUI);
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/activity/ActLuckOrder/ActLuckOrderList")
    };
    return t
} (Dialog);
var ActLuckOrderRuleUI = function(e) {
    function t() {
        this.des = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.activity.ActLuckOrder.ActLuckOrderRuleUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/activity/ActLuckOrder/ActLuckOrderRule")
    };
    return t
} (Dialog);
var ActMysticalStoreUI = function(e) {
    function t() {
        this.bg_1 = null;
        this.bg_2 = null;
        this.leftTime = null;
        this.exchangeList = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.activity.ActMysticalStoreUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/activity/ActMysticalStore")
    };
    return t
} (View);
var ActRankListUI = function(e) {
    function t() {
        this.bg_1 = null;
        this.bg_2 = null;
        this.startTime = null;
        this.endTime = null;
        this.desc = null;
        this.list = null;
        this.img_userHead = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.activity.ActRankListUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("Text", laya.display.Text);
        View.regComponent("ClickSound", ClickSound);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/activity/ActRankList")
    };
    return t
} (View);
var ActRelicGiftUI = function(e) {
    function t() {
        this.needNum = null;
        this.actTime = null;
        this.propList = null;
        this.progressBar = null;
        this.clearLabel = null;
        this.propgressText = null;
        this.getAward = null;
        this.unselect = null;
        this.select = null;
        this.redPoint = null;
        this.already = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.activity.ActRelicGiftUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/activity/ActRelicGift")
    };
    return t
} (View);
var ShipmentNoticeUI = function(e) {
    function t() {
        this.btn_get = null;
        this.btn_iknow = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.activity.ActShipmentPrize.ShipmentNoticeUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("EffectAnimation", laya.display.EffectAnimation);
        View.regComponent("ui.efc.MouseDownScaleUI", ui.efc.MouseDownScaleUI);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/activity/ActShipmentPrize/ShipmentNotice")
    };
    return t
} (Dialog);
var ShipmentPrizeUI = function(e) {
    function t() {
        this.light_box = null;
        this.prizeBox = null;
        this.prize_select_box = null;
        this.prize_rank = null;
        this.five_times = null;
        this.one_times = null;
        this.time_after = null;
        this.act_time = null;
        this.remain_num = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.activity.ActShipmentPrize.ShipmentPrizeUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/activity/ActShipmentPrize/ShipmentPrize")
    };
    return t
} (View);
var ShipmentPrizeOptionUI = function(e) {
    function t() {
        this.prize_Img = null;
        this.prize_Num = null;
        this.prize_integral = null;
        this.fc_valid = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.activity.ActShipmentPrize.ShipmentPrizeOptionUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/activity/ActShipmentPrize/ShipmentPrizeOption")
    };
    return t
} (View);
var ShipmentRankUI = function(e) {
    function t() {
        this.img_nodata = null;
        this.prize_img = null;
        this.user_name = null;
        this.user_integral = null;
        this.user_prize = null;
        this.user_rank = null;
        this.ship_list = null;
        this.userHead = null;
        this.vipIcon = null;
        this.rankImg = null;
        this.fc_gold = null;
        this.fc_rank = null;
        this.uName = null;
        this.uId = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.activity.ActShipmentPrize.ShipmentRankUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/activity/ActShipmentPrize/ShipmentRank")
    };
    return t
} (Dialog);
var prizeOptionUI = function(e) {
    function t() {
        this.prize_Img = null;
        this.prize_integral = null;
        this.prize_Num = null;
        this.fc_valid = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.activity.ActShipmentPrize.prizeOptionUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/activity/ActShipmentPrize/prizeOption")
    };
    return t
} (Dialog);
var ActTaskUI = function(e) {
    function t() {
        this.bg_1 = null;
        this.bg_2 = null;
        this.jeiShaoTxt = null;
        this.dateTxt = null;
        this.descriptionLabel = null;
        this.tiredChargeList = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.activity.ActTaskUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/activity/ActTask")
    };
    return t
} (View);
var ActTreasureBoxUI = function(e) {
    function t() {
        this.startTime = null;
        this.endTime = null;
        this.listPrice = null;
        this.superGiftIcon = null;
        this.boxS = null;
        this.boxC = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.activity.ActTreasureBox.ActTreasureBoxUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("Text", laya.display.Text);
        View.regComponent("ButtonSound", ButtonSound);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/activity/ActTreasureBox/ActTreasureBox")
    };
    return t
} (View);
var TreasureBoxDetailUI = function(e) {
    function t() {
        this.finalItems = null;
        this.detailList = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.activity.ActTreasureBox.TreasureBoxDetailUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("Text", laya.display.Text);
        View.regComponent("ClickSound", ClickSound);
        View.regComponent("EffectAnimation", laya.display.EffectAnimation);
        View.regComponent("ui.efc.MouseDownScaleUI", ui.efc.MouseDownScaleUI);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/activity/ActTreasureBox/TreasureBoxDetail")
    };
    return t
} (Dialog);
var TreasureBoxGetUI = function(e) {
    function t() {
        this.loginBox = null;
        this.goldBox = null;
        this.chargeBox = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.activity.ActTreasureBox.TreasureBoxGetUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("Text", laya.display.Text);
        View.regComponent("ButtonSound", ButtonSound);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/activity/ActTreasureBox/TreasureBoxGet")
    };
    return t
} (Dialog);
var ActivityUI = function(e) {
    function t() {
        this.choiceList = null;
        this.contentBox = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.activity.ActivityUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("EffectAnimation", laya.display.EffectAnimation);
        View.regComponent("ui.efc.MouseDownScaleUI", ui.efc.MouseDownScaleUI);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/activity/Activity")
    };
    return t
} (Dialog);
var EntranceGuidanceAndroidUI = function(e) {
    function t() {
        this.hitLabel = null;
        this.shou = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.ad.EntranceGuidanceAndroidUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/ad/EntranceGuidanceAndroid")
    };
    return t
} (Dialog);
var EntranceGuidanceIOSUI = function(e) {
    function t() {
        this.shou = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.ad.EntranceGuidanceIOSUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/ad/EntranceGuidanceIOS")
    };
    return t
} (Dialog);
var dragonGameRuleUI = function(e) {
    function t() {
        this.btn_0 = null;
        this.btn_1 = null;
        this.btn_2 = null;
        this.box_0 = null;
        this.box_1 = null;
        this.skillMsgList = null;
        this.box_2 = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.attackDragonPlace.dragonGameRuleUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("EffectAnimation", laya.display.EffectAnimation);
        View.regComponent("ui.efc.MouseDownScaleUI", ui.efc.MouseDownScaleUI);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/attackDragonPlace/dragonGameRule")
    };
    return t
} (Dialog);
var dragonLinkRoleUI = function(e) {
    function t() {
        this.roleIcon = null;
        this.roleBg = null;
        this.linkAni = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.attackDragonPlace.dragonLinkRoleUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/attackDragonPlace/dragonLinkRole")
    };
    return t
} (View);
var dragonLoadingUI = function(e) {
    function t() {
        this.bg = null;
        this.progress = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.attackDragonPlace.dragonLoadingUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/attackDragonPlace/dragonLoading")
    };
    return t
} (View);
var dragonLogItemUI = function(e) {
    function t() {
        this.itemRoleIcon = null;
        this.itemRoleNum = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.attackDragonPlace.dragonLogItemUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/attackDragonPlace/dragonLogItem")
    };
    return t
} (View);
var dragonMainUI = function(e) {
    function t() {
        this.bg = null;
        this.userNick = null;
        this.dragonRoundMask = null;
        this.rolesBox = null;
        this.roundFont = null;
        this.fc_gold = null;
        this.userGoldIcon = null;
        this.btnOpenMall = null;
        this.btnHelp = null;
        this.btnMusic = null;
        this.btnExit = null;
        this.btnStartGame = null;
        this.btnAuto = null;
        this.btnSwitchMultiple = null;
        this.btnPriceLog = null;
        this.autoAni = null;
        this.listSkill = null;
        this.headImgBox = null;
        this.listMultipleBox = null;
        this.listMultiple = null;
        this.headImgFlyBox = null;
        this.fontXiaoChu = null;
        this.logListBox = null;
        this.nextGameBox = null;
        this.maskBox_1 = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.attackDragonPlace.dragonMainUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("EffectAnimation", laya.display.EffectAnimation);
        View.regComponent("ui.efc.MouseDownScaleUI", ui.efc.MouseDownScaleUI);
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/attackDragonPlace/dragonMain")
    };
    return t
} (View);
var dragonNoticeUI = function(e) {
    function t() {
        this.
        continue = null;
        this.exit = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.attackDragonPlace.dragonNoticeUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("EffectAnimation", laya.display.EffectAnimation);
        View.regComponent("ui.efc.MouseDownScaleUI", ui.efc.MouseDownScaleUI);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/attackDragonPlace/dragonNotice")
    };
    return t
} (Dialog);
var dragonPriceLogUI = function(e) {
    function t() {
        this.logList = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.attackDragonPlace.dragonPriceLogUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("EffectAnimation", laya.display.EffectAnimation);
        View.regComponent("ui.efc.MouseDownScaleUI", ui.efc.MouseDownScaleUI);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/attackDragonPlace/dragonPriceLog")
    };
    return t
} (Dialog);
var dragonRole1UI = function(e) {
    function t() {
        this.attack = null;
        this.skill = null;
        this.role1Ani = null;
        this.attackSprite = null;
        this.skillSprite = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.attackDragonPlace.dragonRole1UI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/attackDragonPlace/dragonRole1")
    };
    return t
} (View);
var dragonRole2UI = function(e) {
    function t() {
        this.skill = null;
        this.fazhen = null;
        this.role1Ani = null;
        this.spriteBlood = null;
        this.bloodReduceNum = null;
        this.bloodTotal = null;
        this.skillSprite = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.attackDragonPlace.dragonRole2UI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("Particle2D", laya.particle.Particle2D);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/attackDragonPlace/dragonRole2")
    };
    return t
} (View);
var dragonRole3UI = function(e) {
    function t() {
        this.attack = null;
        this.skill = null;
        this.role1Ani = null;
        this.attackSprite = null;
        this.skillSprite = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.attackDragonPlace.dragonRole3UI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/attackDragonPlace/dragonRole3")
    };
    return t
} (View);
var dragonRole4UI = function(e) {
    function t() {
        this.attack = null;
        this.skill = null;
        this.role1Ani = null;
        this.attackSprite = null;
        this.skillSprite = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.attackDragonPlace.dragonRole4UI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/attackDragonPlace/dragonRole4")
    };
    return t
} (View);
var jishabeilvANIUI = function(e) {
    function t() {
        this.ani1 = null;
        this.cell_1 = null;
        this.cell_2 = null;
        this.value1 = null;
        this.value2 = null;
        this.fireAni = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.attackDragonPlace.jishabeilvANIUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/attackDragonPlace/jishabeilvANI")
    };
    return t
} (View);
var tanchuangANIUI = function(e) {
    function t() {
        this.ani1 = null;
        this.fc_gold = null;
        this.title_img = null;
        this.goldFx = null;
        this.fireAni = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.attackDragonPlace.tanchuangANIUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("Particle2D", laya.particle.Particle2D);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/attackDragonPlace/tanchuangANI")
    };
    return t
} (View);
var BigRichFailUI = function(e) {
    function t() {
        this.btnSub = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.bigRich.BigRichFailUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("EffectAnimation", laya.display.EffectAnimation);
        View.regComponent("ui.efc.MouseDownScaleUI", ui.efc.MouseDownScaleUI);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/bigRich/BigRichFail")
    };
    return t
} (Dialog);
var BigRichLoadingUI = function(e) {
    function t() {
        this.bg = null;
        this.progress = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.bigRich.BigRichLoadingUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/bigRich/BigRichLoading")
    };
    return t
} (View);
var BigRichMainUI = function(e) {
    function t() {
        this.specialSprite = null;
        this.userSprite = null;
        this.jackpotBox = null;
        this.prize_gold = null;
        this.startList = null;
        this.NPC = null;
        this.ani_npc = null;
        this.move_npc = null;
        this.SayWord_npc = null;
        this.chat_npc = null;
        this.chat_img_npc = null;
        this.ani_fly_npc = null;
        this.selfBox = null;
        this.ani_self = null;
        this.move_self = null;
        this.SayWord_self = null;
        this.chat_self = null;
        this.chat_img_self = null;
        this.ani_fly_self = null;
        this.btnStartBox = null;
        this.OperatingHints = null;
        this.cur_operation_img = null;
        this.btnStart = null;
        this.sieve_img = null;
        this.shoushi_start = null;
        this.BigRichUIBox = null;
        this.head = null;
        this.vipIcon = null;
        this.btnAdd = null;
        this.fc_gold = null;
        this.NPCUIBox = null;
        this.btnSound = null;
        this.iconMusicOff = null;
        this.btnHelp = null;
        this.btnRank = null;
        this.btnExit = null;
        this.npc_sieve_img = null;
        this.sieveAni = null;
        this.PrizeSprite = null;
        this.prizeBox = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.bigRich.BigRichMainUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("EffectAnimation", laya.display.EffectAnimation);
        View.regComponent("ui.efc.MouseDownScaleUI", ui.efc.MouseDownScaleUI);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/bigRich/BigRichMain")
    };
    return t
} (View);
var BigRichNoticeUI = function(e) {
    function t() {
        this.
        continue = null;
        this.exit = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.bigRich.BigRichNoticeUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("EffectAnimation", laya.display.EffectAnimation);
        View.regComponent("ui.efc.MouseDownScaleUI", ui.efc.MouseDownScaleUI);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/bigRich/BigRichNotice")
    };
    return t
} (Dialog);
var BigRichRankUI = function(e) {
    function t() {
        this.img_nodata = null;
        this.rankList = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.bigRich.BigRichRankUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("EffectAnimation", laya.display.EffectAnimation);
        View.regComponent("ui.efc.MouseDownScaleUI", ui.efc.MouseDownScaleUI);
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/bigRich/BigRichRank")
    };
    return t
} (Dialog);
var BigRichRankRuleUI = function(e) {
    function t() {
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.bigRich.BigRichRankRuleUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("EffectAnimation", laya.display.EffectAnimation);
        View.regComponent("ui.efc.MouseDownScaleUI", ui.efc.MouseDownScaleUI);
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/bigRich/BigRichRankRule")
    };
    return t
} (Dialog);
var BigRichRuleUI = function(e) {
    function t() {
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.bigRich.BigRichRuleUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("EffectAnimation", laya.display.EffectAnimation);
        View.regComponent("ui.efc.MouseDownScaleUI", ui.efc.MouseDownScaleUI);
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/bigRich/BigRichRule")
    };
    return t
} (Dialog);
var BigRichStartUI = function(e) {
    function t() {
        this.bg = null;
        this.listBg = null;
        this.betMulList = null;
        this.btnChangeBet = null;
        this.fc_currBet = null;
        this.arrow = null;
        this.share_notice = null;
        this.cur_num_game = null;
        this.btn_share = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.bigRich.BigRichStartUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("EffectAnimation", laya.display.EffectAnimation);
        View.regComponent("ui.efc.MouseDownScaleUI", ui.efc.MouseDownScaleUI);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/bigRich/BigRichStart")
    };
    return t
} (View);
var BigRichSuccUI = function(e) {
    function t() {
        this.rankTrend = null;
        this.fc_gold = null;
        this.fc_xing = null;
        this.btnSub = null;
        this.btnShare = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.bigRich.BigRichSuccUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("EffectAnimation", laya.display.EffectAnimation);
        View.regComponent("ui.efc.MouseDownScaleUI", ui.efc.MouseDownScaleUI);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/bigRich/BigRichSucc")
    };
    return t
} (Dialog);
var AddressUI = function(e) {
    function t() {
        this.btnClose = null;
        this.btn_tiJiao = null;
        this.name = null;
        this.phone = null;
        this.province = null;
        this.city = null;
        this.town = null;
        this.address = null;
        this.itemNme = null;
        this.cityText = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dialog.AddressUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dialog/Address")
    };
    return t
} (Dialog);
var AlmsShareUI = function(e) {
    function t() {
        this.bg_light = null;
        this.RewardGold = null;
        this.btnClose = null;
        this.left_time = null;
        this.boxleftTime = null;
        this.leftTime = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dialog.AlmsShareUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dialog/AlmsShare")
    };
    return t
} (Dialog);
var AnnouncementUI = function(e) {
    function t() {
        this.list = null;
        this.contentBox = null;
        this.panels = null;
        this.txtBox = null;
        this.versionNumTxt = null;
        this.label_text = null;
        this.title = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dialog.AnnouncementUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("EffectAnimation", laya.display.EffectAnimation);
        View.regComponent("ui.efc.MouseDownScaleUI", ui.efc.MouseDownScaleUI);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dialog/Announcement")
    };
    return t
} (Dialog);
var BossShareDialogUI = function(e) {
    function t() {
        this.btnShare = null;
        this.btnCheck = null;
        this.bossIcon = null;
        this.paobeiText = null;
        this.bossDes = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dialog.BossShareDialogUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dialog/BossShareDialog")
    };
    return t
} (Dialog);
var BuyQuickUI = function(e) {
    function t() {
        this.goods_list = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dialog.BuyQuickUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("EffectAnimation", laya.display.EffectAnimation);
        View.regComponent("ui.efc.MouseDownScaleUI", ui.efc.MouseDownScaleUI);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dialog/BuyQuick")
    };
    return t
} (Dialog);
var CannonSkinsUI = function(e) {
    function t() {
        this.btnSkin = null;
        this.btnWing = null;
        this.all = null;
        this.active = null;
        this.vip = null;
        this.listArg = null;
        this.skinBox = null;
        this.cannon_skin = null;
        this.bullet_skin = null;
        this.net = null;
        this.skin_name = null;
        this.has_none = null;
        this.txt_condition = null;
        this.btnGet_skin = null;
        this.has_time = null;
        this.hasEquip = null;
        this.lab_left_time = null;
        this.lab_des = null;
        this.btnEquip = null;
        this.wingCntBox = null;
        this.wingSpineBox = null;
        this.btnGetWing = null;
        this.btnUseWing = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dialog.CannonSkinsUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dialog/CannonSkins")
    };
    return t
} (Dialog);
var CertificateUI = function(e) {
    function t() {
        this.btnClose = null;
        this.submit_btn = null;
        this.name = null;
        this.id_num = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dialog.CertificateUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dialog/Certificate")
    };
    return t
} (Dialog);
var ChoiceAccountUI = function(e) {
    function t() {
        this.btnClose = null;
        this.user_name = null;
        this.psw = null;
        this.list_box = null;
        this.user_history_list = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dialog.ChoiceAccountUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dialog/ChoiceAccount")
    };
    return t
} (Dialog);
var CommonSendSuccessUI = function(e) {
    function t() {
        this.btnSubmit = null;
        this.btnCancel = null;
        this.msgLabel = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dialog.CommonSendSuccessUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dialog/CommonSendSuccess")
    };
    return t
} (Dialog);
var CreateRoomUI = function(e) {
    function t() {
        this.btnCreate = null;
        this.msgText = null;
        this.roomName = null;
        this.roomPwd = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dialog.CreateRoomUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dialog/CreateRoom")
    };
    return t
} (Dialog);
var DaoDanSpecialUI = function(e) {
    function t() {
        this.choiceList = null;
        this.btnClose = null;
        this.btnCreateRoom = null;
        this.btnQuickEnter = null;
        this.roomList = null;
        this.titleLJ = null;
        this.titleDD = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dialog.DaoDanSpecialUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("EffectAnimation", laya.display.EffectAnimation);
        View.regComponent("ui.efc.MouseDownScaleUI", ui.efc.MouseDownScaleUI);
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dialog/DaoDanSpecial")
    };
    return t
} (Dialog);
var DayLoginShareUI = function(e) {
    function t() {
        this.btnShare = null;
        this.shareImg = null;
        this.fenXiang1 = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dialog.DayLoginShareUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("ui.UIRoot.FX.fenxiangyaoqingUI", ui.UIRoot.FX.fenxiangyaoqingUI);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dialog/DayLoginShare")
    };
    return t
} (Dialog);
var DingYueUI = function(e) {
    function t() {
        this.goods_icon = null;
        this.arrach_num = null;
        this.btnDingyue = null;
        this.getNum = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dialog.DingYueUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dialog/DingYue")
    };
    return t
} (Dialog);
var EmailUI = function(e) {
    function t() {
        this.no_email_bg = null;
        this.email_dir = null;
        this.all_receive = null;
        this.email_list = null;
        this.mailBox = null;
        this.d_title = null;
        this.user_id = null;
        this.name = null;
        this.des = null;
        this.time = null;
        this.attachment_list = null;
        this.delete = null;
        this.receive = null;
        this.jdBox = null;
        this.jdList = null;
        this.itemname = null;
        this.itemma = null;
        this.btnCopy = null;
        this.btnoneCopy = null;
        this.labTime = null;
        this.jdLabBox = null;
        this.jdLab = null;
        this.jdNum = null;
        this.jdtxt1 = null;
        this.jdMoney = null;
        this.jdyuan = null;
        this.wxhongbao = null;
        this.labWX = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dialog.EmailUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dialog/Email")
    };
    return t
} (Dialog);
var EnterRoomUI = function(e) {
    function t() {
        this.btnClose = null;
        this.btnEnterRoom = null;
        this.deFangJian = null;
        this.roomName = null;
        this.roomPwd = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dialog.EnterRoomUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dialog/EnterRoom")
    };
    return t
} (Dialog);
var EntranceGuidanceUI = function(e) {
    function t() {
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dialog.EntranceGuidanceUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dialog/EntranceGuidance")
    };
    return t
} (Dialog);
var EstablishAccountUI = function(e) {
    function t() {
        this.create_user = null;
        this.btnClose = null;
        this.user_name = null;
        this.psw = null;
        this.re_psw = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dialog.EstablishAccountUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dialog/EstablishAccount")
    };
    return t
} (Dialog);
var EstablishAccount2UI = function(e) {
    function t() {
        this.create_user = null;
        this.btnClose = null;
        this.user_name = null;
        this.psw = null;
        this.re_psw = null;
        this.real_name = null;
        this.id_num = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dialog.EstablishAccount2UI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dialog/EstablishAccount2")
    };
    return t
} (Dialog);
var ExchangeJuanUI = function(e) {
    function t() {
        this.iconmoney = null;
        this.FC_JiFen = null;
        this.imgyuan = null;
        this.hongbaoHint = null;
        this.btnLog = null;
        this.dataList = null;
        this.icon_money = null;
        this.getYb = null;
        this.btnJiangquanBox = null;
        this.btnJiangquan = null;
        this.btnHongbaoBox = null;
        this.btnHongbao = null;
        this.btnMonsterBox = null;
        this.btnMonster = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dialog.ExchangeJuanUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dialog/ExchangeJuan")
    };
    return t
} (Dialog);
var ExchangePromptUI = function(e) {
    function t() {
        this.divBox = null;
        this.btnClose = null;
        this.btnYes = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dialog.ExchangePromptUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dialog/ExchangePrompt")
    };
    return t
} (Dialog);
var ExchangeRecordUI = function(e) {
    function t() {
        this.okJIlu = null;
        this.pagesNum = null;
        this.btnPrev = null;
        this.btnNext = null;
        this.dataList = null;
        this.noJIlu = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dialog.ExchangeRecordUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("Text", laya.display.Text);
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("EffectAnimation", laya.display.EffectAnimation);
        View.regComponent("ui.efc.MouseDownScaleUI", ui.efc.MouseDownScaleUI);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dialog/ExchangeRecord")
    };
    return t
} (Dialog);
var FirstBuyToOneUI = function(e) {
    function t() {
        this.btnGet = null;
        this.tt = null;
        this.quIconBox = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dialog.FirstBuyToOneUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dialog/FirstBuyToOne")
    };
    return t
} (Dialog);
var FirstBuyToOneNewUI = function(e) {
    function t() {
        this.ani1 = null;
        this.recharge = null;
        this.moveBox = null;
        this.btnTeHuiGuang = null;
        this.jbIcon = null;
        this.tuoWei = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dialog.FirstBuyToOneNewUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("recharge.FirstBuyToOneView", recharge.FirstBuyToOneView);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dialog/FirstBuyToOneNew")
    };
    return t
} (Dialog);
var FirstGiftBagUI = function(e) {
    function t() {
        this.jiangluo = null;
        this.dakai = null;
        this.img_qihang = null;
        this.openImg = null;
        this.welcomeBox = null;
        this.welcomeTxtBox = null;
        this.handAnim = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dialog.FirstGiftBagUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dialog/FirstGiftBag")
    };
    return t
} (Dialog);
var FirstRechargeUI = function(e) {
    function t() {
        this.contentView = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dialog.FirstRechargeUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("recharge.FirstRechargeView", recharge.FirstRechargeView);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dialog/FirstRecharge")
    };
    return t
} (Dialog);
var FreeGoldDialogUI = function(e) {
    function t() {
        this.goldText = null;
        this.btnShare = null;
        this.wechatIcon = null;
        this.qqIcon = null;
        this.btnGet = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dialog.FreeGoldDialogUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("Text", laya.display.Text);
        View.regComponent("HTMLDivElement", laya.html.dom.HTMLDivElement);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dialog/FreeGoldDialog")
    };
    return t
} (Dialog);
var FreeLotteryUI = function(e) {
    function t() {
        this.btnLottery = null;
        this.disBtn = null;
        this.redPointTip = null;
        this.fc_time = null;
        this.itemList = null;
        this.LabelTip = null;
        this.adTipLabel = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dialog.FreeLotteryUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dialog/FreeLottery")
    };
    return t
} (Dialog);
var GetFirstRewardUI = function(e) {
    function t() {
        this.btnGet = null;
        this.itemList = null;
        this.handAnim = null;
        this.jiangquan_get = null;
        this.jiangquan_tip = null;
        this.duihuan = null;
        this.duihuanlist = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dialog.GetFirstRewardUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dialog/GetFirstReward")
    };
    return t
} (Dialog);
var GetNewDaoDanUI = function(e) {
    function t() {
        this.ani1 = null;
        this.ani2 = null;
        this.bgBox = null;
        this.btnClose = null;
        this.itemList = null;
        this.btnreceive = null;
        this.titleTxt = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dialog.GetNewDaoDanUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ClickSound", ClickSound);
        View.regComponent("ButtonSound", ButtonSound);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dialog/GetNewDaoDan")
    };
    return t
} (Dialog);
var GetRewardUI = function(e) {
    function t() {
        this.ani1 = null;
        this.bgBox = null;
        this.btnClose = null;
        this.titleBox = null;
        this.itemList = null;
        this.titleTxt = null;
        this.btnreceive = null;
        this.Continue = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dialog.GetRewardUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ClickSound", ClickSound);
        View.regComponent("ButtonSound", ButtonSound);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dialog/GetReward")
    };
    return t
} (Dialog);
var GetRewardNewUI = function(e) {
    function t() {
        this.ani1 = null;
        this.ani2 = null;
        this.bgBox = null;
        this.btnClose = null;
        this.itemList = null;
        this.btnreceive = null;
        this.Continue = null;
        this.titleTxt = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dialog.GetRewardNewUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ClickSound", ClickSound);
        View.regComponent("ButtonSound", ButtonSound);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dialog/GetRewardNew")
    };
    return t
} (Dialog);
var InvitationWXUI = function(e) {
    function t() {
        this.goldNum = null;
        this.jiangQuanNum = null;
        this.suoDingNum = null;
        this.kuangPaoNum = null;
        this.inviteNum = null;
        this.prizeLsit = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dialog.InvitationWXUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dialog/InvitationWX")
    };
    return t
} (Dialog);
var LoginPhoneUI = function(e) {
    function t() {
        this.send_img = null;
        this.time_c = null;
        this.phone_num = null;
        this.code_num = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dialog.LoginPhoneUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("EffectAnimation", laya.display.EffectAnimation);
        View.regComponent("ui.efc.MouseDownScaleUI", ui.efc.MouseDownScaleUI);
        View.regComponent("Text", laya.display.Text);
        View.regComponent("ButtonSound", ButtonSound);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dialog/LoginPhone")
    };
    return t
} (Dialog);
var LuckyShakeUI = function(e) {
    function t() {
        this.ani1 = null;
        this.boxView = null;
        this.moveBox = null;
        this.jbIcon = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dialog.LuckyShakeUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dialog/LuckyShake")
    };
    return t
} (Dialog);
var LuckyTurntableUI = function(e) {
    function t() {
        this.closeBg = null;
        this.prize_box = null;
        this.light_ani = null;
        this.lottery_draw = null;
        this.no_times = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dialog.LuckyTurntableUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dialog/LuckyTurntable")
    };
    return t
} (Dialog);
var MpGiftBagUI = function(e) {
    function t() {
        this.giftList = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dialog.MpGiftBagUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("Text", laya.display.Text);
        View.regComponent("ButtonSound", ButtonSound);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dialog/MpGiftBag")
    };
    return t
} (Dialog);
var NewPlayerGiftUI = function(e) {
    function t() {
        this.gift_list = null;
        this.np_choose = null;
        this.np_prize_bg = null;
        this.np_prize = null;
        this.np_day = null;
        this.np_take_tip = null;
        this.np_prize_name = null;
        this.prize_time = null;
        this.box_final_prize = null;
        this.final_prize_choose = null;
        this.final_prize = null;
        this.np_final_choose = null;
        this.btndingyue = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dialog.NewPlayerGiftUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dialog/NewPlayerGift")
    };
    return t
} (Dialog);
var NoticeboxUI = function(e) {
    function t() {
        this.sureSubmit = null;
        this.textLabel = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dialog.NoticeboxUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dialog/Noticebox")
    };
    return t
} (Dialog);
var OneMoneyGiftUI = function(e) {
    function t() {
        this.contentView = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dialog.OneMoneyGiftUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("recharge.OneMoneyGiftView", recharge.OneMoneyGiftView);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dialog/OneMoneyGift")
    };
    return t
} (Dialog);
var PackageUI = function(e) {
    function t() {
        this.btnClose = null;
        this.no_goods = null;
        this.goods_box_a = null;
        this.big_bg = null;
        this.listVis = null;
        this.rightDom = null;
        this.btnBox = null;
        this.btnGift = null;
        this.btnUse = null;
        this.btnBuy = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dialog.PackageUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dialog/Package")
    };
    return t
} (Dialog);
var PackageGiftUI = function(e) {
    function t() {
        this.goods_box_cion = null;
        this.goods_icon = null;
        this.input_search = null;
        this.result_box = null;
        this.img_sex = null;
        this.img_userHead = null;
        this.img_vipLevel = null;
        this.label_name = null;
        this.label_id = null;
        this.no_result_box = null;
        this.goods_name = null;
        this.gift_num = null;
        this.have_num = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dialog.PackageGiftUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("ClickSound", ClickSound);
        View.regComponent("EffectAnimation", laya.display.EffectAnimation);
        View.regComponent("ui.efc.MouseDownScaleUI", ui.efc.MouseDownScaleUI);
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dialog/PackageGift")
    };
    return t
} (Dialog);
var PackageGift2UI = function(e) {
    function t() {
        this.giftLists = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dialog.PackageGift2UI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dialog/PackageGift2")
    };
    return t
} (Dialog);
var PayQrCodeUI = function(e) {
    function t() {
        this.qrCode = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dialog.PayQrCodeUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dialog/PayQrCode")
    };
    return t
} (Dialog);
var PersonalCenterUI = function(e) {
    function t() {
        this.personalBox = null;
        this.btnCopy = null;
        this.btnModify = null;
        this.btnReplaceHead = null;
        this.musicImg = null;
        this.btnMusic = null;
        this.soundImg = null;
        this.btnSound = null;
        this.yiRenZhengIcon = null;
        this.btnNameRenZheng = null;
        this.nickTxt = null;
        this.uncertifiedTxt = null;
        this.idClip = null;
        this.headImg = null;
        this.keFuBox = null;
        this.kfTxt = null;
        this.telTxt = null;
        this.wxGzhTxt = null;
        this.kfWxTxt = null;
        this.gongZhongHao = null;
        this.wxNumTxt = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dialog.PersonalCenterUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("ClickSound", ClickSound);
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dialog/PersonalCenter")
    };
    return t
} (Dialog);
var PhoneBindingUI = function(e) {
    function t() {
        this.btnClose = null;
        this.phone_num = null;
        this.code = null;
        this.time_c = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dialog.PhoneBindingUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dialog/PhoneBinding")
    };
    return t
} (Dialog);
var PhoneRechargeUI = function(e) {
    function t() {
        this.btnClose = null;
        this.btnSubmit = null;
        this.phone = null;
        this.confirmPhone = null;
        this.itemName = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dialog.PhoneRechargeUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dialog/PhoneRecharge")
    };
    return t
} (Dialog);
var PigBankUI = function(e) {
    function t() {
        this.btnGet = null;
        this.btnIcon = null;
        this.btnShop = null;
        this.fc_vip = null;
        this.fc_1 = null;
        this.fc_2 = null;
        this.fc_money = null;
        this.tip_vip = null;
        this.tip_1 = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dialog.PigBankUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("EffectAnimation", laya.display.EffectAnimation);
        View.regComponent("ui.efc.MouseDownScaleUI", ui.efc.MouseDownScaleUI);
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dialog/PigBank")
    };
    return t
} (Dialog);
var PlayPackageUI = function(e) {
    function t() {
        this.contentView = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dialog.PlayPackageUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("recharge.PlayPackageView", recharge.PlayPackageView);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dialog/PlayPackage")
    };
    return t
} (Dialog);
var PokedexUI = function(e) {
    function t() {
        this.btnClose = null;
        this.bossList = null;
        this.specialList = null;
        this.icon = null;
        this.nameImg = null;
        this.pokedexList = null;
        this.btnBoss = null;
        this.btnSpecial = null;
        this.btnGeneral = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dialog.PokedexUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dialog/Pokedex")
    };
    return t
} (Dialog);
var PreventIndulgeUI = function(e) {
    function t() {
        this.btnClose = null;
        this.btnAppraisal = null;
        this.leiJiTxt = null;
        this.hourTxt = null;
        this.promptTxt = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dialog.PreventIndulgeUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dialog/PreventIndulge")
    };
    return t
} (Dialog);
var QRDownloadUI = function(e) {
    function t() {
        this.QRImage = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dialog.QRDownloadUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("EffectAnimation", laya.display.EffectAnimation);
        View.regComponent("ui.efc.MouseDownScaleUI", ui.efc.MouseDownScaleUI);
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dialog/QRDownload")
    };
    return t
} (Dialog);
var QuickBuyUI = function(e) {
    function t() {
        this.btnClose = null;
        this.btnBuy = null;
        this.icon = null;
        this.name = null;
        this.num = null;
        this.activityPrice = null;
        this.OriginalPrice = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dialog.QuickBuyUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dialog/QuickBuy")
    };
    return t
} (Dialog);
var RankListUI = function(e) {
    function t() {
        this.no_list = null;
        this.list_box = null;
        this.btnPrev = null;
        this.prevIcon = null;
        this.btnNext = null;
        this.nextIcon = null;
        this.page = null;
        this.lists = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dialog.RankListUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("EffectAnimation", laya.display.EffectAnimation);
        View.regComponent("ui.efc.MouseDownScaleUI", ui.efc.MouseDownScaleUI);
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dialog/RankList")
    };
    return t
} (Dialog);
var RedPackageGetUI = function(e) {
    function t() {
        this.btnJoin = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dialog.RedPackageGetUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dialog/RedPackageGet")
    };
    return t
} (Dialog);
var RoleChoiceUI = function(e) {
    function t() {
        this.list_role = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dialog.RoleChoiceUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("ClickSound", ClickSound);
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dialog/RoleChoice")
    };
    return t
} (Dialog);
var SeaGodGiftUI = function(e) {
    function t() {
        this.gift_1 = null;
        this.gift_2 = null;
        this.gift_3 = null;
        this.gift_4 = null;
        this.gift_5 = null;
        this.gift_6 = null;
        this.gift_7 = null;
        this.gift_8 = null;
        this.gift_9 = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dialog.SeaGodGiftUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("Text", laya.display.Text);
        View.regComponent("EffectAnimation", laya.display.EffectAnimation);
        View.regComponent("ui.efc.MouseDownScaleUI", ui.efc.MouseDownScaleUI);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dialog/SeaGodGift")
    };
    return t
} (Dialog);
var SendUserShopUI = function(e) {
    function t() {
        this.btnSubmit = null;
        this.onImg = null;
        this.msgLabel = null;
        this.propIcon = null;
        this.numClip = null;
        this.priceLabel = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dialog.SendUserShopUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("EffectAnimation", laya.display.EffectAnimation);
        View.regComponent("ui.efc.MouseDownScaleUI", ui.efc.MouseDownScaleUI);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dialog/SendUserShop")
    };
    return t
} (Dialog);
var SetAvatarUI = function(e) {
    function t() {
        this.btnClose = null;
        this.xiangKuang = null;
        this.headBox = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dialog.SetAvatarUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ClickSound", ClickSound);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dialog/SetAvatar")
    };
    return t
} (Dialog);
var SetNickUI = function(e) {
    function t() {
        this.setNickBox = null;
        this.BG = null;
        this.baiBG = null;
        this.btnClose = null;
        this.nickInput = null;
        this.password = null;
        this._password = null;
        this.btnSet = null;
        this.passwordTxt = null;
        this._passwordTxt = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dialog.SetNickUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dialog/SetNick")
    };
    return t
} (Dialog);
var SetingUI = function(e) {
    function t() {
        this.musicImg = null;
        this.btnMusic = null;
        this.soundImg = null;
        this.btnSound = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dialog.SetingUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ClickSound", ClickSound);
        View.regComponent("ButtonSound", ButtonSound);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dialog/Seting")
    };
    return t
} (Dialog);
var SevenDayRechargeUI = function(e) {
    function t() {
        this.menu1 = null;
        this.menu0 = null;
        this.box0 = null;
        this.btnBuy = null;
        this.rechargeLabel1 = null;
        this.btnBuqian = null;
        this.reward0 = null;
        this.reward1 = null;
        this.reward2 = null;
        this.nowDayList = null;
        this.box1 = null;
        this.finishView = null;
        this.finishDh = null;
        this.dhScale = null;
        this.unFinishView = null;
        this.signP = null;
        this.noSign = null;
        this.dhList = null;
        this.dhBt1 = null;
        this.duihuan1 = null;
        this.dhDes1 = null;
        this.dhBt0 = null;
        this.duihuan0 = null;
        this.dhDes0 = null;
        this.sendLabel0 = null;
        this.btnRule = null;
        this.sendLabel1 = null;
        this.infoDes = null;
        this.dayTimeLabel = null;
        this.rechargeLabel0 = null;
        this.limitTime = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dialog.SevenDayRechargeUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("HTMLDivElement", laya.html.dom.HTMLDivElement);
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dialog/SevenDayRecharge")
    };
    return t
} (Dialog);
var SevenDayRechargeRuleUI = function(e) {
    function t() {
        this.des = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dialog.SevenDayRechargeRuleUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dialog/SevenDayRechargeRule")
    };
    return t
} (Dialog);
var ShopMallUI = function(e) {
    function t() {
        this.ani1 = null;
        this.ani2 = null;
        this.iosHint = null;
        this.shopList = null;
        this.btnBuy = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dialog.ShopMallUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dialog/ShopMall")
    };
    return t
} (Dialog);
var SmallGoldPigUI = function(e) {
    function t() {
        this.imgTitle = null;
        this.itemKuang = null;
        this.itemNum = null;
        this.btnreceive = null;
        this.itemIcon = null;
        this.imgtwo = null;
        this.btnShare = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dialog.SmallGoldPigUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dialog/SmallGoldPig")
    };
    return t
} (Dialog);
var UserAgreementUI = function(e) {
    function t() {
        this.btnClose = null;
        this._textContent = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dialog.UserAgreementUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("Text", laya.display.Text);
        View.regComponent("ButtonSound", ButtonSound);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dialog/UserAgreement")
    };
    return t
} (Dialog);
var VipInfoUI = function(e) {
    function t() {
        this.costProgress = null;
        this.rechargeBtn = null;
        this.currVipIcon = null;
        this.nextVipIcon = null;
        this.txt_desc_1 = null;
        this.txt_desc_2 = null;
        this.txt_desc_3 = null;
        this.fc_needCost = null;
        this.fc_costProgress = null;
        this.itemList = null;
        this.detailList = null;
        this.btnDetailPrev = null;
        this.btnDetailNext = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dialog.VipInfoUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("EffectAnimation", laya.display.EffectAnimation);
        View.regComponent("ui.efc.MouseDownScaleUI", ui.efc.MouseDownScaleUI);
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dialog/VipInfo")
    };
    return t
} (Dialog);
var VipNoticeBoxUI = function(e) {
    function t() {
        this.vipLevel = null;
        this.notEnough = null;
        this.getEnough = null;
        this.btnSure = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dialog.VipNoticeBoxUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("Text", laya.display.Text);
        View.regComponent("ButtonSound", ButtonSound);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dialog/VipNoticeBox")
    };
    return t
} (Dialog);
var VipServiceUI = function(e) {
    function t() {
        this.wxCode = null;
        this.QRCode = null;
        this.btnCopy = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dialog.VipServiceUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("Text", laya.display.Text);
        View.regComponent("ButtonSound", ButtonSound);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dialog/VipService")
    };
    return t
} (Dialog);
var WeekCardUI = function(e) {
    function t() {
        this.contentView = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dialog.WeekCardUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("recharge.WeekCardView", recharge.WeekCardView);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dialog/WeekCard")
    };
    return t
} (Dialog);
var almsShare2UI = function(e) {
    function t() {
        this.btnClose = null;
        this.RewardGold = null;
        this.invitationList = null;
        this.personNum = null;
        this.invite = null;
        this.boxApk = null;
        this.btn_buy = null;
        this.receive = null;
        this.boxIos = null;
        this.boxleftTime = null;
        this.leftTime = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dialog.almsShare2UI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dialog/almsShare2")
    };
    return t
} (Dialog);
var chatSystemUI = function(e) {
    function t() {
        this.chatRoom = null;
        this.chatService = null;
        this.btnBQ = null;
        this.btnSendMsg = null;
        this.friendsList = null;
        this.chatLists = null;
        this.qucikChatBox = null;
        this.quickChatList = null;
        this.btnQuickChat = null;
        this.inputChatMsg = null;
        this.emjoysBox = null;
        this.emjoyList = null;
        this.horn = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dialog.chatSystemUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("ClickSound", ClickSound);
        View.regComponent("EffectAnimation", laya.display.EffectAnimation);
        View.regComponent("ui.efc.MouseDownScaleUI", ui.efc.MouseDownScaleUI);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dialog/chatSystem")
    };
    return t
} (Dialog);
var davyJonesGiftUI = function(e) {
    function t() {
        this.itemList = null;
        this.propList = null;
        this.btnBuy = null;
        this.btnBuyImg = null;
        this.remainingTime = null;
        this.intervalTime = null;
        this.actTime = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dialog.davyJonesGiftUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dialog/davyJonesGift")
    };
    return t
} (Dialog);
var loginGiftUI = function(e) {
    function t() {
        this.giftProgress = null;
        this.receive_btn = null;
        this.Sign_list = null;
        this.accumulative_list = null;
        this.btndingyue = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dialog.loginGiftUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dialog/loginGift")
    };
    return t
} (Dialog);
var shopMallCenterUI = function(e) {
    function t() {
        this.btnClose = null;
        this.aliPay = null;
        this.wePay = null;
        this.goodsName = null;
        this.price = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dialog.shopMallCenterUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dialog/shopMallCenter")
    };
    return t
} (Dialog);
var SpecialGiftDialogUI = function(e) {
    function t() {
        this.contentView = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dialog.specialGift.SpecialGiftDialogUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("recharge.SpecialGiftView", recharge.SpecialGiftView);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dialog/specialGift/SpecialGiftDialog")
    };
    return t
} (Dialog);
var wxAuthorizeUI = function(e) {
    function t() {
        this.btnAuth = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dialog.wxAuthorizeUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("EffectAnimation", laya.display.EffectAnimation);
        View.regComponent("ui.efc.MouseDownScaleUI", ui.efc.MouseDownScaleUI);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dialog/wxAuthorize")
    };
    return t
} (Dialog);
var BuyDragonBallUI = function(e) {
    function t() {
        this.btnSubmit = null;
        this.onImg = null;
        this.msgLabel = null;
        this.notAgain = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dragonBall.BuyDragonBallUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("EffectAnimation", laya.display.EffectAnimation);
        View.regComponent("ui.efc.MouseDownScaleUI", ui.efc.MouseDownScaleUI);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dragonBall/BuyDragonBall")
    };
    return t
} (Dialog);
var DragonBallUI = function(e) {
    function t() {
        this.dragonBallNum = null;
        this.maskBg = null;
        this.selectMenu = null;
        this.selectList = null;
        this.iconBuy = null;
        this.buyNum = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dragonBall.DragonBallUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ClickSound", ClickSound);
        View.regComponent("EffectAnimation", laya.display.EffectAnimation);
        View.regComponent("ui.efc.MouseDownScaleUI", ui.efc.MouseDownScaleUI);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dragonBall/DragonBall")
    };
    return t
} (View);
var DragonBallEffUI = function(e) {
    function t() {
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dragonBall.DragonBallEffUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("Particle2D", laya.particle.Particle2D);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dragonBall/DragonBallEff")
    };
    return t
} (View);
var DTResultUI = function(e) {
    function t() {
        this.box_1 = null;
        this.box_0 = null;
        this.btn_1 = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dtdb.DTResultUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("Text", laya.display.Text);
        View.regComponent("ButtonSound", ButtonSound);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dtdb/DTResult")
    };
    return t
} (Dialog);
var DtdbUI = function(e) {
    function t() {
        this.btnStart = null;
        this.btn_104 = null;
        this.btn_105 = null;
        this.btn_106 = null;
        this.btn_107 = null;
        this.t_0 = null;
        this.t_1 = null;
        this.selIcon = null;
        this.fc_104 = null;
        this.fc_105 = null;
        this.fc_106 = null;
        this.fc_107 = null;
        this.fc_0 = null;
        this.btnGet = null;
        this.ruleList = null;
        this.tipBox = null;
        this.tipTitle = null;
        this.tipGold = null;
        this.tipList = null;
        this.rewardBox = null;
        this.dtList = null;
        this.noticeList = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dtdb.DtdbUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("EffectAnimation", laya.display.EffectAnimation);
        View.regComponent("ui.efc.MouseDownScaleUI", ui.efc.MouseDownScaleUI);
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dtdb/Dtdb")
    };
    return t
} (Dialog);
var HitEggUI = function(e) {
    function t() {
        this.lab_t = null;
        this.lab_score = null;
        this.lab_blt = null;
        this.mulList = null;
        this.eggList = null;
        this.waiting = null;
        this.btnSmt = null;
        this.btnPlay = null;
        this.costIcon = null;
        this.costNum = null;
        this.resultTip = null;
        this.resultLab = null;
        this.hammer = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.dtdb.HitEggUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("Text", laya.display.Text);
        View.regComponent("ButtonSound", ButtonSound);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/dtdb/HitEgg")
    };
    return t
} (Dialog);
var fishSceneUI = function(e) {
    function t() {
        this.ani1 = null;
        this.bgColorBox = null;
        this.bg = null;
        this.jiuJiJinBg = null;
        this.bossComeBg = null;
        this.newBg = null;
        this.fishGroupComeAni = null;
        this.fishGroupComingBox = null;
        this.fireClickBox = null;
        this.fishGroupBox = null;
        this.fishGroup_1 = null;
        this.fishGroup_2 = null;
        this.fishGroup_3 = null;
        this.fishGroup_4 = null;
        this.fishGroup_5 = null;
        this.fishGroup_6 = null;
        this.fishGroup_7 = null;
        this.fishBox = null;
        this.group_0 = null;
        this.group_1 = null;
        this.group_2 = null;
        this.group_3 = null;
        this.group_4 = null;
        this.group_5 = null;
        this.hitUIBox = null;
        this.sockLightBox = null;
        this.spineFishDead = null;
        this.shanDianLianBox = null;
        this.bulletBox = null;
        this.netBox = null;
        this.menuBox = null;
        this.btnSetting = null;
        this.btnAtlas = null;
        this.btnExit = null;
        this.btnMenuBack = null;
        this.maskRight = null;
        this.maskLeft = null;
        this.maskBottom = null;
        this.maskTop = null;
        this.menuBar = null;
        this.btnOnlineGift = null;
        this.fc_og_LeftTime = null;
        this.og_Box = null;
        this.seven_day = null;
        this.seven_day_redPoint = null;
        this.bingDongBox = null;
        this.coreBox = null;
        this.waitJoin_3_deng = null;
        this.waitJoin_4_deng = null;
        this.waitJoin_2_deng = null;
        this.waitJoin_3 = null;
        this.waitJoin_4 = null;
        this.waitJoin_2 = null;
        this.cannon1 = null;
        this.addMulTip = null;
        this.cannon1Click = null;
        this.paotaiContrl = null;
        this.btnHanHua = null;
        this.btnRedPackge = null;
        this.cannon2 = null;
        this.cannon3 = null;
        this.cannon4 = null;
        this.userInfoBox_1 = null;
        this.userMatchBox_1 = null;
        this.userInfoBox_2 = null;
        this.userMatchBox_2 = null;
        this.userInfoBox_3 = null;
        this.userMatchBox_3 = null;
        this.userInfoBox_4 = null;
        this.userMatchBox_4 = null;
        this.skillBox = null;
        this.skillBox2 = null;
        this.skill_qd_bg = null;
        this.skill_fs_bg = null;
        this.skill_fs_cd_bg = null;
        this.skill_fs_num = null;
        this.skill_fs_cd_time = null;
        this.skill_js_bg = null;
        this.skill_js_cd_bg = null;
        this.skill_js_num = null;
        this.skill_js_cd_time = null;
        this.skill_sd_bg = null;
        this.skill_sd_icon = null;
        this.skill_sd_cd_bg = null;
        this.fc_sd_num = null;
        this.skill_sd_cd_time = null;
        this.skill_bd_bg = null;
        this.skill_bd_icon = null;
        this.skill_bd_cd_bg = null;
        this.fc_bd_num = null;
        this.skill_bd_cd_time = null;
        this.skill_kb_bg = null;
        this.skill_kb_icon = null;
        this.skill_kb_cd_bg = null;
        this.fc_kb_num = null;
        this.skill_kb_cd_time = null;
        this.skill_sd_get_ani = null;
        this.skill_bd_get_ani = null;
        this.skill_kb_get_ani = null;
        this.btnSkillOpen = null;
        this.chatModel_3 = null;
        this.chatModel_2 = null;
        this.chatModel_1 = null;
        this.chatModel_0 = null;
        this.JiangQuanTip = null;
        this.fc_diff_quan = null;
        this.btnRedPkg = null;
        this.redPkgTip = null;
        this.btnShare = null;
        this.goldBox = null;
        this.bossComeBox = null;
        this.btnDuihuan = null;
        this.btnTeHui = null;
        this.btnWB = null;
        this.myScene = null;
        this.btnShopCity = null;
        this.shopTip = null;
        this.autoFireBtn = null;
        this.btnAutoFire = null;
        this.autoFireLight = null;
        this.autoFireZi = null;
        this.boxBtnLuckyShake = null;
        this.shakeRedPoint = null;
        this.haoJiaoIconAni = null;
        this.haoJiao = null;
        this.fc_haoJiaoNum = null;
        this.zhaDan = null;
        this.zhaDan_tol_num = null;
        this.dragonBall = null;
        this.btnRecorder = null;
        this.daoDanBar = null;
        this.dantou_tol_num = null;
        this.matchIconBox = null;
        this.matchSceneIcon = null;
        this.DTDBTit = null;
        this.DTIcon = null;
        this.DTEnd = null;
        this.DtNum = null;
        this.DtGold = null;
        this.matchInfoBox = null;
        this.matchBltIcon = null;
        this.scoreIcon = null;
        this.fc_score = null;
        this.fc_bltLeftNum = null;
        this.matchScoreUpBox = null;
        this.ForcePushImg = null;
        this.fp_bg = null;
        this.fc_126_num = null;
        this.BlackDiaImg = null;
        this.bd_bg = null;
        this.fc_125_num = null;
        this.btnOneYuanBuy = null;
        this.dropItemBox = null;
        this.GoldWaveBox = null;
        this.zhuanPanBox = null;
        this.daoDanBox = null;
        this.btn_dt_baiJin = null;
        this.fc_dt_baiJin = null;
        this.btn_dt_huangJin = null;
        this.fc_dt_huangJin = null;
        this.btn_dt_baiYin = null;
        this.fc_dt_baiYin = null;
        this.btn_dt_qinTong = null;
        this.fc_dt_qinTong = null;
        this.leaveSceneTimeTip = null;
        this.leaveTimeLabel = null;
        this.tips = null;
        this.smallJinPig = null;
        this.smallJinPigTip = null;
        this.descBox = null;
        this.itemDescLab = null;
        this.emjoyBox = null;
        this.goldPigBox = null;
        this.fish_goldpig_num = null;
        this.leftTimeBox = null;
        this.taskBox = null;
        this.goldpig_other = null;
        this.freeGold = null;
        this.socketCloseTipBox = null;
        this.socketCloseTipBgBox = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.fishSceneUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("Particle2D", laya.particle.Particle2D);
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("Text", laya.display.Text);
        View.regComponent("EffectAnimation", laya.display.EffectAnimation);
        View.regComponent("ui.efc.MouseDownScaleUI", ui.efc.MouseDownScaleUI);
        View.regComponent("ClickSound", ClickSound);
        View.regComponent("fish.dragonBall", fish.dragonBall);
        View.regComponent("kanjia.OneMoneyGiftBtn", kanjia.OneMoneyGiftBtn);
        View.regComponent("fish.FreeGoldBtn", fish.FreeGoldBtn);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/fishScene")
    };
    return t
} (View);
var gameCenterUI = function(e) {
    function t() {
        this.shanshuo = null;
        this.shanshuo2 = null;
        this.jinbi1 = null;
        this.jinbi2 = null;
        this.bg = null;
        this.topBox = null;
        this.userHead = null;
        this.headTip = null;
        this.userHeadImg = null;
        this.btnChong = null;
        this.btnLottery = null;
        this.FC_Gold = null;
        this.FC_JiangJuan = null;
        this.topBtnBox = null;
        this.boxBtnLuckyShake = null;
        this.shakeRedPointImg = null;
        this.btnFirstChongBox = null;
        this.seven_day = null;
        this.seven_day_redPoint = null;
        this.login_gift = null;
        this.loginGiftRedMark = null;
        this.btnLuckyDraw = null;
        this.lockyDrawTimeWrap = null;
        this.luckyDrawTimeTxt = null;
        this.btnLuckyDrawRedPoint = null;
        this.btnWeek = null;
        this.qrDownload = null;
        this.page_1 = null;
        this.btn10Entry = null;
        this.sc_0 = null;
        this.jingdian_logo = null;
        this.jingdian_pool_bg = null;
        this.jingdian_poolNum = null;
        this.btn100Entry = null;
        this.sc_6 = null;
        this.guizu_logo = null;
        this.btn1000Entry = null;
        this.sc_7 = null;
        this.btnSC = null;
        this.sc_9 = null;
        this.btnXyx = null;
        this.sc_8 = null;
        this.btnDaoDanEntry = null;
        this.sc_4 = null;
        this.page_2 = null;
        this.jingdian_10 = null;
        this.sc_1 = null;
        this.jingdian_100 = null;
        this.sc_2 = null;
        this.baibei_pool_bg = null;
        this.baibei_poolNum = null;
        this.jingdian_1000 = null;
        this.sc_3 = null;
        this.qianbei_pool_bg = null;
        this.qianbei_poolNum = null;
        this.page_3 = null;
        this.btnJewCity = null;
        this.btnDNLG = null;
        this.btnDFH = null;
        this.btnGZ = null;
        this.guizu_pool_bg = null;
        this.guizu_poolNum = null;
        this.btnDb = null;
        this.DTVipTip = null;
        this.backTo = null;
        this.bottomBox = null;
        this.bottomBg = null;
        this.btnMenu = null;
        this.freeGoldTip2 = null;
        this.bottomBtnBox = null;
        this.btnShopBox = null;
        this.btnActIcon = null;
        this.activityRedMark = null;
        this.btnBackIcon = null;
        this.backIconRedMark = null;
        this.btnExchange = null;
        this.exchangeImg = null;
        this.tipExchange = null;
        this.btnPaoTai = null;
        this.btnEmailIcon = null;
        this.emailRedMark = null;
        this.youYiSaiBtn = null;
        this.menuBox = null;
        this.menuBoxBg = null;
        this.menuBtnBox = null;
        this.btnEntrance = null;
        this.btnShortcut = null;
        this.btnSendRedPackage = null;
        this.btnNoticeIcon = null;
        this.btnKeFu = null;
        this.freeGoldTip = null;
        this.btnGuild = null;
        this.btnmpGift = null;
        this.btnExit = null;
        this.rightBtnBox2 = null;
        this.btnTask = null;
        this.taskRedP = null;
        this.btnRanking = null;
        this.rightBtnBox = null;
        this.hitMonster = null;
        this.btnDavyJonesGift = null;
        this.btnDavyJonesFX = null;
        this.btnXiFromSky = null;
        this.mainFeiList = null;
        this.mianFeiBox = null;
        this.btnInvitat = null;
        this.invitationRedMark = null;
        this.btnLuckyIcon = null;
        this.pigBank = null;
        this.leftBtnBox = null;
        this.leftBoxBtn = null;
        this.btnVipInfo = null;
        this.btn7Recharge = null;
        this.fnt7RechargeMoney = null;
        this.btnMianFel = null;
        this.btnGift = null;
        this.shuang11qipao = null;
        this.shuang11qipaoText = null;
        this.btnGiftFX = null;
        this.vipLevel_icon = null;
        this.btnQuIcon = null;
        this.btnStart = null;
        this.btnStartEdge = null;
        this.maStartUI = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.gameCenterUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("EffectAnimation", laya.display.EffectAnimation);
        View.regComponent("ui.efc.MouseDownScaleUI", ui.efc.MouseDownScaleUI);
        View.regComponent("Text", laya.display.Text);
        View.regComponent("ui.UIRoot.Lobby.HitMonsterViewUI", ui.UIRoot.Lobby.HitMonsterViewUI);
        View.regComponent("ui.UIRoot.FX.RightAwayPlayUI", ui.UIRoot.FX.RightAwayPlayUI);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/gameCenter")
    };
    return t
} (View);
var goldPigPrizeUI = function(e) {
    function t() {
        this.caishenAni = null;
        this.box_labaji = null;
        this.box_prize = null;
        this.ani_box1 = null;
        this.box_runPrize = null;
        this.box_prize2 = null;
        this.ani_box2 = null;
        this.box_runPrize2 = null;
        this.box_prize3 = null;
        this.ani_box3 = null;
        this.box_runPrize3 = null;
        this.baopen = null;
        this.calGold1 = null;
        this.calGold2 = null;
        this.calGold3 = null;
        this.zi_caishen = null;
        this.box_jbFX = null;
        this.goldpig_num_bg = null;
        this.prizepool_num_ani = null;
        this.prizepool_num = null;
        this.caishenLightAni = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.goldPig.goldPigPrizeUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/goldPig/goldPigPrize")
    };
    return t
} (Dialog);
var goldPigRuleUI = function(e) {
    function t() {
        this.btnClose = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.goldPig.goldPigRuleUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("EffectAnimation", laya.display.EffectAnimation);
        View.regComponent("ui.efc.MouseDownScaleUI", ui.efc.MouseDownScaleUI);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/goldPig/goldPigRule")
    };
    return t
} (Dialog);
var goldPigShowUI = function(e) {
    function t() {
        this.go_baiBeiRoom = null;
        this.roomGoldNum_1 = null;
        this.go_qianBeiRoom = null;
        this.roomGoldNum_2 = null;
        this.go_guiZuRoom = null;
        this.roomGoldNum_3 = null;
        this.btn_readRule = null;
        this.top_userhead = null;
        this.top_vipLevel = null;
        this.top_userName = null;
        this.top_userId = null;
        this.top_updateTime = null;
        this.top_poolType = null;
        this.top_getPrizeNum = null;
        this.top_sharePrize = null;
        this.top_sexFlag = null;
        this.list_poolPrize = null;
        this.userhead = null;
        this.vipLevel = null;
        this.userName = null;
        this.userId = null;
        this.updateTime = null;
        this.poolType = null;
        this.sharePrize_bg = null;
        this.getPrizeNum = null;
        this.sharePrize = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.goldPig.goldPigShowUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("EffectAnimation", laya.display.EffectAnimation);
        View.regComponent("ui.efc.MouseDownScaleUI", ui.efc.MouseDownScaleUI);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/goldPig/goldPigShow")
    };
    return t
} (Dialog);
var BlueTipUI = function(e) {
    function t() {
        this.bg = null;
        this.jiantou = null;
        this.bgtext = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.gui.BlueTipUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/gui/BlueTip")
    };
    return t
} (View);
var ChangeLeftTimeUI = function(e) {
    function t() {
        this.leftTimeFont = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.gui.ChangeLeftTimeUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/gui/ChangeLeftTime")
    };
    return t
} (View);
var ChatNoticeUI = function(e) {
    function t() {
        this.img = null;
        this.divBox = null;
        this.contentLabel = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.gui.ChatNoticeUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/gui/ChatNotice")
    };
    return t
} (View);
var ChongZhiMessageBoxUI = function(e) {
    function t() {
        this.btnCheck = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.gui.ChongZhiMessageBoxUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/gui/ChongZhiMessageBox")
    };
    return t
} (Dialog);
var ExileBossLeftTimeUI = function(e) {
    function t() {
        this.fishName = null;
        this.leftTimeFont = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.gui.ExileBossLeftTimeUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/gui/ExileBossLeftTime")
    };
    return t
} (View);
var FishChatNoticeUI = function(e) {
    function t() {
        this.messlab = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.gui.FishChatNoticeUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/gui/FishChatNotice")
    };
    return t
} (View);
var FriendsChatNoticeUI = function(e) {
    function t() {
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.gui.FriendsChatNoticeUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/gui/FriendsChatNotice")
    };
    return t
} (View);
var MessageBoxUI = function(e) {
    function t() {
        this.btnSubmit = null;
        this.onImg = null;
        this.btnCancel = null;
        this.offImg = null;
        this.msgLabel = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.gui.MessageBoxUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/gui/MessageBox")
    };
    return t
} (Dialog);
var MsgToastUI = function(e) {
    function t() {
        this.img = null;
        this.content = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.gui.MsgToastUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/gui/MsgToast")
    };
    return t
} (Dialog);
var NoticeUI = function(e) {
    function t() {
        this.divBox = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.gui.NoticeUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/gui/Notice")
    };
    return t
} (View);
var SceneLeftTimeUI = function(e) {
    function t() {
        this.left_time = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.gui.SceneLeftTimeUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/gui/SceneLeftTime")
    };
    return t
} (View);
var TumtablePrizeUI = function(e) {
    function t() {
        this.img = null;
        this.num = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.gui.TumtablePrizeUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/gui/TumtablePrize")
    };
    return t
} (View);
var emjoysViewUI = function(e) {
    function t() {
        this.btnCopy = null;
        this.btnGift = null;
        this.userHeadImg = null;
        this.usreSexImg = null;
        this.imgBar = null;
        this.vipLevelImg = null;
        this.userNameLabel = null;
        this.userIdLabel = null;
        this.currentChiBang = null;
        this.currentPaoTai = null;
        this.emjoysLists = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.gui.emjoysViewUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ClickSound", ClickSound);
        View.regComponent("EffectAnimation", laya.display.EffectAnimation);
        View.regComponent("ui.efc.MouseDownScaleUI", ui.efc.MouseDownScaleUI);
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/gui/emjoysView")
    };
    return t
} (View);
var waitingUI = function(e) {
    function t() {
        this.ani1 = null;
        this.bg = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.gui.waitingUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/gui/waiting")
    };
    return t
} (Dialog);
var ghApplyUI = function(e) {
    function t() {
        this.applyBt = null;
        this.ghName = null;
        this.ghBoss = null;
        this.xuanYanBox = null;
        this.ghDes = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.guild.ghApplyUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/guild/ghApply")
    };
    return t
} (Dialog);
var ghCreateDUI = function(e) {
    function t() {
        this.ghName = null;
        this.createBt = null;
        this.errorHitImg = null;
        this.errorHit = null;
        this.needNum = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.guild.ghCreateDUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("EffectAnimation", laya.display.EffectAnimation);
        View.regComponent("ui.efc.MouseDownScaleUI", ui.efc.MouseDownScaleUI);
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/guild/ghCreateD")
    };
    return t
} (Dialog);
var ghDialogUI = function(e) {
    function t() {
        this.content = null;
        this.viewStack = null;
        this.menuBox = null;
        this.ghRP = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.guild.ghDialogUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("guild.GuildStorage", guild.GuildStorage);
        View.regComponent("guild.GhUserView", guild.GhUserView);
        View.regComponent("guild.GhInfo", guild.GhInfo);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/guild/ghDialog")
    };
    return t
} (Dialog);
var ghInfoUI = function(e) {
    function t() {
        this.switchBg = null;
        this.btnSwitch = null;
        this.btnJoinList = null;
        this.ghRP = null;
        this.btnInvite = null;
        this.btnDismiss = null;
        this.btnExit = null;
        this.btnGhList = null;
        this.xuanYanBox = null;
        this.btnSave = null;
        this.textArea = null;
        this.sctVip = null;
        this.currVip = null;
        this.sctVipBox = null;
        this.vipList = null;
        this.sctBar = null;
        this.ghName = null;
        this.ghLeader = null;
        this.ghNum = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.guild.ghInfoUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/guild/ghInfo")
    };
    return t
} (View);
var ghInviteUI = function(e) {
    function t() {
        this.ipt = null;
        this.btnInvite = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.guild.ghInviteUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("EffectAnimation", laya.display.EffectAnimation);
        View.regComponent("ui.efc.MouseDownScaleUI", ui.efc.MouseDownScaleUI);
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/guild/ghInvite")
    };
    return t
} (Dialog);
var ghJoinDialogUI = function(e) {
    function t() {
        this.tip = null;
        this.createBt = null;
        this.searchInput = null;
        this.infoContain = null;
        this.ghName = null;
        this.ghBoss = null;
        this.ghMember = null;
        this.xuanYanBox = null;
        this.ghDes = null;
        this.joinBt = null;
        this.searchBt = null;
        this.listTitle = null;
        this.ghList = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.guild.ghJoinDialogUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("EffectAnimation", laya.display.EffectAnimation);
        View.regComponent("ui.efc.MouseDownScaleUI", ui.efc.MouseDownScaleUI);
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/guild/ghJoinDialog")
    };
    return t
} (Dialog);
var ghJoinListDialogUI = function(e) {
    function t() {
        this.tip = null;
        this.joinList = null;
        this.labNum = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.guild.ghJoinListDialogUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("guild.GhJoinListItem", guild.GhJoinListItem);
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/guild/ghJoinListDialog")
    };
    return t
} (Dialog);
var ghMemberJoinItemUI = function(e) {
    function t() {
        this.headImg = null;
        this.vipImg = null;
        this.nickName = null;
        this.refuseBt = null;
        this.agreeBt = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.guild.ghMemberJoinItemUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/guild/ghMemberJoinItem")
    };
    return t
} (View);
var ghMsgBoxUI = function(e) {
    function t() {
        this.btnSure = null;
        this.btnOk = null;
        this.btnNo = null;
        this.btnCancel = null;
        this.htmlDiv = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.guild.ghMsgBoxUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("HTMLDivElement", laya.html.dom.HTMLDivElement);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/guild/ghMsgBox")
    };
    return t
} (Dialog);
var ghPutAndGetDUI = function(e) {
    function t() {
        this.itemBg = null;
        this.zi_1 = null;
        this.zi_2 = null;
        this.labTT = null;
        this.itemName = null;
        this.labNum = null;
        this.itemIcon = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.guild.ghPutAndGetDUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/guild/ghPutAndGetD")
    };
    return t
} (Dialog);
var ghStorageUI = function(e) {
    function t() {
        this.storeList = null;
        this.pkgList = null;
        this.btnFreshen = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.guild.ghStorageUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/guild/ghStorage")
    };
    return t
} (View);
var ghUserItemUI = function(e) {
    function t() {
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.guild.ghUserItemUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/guild/ghUserItem")
    };
    return t
} (View);
var ghUserViewUI = function(e) {
    function t() {
        this.tip = null;
        this.userList = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.guild.ghUserViewUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ui.UIRoot.guild.ghUserItemUI", ui.UIRoot.guild.ghUserItemUI);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/guild/ghUserView")
    };
    return t
} (View);
var HornInputUI = function(e) {
    function t() {
        this.btnSend = null;
        this.ipt = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.horn.HornInputUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/horn/HornInput")
    };
    return t
} (Dialog);
var GongxitongguanUI = function(e) {
    function t() {
        this.ani1 = null;
        this.bgLight = null;
        this.itemIcon = null;
        this.itemName = null;
        this.itemNum = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.jewelCity.GongxitongguanUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/jewelCity/Gongxitongguan")
    };
    return t
} (Dialog);
var JewCardUI = function(e) {
    function t() {
        this.cardIcon = null;
        this.showAni = null;
        this.lightAni = null;
        this.itemBox = null;
        this.itemIcon = null;
        this.blackMask = null;
        this.kuangIcon = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.jewelCity.JewCardUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/jewelCity/JewCard")
    };
    return t
} (View);
var JewLoadingUI = function(e) {
    function t() {
        this.bg = null;
        this.progress = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.jewelCity.JewLoadingUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/jewelCity/JewLoading")
    };
    return t
} (View);
var JewLogUI = function(e) {
    function t() {
        this.logList = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.jewelCity.JewLogUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("EffectAnimation", laya.display.EffectAnimation);
        View.regComponent("ui.efc.MouseDownScaleUI", ui.efc.MouseDownScaleUI);
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/jewelCity/JewLog")
    };
    return t
} (Dialog);
var JewRuleUI = function(e) {
    function t() {
        this.btn_0 = null;
        this.btn_1 = null;
        this.btn_2 = null;
        this.box_0 = null;
        this.box_1 = null;
        this.mulList = null;
        this.box_2 = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.jewelCity.JewRuleUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("EffectAnimation", laya.display.EffectAnimation);
        View.regComponent("ui.efc.MouseDownScaleUI", ui.efc.MouseDownScaleUI);
        View.regComponent("HTMLDivElement", laya.html.dom.HTMLDivElement);
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/jewelCity/JewRule")
    };
    return t
} (Dialog);
var JewelUI = function(e) {
    function t() {
        this.icon = null;
        this.linkedAni = null;
        this.linkedBombAni = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.jewelCity.JewelUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/jewelCity/Jewel")
    };
    return t
} (View);
var JewelCityMainUI = function(e) {
    function t() {
        this.bgBox = null;
        this.bg = null;
        this.cnt = null;
        this.round1Box = null;
        this.round2Box = null;
        this.round3Box = null;
        this.round3_bg_1 = null;
        this.round3_bg_2 = null;
        this.round3_bg_3 = null;
        this.treeBoxLeft = null;
        this.treeBoxRight = null;
        this.cardBox = null;
        this.countDownBox = null;
        this.fc_countDown = null;
        this.JewelUIBox = null;
        this.head = null;
        this.nick = null;
        this.lianJiBox = null;
        this.fc_logNum = null;
        this.fc_gold = null;
        this.btnAdd = null;
        this.userGoldIcon = null;
        this.btnMul = null;
        this.btnMulIcon = null;
        this.fc_currBet = null;
        this.betMulList = null;
        this.autoIcon = null;
        this.btnStart = null;
        this.btnStartIcon = null;
        this.logListBox = null;
        this.BrickListLeft = null;
        this.BrickListRight = null;
        this.BrickListBottom = null;
        this.BrickListCenter = null;
        this.JewelBox = null;
        this.fc_winGold = null;
        this.btnAutoBetAni = null;
        this.clickGoOnTip = null;
        this.iconMusicOff = null;
        this.restartTipBox = null;
        this.bg_1 = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.jewelCity.JewelCityMainUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("EffectAnimation", laya.display.EffectAnimation);
        View.regComponent("ui.efc.MouseDownScaleUI", ui.efc.MouseDownScaleUI);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/jewelCity/JewelCityMain")
    };
    return t
} (View);
var JewelCityMain_adapterUI = function(e) {
    function t() {
        this.mask_1 = null;
        this.mask_2 = null;
        this.mask_3 = null;
        this.mask_4 = null;
        this.bgBox = null;
        this.bg = null;
        this.cnt = null;
        this.round3Box = null;
        this.round3_bg_1 = null;
        this.round3_bg_2 = null;
        this.round3_bg_3 = null;
        this.treeBoxLeft = null;
        this.treeBoxRight = null;
        this.cardBox = null;
        this.countDownBox = null;
        this.fc_countDown = null;
        this.JewelUIBox = null;
        this.head = null;
        this.nick = null;
        this.lianJiBox = null;
        this.fc_logNum = null;
        this.fc_gold = null;
        this.btnAdd = null;
        this.userGoldIcon = null;
        this.btnMul = null;
        this.btnMulIcon = null;
        this.fc_currBet = null;
        this.betMulList = null;
        this.autoIcon = null;
        this.btnStart = null;
        this.btnStartIcon = null;
        this.logListBox = null;
        this.BrickListLeft = null;
        this.BrickListRight = null;
        this.BrickListBottom = null;
        this.BrickListCenter = null;
        this.JewelBox = null;
        this.fc_winGold = null;
        this.btnAutoBetAni = null;
        this.clickGoOnTip = null;
        this.iconMusicOff = null;
        this.restartTipBox = null;
        this.bg_1 = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.jewelCity.JewelCityMain_adapterUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("EffectAnimation", laya.display.EffectAnimation);
        View.regComponent("ui.efc.MouseDownScaleUI", ui.efc.MouseDownScaleUI);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/jewelCity/JewelCityMain_adapter")
    };
    return t
} (View);
var Round3BgUI = function(e) {
    function t() {
        this.bg = null;
        this.person = null;
        this.btnBg = null;
        this.logBg = null;
        this.door = null;
        this.treeBoxLeft = null;
        this.treeBoxRight = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.jewelCity.Round3BgUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/jewelCity/Round3Bg")
    };
    return t
} (View);
var linkedNumItemUI = function(e) {
    function t() {
        this.icon = null;
        this.fc_num = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.jewelCity.linkedNumItemUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/jewelCity/linkedNumItem")
    };
    return t
} (View);
var loadingViewUI = function(e) {
    function t() {
        this.bgColorBox = null;
        this.bg = null;
        this.boxcenter = null;
        this.loadClip = null;
        this.logo = null;
        this.progress = null;
        this.refresh = null;
        this.tipsTxt = null;
        this.versionNumberTxt = null;
        this.tipBgBox = null;
        this.kefu = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.loadingViewUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/loadingView")
    };
    return t
} (View);
var loginViewAppUI = function(e) {
    function t() {
        this.bg = null;
        this.start_game = null;
        this.btn_loginPhone = null;
        this.logoImg = null;
        this.tx_light = null;
        this.VersionNumberLabel = null;
        this.bottom_box = null;
        this.account_info_box = null;
        this.user_name = null;
        this.loginBtnBox = null;
        this.weChat = null;
        this.btnPhone = null;
        this.account_login = null;
        this.try_game = null;
        this.btnQQ = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.loginViewAppUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("ui.UIRoot.FX.kaishiyouxiUI", ui.UIRoot.FX.kaishiyouxiUI);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/loginViewApp")
    };
    return t
} (View);
var LuckyShakeLightUI = function(e) {
    function t() {
        t.__super.call(this);
        this.createUI(t.uiView)
    }
    CLASS$(t, "ui.UIRoot.model.LuckyShakeLightUI", e);
    var i = t.prototype;
    i.createUI = function(e) {
        laya.utils.ClassUtils.createByJson(e, this, this)
    };
    t.uiView = {
        type: "Box",
        props: {
            y: 0,
            x: 0,
            width: 36,
            pivotY: 222,
            pivotX: 18,
            height: 222
        },
        child: [{
            type: "Image",
            props: {
                y: 11,
                x: 18,
                skin: "resource/luckyShake/image_lamp2.png",
                anchorY: .5,
                anchorX: .5
            }
        }]
    };
    return t
} (Box);
var HitMonsterUI = function(e) {
    function t() {
        this.bg = null;
        this.DanTouIcon = null;
        this.glove = null;
        this.actTimeLabel = null;
        this.rewardList = null;
        this.monsterAni = null;
        this.maskSmokeAni = null;
        this.fc_quan = null;
        this.fc_dan = null;
        this.packageIcon = null;
        this.btnGet = null;
        this.btnGo = null;
        this.fc_JiFenNum = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.monster.HitMonsterUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/monster/HitMonster")
    };
    return t
} (View);
var monsterAdressUI = function(e) {
    function t() {
        this.address_detail = null;
        this.btnSave = null;
        this.address_name = null;
        this.address_phone = null;
        this.address_province = null;
        this.address_city = null;
        this.address_zone = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.monster.monsterAdressUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/monster/monsterAdress")
    };
    return t
} (Dialog);
var monsterExchangeListUI = function(e) {
    function t() {
        this.btnRecord = null;
        this.btnAdress = null;
        this.jifen = null;
        this.listPrice = null;
        this.btnReceive = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.monster.monsterExchangeListUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/monster/monsterExchangeList")
    };
    return t
} (Dialog);
var monsterExchangeRecordUI = function(e) {
    function t() {
        this.listRecord = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.monster.monsterExchangeRecordUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/monster/monsterExchangeRecord")
    };
    return t
} (Dialog);
var monsterMsgBox1UI = function(e) {
    function t() {
        this.contentText = null;
        this.btnKnow = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.monster.monsterMsgBox1UI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/monster/monsterMsgBox1")
    };
    return t
} (Dialog);
var monsterMsgBox2UI = function(e) {
    function t() {
        this.btnReceive = null;
        this.btnUse = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.monster.monsterMsgBox2UI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/monster/monsterMsgBox2")
    };
    return t
} (Dialog);
var monsterMsgBox3UI = function(e) {
    function t() {
        this.btnGet = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.monster.monsterMsgBox3UI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/monster/monsterMsgBox3")
    };
    return t
} (Dialog);
var monsterTaskListUI = function(e) {
    function t() {
        this.priceIcon1 = null;
        this.priceNum1 = null;
        this.btnGoToTask = null;
        this.btnHasReceive1 = null;
        this.taskNum = null;
        this.btnReceive1 = null;
        this.btnCharge = null;
        this.priceIcon2 = null;
        this.priceNum2 = null;
        this.btnHasReceive2 = null;
        this.btnReceive2 = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.monster.monsterTaskListUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/monster/monsterTaskList")
    };
    return t
} (Dialog);
var MySceneUI = function(e) {
    function t() {
        this.btnStart = null;
        this.time = null;
        this.htmlDiv = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.myScene.MySceneUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("Text", laya.display.Text);
        View.regComponent("HTMLDivElement", laya.html.dom.HTMLDivElement);
        View.regComponent("EffectAnimation", laya.display.EffectAnimation);
        View.regComponent("ui.efc.MouseDownScaleUI", ui.efc.MouseDownScaleUI);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/myScene/MyScene")
    };
    return t
} (Dialog);
var YWDJ_1UI = function(e) {
    function t() {
        this.fish = null;
        this.animation = null;
        this.area = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.newFish.YWDJ_1UI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/newFish/YWDJ_1")
    };
    return t
} (View);
var YWDJ_2UI = function(e) {
    function t() {
        this.fish = null;
        this.animation = null;
        this.area = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.newFish.YWDJ_2UI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/newFish/YWDJ_2")
    };
    return t
} (View);
var YWDJ_3UI = function(e) {
    function t() {
        this.fish = null;
        this.animation = null;
        this.area = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.newFish.YWDJ_3UI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/newFish/YWDJ_3")
    };
    return t
} (View);
var YWDJ_4UI = function(e) {
    function t() {
        this.fish = null;
        this.animation = null;
        this.area = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.newFish.YWDJ_4UI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/newFish/YWDJ_4")
    };
    return t
} (View);
var baoguiUI = function(e) {
    function t() {
        this.fish = null;
        this.animation = null;
        this.area = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.newFish.baoguiUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/newFish/baogui")
    };
    return t
} (View);
var bianbianyuUI = function(e) {
    function t() {
        this.fish = null;
        this.animation = null;
        this.area = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.newFish.bianbianyuUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/newFish/bianbianyu")
    };
    return t
} (View);
var bianfuyuUI = function(e) {
    function t() {
        this.fish = null;
        this.animation = null;
        this.area = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.newFish.bianfuyuUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/newFish/bianfuyu")
    };
    return t
} (View);
var boss111111111UI = function(e) {
    function t() {
        this.ani1 = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.newFish.boss111111111UI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/newFish/boss111111111")
    };
    return t
} (View);
var bosskunUI = function(e) {
    function t() {
        this.ani1 = null;
        this.fish = null;
        this.animation = null;
        this.area = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.newFish.bosskunUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/newFish/bosskun")
    };
    return t
} (View);
var changeUI = function(e) {
    function t() {
        this.fish = null;
        this.bg = null;
        this.animation = null;
        this.area = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.newFish.changeUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/newFish/change")
    };
    return t
} (View);
var dajiangUI = function(e) {
    function t() {
        this.fish = null;
        this.animation = null;
        this.area = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.newFish.dajiangUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/newFish/dajiang")
    };
    return t
} (View);
var dayanyuUI = function(e) {
    function t() {
        this.fish = null;
        this.animation = null;
        this.area = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.newFish.dayanyuUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/newFish/dayanyu")
    };
    return t
} (View);
var denglongyuUI = function(e) {
    function t() {
        this.fish = null;
        this.animation = null;
        this.area = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.newFish.denglongyuUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/newFish/denglongyu")
    };
    return t
} (View);
var dengpaoyuUI = function(e) {
    function t() {
        this.fish = null;
        this.animation = null;
        this.area = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.newFish.dengpaoyuUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/newFish/dengpaoyu")
    };
    return t
} (View);
var dianmanUI = function(e) {
    function t() {
        this.fish = null;
        this.animation = null;
        this.area = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.newFish.dianmanUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/newFish/dianman")
    };
    return t
} (View);
var dragonUI = function(e) {
    function t() {
        this.fish = null;
        this.animation = null;
        this.area = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.newFish.dragonUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/newFish/dragon")
    };
    return t
} (View);
var fangZhuQueenUI = function(e) {
    function t() {
        this.fish = null;
        this.animation = null;
        this.area = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.newFish.fangZhuQueenUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/newFish/fangZhuQueen")
    };
    return t
} (View);
var fangZhuXiaoYaoUI = function(e) {
    function t() {
        this.fish = null;
        this.animation = null;
        this.area = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.newFish.fangZhuXiaoYaoUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/newFish/fangZhuXiaoYao")
    };
    return t
} (View);
var fangZhuYaoJiangUI = function(e) {
    function t() {
        this.fish = null;
        this.animation = null;
        this.area = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.newFish.fangZhuYaoJiangUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/newFish/fangZhuYaoJiang")
    };
    return t
} (View);
var gangkuiyuUI = function(e) {
    function t() {
        this.fish = null;
        this.animation = null;
        this.area = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.newFish.gangkuiyuUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/newFish/gangkuiyu")
    };
    return t
} (View);
var haishenbaozangUI = function(e) {
    function t() {
        this.ani1 = null;
        this.fish = null;
        this.body = null;
        this.lightAni = null;
        this.area = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.newFish.haishenbaozangUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/newFish/haishenbaozang")
    };
    return t
} (View);
var haitunUI = function(e) {
    function t() {
        this.fish = null;
        this.animation = null;
        this.area = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.newFish.haitunUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/newFish/haitun")
    };
    return t
} (View);
var hetunUI = function(e) {
    function t() {
        this.fish = null;
        this.animation = null;
        this.area = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.newFish.hetunUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/newFish/hetun")
    };
    return t
} (View);
var hudieyuUI = function(e) {
    function t() {
        this.fish = null;
        this.animation = null;
        this.area = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.newFish.hudieyuUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/newFish/hudieyu")
    };
    return t
} (View);
var huolongUI = function(e) {
    function t() {
        this.fish = null;
        this.animation = null;
        this.area = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.newFish.huolongUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/newFish/huolong")
    };
    return t
} (View);
var jiangquanUI = function(e) {
    function t() {
        this.ani1 = null;
        this.fish = null;
        this.count = null;
        this.area = null;
        this.body = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.newFish.jiangquanUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/newFish/jiangquan")
    };
    return t
} (View);
var jianyuUI = function(e) {
    function t() {
        this.fish = null;
        this.animation = null;
        this.area = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.newFish.jianyuUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/newFish/jianyu")
    };
    return t
} (View);
var jinchanUI = function(e) {
    function t() {
        this.fish = null;
        this.animation = null;
        this.area = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.newFish.jinchanUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/newFish/jinchan")
    };
    return t
} (View);
var jinchuitoushaUI = function(e) {
    function t() {
        this.fish = null;
        this.animation = null;
        this.area = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.newFish.jinchuitoushaUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/newFish/jinchuitousha")
    };
    return t
} (View);
var jinhouUI = function(e) {
    function t() {
        this.fish = null;
        this.animation = null;
        this.area = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.newFish.jinhouUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/newFish/jinhou")
    };
    return t
} (View);
var jinlongUI = function(e) {
    function t() {
        this.fish = null;
        this.animation = null;
        this.area = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.newFish.jinlongUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/newFish/jinlong")
    };
    return t
} (View);
var jinlongyuUI = function(e) {
    function t() {
        this.fish = null;
        this.animation = null;
        this.area = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.newFish.jinlongyuUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/newFish/jinlongyu")
    };
    return t
} (View);
var jinseguiUI = function(e) {
    function t() {
        this.fish = null;
        this.animation = null;
        this.area = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.newFish.jinseguiUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/newFish/jinsegui")
    };
    return t
} (View);
var jinseshuimuUI = function(e) {
    function t() {
        this.fish = null;
        this.animation = null;
        this.area = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.newFish.jinseshuimuUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/newFish/jinseshuimu")
    };
    return t
} (View);
var jinshaUI = function(e) {
    function t() {
        this.fish = null;
        this.animation = null;
        this.area = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.newFish.jinshaUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/newFish/jinsha")
    };
    return t
} (View);
var jinzhuUI = function(e) {
    function t() {
        this.fish = null;
        this.animation = null;
        this.area = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.newFish.jinzhuUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/newFish/jinzhu")
    };
    return t
} (View);
var jvbaopenUI = function(e) {
    function t() {
        this.fish = null;
        this.animation = null;
        this.area = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.newFish.jvbaopenUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/newFish/jvbaopen")
    };
    return t
} (View);
var kongqueyuUI = function(e) {
    function t() {
        this.fish = null;
        this.animation = null;
        this.area = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.newFish.kongqueyuUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/newFish/kongqueyu")
    };
    return t
} (View);
var longxiaUI = function(e) {
    function t() {
        this.fish = null;
        this.animation = null;
        this.area = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.newFish.longxiaUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/newFish/longxia")
    };
    return t
} (View);
var meirenyuUI = function(e) {
    function t() {
        this.fish = null;
        this.animation = null;
        this.area = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.newFish.meirenyuUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/newFish/meirenyu")
    };
    return t
} (View);
var nianyuUI = function(e) {
    function t() {
        this.fish = null;
        this.animation = null;
        this.area = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.newFish.nianyuUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/newFish/nianyu")
    };
    return t
} (View);
var shenxianyuUI = function(e) {
    function t() {
        this.fish = null;
        this.animation = null;
        this.area = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.newFish.shenxianyuUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/newFish/shenxianyu")
    };
    return t
} (View);
var shuimuUI = function(e) {
    function t() {
        this.fish = null;
        this.animation = null;
        this.area = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.newFish.shuimuUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/newFish/shuimu")
    };
    return t
} (View);
var tiaowenyuUI = function(e) {
    function t() {
        this.fish = null;
        this.animation = null;
        this.area = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.newFish.tiaowenyuUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/newFish/tiaowenyu")
    };
    return t
} (View);
var worldBossUI = function(e) {
    function t() {
        this.fish = null;
        this.animation = null;
        this.area = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.newFish.worldBossUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/newFish/worldBoss")
    };
    return t
} (View);
var xiaochouyuUI = function(e) {
    function t() {
        this.fish = null;
        this.animation = null;
        this.area = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.newFish.xiaochouyuUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/newFish/xiaochouyu")
    };
    return t
} (View);
var xiaolvyuUI = function(e) {
    function t() {
        this.fish = null;
        this.animation = null;
        this.area = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.newFish.xiaolvyuUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/newFish/xiaolvyu")
    };
    return t
} (View);
var xiaowuguiUI = function(e) {
    function t() {
        this.fish = null;
        this.animation = null;
        this.area = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.newFish.xiaowuguiUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/newFish/xiaowugui")
    };
    return t
} (View);
var xinshouUI = function(e) {
    function t() {
        this.fish = null;
        this.animation = null;
        this.area = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.newFish.xinshouUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/newFish/xinshou")
    };
    return t
} (View);
var xiongmaoUI = function(e) {
    function t() {
        this.fish = null;
        this.animation = null;
        this.area = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.newFish.xiongmaoUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/newFish/xiongmao")
    };
    return t
} (View);
var yinchuitoushaUI = function(e) {
    function t() {
        this.fish = null;
        this.animation = null;
        this.area = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.newFish.yinchuitoushaUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/newFish/yinchuitousha")
    };
    return t
} (View);
var yinlongUI = function(e) {
    function t() {
        this.fish = null;
        this.animation = null;
        this.area = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.newFish.yinlongUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/newFish/yinlong")
    };
    return t
} (View);
var zhadanUI = function(e) {
    function t() {
        this.fish = null;
        this.animation = null;
        this.area = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.newFish.zhadanUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/newFish/zhadan")
    };
    return t
} (View);
var zhangyuUI = function(e) {
    function t() {
        this.fish = null;
        this.animation = null;
        this.area = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.newFish.zhangyuUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/newFish/zhangyu")
    };
    return t
} (View);
var newPlayerTaskDUI = function(e) {
    function t() {
        this.content = null;
        this.taskList = null;
        this.menuBox = null;
        this.allCompleteBtn = null;
        this.unComplete = null;
        this.complete = null;
        this.buyText = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.newPlayer.newPlayerTaskDUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("newPlayer.NewPlayerTaskItem", newPlayer.NewPlayerTaskItem);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/newPlayer/newPlayerTaskD")
    };
    return t
} (Dialog);
var newPlayerTaskItemUI = function(e) {
    function t() {
        this.taskIcon = null;
        this.taskName = null;
        this.num = null;
        this.progress = null;
        this.progressLabel = null;
        this.icon = null;
        this.iconNum = null;
        this.btnGet = null;
        this.redayGet = null;
        this.infoDes = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.newPlayer.newPlayerTaskItemUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/newPlayer/newPlayerTaskItem")
    };
    return t
} (View);
var newPlayerTaskTipUI = function(e) {
    function t() {
        this.ani1 = null;
        this.labelDesc = null;
        this.fc_task = null;
        this.reward0 = null;
        this.reward1 = null;
        this.redPoint = null;
        this.imgTaskComplete = null;
        this.tipPop = null;
        this.redPointText = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.newPlayer.newPlayerTaskTipUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/newPlayer/newPlayerTaskTip")
    };
    return t
} (View);
var GiftTipUI = function(e) {
    function t() {
        this.btnExit = null;
        this.btnGo = null;
        this.box_1 = null;
        this.fc_num_1 = null;
        this.gift_icon_1 = null;
        this.lb_leftTime = null;
        this.box_2 = null;
        this.icon_2 = null;
        this.fc_num_2 = null;
        this.gift_icon_2 = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.onlineGift.GiftTipUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/onlineGift/GiftTip")
    };
    return t
} (Dialog);
var OnlineGiftUI = function(e) {
    function t() {
        this.giftList = null;
        this.btnVip = null;
        this.fc_add = null;
        this.vipIcon = null;
        this.timeBox = null;
        this.fc_leftTime = null;
        this.hadGetAllTip = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.onlineGift.OnlineGiftUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/onlineGift/OnlineGift")
    };
    return t
} (Dialog);
var paoViewUI = function(e) {
    function t() {
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.paoViewUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/paoView")
    };
    return t
} (View);
var QTTBackHintUI = function(e) {
    function t() {
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.qttRedPkg.QTTBackHintUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/qttRedPkg/QTTBackHint")
    };
    return t
} (Dialog);
var QTTMessageBoxUI = function(e) {
    function t() {
        this.btnCancel = null;
        this.offImg = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.qttRedPkg.QTTMessageBoxUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/qttRedPkg/QTTMessageBox")
    };
    return t
} (Dialog);
var QTTPhoneCardUI = function(e) {
    function t() {
        this.btnClose = null;
        this.submit_btn = null;
        this.phone = null;
        this.realName = null;
        this.id_num = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.qttRedPkg.QTTPhoneCardUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/qttRedPkg/QTTPhoneCard")
    };
    return t
} (Dialog);
var QTTRedPkgUI = function(e) {
    function t() {
        this.bg_0 = null;
        this.bg_1 = null;
        this.bg_2 = null;
        this.htmlDiv = null;
        this.lab_0 = null;
        this.lab_1 = null;
        this.lab_2 = null;
        this.btn_0 = null;
        this.btn_1 = null;
        this.btn_2 = null;
        this.btnGo = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.qttRedPkg.QTTRedPkgUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("HTMLDivElement", laya.html.dom.HTMLDivElement);
        View.regComponent("ButtonSound", ButtonSound);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/qttRedPkg/QTTRedPkg")
    };
    return t
} (Dialog);
var QTTRedPkgActUI = function(e) {
    function t() {
        this.btnCopy = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.qttRedPkg.QTTRedPkgActUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("EffectAnimation", laya.display.EffectAnimation);
        View.regComponent("ui.efc.MouseDownScaleUI", ui.efc.MouseDownScaleUI);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/qttRedPkg/QTTRedPkgAct")
    };
    return t
} (View);
var QTTRedPkgGetUI = function(e) {
    function t() {
        this.ani1 = null;
        this.img_t = null;
        this.bg = null;
        this.btnGet = null;
        this.lab_money = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.qttRedPkg.QTTRedPkgGetUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/qttRedPkg/QTTRedPkgGet")
    };
    return t
} (Dialog);
var QTTRedPkgRuleUI = function(e) {
    function t() {
        this.list = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.qttRedPkg.QTTRedPkgRuleUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/qttRedPkg/QTTRedPkgRule")
    };
    return t
} (Dialog);
var QTTRedPkgTUI = function(e) {
    function t() {
        this.ani1 = null;
        this.ani2 = null;
        this.ani3 = null;
        this.progress = null;
        this.guang1 = null;
        this.r_0 = null;
        this.guang2 = null;
        this.r_1 = null;
        this.guang3 = null;
        this.r_2 = null;
        this.img_zi = null;
        this.guideBtnPos = null;
        this.btnOpen = null;
        this.btnRule = null;
        this.fc_mul = null;
        this.lab_money = null;
        this.lab_0 = null;
        this.lab_1 = null;
        this.lab_2 = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.qttRedPkg.QTTRedPkgTUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/qttRedPkg/QTTRedPkgT")
    };
    return t
} (View);
var QttShuang11UI = function(e) {
    function t() {
        this.icon0 = null;
        this.icon1 = null;
        this.icon2 = null;
        this.icon3 = null;
        this.btnBuy = null;
        this.label0 = null;
        this.label1 = null;
        this.label2 = null;
        this.tianLabel3 = null;
        this.tianHint = null;
        this.timeLabel = null;
        this.pirceLabel = null;
        this.tipImg = null;
        this.tipLabel = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.qttRedPkg.QttShuang11UI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("EffectAnimation", laya.display.EffectAnimation);
        View.regComponent("ui.efc.MouseDownScaleUI", ui.efc.MouseDownScaleUI);
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/qttRedPkg/QttShuang11")
    };
    return t
} (View);
var QttShuang11yureUI = function(e) {
    function t() {
        this.icon0 = null;
        this.label0 = null;
        this.icon1 = null;
        this.label1 = null;
        this.icon2 = null;
        this.label2 = null;
        this.icon3 = null;
        this.btnBuy = null;
        this.pirceLabel = null;
        this.tianLabel3 = null;
        this.tianHit = null;
        this.timeLabel = null;
        this.tipImg = null;
        this.tipLabel = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.qttRedPkg.QttShuang11yureUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("EffectAnimation", laya.display.EffectAnimation);
        View.regComponent("ui.efc.MouseDownScaleUI", ui.efc.MouseDownScaleUI);
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/qttRedPkg/QttShuang11yure")
    };
    return t
} (View);
var getRedPackageUI = function(e) {
    function t() {
        this.btnAddFriend = null;
        this.getGoldNum = null;
        this.leftTimes = null;
        this.userName = null;
        this.userId = null;
        this.userDes = null;
        this.userHeadImg = null;
        this.vipLevel = null;
        this.goldFx = null;
        this.fireAni = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.redPackage.getRedPackageUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ClickSound", ClickSound);
        View.regComponent("EffectAnimation", laya.display.EffectAnimation);
        View.regComponent("ui.efc.MouseDownScaleUI", ui.efc.MouseDownScaleUI);
        View.regComponent("Particle2D", laya.particle.Particle2D);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/redPackage/getRedPackage")
    };
    return t
} (Dialog);
var redPackageIconUI = function(e) {
    function t() {
        this.leftTimeImg = null;
        this.btnGet = null;
        this.mark_bg = null;
        this.leftTi = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.redPackage.redPackageIconUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/redPackage/redPackageIcon")
    };
    return t
} (View);
var redPackageRulesUI = function(e) {
    function t() {
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.redPackage.redPackageRulesUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/redPackage/redPackageRules")
    };
    return t
} (Dialog);
var sendRedPackageUI = function(e) {
    function t() {
        this.gettings = null;
        this.packageAmount = null;
        this.packageNum = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.redPackage.sendRedPackageUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/redPackage/sendRedPackage")
    };
    return t
} (Dialog);
var StarRankUI = function(e) {
    function t() {
        this.btnUpdate = null;
        this.rankList = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.starRank.StarRankUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("EffectAnimation", laya.display.EffectAnimation);
        View.regComponent("ui.efc.MouseDownScaleUI", ui.efc.MouseDownScaleUI);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/starRank/StarRank")
    };
    return t
} (Dialog);
var StarRankBarUI = function(e) {
    function t() {
        this.rankList = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.starRank.StarRankBarUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/starRank/StarRankBar")
    };
    return t
} (View);
var SuperMatchUI = function(e) {
    function t() {
        this.label_jiFen = null;
        this.label_rank = null;
        this.label_time = null;
        this.label_month = null;
        this.label_day = null;
        this.weekRankList = null;
        this.DailyRankList = null;
        this.btnRule = null;
        this.btnStart = null;
        this.btnStartInnerImg = null;
        this.shareTip = null;
        this.costGoldBox = null;
        this.fc_MatchGold = null;
        this.leftTimesBox = null;
        this.fc_leftTimes = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.superMatch.SuperMatchUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("Text", laya.display.Text);
        View.regComponent("ButtonSound", ButtonSound);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/superMatch/SuperMatch")
    };
    return t
} (View);
var SuperMatchDoorUI = function(e) {
    function t() {
        this.btnChong = null;
        this.btnDui = null;
        this.fc_gold = null;
        this.fc_Juan = null;
        this.cntBox = null;
        this.menuList = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.superMatch.SuperMatchDoorUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("EffectAnimation", laya.display.EffectAnimation);
        View.regComponent("ui.efc.MouseDownScaleUI", ui.efc.MouseDownScaleUI);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/superMatch/SuperMatchDoor")
    };
    return t
} (Dialog);
var SuperMatchJuanUI = function(e) {
    function t() {
        this.btnStart = null;
        this.btnStartInnerImg = null;
        this.fc_rank = null;
        this.btnRule = null;
        this.rankTxtTip = null;
        this.rankList = null;
        this.timeBox = null;
        this.timeLabel = null;
        this.leftTimesBox = null;
        this.fc_leftTimes = null;
        this.costGoldBox = null;
        this.fc_MatchGold = null;
        this.shareTip = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.superMatch.SuperMatchJuanUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/superMatch/SuperMatchJuan")
    };
    return t
} (View);
var SuperMatchJuanResultUI = function(e) {
    function t() {
        this.fc_Score = null;
        this.btnExit = null;
        this.btnAgain = null;
        this.costGoldBox = null;
        this.fc_costGold = null;
        this.maxScoreLabel = null;
        this.RankLabel = null;
        this.AllRankNumLabel = null;
        this.shareTip = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.superMatch.SuperMatchJuanResultUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/superMatch/SuperMatchJuanResult")
    };
    return t
} (Dialog);
var SuperMatchResultUI = function(e) {
    function t() {
        this.fc_score = null;
        this.fc_vipUp = null;
        this.fc_allScore = null;
        this.fc_dayMaxScore = null;
        this.fc_rank = null;
        this.unRankTipBox = null;
        this.unRankTipTxt = null;
        this.rewardBox = null;
        this.rewardIcon = null;
        this.fc_rewardNum = null;
        this.shareTip = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.superMatch.SuperMatchResultUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/superMatch/SuperMatchResult")
    };
    return t
} (Dialog);
var SuperMatchRuleUI = function(e) {
    function t() {
        this.box1 = null;
        this.btnJoin = null;
        this.title_0 = null;
        this.btnMatch = null;
        this.title_1 = null;
        this.btnReward = null;
        this.title_2 = null;
        this.rule_0 = null;
        this.rule_1 = null;
        this.rule_2 = null;
        this.box2 = null;
        this.box3 = null;
        this.box4 = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.superMatch.SuperMatchRuleUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/superMatch/SuperMatchRule")
    };
    return t
} (Dialog);
var SuperMatchShareTipUI = function(e) {
    function t() {
        this.maskBox = null;
        this.fc_leftTimes = null;
        this.htmlDiv = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.superMatch.SuperMatchShareTipUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("Text", laya.display.Text);
        View.regComponent("HTMLDivElement", laya.html.dom.HTMLDivElement);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/superMatch/SuperMatchShareTip")
    };
    return t
} (Dialog);
var TaskUI = function(e) {
    function t() {
        this.btn_m_0 = null;
        this.btn_m_1 = null;
        this.btn_m_2 = null;
        this.btnGet = null;
        this.taskList = null;
        this.activeBox = null;
        this.activeBar = null;
        this.activePro = null;
        this.fc_activeVal = null;
        this.activeList = null;
        this.tabList = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.task.TaskUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/task/Task")
    };
    return t
} (Dialog);
var TehuiGiftUI = function(e) {
    function t() {
        this.contentBox = null;
        this.choiceList = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.tehuiGift.TehuiGiftUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("EffectAnimation", laya.display.EffectAnimation);
        View.regComponent("ui.efc.MouseDownScaleUI", ui.efc.MouseDownScaleUI);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/tehuiGift/TehuiGift")
    };
    return t
} (Dialog);
var UpgradeBtnUI = function(e) {
    function t() {
        this.ani1 = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.upgrade.UpgradeBtnUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/upgrade/UpgradeBtn")
    };
    return t
} (View);
var UpgradeHintUI = function(e) {
    function t() {
        this.bg = null;
        this.hintText = null;
        this.goBt = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.upgrade.UpgradeHintUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ui.UIRoot.upgrade.UpgradeBtnUI", ui.UIRoot.upgrade.UpgradeBtnUI);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/upgrade/UpgradeHint")
    };
    return t
} (View);
var BigWinUI = function(e) {
    function t() {
        this.ani1 = null;
        this.bg = null;
        this.fc_Multiple = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.widget.BigWinUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/widget/BigWin")
    };
    return t
} (View);
var ChangEUI = function(e) {
    function t() {
        this.chuxian = null;
        this.xiaoshi = null;
        this.lightBox = null;
        this.cell_1 = null;
        this.cell_2 = null;
        this.cell_3 = null;
        this.cell_4 = null;
        this.fc_num_0 = null;
        this.fc_num_1 = null;
        this.fc_num_2 = null;
        this.fc_num_3 = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.widget.ChangEUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/widget/ChangE")
    };
    return t
} (View);
var JiangQuanTipsUI = function(e) {
    function t() {
        this.left_quan = null;
        this.hua_fei = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.widget.JiangQuanTipsUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/widget/JiangQuanTips")
    };
    return t
} (View);
var JuBaoPenUI = function(e) {
    function t() {
        this.chuxian = null;
        this.xiaoshi = null;
        this.lightBox = null;
        this.cell_1 = null;
        this.cell_2 = null;
        this.cell_3 = null;
        this.cell_4 = null;
        this.fc_num_0 = null;
        this.fc_num_1 = null;
        this.fc_num_2 = null;
        this.fc_num_3 = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.widget.JuBaoPenUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/widget/JuBaoPen")
    };
    return t
} (View);
var MatchTaskUI = function(e) {
    function t() {
        this.fish_0 = null;
        this.fish_1 = null;
        this.fish_2 = null;
        this.fc_Score = null;
        this.fc_time = null;
        this.fc_task_0 = null;
        this.fc_task_1 = null;
        this.fc_task_2 = null;
        this.imgTaskComplete = null;
        this.imgTaskFail = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.widget.MatchTaskUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/widget/MatchTask")
    };
    return t
} (View);
var NewPlayerTaskUI = function(e) {
    function t() {
        this.fc_num = null;
        this.icon = null;
        this.imgTaskFail = null;
        this.imgTaskComplete = null;
        this.labelDesc = null;
        this.fc_task = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.widget.NewPlayerTaskUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/widget/NewPlayerTask")
    };
    return t
} (View);
var StrikeMultipleUI = function(e) {
    function t() {
        this.ani1 = null;
        this.XuanHuan = null;
        this.bg = null;
        this.wenZiBox = null;
        this.fcBox = null;
        this.fc_Multiple = null;
        this.chengImg = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.widget.StrikeMultipleUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/widget/StrikeMultiple")
    };
    return t
} (View);
var daodanbaojiUI = function(e) {
    function t() {
        this.ani1 = null;
        this.fc_num = null;
        this.fc_num_2 = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.widget.daodanbaojiUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/widget/daodanbaoji")
    };
    return t
} (View);
var WBAwardListUI = function(e) {
    function t() {
        this.cur_close = null;
        this.Award_title = null;
        this.award_list = null;
        this.num123 = null;
        this.img_type = null;
        this.img_userHead = null;
        this.userHeadImg = null;
        this.img_vipLevel = null;
        this.user_name = null;
        this.user_id = null;
        this.user_gold = null;
        this.fontNum = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.worldBoss.WBAwardListUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/worldBoss/WBAwardList")
    };
    return t
} (Dialog);
var WBBloodUI = function(e) {
    function t() {
        this.progress = null;
        this.fc_value = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.worldBoss.WBBloodUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/worldBoss/WBBlood")
    };
    return t
} (View);
var WBHitRankUI = function(e) {
    function t() {
        this.rankList = null;
        this.userBox = null;
        this.fc_score = null;
        this.fc_rank = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.worldBoss.WBHitRankUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/worldBoss/WBHitRank")
    };
    return t
} (View);
var WBMainUI = function(e) {
    function t() {
        this.preAwardBtn = null;
        this.paoBei = null;
        this.baseAward = null;
        this.maxGold = null;
        this.invadeTimeList = null;
        this.wbMain_close = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.worldBoss.WBMainUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/worldBoss/WBMain")
    };
    return t
} (Dialog);
var WBSpeakUI = function(e) {
    function t() {
        this.lb_spk = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.worldBoss.WBSpeakUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/worldBoss/WBSpeak")
    };
    return t
} (View);
var WBTitleUI = function(e) {
    function t() {
        this.t1 = null;
        this.fc_mul = null;
        this.t2 = null;
        this.t_4 = null;
        this.t_2 = null;
        this.fc_time = null;
        this.t3 = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.worldBoss.WBTitleUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/worldBoss/WBTitle")
    };
    return t
} (View);
var YYSFishUI = function(e) {
    function t() {
        this.name_1 = null;
        this.cur_score_1 = null;
        this.name_2 = null;
        this.cur_score_2 = null;
        this.nameInfo_3 = null;
        this.name_3 = null;
        this.cur_score_3 = null;
        this.nameInfo_4 = null;
        this.name_4 = null;
        this.cur_score_4 = null;
        this.countDown = null;
        this.rank_list = null;
        this.totalScore = null;
        this.setting_btn = null;
        this.exit_btn = null;
        this.hand_btn = null;
        this.rankBox1 = null;
        this.rank_num_1 = null;
        this.rank_name_1 = null;
        this.curScore_1 = null;
        this.rankBox2 = null;
        this.rank_name_2 = null;
        this.curScore_2 = null;
        this.rankBox3 = null;
        this.rank_name_3 = null;
        this.curScore_3 = null;
        this.rankBox4 = null;
        this.rank_name_4 = null;
        this.curScore_4 = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.youYiSai.YYSFishUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/youYiSai/YYSFish")
    };
    return t
} (View);
var YYSRoomUI = function(e) {
    function t() {
        this.bg = null;
        this.page_create = null;
        this.createRoomBtn = null;
        this.back = null;
        this.roomNum_1 = null;
        this.roomNum_2 = null;
        this.roomNum_3 = null;
        this.roomNum_4 = null;
        this.roomNum_5 = null;
        this.roomNum_6 = null;
        this.g_dantou_num = null;
        this.w_dantou_num = null;
        this.page_waiting = null;
        this.wRoomNum = null;
        this.face_1 = null;
        this.face_mask_1 = null;
        this.name_box_1 = null;
        this.wName_1 = null;
        this.face_2 = null;
        this.wait_2 = null;
        this.face_mask_2 = null;
        this.name_box_2 = null;
        this.wName_2 = null;
        this.face_3 = null;
        this.wait_3 = null;
        this.lock_3 = null;
        this.face_mask_3 = null;
        this.name_box_3 = null;
        this.wName_3 = null;
        this.face_4 = null;
        this.wait_4 = null;
        this.lock_4 = null;
        this.face_mask_4 = null;
        this.name_box_4 = null;
        this.wName_4 = null;
        this.startGame = null;
        this.numless_tip = null;
        this.quitRoom = null;
        this.dissolveRoom = null;
        this.wTime_label = null;
        this.wScore_label = null;
        this.wBox_1 = null;
        this.wDDIcon_1 = null;
        this.wDDNum_1 = null;
        this.wBox_2 = null;
        this.wDDIcon_2 = null;
        this.wDDNum_2 = null;
        this.wBox_3 = null;
        this.wDDIcon_3 = null;
        this.wDDNum_3 = null;
        this.wBox_4 = null;
        this.wDDIcon_4 = null;
        this.wDDNum_4 = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.youYiSai.YYSRoomUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        View.regComponent("EffectAnimation", laya.display.EffectAnimation);
        View.regComponent("ui.efc.MouseDownScaleUI", ui.efc.MouseDownScaleUI);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/youYiSai/YYSRoom")
    };
    return t
} (View);
var yysCreateRoomUI = function(e) {
    function t() {
        this.closeBtn = null;
        this.goldBtn = null;
        this.goldName = null;
        this.goldSlect = null;
        this.whiteGoldBtn = null;
        this.whiteGoldName = null;
        this.whiteGoldSlect = null;
        this.slectNumRG = null;
        this.slectTimeRG = null;
        this.slectScoreRG = null;
        this.num_1_box = null;
        this.prizeIcon_1 = null;
        this.tp_1 = null;
        this.num_2_box = null;
        this.prizeIcon_2 = null;
        this.tp_2 = null;
        this.num_3_box = null;
        this.prizeIcon_3 = null;
        this.tp_3 = null;
        this.num_4_box = null;
        this.prizeIcon_4 = null;
        this.tp_4 = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.youYiSai.yysCreateRoomUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/youYiSai/yysCreateRoom")
    };
    return t
} (Dialog);
var yysGameOverUI = function(e) {
    function t() {
        this.go_rankList = null;
        this.userScore = null;
        this.danTou_img = null;
        this.rank_img = null;
        this.danTou_num = null;
        this.ok_btn = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.youYiSai.yysGameOverUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/youYiSai/yysGameOver")
    };
    return t
} (Dialog);
var yysGameRuleUI = function(e) {
    function t() {
        this.closeBtn = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.youYiSai.yysGameRuleUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("Text", laya.display.Text);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/youYiSai/yysGameRule")
    };
    return t
} (Dialog);
var yysRoomInfoUI = function(e) {
    function t() {
        this.score_label = null;
        this.time_label = null;
        this.num_label = null;
        this.roomNum = null;
        this.joinGameBtn = null;
        this.cancleBtn = null;
        this.box_p_1 = null;
        this.prizeIcon_1 = null;
        this.DDNum_1 = null;
        this.box_p_2 = null;
        this.prizeIcon_2 = null;
        this.DDNum_2 = null;
        this.box_p_3 = null;
        this.prizeIcon_3 = null;
        this.DDNum_3 = null;
        this.box_p_4 = null;
        this.prizeIcon_4 = null;
        this.DDNum_4 = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.youYiSai.yysRoomInfoUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/youYiSai/yysRoomInfo")
    };
    return t
} (Dialog);
var yysTipUI = function(e) {
    function t() {
        this.checkVipBtn = null;
        this.cancleBtn = null;
        t.__super.call(this)
    }
    CLASS$(t, "ui.UIRoot.youYiSai.yysTipUI", e);
    var i = t.prototype;
    i.createChildren = function() {
        View.regComponent("ButtonSound", ButtonSound);
        laya.ui.Component.prototype.createChildren.call(this);
        this.loadUI("UIRoot/youYiSai/yysTip")
    };
    return t
} (Dialog);
var MouseDownScaleUI = function(e) {
    function t() {
        this.ani1 = null;
        t.__super.call(this);
        this.effectData = ui.efc.MouseDownScaleUI.uiView
    }
    CLASS$(t, "ui.efc.MouseDownScaleUI", e);
    var i = t.prototype;
    t.uiView = {
        type: "View",
        props: {},
        child: [{
            type: "Image",
            props: {
                skin: "comp/bg.png"
            },
            compId: 3
        }],
        animations: [{
            nodes: [{
                target: 3,
                keyframes: {
                    scaleY: [{
                        value: 1,
                        tweenMethod: "linearNone",
                        tween: true,
                        target: 3,
                        key: "scaleY",
                        index: 0
                    },
                    {
                        value: .8,
                        tweenMethod: "linearNone",
                        tween: true,
                        target: 3,
                        key: "scaleY",
                        index: 2
                    },
                    {
                        value: 1,
                        tweenMethod: "linearNone",
                        tween: true,
                        target: 3,
                        key: "scaleY",
                        index: 5
                    }],
                    scaleX: [{
                        value: 1,
                        tweenMethod: "linearNone",
                        tween: true,
                        target: 3,
                        key: "scaleX",
                        index: 0
                    },
                    {
                        value: .8,
                        tweenMethod: "linearNone",
                        tween: true,
                        target: 3,
                        key: "scaleX",
                        index: 2
                    },
                    {
                        value: 1,
                        tweenMethod: "linearNone",
                        tween: true,
                        target: 3,
                        key: "scaleX",
                        index: 5
                    }],
                    anchorY: [{
                        value: .5,
                        tweenMethod: "linearNone",
                        tween: true,
                        target: 3,
                        key: "anchorY",
                        index: 0
                    },
                    {
                        value: .5,
                        tweenMethod: "linearNone",
                        tween: true,
                        target: 3,
                        key: "anchorY",
                        index: 2
                    }],
                    anchorX: [{
                        value: .5,
                        tweenMethod: "linearNone",
                        tween: true,
                        target: 3,
                        key: "anchorX",
                        index: 0
                    },
                    {
                        value: .5,
                        tweenMethod: "linearNone",
                        tween: true,
                        target: 3,
                        key: "anchorX",
                        index: 2
                    }]
                }
            }],
            name: "ani1",
            id: 1,
            frameRate: 24,
            action: 0
        }]
    };
    return t
} (EffectAnimation);
var BYLoadTask = function() {
    function e(e, t, i, n) {
        var s = this;
        var a = this.resetAssetsUrl(e);
        var r = false;
        if (!this.checkLoaded(a) && Resource.checkLoaded) {
            r = true;
            Waiting.show()
        }
        Resource.checkLoaded = true;
        var o = Laya.Handler.create(null,
        function(e) {
            e = parseInt(e * 100);
            i && i(e)
        },
        null, false);
        var l = Laya.loader.load(a, Laya.Handler.create(null,
        function(e) {
            if (e) {
                if (r) {
                    Waiting.hide()
                }
                s.regMergeData(a);
                s.addMergeUrlMap();
                t && t(e)
            } else {
                MsgToast.show("资源加载失败,重新加载中...");
                Resource.load(a, t, i, n)
            }
        }), o);
        l.retryNum = 5;
        l.retryDelay = 1e3
    }
    e.prototype.regMergeData = function(e) {
        if (e instanceof Array) {
            for (var t = 0; t < e.length; t++) {
                var i = e[t];
                if (i) {
                    if (i.indexOf(".min.ani") > 0) {
                        var n = Laya.loader.getRes(i);
                        if (n) {
                            var s = new Laya.Animation;
                            for (var a in n) {
                                var r = n[a];
                                if (r) {
                                    var o = a + ".ani";
                                    r = JSON.parse(r);
                                    Laya.loader.cacheRes(o, r);
                                    s.loadAnimation(o)
                                }
                            }
                            s = null
                        }
                    } else if (i.indexOf("UIRoot") >= 0 || i.indexOf("FX") == 0 || i.indexOf("efc") == 0) {
                        var l = Laya.loader.getRes(i);
                        if (i.indexOf(".min.json") >= 0) {
                            for (var h in l) {
                                if (l[h]) {
                                    Laya.View.uiMap[h] = JSON.parse(l[h])
                                }
                            }
                        } else {
                            var u = i.replace(".json", "");
                            Laya.View.uiMap[u] = l
                        }
                    }
                }
            }
        }
    };
    e.prototype.checkLoaded = function(e) {
        var t = true;
        if (e && e instanceof Array) {
            for (var i = 0; i < e.length; i++) {
                var n = e[i];
                if (n) {
                    var s = Laya.loader.getRes(n);
                    if (s == null) {
                        t = false;
                        break
                    }
                }
            }
        } else if (typeof e == "string") {
            var s = Laya.loader.getRes(e);
            if (s == null) {
                t = false
            }
        }
        return t
    };
    e.prototype.resetAssetsUrl = function(e) {
        var t = [];
        if (e instanceof Array) {
            for (var i = 0; i < e.length; i++) {
                var n = this.getAssetsUrl(e[i]);
                for (var s = 0; s < n.length; s++) {
                    t.push(n[s])
                }
            }
        } else {
            var n = this.getAssetsUrl(e);
            for (var s = 0; s < n.length; s++) {
                t.push(n[s])
            }
        }
        return t
    };
    e.prototype.getAssetsUrl = function(e) {
        var t = [];
        if (e.indexOf(".min.atlas") > 0) {
            var i = Laya.loader.getRes(e);
            if (i) {
                if (!i.data) {
                    t.push(e);
                    return t
                }
                var n = i.data.length;
                var s = [];
                for (var a = 0; a < n; a++) {
                    var r = i.data[a];
                    if (Game.onMiniGame) {
                        s.push(r.resUrl)
                    } else {
                        if (!r.isLoaded) {
                            s.push(r.resUrl);
                            if (!this.needFixUrlMap) {
                                this.needFixUrlMap = {}
                            }
                            this.needFixUrlMap[r.resUrl] = e
                        }
                    }
                }
                if (s.length > 0) {
                    for (var o = 0; o < s.length; o++) {
                        t.push(s[o])
                    }
                } else {
                    t.push(e)
                }
            } else {
                t.push(e)
            }
        } else {
            t.push(e)
        }
        return t
    };
    e.prototype.addMergeUrlMap = function() {
        if (!this.needFixUrlMap) return;
        var e = Object.keys(this.needFixUrlMap);
        for (var t = 0; t < e.length; t++) {
            var i = e[t];
            var n = this.needFixUrlMap[i];
            var s = Laya.loader.getRes(n);
            if (s) {
                var a = s.data.length;
                for (var r = 0; r < a; r++) {
                    var o = s.data[r];
                    if (o.resUrl == i) {
                        o.isLoaded = true;
                        break
                    }
                }
            }
            var l = Laya.loader.getRes(i);
            l.parentUrl = n
        }
    };
    e.prototype.removeMergeUrlCache = function(e, t, i) {
        if (e.data) {
            if (t) {
                var n = e.data.length;
                for (var s = 0; s < n; s++) {
                    var a = e.data[s];
                    if (a.resUrl == t) {
                        a.isLoaded = false;
                        return
                    }
                }
            } else {
                var n = e.data.length;
                for (var s = 0; s < n; s++) {
                    var a = e.data[s];
                    Laya.loader.clearRes(a.resUrl, i)
                }
            }
        }
    };
    return e
} ();
var Game = function() {
    var t = -1;
    var e = window.navigator.userAgent.toLowerCase();
    var i = 1e3;
    var n = 41;
    var s = "version/1.0.41.2/";
    var a = 1136,
    r = 640;
    if (window._resVersion) {
        s = window._resVersion
    }
    var o = {
        debug: false,
        Adapter: false,
        scaleValue: 1,
        ViewScaleValue: 1,
        UIMaxWidth: 1280,
        UIWidth: a,
        UIHeight: r,
        ViewWidth: a,
        ViewHeight: r,
        shareSwitch: false,
        transformX: false,
        transformY: false,
        resVersion: s,
        bigVersion: i,
        smallVersion: n,
        loginVer: i + "" + n,
        LangPck: "",
        AuthSwitch: 0,
        wx_startViewHide: false,
        fishPathData: "",
        UIRoot: "",
        TipRoot: "",
        domain: "https://xyx.yulebuyu.com/",
        isApp: window.conch,
        isIphoneApp: window.Channel && window.Channel.cfg.cps == 3,
        channel: {
            regCPSId: 0,
            FromUserID: 0,
            ShareCpsId: 0,
            adId: 0,
            sharescene: "",
            shareid: 0,
            sceneId: 0,
            cfg: {
                name: "web",
                cps: 1,
                payChannel: 1,
                LoginChannel: 0,
                SdkVer: ""
            },
            sdk_secret: "youxila@youxila",
            url: {},
            isNeedCer: false
        },
        reportErrMsgUrl: "/report/charge_err",
        behaviorLog: {
            isOpen: 1,
            reportUrl: "",
            eventReportURL: ""
        },
        wxAuthSetting: {
            scope: {
                userInfo: false
            }
        },
        adapter: {
            scaleX: 1,
            scaleY: 1,
            offsetX: 0,
            offsetY: 0
        },
        server: {
            type: "ws",
            ip: "192.168.22.201",
            port: "41001",
            socket: null,
            connecting: false,
            socketInNull: true
        },
        onBaiDuGame: e.indexOf("swangame") > -1,
        onMiniGame: e.indexOf("minigame") > -1 && e.indexOf("oppo") < 0,
        onOPPOMiniGame: e.indexOf("oppo") > -1 && e.indexOf("minigame") > -1,
        onMobile: e.indexOf("Mobile") > -1,
        onPC: e.indexOf("Mobile") < 0,
        isIOS: Laya.Browser.onIOS,
        onByteBeat: false,
        config: {
            AvatarUrl: "https://head.yulebuyu.com/icon/?url=",
            cfgUrl: "https://xyxapp.yulebuyu.com/gate/config",
            bullet: {
                AddSppedCountPerSec: 10,
                CountPerSec: 5,
                PoolMaxNum: 15,
                MaxFireInterval: 1e3 * 60 * 3
            },
            cdTime: {
                SuoDing: 15,
                BinDong: 15,
                KuangBao: 30,
                AddSpeed: 15,
                Harmonics: 15
            }
        },
        FishID: {},
        fishSpeed: .065,
        loginIp: "",
        item: {
            Gold: 1,
            Juan: 2,
            JiFen: 3,
            ActiveVal: 7,
            ActiveWeekVal: 8,
            ExchangeNameCard: 100,
            ChangeNameCard: 100,
            BinDong: 101,
            SuoDing: 102,
            KuangBao: 103,
            QinTongDaoDan: 104,
            BaiYinDaoDan: 105,
            HuangJinDaoDan: 106,
            BaiJinDaoDan: 107,
            ZhaDan: 108,
            Score: 110,
            QuanTao: 111,
            StartCard: 112,
            HaoJiao: 117,
            BlackDia: 125,
            ForcePush: 126,
            DragonBall: 127,
            Horn: 128,
            Bullet: 129,
            Harmonics: 140,
            AddSpeed: 141,
            HuaFei_10: 200,
            HuaFei_50: 201,
            HuaFei_100: 202,
            JDCard_100: 203,
            JDCard_200: 204,
            JDCard_500: 205,
            JDCard_1000: 206,
            Gold_1000: 207,
            Gold_10000: 208,
            Gold_100000: 209,
            Juan_100: 300,
            CommonBox: 430,
            SuperBox: 431,
            Wing_601: 601,
            Wing_602: 602,
            Wing_603: 603,
            Wing_604: 604,
            Wing_605: 605,
            Wing_606: 606,
            Wing_607: 607,
            Wing_608: 608,
            Wing_609: 609,
            Wing_610: 610,
            Wing_611: 611,
            Wing_612: 612,
            Wing_613: 613,
            Wing_614: 614
        },
        sceneConfig: {
            serCfg: {},
            sceneID: {
                unLogin: -1,
                gameCenter: 0,
                scene_10: 1,
                scene_100: 2,
                scene_1000: 3,
                scene_DaoDan: 4,
                scene_Quan: 5,
                scene_Vip: 6,
                scene_SuperMatch: 7,
                scene_SuperMatchJuan: 8,
                scene_SuperMatchDaoDan: 9,
                scene_SuperMatchSkill: 10,
                scene_YouYiSai: 12,
                scene_myScene: 13,
                scene_DT_qt: 21,
                scene_DT_by: 22,
                scene_DT_hj: 23,
                scene_DT_bj: 24,
                scene_Dragon_DaoDan: 51,
                scene_JewCity: 101,
                scene_AttAckDragon: 102,
                scene_BigRich: 103
            }
        },
        interFacePush: {
            signInCenterWay: 0
        },
        state: {
            set: function(e) {
                t = e
            },
            get: function() {
                return t
            }
        },
        redPoint: {
            package: 1,
            email: 2,
            activity: 3,
            invitation: 4,
            millQuan: 5,
            cashBonus: 6,
            downloadAd: 7,
            friendsRed: 8
        },
        isLoadHallPic: false,
        RunningInBackstage: false,
        DuplicateLoginSys: false,
        disablePagePush: false,
        minGameShareGame: {
            GetSceneCfgReq: false,
            GetPackageListReq: false,
            roomParam: {
                serverId: 0,
                serverName: "",
                tableId: -1
            }
        },
        device: {
            id: "",
            model: "",
            systemVersion: "",
            Ext: ""
        },
        loginPosition: {
            loginApp1: "account",
            loginApp2: "exp",
            loginApp3: "choiceAccount",
            loginApp4: "choiceExp",
            positon: ""
        },
        EnterId: {
            MiniGame: 1,
            Android: 2
        },
        actType: {
            dayLogin: 1,
            DayPay: 2,
            CountPay: 3,
            DayKillFish: 4,
            DayUseItem: 5,
            exchange: 6,
            rankPay: 7,
            rankCash: 8,
            rankKillFish: 9,
            mysticalStore: 10,
            hitDrop: 11,
            hitMonster: 12,
            DayKillTypeFish: 13,
            treasureBox: 14,
            actMpTask: 15,
            rankKillTypeFish: 16,
            timeSpecial: 17,
            ActCards: 18,
            ActApkMiniGame: 19,
            GoldPig: 20,
            ActShipment: 21,
            ActUseDTRank: 22,
            ActSuperPkg: 23,
            ActSuperMatch: 24,
            ActHappyPrize: 25,
            ActFireOfWar: 26,
            ActRedPackage: 27,
            ActShuang11yr: 28,
            ActShuang11: 29,
            ActDavyJonesGift: 30,
            ActLuckOrder: 31,
            maxActType: 31
        },
        iosPayInfo: {
            iosPayAppId: "wx887c1a1970f43843",
            cpsId: 2,
            envVersion: "release"
        },
        ChannelConstants: {
            muMayi: 10,
            vivo: 11,
            tianYuYou: 13,
            uygur: 15,
            yiXuan: 263,
            taiWanHaiMeng: 23,
            qtt: 717,
            wyxq: 11002,
            ziJie: 41,
            keJin: 51,
            qiTian: 56,
            meiZu: 807,
            qq: 965,
            wx: 7,
            appStore: 42,
            fly: 1100
        },
        activityStatus: {
            Not: 2,
            Can: 1,
            Already: 3,
            AD_Already: 4
        },
        shareBossConfig: {
            323 : 228,
            490 : 225,
            500 : 226,
            501 : 229,
            502 : 224,
            503 : 227,
            505 : 221,
            506 : 222,
            507 : 223,
            508 : 220
        },
        DyType: {
            NEW_SEVEN_DAY: 1,
            SEVEN_DAY_RECHARGE: 2
        },
        TipExchange: {
            NEW: 2,
            redPackage: 1
        },
        ShareType: {
            SUPER_MATCH: "superMatch",
            LOBBY_SHARE: "LOBBY_SHARE",
            GETREWARD: "GETREWARD",
            BIGRICH: "BIGRICH",
            ZHUANFA: "ZHUANFA",
            RECHARGE_REQUEST: "RECHARGE_REQUEST",
            RECHARGE_NOTIFICATION: "RECHARGE_NOTIFICATION"
        },
        miniGameIOS: function() {
            return (this.onMiniGame || this.onBaiDuGame) && this.isIOS
        },
        onQQ: function() {
            return Channel && Channel.cfg && Channel.cfg.cps == Game.ChannelConstants.qq
        },
        onWX: function() {
            return Channel && Channel.cfg && Channel.cfg.cps == Game.ChannelConstants.wx
        },
        onQTT: function() {
            return Channel && Channel.cfg && Channel.cfg.cps == Game.ChannelConstants.qtt
        },
        showShare: function() {
            return Game.debug || Channel && Channel.forward && Player.getOpenShareBtn()
        },
        shareConfig: {},
        getShareConfig: function(e) {
            var t = Game.shareConfig[e];
            if (t) return t[0]
        },
        sendShare: function(e, t) {
            Request.HttpReq(100001, "/share/bianfeng/share?end=wxf&shareid=" + e + "&point=" + t + "&os=mini&user_id=" + Player.getUserId() + "&nickname=" + Player.getNick() + "&channelid=" + Game.channel.regCPSId)
        },
        shareClick: function() {
            Request.HttpReq(100001, "/share/bianfeng/click?channelid=99&user_id=" + Player.getUserId() + "&os=mini&nickname=" + Player.getNick() + "&sex=" + Player.getSex() + "&scene=" + Game.channel.sharescene + "&avatar" + Player.getAvatarUrl())
        },
        shareNew: function() {
            console.log("shareNew HttpReq");
            Request.HttpReq(100001, "/share/bianfeng/register?point=" + Game.channel.adId + "&user_id=" + Player.getUserId() + "&nickname=" + Player.getNick())
        }
    };
    return o
} ();
var Utils = function() {
    var c = Math.PI;
    Array.prototype.removeByValue = function(e) {
        for (var t = 0; t < this.length; t++) {
            if (this[t] == e) {
                this.splice(t, 1);
                break
            }
        }
    };
    Array.prototype.unique = function() {
        var e = [];
        var t = {};
        for (var i = 0; i < this.length; i++) {
            if (!t[this[i]]) {
                e.push(this[i]);
                t[this[i]] = 1
            }
        }
        return e
    };
    Date.prototype.Format = function(e) {
        var t = {
            "M+": this.getMonth() + 1,
            "d+": this.getDate(),
            "h+": this.getHours(),
            "m+": this.getMinutes(),
            "s+": this.getSeconds(),
            "q+": Math.floor((this.getMonth() + 3) / 3),
            S: this.getMilliseconds()
        };
        if (/(y+)/.test(e)) {
            e = e.replace(RegExp.$1, (this.getFullYear() + "").substr(4 - RegExp.$1.length))
        }
        for (var i in t) {
            if (new RegExp("(" + i + ")").test(e)) {
                e = e.replace(RegExp.$1, RegExp.$1.length == 1 ? t[i] : ("00" + t[i]).substr(("" + t[i]).length))
            }
        }
        return e
    };
    String.prototype.charLength = function() {
        var e = 0;
        for (var t = 0; t < this.length; t++) {
            if (this.charCodeAt(t) > 127 || this.charCodeAt(t) == 94) {
                e += 2
            } else {
                e++
            }
        }
        return e
    };
    return {
        serverPositionToLocal: function(e, t) {
            return {
                x: e * 1,
                y: (Game.UIHeight - t) * 1
            }
        },
        transformFishView: function(e, t) {
            if (Game.transformX) {
                e = Game.UIWidth - e
            }
            if (Game.transformY) {
                t = Game.UIHeight - t
            }
            return {
                x: e,
                y: t
            }
        },
        getUrlParam: function(e) {
            if (!Game.onMiniGame && !Game.onBaiDuGame) {
                var t = new RegExp("(^|&)" + e + "=([^&]*)(&|$)", "i");
                var i = window.location.search.substr(1).match(t);
                if (i != null) return unescape(i[2]);
                return null
            }
            return ""
        },
        delParam: function(e) {
            var t = window.location.href;
            var i = window.location.search.substr(1);
            var n = t.substr(0, t.indexOf("?"));
            if (t.indexOf("?") > -1) {
                n = t.substr(0, t.indexOf("?"))
            } else {
                n = t
            }
            var s = "";
            var a = new Array;
            if (i != "") {
                var r = i.split("&");
                for (var o = 0; o < r.length; o++) {
                    var l = r[o].split("=");
                    if (e.indexOf(l[0] + "") < 0) {
                        a.push(r[o])
                    }
                }
            }
            if (a.length > 0) {
                s = "?" + a.join("&")
            }
            t = n + s;
            return t
        },
        registerBitmapFont: function(s, a) {
            for (var e = 0; e < s.length; e++) { (function(t, i) {
                    var e = new Laya.BitmapFont;
                    var n = Laya.Loader.getRes(t.url);
                    if (n) {
                        if (t.letterSpacing) {
                            n.letterSpacing = t.letterSpacing
                        }
                        Laya.Text.registerBitmapFont(t.name, n);
                        if (i == s.length - 1) {
                            a && a()
                        }
                    } else {
                        e.loadFont(t.url, new Laya.Handler(this,
                        function(e) {
                            if (t.letterSpacing) {
                                e.letterSpacing = t.letterSpacing
                            }
                            Laya.Text.registerBitmapFont(t.name, e);
                            if (i == s.length - 1) {
                                a && a()
                            }
                        },
                        [e]))
                    }
                })(s[e], e)
            }
        },
        localToGlobal: function(e, t) {
            if (!e) {
                return {
                    x: -1,
                    y: -1
                }
            }
            var i = Laya.Pool.getItemByClass("gpoint", Laya.Point);
            i.x = e.pivotX;
            i.y = e.pivotY;
            var n = e.localToGlobal(i, true);
            Laya.Pool.recover("gpoint", i);
            return n
        },
        tweenTo: function(e, t, i, n, s) {
            var a = this.localToGlobal(e, false);
            e.pos(a.x, a.y);
            e.zOrder = 999999;
            Laya.stage.addChild(e);
            if (t instanceof Laya.Sprite) {
                var r = this.localToGlobal(t);
                t = {
                    x: r.x,
                    y: r.y
                }
            }
            Laya.Tween.to(e, t, i, n, Laya.Handler.create(null,
            function() {
                if (s) {
                    s()
                } else {
                    e.removeSelf()
                }
            }))
        },
        screenShot: function(e) {
            var t = document.getElementById("layaCanvas");
            var i = document.getElementById("screenShotImg");
            var n = document.getElementById("screenShotWrap");
            if (t && i) {
                var s = Laya.stage.drawToCanvas(t.width, t.height, 0, 0);
                var a = s.getCanvas();
                var r = a.toDataURL("image/jpeg");
                i.src = r;
                i.width = t.width / 4;
                i.height = t.height / 4;
                n.style.display = "block";
                e && e(r, t.width, t.height);
                if (n) {
                    n.onclick = function() {
                        n.style.display = "none";
                        i.src = ""
                    }
                }
            } else {
                e && e(null, 0, 0)
            }
        },
        getPaoAngle: function(e, t, i) {
            var n = e.x * 1,
            s = e.y * 1,
            a = t.x * 1,
            r = t.y * 1;
            var o = Math.abs(n - a);
            var l = Math.abs(s - r);
            var h = Math.sqrt(o * o + l * l);
            var u = Math.round(Math.asin(l / h) / c * 180);
            if (a < n) {
                if (i) {
                    u = r >= s ? 90 - u: u + 90
                } else {
                    u = r >= s ? -90 - u: u - 90
                }
            } else {
                if (i) {
                    u = r >= s ? 0 - u: -90 - u
                } else {
                    u = r >= s ? u += 90 : 90 - u
                }
            }
            return u
        },
        InRange: function(e, t) {
            if (e.x > t.x && e.x < t.x + t.width && e.y > t.y && e.y < t.y + t.height) {
                return true
            }
            return false
        },
        circularRandomPoint: function(e, t) {
            var i = Math.floor(Math.random() * 4);
            var n = Math.ceil(Math.random() * (t ? t: Game.UIWidth / 2));
            var s = Math.ceil(Math.random() * (t ? t: Game.UIHeight / 2));
            switch (i) {
            case 0:
                e.x += n;
                e.y -= s;
                break;
            case 1:
                e.x -= n;
                e.y -= s;
                break;
            case 2:
                e.x -= n;
                e.y += s;
                break;
            case 3:
                e.x += n;
                e.y += s;
                break
            }
            return e
        },
        setLocalStorageFun: function(e, t, i, n) {
            var s = Laya.LocalStorage,
            a = e + i + ":" + t,
            r = s.getItem("userHistory"),
            o = undefined,
            l = null,
            h = false;
            if (!r) {
                s.setItem("userHistory", a + "|")
            } else {
                l = r.split("|");
                l.pop();
                for (var u = 0,
                c = l.length; u < c; u++) {
                    var f = l[u].split(":"),
                    d = f[0].substring(0, f[0].length - 1);
                    if (n) {
                        if (n === d) {
                            h = true;
                            o = u;
                            break
                        }
                    } else {
                        if (e === d) {
                            h = true;
                            o = u;
                            break
                        }
                    }
                }
                if (h === false) {
                    var g = "";
                    if (l.length >= 5) {
                        l.pop()
                    }
                    l.unshift(a);
                    g = l.join("|");
                    g = g + "|";
                    s.setItem("userHistory", g)
                } else {
                    l.splice(o, 1);
                    l.unshift(a);
                    var p = l.join("|");
                    p = p + "|";
                    s.setItem("userHistory", p)
                }
            }
        },
        getPswByNick: function(e) {
            var t = Laya.LocalStorage.getItem("userHistory"),
            i = undefined;
            if (!t) {
                return false
            }
            var n = t.split("|");
            n.pop();
            for (var s = 0,
            a = n.length; s < a; s++) {
                var r = n[s].split(":"),
                o = r[0].substring(0, r[0].length - 1);
                if (e === o) {
                    i = r[1];
                    break
                }
            }
            return i
        },
        probability: function(e) {
            var t = e * 100 || 1;
            var i = Math.floor(Math.random() * 100);
            if (t === 1) {
                return 1
            }
            if (i < t) {
                return 1
            } else {
                return 0
            }
        },
        getRandom: function(e, t) {
            var i = t - e;
            var n = Math.random();
            var s = e + Math.round(n * i);
            return s
        },
        arrayRandomIndex: function(e) {
            if (e instanceof Array) {
                return Math.floor(Math.random() * e.length)
            }
            return 0
        },
        setCopyValue: function(e) {
            if (Game.onMiniGame) {
                wx.setClipboardData({
                    data: e + "",
                    success: function() {
                        if (Game.channel.cfg.cps != 7) {
                            MsgToast.show("复制成功")
                        }
                    },
                    fail: function() {},
                    complete: function() {}
                })
            } else if (Channel && Channel.copyMes) {
                Channel.copyMes(e);
                MsgToast.show("复制成功")
            } else if (document && document.body) {
                var t = document.createElement("input");
                t.value = e;
                document.body.appendChild(t);
                if (t.createTextRange) {
                    t.select()
                } else {
                    t.setSelectionRange(0, t.value.length);
                    t.focus()
                }
                document.execCommand("Copy");
                t.style.display = "none";
                document.body.removeChild(t);
                MsgToast.show("复制成功")
            }
        },
        hasCopy: function() {
            return ! Game.onQTT() && (Game.onMiniGame || Channel && Channel.copyMes || document && document.body)
        },
        getMouseXY: function() {
            var e = Laya.stage.mouseX;
            var t = Laya.stage.mouseY;
            return {
                x: e - (Game.ViewWidth - Game.UIWidth) / 2,
                y: t - (Game.ViewHeight - Game.UIHeight) / 2
            }
        },
        fenToYuan: function(e, t) {
            if (t) {
                return e / 100
            } else {
                return Math.floor(e / 100)
            }
        },
        getBrowserInfo: function() {
            if (!window.navigator.userAgent) {
                return ""
            }
            var e = window.navigator.userAgent;
            if (e.indexOf("Firefox") !== -1) {
                return "Firefox"
            } else if (e.indexOf("Edge") !== -1) {
                return "Edge"
            } else if (e.indexOf("NET") !== -1 && e.indexOf("rv") !== -1) {
                return "IE"
            } else if (e.indexOf("WOW") !== -1 && e.indexOf("NET") < 0 && e.indexOf("Firefox") < 0) {
                if (window.navigator.javaEnabled()) {
                    return "360安全浏览器-极速模式"
                } else {
                    return "360极速浏览器-极速模式"
                }
            } else if (e.indexOf("WOW") !== -1 && e.indexOf("NET") !== -1 && e.indexOf("MSIE") !== -1 && e.indexOf("rv") < 0) {
                return "360兼容模式"
            } else if (e.indexOf("WOW") < 0 && e.indexOf("Edge") < 0) {
                return "Chrome浏览器"
            } else if (e.indexOf("Safari") > 0 && e.indexOf("Chrome") < 0) {
                return "Safari"
            } else {
                if (e.match(/MicroMessenger/i) == "micromessenger") {
                    return "MicroMessenger"
                }
                return ""
            }
        },
        getItemIconBgSkin: function(e) {
            var t = "resource/common/bar_wupinkong.png";
            switch (e) {
            case 0:
                t = "resource/common/bar_wupinkong.png";
                break;
            case 1:
                t = "resource/common/bar_wupinlv.png";
                break;
            case 2:
                t = "resource/common/bar_wupinlan.png";
                break;
            case 3:
                t = "resource/common/bar_wupinzi.png";
                break;
            case 4:
                t = "resource/common/bar_wupinjin.png";
                break;
            default:
                t = "resource/common/bar_wupinkong.png";
                break
            }
            return t
        },
        secondToCountDownTime: function(e, t) {
            if (e == 0) return "00:00";
            var i = Math.floor(e / 3600);
            var n = Math.floor((e - i * 3600) / 60);
            var s = e % 60;
            s = s <= 9 ? "0" + s: s;
            n = n <= 9 ? "0" + n: n;
            i = i <= 9 ? "0" + i: i;
            return (t == "hh:mm:ss" ? i + ":": "") + n + ":" + s
        },
        getTempletByUrl: function(e, t) {
            var i = new Laya.Templet;
            i.loadAni(e);
            i.on(Laya.Event.COMPLETE, this,
            function() {
                var e = i.buildArmature(0);
                e.play(0, true);
                t && t(e)
            })
        },
        ReportVipUpObj: {},
        getRewardStack: function() {
            var n = [];
            var s = false;
            var a = function(e) {
                var t = GameConfig.getVipInfoByLevel(e.VipLevel);
                if (t) {
                    Player.setVipLeftTime(t.SceneVip);
                    VipSceneLeftTime.updateTime(t.SceneVip);
                    var i = GetReward.show(e.VipLevel + "级贵族礼包", t.VipGift, false, null, null, true);
                    i.closeCallback = function() {
                        var e = n.shift();
                        if (e) {
                            a(e)
                        } else {
                            s = false
                        }
                    }
                }
            };
            return {
                add: function(e) {
                    if (e) {
                        n.push(e)
                    }
                    if (!s) {
                        s = true;
                        var t = n.shift();
                        if (t) {
                            a(t)
                        } else {
                            s = false
                        }
                    }
                }
            }
        } (),
        redPackageStock: function() {
            var t = [];
            return {
                add: function(e) {
                    if (e) {
                        t.push(e);
                        return t
                    }
                },
                delete: function(e) {
                    if (e) {
                        t.removeByValue(e);
                        if (t.length > 0) {
                            return t
                        }
                    }
                }
            }
        } (),
        fitView: function(e, t) {
            if (Adapter.fitView) {
                Adapter.fitView(e, t)
            }
        },
        AvatarAddPrefix: function(e) {
            return e
        },
        getFishTimeByPath: function(e) {
            if (Game.fishPathData && Game.fishPathData[e]) {
                var t = Game.fishPathData[e];
                return t.length * Game.fishSpeed * 1e3 || 0
            } else {
                console.log("Game.fishPathData:" + Game.fishPathData);
                console.log("找不到对应的路径pathId:" + e);
                return 0
            }
        },
        Lang: function(e) {
            return Laya.Text.langPacks && Laya.Text.langPacks[e] ? Laya.Text.langPacks[e] : e
        },
        LeftTimeFormat: function(e, t) {
            if (e == 0) {
                return "0天0时0分"
            }
            if (!t) {
                e *= 60
            }
            var i = Math.floor(e / 86400);
            var n = Math.floor((e - 86400 * i) / 3600);
            var s = Math.floor((e - 86400 * i - 3600 * n) / 60);
            var a = "";
            if (s >= 0) {
                a += s + "分"
            }
            if (n >= 0) {
                a = n + "时" + a
            }
            if (i > 0) {
                a = i + "天" + a
            }
            return a
        },
        LeftTimeFormat1: function(e, t) {
            if (!t) {
                e *= 60
            }
            var i = Math.floor(e / 86400);
            var n = Math.floor((e - 86400 * i) / 3600);
            var s = Math.floor((e - 86400 * i - 3600 * n) / 60);
            var a = "";
            if (i == 0 && s >= 0) {
                a += s + "分"
            }
            if (n > 0) {
                a = n + "小时"
            }
            if (i > 0) {
                a = i + "天"
            }
            return a
        },
        LeftTimeFormat2: function(e, t) {
            if (!t) {
                e *= 60
            }
            var i = Math.floor(e / 86400);
            var n = Math.floor((e - 86400 * i) / 3600);
            var s = Math.floor((e - 86400 * i - 3600 * n) / 60);
            var a = "";
            if (e < 0) {
                a = "永久"
            } else {
                if (i > 0) {
                    a = i > 900 ? "永久": i + "天"
                } else if (n > 0) {
                    a = n + "时"
                } else {
                    a = s + "分"
                }
            }
            return a
        },
        showLoginBtn: function(e) {
            return false
        },
        uuid: function(e, t) {
            var i = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split("");
            var n = [],
            s;
            t = t || i.length;
            if (e) {
                for (s = 0; s < e; s++) n[s] = i[0 | Math.random() * t]
            } else {
                var a;
                n[8] = n[13] = n[18] = n[23] = "-";
                n[14] = "4";
                for (s = 0; s < 36; s++) {
                    if (!n[s]) {
                        a = 0 | Math.random() * 16;
                        n[s] = i[s == 19 ? a & 3 | 8 : a]
                    }
                }
            }
            return n.join("")
        },
        itemCfgToData: function(e) {
            var t = [];
            if (e && typeof e == "string") {
                var i = e.split("|");
                if (i) {
                    for (var n = 0; n < i.length; n++) {
                        if (i[n]) {
                            var s = i[n].split(":");
                            if (s && s.length == 2) {
                                var a = GameConfig.Item.getItemInfoById(s[0]);
                                if (a) {
                                    t.push({
                                        icon: "resource/icon/" + s[0] + ".png",
                                        kuang: Utils.getItemIconBgSkin(a.FrameLevel),
                                        num: s[1]
                                    })
                                }
                            }
                        }
                    }
                }
            }
            return t
        },
        listBoxRenderAni: function(e, t, i) {
            if (e) {
                e.scale(0, 0);
                e.pivot(e.width / 2, e.height / 2);
                var n = t + 1;
                if (t >= i) {
                    n = n - i + 1
                }
                Laya.Tween.to(e, {
                    scaleX: 1,
                    scaleY: 1
                },
                n * 100)
            }
        },
        numberFormat: function(e) {
            if (e) {
                e = e * 1;
                if (e >= 1e4) {
                    e = e / 1e4;
                    e += "万"
                }
            }
            return e
        },
        getRandomNum: function(e, t) {
            var i = [];
            for (var n = 0,
            s = t; n < s; n++) {
                var a = Math.floor(Math.random() * e.length);
                var r = e.splice(a, 1)[0];
                i.push(r)
            }
            return i
        },
        getRandomFromArr: function(e) {
            if (e && e instanceof Array) {
                var t = this.arrayRandomIndex(e);
                return e[t]
            }
            return null
        },
        nickBylen: function(e, t) {
            if (e) {
                t = t * 1 || 6;
                return e.length > t ? e.substring(0, t) + "*": e
            }
            return e
        },
        getDateStr: function() {
            var e = new Date;
            var t = e.getFullYear() + "",
            i = e.getMonth() + 1 + "",
            n = e.getDate() + "";
            i = i < 10 ? 0 + i: i;
            var s = t + i + n;
            return s
        },
        getHuaFei: function(e) {
            return Math.floor(e / 120 * 10) / 10
        },
        getPhoneReg: function() {
            return /^(13[0-9]|14[579]|15[0-3,5-9]|16[6]|17[0135678]|18[0-9]|19[189])\d{8}$/
        },
        getShareQuery: function(e) {
            var t = "fromUId=" + Player.getUserId() + "&cpsId=" + (Game.channel.ShareCpsId || Game.channel.cfg.cps);
            Request.ShareReq();
            var i = 2001;
            switch (e) {
            case "luckyShare":
                i = 2004;
                Request.AddDrawShareTimesReq();
                break;
            case "alms_invitationWei":
                i = 2002;
                AlmsShare2.hide();
                break;
            case "invitationWei":
                i = 2005;
                break;
            case "alms":
                i = 2003;
                Alms.clickBtn(1);
                break;
            case "sceneShare":
                var n = GameCenter.getSceneInfo(),
                s = "";
                if (n) {
                    s = n.SvrId + "|" + n.ServerName + "|" + n.TableId
                }
                i = 2006;
                t += "&roomParams=" + s;
                break;
            case "loginShare":
                i = 2007;
                DayLoginShare.hide();
                break;
            case "goldPig":
                i = 2008;
                break;
            case "loginSignShare":
                i = 2009;
                LoginGift.loginSignShare();
                break;
            case "kanjia":
                i = 2010;
                t += "&shareType=kanjia";
                break;
            case "freeGold":
                i = 2011;
                t += "&shareType=freeGold";
                break;
            case "bossShare":
                i = 2012;
                break;
            case Game.ShareType.LOBBY_SHARE:
                i = 2019;
                break;
            case Game.ShareType.LOBBY_SHARE:
                i = 2019;
                break;
            case Game.ShareType.GETREWARD:
                i = 2020;
                break;
            case Game.ShareType.BIGRICH:
                i = 2021;
                break;
            case Game.ShareType.ZHUANFA:
                i = 2018;
                break;
            default:
                i = 2001;
                break
            }
            if (e.indexOf(Game.ShareType.RECHARGE_REQUEST) > -1) {
                var a = e.replace(Game.ShareType.RECHARGE_REQUEST, "");
                if (a.length > 0) {
                    a = a * 1;
                    switch (a) {
                    case 1:
                        i = 2022;
                        break;
                    case 3:
                        i = 2024;
                        break;
                    case 4:
                        i = 2026;
                        break;
                    case 5:
                        i = 2028;
                        break;
                    case 6:
                        i = 2030;
                        break;
                    case 7:
                        i = 2032;
                        break;
                    default:
                        i = 2001;
                        break
                    }
                }
                t += "&shareType=" + Game.ShareType.RECHARGE_REQUEST
            }
            if (e.indexOf(Game.ShareType.RECHARGE_NOTIFICATION) > -1) {
                var a = e.replace(Game.ShareType.RECHARGE_NOTIFICATION, "");
                if (a.length > 0) {
                    a = a * 1;
                    switch (a) {
                    case 1:
                        i = 2023;
                        break;
                    case 3:
                        i = 2025;
                        break;
                    case 4:
                        i = 2027;
                        break;
                    case 5:
                        i = 2029;
                        break;
                    case 6:
                        i = 2031;
                        break;
                    case 7:
                        i = 2033;
                        break;
                    default:
                        i = 2001;
                        break
                    }
                }
                t += "&shareType=" + Game.ShareType.RECHARGE_NOTIFICATION
            }
            if (e.indexOf("superMatch") > -1) {
                var r = e.replace("superMatch", "");
                if (r.length > 0) {
                    r = r * 1;
                    switch (r) {
                    case Game.sceneConfig.sceneID.scene_SuperMatch:
                        i = 2013;
                        break;
                    case Game.sceneConfig.sceneID.scene_SuperMatchJuan:
                        i = 2014;
                        break;
                    case Game.sceneConfig.sceneID.scene_SuperMatchDaoDan:
                        i = 2015;
                        break;
                    case Game.sceneConfig.sceneID.scene_SuperMatchSkill:
                        i = 2016;
                        break;
                    default:
                        i = 2001;
                        break
                    }
                }
            }
            t += "&adId=" + i;
            return {
                query: t,
                adId: i
            }
        }
    }
} (); (function() {
    var e = Laya.List;
    e.prototype.disScrollBar = function() {
        if (this.scrollBar) {
            this.hideScrollBar();
            this.scrollBar.on(Laya.Event.CHANGE, this,
            function() {
                this.scrollBar.value = 0
            })
        }
        this.once(Laya.Event.UNDISPLAY, this,
        function() {
            this.scrollBar.offAll(this)
        })
    };
    e.prototype.hideScrollBar = function() {
        if (this.scrollBar) {
            this.scrollBar.hide = true
        }
    };
    var t = Laya.EventDispatcher;
    t.prototype.offCaller = function(e) {
        if (!Laya.stage._events) return this;
        for (var t in Laya.stage._events) {
            var i = Laya.stage._events[t];
            if (i) {
                if (i.run) {
                    if (!e || i.caller === e) {
                        delete Laya.stage._events[t];
                        i.recover()
                    }
                } else {
                    var n = 0;
                    for (var s = 0,
                    a = i.length; s < a; s++) {
                        var r = i[s];
                        if (!r) {
                            n++;
                            continue
                        }
                        if (r && (!e || r.caller === e)) {
                            n++;
                            i[s] = null;
                            r.recover()
                        }
                    }
                    if (n === a) delete Laya.stage._events[t]
                }
            }
        }
    }
})();
var eventDispatcher = new Laya.EventDispatcher;
function EventBus() {}
EventBus.prototype.send = function(e, t) {
    eventDispatcher.event(e, t)
};
EventBus.prototype.hasListener = function(e) {
    return eventDispatcher.hasListener(e)
};
EventBus.prototype.on = function(e, t, i, n) {
    if (n) {
        eventDispatcher.on(e, t, i, n)
    } else {
        eventDispatcher.on(e, t, i)
    }
};
EventBus.prototype.off = function(e, t, i) {
    eventDispatcher.off(e, t, i)
};
var EventBus = new EventBus;
var EventConfig = function() {
    return {
        EVENT_ACTRELICGIFT_GETAWARD: "EVENT_ACTRELICGIFT_GETAWARD",
        GAME_CENTER: {
            KEFU_GIFT: "KEFU_GIFT",
            SPECIAL_GIFT_BUY: "SPECIAL_GIFT_BUY",
            GAME_CENTER_WEEK_CARD_INFO: "GAME_CENTER_WEEK_CARD_INFO"
        },
        FISH_SCENE: {
            BUY_DRAGONBALL: "BUY_DRAGONBALL"
        },
        WX_ONSHOW: "WX_ONSHOW",
        NET: {},
        OneMoneyGift: {
            ONEMONEYGIFT_BUY: "ONEMONEYGIFT_BUY",
            ONEMONEYGIFT_SHOW: "ONEMONEYGIFT_SHOW"
        },
        FreeGold: {
            FREEGOLD_SHOW: "FREEGOLD_SHOW",
            FREEGOLD_GETAWARD: "FREEGOLD_GETAWARD"
        },
        FirstBuyToOne: {
            FirstBuyToOne_BUY_SUCCESS: "FirstBuyToOne_BUY_SUCCESS"
        },
        Recharge: {
            RECHARGE_CLICK_RECHARGE: "RECHARGE_CLICK_RECHARGE"
        },
        TeHui: {
            TeHui_REFRESH_LIST: "TeHui_REFRESH_LIST"
        },
        OnlineGift: {
            UpdateGetGiftLeftTime: "UpdateGetGiftLeftTime",
            GetOnlineInfoRep: "GetOnlineInfoRep"
        },
        SuperMatch: {
            UpdateFreeTimes: "UpdateFreeTimes",
            UpdateBltShareTimes: "UpdateBltShareTimes"
        },
        GuidanceRedActivity: {
            GO_NEXT_STEP: "GO_NEXT_STEP"
        },
        Shuang11: {
            Shuang11_BUY_SUCCESS: "Shuang11_BUY_SUCCESS"
        },
        SevenDayRecharge: {
            SevenDayRecharge_BUYSUCCESS: "SevenDayRecharge_BUYSUCCESS",
            SevenDayRecharge_REFRESHDATA: "SevenDayRecharge_REFRESHDATA"
        },
        DavyJonesGift: {
            DavyJonesGift_REFRESH: "DavyJonesGift_REFRESH"
        },
        SendUserShop: {
            SENDUSERSHOP_SUCCESS: "SENDUSERSHOP_SUCCESS"
        },
        ExchangeJuan: {
            ExchangeJuan_Success: "ExchangeJuan_Success"
        }
    }
} ();
var FishModelCfg = {
    99 : {
        model: xinshouUI,
        atlas: 16,
        boxIndex: 5,
        isBoss: true,
        nick: "XiaoChou",
        youActMaxIndex: 11,
        deadActMaxIndex: 0
    },
    100 : {
        model: xiaolvyuUI,
        atlas: 1,
        nick: "xiaolvyu",
        youActMaxIndex: 7,
        deadActMaxIndex: 0
    },
    101 : {
        model: dayanyuUI,
        atlas: 1,
        nick: "yanpaoyu",
        alias: "dayanyu",
        youActMaxIndex: 11,
        deadActMaxIndex: 0
    },
    102 : {
        model: hudieyuUI,
        atlas: 1,
        nick: "hudieyu",
        youActMaxIndex: 7,
        deadActMaxIndex: 0
    },
    103 : {
        model: denglongyuUI,
        atlas: 1,
        nick: "denglongyu",
        youActMaxIndex: 7,
        deadActMaxIndex: 0
    },
    104 : {
        model: nianyuUI,
        atlas: 1,
        nick: "ninayu",
        alias: "nianyu",
        youActMaxIndex: 7,
        deadActMaxIndex: 0
    },
    105 : {
        model: xiaowuguiUI,
        atlas: 1,
        nick: "wugui",
        alias: "xiaowugui",
        youActMaxIndex: 7,
        deadActMaxIndex: 0
    },
    106 : {
        model: shenxianyuUI,
        atlas: 1,
        nick: "shenxianyu",
        youActMaxIndex: 7,
        deadActMaxIndex: 0
    },
    107 : {
        model: dengpaoyuUI,
        atlas: 1,
        nick: "dengpaoyu",
        youActMaxIndex: 11,
        deadActMaxIndex: 0
    },
    108 : {
        model: tiaowenyuUI,
        atlas: 1,
        nick: "tiaowenyu",
        youActMaxIndex: 7,
        deadActMaxIndex: 0
    },
    109 : {
        model: xiaochouyuUI,
        atlas: 1,
        nick: "xiaochouyu",
        youActMaxIndex: 7,
        deadActMaxIndex: 0
    },
    110 : {
        model: kongqueyuUI,
        atlas: 1,
        nick: "kongqueyu",
        youActMaxIndex: 7,
        deadActMaxIndex: 0
    },
    200 : {
        model: hetunUI,
        atlas: 1,
        nick: "hetun",
        youActMaxIndex: 11,
        deadActMaxIndex: 0
    },
    201 : {
        model: haitunUI,
        atlas: 2,
        nick: "haitun",
        youActMaxIndex: 7,
        deadActMaxIndex: 0
    },
    202 : {
        model: gangkuiyuUI,
        atlas: 2,
        nick: "gangkuiyu",
        youActMaxIndex: 7,
        deadActMaxIndex: 0
    },
    203 : {
        model: shuimuUI,
        atlas: 2,
        nick: "shuimu",
        youActMaxIndex: 7,
        deadActMaxIndex: 0
    },
    204 : {
        model: bianbianyuUI,
        atlas: 2,
        nick: "bianbianyu",
        youActMaxIndex: 11,
        deadActMaxIndex: 0
    },
    205 : {
        model: bianfuyuUI,
        atlas: 2,
        nick: "bianfuyu",
        youActMaxIndex: 7,
        deadActMaxIndex: 0
    },
    206 : {
        model: jianyuUI,
        atlas: 2,
        nick: "jianyu",
        youActMaxIndex: 7,
        deadActMaxIndex: 0
    },
    300 : {
        model: yinchuitoushaUI,
        atlas: 2,
        nick: "yinchuitousha",
        youActMaxIndex: 7,
        deadActMaxIndex: 0,
        showMinZhuanPan: 0
    },
    301 : {
        model: jinhouUI,
        atlas: 3,
        nick: "jingangkui",
        alias: "jinhou",
        youActMaxIndex: 7,
        deadActMaxIndex: 0,
        showMinZhuanPan: 1
    },
    302 : {
        model: jinchanUI,
        atlas: 3,
        nick: "jinchan",
        youActMaxIndex: 5,
        deadActMaxIndex: 0,
        showMinZhuanPan: 1
    },
    304 : {
        model: jinseguiUI,
        atlas: 3,
        nick: "jingui",
        alias: "jinsegui",
        youActMaxIndex: 5,
        deadActMaxIndex: 0,
        showMinZhuanPan: 1
    },
    305 : {
        model: jinseshuimuUI,
        atlas: 3,
        nick: "jinshuimu",
        alias: "jinseshuimu",
        youActMaxIndex: 7,
        deadActMaxIndex: 0,
        showMinZhuanPan: 1
    },
    306 : {
        model: jinlongyuUI,
        atlas: 3,
        nick: "jinlongyu",
        youActMaxIndex: 13,
        deadActMaxIndex: 0
    },
    307 : {
        model: jinchuitoushaUI,
        atlas: 3,
        nick: "jinchuitousha",
        youActMaxIndex: 7,
        deadActMaxIndex: 0,
        showMinZhuanPan: 0
    },
    308 : {
        model: dajiangUI,
        atlas: 4,
        nick: "dj",
        alias: "dajiang",
        youActMaxIndex: 15,
        deadActMaxIndex: 0,
        showMinZhuanPan: 0
    },
    321 : {
        model: jvbaopenUI,
        atlas: 4,
        nick: "jubaopen",
        alias: "jvbaopen",
        youActMaxIndex: 7,
        deadActMaxIndex: 0,
        showMinZhuanPan: 0
    },
    322 : {
        model: jinlongUI,
        atlas: 3,
        nick: "jinlong",
        youActMaxIndex: 7,
        deadActMaxIndex: 0,
        showMinZhuanPan: 1
    },
    323 : {
        model: changeUI,
        atlas: 8,
        nick: "change",
        isBoss: true,
        boxIndex: 5,
        youActMaxIndex: 9,
        deadActMaxIndex: 0,
        showMinZhuanPan: 1
    },
    400 : {
        model: jiangquanUI,
        atlas: 4,
        nick: "jiangquan",
        youActMaxIndex: 0,
        deadActMaxIndex: 0,
        countName: "jiangquan_1.png"
    },
    401 : {
        model: jiangquanUI,
        atlas: 4,
        nick: "jiangquan",
        youActMaxIndex: 0,
        deadActMaxIndex: 0,
        countName: "jiangquan_2.png"
    },
    402 : {
        model: jiangquanUI,
        atlas: 4,
        nick: "jiangquan",
        youActMaxIndex: 0,
        deadActMaxIndex: 0,
        countName: "jiangquan_3.png"
    },
    403 : {
        model: jiangquanUI,
        atlas: 4,
        nick: "jiangquan",
        youActMaxIndex: 0,
        deadActMaxIndex: 0,
        countName: "jiangquan_4.png"
    },
    404 : {
        model: jiangquanUI,
        atlas: 4,
        nick: "jiangquan",
        youActMaxIndex: 0,
        deadActMaxIndex: 0,
        countName: "jiangquan_5.png"
    },
    405 : {
        model: jiangquanUI,
        atlas: 4,
        nick: "jiangquan",
        youActMaxIndex: 0,
        deadActMaxIndex: 0,
        countName: "jiangquan_6.png"
    },
    406 : {
        model: jiangquanUI,
        atlas: 4,
        nick: "jiangquan",
        youActMaxIndex: 0,
        deadActMaxIndex: 0,
        countName: "jiangquan_7.png"
    },
    407 : {
        model: dianmanUI,
        atlas: 4,
        nick: "dianman",
        youActMaxIndex: 7,
        deadActMaxIndex: 0
    },
    408 : {
        model: haishenbaozangUI,
        atlas: 4,
        nick: "haishenbaozang",
        youActMaxIndex: 0,
        deadActMaxIndex: 0
    },
    410 : {
        model: zhadanUI,
        atlas: 4,
        nick: "shuilei",
        alias: "zhadan",
        youActMaxIndex: 7,
        deadActMaxIndex: 0
    },
    411 : {
        model: jinzhuUI,
        atlas: 3,
        nick: "jz",
        alias: "jinzhu",
        youActMaxIndex: 7,
        deadActMaxIndex: 0
    },
    490 : {
        model: longxiaUI,
        atlas: 13,
        boxIndex: 5,
        isBoss: true,
        nick: "longxia",
        youActMaxIndex: 18,
        deadActMaxIndex: 0
    },
    493 : {
        model: xiongmaoUI,
        atlas: 15,
        boxIndex: 5,
        isBoss: true,
        nick: "XiongMao",
        youActMaxIndex: 11,
        deadActMaxIndex: 0
    },
    500 : {
        model: zhangyuUI,
        atlas: 12,
        boxIndex: 5,
        nick: "zhangyu",
        isBoss: true,
        youActMaxIndex: 8,
        deadActMaxIndex: 0
    },
    501 : {
        model: baoguiUI,
        atlas: 5,
        boxIndex: 5,
        nick: "baogui",
        isBoss: true,
        youActMaxIndex: 7,
        deadActMaxIndex: 0
    },
    502 : {
        model: huolongUI,
        atlas: 6,
        boxIndex: 5,
        nick: "huolong",
        isBoss: true,
        youActMaxIndex: 8,
        deadActMaxIndex: 0
    },
    503 : {
        model: meirenyuUI,
        atlas: 11,
        boxIndex: 5,
        nick: "meirenyu",
        isBoss: true,
        youActMaxIndex: 6,
        deadActMaxIndex: 0
    },
    505 : {
        model: fangZhuXiaoYaoUI,
        atlas: 9,
        boxIndex: 5,
        nick: "xiaoYao",
        isBoss: true,
        alias: "fangZhuXiaoYao",
        youActMaxIndex: 9,
        deadActMaxIndex: 0
    },
    506 : {
        model: fangZhuYaoJiangUI,
        atlas: 9,
        boxIndex: 5,
        isBoss: true,
        nick: "yaoJiang",
        alias: "fangZhuYaoJiang",
        youActMaxIndex: 9,
        deadActMaxIndex: 0
    },
    507 : {
        model: fangZhuQueenUI,
        atlas: 9,
        boxIndex: 5,
        isBoss: true,
        nick: "bossQueen",
        alias: "fangZhuQueen",
        youActMaxIndex: 9,
        deadActMaxIndex: 0
    },
    508 : {
        model: dragonUI,
        atlas: 7,
        nick: "dragon",
        boxIndex: 5,
        isBoss: true,
        youActMaxIndex: 21,
        deadActMaxIndex: 0
    },
    601 : {
        model: worldBossUI,
        atlas: 10,
        boxIndex: 5,
        isBoss: true,
        nick: "worldBoss",
        youActMaxIndex: 9,
        deadActMaxIndex: 0
    },
    602 : {
        model: bosskunUI,
        atlas: 14,
        boxIndex: 5,
        isBoss: true,
        nick: "bossKun",
        youActMaxIndex: 43,
        deadActMaxIndex: 0
    }
};
var QuadTree = function() {
    var e = Laya.Rectangle;
    var t = Game.UIWidth,
    i = Game.UIHeight;
    var n = t / 4;
    var s = t / 2;
    var a = i / 2;
    var r = [];
    var o = [new e( - 1, -1, 0, 0), new e(s + n, 0, n, a), new e(s, 0, n, a), new e(n, 0, n, a), new e(0, 0, n, a), new e(0, a, n, a), new e(n, a, n, a), new e(s, a, n, a), new e(s + n, a, n, a)];
    return {
        getAddIndexList: function(e, t) {
            if (e instanceof Laya.Rectangle) {
                r = [];
                for (var i = 1; i < o.length; i++) {
                    if (o[i].intersects(e)) {
                        r.push(i);
                        if (t) {
                            break
                        }
                    }
                }
                return r
            } else {
                return []
            }
        }
    }
} ();
var Sound = function() {
    var o = Laya.SoundManager;
    var l = Laya.Handler;
    var t = false;
    var i = false;
    var n = false;
    var a = {
        _muted: false,
        musicInst: null,
        soundInstList: [],
        playMusic: function(e, t) {
            if (this._muted) {
                return
            }
            if (!this.musicInst) {
                this.musicInst = wx.createInnerAudioContext()
            } else {
                this.musicInst.stop()
            }
            this.musicInst.src = e;
            this.musicInst.volume = t;
            this.musicInst.autoPlay = true;
            this.musicInst.loop = true;
            this.musicInst.play()
        },
        stopMusic: function(e) {
            if (this.musicInst) {
                this.musicInst.stop()
            }
        }
    };
    var e = null;
    var h = [];
    var s = null,
    r = [],
    u = 0,
    c = 0,
    f = [];
    o.autoReleaseSound = false;
    function d(e) {
        if (e.indexOf("/static/sound/") < 0) {
            e = Game.domain + "static/sound/" + e
        }
        return e
    }
    var g = {
        RES: {
            bgm_denglu: {
                url: "mp3/bgm_denglu.mp3",
                vol: .4
            },
            bgm_scene1: {
                url: "mp3/bgm_scene1.mp3",
                vol: .4
            },
            bgm_scene2: {
                url: "mp3/bgm_scene2.mp3",
                vol: .4
            },
            bgm_scene3: {
                url: "mp3/bgm_scene3.mp3",
                vol: .4
            },
            boss_laixi02: {
                url: "mp3/boss_laixi02.mp3",
                vol: .5
            },
            BOSS_scene_bomb: {
                url: "mp3/BOSS_scene_bomb.mp3",
                vol: .3
            },
            ChangeCannon: {
                url: "mp3/ChangeCannon.mp3",
                vol: .4
            },
            DiamondIn: {
                url: "mp3/DiamondIn.mp3",
                vol: .5
            },
            FishDying12: {
                url: "mp3/FishDying12.mp3",
                vol: .5
            },
            bigZhuanpan: {
                url: "mp3/zhuanpan.mp3",
                vol: .3
            },
            boss_warning: {
                url: "mp3/boss_warning.mp3",
                vol: .4
            },
            close: {
                url: "mp3/btn_close.mp3",
                vol: .4
            },
            coinluoru: {
                url: "mp3/coinluoru.mp3",
                vol: .1
            },
            ddz25: {
                url: "mp3/ddz25.mp3",
                vol: .3
            },
            deadfish_1: {
                url: "mp3/deadfish_1.mp3",
                vol: .4
            },
            deadfish_19: {
                url: "mp3/deadfish_19.mp3",
                vol: .3
            },
            fish15_1: {
                url: "mp3/fish15_1.mp3",
                vol: .3
            },
            fishdie2: {
                url: "mp3/fishdie2.mp3",
                vol: .3
            },
            fishdie3: {
                url: "mp3/fishdie3.mp3",
                vol: .3
            },
            fishdie4: {
                url: "mp3/fishdie4.mp3",
                vol: .3
            },
            fishdie5: {
                url: "mp3/fishdie5.mp3",
                vol: .3
            },
            fishdie6: {
                url: "mp3/fishdie6.mp3",
                vol: .4
            },
            fishdie7: {
                url: "mp3/fishdie7.mp3",
                vol: .3
            },
            fishdie10: {
                url: "mp3/fishdie10.mp3",
                vol: .3
            },
            fishdie13: {
                url: "mp3/fishdie13.mp3",
                vol: .3
            },
            fishdie18: {
                url: "mp3/fishdie18.mp3",
                vol: .3
            },
            gold_drop: {
                url: "mp3/gold_drop.mp3",
                vol: .7
            },
            gold_get: {
                url: "mp3/gold_get.mp3",
                vol: .3
            },
            huanyinglaidabuyudajiangsai: {
                url: "mp3/huanyinglaidabuyudajiangsai.mp3",
                vol: .6
            },
            jiangquanExchangGift: {
                url: "mp3/jiangquannnegyonglaiduihuangezhongjiangli.mp3",
                vol: .8
            },
            lightingchain: {
                url: "mp3/lightingchain.mp3",
                vol: .5
            },
            luckTurn1: {
                url: "mp3/zp_01.mp3",
                vol: 1
            },
            luckTurn2: {
                url: "mp3/zp_02.mp3",
                vol: 1
            },
            luckTurn3: {
                url: "mp3/zp_03.mp3",
                vol: 1
            },
            luckTurn4: {
                url: "mp3/zp_04.mp3",
                vol: 1
            },
            luckTurn5: {
                url: "mp3/zp_05.mp3",
                vol: .8
            },
            shipmentPZ: {
                url: "mp3/hydt_zhuandong.mp3",
                vol: 1
            },
            shipmentPD: {
                url: "mp3/hydt-ding.mp3",
                vol: 1
            },
            ohno: {
                url: "mp3/ohno.mp3",
                vol: .4
            },
            open: {
                url: "mp3/btn_open.mp3",
                vol: .6
            },
            qihanglibao: {
                url: "mp3/qihanglibao.mp3",
                vol: .5
            },
            shengjipaobei: {
                url: "mp3/shengjipaobei.mp3",
                vol: .3
            },
            shot: {
                url: "mp3/shot.mp3",
                vol: .4
            },
            skill_ice: {
                url: "mp3/skill_ice.mp3",
                vol: .3
            },
            smallZhuanpan: {
                url: "mp3/zhuanpanchoujiang.mp3",
                vol: .3
            },
            win: {
                url: "mp3/win.mp3",
                vol: .5
            },
            win1: {
                url: "mp3/win1.mp3",
                vol: .8
            },
            yewobuganxin: {
                url: "mp3/yewobuganxin.mp3",
                vol: .3
            },
            ysh_qinzhenyaozoulbuduiwanhuima: {
                url: "mp3/ysh_qinzhenyaozoulbuduiwanhuima.mp3",
                vol: .5
            },
            yuchaolailin: {
                url: "mp3/yuchaolailin.mp3",
                vol: .3
            },
            cycle_bomb: {
                url: "mp3/cycle_bomb.mp3",
                vol: .3
            },
            zhadan: {
                url: "mp3/zhadan.mp3",
                vol: .5
            },
            zhecaishikaishi: {
                url: "mp3/zhecaishikaishi.mp3",
                vol: .2
            },
            kuangbao: {
                url: "mp3/kuangbao.mp3",
                vol: .6
            },
            dianjipinmuxiangyuerkaipaoba: {
                url: "mp3/01dianjipinmuxiangyuerkaipaoba.mp3",
                vol: .6
            },
            buhuodayujiangligenggaoo: {
                url: "mp3/02buhuodayujiangligenggaoo.mp3",
                vol: .6
            },
            shiyongpaobeilvyuegaojiangliyuefengfu: {
                url: "mp3/03shiyongpaobeilvyuegaojiangliyuefengfu.mp3",
                vol: .6
            },
            shiyongjinengbuyugengqingsongo: {
                url: "mp3/04shiyongjinengbuyugengqingsongo.mp3",
                vol: .6
            },
            kezaicaidanzhongchakanyujian: {
                url: "mp3/05kezaicaidanzhongchakanyujian.mp3",
                vol: .6
            },
            btn2: {
                url: "mp3/btn2.mp3",
                vol: .6
            },
            clown_rw_appear: {
                url: "mp3/clown_rw_appear.mp3",
                vol: .6
            },
            jubaopen_apear: {
                url: "mp3/jubaopen_appear.mp3",
                vol: .6
            },
            jubaopen_continue: {
                url: "mp3/jubaopen_continue.mp3",
                vol: .6
            },
            jubaopen_stop: {
                url: "mp3/jubaopen_stop.mp3",
                vol: .7
            },
            levelup: {
                url: "mp3/levelup.mp3",
                vol: .6
            },
            notice_effect2: {
                url: "mp3/notice_effect2.mp3",
                vol: .6
            },
            shark_jieguo: {
                url: "mp3/jieguo_0.mp3",
                vol: .5
            },
            shark_yaoyiyao: {
                url: "mp3/yaoyiyao_0.mp3",
                vol: .5
            },
            pirate_go: {
                url: "mp3/pirate_go.mp3",
                vol: .5
            },
            eba_Injured: {
                url: "mp3/eba_Injured.mp3",
                vol: 1
            },
            lbj_roll: {
                url: "mp3/labaji_roll.mp3",
                vol: 1
            },
            lbj_caishen: {
                url: "mp3/lgwin.mp3",
                vol: 1
            },
            lbj_stop: {
                url: "mp3/pig_stop.mp3",
                vol: 1
            }
        },
        JewRes: {
            baohe_cuo_card: {
                url: "mp3/BaoShiMiCheng_baohe_cuo_card.mp3",
                vol: 1
            },
            baohe_fan: {
                url: "mp3/BaoShiMiCheng_baohe_fan.mp3",
                vol: .5
            },
            baohe_move: {
                url: "mp3/BaoShiMiCheng_baohe_move.mp3",
                vol: 1
            },
            baohe_open_card: {
                url: "mp3/BaoShiMiCheng_baohe_open_card.mp3",
                vol: 1
            },
            baohe_show_card: {
                url: "mp3/BaoShiMiCheng_baohe_show_card.mp3",
                vol: 1
            },
            bg_1: {
                url: "mp3/BaoShiMiCheng_bg_1.mp3",
                vol: 1
            },
            bg_2: {
                url: "mp3/BaoShiMiCheng_bg_2.mp3",
                vol: 1
            },
            bg_3: {
                url: "mp3/BaoShiMiCheng_bg_3.mp3",
                vol: 1
            },
            bomb_0: {
                url: "mp3/BaoShiMiCheng_bomb_0.mp3",
                vol: 1
            },
            bomb_1: {
                url: "mp3/BaoShiMiCheng_bomb_1.mp3",
                vol: .5
            },
            bomb_100: {
                url: "mp3/BaoShiMiCheng_bomb_100.mp3",
                vol: 1
            },
            btn: {
                url: "mp3/BaoShiMiCheng_btn.mp3",
                vol: 1
            },
            clean_table: {
                url: "mp3/BaoShiMiCheng_clean_table.mp3",
                vol: 1
            },
            drop: {
                url: "mp3/BaoShiMiCheng_drop.mp3",
                vol: 1
            },
            kill_bomb: {
                url: "mp3/BaoShiMiCheng_kill_bomb.mp3",
                vol: 1
            },
            money_fly: {
                url: "mp3/BaoShiMiCheng_money_fly.mp3",
                vol: 1
            },
            pass_all: {
                url: "mp3/BaoShiMiCheng_pass_all.mp3",
                vol: 1
            },
            result_excellent: {
                url: "mp3/BaoShiMiCheng_result_excellent.mp3",
                vol: 1
            },
            result_great: {
                url: "mp3/BaoShiMiCheng_result_great.mp3",
                vol: 1
            },
            result_perfect: {
                url: "mp3/BaoShiMiCheng_result_perfect.mp3",
                vol: 1
            }
        },
        BigRichRes: {
            bgm_scene: {
                url: "mp3/dfh_bg.mp3",
                vol: .4
            },
            load_walking: {
                url: "mp3/dfh_road.mp3",
                vol: .7
            },
            end_success: {
                url: "mp3/dfh_Success.mp3",
                vol: 1
            },
            end_fail: {
                url: "mp3/dfh_fail.mp3",
                vol: .7
            },
            event_chuansong: {
                url: "mp3/dfh_chuansong.mp3",
                vol: 1
            },
            event_walkingType_2: {
                url: "mp3/dfh_jiangli.mp3",
                vol: 1
            },
            event_walkingType_3: {
                url: "mp3/dfh_tui3.mp3",
                vol: 1
            },
            event_walkingType_4: {
                url: "mp3/dfh_jia3.mp3",
                vol: 1
            },
            event_walkingType_5: {
                url: "mp3/dfh_jia6.mp3",
                vol: 1
            },
            shake_sieve: {
                url: "mp3/dfh_sieve.mp3",
                vol: 1
            }
        },
        dragonMusic: {
            yzzj_result_perfect: {
                url: "mp3/yzzj_result_perfect.mp3",
                vol: 1
            },
            yzzj_result_great: {
                url: "mp3/yzzj_result_great.mp3",
                vol: 1
            },
            yzzj_result_excellent: {
                url: "mp3/yzzj_result_excellent.mp3",
                vol: 1
            },
            Boss_attack: {
                url: "mp3/Boss_attack.mp3",
                vol: 1
            },
            Boss_dead: {
                url: "mp3/Boss_dead.mp3",
                vol: 1
            },
            Dasheng_attack: {
                url: "mp3/Dasheng_attack.mp3",
                vol: 1
            },
            Dasheng_skill: {
                url: "mp3/Dasheng_skill.mp3",
                vol: 1
            },
            Lijing_attack: {
                url: "mp3/Lijing_attack.mp3",
                vol: 1
            },
            Lijing_skill: {
                url: "mp3/Lijing_skill.mp3",
                vol: 1
            },
            Nezha_attack: {
                url: "mp3/Nezha_attack.mp3",
                vol: 1
            },
            Nezha_skill: {
                url: "mp3/Nezha_skill.mp3",
                vol: 1
            },
            yzzj_bg_1: {
                url: "mp3/yzzj_bg_1.mp3",
                vol: .3
            },
            yzzj_crush: {
                url: "mp3/yzzj_crush.mp3",
                vol: 1
            },
            yzzj_crush_normal: {
                url: "mp3/yzzj_crush_normal.mp3",
                vol: 1
            },
            yzzj_fly_money: {
                url: "mp3/yzzj_fly_money.mp3",
                vol: 1
            },
            yzzj_kill_boss: {
                url: "mp3/yzzj_kill_boss.mp3",
                vol: 1
            }
        },
        getUrl: function(e, t) {
            e = d(e);
            var i = myStorage.getItem("soundSet");
            if ((Game.RunningInBackstage || !i.sod || !e) && !t) {
                return
            }
            e = e.replace(/mp3/g, "ogg");
            if (Game.onMiniGame) {
                e = e.replace(/ogg/g, "mp3")
            }
            if (Channel && Channel.soundType) {
                if (Channel.soundType == "ogg") {
                    e = e.replace(/mp3/g, "ogg")
                } else if (Channel.soundType == "mp3") {
                    e = e.replace(/ogg/g, "mp3")
                }
            }
            return e
        },
        setMusicVolume: function(e) {
            o.setMusicVolume(e)
        },
        playSound: function(e, t, i, n, s, a) {
            if (o.soundMuted) return;
            e = d(e);
            var r = myStorage.getItem("soundSet");
            if (Game.RunningInBackstage || !r.sod || !e) {
                return
            }
            e = this.getUrl(e);
            i = i ? 0 : 1;
            a = a ? a: 0;
            o.soundVolume = t ? t: 1;
            if (Game.isApp) {
                if (Game.state.get() > Game.sceneConfig.sceneID.gameCenter && e !== "ogg/shot.ogg") {
                    h.push(e)
                }
            } else {
                if (Game.state.get() > Game.sceneConfig.sceneID.gameCenter && (e !== "mp3/shot.mp3" && e !== "ogg/shot.ogg")) {
                    h.push(e)
                }
            }
            o.playSound(e, i, new l(this,
            function() {
                if (Game.state.get() > 0) {
                    h.removeByValue(e)
                }
                n && n()
            }), a)
        },
        playMusic: function(e, t, i, n, s) {
            if (o.musicMuted) return;
            e = d(e);
            if (Game.RunningInBackstage) {
                return
            }
            t = t ? t: .5;
            i = i ? 0 : 1;
            s = s ? s: 0;
            o.musicVolume = t;
            if (Game.onMiniGame) {
                a.playMusic(e, t);
                return
            }
            o.playMusic(e, i, new l(this,
            function() {
                n && n()
            }), s)
        },
        stopMusic: function(e) {
            var t = myStorage.getItem("soundSet");
            if (e) {
                this.stopBgMusic();
                myStorage.setItem("soundSet", {
                    bgm: false,
                    sod: t.sod,
                    fls: t.fls
                })
            } else {
                myStorage.setItem("soundSet", {
                    bgm: true,
                    sod: t.sod,
                    fls: t.fls
                });
                if (Game.state.get() <= Game.sceneConfig.sceneID.gameCenter) {
                    this.playGameCenterBgMusic()
                } else {
                    this.playFishSceneBgMusic()
                }
            }
        },
        stopSound: function(e) {
            o.soundMuted = e
        },
        isMusicMuted: function(e) {
            o.musicMuted = e
        },
        stopSoundByUrl: function(e) {
            e = this.getUrl(e, true);
            if (e) {
                o.stopSound(e)
            }
        },
        stopBgMusic: function() {
            if (Game.onMiniGame) {
                a.stopMusic();
                return
            }
            o && o.stopMusic()
        },
        stopAll: function() {
            h = [];
            if (o) {
                o.stopAll()
            }
            this.stopBgMusic()
        },
        guan_SoundAndMusic: function() {
            this.stopAll();
            this.stopBgMusic();
            o.muted = true
        },
        kai_SoundAndMusic: function() {
            o.muted = false
        },
        setIsMutedState: function(e) {
            t = e
        },
        setIsSoundMuted: function(e) {
            i = e
        },
        setIsShock: function(e) {
            n = e
        },
        playGameCenterBgMusic: function() {
            var e = myStorage.getItem("soundSet");
            if (e && !e.bgm) {
                return
            }
            var t = Sound.RES.bgm_denglu.url;
            t = d(t);
            Sound.playMusic(t, Sound.RES.bgm_denglu.vol, true)
        },
        playFishSceneBgMusic: function() {
            var e = myStorage.getItem("soundSet");
            if (e && !e.bgm) {
                return
            }
            var t = ["bgm_scene1", "bgm_scene2", "bgm_scene3"];
            var i = t[Math.floor(Math.random() * t.length)];
            var n = Sound.RES[i].url;
            n = d(n);
            Sound.playMusic(n, Sound.RES[i].vol, true,
            function() {
                console.log("播放完毕")
            })
        },
        initFireSound: function() {
            for (var e = 0; e < 15; e++) {
                var t = wx.createInnerAudioContext();
                var i = this.RES.shot.url.replace(/ogg/g, "mp3");
                i = d(i);
                t.src = i;
                t.volume = 1;
                t.loop = false;
                r.push(t)
            }
        },
        playLuckTurn: function() {},
        playFire: function() {
            var e = myStorage.getItem("soundSet");
            if (!e.sod) {
                return
            }
            if (Game.isApp && window.BypassAudioManager) {
                BypassAudioManager && BypassAudioManager.play();
                return
            }
            var t = undefined;
            if (h.length > 0) {
                t = .3
            } else {
                t = Sound.RES.shot.vol
            }
            if (Game.onMiniGame && !Game.onByteBeat) {
                if (u > r.length - 1) {
                    u = 0
                }
                s = r[u];
                if (s) {
                    s.volume = t;
                    s.play();
                    u++
                }
            } else {
                var i = Sound.RES.shot.url;
                i = d(i);
                Sound.playSound(i, t, false)
            }
        },
        stopFire: function() {
            if (Game.onMiniGame && !Game.onByteBeat) {
                if (s) {
                    s.stop()
                }
            } else {
                var e = Sound.RES.shot.url;
                e = d(e);
                Sound.stopSoundByUrl(e)
            }
        }
    };
    return g
} ();
var GameConfig = function() {
    var k = null;
    var G = {},
    M = {},
    B = {},
    A = {},
    P = {},
    U = [],
    E = [],
    N = [],
    F = [],
    O = {},
    n = [],
    s = {},
    V = [],
    o = [],
    l = [],
    q = [],
    z = {},
    i = [],
    W = [];
    var H = [];
    var Y = {};
    var j = [];
    var X = [],
    J = [];
    var $ = [];
    var K = [];
    var Q = [];
    var Z = {};
    var ee = {};
    var te = {};
    var ie = [];
    var ne, se = [],
    ae = {};
    var re = [];
    var oe = null;
    var le = [],
    he = {},
    ue = {},
    ce = [];
    var fe = [],
    de = [];
    var ge = {},
    pe = {},
    _e = [],
    me = [];
    var ve, e, ye = [];
    var Ie;
    var Se = null;
    var Ce = {};
    var be = [];
    var we = {};
    var xe = {};
    var Re = [];
    var Le = [];
    var Te = [];
    var De = [];
    var ke = {};
    var Ge = {};
    var Me = {};
    var Be = {};
    var Ae = [];
    return {
        init: function(e) {
            if (e) {
                k = e.Ver;
                var t = e.Items;
                if (t) {
                    if (t.Cfg_Item) {
                        var i = null;
                        J = [];
                        for (var n = 0; n < t.Cfg_Item.length; n++) {
                            i = t.Cfg_Item[n];
                            i.skin = "resource/icon/" + (i.PicID ? i.PicID: i.ID) + ".png";
                            G[i.ID] = i;
                            if (i.ItemType === 5) {
                                X.push(i)
                            } else if (i.ItemType === 6) {
                                J.push(i)
                            }
                        }
                    }
                    if (t.Cfg_Err) {
                        var i = null;
                        for (var n = 0; n < t.Cfg_Err.length; n++) {
                            i = t.Cfg_Err[n];
                            B[i.Id] = i.MSG
                        }
                    }
                    if (t.Cfg_ClientErr) {
                        var i = null;
                        for (var n = 0,
                        s = t.Cfg_ClientErr.length; n < s; n++) {
                            i = t.Cfg_ClientErr[n];
                            M[i.ID] = i.MSG
                        }
                    }
                    if (t.Cfg_Notice_Msg) {
                        var i = null;
                        for (var n = 0; n < t.Cfg_Notice_Msg.length; n++) {
                            i = t.Cfg_Notice_Msg[n];
                            P[i.Id] = i.MSG
                        }
                    }
                    if (t.Cfg_ExchangeLottery) {
                        U = t.Cfg_ExchangeLottery
                    }
                    if (t.Cfg_ExchangeScore) {
                        E = t.Cfg_ExchangeScore
                    }
                    if (t.Cfg_RedExchange) {
                        N = t.Cfg_RedExchange
                    }
                    if (t.Cfg_MonsterScore) {
                        W = t.Cfg_MonsterScore
                    }
                    if (t.Cfg_Task) {
                        V = t.Cfg_Task
                    }
                    if (t.Cfg_Guild && t.Cfg_Guild.length) {
                        z = t.Cfg_Guild[0]
                    }
                    if (t.Cfg_Task_Wechat) {
                        q = t.Cfg_Task_Wechat
                    }
                    if (t.Cfg_Fish) {
                        var a = null;
                        for (var n = 0; n < t.Cfg_Fish.length; n++) {
                            a = t.Cfg_Fish[n];
                            if (a) {
                                A[a.FishId] = a;
                                if (a.deadSound) {
                                    if (a.deadSound === "0") {
                                        a.deadSound = []
                                    } else {
                                        if (typeof a.deadSound == "string") {
                                            a.deadSound = a.deadSound.split("|")
                                        }
                                    }
                                } else {
                                    a.deadSound = []
                                }
                                if (a.FishMultiple && typeof a.FishMultiple == "string") {
                                    a.FishMultiple = a.FishMultiple.split("|")
                                }
                            }
                        }
                        F = t.Cfg_Fish
                    }
                    if (t.Cfg_FishType) {
                        var i = null;
                        for (var n = 0; n < t.Cfg_FishType.length; n++) {
                            i = t.Cfg_FishType[n];
                            O[i.FishType] = i
                        }
                    }
                    if (t.Cfg_adModel && t.Cfg_adModel.length) {
                        Y = {};
                        for (var n = 0,
                        s = t.Cfg_adModel.length; n < s; n++) {
                            var i = t.Cfg_adModel[n];
                            if (i && !i.disable) {
                                if (!Y[i.Type]) Y[i.Type] = [];
                                Y[i.Type].push(i)
                            }
                        }
                    }
                    if (t.Cfg_Draw_AD) {
                        H = t.Cfg_Draw_AD
                    }
                    if (t.Cfg_Sign) {
                        j = t.Cfg_Sign
                    }
                    if (t.Cfg_VipDesc && t.Cfg_Vip) {
                        var r = t.Cfg_VipDesc;
                        var o = t.Cfg_Vip;
                        var l = {};
                        for (var n = 0; n < r.length; n++) {
                            var a = r[n];
                            if (l[a.VipLevel]) {
                                l[a.VipLevel].push(a)
                            } else {
                                l[a.VipLevel] = [];
                                l[a.VipLevel].push(a)
                            }
                        }
                        $ = [];
                        for (var n = 0; n < o.length; n++) {
                            var a = o[n];
                            if (l[a.VipLevel]) {
                                a["VipDesc"] = l[a.VipLevel]
                            }
                            $.push(a)
                        }
                    }
                    if (t.Cfg_Mp_Gift) {
                        K = t.Cfg_Mp_Gift
                    }
                    if (t.Cfg_downloadCfg) {
                        Q = t.Cfg_downloadCfg
                    }
                    if (t.Cfg_SuperMatchTask) {
                        var i = null;
                        for (var n = 0; n < t.Cfg_SuperMatchTask.length; n++) {
                            i = t.Cfg_SuperMatchTask[n];
                            if (i) {
                                ee[i.TaskId] = i
                            }
                        }
                    }
                    if (t.Cfg_NewTask) {
                        var i = null;
                        for (var n = 0; n < t.Cfg_NewTask.length; n++) {
                            i = t.Cfg_NewTask[n];
                            if (i) {
                                te[i.ID] = i
                            }
                        }
                    }
                    if (t.Cfg_Config) {
                        Z = {};
                        var h = t.Cfg_Config;
                        for (var n = 0; n < h.length; n++) {
                            var a = h[n];
                            Z[a.CfgKey] = a.CfgValue
                        }
                    }
                    if (t.Cfg_RedBag) {
                        ie = [];
                        var u = t.Cfg_RedBag;
                        for (var n = 0; n < u.length; n++) {
                            ie.push(u[n])
                        }
                    }
                    if (t.Cfg_BSMC_Mul) {
                        se = t.Cfg_BSMC_Mul;
                        for (var n = 0; n < se.length; n++) {
                            var c = se[n];
                            ae[c.RemoveNum] = c
                        }
                    }
                    if (t.Cfg_BSMC) {
                        ne = t.Cfg_BSMC
                    }
                    if (t.Cfg_Shortcut) {
                        re = t.Cfg_Shortcut
                    }
                    if (t.Cfg_SceneFace) {
                        oe = {};
                        for (var n = 0,
                        s = t.Cfg_SceneFace.length; n < s; n++) {
                            var i = t.Cfg_SceneFace[n];
                            oe[i.Id] = i
                        }
                    }
                    if (t.Cfg_DNLG) {
                        le = t.Cfg_DNLG.slice()
                    }
                    if (t.Cfg_DNLG_Skill) {
                        for (var n = 0,
                        s = t.Cfg_DNLG_Skill.length; n < s; n++) {
                            var i = t.Cfg_DNLG_Skill[n];
                            ue[i.SkillID] = i
                        }
                    }
                    if (t.Cfg_DNLG_Mul) {
                        for (var n = 0,
                        s = t.Cfg_DNLG_Mul.length; n < s; n++) {
                            var i = t.Cfg_DNLG_Mul[n];
                            he[i.RemoveNum] = i
                        }
                    }
                    if (t.Cfg_DNLG_Mul) {
                        ce = t.Cfg_DNLG_Mul
                    }
                    if (t.Cfg_AchTask) {
                        fe = t.Cfg_AchTask
                    }
                    if (t.Cfg_AchTaskActive) {
                        de = t.Cfg_AchTaskActive
                    }
                    if (t.Cfg_DTDBRule) {
                        var f = t.Cfg_DTDBRule;
                        for (var n = 0; n < f.length; n++) {
                            var d = f[n];
                            if (d) {
                                ge[d.SceneId] = d
                            }
                        }
                    }
                    if (t.Cfg_DTDB) {
                        pe = t.Cfg_DTDB
                    }
                    if (t.Cfg_DTDBDesc) {
                        var d = t.Cfg_DTDBDesc;
                        for (var n = 0; n < d.length; n++) {
                            var g = d[n];
                            if (g) {
                                _e[g.Id] = g
                            }
                        }
                    }
                    if (t.Cfg_DTDBTip) {
                        me = t.Cfg_DTDBTip
                    }
                    if (t.Cfg_ZillionaireRank) {
                        ye = t.Cfg_ZillionaireRank
                    }
                    if (t.Cfg_Zillionaire) {
                        ve = t.Cfg_Zillionaire
                    }
                    if (t.Cfg_ClientWorldBoss) {
                        Ie = t.Cfg_ClientWorldBoss
                    }
                    if (t.Cfg_BossRefresh) {
                        Se = t.Cfg_BossRefresh
                    }
                    if (t.Cfg_FishTalk) {
                        var d = t.Cfg_FishTalk;
                        for (var n = 0; n < d.length; n++) {
                            var g = d[n];
                            if (g) {
                                Ce[g.TalkId + ""] = g.FishTalk
                            }
                        }
                    }
                    if (t.Cfg_NewSevenDay) {
                        be = t.Cfg_NewSevenDay
                    }
                    if (t.Cfg_NewPlayerTask) {
                        var p = t.Cfg_NewPlayerTask.length;
                        for (var n = 0; n < p; n++) {
                            var _ = t.Cfg_NewPlayerTask[n];
                            if (_) {
                                we[_.ID] = _
                            }
                        }
                    }
                    if (t.Cfg_KanJiaLibao) {
                        var p = t.Cfg_KanJiaLibao.length;
                        for (var n = 0; n < p; n++) {
                            var m = t.Cfg_KanJiaLibao[n];
                            if (m) {
                                xe[m.GoodsID] = m
                            }
                        }
                    }
                    if (t.Cfg_SaleGift) {
                        Re = t.Cfg_SaleGift
                    }
                    if (t.Cfg_OnlineReward) {
                        Le = t.Cfg_OnlineReward
                    }
                    if (t.Cfg_ModuleCfg) {
                        Te = t.Cfg_ModuleCfg
                    }
                    if (t.Cfg_RedDraw && t.Cfg_RedPosition) {
                        De = t.Cfg_RedPosition;
                        for (var n = 0; n < De.length; n++) {
                            var v = t.Cfg_RedPosition[n];
                            var y = v.RedDrawID.split("|");
                            var I = [];
                            for (var S = 0; S < y.length; S++) {
                                var C = y[S];
                                for (var b = 0; b < t.Cfg_RedDraw.length; b++) {
                                    var w = t.Cfg_RedDraw[b];
                                    if (w.RedDrawID == C * 1) {
                                        var x = w.Reward.split(":");
                                        I.push({
                                            itemId: x[0] * 1,
                                            itemNum: x[1] * 1
                                        })
                                    }
                                }
                            }
                            I.sort(function(e, t) {
                                if (e.itemNum > t.itemNum) {
                                    return 1
                                } else if (e.itemNum < t.itemNum) {
                                    return - 1
                                } else if (e.itemNum == t.itemNum) {
                                    return 0
                                }
                            });
                            v.Reward = I
                        }
                        console.log(De)
                    }
                    if (t.Cfg_RedPosition) {
                        for (var n = 0; n < t.Cfg_RedPosition.length; n++) {
                            var R = t.Cfg_RedPosition[n];
                            ke[R.RedPosID] = R
                        }
                    }
                    if (t.Cfg_RedDraw) {
                        for (var n = 0; n < t.Cfg_RedDraw.length; n++) {
                            var L = t.Cfg_RedDraw[n];
                            Ge[L.RedDrawID] = L
                        }
                    }
                    if (t.Cfg_UpgradeHint) {
                        for (var n = 0; n < t.Cfg_UpgradeHint.length; n++) {
                            var T = t.Cfg_UpgradeHint[n];
                            Me[T.Type] = T
                        }
                    }
                    if (t.Cfg_ExchangeDHQ) {
                        Ae = t.Cfg_ExchangeDHQ;
                        for (var n = 0; n < t.Cfg_ExchangeDHQ.length; n++) {
                            var D = t.Cfg_ExchangeDHQ[n];
                            Be[D.ExchangeID] = D
                        }
                    }
                }
            }
        },
        getLinkedMul: function(e, t) {
            var i = ae[e];
            var n = 0;
            if (t == 1) {
                n = i["Green_1"]
            } else if (t == 2) {
                n = i["Blue_2"]
            } else if (t == 3) {
                n = i["Yellow_3"]
            } else if (t == 4) {
                n = i["Red_4"]
            } else if (t == 5) {
                n = i["Purple_5"]
            }
            return n / 1e4
        },
        getJewMul: function() {
            return se
        },
        getJewMulBetList: function() {
            if (ne && ne[0]) {
                if (ne[0].DefaultBetNum) {
                    return ne[0].DefaultBetNum.split("|")
                } else {
                    return [1e3]
                }
            }
            return [1e3]
        },
        clear: function() {
            G = {}
        },
        shopMall: function(e) {
            if (e) {
                if (Game.debug) console.log(e);
                n = e;
                for (var t = 0; t < e.length; t++) {
                    var i = e[t];
                    if (i) {
                        s[i.GoodsId] = i
                    }
                }
            }
        },
        ErrorMsg: {
            getMsgById: function(e, t) {
                if (B) {
                    if (t) {
                        var i = Utils.Lang(B[e]);
                        var n = t.split("|");
                        if (i) {
                            for (var s = 0; s < n.length; s++) {
                                i = i.replace("{$" + (s + 1) + "}", Utils.Lang(n[s]))
                            }
                        }
                        return i || "系统错误:[" + e + "]"
                    } else {
                        return B[e] || "系统错误:[" + e + "]"
                    }
                }
                return "系统错误:[" + e + "]"
            },
            clientErrorMsg: function(e, t) {
                if (t) {
                    var i = M[e];
                    var n = t.split("|");
                    if (i) {
                        for (var s = 0; s < n.length; s++) {
                            i = i.replace("{$" + (s + 1) + "}", Utils.Lang(n[s]))
                        }
                    }
                    return i || "系统错误:[" + e + "]"
                } else {
                    if (M) {
                        return M[e] || "not fond error msg!"
                    }
                }
                return "not fond error msg!"
            }
        },
        NoticeMsg: {
            getNoticeMsgById: function(e) {
                if (P) {
                    return P[e] || "not fond notice msg!"
                }
                return "not fond notice msg!"
            }
        },
        Item: {
            getItemInfoById: function(e) {
                if (G) {
                    return G[e] || null
                }
                return null
            },
            getCannonSkins: function() {
                if (X) {
                    return X
                }
                return null
            },
            getWingList: function() {
                return J
            }
        },
        exchange: {
            getLotteryCfg: function() {
                return U
            },
            getScoreCfg: function() {
                return E
            },
            getRedCfg: function() {
                return N
            },
            setLotteryList: function(e) {
                o = [];
                var t = U;
                for (var i = 0; i < t.length; i++) {
                    var n = t[i].ExchangeID;
                    var s = false;
                    for (var a = 0; a < e.length; a++) {
                        var r = e[a].ExchangeId;
                        if (r == n) {
                            s = true
                        }
                    }
                    if (s) {
                        o.push(t[i])
                    }
                }
            },
            setScoreList: function(e) {
                l = [];
                var t = E;
                for (var i = 0; i < t.length; i++) {
                    var n = t[i].ExchangeID;
                    var s = false;
                    for (var a = 0; a < e.length; a++) {
                        var r = e[a].ExchangeId;
                        if (r == n) {
                            s = true
                        }
                    }
                    if (s) {
                        l.push(t[i])
                    }
                }
            },
            setFishScoreList: function(e) {
                i = [];
                for (var t = 0; t < e.length; t++) {
                    e[t].ExchangeID = e[t].ExchangeId
                }
                i = e
            },
            setRedList: function(e) {
                if (e) {
                    _getRedList = [];
                    var t = N;
                    for (var i = 0; i < t.length; i++) {
                        var n = t[i].ExchangeID;
                        var s = false;
                        for (var a = 0; a < e.length; a++) {
                            var r = e[a].ExchangeId;
                            if (r == n) {
                                s = true
                            }
                        }
                        if (s) {
                            _getRedList.push(t[i])
                        }
                    }
                }
            },
            getRedList: function() {
                return _getRedList
            },
            getRedListCfg: function() {
                return N
            },
            getLotteryList: function() {
                return o
            },
            getScoreList: function() {
                return l
            },
            getFishScoreList: function() {
                return i
            },
            getExchangeDHQList: function(e) {
                return Ae
            },
            getExchangeDHQById: function(e) {
                return Be[e]
            }
        },
        shopCity: {
            getCfg: function() {
                if (n) {
                    return n
                }
                return null
            },
            getCfgById: function(e) {
                if (s[e]) {
                    return s[e]
                }
                return null
            }
        },
        fish: {
            getCfgById: function(e) {
                if (A[e]) {
                    return A[e]
                }
                return null
            },
            getFishPokedexCfg: function() {
                if (F) {
                    return F
                }
                return null
            }
        },
        fishtype: {
            getCfgById: function(e) {
                if (O[e]) {
                    return O[e]
                }
                return null
            }
        },
        task: {
            taskCfg: function() {
                if (V) {
                    return V
                }
                return null
            },
            taskWechatCfg: function() {
                if (q) {
                    return q
                }
                return null
            },
            loginGiftCfg: function() {
                if (j) {
                    return j
                }
                return null
            }
        },
        getFreeDrawCfgList: function() {
            return H
        },
        getRandomShareInfo: function(e) {
            if (!e) e = 0;
            var t = Utils.arrayRandomIndex(Y[e]);
            return Y[e][t]
        },
        getRandomShareInfoById: function(e, t) {
            if (!e) e = 0;
            var i = Y[e][Utils.arrayRandomIndex(Y[e])];
            for (var n = 0; n < Y[e].length; n++) {
                var s = Y[e][n];
                if (s.adId == t) {
                    i = s;
                    break
                }
            }
            return i
        },
        getVipCfg: function() {
            return $
        },
        getVipInfoByLevel: function(e) {
            var t = null;
            for (var i = 0; i < $.length; i++) {
                var n = $[i];
                if (e * 1 == n.VipLevel * 1) {
                    t = n;
                    break
                }
            }
            return t
        },
        getVipInfoByMul: function(e) {
            var t = null;
            for (var i = 0; i < $.length; i++) {
                var n = $[i];
                if (e <= n.Max_Mul) {
                    t = n;
                    break
                }
            }
            return t
        },
        getMpGift: function() {
            if (K) {
                return K
            }
            return null
        },
        getDownloadRewordCfg: function() {
            return Q
        },
        getSysCfgByKey: function(e) {
            if (Z[e]) {
                return Z[e]
            } else {
                return null
            }
        },
        getSuperMatchTaskById: function(e) {
            if (ee[e]) {
                return ee[e]
            } else {
                return null
            }
        },
        getNewPlayerTaskById: function(e) {
            if (te[e]) {
                return te[e]
            } else {
                return null
            }
        },
        getRedPackageData: function() {
            if (ie && ie.length > 0) {
                return ie
            } else {
                return null
            }
        },
        getShortcut: function(e) {
            if (!re || re.length <= 0) {
                return ""
            }
            if (!e) {
                return re
            } else {
                var t = "";
                for (var i = 0,
                n = re.length; i < n; i++) {
                    if (e * 1 === re[i].Id * 1) {
                        t = re[i].Desc;
                        break
                    }
                }
                return t
            }
        },
        getCfgSceneFace: function(e) {
            if (!oe) {
                return null
            }
            if (!e) {
                return oe
            } else if (oe[e]) {
                return oe[e]
            } else {
                return null
            }
        },
        getBigRichRank: function() {
            return ye
        },
        getZillionaire: function() {
            return ve
        },
        getBigRichMulBetList: function() {
            if (e && e[0]) {
                if (e[0].DefaultBetNum) {
                    return e[0].DefaultBetNum.split("|")
                } else {
                    return [1e3]
                }
            }
            return [1e3]
        },
        getCfgDNLG: function() {
            if (le) {
                return le
            }
            return null
        },
        getCfgDNLGMul: function(e) {
            if (he && he[e]) {
                return he[e]
            }
            return null
        },
        getCfgDNLGMulArg: function() {
            if (ce) {
                return ce
            }
        },
        getCfgDNLGSkill: function(e) {
            if (ue && ue[e]) {
                return ue[e]
            }
            return null
        },
        getAchTask: function() {
            return fe
        },
        getAchTaskById: function(e) {
            if (e) {
                for (var t = 0; t < fe.length; t++) {
                    var i = fe[t];
                    if (i && i.ID == e) {
                        return i
                    }
                }
            }
            return null
        },
        getAchTaskActive: function() {
            return de
        },
        getDTDBRuleById: function(e) {
            if (ge) {
                return ge[e]
            }
            return null
        },
        getCfgDTDB: function() {
            if (pe) {
                return pe
            }
            return null
        },
        getDTDBDescById: function(e) {
            if (_e[e]) {
                return _e[e]
            }
            return null
        },
        getDTDBTip: function() {
            if (me) {
                return me
            }
            return null
        },
        clientWorldBoss: function() {
            return Ie
        },
        getBossRefresh: function() {
            var e = {};
            if (Se) {
                for (var t = 0; t < Se.length; t++) {
                    var i = Se[t];
                    var n = i.SceneId,
                    s = i.FishIds;
                    if (!e[n]) {
                        e[n] = []
                    }
                    if (s.indexOf("|") > 0) {
                        var a = s.split("|");
                        for (var r = 0; r < a.length; r++) {
                            var o = a[r] * 1;
                            if (o >= 0 && e[n].indexOf(o) < 0) {
                                e[n].push(o)
                            }
                        }
                    } else {
                        var o = s * 1;
                        if (o >= 0 && e[n].indexOf(o) < 0) {
                            e[n].push(o)
                        }
                    }
                }
            }
            return e
        },
        getCreateGuildCost: function() {
            return z.CreateGuildCost
        },
        getGHApplyMaxNum: function() {
            return z.GuildApplyMaxNum
        },
        getDefXuanyan: function() {
            return z.Xuanyan
        },
        getFishTalk: function(e) {
            if (Ce) {
                return Ce[e]
            } else {
                return null
            }
        },
        getNewPlayerGift: function() {
            return be
        },
        getNewNewTask: function() {
            return we
        },
        getNewNewTaskById: function(e) {
            return we[e]
        },
        getKanJiaLibaoById: function(e) {
            return xe[e]
        },
        getTeHuiGift: function() {
            var e = [];
            for (var t = 0; t < Re.length; t++) {
                var i = Re[t];
                if (i.Valid == 1) {
                    if (i.Type == 0 && Player.getFirstGift()) {
                        continue
                    }
                    if (i.Type == 1) {
                        if (Channel && Channel.cfg.cps == Game.ChannelConstants.qtt) {
                            if (!Player.QTTYiYuanGouOpen()) continue;
                            if (Player.getQttFirstGiftOneSG()) {
                                if (Player.QTTYiYuanFuGouOpen() && !Player.getQttFirstGiftOneFG()) {} else {
                                    continue
                                }
                            }
                        } else {
                            if (Player.getFirstGiftOneSG() || !Player.getFirstGiftOne()) {
                                continue
                            }
                        }
                    }
                    if (i.Type == 2) {
                        i.isBuy = !Player.getFXGiftCanBuy()
                    }
                    if (i.Type == 3 && Player.isSpecialGiftCanBuy() == 0) {
                        i.isBuy = true
                    }
                    if (i.Type == 4 && !Player.getKanJiaVisible()) {
                        continue
                    }
                    if (i.Type == 5) {
                        if (!Player.IsCanShowShark()) continue;
                        if (Player.getShakeTimes() <= 0) i.isBuy = true
                    }
                    if (i.Type == 6 && Channel && Channel.cfg.cps != Game.ChannelConstants.qtt && !Game.debug) {
                        continue
                    }
                    if (i.Type == 6 && !Player.CanBuyDoubleEleven()) {
                        continue
                    }
                    e.push(i)
                }
            }
            e.sort(function(e, t) {
                var i = e.SortID;
                var n = t.SortID;
                if (e.isBuy) {
                    i = 100
                }
                if (t.isBuy) {
                    n = 100
                }
                if (n == i) {
                    return e.SortID - t.SortID
                }
                return i - n
            });
            return e
        },
        getOnlineCfg: function() {
            return Le
        },
        getModuleSceneCfg: function(e) {
            var t = [];
            for (var i = 0; i < Te.length; i++) {
                var n = Te[i];
                if (n && n["Mkey"] == e) {
                    t = n["Scene"].split("|");
                    break
                }
            }
            return t
        },
        getCfgRedDraw: function() {
            return Ge
        },
        getCfgRedDrawById: function(e) {
            return Ge[e]
        },
        getCfgRedPosition: function() {
            return ke
        },
        getCfgRedPositionById: function(e) {
            return ke[e]
        },
        getQTTRedPkgCfg: function() {
            return De
        },
        updateRedPkgCfg: function(e) {
            if (e.CfgCosts) {
                var t = e.CfgCosts.length;
                for (var i = 0; i < t; i++) {
                    var n = e.CfgCosts[i];
                    var s = GameConfig.getCfgRedPositionById(n.Id);
                    if (s) {
                        s.CostGold = n.CostGold
                    }
                }
            }
            if (e.CfgCost) {
                var s = GameConfig.getCfgRedPositionById(e.CfgCost.Id);
                if (s) {
                    s.CostGold = e.CfgCost.CostGold
                }
            }
        },
        getUpgradeHintByType: function(e) {
            return Me[e]
        }
    }
} ();
var AddressConfig = function() {
    var e = {
        addressArr: {
            "0_0_0": ["东城区", "西城区", "崇文区", "宣武区", "朝阳区", "丰台区", "石景山区", "海淀区", "门头沟区", "房山区", "通州区", "顺义区", "昌平区", "大兴区", "怀柔区", "平谷区", "密云县", "延庆县", "延庆镇"],
            "0_0": ["北京市"],
            "0_1_0": ["和平区", "河东区", "河西区", "南开区", "河北区", "红桥区", "塘沽区", "汉沽区", "大港区", "东丽区", "西青区", "津南区", "北辰区", "武清区", "宝坻区", "蓟县", "宁河县", "芦台镇", "静海县", "静海镇"],
            "0_1": ["天津市"],
            "0_2_0": ["黄浦区", "卢湾区", "徐汇区", "长宁区", "静安区", "普陀区", "闸北区", "虹口区", "杨浦区", "闵行区", "宝山区", "嘉定区", "浦东新区", "金山区", "松江区", "青浦区", "南汇区", "奉贤区", "崇明县", "城桥镇"],
            "0_2": ["上海市"],
            "0_3_0": ["渝中区", "大渡口区", "江北区", "沙坪坝区", "九龙坡区", "南岸区", "北碚区", "万盛区", "双桥区", "渝北区", "巴南区", "万州区", "涪陵区", "黔江区", "长寿区", "合川市", "永川区市", "江津市", "南川市", "綦江县", "潼南县", "铜梁县", "大足县", "荣昌县", "璧山县", "垫江县", "武隆县", "丰都县", "城口县", "梁平县", "开县", "巫溪县", "巫山县", "奉节县", "云阳县", "忠县", "石柱土家族自治县", "彭水苗族土家族自治县", "酉阳土家族苗族自治县", "秀山土家族苗族自治县"],
            "0_3": ["重庆市"],
            "0_4_0": ["长安区", "桥东区", "桥西区", "新华区", "裕华区", "井陉矿区", "辛集市", "藁城市", "晋州市", "新乐市", "鹿泉市", "井陉县", "微水镇", "正定县", "正定镇", "栾城县", "栾城镇", "行唐县", "龙州镇", "灵寿县", "灵寿镇", "高邑县", "高邑镇", "深泽县", "深泽镇", "赞皇县", "赞皇镇", "无极县", "无极镇", "平山县", "平山镇", "元氏县", "槐阳镇", "赵县", "赵州镇"],
            "0_4_1": ["桥西区", "桥东区", "宣化区", "下花园区", "宣化县", "张家口市宣化区", "张北县", "张北镇", "康保县", "康保镇", "沽源县", "平定堡镇", "尚义县", "南壕堑镇", "蔚县", "蔚州镇", "阳原县", "西城镇", "怀安县", "柴沟堡镇", "万全县", "孔家庄镇", "怀来县", "沙城镇", "涿鹿县", "涿鹿镇", "赤城县", "赤城镇", "崇礼县", "西湾子镇"],
            "0_4_2": ["双桥区", "双滦区", "鹰手营子矿区", "承德县", "下板城镇", "兴隆县", "兴隆镇", "平泉县", "平泉镇", "滦平县", "滦平镇", "隆化县", "隆化镇", "丰宁满族自治县", "大阁镇", "宽城满族自治县", "宽城镇", "围场满族蒙古族自治县", "围场镇"],
            "0_4_3": ["海港区", "山海关区", "北戴河区", "昌黎县", "昌黎镇", "抚宁县", "抚宁镇", "卢龙县", "卢龙镇", "青龙满族自治县", "青龙镇"],
            "0_4_4": ["路北区", "路南区", "古冶区", "开平区", "丰润区", "丰南区", "遵化市", "迁安市", "滦县", "滦州镇", "滦南县", "倴城镇", "乐亭县", "乐亭镇", "迁西县", "兴城镇", "玉田县", "玉田镇", "唐海县", "唐海镇"],
            "0_4_5": ["安次区", "广阳区", "霸州市", "三河市", "固安县", "固安镇", "永清县", "永清镇", "香河县", "淑阳镇", "大城县", "平舒镇", "文安县", "文安镇", "大厂回族自治县", "大厂镇"],
            "0_4_6": ["新市区", "北市区", "南市区", "定州市", "涿州市", "安国市", "高碑店市", "满城县", "满城镇", "清苑县", "清苑镇", "易县", "易州镇", "徐水县", "安肃镇", "涞源县", "涞源镇", "定兴县", "定兴镇", "顺平县", "蒲阳镇", "唐县", "仁厚镇", "望都县", "望都镇", "涞水县", "涞水镇", "高阳县", "高阳镇", "安新县", "安新镇", "雄县", "雄州镇", "容城县", "容城镇", "曲阳县", "恒州镇", "阜平县", "阜平镇", "博野县", "博陵镇", "蠡县", "蠡吾镇"],
            "0_4_7": ["桃城区", "冀州市", "深州市", "枣强县", "枣强镇", "武邑县", "武邑镇", "武强县", "武强镇", "饶阳县", "饶阳镇", "安平县", "安平镇", "故城县", "郑口镇", "景县", "景州镇", "阜城县", "阜城镇"],
            "0_4_8": ["运河区", "新华区", "泊头市", "任丘市", "黄骅市", "河间市", "沧县", "沧州市新华区", "青县", "清州镇", "东光县", "东光镇", "海兴县", "苏基镇", "盐山县", "盐山镇", "肃宁县", "肃宁镇", "南皮县", "南皮镇", "吴桥县", "桑园镇", "献县", "乐寿镇", "孟村回族自治县", "孟村镇"],
            "0_4_9": ["桥东区", "桥西区", "南宫市", "沙河市", "邢台县", "邢台市桥东区", "临城县", "临城镇", "内丘县", "内丘镇", "柏乡县", "柏乡镇", "隆尧县", "隆尧镇", "任县", "任城镇", "南和县", "和阳镇", "宁晋县", "凤凰镇", "巨鹿县", "巨鹿镇", "新河县", "新河镇", "广宗县", "广宗镇", "平乡县", "丰州镇", "威县", "洺州镇", "清河县", "葛仙庄镇", "临西县", "临西镇"],
            "0_4_10": ["丛台区", "邯山区", "复兴区", "峰峰矿区", "武安市", "邯郸县", "南堡乡东小屯村", "临漳县", "临漳镇", "成安县", "成安镇", "大名县", "大名镇", "涉县", "涉城镇", "磁县", "磁州镇", "肥乡县", "肥乡镇", "永年县", "临洺关镇", "邱县", "新马头镇", "鸡泽县", "鸡泽镇", "广平县", "广平镇", "馆陶县", "馆陶镇", "魏县", "魏城镇", "曲周县", "曲周镇"],
            "0_4": ["石家庄市", "张家口市", "承德市", "秦皇岛市", "唐山市", "廊坊市", "保定市", "衡水市", "沧州市", "邢台市", "邯郸市"],
            "0_5_0": ["杏花岭区", "小店区", "迎泽区", "尖草坪区", "万柏林区", "晋源区", "古交市", "清徐县", "清源镇", "阳曲县", "黄寨镇", "娄烦县", "娄烦镇"],
            "0_5_1": ["朔城区", "平鲁区", "山阴县", "岱岳乡", "应县", "金城镇", "右玉县", "新城镇", "怀仁县", "云中镇"],
            "0_5_2": ["城区", "矿区", "南郊区", "新荣区", "阳高县", "龙泉镇", "天镇县", "玉泉镇", "广灵县", "壶泉镇", "灵丘县", "武灵镇", "浑源县", "永安镇", "左云县", "云兴镇", "大同县", "西坪镇"],
            "0_5_3": ["城区", "矿区", "郊区", "平定县", "冠山镇", "盂县", "秀水镇"],
            "0_5_4": ["城区", "郊区", "潞城市", "长治县", "韩店镇", "襄垣县", "古韩镇", "屯留县", "麟绛镇", "平顺县", "青羊镇", "黎城县", "黎侯镇", "壶关县", "龙泉镇", "长子县", "丹朱镇", "武乡县", "丰州镇", "沁县", "定昌镇", "沁源县", "沁河镇"],
            "0_5_5": ["城区", "高平市", "泽州县", "南村镇", "沁水县", "龙港镇", "阳城县", "凤城镇", "陵川县", "崇文镇"],
            "0_5_6": ["忻府区", "原平市", "定襄县", "晋昌镇", "五台县", "台城镇", "代县", "上馆镇", "繁峙县", "繁城镇", "宁武县", "凤凰镇", "静乐县", "鹅城镇", "神池县", "龙泉镇", "五寨县", "砚城镇", "岢岚县", "岚漪镇", "河曲县", "文笔镇", "保德县", "东关镇", "偏关县", "新关镇"],
            "0_5_7": ["榆次区", "介休市", "榆社县", "箕城镇", "左权县", "辽阳镇", "和顺县", "义兴镇", "昔阳县", "乐平镇", "寿阳县", "朝阳镇", "太谷县", "明星镇", "祁县", "昭余镇", "平遥县", "古陶镇", "灵石县", "翠峰镇"],
            "0_5_8": ["尧都区", "侯马市", "霍州市", "曲沃县", "乐昌镇", "翼城县", "唐兴镇", "襄汾县", "新城镇", "洪洞县", "大槐树镇", "古县", "岳阳镇", "安泽县", "府城镇", "浮山县", "天坛镇", "吉县", "吉昌镇", "乡宁县", "昌宁镇", "蒲县", "蒲城镇", "大宁县", "昕水镇", "永和县", "芝河镇", "隰县", "龙泉镇", "汾西县", "永安镇"],
            "0_5_9": ["离石区", "孝义市", "汾阳市", "文水县", "凤城镇", "中阳县", "宁乡镇", "兴县", "蔚汾镇", "临县", "临泉镇", "方山县", "圪洞镇", "柳林县", "柳林镇", "岚县", "东村镇", "交口县", "水头镇", "交城县", "天宁镇", "石楼县", "灵泉镇"],
            "0_5_10": ["盐湖区", "永济市", "河津市", "芮城县", "古魏镇", "临猗县", "猗氏镇", "万荣县", "解店镇", "新绛县", "龙兴镇", "稷山县", "稷峰镇", "闻喜县", "桐城镇", "夏县", "瑶峰镇", "绛县", "古绛镇", "平陆县", "圣人涧镇", "垣曲县", "新城镇"],
            "0_5": ["太原市", "朔州市", "大同市", "阳泉市", "长治市", "晋城市", "忻州市", "晋中市", "临汾市", "吕梁市", "运城市"],
            "0_6_0": ["回民区", "新城区", "玉泉区", "赛罕区", "托克托县", "双河镇", "武川县", "可可以力更镇", "和林格尔县", "清水河县", "土默特左旗", "察素齐镇"],
            "0_6_1": ["昆都仑区", "东河区", "青山区", "石拐区", "白云矿区", "九原区", "固阳县", "金山镇", "土默特右旗", "萨拉齐镇", "达尔罕茂明安联合旗", "百灵庙镇"],
            "0_6_2": ["海勃湾区", "海南区", "乌达区"],
            "0_6_3": ["红山区", "元宝山区", "松山区", "宁城县", "天义镇", "林西县", "林西镇", "阿鲁科尔沁旗", "天山镇", "巴林左旗", "林东镇", "巴林右旗", "大板镇", "克什克腾旗", "经棚镇", "翁牛特旗", "乌丹镇", "喀喇沁旗", "锦山镇", "敖汉旗", "新惠镇"],
            "0_6_4": ["科尔沁区", "霍林郭勒市", "开鲁县", "开鲁镇", "库伦旗", "库伦镇", "奈曼旗", "大沁他拉镇", "扎鲁特旗", "鲁北镇", "科尔沁左翼中旗", "保康镇", "科尔沁左翼后旗", "甘旗卡镇"],
            "0_6_5": ["海拉尔区", "满洲里市", "扎兰屯市", "牙克石市", "根河市", "额尔古纳市", "阿荣旗", "那吉镇", "新巴尔虎右旗", "阿拉坦额莫勒镇", "新巴尔虎左旗", "阿穆古郎镇", "陈巴尔虎旗", "巴彦库仁镇", "鄂伦春自治旗", "阿里河镇", "鄂温克族自治旗", "巴彦托海镇", "莫力达瓦达斡尔族自治旗", "尼尔基镇"],
            "0_6_6": ["东胜区", "达拉特旗", "树林召镇", "准格尔旗", "薛家湾镇", "鄂托克前旗", "敖勒召其镇", "鄂托克旗", "乌兰镇", "杭锦旗", "锡尼镇", "乌审旗", "嘎鲁图镇", "伊金霍洛旗", "阿勒腾席热镇"],
            "0_6_7": ["集宁区", "丰镇市", "卓资县", "卓资山镇", "化德县", "长顺镇", "商都县", "商都镇", "兴和县", "丰镇市", "凉城县", "岱海镇", "察哈尔右翼前旗", "土贵乌拉镇", "察哈尔右翼中旗", "科布尔镇", "察哈尔右翼后旗", "白音察干镇", "四子王旗", "乌兰花镇"],
            "0_6_8": ["临河区", "五原县", "隆兴昌镇", "磴口县", "巴彦高勒镇", "乌拉特前旗", "乌拉山镇", "乌拉特中旗", "海流图镇", "乌拉特后旗", "巴音宝力格镇", "杭锦后旗", "陕坝镇"],
            "0_6_9": ["乌兰浩特市", "阿尔山市", "突泉县", "突泉镇", "科尔沁右翼前旗", "大坝沟镇", "科尔沁右翼中旗", "巴彦呼硕镇", "扎赉特旗", "音德尔镇"],
            "0_6_10": ["锡林浩特市", "二连浩特市", "多伦县", "多伦淖尔镇", "阿巴嘎旗", "别力古台镇", "苏尼特左旗", "满都拉图镇", "苏尼特右旗", "赛汉塔拉镇", "东乌珠穆沁旗", "乌里雅斯太镇", "西乌珠穆沁旗", "巴拉嘎尔郭勒镇", "太仆寺旗", "宝昌镇", "镶黄旗", "新宝拉格镇", "正镶白旗", "明安图镇", "正蓝旗", "上都镇"],
            "0_6_11": ["巴彦浩特镇", "阿拉善右旗", "额肯呼都格镇", "额济纳旗", "达来呼布镇"],
            "0_6": ["呼和浩特市", "包头市", "乌海市", "赤峰市", "通辽市", "呼伦贝尔市", "鄂尔多斯市", "乌兰察布市", "巴彦淖尔市", "兴安盟", "锡林郭勒盟", "阿拉善盟"],
            "0_7_0": ["沈河区", "和平区", "大东区", "皇姑区", "铁西区", "苏家屯区", "东陵区", "新城子区", "于洪区", "新民市", "辽中县", "辽中镇", "康平县", "康平镇", "法库县", "法库镇"],
            "0_7_1": ["双塔区", "龙城区", "北票市", "凌源市", "朝阳县", "朝阳市双塔区", "建平县", "喀喇沁左翼蒙古族自治县", "大城子镇"],
            "0_7_2": ["海州区", "新邱区", "太平区", "清河门区", "细河区", "彰武县", "彰武镇", "阜新蒙古族自治县", "阜新镇"],
            "0_7_3": ["银州区", "清河区", "调兵山市", "开原市", "铁岭县", "铁岭市银州区", "西丰县", "西丰镇", "昌图县", "昌图镇"],
            "0_7_4": ["顺城区", "新抚区", "东洲区", "望花区", "抚顺县", "抚顺市顺城区", "新宾满族自治县", "新宾镇", "清原满族自治县", "清原镇"],
            "0_7_5": ["平山区", "溪湖区", "明山区", "南芬区", "本溪满族自治县", "小市镇", "桓仁满族自治县", "桓仁镇"],
            "0_7_6": ["白塔区", "文圣区", "宏伟区", "弓长岭区", "太子河区", "灯塔市", "辽阳县", "首山镇"],
            "0_7_7": ["铁东区", "铁西区", "立山区", "千山区", "海城市", "台安县", "台安镇", "岫岩满族自治县", "岫岩镇"],
            "0_7_8": ["振兴区", "元宝区", "振安区", "凤城市", "东港市", "宽甸满族自治县", "宽甸镇"],
            "0_7_9": ["西岗区", "中山区", "沙河口区", "甘井子区", "旅顺口区", "金州区", "瓦房店市", "普兰店市", "庄河市", "长海县", "大长山岛镇"],
            "0_7_10": ["站前区", "西市区", "鲅鱼圈区", "老边区", "大石桥市", "盖州市"],
            "0_7_11": ["兴隆台区", "双台子区", "大洼县", "大洼镇", "盘山县", "盘锦市双台子区"],
            "0_7_12": ["太和区", "古塔区", "凌河区", "凌海市", "北宁市", "黑山县", "黑山镇", "义县", "义州镇"],
            "0_7_13": ["龙港区", "连山区", "南票区", "兴城市", "绥中县", "绥中镇", "建昌县", "建昌镇"],
            "0_7": ["沈阳市", "朝阳市", "阜新市", "铁岭市", "抚顺市", "本溪市", "辽阳市", "鞍山市", "丹东市", "大连市", "营口市", "盘锦市", "锦州市", "葫芦岛市"],
            "0_8_0": ["朝阳区", "南关区", "宽城区", "二道区", "绿园区", "双阳区", "德惠市", "九台市", "榆树市", "农安县", "农安镇"],
            "0_8_1": ["洮北区", "大安市", "洮南市", "镇赉县", "镇赉镇", "通榆县", "开通镇"],
            "0_8_2": ["宁江区", "扶余县", "三岔河镇", "长岭县", "长岭镇", "乾安县", "乾安镇", "前郭尔罗斯蒙古族自治县", "前郭镇"],
            "0_8_3": ["船营区", "龙潭区", "昌邑区", "丰满区", "磐石市", "蛟河市", "桦甸市", "舒兰市", "永吉县", "口前镇"],
            "0_8_4": ["铁西区", "铁东区", "双辽市", "公主岭市", "梨树县", "梨树镇", "伊通满族自治县", "伊通镇"],
            "0_8_5": ["龙山区", "西安区", "东丰县", "东丰镇", "东辽县", "白泉镇"],
            "0_8_6": ["东昌区", "二道江区", "梅河口市", "集安市", "通化县", "快大茂镇", "辉南县", "朝阳镇", "柳河县", "柳河镇"],
            "0_8_7": ["八道江区", "临江市", "江源县", "孙家堡子镇", "抚松县", "抚松镇", "靖宇县", "靖宇镇", "长白朝鲜族自治县", "长白镇"],
            "0_8_8": ["延吉市", "图们市", "敦化市", "珲春市", "龙井市", "和龙市", "汪清县", "汪清镇", "安图县", "明月镇"],
            "0_8": ["长春市", "白城市", "松原市", "吉林市", "四平市", "辽源市", "通化市", "白山市", "延边州"],
            "0_9_0": ["松北区", "道里区", "南岗区", "道外区", "香坊区", "动力区", "平房区", "呼兰区", "双城市", "尚志市", "五常市", "阿城市", "依兰县", "依兰镇", "方正县", "方正镇", "宾县", "宾州镇", "巴彦县", "巴彦镇", "木兰县", "木兰镇", "通河县", "通河镇", "延寿县", "延寿镇"],
            "0_9_1": ["建华区", "龙沙区", "铁锋区", "昂昂溪区", "富拉尔基区", "碾子山区", "梅里斯达斡尔族区", "讷河市", "龙江县", "龙江镇", "依安县", "依安镇", "泰来县", "泰来镇", "甘南县", "甘南镇", "富裕县", "富裕镇", "克山县", "克山镇", "克东县", "克东镇", "拜泉县", "拜泉镇"],
            "0_9_2": ["桃山区", "新兴区", "茄子河区", "勃利县", "勃利镇"],
            "0_9_3": ["爱辉区", "北安市", "五大连池市", "嫩江县", "嫩江镇", "逊克县", "边疆镇", "孙吴县", "孙吴镇"],
            "0_9_4": ["萨尔图区", "龙凤区", "让胡路区", "大同区", "红岗区", "肇州县", "肇州镇", "肇源县", "肇源镇", "林甸县", "林甸镇", "杜尔伯特蒙古族自治县", "泰康镇"],
            "0_9_5": ["兴山区", "向阳区", "工农区", "南山区", "兴安区", "东山区", "萝北县", "凤翔镇", "绥滨县", "绥滨镇"],
            "0_9_6": ["伊春区", "南岔区", "友好区", "西林区", "翠峦区", "新青区", "美溪区", "金山屯区", "五营区", "乌马河区", "汤旺河区", "带岭区", "乌伊岭区", "红星区", "上甘岭区", "铁力市", "嘉荫县", "朝阳镇"],
            "0_9_7": ["前进区", "永红区", "向阳区", "东风区", "郊区", "同江市", "富锦市", "桦南县", "桦南镇", "桦川县", "悦来镇", "汤原县", "汤原镇", "抚远县", "抚远镇"],
            "0_9_8": ["尖山区", "岭东区", "四方台区", "宝山区", "集贤县", "福利镇", "友谊县", "友谊镇", "宝清县", "宝清镇", "饶河县", "饶河镇"],
            "0_9_9": ["鸡冠区", "恒山区", "滴道区", "梨树区", "城子河区", "麻山区", "虎林市", "密山市", "鸡东县", "鸡东镇"],
            "0_9_10": ["爱民区", "东安区", "阳明区", "西安区", "穆棱市", "绥芬河市", "海林市", "宁安市", "东宁县", "东宁镇", "林口县", "林口镇"],
            "0_9_11": ["北林区", "安达市", "肇东市", "海伦市", "望奎县", "望奎镇", "兰西县", "兰西镇", "青冈县", "青冈镇", "庆安县", "庆安镇", "明水县", "明水镇", "绥棱县", "绥棱镇"],
            "0_9_12": ["呼玛县", "呼玛镇", "塔河县", "塔河镇", "漠河县", "西林吉镇"],
            "0_9": ["哈尔滨市", "齐齐哈尔市", "七台河市", "黑河市", "大庆市", "鹤岗市", "伊春市", "佳木斯市", "双鸭山市", "鸡西市", "牡丹江市", "绥化市", "大兴安岭地区"],
            "0_10_0": ["玄武区", "白下区", "秦淮区", "建邺区", "鼓楼区", "下关区", "浦口区", "六合区", "栖霞区", "雨花台区", "江宁区", "溧水县", "永阳镇", "高淳县", "淳溪镇"],
            "0_10_1": ["云龙区", "鼓楼区", "九里区", "贾汪区", "泉山区", "邳州市", "新沂市", "铜山县", "铜山镇", "睢宁县", "睢城镇", "沛县", "沛城镇", "丰县", "凤城镇"],
            "0_10_2": ["新浦区", "连云区", "海州区", "赣榆县", "青口镇", "灌云县", "伊山镇", "东海县", "牛山镇", "灌南县", "新安镇"],
            "0_10_3": ["宿城区", "宿豫区", "沭阳县", "沭城镇", "泗阳县", "众兴镇", "泗洪县", "青阳镇"],
            "0_10_4": ["清河区", "清浦区", "楚州区", "淮阴区", "金湖县", "黎城镇", "盱眙县", "盱城镇", "洪泽县", "高良涧镇", "涟水县", "涟城镇"],
            "0_10_5": ["亭湖区", "盐都区", "东台市", "大丰市", "射阳县", "合德镇", "阜宁县", "阜城镇", "滨海县", "东坎镇", "响水县", "响水镇", "建湖县", "近湖镇"],
            "0_10_6": ["维扬区", "广陵区", "邗江区", "仪征市", "江都市", "高邮市", "宝应县", "安宜镇"],
            "0_10_7": ["海陵区", "高港区", "靖江市", "泰兴市", "姜堰市", "兴化市"],
            "0_10_8": ["崇川区", "港闸区", "海门市", "启东市", "通州市", "如皋市", "如东县", "掘港镇", "海安县", "海安镇"],
            "0_10_9": ["京口区", "润州区", "丹徒区", "扬中市", "丹阳市", "句容市"],
            "0_10_10": ["钟楼区", "天宁区", "戚墅堰区", "新北区", "武进区", "金坛市", "溧阳市"],
            "0_10_11": ["崇安区", "南长区", "北塘区", "滨湖区", "惠山区", "锡山区", "江阴市", "宜兴市"],
            "0_10_12": ["金阊区", "沧浪区", "平江区", "虎丘区", "吴中区", "相城区", "吴江市", "昆山市", "太仓市", "常熟市", "张家港市"],
            "0_10": ["南京市", "徐州市", "连云港市", "宿迁市", "淮安市", "盐城市", "扬州市", "泰州市", "南通市", "镇江市", "常州市", "无锡市", "苏州市"],
            "0_11_0": ["拱墅区", "上城区", "下城区", "江干区", "西湖区", "滨江区", "余杭区", "萧山区", "临安市", "富阳市", "建德市", "桐庐县", "淳安县", "千岛湖镇"],
            "0_11_1": ["吴兴区", "南浔区", "长兴县", "雉城镇", "德清县", "武康镇", "安吉县", "递铺镇"],
            "0_11_2": ["南湖区", "秀洲区", "平湖市", "海宁市", "桐乡市", "嘉善县", "魏塘镇", "海盐县", "武原镇"],
            "0_11_3": ["定海区", "普陀区", "岱山县", "高亭镇", "嵊泗县", "菜园镇"],
            "0_11_4": ["海曙区", "江东区", "江北区", "北仑区", "镇海区", "鄞州区", "慈溪市", "余姚市", "奉化市", "宁海县", "象山县"],
            "0_11_5": ["越城区", "诸暨市", "上虞市", "嵊州市", "绍兴县", "新昌县"],
            "0_11_6": ["柯城区", "衢江区", "江山市", "常山县", "天马镇", "开化县", "龙游县"],
            "0_11_7": ["婺城区", "金东区", "兰溪市", "永康市", "义乌市", "东阳市", "武义县", "浦江县", "磐安县", "安文镇"],
            "0_11_8": ["椒江区", "黄岩区", "路桥区", "临海市", "温岭市", "三门县", "海游镇", "天台县", "仙居县", "玉环县", "珠港镇"],
            "0_11_9": ["鹿城区", "龙湾区", "瓯海区", "瑞安市", "乐清市", "永嘉县", "上塘镇", "文成县", "大峃镇", "平阳县", "昆阳镇", "泰顺县", "罗阳镇", "洞头县", "北岙镇", "苍南县", "灵溪镇"],
            "0_11_10": ["莲都区", "龙泉市", "缙云县", "五云镇", "青田县", "鹤城镇", "云和县", "云和镇", "遂昌县", "妙高镇", "松阳县", "西屏镇", "庆元县", "松源镇", "景宁畲族自治县", "鹤溪镇"],
            "0_11": ["杭州市", "湖州市", "嘉兴市", "舟山市", "宁波市", "绍兴市", "衢州市", "金华市", "台州市", "温州市", "丽水市"],
            "0_12_0": ["庐阳区", "瑶海区", "蜀山区", "包河区", "长丰县", "水湖镇", "肥东县", "店埠镇", "肥西县", "上派镇"],
            "0_12_1": ["埇桥区", "砀山县", "砀城镇", "萧县", "龙城镇", "灵璧县", "灵城镇", "泗县", "泗城镇"],
            "0_12_2": ["相山区", "杜集区", "烈山区", "濉溪县", "濉溪镇"],
            "0_12_3": ["谯城区", "涡阳县", "蒙城县", "利辛县"],
            "0_12_4": ["颍州区", "颍东区", "颍泉区", "界首市", "临泉县", "太和县", "阜南县", "界首市", "颍上县", "慎城镇"],
            "0_12_5": ["蚌山区", "龙子湖区", "禹会区", "淮上区", "怀远县", "五河县", "固镇县"],
            "0_12_6": ["田家庵区", "大通区", "谢家集区", "八公山区", "潘集区", "凤台县"],
            "0_12_7": ["琅区", "南谯区", "明光市", "天长市", "来安县", "新安镇", "全椒县", "襄河镇", "定远县", "定城镇", "凤阳县", "府城镇"],
            "0_12_8": ["雨山区", "花山区", "金家庄区", "当涂县", "姑孰镇"],
            "0_12_9": ["镜湖区", "弋江区", "三山区", "鸠江区", "芜湖县", "湾镇", "繁昌县", "繁阳镇", "南陵县", "籍山镇"],
            "0_12_10": ["铜官山区", "狮子山区", "郊区", "铜陵县", "五松镇"],
            "0_12_11": ["迎江区", "大观区", "宜秀区", "桐城市", "怀宁县", "高河镇", "枞阳县", "枞阳镇", "潜山县", "梅城镇", "太湖县", "晋熙镇", "宿松县", "孚玉镇", "望江县", "雷阳镇", "岳西县", "天堂镇"],
            "0_12_12": ["屯溪区", "黄山区", "徽州区", "歙县", "徽城镇", "休宁县", "海阳镇", "黟县", "碧阳镇", "祁门县", "祁山镇"],
            "0_12_13": ["金安区", "裕安区", "寿县", "寿春镇", "霍邱县", "舒城县", "金寨县", "梅山镇", "霍山县", "衡山镇"],
            "0_12_14": ["居巢区", "庐江县", "庐城镇", "无为县", "无城镇", "含山县", "环峰镇", "和县", "历阳镇"],
            "0_12_15": ["贵池区", "东至县", "尧渡镇", "石台县", "七里镇", "青阳县", "蓉城镇"],
            "0_12_16": ["宣州区", "宁国市", "郎溪县", "建平镇", "广德县", "桃州镇", "泾县", "泾川镇", "旌德县", "旌阳镇", "绩溪县", "华阳镇"],
            "0_12": ["合肥市", "宿州市", "淮北市", "亳州市", "阜阳市", "蚌埠市", "淮南市", "滁州市", "马鞍山市", "芜湖市", "铜陵市", "安庆市", "黄山市", "六安市", "巢湖市", "池州市", "宣城市"],
            "0_13_0": ["鼓楼区", "台江区", "仓山区", "马尾区", "晋安区", "福清市", "长乐市", "闽侯县", "连江县", "凤城镇", "罗源县", "凤山镇", "闽清县", "梅城镇", "永泰县", "樟城镇", "平潭县", "潭城镇"],
            "0_13_1": ["延平区", "邵武市", "武夷山市", "建瓯市", "建阳市", "顺昌县", "浦城县", "光泽县", "杭川镇", "松溪县", "松源镇", "政和县", "熊山镇"],
            "0_13_2": ["城厢区", "涵江区", "荔城区", "秀屿区", "仙游县"],
            "0_13_3": ["梅列区", "三元区", "永安市", "明溪县", "雪峰镇", "清流县", "龙津镇", "宁化县", "翠江镇", "大田县", "均溪镇", "尤溪县", "永安市", "沙县", "将乐县", "古镛镇", "泰宁县", "杉城镇", "建宁县", "濉城镇"],
            "0_13_4": ["鲤城区", "丰泽区", "洛江区", "泉港区", "石狮市", "晋江市", "南安市", "惠安县", "螺城镇", "安溪县", "凤城镇", "永春县", "桃城镇", "德化县", "浔中镇", "金门县", "☆"],
            "0_13_5": ["思明区", "海沧区", "湖里区", "集美区", "同安区", "翔安区"],
            "0_13_6": ["芗城区", "龙文区", "龙海市", "云霄县", "云陵镇", "漳浦县", "绥安镇", "诏安县", "南诏镇", "长泰县", "武安镇", "东山县", "西埔镇", "南靖县", "山城镇", "平和县", "小溪镇", "华安县", "华丰镇"],
            "0_13_7": ["新罗区", "漳平市", "长汀县", "汀州镇", "永定县", "凤城镇", "上杭县", "临江镇", "武平县", "平川镇", "连城县", "莲峰镇"],
            "0_13_8": ["蕉城区", "福安市", "福鼎市", "寿宁县", "鳌阳镇", "霞浦县", "柘荣县", "双城镇", "屏南县", "古峰镇", "古田县", "周宁县", "狮城镇"],
            "0_13": ["福州市", "南平市", "莆田市", "三明市", "泉州市", "厦门市", "漳州市", "龙岩市", "宁德市"],
            "0_14_0": ["东湖区", "西湖区", "青云谱区", "湾里区", "青山湖区", "南昌县", "莲塘镇", "新建县", "长堎镇", "安义县", "龙津镇", "进贤县", "民和镇"],
            "0_14_1": ["浔阳区", "庐山区", "瑞昌市", "九江县", "沙河街镇", "武宁县", "新宁镇", "修水县", "义宁镇", "永修县", "涂埠镇", "德安县", "蒲亭镇", "星子县", "南康镇", "都昌县", "都昌镇", "湖口县", "双钟镇", "彭泽县", "龙城镇"],
            "0_14_2": ["珠山区", "昌江区", "乐平市", "浮梁县", "浮梁镇"],
            "0_14_3": ["月湖区", "贵溪市", "余江县", "邓埠镇"],
            "0_14_4": ["渝水区", "分宜县", "分宜镇"],
            "0_14_5": ["安源区", "湘东区", "莲花县", "琴亭镇", "上栗县", "上栗镇", "芦溪县", "芦溪镇"],
            "0_14_6": ["章贡区", "瑞金市", "南康市", "赣县", "梅林镇", "信丰县", "嘉定镇", "大余县", "南安镇", "上犹县", "东山镇", "崇义县", "横水镇", "安远县", "欣山镇", "龙南县", "龙南镇", "定南县", "历市镇", "全南县", "城厢镇", "宁都县", "梅江镇", "于都县", "贡江镇", "兴国县", "潋江镇", "会昌县", "文武坝镇", "寻乌县", "长宁镇", "石城县", "琴江镇"],
            "0_14_7": ["信州区", "德兴市", "上饶县", "旭日镇", "广丰县", "永丰镇", "玉山县", "冰溪镇", "铅山县", "河口镇", "横峰县", "岑阳镇", "弋阳县", "弋江镇", "余干县", "玉亭镇", "鄱阳县", "鄱阳镇", "万年县", "陈营镇", "婺源县", "紫阳镇"],
            "0_14_8": ["临川区", "南城县", "建昌镇", "黎川县", "日峰镇", "南丰县", "琴城镇", "崇仁县", "巴山镇", "乐安县", "鳌溪镇", "宜黄县", "凤冈镇", "金溪县", "秀谷镇", "资溪县", "鹤城镇", "东乡县", "孝岗镇", "广昌县", "旴江镇"],
            "0_14_9": ["袁州区", "丰城市", "樟树市", "高安市", "奉新县", "冯川镇", "万载县", "上高县", "宜丰县", "新昌镇", "靖安县", "双溪镇", "铜鼓县", "永宁镇"],
            "0_14_10": ["吉州区", "青原区", "井冈山市", "厦坪镇", "吉安县", "敦厚镇", "吉水县", "文峰镇", "峡江县", "水边镇", "新干县", "金川镇", "永丰县", "恩江镇", "泰和县", "澄江镇", "遂川县", "泉江镇", "万安县", "芙蓉镇", "安福县", "平都镇", "永新县", "禾川镇"],
            "0_14": ["南昌市", "九江市", "景德镇市", "鹰潭市", "新余市", "萍乡市", "赣州市", "上饶市", "抚州市", "宜春市", "吉安市"],
            "0_15_0": ["市中区", "历下区", "槐荫区", "天桥区", "历城区", "长清区", "章丘市", "平阴县", "平阴镇", "济阳县", "济阳镇", "商河县"],
            "0_15_1": ["市南区", "市北区", "四方区", "黄岛区", "崂山区", "城阳区", "李沧区", "胶州市", "即墨市", "平度市", "胶南市", "莱西市"],
            "0_15_2": ["东昌府区", "临清市", "阳谷县", "莘县", "茌平县", "东阿县", "冠县", "冠城镇", "高唐县"],
            "0_15_3": ["德城区", "乐陵市", "禹城市", "陵县", "陵城镇", "平原县", "夏津县", "夏津镇", "武城县", "武城镇", "齐河县", "晏城镇", "临邑县", "宁津县", "宁津镇", "庆云县", "庆云镇"],
            "0_15_4": ["东营区", "河口区", "垦利县", "垦利镇", "利津县", "利津镇", "广饶县", "广饶镇"],
            "0_15_5": ["张店区", "淄川区", "博山区", "临淄区", "周村区", "桓台县", "索镇", "高青县", "田镇", "沂源县", "南麻镇"],
            "0_15_6": ["潍城区", "寒亭区", "坊子区", "奎文区", "安丘市", "昌邑市", "高密市", "青州市", "诸城市", "寿光市", "临朐县", "昌乐县"],
            "0_15_7": ["莱山区", "芝罘区", "福山区", "牟平区", "栖霞市", "海阳市", "龙口市", "莱阳市", "莱州市", "蓬莱市", "招远市", "长岛县", "南长山镇"],
            "0_15_8": ["环翠区", "荣成市", "乳山市", "文登市"],
            "0_15_9": ["东港区", "岚山区", "五莲县", "洪凝镇", "莒县", "城阳镇"],
            "0_15_10": ["兰山区", "罗庄区", "河东区", "郯城县", "郯城镇", "苍山县", "卞庄镇", "莒南县", "十字路镇", "沂水县", "沂水镇", "蒙阴县", "蒙阴镇", "平邑县", "平邑镇", "费县", "费城镇", "沂南县", "界湖镇", "临沭县", "临沭镇"],
            "0_15_11": ["薛城区", "市中区", "峄城区", "台儿庄区", "山亭区", "滕州市"],
            "0_15_12": ["市中区", "任城区", "曲阜市", "兖州市", "邹城市", "微山县", "鱼台县", "谷亭镇", "金乡县", "金乡镇", "嘉祥县", "嘉祥镇", "汶上县", "汶上镇", "泗水县", "梁山县", "梁山镇"],
            "0_15_13": ["泰山区", "岱岳区", "新泰市", "肥城市", "宁阳县", "宁阳镇", "东平县", "东平镇"],
            "0_15_14": ["莱城区", "钢城区"],
            "0_15_15": ["滨城区", "惠民县", "惠民镇", "阳信县", "阳信镇", "无棣县", "无棣镇", "沾化县", "富国镇", "博兴县", "博兴镇", "邹平县"],
            "0_15_16": ["牡丹区", "曹县", "曹城镇", "定陶县", "定陶镇", "成武县", "成武镇", "单县", "单城镇", "巨野县", "巨野镇", "郓城县", "郓城镇", "鄄城县", "鄄城镇", "东明县"],
            "0_15": ["济南市", "青岛市", "聊城市", "德州市", "东营市", "淄博市", "潍坊市", "烟台市", "威海市", "日照市", "临沂市", "枣庄市", "济宁市", "泰安市", "莱芜市", "滨州市", "菏泽市"],
            "0_16_0": ["中原区", "二七区", "管城回族区", "金水区", "上街区", "惠济区", "新郑市", "登封市", "新密市", "巩义市", "荥阳市", "中牟县"],
            "0_16_1": ["鼓楼区", "龙亭区", "顺河回族区", "禹王台区", "金明区", "杞县", "通许县", "尉氏县", "开封县", "兰考县"],
            "0_16_2": ["湖滨区", "义马市", "灵宝市", "渑池县", "陕县", "大营镇", "卢氏县"],
            "0_16_3": ["西工区", "老城区", "瀍河回族区", "涧西区", "吉利区", "洛龙区", "偃师市", "孟津县", "新安县", "栾川县", "嵩县", "汝阳县", "宜阳县", "洛宁县", "伊川县", "偃师市"],
            "0_16_4": ["解放区", "山阳区", "中站区", "马村区", "孟州市", "沁阳市", "修武县", "博爱县", "清化镇", "武陟县", "木城镇", "温县", "温泉镇"],
            "0_16_5": ["卫滨区", "红旗区", "凤泉区", "牧野区", "卫辉市", "辉县市", "新乡县", "新乡市红旗区", "获嘉县", "原阳县", "延津县", "封丘县", "长垣县"],
            "0_16_6": ["淇滨区", "山城区", "鹤山区", "浚县", "淇县", "朝歌镇"],
            "0_16_7": ["北关区", "文峰区", "殷都区", "龙安区", "林州市", "安阳县", "安阳市北关区", "汤阴县", "林州市", "滑县", "道口镇", "内黄县"],
            "0_16_8": ["华龙区", "清丰县", "南乐县", "范县", "台前县", "濮阳县"],
            "0_16_9": ["梁园区", "睢阳区", "永城市", "虞城县", "民权县", "宁陵县", "睢县", "夏邑县", "柘城县"],
            "0_16_10": ["魏都区", "禹州市", "长葛市", "许昌县", "许昌市魏都区", "鄢陵县", "安陵镇", "襄城县"],
            "0_16_11": ["源汇区", "郾城区", "召陵区", "舞阳县", "舞泉镇", "临颍县"],
            "0_16_12": ["新华区", "卫东区", "湛河区", "石龙区", "舞钢市", "汝州市", "宝丰县", "叶县", "昆阳镇", "鲁山县", "鲁阳镇", "郏县"],
            "0_16_13": ["卧龙区", "宛城区", "邓州市", "南召县", "方城县", "西峡县", "镇平县", "内乡县", "淅川县", "社旗县", "赊店镇", "唐河县", "新野县", "桐柏县"],
            "0_16_14": ["河区", "平桥区", "息县", "浉河区", "淮滨县", "平桥区", "潢川县", "光山县", "固始县", "商城县", "罗山县", "新县", "新集镇"],
            "0_16_15": ["川汇区", "项城市", "扶沟县", "西华县", "商水县", "太康县", "鹿邑县", "郸城县", "淮阳县", "沈丘县", "槐店镇"],
            "0_16_16": ["驿城区", "确山县", "盘龙镇", "泌阳县", "泌水镇", "遂平县", "灈阳镇", "西平县", "上蔡县", "蔡都镇", "汝南县", "汝宁镇", "平舆县", "古槐镇", "新蔡县", "古吕镇", "正阳县", "真阳镇"],
            "0_16": ["郑州市", "开封市", "三门峡市", "洛阳市", "焦作市", "新乡市", "鹤壁市", "安阳市", "濮阳市", "商丘市", "许昌市", "漯河市", "平顶山市", "南阳市", "信阳市", "周口市", "驻马店市"],
            "0_17_0": ["江岸区", "江汉区", "硚口区", "汉阳区", "武昌区", "青山区", "洪山区", "东西湖区", "汉南区", "蔡甸区", "江夏区", "黄陂区", "新洲区"],
            "0_17_1": ["张湾区", "茅箭区", "丹江口市", "郧县", "竹山县", "房县", "郧西县", "竹溪县"],
            "0_17_2": ["襄城区", "樊城区", "襄阳区", "老河口市", "枣阳市", "宜城市", "南漳县", "谷城县", "保康县"],
            "0_17_3": ["东宝区", "掇刀区", "钟祥市", "沙洋县", "沙洋镇", "京山县", "新市镇"],
            "0_17_4": ["孝南区", "应城市", "安陆市", "汉川市", "孝昌县", "花园镇", "大悟县", "云梦县"],
            "0_17_5": ["黄州区", "麻城市", "武穴市", "红安县", "罗田县", "凤山镇", "英山县", "温泉镇", "浠水县", "清泉镇", "蕲春县", "漕河镇", "黄梅县", "黄梅镇", "团风县", "团风镇"],
            "0_17_6": ["鄂城区", "梁子湖区", "华容区"],
            "0_17_7": ["黄石港区", "西塞山区", "下陆区", "铁山区", "大冶市", "阳新县", "兴国镇"],
            "0_17_8": ["咸安区", "赤壁市", "嘉鱼县", "鱼岳镇", "通城县", "隽水镇", "崇阳县", "天城镇", "通山县", "通羊镇"],
            "0_17_9": ["沙市区", "荆州区", "石首市", "洪湖市", "松滋市", "江陵县", "郝穴镇", "公安县", "斗湖堤镇", "监利县", "容城镇"],
            "0_17_10": ["西陵区", "伍家岗区", "点军区", "猇亭区", "夷陵区", "枝江市", "宜都市", "当阳市", "远安县", "鸣凤镇", "兴山县", "古夫镇", "秭归县", "茅坪镇", "长阳土家族自治县", "龙舟坪镇", "五峰土家族自治县", "五峰镇"],
            "0_17_11": ["曾都区", "广水市"],
            "0_17_12": ["仙桃市", "天门市", "潜江市", "神农架林区", "松柏镇"],
            "0_17_13": ["恩施市", "利川市", "建始县", "业州镇", "巴东县", "信陵镇", "宣恩县", "珠山镇", "咸丰县", "高乐山镇", "来凤县", "翔凤镇", "鹤峰县", "容美镇"],
            "0_17": ["武汉市", "十堰市", "襄樊市", "荆门市", "孝感市", "黄冈市", "鄂州市", "黄石市", "咸宁市", "荆州市", "宜昌市", "随州市", "省直辖县级行政单位", "恩施州"],
            "0_18_0": ["岳麓区", "芙蓉区", "天心区", "开福区", "雨花区", "浏阳市", "长沙县", "望城县", "宁乡县"],
            "0_18_1": ["永定区", "武陵源区", "慈利县", "零阳镇", "桑植县", "澧源镇"],
            "0_18_2": ["武陵区", "鼎城区", "津市市", "安乡县", "汉寿县", "龙阳镇", "澧县", "澧阳镇", "临澧县", "安福镇", "桃源县", "漳江镇", "石门县", "楚江镇"],
            "0_18_3": ["赫山区", "资阳区", "沅江市", "南县", "南洲镇", "桃江县", "桃花江镇", "安化县", "东坪镇"],
            "0_18_4": ["岳阳楼区", "君山区", "云溪区", "汨罗市", "临湘市", "岳阳县", "荣家湾镇", "华容县", "湘阴县", "文星镇", "平江县", "汉昌镇"],
            "0_18_5": ["天元区", "荷塘区", "芦淞区", "石峰区", "醴陵市", "株洲县", "渌口镇", "攸县", "茶陵县", "炎陵县", "霞阳镇"],
            "0_18_6": ["岳塘区", "雨湖区", "湘乡市", "韶山市", "湘潭县", "易俗河镇"],
            "0_18_7": ["雁峰区", "珠晖区", "石鼓区", "蒸湘区", "南岳区", "常宁市", "耒阳市", "衡阳县", "西渡镇", "衡南县", "云集镇", "衡山县", "开云镇", "衡东县", "祁东县", "洪桥镇"],
            "0_18_8": ["北湖区", "苏仙区", "资兴市", "桂阳县", "永兴县", "宜章县", "嘉禾县", "临武县", "汝城县", "桂东县", "安仁县"],
            "0_18_9": ["冷水滩区", "零陵区", "东安县", "白牙市镇", "道县", "道江镇", "宁远县", "舜陵镇", "江永县", "潇浦镇", "蓝山县", "塔峰镇", "新田县", "龙泉镇", "双牌县", "泷泊镇", "祁阳县", "浯溪镇", "江华瑶族自治县", "沱江镇"],
            "0_18_10": ["双清区", "大祥区", "北塔区", "武冈市", "邵东县", "两市镇", "邵阳县", "塘渡口镇", "新邵县", "酿溪镇", "隆回县", "桃洪镇", "洞口县", "洞口镇", "绥宁县", "长铺镇", "新宁县", "金石镇", "城步苗族自治县", "儒林镇"],
            "0_18_11": ["鹤城区", "洪江市", "沅陵县", "沅陵镇", "辰溪县", "辰阳镇", "溆浦县", "卢峰镇", "中方县", "中方镇", "会同县", "林城镇", "麻阳苗族自治县", "高村镇", "新晃侗族自治县", "新晃镇", "芷江侗族自治县", "芷江镇", "靖州苗族侗族自治县", "渠阳镇", "通道侗族自治县", "双江镇"],
            "0_18_12": ["娄星区", "冷水江市", "涟源市", "双峰县", "永丰镇", "新化县", "上梅镇"],
            "0_18_13": ["吉首市", "泸溪县", "白沙镇", "凤凰县", "沱江镇", "花垣县", "花垣镇", "保靖县", "迁陵镇", "古丈县", "古阳镇", "永顺县", "灵溪镇", "龙山县"],
            "0_18": ["长沙市", "张家界市", "常德市", "益阳市", "岳阳市", "株洲市", "湘潭市", "衡阳市", "郴州市", "永州市", "邵阳市", "怀化市", "娄底市", "湘西州"],
            "0_19_0": ["越秀区", "荔湾区", "海珠区", "天河区", "白云区", "黄埔区", "番禺区", "花都区", "南沙区", "萝岗区", "增城市", "从化市"],
            "0_19_1": ["福田区", "罗湖区", "南山区", "宝安区", "龙岗区", "盐田区"],
            "0_19_2": ["清城区", "英德市", "连州市", "佛冈县", "石角镇", "阳山县", "阳城镇", "清新县", "太和镇", "连山壮族瑶族自治县", "吉田镇", "连南瑶族自治县", "三江镇"],
            "0_19_3": ["浈江区", "武江区", "曲江区", "乐昌市", "南雄市", "始兴县", "太平镇", "仁化县", "仁化镇", "翁源县", "龙仙镇", "新丰县", "乳源瑶族自治县", "乳城镇"],
            "0_19_4": ["源城区", "紫金县", "紫城镇", "龙川县", "老隆镇", "连平县", "元善镇", "和平县", "阳明镇", "东源县", "仙塘镇"],
            "0_19_5": ["梅江区", "兴宁市", "梅县", "程江镇", "大埔县", "湖寮镇", "丰顺县", "汤坑镇", "五华县", "水寨镇", "平远县", "大柘镇", "蕉岭县", "蕉城镇"],
            "0_19_6": ["湘桥区", "潮安县", "庵埠镇", "饶平县", "黄冈镇"],
            "0_19_7": ["金平区", "濠江区", "龙湖区", "潮阳区", "潮南区", "澄海区", "南澳县", "后宅镇"],
            "0_19_8": ["榕城区", "普宁市", "揭东县", "曲溪镇", "揭西县", "河婆镇", "惠来县", "惠城镇"],
            "0_19_9": ["城区", "陆丰市", "海丰县", "海城镇", "陆河县", "河田镇"],
            "0_19_10": ["惠城区", "惠阳区", "博罗县", "罗阳镇", "惠东县", "龙门县"],
            "0_19_12": ["香洲区", "斗门区", "金湾区"],
            "0_19_14": ["江海区", "蓬江区", "新会区", "恩平市", "台山市", "开平市", "鹤山市"],
            "0_19_15": ["禅城区", "南海区", "顺德区", "三水区", "高明区"],
            "0_19_16": ["端州区", "鼎湖区", "高要市", "四会市", "广宁县", "南街镇", "怀集县", "怀城镇", "封开县", "江口镇", "德庆县"],
            "0_19_17": ["云城区", "罗定市", "云安县", "六都镇", "新兴县", "新城镇", "郁南县", "都城镇"],
            "0_19_18": ["江城区", "阳春市", "阳西县", "织镇", "阳东县", "东城镇"],
            "0_19_19": ["茂南区", "茂港区", "化州市", "信宜市", "高州市", "电白县", "水东镇"],
            "0_19_20": ["赤坎区", "霞山区", "坡头区", "麻章区", "吴川市", "廉江市", "雷州市", "遂溪县", "遂城镇", "徐闻县", "撤销广州市东山区", "芳村区", "设立广州市南沙区", "萝岗区"],
            "0_19": ["广州市", "深圳市", "清远市", "韶关市", "河源市", "梅州市", "潮州市", "汕头市", "揭阳市", "汕尾市", "惠州市", "东莞市", "珠海市", "中山市", "江门市", "佛山市", "肇庆市", "云浮市", "阳江市", "茂名市", "湛江市"],
            "0_20_0": ["青秀区", "兴宁区", "江南区", "西乡塘区", "良庆区", "邕宁区", "武鸣县", "横县", "宾阳县", "上林县", "隆安县", "马山县"],
            "0_20_1": ["象山区", "叠彩区", "秀峰区", "七星区", "雁山区", "阳朔县", "阳朔镇", "临桂县", "临桂镇", "灵川县", "灵川镇", "全州县", "全州镇", "兴安县", "兴安镇", "永福县", "永福镇", "灌阳县", "灌阳镇", "资源县", "资源镇", "平乐县", "平乐镇", "荔浦县", "荔城镇", "龙胜各族自治县", "龙胜镇", "恭城瑶族自治县", "恭城镇"],
            "0_20_2": ["城中区", "鱼峰区", "柳南区", "柳北区", "柳江县", "拉堡镇", "柳城县", "大埔镇", "鹿寨县", "鹿寨镇", "融安县", "长安镇", "三江侗族自治县", "古宜镇", "融水苗族自治县", "融水镇"],
            "0_20_3": ["万秀区", "蝶山区", "长洲区", "岑溪市", "苍梧县", "龙圩镇", "藤县", "藤州镇", "蒙山县", "蒙山镇"],
            "0_20_4": ["港北区", "港南区", "覃塘区", "桂平市", "平南县", "平南镇"],
            "0_20_5": ["玉州区", "北流市", "兴业县", "石南镇", "容县", "容州镇", "陆川县", "陆城镇", "博白县", "博白镇"],
            "0_20_6": ["钦南区", "钦北区", "灵山县", "灵城镇", "浦北县", "小江镇"],
            "0_20_7": ["海城区", "银海区", "铁山港区", "合浦县", "廉州镇"],
            "0_20_8": ["港口区", "防城区", "东兴市", "上思县", "思阳镇"],
            "0_20_9": ["江州区", "凭祥市", "扶绥县", "新宁镇", "大新县", "桃城镇", "天等县", "天等镇", "宁明县", "城中镇", "龙州县", "龙州镇"],
            "0_20_10": ["右江区", "田阳县", "田州镇", "田东县", "平马镇", "平果县", "马头镇", "德保县", "西林县", "靖西县", "新靖镇", "那坡县", "城厢镇", "凌云县", "泗城镇", "乐业县", "同乐镇", "八达镇", "田林县", "乐里镇", "隆林各族自治县", "新州镇"],
            "0_20_11": ["金城江区", "宜州市", "南丹县", "天峨县", "六排镇", "凤山县", "凤城镇", "东兰县", "东兰镇", "巴马瑶族自治县", "巴马镇", "都安瑶族自治县", "安阳镇", "大化瑶族自治县", "大化镇", "罗城仫佬族自治县", "东门镇", "环江毛南族自治县", "思恩镇"],
            "0_20_12": ["兴宾区", "合山市", "象州县", "象州镇", "武宣县", "武宣镇", "忻城县", "金秀瑶族自治县", "金秀镇"],
            "0_20_13": ["八步区", "昭平县", "昭平镇", "钟山县", "钟山镇", "富川瑶族自治县", "富阳镇"],
            "0_20": ["南宁市", "桂林市", "柳州市", "梧州市", "贵港市", "玉林市", "钦州市", "北海市", "防城港市", "崇左市", "百色市", "河池市", "来宾市", "贺州市"],
            "0_21_0": ["龙华区", "秀英区", "琼山区", "美兰区"],
            "0_21_2": ["文昌市", "琼海市", "万宁市", "五指山市", "东方市", "儋州市", "临高县", "临城镇", "澄迈县", "金江镇", "定安县", "定城镇", "屯昌县", "屯城镇", "昌江黎族自治县", "石碌镇", "白沙黎族自治县", "牙叉镇", "琼中黎族苗族自治县", "营根镇", "陵水黎族自治县", "椰林镇", "保亭黎族苗族自治县", "保城镇", "乐东黎族自治县", "抱由镇"],
            "0_21": ["海口市", "三亚市", "省直辖行政单位"],
            "0_22_0": ["青羊区", "锦江区", "金牛区", "武侯区", "成华区", "龙泉驿区", "青白江区", "新都区", "温江区", "都江堰市", "彭州市", "邛崃市", "崇州市", "金堂县", "赵镇", "双流县", "郫县", "郫筒镇", "大邑县", "晋原镇", "蒲江县", "鹤山镇", "新津县", "五津镇"],
            "0_22_1": ["市中区", "元坝区", "朝天区", "旺苍县", "东河镇", "青川县", "乔庄镇", "剑阁县", "下寺镇", "苍溪县", "陵江镇"],
            "0_22_2": ["涪城区", "游仙区", "江油市", "三台县", "潼川镇", "盐亭县", "云溪镇", "安县", "花荄镇", "梓潼县", "文昌镇", "北川羌族自治县", "曲山镇", "平武县", "龙安镇"],
            "0_22_3": ["旌阳区", "什邡市", "广汉市", "绵竹市", "罗江县", "罗江镇", "中江县", "凯江镇"],
            "0_22_4": ["顺庆区", "高坪区", "嘉陵区", "阆中市", "南部县", "南隆镇", "营山县", "朗池镇", "蓬安县", "周口镇", "仪陇县", "新政镇", "西充县", "晋城镇"],
            "0_22_5": ["广安区", "华蓥市", "岳池县", "九龙镇", "武胜县", "沿口镇", "邻水县", "鼎屏镇"],
            "0_22_6": ["船山区", "安居区", "蓬溪县", "赤城镇", "射洪县", "太和镇", "大英县", "蓬莱镇"],
            "0_22_7": ["市中区", "东兴区", "威远县", "严陵镇", "资中县", "重龙镇", "隆昌县", "金鹅镇"],
            "0_22_8": ["市中区", "沙湾区", "五通桥区", "金口河区", "峨眉山市", "犍为县", "玉津镇", "井研县", "研城镇", "夹江县", "漹城镇", "沐川县", "沐溪镇", "峨边彝族自治县", "沙坪镇", "马边彝族自治县", "民建镇"],
            "0_22_9": ["自流井区", "大安区", "贡井区", "沿滩区", "荣县", "旭阳镇", "富顺县", "富世镇"],
            "0_22_10": ["江阳区", "纳溪区", "龙马潭区", "泸县", "福集镇", "合江县", "合江镇", "叙永县", "叙永镇", "古蔺县", "古蔺镇"],
            "0_22_11": ["翠屏区", "宜宾县", "柏溪镇", "南溪县", "南溪镇", "江安县", "江安镇", "长宁县", "长宁镇", "高县", "庆符镇", "筠连县", "筠连镇", "珙县", "巡场镇", "兴文县", "中城镇", "屏山县", "屏山镇"],
            "0_22_12": ["东区", "西区", "仁和区", "米易县", "攀莲镇", "盐边县", "桐子林镇"],
            "0_22_13": ["巴州区", "通江县", "诺江镇", "南江县", "南江镇", "平昌县", "江口镇"],
            "0_22_14": ["通川区", "万源市", "达县", "南外镇", "宣汉县", "东乡镇", "开江县", "新宁镇", "大竹县", "竹阳镇", "渠县", "渠江镇"],
            "0_22_15": ["雁江区", "简阳市", "乐至县", "天池镇", "安岳县", "岳阳镇"],
            "0_22_16": ["东坡区", "仁寿县", "文林镇", "彭山县", "凤鸣镇", "洪雅县", "洪川镇", "丹棱县", "丹棱镇", "青神县", "城厢镇"],
            "0_22_17": ["雨城区", "名山县", "蒙阳镇", "荥经县", "严道镇", "汉源县", "富林镇", "石棉县", "新棉镇", "天全县", "城厢镇", "芦山县", "芦阳镇", "宝兴县", "穆坪镇"],
            "0_22_18": ["马尔康县", "马尔康镇", "汶川县", "威州镇", "理县", "杂谷脑镇", "茂县", "凤仪镇", "松潘县", "进安镇", "九寨沟县", "永乐镇", "金川县", "金川镇", "小金县", "美兴镇", "黑水县", "芦花镇", "壤塘县", "壤柯镇", "阿坝县", "阿坝镇", "若尔盖县", "达扎寺镇", "红原县", "邛溪镇"],
            "0_22_19": ["康定县", "炉城镇", "泸定县", "泸桥镇", "丹巴县", "章谷镇", "九龙县", "呷尔镇", "雅江县", "河口镇", "道孚县", "鲜水镇", "炉霍县", "新都镇", "甘孜县", "甘孜镇", "新龙县", "茹龙镇", "德格县", "更庆镇", "白玉县", "建设镇", "石渠县", "尼呷镇", "色达县", "色柯镇", "理塘县", "高城镇", "巴塘县", "夏邛镇", "乡城县", "桑披镇", "稻城县", "金珠镇", "得荣县", "松麦镇"],
            "0_22_20": ["西昌市", "盐源县", "盐井镇", "德昌县", "德州镇", "会理县", "会东县", "会东镇", "宁南县", "披砂镇", "普格县", "普基镇", "布拖县", "特木里镇", "金阳县", "天地坝镇", "昭觉县", "新城镇", "喜德县", "光明镇", "冕宁县", "城厢镇", "越西县", "越城镇", "甘洛县", "新市坝镇", "美姑县", "巴普镇", "雷波县", "锦城镇", "木里藏族自治县", "乔瓦镇"],
            "0_22": ["成都市", "广元市", "绵阳市", "德阳市", "南充市", "广安市", "遂宁市", "内江市", "乐山市", "自贡市", "泸州市", "宜宾市", "攀枝花市", "巴中市", "达州市", "资阳市", "眉山市", "雅安市", "阿坝州", "甘孜州", "凉山州"],
            "0_23_0": ["乌当区", "南明区", "云岩区", "花溪区", "白云区", "小河区", "清镇市", "开阳县", "修文县", "龙场镇", "息烽县", "永靖镇"],
            "0_23_1": ["钟山区", "盘县", "红果镇", "六枝特区", "平寨镇", "水城县"],
            "0_23_2": ["红花岗区", "汇川区", "赤水市", "仁怀市", "遵义县", "南白镇", "桐梓县", "娄山关镇", "绥阳县", "洋川镇", "正安县", "凤仪镇", "凤冈县", "龙泉镇", "湄潭县", "湄江镇", "余庆县", "白泥镇", "习水县", "东皇镇", "道真仡佬族苗族自治县", "玉溪镇", "务川仡佬族苗族自治县", "都濡镇"],
            "0_23_3": ["西秀区", "平坝县", "普定县", "关岭布依族苗族自治县", "关索镇", "镇宁布依族苗族自治县", "紫云苗族布依族自治县", "松山镇"],
            "0_23_4": ["毕节市", "大方县", "大方镇", "黔西县", "金沙县", "织金县", "纳雍县", "雍熙镇", "赫章县", "威宁彝族回族苗族自治县", "草海镇"],
            "0_23_5": ["铜仁市", "江口县", "双江镇", "石阡县", "汤山镇", "思南县", "思唐镇", "德江县", "青龙镇", "玉屏侗族自治县", "平溪镇", "印江土家族苗族自治县", "峨岭镇", "沿河土家族自治县", "和平镇", "松桃苗族自治县", "蓼皋镇", "万山特区", "万山镇"],
            "0_23_6": ["凯里市", "黄平县", "新州镇", "施秉县", "三穗县", "八弓镇", "镇远县", "阳镇", "岑巩县", "思旸镇", "天柱县", "凤城镇", "锦屏县", "三江镇", "剑河县", "革东镇", "台江县", "台拱镇", "黎平县", "德凤镇", "榕江县", "古州镇", "从江县", "丙妹镇", "雷山县", "丹江镇", "麻江县", "杏山镇", "丹寨县", "龙泉镇"],
            "0_23_7": ["都匀市", "福泉市", "荔波县", "玉屏镇", "贵定县", "瓮安县", "雍阳镇", "独山县", "平塘县", "平湖镇", "罗甸县", "龙坪镇", "长顺县", "长寨镇", "龙里县", "龙山镇", "惠水县", "和平镇", "三都水族自治县", "三合镇"],
            "0_23_8": ["兴义市", "兴仁县", "普安县", "盘水镇", "晴隆县", "莲城镇", "贞丰县", "珉谷镇", "望谟县", "复兴镇", "册亨县", "者楼镇", "安龙县", "新安镇", "剑河县人民政府驻地由柳川镇迁至革东镇"],
            "0_23": ["贵阳市", "六盘水市", "遵义市", "安顺市", "毕节地区", "铜仁地区", "黔东南州", "黔南州", "黔西南州"],
            "0_24_0": ["盘龙区", "五华区", "官渡区", "西山区", "东川区", "安宁市", "呈贡县", "龙城镇", "晋宁县", "昆阳镇", "富民县", "永定镇", "宜良县", "匡远镇", "嵩明县", "嵩阳镇", "石林彝族自治县", "鹿阜镇", "禄劝彝族苗族自治县", "屏山镇", "寻甸回族彝族自治县", "仁德镇"],
            "0_24_1": ["麒麟区", "宣威市", "马龙县", "通泉镇", "沾益县", "西平镇", "富源县", "中安镇", "罗平县", "罗雄镇", "师宗县", "丹凤镇", "陆良县", "中枢镇", "会泽县", "金钟镇"],
            "0_24_2": ["红塔区", "江川县", "大街镇", "澄江县", "凤麓镇", "通海县", "秀山镇", "华宁县", "宁州镇", "易门县", "龙泉镇", "峨山彝族自治县", "双江镇", "新平彝族傣族自治县", "桂山镇", "元江哈尼族彝族傣族自治县", "澧江镇"],
            "0_24_3": ["隆阳区", "施甸县", "甸阳镇", "腾冲县", "腾越镇", "龙陵县", "龙山镇", "昌宁县", "田园镇"],
            "0_24_4": ["昭阳区", "鲁甸县", "文屏镇", "巧家县", "新华镇", "盐津县", "盐井镇", "大关县", "翠华镇", "永善县", "溪落渡镇", "绥江县", "中城镇", "镇雄县", "乌峰镇", "彝良县", "角奎镇", "威信县", "扎西镇", "水富县", "向家坝镇"],
            "0_24_5": ["古城区", "永胜县", "永北镇", "华坪县", "中心镇", "玉龙纳西族自治县", "黄山镇", "宁蒗彝族自治县", "大兴镇"],
            "0_24_6": ["翠云区", "普洱哈尼族彝族自治县", "宁洱镇", "墨江哈尼族自治县", "联珠镇", "景东彝族自治县", "锦屏镇", "景谷傣族彝族自治县", "威远镇", "镇沅彝族哈尼族拉祜族自治县", "恩乐镇", "江城哈尼族彝族自治县", "勐烈镇", "孟连傣族拉祜族佤族自治县", "娜允镇", "澜沧拉祜族自治县", "勐朗镇", "西盟佤族自治县", "勐梭镇"],
            "0_24_7": ["临翔区", "凤庆县", "凤山镇", "云县", "爱华镇", "永德县", "德党镇", "镇康县", "南伞镇", "双江拉祜族佤族布朗族傣族自治县", "勐勐镇", "耿马傣族佤族自治县", "耿马镇", "沧源佤族自治县", "勐董镇"],
            "0_24_8": ["潞西市", "瑞丽市", "梁河县", "遮岛镇", "盈江县", "平原镇", "陇川县", "章凤镇"],
            "0_24_9": ["泸水县六库镇", "泸水县", "六库镇", "福贡县", "上帕镇", "贡山独龙族怒族自治县", "茨开镇", "兰坪白族普米族自治县", "金顶镇"],
            "0_24_10": ["香格里拉县", "建塘镇", "德钦县", "升平镇", "维西傈僳族自治县", "保和镇"],
            "0_24_11": ["大理市", "祥云县", "祥城镇", "宾川县", "金牛镇", "弥渡县", "弥城镇", "永平县", "博南镇", "云龙县", "诺邓镇", "洱源县", "茈碧湖镇", "剑川县", "金华镇", "鹤庆县", "云鹤镇", "漾濞彝族自治县", "苍山西镇", "南涧彝族自治县", "南涧镇", "巍山彝族回族自治县", "南诏镇"],
            "0_24_12": ["楚雄市", "双柏县", "妥甸镇", "牟定县", "共和镇", "南华县", "龙川镇", "姚安县", "栋川镇", "大姚县", "金碧镇", "永仁县", "永定镇", "元谋县", "元马镇", "武定县", "狮山镇", "禄丰县", "金山镇"],
            "0_24_13": ["蒙自县", "文澜镇", "个旧市", "开远市", "绿春县", "大兴镇", "建水县", "临安镇", "石屏县", "异龙镇", "弥勒县", "弥阳镇", "泸西县", "中枢镇", "元阳县", "南沙镇", "红河县", "迤萨镇", "金平苗族瑶族傣族自治县", "金河镇", "河口瑶族自治县", "河口镇", "屏边苗族自治县", "玉屏镇"],
            "0_24_14": ["文山县", "开化镇", "砚山县", "江那镇", "西畴县", "西洒镇", "麻栗坡县", "麻栗镇", "马关县", "马白镇", "丘北县", "锦屏镇", "广南县", "莲城镇", "富宁县", "新华镇"],
            "0_24_15": ["景洪市", "勐海县", "勐海镇", "勐腊县", "勐腊镇"],
            "0_24": ["昆明市", "曲靖市", "玉溪市", "保山市", "昭通市", "丽江市", "思茅市", "临沧市", "德宏州", "怒江州", "迪庆州", "大理州", "楚雄州", "红河州", "文山州", "西双版纳州"],
            "0_25_0": ["莲湖区", "新城区", "碑林区", "灞桥区", "未央区", "雁塔区", "阎良区", "临潼区", "长安区", "蓝田县", "蓝关镇", "周至县", "二曲镇", "户县", "甘亭镇", "高陵县", "鹿苑镇"],
            "0_25_1": ["宝塔区", "延长县", "七里村镇", "延川县", "延川镇", "子长县", "瓦窑堡镇", "安塞县", "真武洞镇", "志丹县", "保安镇", "吴起县", "吴旗镇", "甘泉县", "富县", "富城镇", "洛川县", "凤栖镇", "宜川县", "丹州镇", "黄龙县", "石堡镇", "黄陵县", "桥山镇"],
            "0_25_2": ["耀州区", "王益区", "印台区", "宜君县", "铜川"],
            "0_25_3": ["临渭区", "华阴市", "韩城市", "华县", "华州镇", "潼关县", "大荔县", "蒲城县", "澄城县", "白水县", "合阳县", "富平县", "窦村镇"],
            "0_25_4": ["秦都区", "杨陵区", "渭城区", "兴平市", "三原县", "泾阳县", "泾干镇", "乾县", "礼泉县", "永寿县", "监军镇", "彬县", "长武县", "昭仁镇", "旬邑县", "淳化县", "武功县", "普集镇"],
            "0_25_5": ["渭滨区", "金台区", "陈仓区", "凤翔县", "岐山县", "凤鸣镇", "扶风县", "眉县", "首善镇", "陇县", "千阳县", "麟游县", "九成宫镇", "凤县", "双石铺镇", "太白县", "嘴头镇"],
            "0_25_6": ["汉台区", "南郑县", "城固县", "博望镇", "洋县", "洋州镇", "西乡县", "勉县", "勉阳镇", "宁强县", "汉源镇", "略阳县", "镇巴县", "泾洋镇", "留坝县", "佛坪县", "袁家庄镇"],
            "0_25_7": ["榆阳区", "神木县", "神木镇", "府谷县", "府谷镇", "横山县", "横山镇", "靖边县", "张家畔镇", "定边县", "定边镇", "绥德县", "名州镇", "米脂县", "银州镇", "佳县", "佳芦镇", "吴堡县", "宋家川镇", "清涧县", "宽洲镇", "子洲县", "双湖峪镇"],
            "0_25_8": ["汉滨区", "汉阴县", "石泉县", "宁陕县", "紫阳县", "岚皋县", "平利县", "镇坪县", "旬阳县", "白河县"],
            "0_25_9": ["商州区", "洛南县", "丹凤县", "龙驹寨镇", "商南县", "山阳县", "镇安县", "永乐镇", "柞水县", "乾佑镇"],
            "0_25": ["西安市", "延安市", "铜川市", "渭南市", "咸阳市", "宝鸡市", "汉中市", "榆林市", "安康市", "商洛市"],
            "0_26_0": ["城关区", "七里河区", "西固区", "安宁区", "红古区", "永登县", "皋兰县", "石洞镇", "榆中县"],
            "0_26_1": ["金昌市", "金川区", "永昌县", "嘉峪关市"],
            "0_26_2": ["白银区", "平川区", "靖远县", "乌兰镇", "会宁县", "会师镇", "景泰县", "一条山镇"],
            "0_26_3": ["秦州区", "麦积区", "清水县", "永清镇", "秦安县", "兴国镇", "甘谷县", "大像山镇", "武山县", "张家川回族自治县", "张家川镇"],
            "0_26_4": ["凉州区", "民勤县", "古浪县", "古浪镇", "天祝藏族自治县", "华藏寺镇"],
            "0_26_5": ["肃州区", "玉门市", "敦煌市", "金塔县", "金塔镇", "安西县", "渊泉镇", "肃北蒙古族自治县", "党城湾镇", "阿克塞哈萨克族自治县", "红柳湾镇"],
            "0_26_6": ["甘州区", "民乐县", "洪水镇", "临泽县", "沙河镇", "高台县", "山丹县", "清泉镇", "肃南裕固族自治县", "红湾寺镇"],
            "0_26_7": ["西峰区", "庆城县", "庆城镇", "环县", "环城镇", "华池县", "柔远镇", "合水县", "西华池镇", "正宁县", "山河镇", "宁县", "新宁镇", "镇原县"],
            "0_26_8": ["崆峒区", "泾川县", "灵台县", "中台镇", "崇信县", "锦屏镇", "华亭县", "东华镇", "庄浪县", "水洛镇", "静宁县"],
            "0_26_9": ["安定区", "通渭县", "平襄镇", "临洮县", "洮阳镇", "漳县", "武阳镇", "岷县", "岷阳镇", "渭源县", "清源镇", "陇西县", "巩昌镇"],
            "0_26_10": ["武都区", "成县", "宕昌县", "康县", "文县", "西和县", "汉源镇", "两当县", "徽县"],
            "0_26_11": ["临夏市", "临夏县", "韩集镇", "康乐县", "附城镇", "永靖县", "刘家峡镇", "广河县", "和政县", "东乡族自治县", "锁南坝镇", "积石山保安族东乡族撒拉族自治县", "吹麻滩镇"],
            "0_26_12": ["合作市", "临潭县", "卓尼县", "柳林镇", "舟曲县", "迭部县", "电尕镇", "玛曲县", "尼玛镇", "碌曲县", "玛艾镇", "夏河县", "拉卜楞镇"],
            "0_26": ["兰州市", "嘉峪关市", "白银市", "天水市", "武威市", "酒泉市", "张掖市", "庆阳市", "平凉市", "定西市", "陇南市", "临夏州", "甘南州"],
            "0_27_0": ["城中区", "城东区", "城西区", "城北区", "大通回族土族自治县", "桥头镇", "湟源县", "湟中县", "鲁沙尔镇"],
            "0_27_1": ["平安县", "平安镇", "乐都县", "碾伯镇", "民和回族土族自治县", "川口镇", "互助土族自治县", "威远镇", "化隆回族自治县", "巴燕镇", "循化撒拉族自治县", "积石镇"],
            "0_27_2": ["海晏县", "三角城镇", "祁连县", "八宝镇", "刚察县", "沙柳河镇", "门源回族自治县", "浩门镇"],
            "0_27_3": ["共和县", "恰卜恰镇", "同德县", "尕巴松多镇", "贵德县", "河阴镇", "兴海县", "子科滩镇", "贵南县", "茫曲镇"],
            "0_27_4": ["同仁县", "隆务镇", "尖扎县", "马克唐镇", "泽库县", "泽曲镇", "河南蒙古族自治县", "优干宁镇"],
            "0_27_5": ["玛沁县", "大武镇", "班玛县", "赛来塘镇", "甘德县", "柯曲镇", "达日县", "吉迈镇", "久治县", "智青松多镇", "玛多县", "黄河乡"],
            "0_27_6": ["玉树县", "结古镇", "杂多县", "萨呼腾镇", "称多县", "称文镇", "治多县", "加吉博洛镇", "囊谦县", "香达镇", "曲麻莱县", "约改镇"],
            "0_27_7": ["德令哈市", "格尔木市", "乌兰县", "希里沟镇", "都兰县", "察汗乌苏镇", "天峻县", "新源镇"],
            "0_27": ["西宁市", "海东地区", "海北州", "海南州", "黄南州", "果洛州", "玉树州", "海西州"],
            "0_28_0": ["兴庆区", "金凤区", "西夏区", "灵武市", "永宁县", "杨和镇", "贺兰县", "习岗镇"],
            "0_28_1": ["大武口区", "惠农区", "平罗县", "石嘴山"],
            "0_28_2": ["利通区", "青铜峡市", "盐池县", "花马池镇", "同心县", "豫海镇"],
            "0_28_3": ["原州区", "西吉县", "吉强镇", "隆德县", "泾源县", "香水镇", "彭阳县", "白阳镇"],
            "0_28_4": ["沙坡头区", "中宁县", "海原县"],
            "0_28": ["银川市", "石嘴山市", "吴忠市", "固原市", "中卫市"],
            "0_29_0": ["天山区", "沙依巴克区", "新市区", "水磨沟区", "头屯河区", "达坂城区", "东山区", "乌鲁木齐县", "乌鲁木齐市水磨沟区"],
            "0_29_1": ["克拉玛依区", "独山子区", "白碱滩区", "乌尔禾区"],
            "0_29_2": ["石河子市", "阿拉尔市", "图木舒克市", "五家渠市"],
            "0_29_3": ["喀什市", "疏附县", "托克扎克镇", "疏勒县", "疏勒镇", "英吉沙县", "英吉沙镇", "泽普县", "泽普镇", "莎车县", "莎车镇", "叶城县", "喀格勒克镇", "麦盖提县", "麦盖提镇", "岳普湖县", "岳普湖镇", "伽师县", "巴仁镇", "巴楚县", "巴楚镇", "塔什库尔干塔吉克自治县", "塔什库尔干镇"],
            "0_29_4": ["阿克苏市", "温宿县", "温宿镇", "库车县", "库车镇", "沙雅县", "沙雅镇", "新和县", "新和镇", "拜城县", "拜城镇", "乌什县", "乌什镇", "阿瓦提县", "阿瓦提镇", "柯坪县", "柯坪镇"],
            "0_29_5": ["和田市", "和田县", "墨玉县", "喀拉喀什镇", "皮山县", "固玛镇", "洛浦县", "洛浦镇", "策勒县", "策勒镇", "于田县", "木尕拉镇", "民丰县", "尼雅镇"],
            "0_29_6": ["吐鲁番市", "鄯善县", "鄯善镇", "托克逊县", "托克逊镇"],
            "0_29_7": ["哈密市", "伊吾县", "伊吾镇", "巴里坤哈萨克自治县", "巴里坤镇"],
            "0_29_8": ["阿图什市", "阿克陶县", "阿克陶镇", "阿合奇县", "阿合奇镇", "乌恰县", "乌恰镇"],
            "0_29_9": ["博乐市", "精河县", "精河镇", "温泉县", "博格达尔镇"],
            "0_29_10": ["昌吉市", "阜康市", "米泉市", "呼图壁县", "呼图壁镇", "玛纳斯县", "玛纳斯镇", "奇台县", "奇台镇", "吉木萨尔县", "吉木萨尔镇", "木垒哈萨克自治县", "木垒镇"],
            "0_29_11": ["库尔勒市", "轮台县", "轮台镇", "尉犁县", "尉犁镇", "若羌县", "若羌镇", "且末县", "且末镇", "和静县", "和静镇", "和硕县", "特吾里克镇", "博湖县", "博湖镇", "焉耆回族自治县", "焉耆镇"],
            "0_29_12": ["伊宁市", "奎屯市", "伊宁县", "吉里于孜镇", "霍城县", "水定镇", "巩留县", "巩留镇", "新源县", "新源镇", "昭苏县", "昭苏镇", "特克斯县", "特克斯镇", "尼勒克县", "尼勒克镇", "察布查尔锡伯自治县", "察布查尔镇"],
            "0_29_13": ["塔城市", "乌苏市", "额敏县", "额敏镇", "沙湾县", "三道河子镇", "托里县", "托里镇", "裕民县", "哈拉布拉镇", "和布克赛尔蒙古自治县", "和布克赛尔镇"],
            "0_29_14": ["阿勒泰市", "布尔津县", "布尔津镇", "富蕴县", "库额尔齐斯镇", "福海县", "哈巴河县", "青河县", "吉木乃县"],
            "0_29": ["乌鲁木齐市", "克拉玛依市", "自治区直辖县级行政单位", "喀什地区", "阿克苏地区", "和田地区", "吐鲁番地区", "哈密地区", "克孜勒苏柯州", "博尔塔拉州", "昌吉州", "巴音郭楞州", "伊犁州", "塔城地区", "阿勒泰地区"],
            "0_30_0": ["城关区", "林周县", "甘丹曲果镇", "当雄县", "当曲卡镇", "尼木县", "塔荣镇", "曲水县", "曲水镇", "堆龙德庆县", "东嘎镇", "达孜县", "德庆镇", "墨竹工卡县", "工卡镇"],
            "0_30_1": ["那曲县", "那曲镇", "嘉黎县", "阿扎镇", "比如县", "比如镇", "聂荣县", "聂荣镇", "安多县", "帕那镇", "申扎县", "申扎镇", "索县", "亚拉镇", "班戈县", "普保镇", "巴青县", "拉西镇", "尼玛县", "尼玛镇"],
            "0_30_2": ["昌都县", "城关镇", "江达县", "江达镇", "贡觉县", "莫洛镇", "类乌齐县", "桑多镇", "丁青县", "丁青镇", "察雅县", "烟多镇", "八宿县", "白玛镇", "左贡县", "旺达镇", "芒康县", "嘎托镇", "洛隆县", "孜托镇", "边坝县", "草卡镇"],
            "0_30_3": ["林芝县", "八一镇", "工布江达县", "工布江达镇", "米林县", "米林镇", "墨脱县", "墨脱镇", "波密县", "扎木镇", "察隅县", "竹瓦根镇", "朗县", "朗镇"],
            "0_30_4": ["乃东县", "泽当镇", "扎囊县", "扎塘镇", "贡嘎县", "吉雄镇", "桑日县", "桑日镇", "琼结县", "琼结镇", "曲松县", "曲松镇", "措美县", "措美镇", "洛扎县", "洛扎镇", "加查县", "安绕镇", "隆子县", "隆子镇", "错那县", "错那镇", "浪卡子县", "浪卡子镇"],
            "0_30_5": ["日喀则市", "南木林县", "南木林镇", "江孜县", "江孜镇", "定日县", "协格尔镇", "萨迦县", "萨迦镇", "拉孜县", "曲下镇", "昂仁县", "卡嘎镇", "谢通门县", "卡嘎镇", "白朗县", "洛江镇", "仁布县", "德吉林镇", "康马县", "康马镇", "定结县", "江嘎镇", "仲巴县", "拉让乡", "亚东县", "下司马镇", "吉隆县", "宗嘎镇", "聂拉木县", "聂拉木镇", "萨嘎县", "加加镇", "岗巴县", "岗巴镇"],
            "0_30_6": ["噶尔县", "狮泉河镇", "普兰县", "普兰镇", "札达县", "托林镇", "日土县", "日土镇", "革吉县", "革吉镇", "改则县", "改则镇", "措勤县", "措勤镇", "林芝县人民政府驻地由林芝镇迁至八一镇"],
            "0_30": ["拉萨市", "那曲地区", "昌都地区", "林芝地区", "山南地区", "日喀则地区", "阿里地区"],
            0 : ["北京", "天津", "上海", "重庆", "河北", "山西", "内蒙古", "辽宁", "吉林", "黑龙江", "江苏", "浙江", "安徽", "福建", "江西", "山东", "河南", "湖北", "湖南", "广东", "广西", "海南", "四川", "贵州", "云南", "陕西", "甘肃", "青海", "宁夏", "新疆", "西藏"]
        }
    };
    return e
} ();
var ActionReport = function() {
    var i = "",
    s = 0;
    var e = 3e3;
    var n = {
        report: function(e) {
            if (!s) {
                var t = window.game_cacheId || myStorage.getItem("cacheId");
                if (!t) {
                    t = Utils.uuid(32);
                    s = t;
                    myStorage.setItem("cacheId", t)
                } else {
                    s = t
                }
            }
            var i = Game.behaviorLog.reportUrl;
            if (e.lastIndexOf("|") > 0) {
                e = e.substr(0, e.lastIndexOf("|"))
            }
            if (e) {
                var n = {
                    data: e,
                    user_id: Player.getUserId() || myStorage.getItem("bydjs_uid") || 0,
                    cacheId: s,
                    regCPSId: Game.channel.regCPSId,
                    cps: Game.channel.cfg.cps
                };
                Ajax(i, n, "get",
                function(e) {},
                function(e) {},
                null, null, false)
            }
        },
        sendReport: function() {
            if (i) {
                this.report(i);
                this.clear()
            }
            Laya.timer.once(e, n, n.sendReport)
        },
        add: function(e, t) {
            i += e + ":" + t + "|"
        },
        clear: function() {
            i = ""
        }
    };
    return {
        actionIndex: {
            login_Notice: 100,
            login_XieYi: 101,
            login_Establish: 102,
            login_StartGame: 103,
            login_phone: 104,
            login_Tourist: 105,
            login_WX: 106,
            login_QQ: 107,
            login_HistoryUser: 108,
            createAccount_Create: 110,
            createAccount_Close: 111,
            phoneLogin_Send: 120,
            phoneLogin_GetInto: 121,
            phoneLogin_Close: 122,
            firstGiftBag_Open: 130,
            firstGiftBag_Close: 131,
            getFirstReward_Get: 132,
            getFirstReward_Close: 133,
            gameHall_Personal: 200,
            gameHall_Recharge: 201,
            gameHall_JiangQuan: 202,
            gameHall_jiFen: 203,
            gameHall_FirstCharge: 204,
            gameHall_Play: 205,
            gameHall_Notice: 206,
            gameHall_Intive: 207,
            gameHall_Chat: 208,
            gameHall_Activity: 209,
            gameHall_Turntable: 210,
            gameHall_Knapsack: 211,
            gameHall_Email: 212,
            gameHall_Ranking: 213,
            gameHall_Shop: 214,
            gameHall_FastStart: 215,
            gameHall_DaoDan: 216,
            gameHall_10Bei: 217,
            gameHall_100Bei: 218,
            gameHall_1000Bei: 219,
            gameHall_Exit: 220,
            gameHall_SuperValueBox: 221,
            gameHall_Entrance: 222,
            gameHall_Exchange: 223,
            gameHall_getFriend: 224,
            gameHall_LuckyDraw: 225,
            personalCore_SetNick: 300,
            personalCore_SetHerder: 301,
            personalCore_RealName: 302,
            personalCore_Copy: 303,
            personalCore_Music: 304,
            personalCore_Sound: 305,
            personalCore_Screen: 306,
            personalCore_Close: 307,
            setNick_SET: 310,
            setNick_Close: 311,
            setHear_SET: 320,
            setHear_Close: 321,
            shiMing_Submit: 330,
            shiMing_Close: 331,
            shop_Buy: 400,
            shop_Close: 401,
            jiangQuan_Exc: 410,
            jiangQuan_JiLu: 411,
            jiangQuan_Close: 412,
            jiLu_Prev: 420,
            jiLu_Next: 421,
            jiLu_Close: 422,
            jiFen_Exc: 430,
            jiFen_Close: 431,
            exchange_OK: 434,
            exchange_Close: 435,
            phoneRecharge_Submit: 436,
            phoneRecharge_Close: 437,
            address_Submit: 438,
            address_Close: 439,
            firsRec_Buy: 440,
            firsRec_Close: 441,
            playPackage_Buy: 450,
            playPackage_Close: 451,
            invit_Submit: 460,
            invit_WX: 461,
            invit_WXP: 462,
            invit_QQ: 463,
            invit_Close: 464,
            invit_Exchange: 465,
            invit_InvitBtn: 466,
            invit_CloseWX: 467,
            chat_Send: 470,
            chat_Close: 471,
            act_LeftList: 480,
            act_LoginPacks_Get: 481,
            act_TiredCharge_Get: 482,
            act_Close: 483,
            turntable_Get: 490,
            turntable_Close: 491,
            package_Give: 500,
            package_Use: 501,
            package_Close: 502,
            packageGet_Give: 503,
            packageGet_Jian: 504,
            packageGet_Jia: 505,
            packageGet_Max: 506,
            packageGet_Close: 507,
            email_Get: 510,
            email_GetAll: 512,
            email_Del: 513,
            email_XuanZhong: 514,
            email_Close: 515,
            ranking_Prev: 520,
            ranking_Next: 521,
            ranking_Close: 522,
            daoDan_Room: 530,
            daoDan_LeftList: 531,
            daoDan_Close: 532,
            notice_LeftList: 540,
            notice_Close: 541,
            agreement_Close: 550,
            phoneBD_Send: 560,
            phoneBD_Submit: 561,
            phoneBD_Close: 562,
            getReward_Get: 570,
            getReward_Close: 571,
            getReward_GetWei: 572,
            getReward_ShareWei: 573,
            getReward_CloseWei: 574,
            getReward_GetWX: 575,
            getReward_ShareWX: 576,
            getReward_CloseWX: 577,
            preventIndulge_Appraisal: 580,
            preventIndulge_Close: 581,
            seting_Music: 590,
            seting_Sound: 591,
            seting_Screen: 592,
            jiuJiJin_Get: 600,
            jiuJiJin_GetWX: 601,
            jiuJiJin_ShareGetWX: 602,
            tuJian_Close: 610,
            entrance_Know: 620,
            get_Into_Game: 630,
            get_Game_Cfig: 631,
            loginView_Show: 632,
            load_Resources: 634,
            gameCenter_Show: 635,
            UseSkillSuoDing: 636,
            UseSkillBingDong: 637,
            UseSkillKuangBao: 638,
            UseSkillZhaDan: 639,
            UseSkillDanTou_baiJin: 640,
            UseSkillDanTou_huangJin: 641,
            UseSkillDanTou_baiYin: 642,
            UseSkillDanTou_qinTong: 643,
            CannonMulAdd: 644,
            CannonMulDel: 645,
            sceneInvite: 646,
            sceneExitBtn: 647,
            getGameCfgReq: 648,
            getGameCfgRep: 649,
            loadGameCenterResStart: 650,
            loadGameCenterResEnd: 651,
            enterGameCenter: 652,
            loadSceneResStart: 653,
            loadSceneResEnd: 654,
            EnterTableReq: 655,
            ClientEnterScene: 656,
            FreeLottery_Get: 657,
            FreeLottery_Close: 658,
            DayLoginShare_Share: 659,
            SmallGoldPig_Share: 660,
            SmallGoldPig_Close: 661,
            SmallGoldPig_Receive: 662,
            LoginGift_Share: 663,
            LoginGift_Receive: 664,
            LuckyTurnTable_Share: 665,
            ActivityExchange: 666,
            MiniGameOnShow: 667,
            OnTapStartGameBtn: 668,
            getsCopeUserInfo: 669,
            wxLoginSucc: 670,
            wxGetUserInfo: 671,
            wxGetSystemInfo: 672,
            LayaInit: 673,
            loginGameSvr: 674,
            wx_pkgLoaded: 675,
            wx_onShow: 676,
            wx_subPkgLoaded: 677,
            newPlayerGift: 678,
            newPlayerGift_drawPrize: 679,
            NEW_PLAYER_TASK_GET1: 679,
            NEW_PLAYER_TASK_GET2: 680,
            NEW_PLAYER_TASK_GET3: 681,
            NEW_PLAYER_TASK_ALL_GET: 682,
            NEW_PLAYER_TASK_ALL_COM: 683,
            NEW_PLAYER_TASK_DIGLOG: 684,
            CHANGE_SCENE_TO_100: 685,
            CHANGE_SCENE_TO_100_CANCEL: 686,
            CHANGE_SCENE_TO_100_CONFIRM: 687,
            loadResFail: 700,
            loadCfgDataSucc: 701,
            GameInit: 1e3,
            Click_AutoFire: 801,
            XSYD_step_1: 901,
            XSYD_step_2: 902,
            XSYD_step_3: 903,
            XSYD_step_4: 904,
            XSYD_step_5: 905,
            XSYD_step_6: 906,
            Req_SuperMath_share: 1014,
            Req_SuperMathResult_share: 1015,
            Show_SuperMathShareGetBlt: 1016,
            Req_SuperMathBlt_share: 1017,
            Req_SuperMathBlt_No: 1018,
            Click_OnlineGiftIcon: 1019,
            Req_GetOnlineGift: 1020,
            Show_OnlineGiftTip: 1021,
            Click_OnlineGiftTip_GoOn: 1022,
            Click_OnlineGiftTip_Exit: 1023
        },
        init: function() {
            if (!Game.behaviorLog.isOpen) {
                return false
            }
            Laya.timer.once(e, n, n.sendReport)
        },
        addLog: function(e) {
            if (!Game.behaviorLog.isOpen) {
                return false
            }
            n.add(e, (new Date).getTime())
        },
        report: function(e) {
            if (!Game.behaviorLog.isOpen) {
                return false
            }
            if (Game.behaviorLog.reportUrl) {
                var t = e + ":" + (new Date).getTime();
                n.report(t)
            } else {
                this.addLog(e)
            }
        }
    }
} ();
var ActionEventReport = function() {
    var e = "",
    a = 0;
    var r = false;
    var i = {
        report: function(e, t) {
            if (r) return;
            if (!a) {
                var i = window.game_cacheId || myStorage.getItem("cacheId");
                if (!i) {
                    i = Utils.uuid(32);
                    a = i;
                    myStorage.setItem("cacheId", i)
                } else {
                    a = i
                }
            }
            var n = Game.behaviorLog.eventReportURL;
            if (!t) t = {};
            var s = {
                data: JSON.stringify(t),
                user_id: Player.getUserId() || myStorage.getItem("bydjs_uid") || 0,
                deviceId: a,
                regCPSId: Game.channel.regCPSId,
                cps: Game.channel.cfg.cps,
                Id: e,
                time: (new Date).getTime(),
                money: Player.getGold(),
                scene: Game.state.get(),
                fromReg: Player.getDaysFromReg()
            };
            Ajax(n, s, "get",
            function(e) {},
            function(e, t) {
                if (t == -5) {
                    r = true
                }
            },
            null, null, false)
        }
    };
    return {
        actionIndex: {
            ID1001: 1001,
            ID1002: 1002,
            ID1003: 1003,
            ID1004: 1004,
            ID1005: 1005,
            ID1006: 1006,
            ID1007: 1007,
            ID1008: 1008,
            ID1009: 1009,
            ID1010: 1010,
            ID1011: 1011,
            ID1012: 1012,
            ID1013: 1013,
            ID1014: 1014,
            ID1015: 1015,
            ID1016: 1016,
            ID1017: 1017,
            ID1018: 1018,
            ID1019: 1019,
            ID1020: 1020,
            ID1021: 1021,
            ID1022: 1022,
            ID1023: 1023,
            ID1024: 1024,
            ID1025: 1025,
            ID1026: 1026,
            ID1027: 1027,
            ID1028: 1028,
            ID1029: 1029,
            ID1030: 1030,
            ID1031: 1031,
            ID1032: 1032,
            ID1033: 1033,
            ID1034: 1034,
            ID1035: 1035,
            ID1036: 1036,
            ID1037: 1037,
            ID1038: 1038,
            ID1039: 1039,
            ID1040: 1040,
            ID1041: 1041,
            ID1042: 1042,
            ID1043: 1043,
            ID1044: 1044,
            ID1045: 1045,
            ID1046: 1046,
            ID1047: 1047,
            ID1048: 1048,
            ID1049: 1049,
            ID1050: 1050,
            ID1051: 1051,
            ID1052: 1052,
            ID1053: 1053,
            ID1054: 1054,
            ID1055: 1055,
            ID1056: 1056,
            ID1057: 1057,
            ID1058: 1058,
            ID1059: 1059,
            ID1060: 1060,
            ID1061: 1061,
            ID1062: 1062,
            ID1063: 1063,
            ID1064: 1064,
            ID1065: 1065,
            ID1066: 1066,
            ID1067: 1067,
            ID1068: 1068,
            ID1069: 1069,
            ID1070: 1070,
            ID1071: 1071,
            ID1072: 1072,
            ID1073: 1073,
            ID1074: 1074,
            ID1075: 1075,
            ID1076: 1076,
            ID1077: 1077,
            ID1078: 1078,
            ID1079: 1079,
            ID1080: 1080,
            ID1081: 1081,
            ID1082: 1082,
            ID1083: 1083,
            ID1084: 1084,
            ID1085: 1085,
            ID1086: 1086,
            ID1087: 1087,
            ID1088: 1088,
            ID1089: 1089,
            ID1090: 1090,
            ID1091: 1091,
            ID1092: 1092,
            ID1093: 1093,
            ID1094: 1094,
            ID1095: 1095,
            ID1096: 1096,
            ID1097: 1097,
            ID1098: 1098,
            ID1099: 1099,
            ID1100: 1100,
            ID1101: 1101,
            ID1102: 1102
        },
        PayEvent: null,
        report: function(e, t) {
            if (Game.behaviorLog.isOpen && Game.behaviorLog.eventReportURL) {
                i.report(e, t)
            }
        }
    }
} (); (function() {
    if (!window.JSON) {
        console.log("not support JSON")
    }
    var e = {
        getItem: function(e) {
            var t = localStorage.getItem(e);
            if (t) {
                var i = t + "";
                if (i.indexOf(":") > 0 && i.indexOf("{") >= 0 && i.indexOf("}") >= 0) {
                    var n = JSON.parse(i);
                    return n
                } else {
                    return t
                }
            }
            return false
        },
        setItem: function(t, e) {
            if (t != undefined && e != undefined) {
                var i = e;
                if (typeof e == "object") {
                    i = JSON.stringify(e)
                }
                try {
                    localStorage.setItem(t, i)
                } catch(e) {
                    if (e.name == "QuotaExceededError") {
                        localStorage.clear();
                        localStorage.setItem(t, i)
                    }
                }
            }
        },
        getItemWithUserId: function(e) {
            e = Player.getUserId() + e;
            var t = localStorage.getItem(e);
            if (t) {
                var i = t + "";
                if (i.indexOf(":") > 0 && i.indexOf("{") >= 0 && i.indexOf("}") >= 0) {
                    var n = JSON.parse(i);
                    return n
                } else {
                    return t
                }
            }
            return false
        },
        setItemWithUserId: function(e, t) {
            if (e != undefined && t != undefined) {
                e = Player.getUserId() + e;
                var i = t;
                if (typeof t == "object") {
                    i = JSON.stringify(t)
                } else {
                    i += ""
                }
                localStorage.setItem(e, i)
            }
        },
        removeItem: function(e) {
            localStorage.removeItem(e)
        },
        clear: function() {
            localStorage.clear()
        },
        support: function() {
            if (window.localStorage) {
                return true
            }
            return false
        },
        StorageStaticCode: {
            Storage_FirstCatchGoldFish: "Storage_FirstCatchGoldFish",
            Storage_FIRSTBUYTOONE_GUANG: "Storage_FIRSTBUYTOONE_GUANG",
            Storage_FIRSTFishSceneShowYaoYiYao: "Storage_FIRSTFishSceneShowYaoYiYao",
            Storage_ShowChongZhiMessageBos: "Storage_ShowChongZhiMessageBos",
            Storage_FIRSTSHAKE_GUANG: "Storage_FIRSTSHAKE_GUANG",
            Storage_FIRST_GAMEBACK: "Storage_FIRST_GAMEBACK",
            Storage_UpgradeHint: "Storage_UpgradeHint",
            Storage_TEHUI_ShowRedPoint: "Storage_TEHUI_ShowRedPoint",
            STORAGE_DY_SEVENDAY_RECHARGE: "STORAGE_DY_SEVENDAY_RECHARGE",
            STORAGE_GAMECENTER_TIPECHANGE: "STORAGE_GAMECENTER_TIPECHANGE"
        }
    };
    window.myStorage = e
})();
var BypassAudioManager = {
    instance: null,
    getOneInstance: function() {
        if (!this.instance) {
            var e = "com.feidun.qiuqiubuyu.fd.BypassAudioManager";
            if (Channel && Channel.fireSoundClass) {
                e = Channel.fireSoundClass
            }
            var t = Laya.PlatformClass.createClass(e);
            this.instance = t.newObject()
        }
        return this.instance
    },
    register: function(e) {
        var t = this.getOneInstance().call("register", "sound/shot.ogg");
        return t
    },
    play: function() {
        this.getOneInstance().call("playSound", 1e3 / Game.config.bullet.CountPerSec, "1")
    }
};
var OrderCenter = function() {
    var s = "FD_order_map";
    var a = "yxl_payCacheKey";
    function r() {
        var e = (new Date).getTime();
        return parseInt(e / 1e3)
    }
    var o = {
        add: function(e, t) {
            var i = this.get();
            if (i) {
                i[e] = t;
                myStorage.setItem(s, i)
            } else {
                var n = {};
                n[e] = t;
                myStorage.setItem(s, n)
            }
        },
        del: function(e) {
            var t = this.get();
            if (t && t[e]) {
                delete t[e];
                myStorage.setItem(s, t)
            } else {
                console.log("没有要删除的订单信息")
            }
        },
        get: function() {
            return myStorage.getItem(s)
        }
    };
    function l(e) {
        var t = i.localCacheOrder.get();
        if (t && e) {
            if (t.ReqNum + 1 <= i.localCacheOrder.ReqMaxNum) {
                t.ReqNum++;
                myStorage.setItem(a, t);
                try {
                    e(t.data);
                    if (t.ReqNum == i.localCacheOrder.ReqMaxNum) {
                        if (i.localCacheOrder.timerInst) {
                            i.localCacheOrder.timerInst.clear(null, l)
                        }
                    }
                } catch(e) {
                    console.log("ReqServerSendFn:");
                    console.log(e)
                }
            }
        } else {
            if (i.localCacheOrder.timerInst) {
                i.localCacheOrder.timerInst.clear(null, l)
            }
        }
    }
    var i = {
        request: function(e, t) {
            var i = r();
            var n = "";
            for (var s in t) {
                n += s + "=" + t[s] + "&"
            }
            n = n.substring(0, n.length - 1);
            if (n) {
                e += "?" + n
            }
            console.log("reqId:" + i);
            console.log("url:" + e);
            o.add(i, e);
            Request.HttpReq(i, e)
        },
        response: function(e) {
            if (e.ReqId && OrderCenter.checkCallBack(e.ReqId)) {
                o.del(e.ReqId)
            } else {
                console.log("HttpRep:" + JSON.stringify(e));
                if (e.StateCode == 0) {
                    o.del(e.ReqId);
                    MessageBox.show("发货失败,请联系客服!")
                } else if (e.StateCode < 0) {}
            }
        },
        checkCallBack: function(e) {
            var t = o.get();
            if (t && t[e]) {
                return true
            }
            return false
        },
        check: function() {
            var e = o.get();
            if (e && e instanceof Object) {
                for (s in e) {
                    if (s && e[s]) {
                        console.log("检测到未发货的订单 重新请求发货");
                        console.log(e[s]);
                        if (e[s] && e[s].ReqNum >= 0) {
                            Request.HttpReq(e[s].ReqNum, e[s])
                        } else {
                            Request.HttpReq(s, e[s])
                        }
                        break
                    }
                }
            }
            this.localCacheOrder.check()
        },
        localCacheOrder: {
            ReqMaxNum: 10,
            timerInst: null,
            set: function(e, t) {
                try {
                    if (!this.timerInst) {
                        this.timerInst = new Laya.Timer
                    }
                    var i = this.get();
                    if (i) {
                        this.timerInst.clear(null, l);
                        if (t) {
                            t(i.data)
                        }
                    }
                    var n = {
                        ReqNum: 0,
                        data: e
                    };
                    myStorage.setItem(a, n);
                    this.timerInst.loop(30 * 1e3, null, l, [n])
                } catch(e) {
                    console.log("orderCenter localCacheOrder set try:");
                    console.log(e)
                }
            },
            get: function() {
                return myStorage.getItem(a)
            },
            del: function() {
                myStorage.removeItem(a)
            },
            check: function() {
                var e = this.get();
                if (e) {
                    if (Channel && Channel.ReqServerSendGoods) {
                        Channel.ReqServerSendGoods(e.data)
                    }
                }
            }
        }
    };
    return i
} ();
var RewardedVideoAd = function() {
    var n = ["adunit-335c3eec019884ae", "adunit-e90b32223fa74ddd"];
    var s = ["4a1f0738092ae44615a28dfaa22fb17f", "f16b272128cd04527fb694b5351826ab"];
    var a = null,
    r = null,
    o = null,
    l = false;
    var h = function() {
        var e = Game.onQQ() ? qq: wx;
        var t = Game.onQQ() ? s: n;
        var i = Utils.getRandomFromArr(t);
        if (i) {
            r = e.createRewardedVideoAd({
                adUnitId: i
            });
            console.log(r);
            r.load();
            r.onLoad(function() {
                console.log("videoAd onload success");
                l = true;
                r.show()
            });
            r.onClose(function(e) {
                console.log("videoAd.onClose fn");
                if (e && e.isEnded || e === undefined) {
                    a && a(true)
                } else {
                    a && a(false)
                }
                r.offLoad()
            });
            r.onError(function(e) {
                console.log("videoAd.onError:");
                console.log(e.errMsg);
                if (a && a(false, true)) {} else {
                    MsgToast.show("广告加载失败!")
                }
            })
        }
    };
    return {
        show: function(e, t) {
            var i = Game.onQQ() ? qq: wx;
            var n = i.getSystemInfoSync();
            var s = n.SDKVersion.replace(/\./g, "") * 1;
            console.log("SDKVersion:" + s);
            a = t;
            o = e;
            if (!Game.onQQ() && s < 204) {
                MessageBox.show("微信版本较低,不支持激励视频");
                return
            }
            if (!r) {
                if (i.createRewardedVideoAd) {
                    h()
                } else {
                    MessageBox.show("视频加载失败!");
                    return
                }
            } else {
                if (l) {
                    r.show()
                } else {
                    r.load()
                }
            }
            o && o()
        }
    }
} ();
var Adapter = function() {
    return {
        fitView: function(e, t) {
            if (Game.Adapter) {
                if (e && e.size) {
                    e.size(Game.ViewWidth, Game.ViewHeight)
                }
                var i = 0 - (Game.UIWidth * Game.ViewScaleValue - Game.ViewWidth) / 2;
                var n = 0 - (Game.UIHeight * Game.ViewScaleValue - Game.ViewHeight) / 2;
                if (t instanceof Laya.Node) {
                    t.scale(Game.ViewScaleValue, Game.ViewScaleValue);
                    t.pos(i, n)
                } else if (t instanceof Array) {
                    for (var s = 0; s < t.length; s++) {
                        var a = t[s];
                        a.size(Game.UIWidth, Game.UIHeight);
                        a.scale(Game.ViewScaleValue, Game.ViewScaleValue);
                        a.pos(i, n)
                    }
                }
            }
        },
        fitViewW: function() {
            return Game.ViewWidth > Game.UIWidth
        },
        fitViewH: function() {
            return Game.ViewHeight > Game.UIHeight
        },
        autoW: function(e) {
            if (Game.Adapter) {
                if (e instanceof Laya.Node) {
                    if (e.parent) {
                        e.width = e.parent.width
                    }
                } else if (e instanceof Array) {
                    for (var t = 0; t < e.length; t++) {
                        var i = e[t];
                        if (i.parent) {
                            i.width = i.parent.width
                        }
                    }
                }
            }
        },
        center: function(e) {
            if (e && Game.Adapter) {
                e.x = Game.UIWidth * (Game.ViewScaleValue - 1) / 2
            }
        },
        middle: function(e) {
            if (e && Game.Adapter) {
                e.y = Game.UIHeight * (Game.ViewScaleValue - 1) / 2
            }
        },
        getOffsetX: function() {
            return Math.floor((Game.ViewWidth - Game.UIWidth) / 2 * 1e3) / 1e3
        }
    }
} ();
var SceneTimer = function() {
    function e() {}
    var t = e.prototype;
    t.init = function(e, t) {
        this.updateCall = null;
        this.leftTime = e;
        this.fmt = t ? t: "mm:ss";
        this._stop = false;
        Laya.stage.once(Laya.Event.def_LeaveFishScene, this, this.stop)
    };
    t.loop = function() {
        if (this.leftTime >= 1) {
            this.leftTime -= 1;
            var e = Utils.secondToCountDownTime(this.leftTime, this.fmt);
            this.updateCall && this.updateCall(this.leftTime, e);
            if (!this._stop) {
                Laya.timer.once(1e3, this, this.loop)
            } else if (this.leftTime == 0) {
                this.stop()
            }
        }
    };
    t.start = function(e) {
        console.log("SceneTimer start ...");
        if (e) {
            this.leftTime = e
        }
        this.loop();
        Laya.timer.once(1e3, this, this.loop)
    };
    t.stop = function() {
        this._stop = true;
        i = null
    };
    var i = null;
    e.I = function() {
        if (!i) {
            i = new e
        }
        return i
    };
    return e
} ();
var hexcase = 0;
var b64pad = "";
var chrsz = 8;
function hex_md5(e) {
    return binl2hex(core_md5(str2binl(e), e.length * chrsz))
}
function b64_md5(e) {
    return binl2b64(core_md5(str2binl(e), e.length * chrsz))
}
function str_md5(e) {
    return binl2str(core_md5(str2binl(e), e.length * chrsz))
}
function hex_hmac_md5(e, t) {
    return binl2hex(core_hmac_md5(e, t))
}
function b64_hmac_md5(e, t) {
    return binl2b64(core_hmac_md5(e, t))
}
function str_hmac_md5(e, t) {
    return binl2str(core_hmac_md5(e, t))
}
function md5_vm_test() {
    return hex_md5("abc") == "900150983cd24fb0d6963f7d28e17f72"
}
function core_md5(e, t) {
    e[t >> 5] |= 128 << t % 32;
    e[(t + 64 >>> 9 << 4) + 14] = t;
    var i = 1732584193;
    var n = -271733879;
    var s = -1732584194;
    var a = 271733878;
    for (var r = 0; r < e.length; r += 16) {
        var o = i;
        var l = n;
        var h = s;
        var u = a;
        i = md5_ff(i, n, s, a, e[r + 0], 7, -680876936);
        a = md5_ff(a, i, n, s, e[r + 1], 12, -389564586);
        s = md5_ff(s, a, i, n, e[r + 2], 17, 606105819);
        n = md5_ff(n, s, a, i, e[r + 3], 22, -1044525330);
        i = md5_ff(i, n, s, a, e[r + 4], 7, -176418897);
        a = md5_ff(a, i, n, s, e[r + 5], 12, 1200080426);
        s = md5_ff(s, a, i, n, e[r + 6], 17, -1473231341);
        n = md5_ff(n, s, a, i, e[r + 7], 22, -45705983);
        i = md5_ff(i, n, s, a, e[r + 8], 7, 1770035416);
        a = md5_ff(a, i, n, s, e[r + 9], 12, -1958414417);
        s = md5_ff(s, a, i, n, e[r + 10], 17, -42063);
        n = md5_ff(n, s, a, i, e[r + 11], 22, -1990404162);
        i = md5_ff(i, n, s, a, e[r + 12], 7, 1804603682);
        a = md5_ff(a, i, n, s, e[r + 13], 12, -40341101);
        s = md5_ff(s, a, i, n, e[r + 14], 17, -1502002290);
        n = md5_ff(n, s, a, i, e[r + 15], 22, 1236535329);
        i = md5_gg(i, n, s, a, e[r + 1], 5, -165796510);
        a = md5_gg(a, i, n, s, e[r + 6], 9, -1069501632);
        s = md5_gg(s, a, i, n, e[r + 11], 14, 643717713);
        n = md5_gg(n, s, a, i, e[r + 0], 20, -373897302);
        i = md5_gg(i, n, s, a, e[r + 5], 5, -701558691);
        a = md5_gg(a, i, n, s, e[r + 10], 9, 38016083);
        s = md5_gg(s, a, i, n, e[r + 15], 14, -660478335);
        n = md5_gg(n, s, a, i, e[r + 4], 20, -405537848);
        i = md5_gg(i, n, s, a, e[r + 9], 5, 568446438);
        a = md5_gg(a, i, n, s, e[r + 14], 9, -1019803690);
        s = md5_gg(s, a, i, n, e[r + 3], 14, -187363961);
        n = md5_gg(n, s, a, i, e[r + 8], 20, 1163531501);
        i = md5_gg(i, n, s, a, e[r + 13], 5, -1444681467);
        a = md5_gg(a, i, n, s, e[r + 2], 9, -51403784);
        s = md5_gg(s, a, i, n, e[r + 7], 14, 1735328473);
        n = md5_gg(n, s, a, i, e[r + 12], 20, -1926607734);
        i = md5_hh(i, n, s, a, e[r + 5], 4, -378558);
        a = md5_hh(a, i, n, s, e[r + 8], 11, -2022574463);
        s = md5_hh(s, a, i, n, e[r + 11], 16, 1839030562);
        n = md5_hh(n, s, a, i, e[r + 14], 23, -35309556);
        i = md5_hh(i, n, s, a, e[r + 1], 4, -1530992060);
        a = md5_hh(a, i, n, s, e[r + 4], 11, 1272893353);
        s = md5_hh(s, a, i, n, e[r + 7], 16, -155497632);
        n = md5_hh(n, s, a, i, e[r + 10], 23, -1094730640);
        i = md5_hh(i, n, s, a, e[r + 13], 4, 681279174);
        a = md5_hh(a, i, n, s, e[r + 0], 11, -358537222);
        s = md5_hh(s, a, i, n, e[r + 3], 16, -722521979);
        n = md5_hh(n, s, a, i, e[r + 6], 23, 76029189);
        i = md5_hh(i, n, s, a, e[r + 9], 4, -640364487);
        a = md5_hh(a, i, n, s, e[r + 12], 11, -421815835);
        s = md5_hh(s, a, i, n, e[r + 15], 16, 530742520);
        n = md5_hh(n, s, a, i, e[r + 2], 23, -995338651);
        i = md5_ii(i, n, s, a, e[r + 0], 6, -198630844);
        a = md5_ii(a, i, n, s, e[r + 7], 10, 1126891415);
        s = md5_ii(s, a, i, n, e[r + 14], 15, -1416354905);
        n = md5_ii(n, s, a, i, e[r + 5], 21, -57434055);
        i = md5_ii(i, n, s, a, e[r + 12], 6, 1700485571);
        a = md5_ii(a, i, n, s, e[r + 3], 10, -1894986606);
        s = md5_ii(s, a, i, n, e[r + 10], 15, -1051523);
        n = md5_ii(n, s, a, i, e[r + 1], 21, -2054922799);
        i = md5_ii(i, n, s, a, e[r + 8], 6, 1873313359);
        a = md5_ii(a, i, n, s, e[r + 15], 10, -30611744);
        s = md5_ii(s, a, i, n, e[r + 6], 15, -1560198380);
        n = md5_ii(n, s, a, i, e[r + 13], 21, 1309151649);
        i = md5_ii(i, n, s, a, e[r + 4], 6, -145523070);
        a = md5_ii(a, i, n, s, e[r + 11], 10, -1120210379);
        s = md5_ii(s, a, i, n, e[r + 2], 15, 718787259);
        n = md5_ii(n, s, a, i, e[r + 9], 21, -343485551);
        i = safe_add(i, o);
        n = safe_add(n, l);
        s = safe_add(s, h);
        a = safe_add(a, u)
    }
    return Array(i, n, s, a)
}
function md5_cmn(e, t, i, n, s, a) {
    return safe_add(bit_rol(safe_add(safe_add(t, e), safe_add(n, a)), s), i)
}
function md5_ff(e, t, i, n, s, a, r) {
    return md5_cmn(t & i | ~t & n, e, t, s, a, r)
}
function md5_gg(e, t, i, n, s, a, r) {
    return md5_cmn(t & n | i & ~n, e, t, s, a, r)
}
function md5_hh(e, t, i, n, s, a, r) {
    return md5_cmn(t ^ i ^ n, e, t, s, a, r)
}
function md5_ii(e, t, i, n, s, a, r) {
    return md5_cmn(i ^ (t | ~n), e, t, s, a, r)
}
function core_hmac_md5(e, t) {
    var i = str2binl(e);
    if (i.length > 16) i = core_md5(i, e.length * chrsz);
    var n = Array(16),
    s = Array(16);
    for (var a = 0; a < 16; a++) {
        n[a] = i[a] ^ 909522486;
        s[a] = i[a] ^ 1549556828
    }
    var r = core_md5(n.concat(str2binl(t)), 512 + t.length * chrsz);
    return core_md5(s.concat(r), 512 + 128)
}
function safe_add(e, t) {
    var i = (e & 65535) + (t & 65535);
    var n = (e >> 16) + (t >> 16) + (i >> 16);
    return n << 16 | i & 65535
}
function bit_rol(e, t) {
    return e << t | e >>> 32 - t
}
function str2binl(e) {
    var t = Array();
    var i = (1 << chrsz) - 1;
    for (var n = 0; n < e.length * chrsz; n += chrsz) t[n >> 5] |= (e.charCodeAt(n / chrsz) & i) << n % 32;
    return t
}
function binl2str(e) {
    var t = "";
    var i = (1 << chrsz) - 1;
    for (var n = 0; n < e.length * 32; n += chrsz) t += String.fromCharCode(e[n >> 5] >>> n % 32 & i);
    return t
}
function binl2hex(e) {
    var t = hexcase ? "0123456789ABCDEF": "0123456789abcdef";
    var i = "";
    for (var n = 0; n < e.length * 4; n++) {
        i += t.charAt(e[n >> 2] >> n % 4 * 8 + 4 & 15) + t.charAt(e[n >> 2] >> n % 4 * 8 & 15)
    }
    return i
}
function binl2b64(e) {
    var t = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
    var i = "";
    for (var n = 0; n < e.length * 4; n += 3) {
        var s = (e[n >> 2] >> 8 * (n % 4) & 255) << 16 | (e[n + 1 >> 2] >> 8 * ((n + 1) % 4) & 255) << 8 | e[n + 2 >> 2] >> 8 * ((n + 2) % 4) & 255;
        for (var a = 0; a < 4; a++) {
            if (n * 8 + a * 6 > e.length * 32) i += b64pad;
            else i += t.charAt(s >> 6 * (3 - a) & 63)
        }
    }
    return i
}
var _gsScope = typeof module !== "undefined" && module.exports && typeof global !== "undefined" ? global: this || window;
_gsScope = window; (_gsScope._gsQueue || (_gsScope._gsQueue = [])).push(function() {
    "use strict";
    var b = 180 / Math.PI,
    S = [],
    C = [],
    w = [],
    m = {},
    i = _gsScope._gsDefine.globals,
    v = function(e, t, i, n) {
        if (i === n) {
            i = n - (n - t) / 1e6
        }
        if (e === t) {
            t = e + (i - e) / 1e6
        }
        this.a = e;
        this.b = t;
        this.c = i;
        this.d = n;
        this.da = n - e;
        this.ca = i - e;
        this.ba = t - e
    },
    y = ",x,y,z,left,top,right,bottom,marginTop,marginLeft,marginRight,marginBottom,paddingLeft,paddingTop,paddingRight,paddingBottom,backgroundPosition,backgroundPosition_y,",
    x = function(e, t, i, n) {
        var s = {
            a: e
        },
        a = {},
        r = {},
        o = {
            c: n
        },
        l = (e + t) / 2,
        h = (t + i) / 2,
        u = (i + n) / 2,
        c = (l + h) / 2,
        f = (h + u) / 2,
        d = (f - c) / 8;
        s.b = l + (e - l) / 4;
        a.b = c + d;
        s.c = a.a = (s.b + a.b) / 2;
        a.c = r.a = (c + f) / 2;
        r.b = f - d;
        o.b = u + (n - u) / 4;
        r.c = o.a = (r.b + o.b) / 2;
        return [s, a, r, o]
    },
    I = function(e, t, i, n, s) {
        var a = e.length - 1,
        r = 0,
        o = e[0].a,
        l,
        h,
        u,
        c,
        f,
        d,
        g,
        p,
        _,
        m,
        v,
        y,
        I;
        for (l = 0; l < a; l++) {
            f = e[r];
            h = f.a;
            u = f.d;
            c = e[r + 1].d;
            if (s) {
                v = S[l];
                y = C[l];
                I = (y + v) * t * .25 / (n ? .5 : w[l] || .5);
                d = u - (u - h) * (n ? t * .5 : v !== 0 ? I / v: 0);
                g = u + (c - u) * (n ? t * .5 : y !== 0 ? I / y: 0);
                p = u - (d + ((g - d) * (v * 3 / (v + y) + .5) / 4 || 0))
            } else {
                d = u - (u - h) * t * .5;
                g = u + (c - u) * t * .5;
                p = u - (d + g) / 2
            }
            d += p;
            g += p;
            f.c = _ = d;
            if (l !== 0) {
                f.b = o
            } else {
                f.b = o = f.a + (f.c - f.a) * .6
            }
            f.da = u - h;
            f.ca = _ - h;
            f.ba = o - h;
            if (i) {
                m = x(h, o, _, u);
                e.splice(r, 1, m[0], m[1], m[2], m[3]);
                r += 4
            } else {
                r++
            }
            o = g
        }
        f = e[r];
        f.b = o;
        f.c = o + (f.d - o) * .4;
        f.da = f.d - f.a;
        f.ca = f.c - f.a;
        f.ba = o - f.a;
        if (i) {
            m = x(f.a, o, f.c, f.d);
            e.splice(r, 1, m[0], m[1], m[2], m[3])
        }
    },
    R = function(e, t, i, n) {
        var s = [],
        a,
        r,
        o,
        l,
        h,
        u;
        if (n) {
            e = [n].concat(e);
            r = e.length;
            while (--r > -1) {
                if (typeof(u = e[r][t]) === "string") if (u.charAt(1) === "=") {
                    e[r][t] = n[t] + Number(u.charAt(0) + u.substr(2))
                }
            }
        }
        a = e.length - 2;
        if (a < 0) {
            s[0] = new v(e[0][t], 0, 0, e[0][t]);
            return s
        }
        for (r = 0; r < a; r++) {
            o = e[r][t];
            l = e[r + 1][t];
            s[r] = new v(o, 0, 0, l);
            if (i) {
                h = e[r + 2][t];
                S[r] = (S[r] || 0) + (l - o) * (l - o);
                C[r] = (C[r] || 0) + (h - l) * (h - l)
            }
        }
        s[r] = new v(e[r][t], 0, 0, e[r + 1][t]);
        return s
    },
    d = function(e, t, i, n, s, a) {
        var r = {},
        o = [],
        l = a || e[0],
        h,
        u,
        c,
        f,
        d,
        g,
        p,
        _;
        s = typeof s === "string" ? "," + s + ",": y;
        if (t == null) {
            t = 1
        }
        for (u in e[0]) {
            o.push(u)
        }
        if (e.length > 1) {
            _ = e[e.length - 1];
            p = true;
            h = o.length;
            while (--h > -1) {
                u = o[h];
                if (Math.abs(l[u] - _[u]) > .05) {
                    p = false;
                    break
                }
            }
            if (p) {
                e = e.concat();
                if (a) {
                    e.unshift(a)
                }
                e.push(e[1]);
                a = e[e.length - 3]
            }
        }
        S.length = C.length = w.length = 0;
        h = o.length;
        while (--h > -1) {
            u = o[h];
            m[u] = s.indexOf("," + u + ",") !== -1;
            r[u] = R(e, u, m[u], a)
        }
        h = S.length;
        while (--h > -1) {
            S[h] = Math.sqrt(S[h]);
            C[h] = Math.sqrt(C[h])
        }
        if (!n) {
            h = o.length;
            while (--h > -1) {
                if (m[u]) {
                    c = r[o[h]];
                    g = c.length - 1;
                    for (f = 0; f < g; f++) {
                        d = c[f + 1].da / C[f] + c[f].da / S[f] || 0;
                        w[f] = (w[f] || 0) + d * d
                    }
                }
            }
            h = w.length;
            while (--h > -1) {
                w[h] = Math.sqrt(w[h])
            }
        }
        h = o.length;
        f = i ? 4 : 1;
        while (--h > -1) {
            u = o[h];
            c = r[u];
            I(c, t, i, n, m[u]);
            if (p) {
                c.splice(0, f);
                c.splice(c.length - f, f)
            }
        }
        return r
    },
    g = function(e, t, i) {
        t = t || "soft";
        var n = {},
        s = t === "cubic" ? 3 : 2,
        a = t === "soft",
        r = [],
        o,
        l,
        h,
        u,
        c,
        f,
        d,
        g,
        p,
        _,
        m;
        if (a && i) {
            e = [i].concat(e)
        }
        if (e == null || e.length < s + 1) {
            throw "invalid Bezier data"
        }
        for (p in e[0]) {
            r.push(p)
        }
        f = r.length;
        while (--f > -1) {
            p = r[f];
            n[p] = c = [];
            _ = 0;
            g = e.length;
            for (d = 0; d < g; d++) {
                o = i == null ? e[d][p] : typeof(m = e[d][p]) === "string" && m.charAt(1) === "=" ? i[p] + Number(m.charAt(0) + m.substr(2)) : Number(m);
                if (a) if (d > 1) if (d < g - 1) {
                    c[_++] = (o + c[_ - 2]) / 2
                }
                c[_++] = o
            }
            g = _ - s + 1;
            _ = 0;
            for (d = 0; d < g; d += s) {
                o = c[d];
                l = c[d + 1];
                h = c[d + 2];
                u = s === 2 ? 0 : c[d + 3];
                c[_++] = m = s === 3 ? new v(o, l, h, u) : new v(o, (2 * l + o) / 3, (2 * l + h) / 3, h)
            }
            c.length = _
        }
        return n
    },
    p = function(e, t, i) {
        var n = 1 / i,
        s = e.length,
        a, r, o, l, h, u, c, f, d, g, p;
        while (--s > -1) {
            g = e[s];
            o = g.a;
            l = g.d - o;
            h = g.c - o;
            u = g.b - o;
            a = r = 0;
            for (f = 1; f <= i; f++) {
                c = n * f;
                d = 1 - c;
                a = r - (r = (c * c * l + 3 * d * (c * h + d * u)) * c);
                p = s * i + f - 1;
                t[p] = (t[p] || 0) + a * a
            }
        }
    },
    _ = function(e, t) {
        t = t >> 0 || 6;
        var i = [],
        n = [],
        s = 0,
        a = 0,
        r = t - 1,
        o = [],
        l = [],
        h,
        u,
        c,
        f;
        for (h in e) {
            p(e[h], i, t)
        }
        c = i.length;
        for (u = 0; u < c; u++) {
            s += Math.sqrt(i[u]);
            f = u % t;
            l[f] = s;
            if (f === r) {
                a += s;
                f = u / t >> 0;
                o[f] = l;
                n[f] = a;
                s = 0;
                l = []
            }
        }
        return {
            length: a,
            lengths: n,
            segments: o
        }
    },
    L = _gsScope._gsDefine.plugin({
        propName: "bezier",
        priority: -1,
        version: "1.3.8",
        API: 2,
        global: true,
        init: function(e, t, i) {
            this._target = e;
            if (t instanceof Array) {
                t = {
                    values: t
                }
            }
            this._func = {};
            this._mod = {};
            this._props = [];
            this._timeRes = t.timeResolution == null ? 6 : parseInt(t.timeResolution, 10);
            var n = t.values || [],
            s = {},
            a = n[0],
            r = t.autoRotate || i.vars.orientToBezier,
            o,
            l,
            h,
            u,
            c;
            this._autoRotate = r ? r instanceof Array ? r: [["x", "y", "rotation", r === true ? 0 : Number(r) || 0]] : null;
            for (o in a) {
                this._props.push(o)
            }
            h = this._props.length;
            while (--h > -1) {
                o = this._props[h];
                this._overwriteProps.push(o);
                l = this._func[o] = typeof e[o] === "function";
                s[o] = !l ? parseFloat(e[o]) : e[o.indexOf("set") || typeof e["get" + o.substr(3)] !== "function" ? o: "get" + o.substr(3)]();
                if (!c) if (s[o] !== n[0][o]) {
                    c = s
                }
            }
            this._beziers = t.type !== "cubic" && t.type !== "quadratic" && t.type !== "soft" ? d(n, isNaN(t.curviness) ? 1 : t.curviness, false, t.type === "thruBasic", t.correlate, c) : g(n, t.type, s);
            this._segCount = this._beziers[o].length;
            if (this._timeRes) {
                var f = _(this._beziers, this._timeRes);
                this._length = f.length;
                this._lengths = f.lengths;
                this._segments = f.segments;
                this._l1 = this._li = this._s1 = this._si = 0;
                this._l2 = this._lengths[0];
                this._curSeg = this._segments[0];
                this._s2 = this._curSeg[0];
                this._prec = 1 / this._curSeg.length
            }
            if (r = this._autoRotate) {
                this._initialRotations = [];
                if (! (r[0] instanceof Array)) {
                    this._autoRotate = r = [r]
                }
                h = r.length;
                while (--h > -1) {
                    for (u = 0; u < 3; u++) {
                        o = r[h][u];
                        this._func[o] = typeof e[o] === "function" ? e[o.indexOf("set") || typeof e["get" + o.substr(3)] !== "function" ? o: "get" + o.substr(3)] : false
                    }
                    o = r[h][2];
                    this._initialRotations[h] = (this._func[o] ? this._func[o].call(this._target) : this._target[o]) || 0;
                    this._overwriteProps.push(o)
                }
            }
            this._startRatio = i.vars.runBackwards ? 1 : 0;
            return true
        },
        set: function(e) {
            var t = this._segCount,
            i = this._func,
            n = this._target,
            s = e !== this._startRatio,
            a, r, o, l, h, u, c, f, d, g;
            if (!this._timeRes) {
                a = e < 0 ? 0 : e >= 1 ? t - 1 : t * e >> 0;
                u = (e - a * (1 / t)) * t
            } else {
                d = this._lengths;
                g = this._curSeg;
                e *= this._length;
                o = this._li;
                if (e > this._l2 && o < t - 1) {
                    f = t - 1;
                    while (o < f && (this._l2 = d[++o]) <= e) {}
                    this._l1 = d[o - 1];
                    this._li = o;
                    this._curSeg = g = this._segments[o];
                    this._s2 = g[this._s1 = this._si = 0]
                } else if (e < this._l1 && o > 0) {
                    while (o > 0 && (this._l1 = d[--o]) >= e) {}
                    if (o === 0 && e < this._l1) {
                        this._l1 = 0
                    } else {
                        o++
                    }
                    this._l2 = d[o];
                    this._li = o;
                    this._curSeg = g = this._segments[o];
                    this._s1 = g[(this._si = g.length - 1) - 1] || 0;
                    this._s2 = g[this._si]
                }
                a = o;
                e -= this._l1;
                o = this._si;
                if (e > this._s2 && o < g.length - 1) {
                    f = g.length - 1;
                    while (o < f && (this._s2 = g[++o]) <= e) {}
                    this._s1 = g[o - 1];
                    this._si = o
                } else if (e < this._s1 && o > 0) {
                    while (o > 0 && (this._s1 = g[--o]) >= e) {}
                    if (o === 0 && e < this._s1) {
                        this._s1 = 0
                    } else {
                        o++
                    }
                    this._s2 = g[o];
                    this._si = o
                }
                u = (o + (e - this._s1) / (this._s2 - this._s1)) * this._prec || 0
            }
            r = 1 - u;
            o = this._props.length;
            while (--o > -1) {
                l = this._props[o];
                h = this._beziers[l][a];
                c = (u * u * h.da + 3 * r * (u * h.ca + r * h.ba)) * u + h.a;
                if (this._mod[l]) {
                    c = this._mod[l](c, n)
                }
                if (i[l]) {
                    n[l](c)
                } else {
                    n[l] = c
                }
            }
            if (this._autoRotate) {
                var p = this._autoRotate,
                _, m, v, y, I, S, C;
                o = p.length;
                while (--o > -1) {
                    l = p[o][2];
                    S = p[o][3] || 0;
                    C = p[o][4] === true ? 1 : b;
                    h = this._beziers[p[o][0]];
                    _ = this._beziers[p[o][1]];
                    if (h && _) {
                        h = h[a];
                        _ = _[a];
                        m = h.a + (h.b - h.a) * u;
                        y = h.b + (h.c - h.b) * u;
                        m += (y - m) * u;
                        y += (h.c + (h.d - h.c) * u - y) * u;
                        v = _.a + (_.b - _.a) * u;
                        I = _.b + (_.c - _.b) * u;
                        v += (I - v) * u;
                        I += (_.c + (_.d - _.c) * u - I) * u;
                        c = s ? Math.atan2(I - v, y - m) * C + S: this._initialRotations[o];
                        if (this._mod[l]) {
                            c = this._mod[l](c, n)
                        }
                        if (i[l]) {
                            n[l](c)
                        } else {
                            n[l] = c
                        }
                    }
                }
            }
        }
    }),
    e = L.prototype;
    L.bezierThrough = d;
    L.cubicToQuadratic = x;
    L._autoCSS = true;
    L.quadraticToCubic = function(e, t, i) {
        return new v(e, (2 * t + e) / 3, (2 * t + i) / 3, i)
    };
    L._cssRegister = function() {
        var e = i.CSSPlugin;
        if (!e) {
            return
        }
        var t = e._internals,
        d = t._parseToProxy,
        g = t._setPluginRatio,
        p = t.CSSPropTween;
        t._registerComplexSpecialProp("bezier", {
            parser: function(e, t, i, n, s, a) {
                if (t instanceof Array) {
                    t = {
                        values: t
                    }
                }
                a = new L;
                var r = t.values,
                o = r.length - 1,
                l = [],
                h = {},
                u,
                c,
                f;
                if (o < 0) {
                    return s
                }
                for (u = 0; u <= o; u++) {
                    f = d(e, r[u], n, s, a, o !== u);
                    l[u] = f.end
                }
                for (c in t) {
                    h[c] = t[c]
                }
                h.values = l;
                s = new p(e, "bezier", 0, 0, f.pt, 2);
                s.data = f;
                s.plugin = a;
                s.setRatio = g;
                if (h.autoRotate === 0) {
                    h.autoRotate = true
                }
                if (h.autoRotate && !(h.autoRotate instanceof Array)) {
                    u = h.autoRotate === true ? 0 : Number(h.autoRotate);
                    h.autoRotate = f.end.left != null ? [["left", "top", "rotation", u, false]] : f.end.x != null ? [["x", "y", "rotation", u, false]] : false
                }
                if (h.autoRotate) {
                    if (!n._transform) {
                        n._enableTransforms(false)
                    }
                    f.autoRotate = n._target._gsTransform;
                    f.proxy.rotation = f.autoRotate.rotation || 0;
                    n._overwriteProps.push("rotation")
                }
                a._onInitTween(f.proxy, h, n._tween);
                return s
            }
        })
    };
    e._mod = function(e) {
        var t = this._overwriteProps,
        i = t.length,
        n;
        while (--i > -1) {
            n = e[t[i]];
            if (n && typeof n === "function") {
                this._mod[t[i]] = n
            }
        }
    };
    e._kill = function(e) {
        var t = this._props,
        i, n;
        for (i in this._beziers) {
            if (i in e) {
                delete this._beziers[i];
                delete this._func[i];
                n = t.length;
                while (--n > -1) {
                    if (t[n] === i) {
                        t.splice(n, 1)
                    }
                }
            }
        }
        t = this._autoRotate;
        if (t) {
            n = t.length;
            while (--n > -1) {
                if (e[t[n][2]]) {
                    t.splice(n, 1)
                }
            }
        }
        return this._super._kill.call(this, e)
    }
});
if (_gsScope._gsDefine) {
    _gsScope._gsQueue.pop()()
} (function(e) {
    "use strict";
    var t = function() {
        return (_gsScope.GreenSockGlobals || _gsScope)[e]
    };
    if (typeof module !== "undefined" && module.exports) {} else if (typeof define === "function" && define.amd) {
        define(["TweenLite"], t)
    }
})("BezierPlugin"); (function(f, d) {
    "use strict";
    var g = {},
    n = f.document,
    p = f.GreenSockGlobals = f.GreenSockGlobals || f;
    if (p.TweenLite) {
        return
    }
    var _ = function(e) {
        var t = e.split("."),
        i = p,
        n;
        for (n = 0; n < t.length; n++) {
            i[t[n]] = i = i[t[n]] || {}
        }
        return i
    },
    c = _("com.greensock"),
    m = 1e-10,
    l = function(e) {
        var t = [],
        i = e.length,
        n;
        for (n = 0; n !== i; t.push(e[n++])) {}
        return t
    },
    v = function() {},
    y = function() {
        var t = Object.prototype.toString,
        i = t.call([]);
        return function(e) {
            return e != null && (e instanceof Array || typeof e === "object" && !!e.push && t.call(e) === i)
        }
    } (),
    e,
    t,
    i,
    I,
    S,
    C = {},
    b = function(o, l, h, u) {
        this.sc = C[o] ? C[o].sc: [];
        C[o] = this;
        this.gsClass = null;
        this.func = h;
        var c = [];
        this.check = function(e) {
            var t = l.length,
            i = t,
            n, s, a, r;
            while (--t > -1) {
                if ((n = C[l[t]] || new b(l[t], [])).gsClass) {
                    c[t] = n.gsClass;
                    i--
                } else if (e) {
                    n.sc.push(this)
                }
            }
            if (i === 0 && h) {
                s = ("com.greensock." + o).split(".");
                a = s.pop();
                r = _(s.join("."))[a] = this.gsClass = h.apply(h, c);
                if (u) {
                    p[a] = g[a] = r;
                    if (typeof module !== "undefined" && module.exports) {
                        if (o === d) {
                            module.exports = g[d] = r;
                            for (t in g) {
                                r[t] = g[t]
                            }
                        } else if (g[d]) {
                            g[d][a] = r
                        }
                    } else if (typeof define === "function" && define.amd) {
                        define((f.GreenSockAMDPath ? f.GreenSockAMDPath + "/": "") + o.split(".").pop(), [],
                        function() {
                            return r
                        })
                    }
                }
                for (t = 0; t < this.sc.length; t++) {
                    this.sc[t].check()
                }
            }
        };
        this.check(true)
    },
    s = f._gsDefine = function(e, t, i, n) {
        return new b(e, t, i, n)
    },
    w = c._class = function(e, t, i) {
        t = t ||
        function() {};
        s(e, [],
        function() {
            return t
        },
        i);
        return t
    };
    s.globals = p;
    var a = [0, 0, 1, 1],
    x = w("easing.Ease",
    function(e, t, i, n) {
        this._func = e;
        this._type = i || 0;
        this._power = n || 0;
        this._params = t ? a.concat(t) : a
    },
    true),
    R = x.map = {},
    r = x.register = function(e, t, i, n) {
        var s = t.split(","),
        a = s.length,
        r = (i || "easeIn,easeOut,easeInOut").split(","),
        o,
        l,
        h,
        u;
        while (--a > -1) {
            l = s[a];
            o = n ? w("easing." + l, null, true) : c.easing[l] || {};
            h = r.length;
            while (--h > -1) {
                u = r[h];
                R[l + "." + u] = R[u + l] = o[u] = e.getRatio ? e: e[u] || new e
            }
        }
    };
    i = x.prototype;
    i._calcEnd = false;
    i.getRatio = function(e) {
        if (this._func) {
            this._params[0] = e;
            return this._func.apply(null, this._params)
        }
        var t = this._type,
        i = this._power,
        n = t === 1 ? 1 - e: t === 2 ? e: e < .5 ? e * 2 : (1 - e) * 2;
        if (i === 1) {
            n *= n
        } else if (i === 2) {
            n *= n * n
        } else if (i === 3) {
            n *= n * n * n
        } else if (i === 4) {
            n *= n * n * n * n
        }
        return t === 1 ? 1 - n: t === 2 ? n: e < .5 ? n / 2 : 1 - n / 2
    };
    e = ["Linear", "Quad", "Cubic", "Quart", "Quint,Strong"];
    t = e.length;
    while (--t > -1) {
        i = e[t] + ",Power" + t;
        r(new x(null, null, 1, t), i, "easeOut", true);
        r(new x(null, null, 2, t), i, "easeIn" + (t === 0 ? ",easeNone": ""));
        r(new x(null, null, 3, t), i, "easeInOut")
    }
    R.linear = c.easing.Linear.easeIn;
    R.swing = c.easing.Quad.easeInOut;
    var L = w("events.EventDispatcher",
    function(e) {
        this._listeners = {};
        this._eventTarget = e || this
    });
    i = L.prototype;
    i.addEventListener = function(e, t, i, n, s) {
        s = s || 0;
        var a = this._listeners[e],
        r = 0,
        o,
        l;
        if (this === I && !S) {
            I.wake()
        }
        if (a == null) {
            this._listeners[e] = a = []
        }
        l = a.length;
        while (--l > -1) {
            o = a[l];
            if (o.c === t && o.s === i) {
                a.splice(l, 1)
            } else if (r === 0 && o.pr < s) {
                r = l + 1
            }
        }
        a.splice(r, 0, {
            c: t,
            s: i,
            up: n,
            pr: s
        })
    };
    i.removeEventListener = function(e, t) {
        var i = this._listeners[e],
        n;
        if (i) {
            n = i.length;
            while (--n > -1) {
                if (i[n].c === t) {
                    i.splice(n, 1);
                    return
                }
            }
        }
    };
    i.dispatchEvent = function(e) {
        var t = this._listeners[e],
        i,
        n,
        s;
        if (t) {
            i = t.length;
            if (i > 1) {
                t = t.slice(0)
            }
            n = this._eventTarget;
            while (--i > -1) {
                s = t[i];
                if (s) {
                    if (s.up) {
                        s.c.call(s.s || n, {
                            type: e,
                            target: n
                        })
                    } else {
                        s.c.call(s.s || n)
                    }
                }
            }
        }
    };
    var T = f.requestAnimationFrame,
    D = f.cancelAnimationFrame,
    k = Date.now ||
    function() {
        return (new Date).getTime()
    },
    G = k();
    e = ["ms", "moz", "webkit", "o"];
    t = e.length;
    while (--t > -1 && !T) {
        T = f[e[t] + "RequestAnimationFrame"];
        D = f[e[t] + "CancelAnimationFrame"] || f[e[t] + "CancelRequestAnimationFrame"]
    }
    w("Ticker",
    function(e, t) {
        var s = this,
        a = k(),
        i = t !== false && T ? "auto": false,
        r = 500,
        o = 33,
        l = "tick",
        h,
        u,
        c,
        f,
        d,
        g = function(e) {
            var t = k() - G,
            i,
            n;
            if (t > r) {
                a += t - o
            }
            G += t;
            s.time = (G - a) / 1e3;
            i = s.time - d;
            if (!h || i > 0 || e === true) {
                s.frame++;
                d += i + (i >= f ? .004 : f - i);
                n = true
            }
            if (e !== true) {
                c = u(g)
            }
            if (n) {
                s.dispatchEvent(l)
            }
        };
        L.call(s);
        s.time = s.frame = 0;
        s.tick = function() {
            g(true)
        };
        s.lagSmoothing = function(e, t) {
            r = e || 1 / m;
            o = Math.min(t, r, 0)
        };
        s.sleep = function() {
            if (c == null) {
                return
            }
            if (!i || !D) {
                clearTimeout(c)
            } else {
                D(c)
            }
            u = v;
            c = null;
            if (s === I) {
                S = false
            }
        };
        s.wake = function(e) {
            if (c !== null) {
                s.sleep()
            } else if (e) {
                a += -G + (G = k())
            } else if (s.frame > 10) {
                G = k() - r + 5
            }
            u = h === 0 ? v: !i || !T ?
            function(e) {
                return setTimeout(e, (d - s.time) * 1e3 + 1 | 0)
            }: T;
            if (s === I) {
                S = true
            }
            g(2)
        };
        s.fps = function(e) {
            if (!arguments.length) {
                return h
            }
            h = e;
            f = 1 / (h || 60);
            d = this.time + f;
            s.wake()
        };
        s.useRAF = function(e) {
            if (!arguments.length) {
                return i
            }
            s.sleep();
            i = e;
            s.fps(h)
        };
        s.fps(e);
        setTimeout(function() {
            if (i === "auto" && s.frame < 5 && n.visibilityState !== "hidden") {
                s.useRAF(false)
            }
        },
        1500)
    });
    i = c.Ticker.prototype = new c.events.EventDispatcher;
    i.constructor = c.Ticker;
    var h = w("core.Animation",
    function(e, t) {
        this.vars = t = t || {};
        this._duration = this._totalDuration = e || 0;
        this._delay = Number(t.delay) || 0;
        this._timeScale = 1;
        this._active = t.immediateRender === true;
        this.data = t.data;
        this._reversed = t.reversed === true;
        if (!J) {
            return
        }
        if (!S) {
            I.wake()
        }
        var i = this.vars.useFrames ? X: J;
        i.add(this, i._time);
        if (this.vars.paused) {
            this.paused(true)
        }
    });
    I = h.ticker = new c.Ticker;
    i = h.prototype;
    i._dirty = i._gc = i._initted = i._paused = false;
    i._totalTime = i._time = 0;
    i._rawPrevTime = -1;
    i._next = i._last = i._onUpdate = i._timeline = i.timeline = null;
    i._paused = false;
    var o = function() {
        if (S && k() - G > 2e3 && n.visibilityState !== "hidden") {
            I.wake()
        }
        var e = setTimeout(o, 2e3);
        if (e.unref) {
            e.unref()
        }
    };
    i.play = function(e, t) {
        if (e != null) {
            this.seek(e, t)
        }
        return this.reversed(false).paused(false)
    };
    i.pause = function(e, t) {
        if (e != null) {
            this.seek(e, t)
        }
        return this.paused(true)
    };
    i.resume = function(e, t) {
        if (e != null) {
            this.seek(e, t)
        }
        return this.paused(false)
    };
    i.seek = function(e, t) {
        return this.totalTime(Number(e), t !== false)
    };
    i.restart = function(e, t) {
        return this.reversed(false).paused(false).totalTime(e ? -this._delay: 0, t !== false, true)
    };
    i.reverse = function(e, t) {
        if (e != null) {
            this.seek(e || this.totalDuration(), t)
        }
        return this.reversed(true).paused(false)
    };
    i.render = function(e, t, i) {};
    i.invalidate = function() {
        this._time = this._totalTime = 0;
        this._initted = this._gc = false;
        this._rawPrevTime = -1;
        if (this._gc || !this.timeline) {
            this._enabled(true)
        }
        return this
    };
    i.isActive = function() {
        var e = this._timeline,
        t = this._startTime,
        i;
        return ! e || !this._gc && !this._paused && e.isActive() && (i = e.rawTime(true)) >= t && i < t + this.totalDuration() / this._timeScale - 1e-7
    };
    i._enabled = function(e, t) {
        if (!S) {
            I.wake()
        }
        this._gc = !e;
        this._active = this.isActive();
        if (t !== true) {
            if (e && !this.timeline) {
                this._timeline.add(this, this._startTime - this._delay)
            } else if (!e && this.timeline) {
                this._timeline._remove(this, true)
            }
        }
        return false
    };
    i._kill = function(e, t) {
        return this._enabled(false, false)
    };
    i.kill = function(e, t) {
        this._kill(e, t);
        return this
    };
    i._uncache = function(e) {
        var t = e ? this: this.timeline;
        while (t) {
            t._dirty = true;
            t = t.timeline
        }
        return this
    };
    i._swapSelfInParams = function(e) {
        var t = e.length,
        i = e.concat();
        while (--t > -1) {
            if (e[t] === "{self}") {
                i[t] = this
            }
        }
        return i
    };
    i._callback = function(e) {
        var t = this.vars,
        i = t[e],
        n = t[e + "Params"],
        s = t[e + "Scope"] || t.callbackScope || this,
        a = n ? n.length: 0;
        switch (a) {
        case 0:
            i.call(s);
            break;
        case 1:
            i.call(s, n[0]);
            break;
        case 2:
            i.call(s, n[0], n[1]);
            break;
        default:
            i.apply(s, n)
        }
    };
    i.eventCallback = function(e, t, i, n) {
        if ((e || "").substr(0, 2) === "on") {
            var s = this.vars;
            if (arguments.length === 1) {
                return s[e]
            }
            if (t == null) {
                delete s[e]
            } else {
                s[e] = t;
                s[e + "Params"] = y(i) && i.join("").indexOf("{self}") !== -1 ? this._swapSelfInParams(i) : i;
                s[e + "Scope"] = n
            }
            if (e === "onUpdate") {
                this._onUpdate = t
            }
        }
        return this
    };
    i.delay = function(e) {
        if (!arguments.length) {
            return this._delay
        }
        if (this._timeline.smoothChildTiming) {
            this.startTime(this._startTime + e - this._delay)
        }
        this._delay = e;
        return this
    };
    i.duration = function(e) {
        if (!arguments.length) {
            this._dirty = false;
            return this._duration
        }
        this._duration = this._totalDuration = e;
        this._uncache(true);
        if (this._timeline.smoothChildTiming) if (this._time > 0) if (this._time < this._duration) if (e !== 0) {
            this.totalTime(this._totalTime * (e / this._duration), true)
        }
        return this
    };
    i.totalDuration = function(e) {
        this._dirty = false;
        return ! arguments.length ? this._totalDuration: this.duration(e)
    };
    i.time = function(e, t) {
        if (!arguments.length) {
            return this._time
        }
        if (this._dirty) {
            this.totalDuration()
        }
        return this.totalTime(e > this._duration ? this._duration: e, t)
    };
    i.totalTime = function(e, t, i) {
        if (!S) {
            I.wake()
        }
        if (!arguments.length) {
            return this._totalTime
        }
        if (this._timeline) {
            if (e < 0 && !i) {
                e += this.totalDuration()
            }
            if (this._timeline.smoothChildTiming) {
                if (this._dirty) {
                    this.totalDuration()
                }
                var n = this._totalDuration,
                s = this._timeline;
                if (e > n && !i) {
                    e = n
                }
                this._startTime = (this._paused ? this._pauseTime: s._time) - (!this._reversed ? e: n - e) / this._timeScale;
                if (!s._dirty) {
                    this._uncache(false)
                }
                if (s._timeline) {
                    while (s._timeline) {
                        if (s._timeline._time !== (s._startTime + s._totalTime) / s._timeScale) {
                            s.totalTime(s._totalTime, true)
                        }
                        s = s._timeline
                    }
                }
            }
            if (this._gc) {
                this._enabled(true, false)
            }
            if (this._totalTime !== e || this._duration === 0) {
                if (P.length) {
                    K()
                }
                this.render(e, t, false);
                if (P.length) {
                    K()
                }
            }
        }
        return this
    };
    i.progress = i.totalProgress = function(e, t) {
        var i = this.duration();
        return ! arguments.length ? i ? this._time / i: this.ratio: this.totalTime(i * e, t)
    };
    i.startTime = function(e) {
        if (!arguments.length) {
            return this._startTime
        }
        if (e !== this._startTime) {
            this._startTime = e;
            if (this.timeline) if (this.timeline._sortChildren) {
                this.timeline.add(this, e - this._delay)
            }
        }
        return this
    };
    i.endTime = function(e) {
        return this._startTime + (e != false ? this.totalDuration() : this.duration()) / this._timeScale
    };
    i.timeScale = function(e) {
        if (!arguments.length) {
            return this._timeScale
        }
        e = e || m;
        if (this._timeline && this._timeline.smoothChildTiming) {
            var t = this._pauseTime,
            i = t || t === 0 ? t: this._timeline.totalTime();
            this._startTime = i - (i - this._startTime) * this._timeScale / e
        }
        this._timeScale = e;
        return this._uncache(false)
    };
    i.reversed = function(e) {
        if (!arguments.length) {
            return this._reversed
        }
        if (e != this._reversed) {
            this._reversed = e;
            this.totalTime(this._timeline && !this._timeline.smoothChildTiming ? this.totalDuration() - this._totalTime: this._totalTime, true)
        }
        return this
    };
    i.paused = function(e) {
        if (!arguments.length) {
            return this._paused
        }
        var t = this._timeline,
        i, n;
        if (e != this._paused) if (t) {
            if (!S && !e) {
                I.wake()
            }
            i = t.rawTime();
            n = i - this._pauseTime;
            if (!e && t.smoothChildTiming) {
                this._startTime += n;
                this._uncache(false)
            }
            this._pauseTime = e ? i: null;
            this._paused = e;
            this._active = this.isActive();
            if (!e && n !== 0 && this._initted && this.duration()) {
                i = t.smoothChildTiming ? this._totalTime: (i - this._startTime) / this._timeScale;
                this.render(i, i === this._totalTime, true)
            }
        }
        if (this._gc && !e) {
            this._enabled(true, false)
        }
        return this
    };
    var u = w("core.SimpleTimeline",
    function(e) {
        h.call(this, 0, e);
        this.autoRemoveChildren = this.smoothChildTiming = true
    });
    i = u.prototype = new h;
    i.constructor = u;
    i.kill()._gc = false;
    i._first = i._last = i._recent = null;
    i._sortChildren = false;
    i.add = i.insert = function(e, t, i, n) {
        var s, a;
        e._startTime = Number(t || 0) + e._delay;
        if (e._paused) if (this !== e._timeline) {
            e._pauseTime = e._startTime + (this.rawTime() - e._startTime) / e._timeScale
        }
        if (e.timeline) {
            e.timeline._remove(e, true)
        }
        e.timeline = e._timeline = this;
        if (e._gc) {
            e._enabled(true, true)
        }
        s = this._last;
        if (this._sortChildren) {
            a = e._startTime;
            while (s && s._startTime > a) {
                s = s._prev
            }
        }
        if (s) {
            e._next = s._next;
            s._next = e
        } else {
            e._next = this._first;
            this._first = e
        }
        if (e._next) {
            e._next._prev = e
        } else {
            this._last = e
        }
        e._prev = s;
        this._recent = e;
        if (this._timeline) {
            this._uncache(true)
        }
        return this
    };
    i._remove = function(e, t) {
        if (e.timeline === this) {
            if (!t) {
                e._enabled(false, true)
            }
            if (e._prev) {
                e._prev._next = e._next
            } else if (this._first === e) {
                this._first = e._next
            }
            if (e._next) {
                e._next._prev = e._prev
            } else if (this._last === e) {
                this._last = e._prev
            }
            e._next = e._prev = e.timeline = null;
            if (e === this._recent) {
                this._recent = this._last
            }
            if (this._timeline) {
                this._uncache(true)
            }
        }
        return this
    };
    i.render = function(e, t, i) {
        var n = this._first,
        s;
        this._totalTime = this._time = this._rawPrevTime = e;
        while (n) {
            s = n._next;
            if (n._active || e >= n._startTime && !n._paused && !n._gc) {
                if (!n._reversed) {
                    n.render((e - n._startTime) * n._timeScale, t, i)
                } else {
                    n.render((!n._dirty ? n._totalDuration: n.totalDuration()) - (e - n._startTime) * n._timeScale, t, i)
                }
            }
            n = s
        }
    };
    i.rawTime = function() {
        if (!S) {
            I.wake()
        }
        return this._totalTime
    };
    var M = w("TweenLite",
    function(e, t, i) {
        this.szy_init = function(e, t, i) {
            h.call(this, t, i);
            this._initted = false;
            this.render = M.prototype.render;
            if (e == null) {
                throw "Cannot tween a null target."
            }
            this.target = e = typeof e !== "string" ? e: M.selector(e) || e;
            var n = e.jquery || e.length && e !== f && e[0] && (e[0] === f || e[0].nodeType && e[0].style && !e.nodeType),
            s = this.vars.overwrite,
            a,
            r,
            o;
            this._overwrite = s = s == null ? j[M.defaultOverwrite] : typeof s === "number" ? s >> 0 : j[s];
            if ((n || e instanceof Array || e.push && y(e)) && typeof e[0] !== "number") {
                this._targets = o = l(e);
                this._propLookup = [];
                this._siblings = [];
                for (a = 0; a < o.length; a++) {
                    r = o[a];
                    if (!r) {
                        o.splice(a--, 1);
                        continue
                    } else if (typeof r === "string") {
                        r = o[a--] = M.selector(r);
                        if (typeof r === "string") {
                            o.splice(a + 1, 1)
                        }
                        continue
                    } else if (r.length && r !== f && r[0] && (r[0] === f || r[0].nodeType && r[0].style && !r.nodeType)) {
                        o.splice(a--, 1);
                        this._targets = o = o.concat(l(r));
                        continue
                    }
                    this._siblings[a] = Q(r, this, false);
                    if (s === 1) if (this._siblings[a].length > 1) {
                        ee(r, this, null, 1, this._siblings[a])
                    }
                }
            } else {
                this._propLookup = {};
                this._siblings = Q(e, this, false);
                if (s === 1) if (this._siblings.length > 1) {
                    ee(e, this, null, 1, this._siblings)
                }
            }
            if (this.vars.immediateRender || t === 0 && this._delay === 0 && this.vars.immediateRender !== false) {
                this._time = -m;
                this.render(Math.min(0, -this._delay))
            }
        }
    },
    true),
    B = function(e) {
        return e && e.length && e !== f && e[0] && (e[0] === f || e[0].nodeType && e[0].style && !e.nodeType)
    },
    A = function(e, t) {
        var i = {},
        n;
        for (n in e) {
            if (!Y[n] && (!(n in t) || n === "transform" || n === "x" || n === "y" || n === "width" || n === "height" || n === "className" || n === "border") && (!z[n] || z[n] && z[n]._autoCSS)) {
                i[n] = e[n];
                delete e[n]
            }
        }
        e.css = i
    };
    i = M.prototype = new h;
    i.constructor = M;
    i.kill()._gc = false;
    i.ratio = 0;
    i._firstPT = i._targets = i._overwrittenProps = i._startAt = null;
    i._notifyPluginsOfEnabled = i._lazy = false;
    M.version = "1.20.2";
    M.defaultEase = i._ease = new x(null, null, 1, 1);
    M.defaultOverwrite = "auto";
    M.ticker = I;
    M.autoSleep = 120;
    M.lagSmoothing = function(e, t) {
        I.lagSmoothing(e, t)
    };
    M.selector = f.$ || f.jQuery ||
    function(e) {
        var t = f.$ || f.jQuery;
        if (t) {
            M.selector = t;
            return t(e)
        }
        return typeof n === "undefined" ? e: n.querySelectorAll ? n.querySelectorAll(e) : n.getElementById(e.charAt(0) === "#" ? e.substr(1) : e)
    };
    var P = [],
    U = {},
    E = /(?:(-|-=|\+=)?\d*\.?\d*(?:e[\-+]?\d+)?)[0-9]/gi,
    N = /[\+-]=-?[\.\d]/,
    F = function(e) {
        var t = this._firstPT,
        i = 1e-6,
        n;
        while (t) {
            n = !t.blob ? t.c * e + t.s: e === 1 && this.end ? this.end: e ? this.join("") : this.start;
            if (t.m) {
                n = t.m(n, this._target || t.t)
            } else if (n < i) if (n > -i && !t.blob) {
                n = 0
            }
            if (!t.f) {
                t.t[t.p] = n
            } else if (t.fp) {
                t.t[t.p](t.fp, n)
            } else {
                t.t[t.p](n)
            }
            t = t._next
        }
    },
    O = function(e, t, i, n) {
        var s = [],
        a = 0,
        r = "",
        o = 0,
        l,
        h,
        u,
        c,
        f,
        d,
        g;
        s.start = e;
        s.end = t;
        e = s[0] = e + "";
        t = s[1] = t + "";
        if (i) {
            i(s);
            e = s[0];
            t = s[1]
        }
        s.length = 0;
        l = e.match(E) || [];
        h = t.match(E) || [];
        if (n) {
            n._next = null;
            n.blob = 1;
            s._firstPT = s._applyPT = n
        }
        f = h.length;
        for (c = 0; c < f; c++) {
            g = h[c];
            d = t.substr(a, t.indexOf(g, a) - a);
            r += d || !c ? d: ",";
            a += d.length;
            if (o) {
                o = (o + 1) % 5
            } else if (d.substr( - 5) === "rgba(") {
                o = 1
            }
            if (g === l[c] || l.length <= c) {
                r += g
            } else {
                if (r) {
                    s.push(r);
                    r = ""
                }
                u = parseFloat(l[c]);
                s.push(u);
                s._firstPT = {
                    _next: s._firstPT,
                    t: s,
                    p: s.length - 1,
                    s: u,
                    c: (g.charAt(1) === "=" ? parseInt(g.charAt(0) + "1", 10) * parseFloat(g.substr(2)) : parseFloat(g) - u) || 0,
                    f: 0,
                    m: o && o < 4 ? Math.round: 0
                }
            }
            a += g.length
        }
        r += t.substr(a);
        if (r) {
            s.push(r)
        }
        s.setRatio = F;
        if (N.test(t)) {
            s.end = 0
        }
        return s
    },
    V = function(e, t, i, n, s, a, r, o, l) {
        if (typeof n === "function") {
            n = n(l || 0, e)
        }
        var h = typeof e[t],
        u = h !== "function" ? "": t.indexOf("set") || typeof e["get" + t.substr(3)] !== "function" ? t: "get" + t.substr(3),
        c = i !== "get" ? i: !u ? e[t] : r ? e[u](r) : e[u](),
        f = typeof n === "string" && n.charAt(1) === "=",
        d = {
            t: e,
            p: t,
            s: c,
            f: h === "function",
            pg: 0,
            n: s || t,
            m: !a ? 0 : typeof a === "function" ? a: Math.round,
            pr: 0,
            c: f ? parseInt(n.charAt(0) + "1", 10) * parseFloat(n.substr(2)) : parseFloat(n) - c || 0
        },
        g;
        if (typeof c !== "number" || typeof n !== "number" && !f) {
            if (r || isNaN(c) || !f && isNaN(n) || typeof c === "boolean" || typeof n === "boolean") {
                d.fp = r;
                g = O(c, f ? parseFloat(d.s) + d.c: n, o || M.defaultStringFilter, d);
                d = {
                    t: g,
                    p: "setRatio",
                    s: 0,
                    c: 1,
                    f: 2,
                    pg: 0,
                    n: s || t,
                    pr: 0,
                    m: 0
                }
            } else {
                d.s = parseFloat(c);
                if (!f) {
                    d.c = parseFloat(n) - d.s || 0
                }
            }
        }
        if (d.c) {
            if (d._next = this._firstPT) {
                d._next._prev = d
            }
            this._firstPT = d;
            return d
        }
    },
    q = M._internals = {
        isArray: y,
        isSelector: B,
        lazyTweens: P,
        blobDif: O
    },
    z = M._plugins = {},
    W = q.tweenLookup = {},
    H = 0,
    Y = q.reservedProps = {
        ease: 1,
        delay: 1,
        overwrite: 1,
        onComplete: 1,
        onCompleteParams: 1,
        onCompleteScope: 1,
        useFrames: 1,
        runBackwards: 1,
        startAt: 1,
        onUpdate: 1,
        onUpdateParams: 1,
        onUpdateScope: 1,
        onStart: 1,
        onStartParams: 1,
        onStartScope: 1,
        onReverseComplete: 1,
        onReverseCompleteParams: 1,
        onReverseCompleteScope: 1,
        onRepeat: 1,
        onRepeatParams: 1,
        onRepeatScope: 1,
        easeParams: 1,
        yoyo: 1,
        immediateRender: 1,
        repeat: 1,
        repeatDelay: 1,
        data: 1,
        paused: 1,
        reversed: 1,
        autoCSS: 1,
        lazy: 1,
        onOverwrite: 1,
        callbackScope: 1,
        stringFilter: 1,
        id: 1,
        yoyoEase: 1
    },
    j = {
        none: 0,
        all: 1,
        auto: 2,
        concurrent: 3,
        allOnStart: 4,
        preexisting: 5,
        true: 1,
        false: 0
    },
    X = h._rootFramesTimeline = new u,
    J = h._rootTimeline = new u,
    $ = 30,
    K = q.lazyRender = function() {
        var e = P.length,
        t;
        U = {};
        while (--e > -1) {
            t = P[e];
            if (t && t._lazy !== false) {
                t.render(t._lazy[0], t._lazy[1], true);
                t._lazy = false
            }
        }
        P.length = 0
    };
    J._startTime = I.time;
    X._startTime = I.frame;
    J._active = X._active = true;
    setTimeout(K, 1);
    h._updateRoot = M.render = function() {
        var e, t, i;
        if (P.length) {
            K()
        }
        J.render((I.time - J._startTime) * J._timeScale, false, false);
        X.render((I.frame - X._startTime) * X._timeScale, false, false);
        if (P.length) {
            K()
        }
        if (I.frame >= $) {
            $ = I.frame + (parseInt(M.autoSleep, 10) || 120);
            for (i in W) {
                t = W[i].tweens;
                e = t.length;
                while (--e > -1) {
                    if (t[e]._gc) {
                        t.splice(e, 1)
                    }
                }
                if (t.length === 0) {
                    delete W[i]
                }
            }
            i = J._first;
            if (!i || i._paused) if (M.autoSleep && !X._first && I._listeners.tick.length === 1) {
                while (i && i._paused) {
                    i = i._next
                }
                if (!i) {
                    I.sleep()
                }
            }
        }
    };
    I.addEventListener("tick", h._updateRoot);
    var Q = function(e, t, i) {
        var n = e._gsTweenID,
        s, a;
        if (!W[n || (e._gsTweenID = n = "t" + H++)]) {
            W[n] = {
                target: e,
                tweens: []
            }
        }
        if (t) {
            s = W[n].tweens;
            s[a = s.length] = t;
            if (i) {
                while (--a > -1) {
                    if (s[a] === t) {
                        s.splice(a, 1)
                    }
                }
            }
        }
        return W[n].tweens
    },
    Z = function(e, t, i, n) {
        var s = e.vars.onOverwrite,
        a, r;
        if (s) {
            a = s(e, t, i, n)
        }
        s = M.onOverwrite;
        if (s) {
            r = s(e, t, i, n)
        }
        return a !== false && r !== false
    },
    ee = function(e, t, i, n, s) {
        var a, r, o, l;
        if (n === 1 || n >= 4) {
            l = s.length;
            for (a = 0; a < l; a++) {
                if ((o = s[a]) !== t) {
                    if (!o._gc) {
                        if (o._kill(null, e, t)) {
                            r = true
                        }
                    }
                } else if (n === 5) {
                    break
                }
            }
            return r
        }
        var h = t._startTime + m,
        u = [],
        c = 0,
        f = t._duration === 0,
        d;
        a = s.length;
        while (--a > -1) {
            if ((o = s[a]) === t || o._gc || o._paused) {} else if (o._timeline !== t._timeline) {
                d = d || te(t, 0, f);
                if (te(o, d, f) === 0) {
                    u[c++] = o
                }
            } else if (o._startTime <= h) if (o._startTime + o.totalDuration() / o._timeScale > h) if (! ((f || !o._initted) && h - o._startTime <= 2e-10)) {
                u[c++] = o
            }
        }
        a = c;
        while (--a > -1) {
            o = u[a];
            if (n === 2) if (o._kill(i, e, t)) {
                r = true
            }
            if (n !== 2 || !o._firstPT && o._initted) {
                if (n !== 2 && !Z(o, t)) {
                    continue
                }
                if (o._enabled(false, false)) {
                    r = true
                }
            }
        }
        return r
    },
    te = function(e, t, i) {
        var n = e._timeline,
        s = n._timeScale,
        a = e._startTime;
        while (n._timeline) {
            a += n._startTime;
            s *= n._timeScale;
            if (n._paused) {
                return - 100
            }
            n = n._timeline
        }
        a /= s;
        return a > t ? a - t: i && a === t || !e._initted && a - t < 2 * m ? m: (a += e.totalDuration() / e._timeScale / s) > t + m ? 0 : a - t - m
    };
    i._init = function() {
        var e = this.vars,
        t = this._overwrittenProps,
        i = this._duration,
        n = !!e.immediateRender,
        s = e.ease,
        a, r, o, l, h, u;
        if (e.startAt) {
            if (this._startAt) {
                this._startAt.render( - 1, true);
                this._startAt.kill()
            }
            h = {};
            for (l in e.startAt) {
                h[l] = e.startAt[l]
            }
            h.overwrite = false;
            h.immediateRender = true;
            h.lazy = n && e.lazy !== false;
            h.startAt = h.delay = null;
            h.onUpdate = e.onUpdate;
            h.onUpdateScope = e.onUpdateScope || e.callbackScope || this;
            this._startAt = M.to(this.target, 0, h);
            if (n) {
                if (this._time > 0) {
                    this._startAt = null
                } else if (i !== 0) {
                    return
                }
            }
        } else if (e.runBackwards && i !== 0) {
            if (this._startAt) {
                this._startAt.render( - 1, true);
                this._startAt.kill();
                this._startAt = null
            } else {
                if (this._time !== 0) {
                    n = false
                }
                o = {};
                for (l in e) {
                    if (!Y[l] || l === "autoCSS") {
                        o[l] = e[l]
                    }
                }
                o.overwrite = 0;
                o.data = "isFromStart";
                o.lazy = n && e.lazy !== false;
                o.immediateRender = n;
                this._startAt = M.to(this.target, 0, o);
                if (!n) {
                    this._startAt._init();
                    this._startAt._enabled(false);
                    if (this.vars.immediateRender) {
                        this._startAt = null
                    }
                } else if (this._time === 0) {
                    return
                }
            }
        }
        this._ease = s = !s ? M.defaultEase: s instanceof x ? s: typeof s === "function" ? new x(s, e.easeParams) : R[s] || M.defaultEase;
        if (e.easeParams instanceof Array && s.config) {
            this._ease = s.config.apply(s, e.easeParams)
        }
        this._easeType = this._ease._type;
        this._easePower = this._ease._power;
        this._firstPT = null;
        if (this._targets) {
            u = this._targets.length;
            for (a = 0; a < u; a++) {
                if (this._initProps(this._targets[a], this._propLookup[a] = {},
                this._siblings[a], t ? t[a] : null, a)) {
                    r = true
                }
            }
        } else {
            r = this._initProps(this.target, this._propLookup, this._siblings, t, 0)
        }
        if (r) {
            M._onPluginEvent("_onInitAllProps", this)
        }
        if (t) if (!this._firstPT) if (typeof this.target !== "function") {
            this._enabled(false, false)
        }
        if (e.runBackwards) {
            o = this._firstPT;
            while (o) {
                o.s += o.c;
                o.c = -o.c;
                o = o._next
            }
        }
        this._onUpdate = e.onUpdate;
        this._initted = true
    };
    i._initProps = function(e, t, i, n, s) {
        var a, r, o, l, h, u;
        if (e == null) {
            return false
        }
        if (U[e._gsTweenID]) {
            K()
        }
        if (!this.vars.css) if (e.style) if (e !== f && e.nodeType) if (z.css) if (this.vars.autoCSS !== false) {
            A(this.vars, e)
        }
        for (a in this.vars) {
            u = this.vars[a];
            if (Y[a]) {
                if (u) if (u instanceof Array || u.push && y(u)) if (u.join("").indexOf("{self}") !== -1) {
                    this.vars[a] = u = this._swapSelfInParams(u, this)
                }
            } else if (z[a] && (l = Laya.Pool.getItemByClass("bezier", z[a]))._onInitTween(e, this.vars[a], this, s)) {
                this._firstPT = h = {
                    _next: this._firstPT,
                    t: l,
                    p: "setRatio",
                    s: 0,
                    c: 1,
                    f: 1,
                    n: a,
                    pg: 1,
                    pr: l._priority,
                    m: 0
                };
                r = l._overwriteProps.length;
                while (--r > -1) {
                    t[l._overwriteProps[r]] = this._firstPT
                }
                if (l._priority || l._onInitAllProps) {
                    o = true
                }
                if (l._onDisable || l._onEnable) {
                    this._notifyPluginsOfEnabled = true
                }
                if (h._next) {
                    h._next._prev = h
                }
                this.szy_plugin = l
            } else {
                t[a] = V.call(this, e, a, "get", u, a, 0, null, this.vars.stringFilter, s)
            }
        }
        if (n) if (this._kill(n, e)) {
            return this._initProps(e, t, i, n, s)
        }
        if (this._overwrite > 1) if (this._firstPT) if (i.length > 1) if (ee(e, this, t, this._overwrite, i)) {
            this._kill(t, e);
            return this._initProps(e, t, i, n, s)
        }
        if (this._firstPT) if (this.vars.lazy !== false && this._duration || this.vars.lazy && !this._duration) {
            U[e._gsTweenID] = true
        }
        return o
    };
    i.render = function(e, t, i) {
        var n = this._time,
        s = this._duration,
        a = this._rawPrevTime,
        r, o, l, h;
        if (e >= s - 1e-7 && e >= 0) {
            this._totalTime = this._time = s;
            this.ratio = this._ease._calcEnd ? this._ease.getRatio(1) : 1;
            if (!this._reversed) {
                r = true;
                o = "onComplete";
                i = i || this._timeline.autoRemoveChildren
            }
            if (s === 0) if (this._initted || !this.vars.lazy || i) {
                if (this._startTime === this._timeline._duration) {
                    e = 0
                }
                if (a < 0 || e <= 0 && e >= -1e-7 || a === m && this.data !== "isPause") if (a !== e) {
                    i = true;
                    if (a > m) {
                        o = "onReverseComplete"
                    }
                }
                this._rawPrevTime = h = !t || e || a === e ? e: m
            }
        } else if (e < 1e-7) {
            this._totalTime = this._time = 0;
            this.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0;
            if (n !== 0 || s === 0 && a > 0) {
                o = "onReverseComplete";
                r = this._reversed
            }
            if (e < 0) {
                this._active = false;
                if (s === 0) if (this._initted || !this.vars.lazy || i) {
                    if (a >= 0 && !(a === m && this.data === "isPause")) {
                        i = true
                    }
                    this._rawPrevTime = h = !t || e || a === e ? e: m
                }
            }
            if (!this._initted || this._startAt && this._startAt.progress()) {
                i = true
            }
        } else {
            this._totalTime = this._time = e;
            if (this._easeType) {
                var u = e / s,
                c = this._easeType,
                f = this._easePower;
                if (c === 1 || c === 3 && u >= .5) {
                    u = 1 - u
                }
                if (c === 3) {
                    u *= 2
                }
                if (f === 1) {
                    u *= u
                } else if (f === 2) {
                    u *= u * u
                } else if (f === 3) {
                    u *= u * u * u
                } else if (f === 4) {
                    u *= u * u * u * u
                }
                if (c === 1) {
                    this.ratio = 1 - u
                } else if (c === 2) {
                    this.ratio = u
                } else if (e / s < .5) {
                    this.ratio = u / 2
                } else {
                    this.ratio = 1 - u / 2
                }
            } else {
                this.ratio = this._ease.getRatio(e / s)
            }
        }
        if (this._time === n && !i) {
            return
        } else if (!this._initted) {
            this._init();
            if (!this._initted || this._gc) {
                return
            } else if (!i && this._firstPT && (this.vars.lazy !== false && this._duration || this.vars.lazy && !this._duration)) {
                this._time = this._totalTime = n;
                this._rawPrevTime = a;
                P.push(this);
                this._lazy = [e, t];
                return
            }
            if (this._time && !r) {
                this.ratio = this._ease.getRatio(this._time / s)
            } else if (r && this._ease._calcEnd) {
                this.ratio = this._ease.getRatio(this._time === 0 ? 0 : 1)
            }
        }
        if (this._lazy !== false) {
            this._lazy = false
        }
        if (!this._active) if (!this._paused && this._time !== n && e >= 0) {
            this._active = true
        }
        if (n === 0) {
            if (this._startAt) {
                if (e >= 0) {
                    this._startAt.render(e, t, i)
                } else if (!o) {
                    o = "_dummyGS"
                }
            }
            if (this.vars.onStart) if (this._time !== 0 || s === 0) if (!t) {
                this._callback("onStart")
            }
        }
        l = this._firstPT;
        while (l) {
            if (l.f) {
                l.t[l.p](l.c * this.ratio + l.s)
            } else {
                l.t[l.p] = l.c * this.ratio + l.s
            }
            l = l._next
        }
        if (this._onUpdate) {
            if (e < 0) if (this._startAt && e !== -1e-4) {
                this._startAt.render(e, t, i)
            }
            if (!t) if (this._time !== n || r || i) {
                this._callback("onUpdate")
            }
        }
        if (o) if (!this._gc || i) {
            if (e < 0 && this._startAt && !this._onUpdate && e !== -1e-4) {
                this._startAt.render(e, t, i)
            }
            if (r) {
                if (this._timeline.autoRemoveChildren) {
                    this._enabled(false, false)
                }
                this._active = false
            }
            if (!t && this.vars[o]) {
                this._callback(o)
            }
            if (s === 0 && this._rawPrevTime === m && h !== m) {
                this._rawPrevTime = 0
            }
        }
    };
    i._kill = function(e, t, i) {
        if (e === "all") {
            e = null
        }
        if (e == null) if (t == null || t === this.target) {
            this._lazy = false;
            return this._enabled(false, false)
        }
        t = typeof t !== "string" ? t || this._targets || this.target: M.selector(t) || t;
        var n = i && this._time && i._startTime === this._startTime && this._timeline === i._timeline,
        s, a, r, o, l, h, u, c, f;
        if ((y(t) || B(t)) && typeof t[0] !== "number") {
            s = t.length;
            while (--s > -1) {
                if (this._kill(e, t[s], i)) {
                    h = true
                }
            }
        } else {
            if (this._targets) {
                s = this._targets.length;
                while (--s > -1) {
                    if (t === this._targets[s]) {
                        l = this._propLookup[s] || {};
                        this._overwrittenProps = this._overwrittenProps || [];
                        a = this._overwrittenProps[s] = e ? this._overwrittenProps[s] || {}: "all";
                        break
                    }
                }
            } else if (t !== this.target) {
                return false
            } else {
                l = this._propLookup;
                a = this._overwrittenProps = e ? this._overwrittenProps || {}: "all"
            }
            if (l) {
                u = e || l;
                c = e !== a && a !== "all" && e !== l && (typeof e !== "object" || !e._tempKill);
                if (i && (M.onOverwrite || this.vars.onOverwrite)) {
                    for (r in u) {
                        if (l[r]) {
                            if (!f) {
                                f = []
                            }
                            f.push(r)
                        }
                    }
                    if ((f || !e) && !Z(this, i, t, f)) {
                        return false
                    }
                }
                for (r in u) {
                    if (o = l[r]) {
                        if (n) {
                            if (o.f) {
                                o.t[o.p](o.s)
                            } else {
                                o.t[o.p] = o.s
                            }
                            h = true
                        }
                        if (o.pg && o.t._kill(u)) {
                            h = true
                        }
                        if (!o.pg || o.t._overwriteProps.length === 0) {
                            if (o._prev) {
                                o._prev._next = o._next
                            } else if (o === this._firstPT) {
                                this._firstPT = o._next
                            }
                            if (o._next) {
                                o._next._prev = o._prev
                            }
                            o._next = o._prev = null
                        }
                        delete l[r]
                    }
                    if (c) {
                        a[r] = 1
                    }
                }
                if (!this._firstPT && this._initted) {
                    this._enabled(false, false)
                }
            }
        }
        return h
    };
    i.invalidate = function() {
        if (this._notifyPluginsOfEnabled) {
            M._onPluginEvent("_onDisable", this)
        }
        this._firstPT = this._overwrittenProps = this._startAt = this._onUpdate = null;
        this._notifyPluginsOfEnabled = this._active = this._lazy = false;
        this._propLookup = this._targets ? {}: [];
        h.prototype.invalidate.call(this);
        if (this.vars.immediateRender) {
            this._time = -m;
            this.render(Math.min(0, -this._delay))
        }
        return this
    };
    i._enabled = function(e, t) {
        if (!S) {
            I.wake()
        }
        if (e && this._gc) {
            var i = this._targets,
            n;
            if (i) {
                n = i.length;
                while (--n > -1) {
                    this._siblings[n] = Q(i[n], this, true)
                }
            } else {
                this._siblings = Q(this.target, this, true)
            }
        }
        h.prototype._enabled.call(this, e, t);
        if (this._notifyPluginsOfEnabled) if (this._firstPT) {
            return M._onPluginEvent(e ? "_onEnable": "_onDisable", this)
        }
        return false
    };
    M.to = function(e, t, i) {
        var n = Laya.Pool.getItemByClass("TweenLite", M);
        n.szy_init(e, t, i);
        return n
    };
    M.from = function(e, t, i) {
        i.runBackwards = true;
        i.immediateRender = i.immediateRender != false;
        return new M(e, t, i)
    };
    M.fromTo = function(e, t, i, n) {
        n.startAt = i;
        n.immediateRender = n.immediateRender != false && i.immediateRender != false;
        return new M(e, t, n)
    };
    M.delayedCall = function(e, t, i, n, s) {
        return new M(t, 0, {
            delay: e,
            onComplete: t,
            onCompleteParams: i,
            callbackScope: n,
            onReverseComplete: t,
            onReverseCompleteParams: i,
            immediateRender: false,
            lazy: false,
            useFrames: s,
            overwrite: 0
        })
    };
    M.set = function(e, t) {
        return new M(e, 0, t)
    };
    M.getTweensOf = function(e, t) {
        if (e == null) {
            return []
        }
        e = typeof e !== "string" ? e: M.selector(e) || e;
        var i, n, s, a;
        if ((y(e) || B(e)) && typeof e[0] !== "number") {
            i = e.length;
            n = [];
            while (--i > -1) {
                n = n.concat(M.getTweensOf(e[i], t))
            }
            i = n.length;
            while (--i > -1) {
                a = n[i];
                s = i;
                while (--s > -1) {
                    if (a === n[s]) {
                        n.splice(i, 1)
                    }
                }
            }
        } else if (e._gsTweenID) {
            n = Q(e).concat();
            i = n.length;
            while (--i > -1) {
                if (n[i]._gc || t && !n[i].isActive()) {
                    n.splice(i, 1)
                }
            }
        }
        return n || []
    };
    M.killTweensOf = M.killDelayedCallsTo = function(e, t, i) {
        if (typeof t === "object") {
            i = t;
            t = false
        }
        var n = M.getTweensOf(e, t),
        s = n.length;
        while (--s > -1) {
            n[s]._kill(i, e)
        }
    };
    var ie = w("plugins.TweenPlugin",
    function(e, t) {
        this._overwriteProps = (e || "").split(",");
        this._propName = this._overwriteProps[0];
        this._priority = t || 0;
        this._super = ie.prototype
    },
    true);
    i = ie.prototype;
    ie.version = "1.19.0";
    ie.API = 2;
    i._firstPT = null;
    i._addTween = V;
    i.setRatio = F;
    i._kill = function(e) {
        var t = this._overwriteProps,
        i = this._firstPT,
        n;
        if (e[this._propName] != null) {
            this._overwriteProps = []
        } else {
            n = t.length;
            while (--n > -1) {
                if (e[t[n]] != null) {
                    t.splice(n, 1)
                }
            }
        }
        while (i) {
            if (e[i.n] != null) {
                if (i._next) {
                    i._next._prev = i._prev
                }
                if (i._prev) {
                    i._prev._next = i._next;
                    i._prev = null
                } else if (this._firstPT === i) {
                    this._firstPT = i._next
                }
            }
            i = i._next
        }
        return false
    };
    i._mod = i._roundProps = function(e) {
        var t = this._firstPT,
        i;
        while (t) {
            i = e[this._propName] || t.n != null && e[t.n.split(this._propName + "_").join("")];
            if (i && typeof i === "function") {
                if (t.f === 2) {
                    t.t._applyPT.m = i
                } else {
                    t.m = i
                }
            }
            t = t._next
        }
    };
    M._onPluginEvent = function(e, t) {
        var i = t._firstPT,
        n, s, a, r, o;
        if (e === "_onInitAllProps") {
            while (i) {
                o = i._next;
                s = a;
                while (s && s.pr > i.pr) {
                    s = s._next
                }
                if (i._prev = s ? s._prev: r) {
                    i._prev._next = i
                } else {
                    a = i
                }
                if (i._next = s) {
                    s._prev = i
                } else {
                    r = i
                }
                i = o
            }
            i = t._firstPT = a
        }
        while (i) {
            if (i.pg) if (typeof i.t[e] === "function") if (i.t[e]()) {
                n = true
            }
            i = i._next
        }
        return n
    };
    ie.activate = function(e) {
        var t = e.length;
        while (--t > -1) {
            if (e[t].API === ie.API) {
                z[(new e[t])._propName] = e[t]
            }
        }
        return true
    };
    s.plugin = function(e) {
        if (!e || !e.propName || !e.init || !e.API) {
            throw "illegal plugin definition."
        }
        var t = e.propName,
        i = e.priority || 0,
        n = e.overwriteProps,
        s = {
            init: "_onInitTween",
            set: "setRatio",
            kill: "_kill",
            round: "_mod",
            mod: "_mod",
            initAll: "_onInitAllProps"
        },
        a = w("plugins." + t.charAt(0).toUpperCase() + t.substr(1) + "Plugin",
        function() {
            ie.call(this, t, i);
            this._overwriteProps = n || []
        },
        e.global === true),
        r = a.prototype = new ie(t),
        o;
        r.constructor = a;
        a.API = e.API;
        for (o in s) {
            if (typeof e[o] === "function") {
                r[s[o]] = e[o]
            }
        }
        a.version = e.version;
        ie.activate([a]);
        return a
    };
    e = f._gsQueue;
    if (e) {
        for (t = 0; t < e.length; t++) {
            e[t]()
        }
        for (i in C) {
            if (!C[i].func) {}
        }
    }
    S = false
})(window, "TweenLite");
var RES = function() {
    return {
        login: ["res/atlas/resource/login.atlas", "res/atlas/resource/common.atlas", "res/atlas/resource/loading.atlas", "UIRoot/login.min.json"],
        firstLoad: ["res/atlas/resource/loading.atlas", "UIRoot/loadingView.json", "UIRoot/gui/MsgToast.json", "UIRoot/gui/MessageBox.json"],
        gameCenter: function() {
            var e = ["res/atlas/resource/icon.atlas", "res/atlas/resource/getReward.atlas", "res/atlas/resource/common.atlas", "res/atlas/resource/sharkBg.atlas", "res/atlas/resource/gameCenter.atlas", "res/atlas/resource/icon/vipLevel.atlas", "UIRoot/gameCenter.min.json"];
            if (Player.getNewPlayer()) {
                e = e.concat(this.loadTaskList.firstGiftBag)
            }
            return e
        },
        fishScene: function(e) {
            var t = ["res/atlas/resource/skins/501.atlas", "res/atlas/resource/fishScene.atlas", "res/atlas/resource/fishScene/widget.atlas", "res/atlas/resource/noviceGuidanceOnMinGame.atlas", "res/atlas/resource/skins/kuangBao.atlas", "res/atlas/resource/chatSystem.atlas", "res/atlas/resource/sceneEmjoys.atlas", "resource/fx-quan2.png", "resource/bf_ani_15.png", "UIRoot/scene.min.json", "UIRoot/fish.min.json", "resource/fishScene/changjing01.jpg", "fishPath/pathFile.json", "UIRoot/FX/shuipao.part", "UIRoot/FX/min/fishScene.min.ani"];
            if (Player.getNewPlayer()) {
                t = t.concat(this.loadTaskList.newPlayerGuid).concat(this.loadTaskList.exchange)
            }
            if (e) {
                if (e >= Game.sceneConfig.sceneID.scene_100 && e <= Game.sceneConfig.sceneID.scene_DaoDan) {
                    t = t.concat(RES.loadTaskList.WorldBoss)
                }
            }
            return t
        },
        JewelCity: ["res/atlas/resource/JewelCity.atlas", "resource/JewelCity/bg_backgroud1.jpg", "resource/JewelCity/bg_backgroud2.jpg", "resource/JewelCity/bg_backgroud3.jpg", "resource/JewelCity/bg_mission3_2.png", "resource/JewelCity/bg_mission3_3.png", "resource/JewelCity/bg_reward2.png", "UIRoot/JewelCity.min.json"],
        AttackDragon: ["res/atlas/resource/attackDragonPlace.atlas", "res/atlas/resource/attackDragonPlace/dragonAnimates.atlas", "resource/attackDragonPlace/bg_backgroud.jpg", "resource/attackDragonPlace/FontClip_combo.png", "resource/attackDragonPlace/FontClip_woah.png", "resource/attackDragonPlace/bg_window2.png", "resource/attackDragonPlace/lijing_skill_14.png", "resource/attackDragonPlace/word_daojishi.png", "resource/fx-quan2.png", "UIRoot/Dragon.min.json"],
        BigRichLoading: ["res/atlas/resource/bigRich/loading.atlas", "resource/bigRich/loading/bg_loading1.jpg", "resource/bigRich/loading/bg_loading2.jpg", "resource/bigRich/loading/bg_loading3.jpg", "resource/bigRich/loading/bg_loading4.jpg", "UIRoot/bigRich/BigRichLoading.json"],
        BigRich: ["res/atlas/resource/bigRich/game.atlas", "res/atlas/resource/bigRich/rank.atlas", "res/atlas/resource/bigRich/result.atlas", "res/atlas/resource/bigRich/Zhuqingting.atlas", "res/atlas/resource/bigRich/entrance.atlas", "res/atlas/resource/bigRich/sieve.atlas", "res/atlas/resource/chatSystem.atlas", "res/TiledMap/bigrichmap.json", "UIRoot/FX/dipan.ani", "UIRoot/bigRich/BigRichMain.json", "UIRoot/bigRich/BigRichFail.json", "UIRoot/bigRich/BigRichNotice.json", "UIRoot/bigRich/BigRichRank.json", "UIRoot/bigRich/BigRichRankRule.json", "UIRoot/bigRich/BigRichRule.json", "UIRoot/bigRich/BigRichStart.json", "UIRoot/bigRich/BigRichSucc.json"],
        ShipmentPrize: ["resource/ActShipmentPrize/ActShipmentPrize/bg_hongyun1.png", "resource/ActShipmentPrize/ActShipmentPrize/bg_hongyun3.png", "res/atlas/resource/ActShipmentPrize/ActShipmentPrize.atlas", "res/atlas/resource/ActShipmentPrize/ShipmentRank.atlas", "UIRoot/activity/ActShipmentPrize/ShipmentPrize.json", "UIRoot/activity/ActShipmentPrize/ShipmentRank.json", "UIRoot/activity/ActShipmentPrize/ShipmentNotice.json", "UIRoot/activity/ActShipmentPrize/ShipmentPrizeOption.json"],
        GoldPigAct: {
            goldPigAct: ["res/atlas/resource/goldPig/goldPigAct.atlas", "UIRoot/goldPig/goldPigShow.json"],
            goldPigRule: ["res/atlas/resource/goldPig/goldPigRule.atlas", "UIRoot/goldPig/goldPigRule.json"],
            goldPig: ["res/atlas/resource/goldPig.atlas", "UIRoot/goldPig/goldPigPrize.json"]
        },
        youYiSai: ["res/atlas/resource/youYiSai.atlas", "UIRoot/youYiSai/YYSFish.json", "UIRoot/youYiSai/YYSRoom.json", "UIRoot/youYiSai/yysCreateRoom.json", "UIRoot/youYiSai/yysGameOver.json", "UIRoot/youYiSai/yysGameRule.json", "UIRoot/youYiSai/yysRoomInfo.json", "UIRoot/youYiSai/yysTip.json"],
        CannonSkins: ["res/atlas/resource/cannonSkins.atlas", "res/atlas/resource/skins/501.atlas", "res/atlas/resource/skins/kuangBao.atlas", "UIRoot/dialog/CannonSkins.json"],
        loadTaskList: {
            mpGiftBag: ["UIRoot/dialog/MpGiftBag.json", "res/atlas/resource/mpGiftBag.atlas"],
            dayLoginShare: ["res/atlas/resource/dayLoginShare.atlas", "UIRoot/dialog/DayLoginShare.json", "UIRoot/FX/fenxiangyaoqing.json"],
            actCards: ["res/atlas/resource/actCards.atlas", "UIRoot/activity/ActCards.json", "UIRoot/FX/card_shine.ani"],
            actHappyPrize: ["UIRoot/activity/ActHappyPrize.json"],
            email: ["res/atlas/resource/email.atlas", "UIRoot/dialog/Email.json"],
            exchange: ["res/atlas/resource/exchange.atlas", "UIRoot/dialog/ExchangeJuan.json", "UIRoot/dialog/ExchangeRecord.json", "UIRoot/dialog/ExchangePrompt.json", "UIRoot/dialog/PhoneRecharge.json"],
            loginGift: ["res/atlas/resource/loginGift.atlas", "UIRoot/dialog/loginGift.json"],
            newPlayerGift: ["res/atlas/resource/newPlayerGift.atlas", "UIRoot/dialog/NewPlayerGift.json"],
            shopMall: ["res/atlas/resource/shopMall.atlas", "res/atlas/resource/vipService.atlas", "UIRoot/dialog/ShopMall.json", "UIRoot/dialog/VipService.json"],
            rankList: ["res/atlas/resource/rankList.atlas", "UIRoot/dialog/RankList.json"],
            package: ["res/atlas/resource/package.atlas", "UIRoot/dialog/Package.json", "UIRoot/dialog/PackageGift.json", "UIRoot/dialog/PackageGift2.json"],
            firstBuy: ["res/atlas/resource/firstBuy.atlas", "UIRoot/dialog/FirstRecharge.json", "UIRoot/Aggregation/FirstRechargeView.json"],
            playPackage: ["res/atlas/resource/playPackage.atlas", "UIRoot/dialog/PlayPackage.json", "UIRoot/Aggregation/PlayPackageView.json"],
            activity: ["res/atlas/resource/activity.atlas", "res/atlas/resource/ActExchange.atlas", "UIRoot/activity/Activity.json"],
            buyQuick: ["res/atlas/resource/buyQuick.atlas", "UIRoot/dialog/BuyQuick.json"],
            luckyShake: ["res/atlas/resource/luckyShake.atlas", "resource/fx-quan2.png", "resource/bf_ani_15.png", "UIRoot/dialog/LuckyShake.json", "UIRoot/FX/yaoyiyao.ani", "UIRoot/FX/yaoyiyao3.ani", "UIRoot/FX/yaoyiyao4.part", "UIRoot/Aggregation/LuckyShakeView.json"],
            invitation: ["res/atlas/resource/invitation.atlas", "UIRoot/dialog/InvitationWX.json"],
            superMatch: ["res/atlas/resource/superMatch.atlas", "UIRoot/superMatch/SuperMatch.json", "UIRoot/superMatch/SuperMatchDoor.json", "UIRoot/superMatch/SuperMatchJuan.json", "UIRoot/superMatch/SuperMatchShareTip.json"],
            personalCenter: ["res/atlas/resource/personalCenter.atlas", "UIRoot/dialog/PersonalCenter.json", "UIRoot/dialog/Seting.json"],
            luckyTurntable: ["res/atlas/resource/luckyTurntable.atlas", "UIRoot/gui/TumtablePrize.json", "UIRoot/dialog/LuckyTurntable.json", "UIRoot/FX/zhuanpanliuxing.json"],
            daoDanSpecial: ["res/atlas/resource/daoDanSpecial.atlas", "UIRoot/dialog/DaoDanSpecial.json", "UIRoot/dialog/CreateRoom.json", "UIRoot/dialog/EnterRoom.json"],
            redPackage: ["UIRoot/FX/hongbaojinbi.part", "UIRoot/FX/yaoyiyao3.ani", "resource/fx-quan2.png", "resource/bf_ani_15.png", "res/atlas/resource/redPackage.atlas", "UIRoot/redPackage/getRedPackage.json", "UIRoot/redPackage/redPackageIcon.json", "UIRoot/redPackage/redPackageRules.json", "UIRoot/redPackage/sendRedPackage.json"],
            vipInfo: ["res/atlas/resource/vip.atlas", "UIRoot/dialog/VipInfo.json"],
            chatSystem: ["res/atlas/resource/chatSystem.atlas", "UIRoot/dialog/chatSystem.json", "UIRoot/horn/HornInput.json"],
            ActRankList: ["res/atlas/resource/ActRanklist.atlas", "UIRoot/activity/ActRankList.json"],
            ActRelicGift: ["res/atlas/resource/ActRelicGift.atlas", "UIRoot/activity/ActRelicGift.json"],
            shopMallCenter: ["res/atlas/resource/shopMallCenter.atlas", "UIRoot/dialog/shopMallCenter.json"],
            FreeLottery: ["res/atlas/resource/FreeLottery.atlas", "UIRoot/dialog/FreeLottery.json"],
            JewLoading: ["res/atlas/resource/JewLoading.atlas", "UIRoot/jewelCity/JewLoading.json"],
            attackDragonLoading: ["res/atlas/resource/attackDragonLoading.atlas", "UIRoot/attackDragonPlace/dragonLoading.json"],
            superMatchResult: ["res/atlas/resource/superMatch.atlas", "res/atlas/resource/superMatchResult.atlas", "UIRoot/superMatch/SuperMatchResult.json"],
            superMatchJuanResult: ["res/atlas/resource/superMatch.atlas", "res/atlas/resource/superMatchJuanResult.atlas", "UIRoot/superMatch/SuperMatchJuanResult.json"],
            ActTreasureBox: ["res/atlas/resource/ActTreasureBox.atlas", "UIRoot/activity/ActTreasureBox/ActTreasureBox.json", "UIRoot/activity/ActTreasureBox/TreasureBoxDetail.json", "UIRoot/activity/ActTreasureBox/TreasureBoxGet.json"],
            ActTask: ["res/atlas/resource/ActTask.atlas", "UIRoot/activity/ActTask.json"],
            pokedex: ["res/atlas/resource/pokedex.atlas", "UIRoot/dialog/Pokedex.json"],
            firstBuyToOne: ["res/atlas/resource/firstBuyToOne.atlas", "UIRoot/dialog/FirstBuyToOne.json"],
            firstBuyToOneNew: ["UIRoot/Aggregation/FirstBuyToOneView.json", "res/atlas/resource/firstBuyToOneNew.atlas", "UIRoot/dialog/FirstBuyToOneNew.json"],
            entranceGuidance: ["res/atlas/resource/entranceGuidance.atlas", "UIRoot/dialog/EntranceGuidance.json"],
            firstGiftBag: ["res/atlas/resource/firstGiftBag.atlas", "UIRoot/dialog/GetFirstReward.json", "UIRoot/dialog/FirstGiftBag.json", "res/atlas/resource/noviceGuidanceOnMinGame.atlas", "UIRoot/NoviceGuidanceOnMinGame.json"],
            wxAuth: ["res/atlas/resource/wxAuth.atlas", "UIRoot/dialog/wxAuthorize.json"],
            task: ["res/atlas/resource/task.atlas", "UIRoot/task/Task.json"],
            pigBank: ["res/atlas/resource/pigBank.atlas", "UIRoot/dialog/PigBank.json"],
            Dtdb: ["res/atlas/resource/dtdb.atlas", "UIRoot/dtdb/DTResult.json", "UIRoot/dtdb/Dtdb.json"],
            HitEgg: ["res/atlas/resource/dtdb/egg.atlas", "res/atlas/resource/dtdb.atlas", "UIRoot/dtdb/HitEgg.json", "UIRoot/FX/chuizi.ani", "UIRoot/FX/liuguang.ani"],
            choiceAccount: ["res/atlas/resource/choiceAccount.atlas", "UIRoot/dialog/ChoiceAccount.json", "UIRoot/dialog/EstablishAccount.json", "UIRoot/dialog/EstablishAccount2.json"],
            monster: ["resource/monster/EB_bg_15_10.jpg", "res/atlas/resource/monster.atlas", "UIRoot/monster/HitMonster.json", "UIRoot/monster/monsterAdress.json", "UIRoot/monster/monsterExchangeList.json", "UIRoot/monster/monsterExchangeRecord.json", "UIRoot/monster/monsterMsgBox1.json", "UIRoot/monster/monsterMsgBox2.json", "UIRoot/monster/monsterMsgBox3.json", "UIRoot/monster/monsterTaskList.json"],
            newPlayerGuid: ["res/atlas/resource/mpGiftBag.atlas", "UIRoot/NoviceGuidanceOnMinGame.json", "UIRoot/ad/EntranceGuidanceAndroid.json", "UIRoot/ad/EntranceGuidanceIOS.json"],
            superMatchRule: ["res/atlas/resource/superMatchRule.atlas", "UIRoot/superMatch/SuperMatchRule.json"],
            setNick: ["UIRoot/dialog/SetNick.json"],
            actStore: ["UIRoot/activity/ActMysticalStore.json", "res/atlas/resource/actMysticalStore.atlas"],
            ActApkMiniGame: ["res/atlas/resource/ActApkMiniGame.atlas", "UIRoot/activity/ActApkMiniGame.json"],
            WorldBoss: ["UIRoot/FX/Shayubushou.ani", "res/atlas/resource/worldBoss.atlas", "UIRoot/worldBoss.min.json"],
            sceneEmjoys: ["res/atlas/resource/sceneEmjoys.atlas"],
            starRank: ["res/atlas/resource/starRank.atlas", "UIRoot/starRank/StarRank.json", "UIRoot/starRank/StarRankBar.json"],
            noticeBox: ["res/atlas/resource/noticeBox.atlas"],
            seaGoldGift: ["res/atlas/resource/seaGoldGift.atlas", "UIRoot/FX/haishenbaozangsousuo.ani", "UIRoot/FX/baozanghe.ani"],
            smallGoldPig: ["res/atlas/resource/smallGoldPig.atlas"],
            almsShare: ["res/atlas/resource/almsShare.atlas"],
            vipService: ["res/atlas/resource/vipService.atlas"],
            actFireOfWar: ["res/atlas/resource/actFireOfWar.atlas", "UIRoot/activity/ActFireOfWar.json"],
            WeekCard: ["UIRoot/dialog/WeekCard.json", "res/atlas/resource/weekCard.atlas", "UIRoot/Aggregation/WeekCardView.json"],
            GetNewDaoDan: ["UIRoot/dialog/GetNewDaoDan.json"]
        },
        guild: ["res/atlas/resource/Guild.atlas", "UIRoot/guild/ghJoinDialog.json", "UIRoot/guild/ghInfo.json", "UIRoot/guild/ghDialog.json", "UIRoot/guild/ghStorage.json", "UIRoot/guild/ghApply.json", "UIRoot/guild/ghCreateD.json", "UIRoot/guild/ghInvite.json", "UIRoot/guild/ghJoinListDialog.json", "UIRoot/guild/ghUserView.json", "UIRoot/guild/ghUserItem.json", "UIRoot/guild/ghMemberJoinItem.json", "UIRoot/guild/ghMsgBox.json", "UIRoot/guild/ghPutAndGetD.json"],
        specialGift: ["res/atlas/resource/specialGift.atlas", "UIRoot/Aggregation/SpecialGiftView.json", "UIRoot/dialog/specialGift/SpecialGiftDialog.json"],
        newPlayTask: ["res/atlas/resource/newPlayerTask.atlas", "UIRoot/newPlayer/newPlayerTaskTip.json"],
        newPlayTaskDialog: ["UIRoot/newPlayer/newPlayerTaskItem.json", "UIRoot/newPlayer/newPlayerTaskD.json"],
        oneMoneyGiftDialog: ["UIRoot/dialog/OneMoneyGift.json", "res/atlas/resource/oneMoneyGift.atlas", "UIRoot/Aggregation/OneMoneyGiftView.json"],
        BossShareDialog: ["UIRoot/dialog/BossShareDialog.json", "res/atlas/resource/bossShare.atlas"],
        FreeGoldDialog: ["UIRoot/dialog/FreeGoldDialog.json", "res/atlas/resource/freeGold.atlas"],
        BankruptGift: ["UIRoot/Aggregation/BankruptGift.json", "UIRoot/Aggregation/FirstBuyToOneView.json", "res/atlas/resource/firstBuyToOneNew.atlas", "UIRoot/Aggregation/FirstRechargeView.json", "res/atlas/resource/firstBuy.atlas", "resource/img_fenyeanniudi.png"],
        TeHuiGiftDialog: ["UIRoot/tehuiGift/TehuiGift.json", "res/atlas/resource/tehuiGift.atlas"],
        FirstRechargeView: ["res/atlas/resource/firstBuy.atlas", "UIRoot/Aggregation/FirstRechargeView.json"],
        FirstBuyToOneView: ["res/atlas/resource/firstBuyToOneNew.atlas", "UIRoot/Aggregation/FirstBuyToOneView.json"],
        LuckyShakeView: ["res/atlas/resource/luckyShake.atlas", "resource/fx-quan2.png", "resource/bf_ani_15.png", "UIRoot/Aggregation/LuckyShakeView.json", "UIRoot/FX/yaoyiyao.ani", "UIRoot/FX/yaoyiyao3.ani", "UIRoot/FX/yaoyiyao4.part"],
        specialGiftView: ["res/atlas/resource/specialGift.atlas", "UIRoot/Aggregation/SpecialGiftView.json"],
        playPackageView: ["res/atlas/resource/playPackage.atlas", "UIRoot/Aggregation/PlayPackageView.json"],
        oneMoneyGiftView: ["UIRoot/Aggregation/OneMoneyGiftView.json", "res/atlas/resource/oneMoneyGift.atlas"],
        onlineGift: ["UIRoot/onlineGift/OnlineGift.json", "UIRoot/onlineGift/GiftTip.json", "res/atlas/resource/onlineGift.atlas", "res/atlas/resource/onlineGift/eff_btn_raoguang.atlas"],
        qttRedPkg: ["UIRoot/qttRedPkg/QTTRedPkg.json", "UIRoot/qttRedPkg/QTTRedPkgGet.json", "UIRoot/qttRedPkg/QTTRedPkgT.json", "UIRoot/qttRedPkg/QTTRedPkgRule.json", "res/atlas/resource/qttRedPkg.atlas"],
        RedPackageGet: ["UIRoot/dialog/RedPackageGet.json", "res/atlas/resource/redPackageGet.atlas"],
        qttMessageBox: ["UIRoot/qttRedPkg/QTTMessageBox.json", "res/atlas/resource/qttRedPkg.atlas"],
        QTTRedPkgAct: ["UIRoot/qttRedPkg/QTTRedPkgAct.json", "resource/qttRedPkg/img_hongbaohuodong.png", "resource/qttRedPkg/btnCopy.png"],
        QTTShuang11yr: ["UIRoot/qttRedPkg/QttShuang11yure.json", "res/atlas/resource/shuang11yure.atlas"],
        QTTShuang11: ["UIRoot/qttRedPkg/QttShuang11.json", "res/atlas/resource/shuang11.atlas"],
        WeekCardView: ["res/atlas/resource/weekCard.atlas", "UIRoot/Aggregation/WeekCardView.json"],
        SevenDayRecharge: ["UIRoot/dialog/PhoneRecharge.json", "UIRoot/dialog/SevenDayRecharge.json", "res/atlas/resource/sevenDayRecharge.atlas"],
        UpgradeHint: ["UIRoot/upgrade/UpgradeHint.json", "UIRoot/upgrade/UpgradeBtn.json", "res/atlas/resource/upgrade.atlas"],
        SevenDayRechargeRule: ["UIRoot/dialog/SevenDayRechargeRule.json"],
        DavyJonesGift: ["UIRoot/dialog/davyJonesGift.json", "res/atlas/resource/davyJonesGift.atlas"],
        ActLuckOrder: ["UIRoot/activity/ActLuckOrder/ActLuckOrder.json", "res/atlas/resource/ActLuckOrder.atlas"]
    }
} ();
var Resource = function() {
    var s = Laya.Loader;
    var a = null,
    e = false;
    var t = {
        checkLoaded: true,
        load: function(e, t, i, n) {
            new BYLoadTask(e, t,
            function(e) {
                if (n) {
                    a.progress.value = e / 100;
                    a.loadClip.value = e
                }
                i && i(e)
            },
            n)
        },
        hideLoadingView: function() {
            if (a) {
                a.visible = false
            }
        },
        clearRes: function(e, t) {
            if (Game.debug) {
                console.log(e)
            }
            for (var i = 0; i < e.length; i++) {
                var n = e[i];
                if (typeof n == "object") {
                    if (n.url) {
                        this.clearResFun(n.url, t)
                    }
                } else if (typeof n == "string") {
                    this.clearResFun(n, t)
                }
            }
        },
        clearResFun: function(e, t) {
            if (e.indexOf(".atlas") > 0) {
                if (e.indexOf(".min.atlas") > 0) {
                    var i = s.getRes(e);
                    s.clearRes(e, t);
                    BYLoadTask.prototype.removeMergeUrlCache.call(this, i, undefined, t)
                } else {
                    var i = s.getRes(e);
                    if (i && i["parentUrl"]) {
                        var n = s.getRes(i.parentUrl);
                        s.clearRes(e, t);
                        BYLoadTask.prototype.removeMergeUrlCache.call(this, n, e, t)
                    } else {
                        s.clearRes(e, t)
                    }
                }
            } else {
                s.clearRes(e, t);
                if (e.indexOf(".ani") > 0) {
                    Laya.Animation.clearCache(e)
                }
            }
        },
        getResByUrl: function(e) {
            if (e) {
                return Laya.Loader.getRes(e)
            }
            return null
        },
        getMemorySize: function() {
            return Laya.ResourceManager.systemResourceManager.memorySize
        }
    };
    return t
} (); (function() {
    var t = Laya.Event; (function() {
        function e() {
            e.super(this);
            this.on(t.CLICK, this,
            function() {
                var e = myStorage.getItem("soundSet");
                if (!e.sod) {
                    return
                }
                var t = this.name;
                if (t == "btnClose" || t == "close" || t == "no") {
                    Sound.playSound(Sound.RES.close.url, Sound.RES.close.vol);
                    return
                }
                Sound.playSound(Sound.RES.open.url, Sound.RES.open.vol)
            })
        }
        Laya.class(e, "ButtonSound", Laya.Button, "")
    })(); (function() {
        function e() {
            e.super(this);
            this.on(t.CLICK, this,
            function() {
                var e = myStorage.getItem("soundSet");
                if (!e.sod) {
                    return
                }
                var t = this.name;
                if (t == "btnClose" || t == "close") {
                    Sound.playSound(Sound.RES.close.url, Sound.RES.close.vol);
                    return
                }
                Sound.playSound(Sound.RES.open.url, Sound.RES.open.vol)
            })
        }
        Laya.class(e, "ClickSound", Laya.Image, "")
    })()
})();
var ChatNotice = function() {
    var t = "ChatNoticeFn";
    var s = Laya.Event;
    function i() {
        i.super(this);
        this.initBase(t)
    }
    Laya.class(i, "ChatNoticeFn", ChatNoticeUI, "");
    var e = i.prototype;
    var n = function() {
        var e = new Laya.Label;
        e.color = "#ffffff";
        e.fontSize = 20;
        e.align = "left";
        e.pos(44, 11);
        e.size(632, 14);
        return e
    };
    e.init = function() {
        this.dataList = [];
        this.pos((Game.UIWidth - this.width) / 2, 73);
        Game.UIRoot.addChild(this);
        this.zOrder = 99;
        this._run_ = false;
        this.LabelPool = [];
        for (var e = 0; e < 3; e++) {
            this.LabelPool.push(n())
        }
        this.initEvent()
    };
    e.tween = function() {
        if (Game.state.get() < Game.sceneConfig.sceneID.gameCenter) {
            this.reset();
            return
        }
        this._run_ = true;
        this.alpha = 1;
        Game.UIRoot.addChild(this);
        var e = this.dataList.shift();
        var t = this.LabelPool.shift();
        if (e) {
            if (e.ChatNick) {
                var i = Utils.nickBylen(e.ChatNick);
                t.text = i + ":" + e.ChatContent
            } else {
                t.text = e.ChatContent
            }
            this.divBox.addChild(t);
            t.y = 34;
            var n = Laya.TimeLine.to(t, {
                y: 8
            },
            300, null, 1e3).to(t, {
                y: -20
            },
            200, null, 6e3);
            if (n && n.play) {
                n.once(s.COMPLETE, this,
                function() {
                    this.LabelPool.push(t);
                    if (this._over) {
                        this._run_ = false;
                        this.alpha = 0;
                        n.offAll(s.COMPLETE)
                    }
                });
                n.play(0, false)
            }
            this.timer.once(6200, this,
            function() {
                if (this.dataList.length) {
                    this._over = false;
                    this.tween()
                } else {
                    this._over = true
                }
            })
        }
    };
    e.show = function() {};
    e.display = function() {
        a.display && a.display()
    };
    e.unDisplay = function() {
        a.unDisplay && a.unDisplay()
    };
    e.reset = function() {
        if (WinUtils.getSaveUI(t)) {
            WinUtils.getSaveUI(t).dataList = []
        }
        this.removeSelf()
    };
    var a = {
        unDisplay: null,
        display: null,
        show: function(e) {
            if (Game.isIphoneApp) {
                return
            }
            if (!WinUtils.getSaveUI(t)) {
                new i
            }
            WinUtils.getSaveUI(t).dataList && WinUtils.getSaveUI(t).dataList.push(e);
            if (!WinUtils.getSaveUI(t)._run_) {
                WinUtils.getSaveUI(t).tween();
                WinUtils.getSaveUI(t).alpha = 1
            }
        },
        hide: function() {
            if (WinUtils.getSaveUI(t)) {
                WinUtils.getSaveUI(t).alpha = 0
            }
        }
    };
    return a
} ();
var MessageBox = function() {
    var s = null;
    function a() {
        a.super(this);
        this.submitCall = null;
        this.closeCall = null;
        this.closeEmptyCall = null
    }
    Laya.class(a, "MessageBox", MessageBoxUI, "");
    var e = a.prototype;
    e.init = function() {
        this.width = Game.UIWidth;
        this.height = Game.UIHeight
    };
    e.setMsg = function(e) {
        this.msgLabel.text = 0;
        this.msgLabel.text = e
    };
    e.setModel = function(e) {
        this.btnCancel.visible = true;
        this.btnSubmit.visible = true;
        if (e == t.model.submit) {
            this.btnCancel.visible = false;
            this.btnSubmit.x = 165
        } else {
            this.btnSubmit.x = 261
        }
    };
    e.onOpened = function() {};
    e.onClosed = function(e) {
        if (e == "ok") {
            this.submitCall && this.submitCall()
        } else if (e == "no") {
            this.closeCall && this.closeCall(e)
        } else {
            this.closeEmptyCall && this.closeEmptyCall()
        }
        BaseDialog.prototype.onClosed.call(this);
        Laya.Pool.recover("MessageBox", this)
    };
    e.reset = function() {};
    var t = {
        model: {
            submit: 1
        },
        show: function(e, t, i) {
            s = t;
            if (e) {
                var n = Laya.Pool.getItemByClass("MessageBox", a);
                n.submitCall = null;
                n.closeCall = null;
                n.setMsg(e);
                if (s) {
                    n.onImg.skin = "resource/common/zi_tuichu.png";
                    n.offImg.skin = "resource/common/zi_jixu.png"
                } else {
                    n.onImg.skin = "resource/common/zi_queding.png";
                    n.offImg.skin = "resource/common/zi_quxiao.png"
                }
                n.setModel(i);
                n.popup();
                return n
            }
        }
    };
    return t
} ();
var MsgToast = function() {
    var e = Laya.Tween;
    var t = Laya.Ease;
    var s = 0;
    var a = {
        overT: 0,
        startT: 0
    };
    function n() {
        n.super(this);
        this.show = function(e, t) {
            s++;
            this.content.text = 0;
            this.content.text = e;
            this.img.y = 0;
            this.pos((Game.ViewWidth - this.width) / 2, Game.ViewHeight / 2);
            var i = 200 - s * 34;
            if (s == 1) {
                a.startT = Date.now();
                a.overT = a.startT + 1200
            }
            var n = a.overT - Date.now();
            n = n < 0 ? 10 : n;
            Laya.Tween.to(this.img, {
                y: -i
            },
            n, null, null, 0);
            this.timer.once(n + 300, this,
            function() {
                s--;
                this.removeSelf();
                t && t();
                Laya.Pool.recover("msgToast", this)
            });
            this.zOrder = s;
            Game.TipRoot.addChild(this)
        }
    }
    Laya.class(n, "msgToast", MsgToastUI, "");
    return {
        show: function(e, t) {
            var i = Laya.Pool.getItemByClass("msgToast", n);
            i.show(e, t);
            return i
        }
    }
} ();
var Waiting = function() {
    var e = null;
    var t = {
        show: function() {
            if (!e) {
                e = new waitingUI;
                e.size(Game.ViewWidth, Game.ViewHeight);
                Adapter.fitView(e, e.bg)
            }
            e.visible = true;
            e.alpha = 0;
            e.ani1.play(0, true);
            Game.TipRoot.addChild(e);
            if (!e.autoHide) {
                e.autoHide = function() {
                    t.hide()
                }
            }
            if (!e.showWait) {
                e.showWait = function() {
                    if (e && e.visible) {
                        e.alpha = 1
                    }
                }
            }
            e.timer.once(500, e, e.showWait);
            e.timer.once(2e4, e, e.autoHide)
        },
        hide: function() {
            if (e && e.visible) {
                e.timer.clearAll(e);
                e.visible = false;
                e.ani1.stop()
            } else {}
        }
    };
    return t
} ();
var Notice = function() {
    var e = Laya.Event;
    var i = Laya.HTMLDivElement;
    var t = null;
    function r(e) {
        var t = Utils.Lang(GameConfig.NoticeMsg.getNoticeMsgById(e.MsgId));
        var i = e.MsgParam.split("|");
        for (var n = 0; n < i.length; n++) {
            t = t.replace("{$" + (n + 1) + "}", Utils.Lang(i[n]))
        }
        return t
    }
    function n(e) {
        var t = Laya.Pool.getItemByClass("htmlDiv", i);
        t.style.font = "Microsoft YaHei";
        t.style.wordWrap = false;
        t.style.fontSize = 20;
        t.style.color = "#ffffff";
        t.height = 30;
        t.width = 760;
        t.x = e;
        t.y = 6;
        return t
    }
    function s() {
        s.super(this)
    }
    Laya.class(s, "NoticeFn", NoticeUI, "");
    var a = s.prototype;
    a.init = function() {
        this.dataList = [];
        this.pos((Game.ViewWidth - this.width) / 2, l);
        this.zOrder = 99;
        this._run_ = false;
        this.initEvent();
        this.divPool = [];
        var e = ["<span color='#FFE114'>太棒了</span>", "<span color='#FFFFFF'>太棒了</span>", "<span color='#ff10fc'>太棒了</span>"];
        for (var t = 0; t < 3; t++) {
            var i = n(this.divBox.width);
            i.innerHTML = e[t];
            this.divPool.push(i)
        }
        this._over = true
    };
    a.run = function() {
        if (Game.state.get() < Game.sceneConfig.sceneID.gameCenter) {
            this.reset();
            return
        }
        var e = this.dataList.shift();
        var t = this.divPool.shift();
        if (e && t) {
            try {
                this._run_ = true;
                this.divBox.addChild(t);
                var i = r(e);
                t.innerHTML = i;
                var n = t.contextWidth * 1;
                var s = Math.floor(n < this.width ? (this.width - n) / 2 : 0);
                t.pos(s, 60);
                var a = Laya.TimeLine.to(t, {
                    y: 8
                },
                300, null, 1e3).to(t, {
                    y: -20
                },
                200, null, 4e3);
                if (!this.parent) {
                    this.timer.once(900, this,
                    function() {
                        Game.UIRoot.addChild(this)
                    })
                }
                if (a && a.play) {
                    a.once(Laya.Event.COMPLETE, this,
                    function() {
                        this.divPool.push(t);
                        if (this._over) {
                            this._run_ = false;
                            this.alpha = 0
                        }
                    });
                    a.play(0, false)
                }
                this.timer.once(4200, this,
                function() {
                    if (this.dataList.length) {
                        this._over = false;
                        this.run()
                    } else {
                        this._over = true
                    }
                })
            } catch(e) {
                this.timer.once(4200, this,
                function() {
                    if (this.dataList.length) {
                        this._over = false;
                        this.run()
                    } else {
                        this._over = true
                    }
                })
            }
        } else if (t) {
            this.divPool.push(t)
        }
    };
    a.reset = function() {
        if (o) {
            o.dataList = [];
            this.removeSelf();
            o = null
        }
    };
    var o = null,
    l = 112;
    var h = {
        display: null,
        unDisplay: null,
        show: function(e) {
            if (!Game.isLoadHallPic || Game.RunningInBackstage) {
                return
            }
            if (e.MsgId == 601 && !Player.IsCanShowShark()) {
                return
            }
            if (!o) {
                o = new s;
                o.init()
            }
            if (o) {
                if (o.dataList.length < 3) {
                    o.dataList.push(e)
                }
                if (!o._run_) {
                    o.alpha = 1;
                    o.run()
                }
            }
        },
        hide: function() {
            if (o) {
                o.alpha = 0
            }
        },
        updatePosY: function() {
            if (Game.state.get() > Game.sceneConfig.sceneID.gameCenter) {
                l = 168;
                if (o) {
                    o.y = 168
                }
            } else {
                l = 112;
                if (o) {
                    o.y = 112
                }
            }
        }
    };
    return h
} ();
var VipSceneLeftTime = function() {
    var i = "VipSceneLeftTimeFun";
    function t() {
        t.super(this);
        this.initBase(i)
    }
    Laya.class(t, i, SceneLeftTimeUI, "");
    var e = t.prototype;
    e.init = function() {
        this.initEvent();
        this.centerX = 0;
        this.top = Activity.pigAct() ? -300 : 16;
        this.leftTime = Player.getVipLeftTime()
    };
    e.unDisplay = function() {
        this.reset()
    };
    e.display = function() {
        if (this.leftTime <= 0) {
            return false
        }
        this.SceneTimer = SceneTimer.I();
        this.SceneTimer.init(this.leftTime, "hh:ss:mm");
        this.SceneTimer.start();
        this.SceneTimer.updateCall = function(e, t) {
            if (WinUtils.getSaveUI(i)) {
                WinUtils.getSaveUI(i).leftTime = e;
                WinUtils.getSaveUI(i).left_time.value = t;
                if (e == 0) {
                    WinUtils.getSaveUI(i).hide()
                }
            }
        };
        this.visible = ChangeLeftTime.isInStage() ? false: true
    };
    e.show = function(e) {
        this.visible = true;
        if (e) {
            e.addChild(this)
        }
    };
    e.hide = function(e) {
        if (e) {
            this.visible = false
        } else {
            this.reset()
        }
    };
    e.reset = function() {
        if (this) {
            if (this.SceneTimer) {
                this.SceneTimer.stop();
                this.SceneTimer = null
            }
            this.removeSelf()
        }
    };
    return {
        show: function(e) {
            if (!WinUtils.getSaveUI(i)) {
                new t
            }
            WinUtils.getSaveUI(i).show(e)
        },
        hide: function(e) {
            WinUtils.getSaveUI(i) && WinUtils.getSaveUI(i).hide(e)
        },
        updateTime: function(e) {
            if (WinUtils.getSaveUI(i)) {
                WinUtils.getSaveUI(i).leftTime = e
            }
        },
        isInStage: function() {
            if (WinUtils.getSaveUI(i)) {
                return WinUtils.getSaveUI(i).visible
            } else {
                return false
            }
        }
    }
} ();
var ChangeLeftTime = function() {
    var i = "ChangeLeftTimeFun";
    function n() {
        n.super(this);
        this.initBase(i)
    }
    Laya.class(n, i, ChangeLeftTimeUI, "");
    var e = n.prototype;
    e.initData = function(e) {
        this.initEvent();
        this.centerX = 0;
        this.top = 16;
        this.leftTime = parseInt(e / 1e3)
    };
    e.display = function() {
        if (VipSceneLeftTime.isInStage()) {
            VipSceneLeftTime.hide()
        }
        if (this.leftTime <= 0) {
            return false
        }
        this.timer.loop(1e3, this, this.timerLoopFun)
    };
    e.unDisplay = function() {
        this.reset();
        Request.GetVipSceneTimeReq()
    };
    e.show = function(e) {
        if (e) {
            VipSceneLeftTime.hide(true);
            e.addChild(this)
        }
        this.visible = true
    };
    e.timerLoopFun = function() {
        if (this.leftTime <= 0) {
            ChangE.hide();
            this.hide();
            return false
        }
        this.leftTimeFont.value = this.formateTime(this.leftTime);
        this.leftTime--
    };
    e.formateTime = function(e) {
        if (e < 60) {
            if (e < 10) {
                return "00:00:0" + e
            } else {
                return "00:00:" + e
            }
        } else if (e >= 60 && e < 60 * 60) {
            var t = parseInt(e / 60),
            i = "";
            if (t < 10) {
                i = "0" + t
            } else {
                i = t.toString()
            }
            var n = e % 60,
            s = "";
            if (n < 10) {
                s = "0" + n
            } else {
                s = n.toString()
            }
            return "00:" + i + ":" + s
        } else {
            var a = parseInt(e / 3600),
            r = "";
            if (a < 10) {
                r = "0" + a
            } else {
                r = a.toString()
            }
            var o = parseInt(e % 3600 / 60),
            l = "";
            if (o < 10) {
                l = "0" + o
            } else {
                l = o.toString()
            }
            var h = e % 3600 % 60,
            u = "";
            if (h < 10) {
                u = "0" + h
            } else {
                u = h.toString()
            }
            return r + ":" + l + ":" + u
        }
    };
    e.hide = function() {
        this.visible = false;
        this.reset()
    };
    e.reset = function() {
        if (this) {
            this.timer.clear(this, this.timerLoopFun);
            this.removeSelf()
        }
    };
    return {
        show: function(e, t) {
            if (!WinUtils.getSaveUI(i)) {
                new n;
                WinUtils.getSaveUI(i).initData(t)
            }
            WinUtils.getSaveUI(i).show(e)
        },
        hide: function() {
            WinUtils.getSaveUI(i) && WinUtils.getSaveUI(i).hide()
        },
        isInStage: function() {
            if (WinUtils.getSaveUI(i)) {
                return WinUtils.getSaveUI(i).visible
            } else {
                return false
            }
        }
    }
} ();
var EmjoyView = function() {
    var n = "EmjoyViewFun";
    var c = null;
    function e() {
        e.super(this)
    }
    Laya.class(e, n, emjoysViewUI, "");
    var t = e.prototype;
    t.init = function() {
        this.initEvent();
        this.btnGift.visible = false;
        this.emjoysLists.scrollBar.hide = true;
        this.emjoysLists.renderHandler = new Laya.Handler(this, this.emjoyRenderFun);
        this.on(Laya.Event.CLICK, this,
        function(e) {
            var t = e.target.name;
            switch (t) {
            case "btnCopy":
                FishScene.setCopyUserId();
                break;
            case "btnGift":
                PackageGift2.show(c);
                break
            }
        })
    };
    t.emjoyRenderFun = function(e, t) {
        e.off(Laya.Event.CLICK, this, this.emjoySelectFun);
        e.on(Laya.Event.CLICK, this, this.emjoySelectFun)
    };
    t.setViewData = function(e) {
        var t = e.userInfo;
        if (!t) {
            return false
        }
        c = t;
        var i = GameConfig.getCfgSceneFace();
        if (i) {
            var n = [];
            for (var s in i) {
                var a = i[s];
                var r = {
                    faceIcon: {
                        skin: "resource/sceneEmjoys/emjoy_" + a.Id + ".png"
                    },
                    goldNum: {
                        text: a.Gold || "0"
                    },
                    Id: a.Id,
                    UserId: t.UserId
                };
                n.push(r)
            }
            this.emjoysLists.array = n
        }
        var o = this.userHeadImg;
        if (t.AvatarUrl) {
            o.skin = Utils.AvatarAddPrefix(t.AvatarUrl)
        } else {
            o.skin = "resource/head/" + (t.AvatarID == 0 ? 1 : t.AvatarID) + ".png"
        }
        this.vipLevelImg.skin = "resource/icon/vipLevel/vip" + t.VipLevel + ".png";
        this.userNameLabel.text = t.Nick || "";
        var l = this.usreSexImg;
        switch (t.Sex) {
        case 0:
            l.skin = "resource/fishScene/icn-women.png";
            l.visible = false;
            break;
        case 1:
            l.skin = "resource/fishScene/icn-men.png";
            l.visible = true;
            break;
        case 2:
            l.skin = "resource/fishScene/icn-women.png";
            l.visible = true;
            break;
        default:
            l.skin = "resource/fishScene/icn-women.png";
            l.visible = false;
            break
        }
        this.userIdLabel.text = "编号：" + t.UserId;
        var h = GameConfig.Item.getItemInfoById(t.WingId);
        if (h) {
            this.currentChiBang.text = h.ItemName || ""
        } else {
            this.currentChiBang.text = GameConfig.ErrorMsg.clientErrorMsg(10072) || ""
        }
        var u = GameConfig.Item.getItemInfoById(t.CannonId);
        if (u) {
            this.currentPaoTai.text = u.ItemName || ""
        } else {
            this.currentPaoTai.text = ""
        }
    };
    t.emjoySelectFun = function(e) {
        var t = e.target.dataSource;
        if (t) {
            Request.SceneFaceReq(t.Id * 1, t.UserId * 1);
            this.visible = false;
            if (this.parent) {
                this.parent.visible = false
            }
        }
    };
    t.show = function(e, t) {
        this.x = e.x || 0;
        this.y = e.y || 0;
        if (e.localPos == 4) {
            this.imgBar.y = 256;
            this.imgBar.rotation = 0
        } else {
            this.imgBar.rotation = 180;
            this.imgBar.y = -3
        }
        if (t) {
            this.visible = true;
            t.visible = true
        }
    };
    t.hide = function() {
        this.removeSelf()
    };
    t.reset = function() {
        this.removeSelf()
    };
    return {
        show: function(t, i) {
            WinUtils.showView(RES.loadTaskList.sceneEmjoys, n, i, e,
            function(e) {
                e.isClearRes = false;
                if (t && t.userInfo && t.userInfo.UserId) {
                    Request.CheckFriendReq(t.userInfo.UserId)
                }
                e.setViewData(t);
                e.show(t, i)
            })
        },
        hide: function() {
            WinUtils.getSaveUI(n) && WinUtils.getSaveUI(n).hide()
        },
        SceneFaceRep: function(e) {
            if (e.Tag) {
                Request.GetUserMoneyReq()
            } else if (e.MsgID) {
                MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgID))
            }
        },
        SceneFaceReport: function(e) {},
        CheckFriendRep: function(e) {
            var t = WinUtils.getSaveUI(n);
            if (t && e.Tag) {
                switch (e.Type) {
                case 0:
                    t.btnGift.visible = false;
                    break;
                case 1:
                    t.btnGift.visible = Player.getOpenGiveBtn();
                    break;
                case 2:
                    t.btnGift.visible = false;
                    break
                }
            }
        }
    }
} ();
var FriendsChatMsg = function() {
    var n = "FriendsChatNoticeUI";
    var e = FriendsChatNoticeUI.prototype;
    e.init = function() {
        this.initEvent()
    };
    e.show = function(e, t, i) {
        this.x = e;
        this.y = t;
        if (i) {
            i.addChild(this);
            i.visible = true;
            Laya.timer.once(2e3, this,
            function() {
                i.visible = false;
                this.removeSelf()
            })
        }
    };
    e.hide = function() {
        this.removeSelf();
        this.reset()
    };
    return {
        show: function(e, t, i) {
            if (!WinUtils.getSaveUI(n)) { (new FriendsChatNoticeUI).initBase(n)
            }
            WinUtils.getSaveUI(n).show(e, t, i)
        },
        hide: function() {
            WinUtils.getSaveUI(n) && WinUtils.getSaveUI(n).hide()
        }
    }
} ();
var ExileBossLeftTime = function() {
    var n = "LeftTimeFn";
    function s() {
        s.super(this);
        this.initBase(n)
    }
    Laya.class(s, n, ExileBossLeftTimeUI, "");
    var e = s.prototype;
    e.initData = function(e, t) {
        this.initEvent();
        this.pivot(93, 0);
        this.pos(Game.ViewWidth / 2, -100);
        this.leftTime = parseInt(t / 1e3);
        var i = e.type;
        if (i == Game.FishID.Fish_bossXiaoYao) {
            this.fishName.skin = "resource/fishScene/zi_xiaoyao.png"
        } else if (i == Game.FishID.Fish_bossJiangJun) {
            this.fishName.skin = "resource/fishScene/zi_jiangjun.png"
        } else if (i == Game.FishID.Fish_bossQueen) {
            this.fishName.skin = "resource/fishScene/zi_nvwang.png"
        } else if (i == Game.FishID.Fish_bossDragon) {
            this.fishName.skin = "resource/fishScene/zi_molong.png"
        }
    };
    e.display = function() {
        if (this.leftTime <= 0) {
            return false
        }
        Laya.Tween.to(this, {
            y: 0
        },
        500);
        this.timerLoopFun()
    };
    e.unDisplay = function() {
        this.reset()
    };
    e.show = function(e, t) {
        if (e) {
            VipSceneLeftTime.hide(true);
            e.addChild(this)
        }
        this.leftTime = parseInt(t / 1e3);
        this.visible = true
    };
    e.timerLoopFun = function() {
        this.leftTimeFont.value = this.formatTime(this.leftTime);
        if (this.leftTime <= 0) {
            ExileBoss.hide();
            this.hide();
            return false
        }
        this.leftTime--;
        this.timer.once(1e3, this, this.timerLoopFun)
    };
    e.formatTime = function(e) {
        if (e < 60) {
            if (e < 10) {
                return "00:0" + e
            } else {
                return "00:" + e
            }
        } else if (e >= 60 && e < 60 * 60) {
            var t = parseInt(e / 60),
            i = "";
            if (t < 10) {
                i = "0" + t
            } else {
                i = t.toString()
            }
            var n = e % 60,
            s = "";
            if (n < 10) {
                s = "0" + n
            } else {
                s = n.toString()
            }
            return i + ":" + s
        }
    };
    e.hide = function() {
        this.leftTime = -1;
        this.visible = false;
        this.reset()
    };
    e.reset = function() {
        if (this) {
            this.timer.clear(this, this.timerLoopFun);
            this.removeSelf()
        }
    };
    return {
        show: function(e, t, i) {
            if (!WinUtils.getSaveUI(n)) {
                new s;
                WinUtils.getSaveUI(n).initData(e, i)
            }
            WinUtils.getSaveUI(n).show(t, i)
        },
        hide: function() {
            WinUtils.getSaveUI(n) && WinUtils.getSaveUI(n).hide()
        },
        isInStage: function() {
            if (WinUtils.getSaveUI(n)) {
                return WinUtils.getSaveUI(n).visible
            } else {
                return false
            }
        }
    }
} ();
var AutoPos = function() {
    var t = [];
    function i(e) {
        this.box = e;
        this.direction = "left";
        this.gap = 6;
        this.childList = [];
        this.init = function() {
            if (!this.box || this.box && this.box.numChildren < 2) {
                this.destroy();
                return
            }
            this.box.on(Laya.Event.UNDISPLAY, this, this.destroy);
            this.childList = [];
            for (var e = 0; e < this.box.numChildren; e++) {
                var t = this.box.getChildAt(e);
                this.childList.push(t)
            }
            var i = this.childList[0];
            var n = this.childList[this.childList.length - 1];
            if (n.x - i.x <= n.y - i.y) {
                this.direction = "v"
            } else {
                this.direction = "h"
            }
            this.update()
        };
        this.update = function() {
            var e = 0,
            t = 0;
            for (var i = 0; i < this.childList.length; i++) {
                var n = this.childList[i];
                if (n && n.visible) {
                    var s = t + this.gap + (this.direction == "h" ? n.pivotX: n.pivotY);
                    if (this.direction == "h") {
                        if (n.x != s) {
                            n.scale(0, 0);
                            n.x = t + this.gap + n.pivotX;
                            Laya.Tween.to(n, {
                                scaleX: 1,
                                scaleY: 1
                            },
                            100, null, null, 100)
                        }
                        t = n.x + n.pivotX
                    } else {
                        if (n.y != s) {
                            n.scale(0, 0);
                            n.y = t + this.gap + n.pivotY;
                            Laya.Tween.to(n, {
                                scaleX: 1,
                                scaleY: 1
                            },
                            100, null, null, 100)
                        }
                        t = n.y + n.pivotY
                    }
                }
            }
        };
        this.destroy = function() {
            n.delInst(this)
        };
        this.init()
    }
    var n = {
        _timerInst: null,
        _loop: false,
        _instList: [],
        delInst: function(e) {
            if (e) {
                this._instList.removeByValue(e);
                if (e.box) t.removeByValue(e.box)
            }
            if (this._instList.length == 0) {
                this._loop = false
            }
        },
        frameLoop: function() {
            for (var e = 0; e < this._instList.length; e++) {
                var t = this._instList[e];
                if (t && t.update) {
                    t.update()
                }
            }
        },
        add: function(e) {
            var t = new i(e);
            this._instList.push(t);
            if (!this._loop) {
                if (!this._timerInst) {
                    this.timerInst = new Laya.Timer
                }
                this._loop = true;
                this.timerInst.frameLoop(1, this, this.frameLoop)
            }
        },
        addNew: function(e) {
            if (t.indexOf(e.box) > -1) return;
            this._instList.push(e)
        }
    };
    return n
} ();
var AutoHorizontalLayout = function() {
    function n(e, t) {
        this.box = e;
        this.gap = t;
        this.childList = [];
        this.init = function() {
            if (!this.box || this.box && this.box.numChildren < 2) {
                this.destroy();
                return
            }
            this.box.on(Laya.Event.UNDISPLAY, this, this.destroy);
            this.childList = [];
            for (var e = 0; e < this.box.numChildren; e++) {
                var t = this.box.getChildAt(e);
                this.childList.push(t)
            }
        };
        this.update = function() {
            var e = 0,
            t = 0;
            for (var i = 0; i < this.childList.length; i++) {
                var n = this.childList[i];
                if (n && n.visible) {
                    var s = t + this.gap + n.pivotX * .8;
                    if (n.x != s) {
                        n.x = s
                    }
                    t = n.x + n.pivotX
                }
            }
        };
        this.update();
        this.destroy = function() {
            i.delInst(this)
        };
        this.init()
    }
    var i = {
        _timerInst: null,
        _loop: false,
        _instList: [],
        delInst: function(e) {
            if (e) {
                this._instList.removeByValue(e)
            }
            if (this._instList.length == 0) {
                this._loop = false
            }
        },
        frameLoop: function() {
            for (var e = 0; e < this._instList.length; e++) {
                var t = this._instList[e];
                if (t && t.update) {
                    t.update()
                }
            }
        },
        add: function(e, t) {
            var i = new n(e, t);
            this._instList.push(i);
            if (!this._loop) {
                if (!this._timerInst) {
                    this.timerInst = new Laya.Timer
                }
                this._loop = true;
                this.timerInst.frameLoop(1, this, this.frameLoop)
            }
        }
    };
    return i
} ();
var Tab = function() {
    function e(n, s) {
        this.init = function() {
            for (var e = 0; e < n.length; e++) { (function(e, t) {
                    if (n[e]) {
                        n[e].clickHandler = new Laya.Handler(t, t.updateState, [e])
                    }
                })(e, this)
            }
        };
        this.updateState = function(e) {
            for (var t = 0; t < n.length; t++) {
                if (n[t]) {
                    n[t].skin = s.btnState[e == t ? 1 : 0];
                    var i = n[t].getChildByName("zi");
                    if (i) {
                        i.skin = s.iconState[t] + (e == t ? "1.png": "0.png")
                    }
                    n[t].zOrder = e == t ? 2 : 0
                }
            }
            if (this.clickCall) {
                this.clickCall(e)
            }
        };
        this.init()
    }
    return e
} ();
var BlueTip = function() {
    var s = "BlueTipFun";
    function a() {
        a.super(this);
        this.initBase(s)
    }
    Laya.class(a, s, BlueTipUI, "");
    var e = a.prototype;
    e.showItem = function() {
        if (this.allList && this.allList.length > 0) {
            var e = this.allList.shift();
            if (e.parent && this.parent != e.parent) {
                this.removeSelf();
                e.parent.addChild(this)
            }
            this.width = this.bg.width = e.width;
            this.height = this.bg.height = e.height;
            this.bgtext.text = e.text;
            this.bgtext.width = e.width - this.bgtext.x - this.bgtext.x;
            this.bgtext.height = e.height - this.bgtext.y - this.bgtext.y;
            if (e.p == "l") {
                this.jiantou.rotation = 90;
                this.jiantou.x = 6;
                this.jiantou.y = e.height / 2;
                this.anchorX = 0;
                this.anchorY = .5
            } else if (e.p == "t") {
                this.jiantou.rotation = 180;
                this.jiantou.x = e.width / 2;
                this.jiantou.y = 5;
                this.anchorX = .5;
                this.anchorY = 0
            } else if (e.p == "r") {
                this.jiantou.rotation = 270;
                this.jiantou.x = e.width - 6;
                this.jiantou.y = e.height / 2;
                this.anchorX = 1;
                this.anchorY = .5
            } else {
                this.jiantou.rotation = 0;
                this.jiantou.x = e.width / 2;
                this.jiantou.y = e.height - 5;
                this.anchorX = .5;
                this.anchorY = 0
            }
            this.x = e.x;
            this.y = e.y;
            if (e.delay) {
                this.visible = false;
                this.timer.once(5e3 + e.delay, this, this.showItem);
                this.timer.once(e.delay, this, this.change)
            } else {
                this.visible = true;
                this.timer.once(5e3, this, this.showItem)
            }
        } else {
            this.close()
        }
    };
    e.change = function() {
        this.visible = true
    };
    e.show = function(e) {
        if (this.allList) this.allList.concat(e);
        else {
            this.allList = e
        }
        this.showItem()
    };
    e.close = function() {
        this.comp && this.comp();
        this.comp = null;
        this.allList = null;
        this.removeSelf();
        WinUtils.removeSaveUI(s)
    };
    return {
        show: function(e, t, i) {
            var n = WinUtils.getSaveUI(s);
            if (!n) {
                n = new a
            }
            if (t) t.addChild(n);
            n.comp = i;
            n.show(e)
        },
        hide: function() {
            if (WinUtils.getSaveUI(s)) WinUtils.getSaveUI(s).visible = false
        }
    }
} ();
var AutoHorizontalLayout = function() {
    function n(e, t) {
        this.box = e;
        this.gap = t;
        this.childList = [];
        this.init = function() {
            if (!this.box || this.box && this.box.numChildren < 2) {
                this.destroy();
                return
            }
            this.box.on(Laya.Event.UNDISPLAY, this, this.destroy);
            this.childList = [];
            for (var e = 0; e < this.box.numChildren; e++) {
                var t = this.box.getChildAt(e);
                this.childList.push(t)
            }
        };
        this.update = function() {
            var e = 0,
            t = 0;
            for (var i = 0; i < this.childList.length; i++) {
                var n = this.childList[i];
                if (n && n.visible) {
                    var s = t + this.gap + n.pivotX * .8;
                    if (n.x != s) {
                        n.x = s
                    }
                    t = n.x + n.pivotX
                }
            }
        };
        this.update();
        this.destroy = function() {
            i.delInst(this)
        };
        this.init()
    }
    var i = {
        _timerInst: null,
        _loop: false,
        _instList: [],
        delInst: function(e) {
            if (e) {
                this._instList.removeByValue(e)
            }
            if (this._instList.length == 0) {
                this._loop = false
            }
        },
        frameLoop: function() {
            for (var e = 0; e < this._instList.length; e++) {
                var t = this._instList[e];
                if (t && t.update) {
                    t.update()
                }
            }
        },
        add: function(e, t) {
            var i = new n(e, t);
            this._instList.push(i);
            if (!this._loop) {
                if (!this._timerInst) {
                    this.timerInst = new Laya.Timer
                }
                this._loop = true;
                this.timerInst.frameLoop(1, this, this.frameLoop)
            }
        }
    };
    return i
} ();
var AutoPosNew = function() {
    function o(e, t, i, n) {
        this.box = e;
        this.itemW = t;
        this.dir = n;
        this.space = i;
        if (!n) {
            this.dir = o.View_Dir.H
        }
        if (!this.space) this.space = 0
    }
    var e = o.prototype;
    e.setFitBg = function(e) {
        this.fitBg = e;
        return this
    };
    e.update = function() {
        if (this.box && this.box.numChildren > 1 && this.box.displayedInStage) {
            if (this.itemW) {
                this.setFixed()
            } else {
                this.setChange()
            }
        }
        if (!this.box || this.box && !this.box.displayedInStage) {
            AutoPos.delInst(this)
        }
    };
    e.setFixed = function() {
        var e = 0;
        var t = this.itemW / 2;
        for (var i = 0; i < this.box.numChildren; i++) {
            var n = this.box._childs[i];
            var s = i == 0 ? 0 : this.space;
            if (n.visible) {
                if (this.dir == o.View_Dir.H) n.x = t + e * this.itemW + s;
                else n.y = t + e * this.itemW + s;
                e++
            }
        }
    };
    e.setChange = function() {
        var e = 0;
        var t = 0;
        var i = undefined;
        var n = 0;
        for (var s = 0; s < this.box.numChildren; s++) {
            var a = this.box._childs[s];
            var r = s == 0 ? 0 : this.space;
            if (a.visible) {
                if (e == 0) {
                    if (this.dir == o.View_Dir.H) {
                        t = a.width / 2
                    } else {
                        t = a.height / 2
                    }
                }
                if (this.dir == o.View_Dir.H) {
                    if (e == 0) {
                        a.x = t
                    } else {
                        a.x = n + a.width + r
                    }
                    n = a.x
                } else {
                    if (e == 0) {
                        a.y = t
                    } else {
                        a.y = n + a.height + r
                    }
                    n = a.y
                }
                e++;
                i = a
            }
        }
        if (i && this.fitBg && this.fitBg.displayedInStage) {
            if (this.dir == o.View_Dir.H) {
                this.fitBg.width = i.x + i.width / 2
            } else {
                this.fitBg.height = i.y + i.height / 2
            }
        }
    };
    return o
} ();
AutoPosNew.View_Dir = {
    H: 1,
    V: 2
};
var GetFirstReward = function() {
    var v = {
        1 : "resource/firstGiftBag/img_gold.png",
        2 : "resource/firstGiftBag/img_jiangquan.png",
        101 : "resource/firstGiftBag/skill_bingdong.png",
        102 : "resource/firstGiftBag/skill_suoding.png",
        103 : "resource/firstGiftBag/skill_kuangbao.png"
    };
    function e() {
        e.super(this)
    }
    Laya.class(e, "GetFirstRewardFn", GetFirstRewardUI, "");
    var t = e.prototype;
    t.init = function() {
        this.handAnim.play();
        var e = this.itemList.cells;
        this.timer.once(5500, this, t);
        function t() {
            var e = this.itemList.cells;
            this.animation(e)
        }
        this.btnGet.clickHandler = new Laya.Handler(this,
        function() {
            this.timer.clear(this, t);
            this.handAnim.clear();
            Sound.stopSoundByUrl(Sound.RES.jiangquanExchangGift.url);
            this.animation(e)
        });
        this.duihuan.visible = Player.getNewPlayerCanExchangeNotice() > 0
    };
    t.animation = function(r) {
        NoviceGuidanceOnMinGame.showMask();
        ActionReport.addLog(ActionReport.actionIndex.getFirstReward_Get);
        var o = 238;
        var l = this;
        for (var e = 0; e < r.length; e++) {
            var t = r[e]; (function(e, t) {
                var i = WinUtils.getSaveUI(GameCenter.SKIN_NAME).btnBackIcon;
                var n = Utils.localToGlobal(i);
                var s = n.y - 37.5;
                var a = n.x - 31.5;
                Laya.timer.once(t * o / 2, null,
                function() {
                    Utils.tweenTo(e, {
                        x: a,
                        y: s,
                        scaleX: .5,
                        scaleY: .5
                    },
                    1e3, Laya.Ease.backIn,
                    function() {
                        e.removeSelf();
                        e.visible = false;
                        Sound.playSound(Sound.RES.DiamondIn.url, Sound.RES.DiamondIn.vol);
                        if (t == r.length - 1) {
                            l.close();
                            l.closeCallback && l.closeCallback();
                            GameCenter.quan_Entry()
                        }
                    })
                })
            })(t, e)
        }
    };
    t.loadResCompleted = function() {
        var e = GameConfig.shopCity.getCfg();
        if (e) {
            var t = null,
            i = null;
            e.sort(function(e, t) {
                return e.Sort - t.Sort
            });
            for (var n = 0; n < e.length; n++) {
                i = e[n];
                if (i && i.GoodsId && !i.Type && !i.MallType) {
                    t = i.Detail
                }
            }
        }
        var s = this.itemList;
        if (t && typeof t == "string") {
            var a = [];
            var r = 0;
            var o = t.split("|");
            for (var l = 0; l < o.length; l++) {
                var h = o[l].split(":"),
                u = h[0],
                c = h[1];
                if (u == 2) {
                    r += parseInt(c)
                }
                var f = GameConfig.Item.getItemInfoById(u);
                a.push({
                    numClip: {
                        value: c
                    },
                    icon: {
                        skin: v[u] ? v[u] : f.skin
                    }
                })
            }
            if (a[0]) {
                this.jiangquan_get.value = r;
                console.log("jqnum: " + r);
                this.jiangquan_tip.text = "还差" + (1200 - r) + "奖券";
                s.array = a;
                s.visible = true;
                var d = a.length;
                var g = 120,
                p = s.spaceX;
                var _ = d * g + (d - 1) * p;
                s.repeatX = d;
                s.width = _;
                s.pivotX = _ / 2;
                s.x = 624
            } else {
                s.visible = false
            }
        }
        var m = GameConfig.exchange.getLotteryCfg();
        var s = this.duihuanlist;
        if (m) {
            var a = [];
            for (var l = 0; l < m.length; l++) {
                var i = m[l];
                if (i.NeedCondition == 1) {
                    a.push({
                        numClip: i.Num,
                        icon: {
                            skin: "resource/icon/" + i.ItemId + ".png"
                        }
                    })
                }
            }
            if (a[0]) {
                a.sort(function(e, t) {
                    return e.numClip - t.numClip
                });
                s.array = a;
                this.duihuan.visible = true;
                var d = a.length;
                var g = 70,
                p = s.spaceX;
                var _ = d * g + (d - 1) * p;
                s.repeatX = d;
                s.width = _
            } else {
                this.duihuan.visible = false
            }
        } else {
            this.duihuan.visible = false
        }
    };
    t.setCloseCallback = function(e) {
        this.closeCallback = e
    };
    t.calJiangQuanNum = function(e) {};
    t.onOpened = function() {
        n.opened && n.opened();
        if (!this.isInit) {
            this.isInit = true;
            this.init()
        }
        NoviceGuidanceOnMinGame.hideMask();
        Sound.playSound(Sound.RES.jiangquanExchangGift.url, Sound.RES.jiangquanExchangGift.vol)
    };
    t.onClosed = function() {
        n.closed && n.closed();
        ActionReport.addLog(ActionReport.actionIndex.getFirstReward_Close);
        BaseDialog.prototype.onClosed.call(this);
        i = null
    };
    t.reset = function() {
        this.close();
        i = null
    };
    var i = null;
    var n = {
        opened: null,
        closed: null,
        show: function() {
            console.log("---起航配置------------");
            if (!i) {
                i = Laya.Pool.getItemByClass("GetFirstRewardFn", e);
                i.loadResCompleted();
                i.popup()
            }
            return i
        },
        loadShow: function() {
            Waiting.show();
            Resource.load(RES.loadTaskList.firstGiftBag,
            function() {
                Waiting.hide();
                n.show()
            })
        },
        GetMallListRep: function() {
            if (i) {
                i.loadResCompleted()
            }
        }
    };
    return n
} ();
var Pokedex = function() {
    var o = {
        490 : "resource/pokedex/zi_longxiawang.png",
        493 : "resource/pokedex/zi_xiongmao.png",
        500 : "resource/pokedex/zi_zhangyu.png",
        501 : "resource/pokedex/zi_baogui.png",
        502 : "resource/pokedex/zi_huolong.png",
        503 : "resource/pokedex/zi_meirenyu.png",
        505 : "resource/pokedex/zi_xiaoyao.png",
        506 : "resource/pokedex/zi_jiangjun.png",
        507 : "resource/pokedex/zi_nvwang.png",
        508 : "resource/pokedex/zi_molong.png",
        602 : "resource/pokedex/zi_huangjinjukun.png"
    };
    var l = {
        306 : {
            skin: "resource/pokedex/zi_jinlongyu.png"
        },
        308 : {
            skin: "resource/pokedex/zi_guafen.png"
        },
        316 : {
            skin: "resource/pokedex/zi_yiwangdajin.png"
        },
        321 : {
            skin: "resource/pokedex/zi_jubaopen.png"
        },
        400 : {
            skin: "resource/pokedex/zi_jiangquan.png"
        },
        408 : {
            skin: "resource/pokedex/zi_haishenbaozang.png"
        },
        407 : {
            skin: "resource/pokedex/zi_dianman.png"
        },
        410 : {
            skin: "resource/pokedex/zi_zhadan.png"
        },
        323 : {
            skin: "resource/pokedex/zi_change.png"
        }
    };
    function e() {
        e.super(this)
    }
    Laya.class(e, "PokedexFn", PokedexUI, "");
    var t = e.prototype;
    t.init = function() {
        this.bossList.scrollBar.hide = true;
        this.specialList.scrollBar.hide = true;
        this.pokedexList.scrollBar.hide = true;
        this.updateList();
        this.btnMenu = {
            currIndex: 0,
            obj: [this.btnBoss, this.btnSpecial, this.btnGeneral],
            data: [["resource/pokedex/zi_shouling_sel.png", "resource/pokedex/zi_shouling_nor.png"], ["resource/pokedex/zi_teshu_sel.png", "resource/pokedex/zi_teshu_nor.png"], ["resource/pokedex/zi_putong_sel.png", "resource/pokedex/zi_putong_nor.png"]],
            posX: [124, 117],
            size: [[85, 57], [104, 66]]
        };
        this.on(Laya.Event.CLICK, this,
        function(e) {
            var t = e.target.name;
            switch (t) {
            case "btnBoss":
                this.changeView(0);
                break;
            case "btnSpecial":
                this.changeView(1);
                break;
            case "btnGeneral":
                this.changeView(2);
                break
            }
        })
    };
    t.updateMenu = function(e) {
        if (e < this.btnMenu.obj.length) {
            var t = this.btnMenu.obj[this.btnMenu.currIndex],
            i = t.getChildAt(0);
            t.skin = "resource/common/btn_fenlei_sel.png";
            i.skin = this.btnMenu.data[this.btnMenu.currIndex][1];
            i.centerX = 0;
            i.centerY = 0;
            t.x = this.btnMenu.posX[0];
            var n = this.btnMenu.size[0];
            Laya.Tween.to(t, {
                width: n[0],
                height: n[1]
            },
            80);
            var s = this.btnMenu.obj[e],
            a = s.getChildAt(0);
            s.skin = "resource/common/btn_fenlei_nor.png";
            a.skin = this.btnMenu.data[e][0];
            a.centerX = 0;
            a.centerY = 0;
            s.x = this.btnMenu.posX[1];
            var r = this.btnMenu.size[1];
            Laya.Tween.to(s, {
                width: r[0],
                height: r[1]
            },
            80);
            this.btnMenu.currIndex = e
        }
    };
    t.changeView = function(e) {
        if (this.btnMenu.currIndex == e) {
            return
        }
        this.updateMenu(e);
        if (e == 0) {
            this.bossList.visible = true;
            this.specialList.visible = false;
            this.pokedexList.visible = false
        } else if (e == 1) {
            this.bossList.visible = false;
            this.specialList.visible = true;
            this.pokedexList.visible = false
        } else if (e == 2) {
            this.bossList.visible = false;
            this.specialList.visible = false;
            this.pokedexList.visible = true
        }
    };
    t.updateList = function() {
        var e = GameConfig.fish.getFishPokedexCfg();
        e.sort(function(e, t) {
            return t.FishId - e.FishId
        });
        var t = [];
        var i = [];
        var n = [];
        for (var s = 0; s < e.length; s++) {
            var a = e[s];
            if (a.FishId == 99) continue;
            if (a.FishPokedex) {
                var r = a.FishMultiple;
                if (a.FishType == 5) {
                    t.push({
                        icon: "resource/pokedex/" + a.FishPokedex,
                        nameImg: {
                            skin: o[a.FishId]
                        }
                    })
                }
                if (!a.FishPokedexExplain && a.FishType != 5 && a.FishType != 4 && r[0] != 0 && a.FishId != 320 && a.FishId != 321 && a.FishId != 317 && a.FishId != 318 && a.FishId != 319) {
                    n.push({
                        icon: "resource/pokedex/" + a.FishPokedex,
                        fishMultiple: r.length == 2 ? r[0] + "—" + r[1] : r[0],
                        id: a.FishId
                    })
                }
                if (a.FishPokedexExplain) {
                    i.push({
                        icon: "resource/pokedex/" + a.FishPokedex,
                        describeTxt: a.FishPokedexExplain,
                        nameImg: l[a.FishId]
                    })
                }
            }
        }
        this.bossList.array = t;
        this.specialList.array = i;
        this.pokedexList.array = n
    };
    t.onOpened = function() {
        n.opened && n.opened()
    };
    t.onClosed = function() {
        n.closed && n.closed();
        this.destroy();
        BaseDialog.prototype.onClosed.call(this);
        i = null
    };
    t.reset = function() {
        this.close();
        i = null
    };
    var i = null;
    var n = {
        opened: null,
        closed: null,
        show: function() {
            Waiting.show();
            WinUtils.showDialog(RES.loadTaskList.pokedex, e,
            function(e) {
                i = e;
                i.isClearRes = false;
                i.visible = true;
                i.popup();
                Waiting.hide()
            })
        },
        close: function() {
            i && i.close()
        }
    };
    return n
} ();
var RankList = function() {
    var t = null;
    function i() {
        i.super(this)
    }
    Laya.class(i, "RankListFun", RankListUI, "");
    var n = 1,
    s = 10,
    a = false;
    var e = i.prototype;
    e.init = function() {
        this.rankType = 1;
        this.lists.scrollBar.hide = true;
        this.on(Laya.Event.CLICK, this,
        function(e) {
            var t = e.target.name;
            if (t === "btnPrev") {
                this.lastPageFun();
                ActionReport.addLog(ActionReport.actionIndex.ranking_Prev)
            } else if (t === "btnNext") {
                this.nextPageFun();
                ActionReport.addLog(ActionReport.actionIndex.ranking_Next)
            } else if (t === "close") {
                ActionReport.addLog(ActionReport.actionIndex.ranking_Close)
            } else if (t === "btnGold") {
                this.changeList(1)
            } else if (t === "btnLotty") {
                this.changeList(2)
            }
        })
    };
    e.onOpened = function() {
        this.GetFishGoldRankReq(1)
    };
    e.onClosed = function() {
        n = 1;
        this.updateBtn();
        BaseDialog.prototype.onClosed.call(this);
        if (t) {
            t = null
        }
        a = false
    };
    e.getItemListData = function(e) {
        var t = [];
        if (e && typeof e == "string") {
            var i = e.split("|");
            if (i && i instanceof Array) {
                for (var n = 0; n < i.length; n++) {
                    if (n > 1) {
                        break
                    }
                    var s = i[n];
                    if (s && s.indexOf(":") > 0) {
                        var a = s.split(":");
                        var r = "resource/common/bar_wupinlan.png";
                        var o = GameConfig.Item.getItemInfoById(a[0]);
                        if (o) {
                            r = Utils.getItemIconBgSkin(o.FrameLevel)
                        }
                        t.push({
                            bg: r,
                            icon: "resource/icon/" + a[0] + ".png",
                            num: {
                                value: Utils.numberFormat(a[1])
                            }
                        })
                    }
                }
            }
        }
        return t
    };
    e.listData = function(e) {
        var t = [];
        if (e && e instanceof Array) {
            for (var i = 0; i < e.length; i++) {
                var n = e[i];
                if (n) {
                    var s = this.getItemListData(n.Reward);
                    var a = "resource/head/1.png";
                    if (n.AvatarUrl) {
                        a = Utils.AvatarAddPrefix(n.AvatarUrl)
                    } else if (n.AvatarID) {
                        a = "resource/head/" + n.AvatarID + ".png"
                    }
                    var r = {
                        num123: {
                            visible: n.No <= 3 ? true: false,
                            skin: "resource/rankList/r_" + (n.No <= 3 ? n.No: 3) + ".png"
                        },
                        fontNum: {
                            visible: n.No <= 3 ? false: true,
                            value: n.No
                        },
                        userHeadImg: a,
                        img_vipLevel: "resource/icon/vipLevel/vip" + n.VipLevel + ".png",
                        user_name: Utils.nickBylen(n.Nick),
                        user_id: "编号：" + n.UserId,
                        user_gold: {
                            value: n.GoldNum
                        },
                        reward: {
                            scrollBar: {
                                hide: true
                            },
                            array: s
                        }
                    };
                    t.push(r)
                }
            }
        }
        return t
    };
    e.update = function(e) {
        if (e.length <= 0) {
            this.list_box.visible = false;
            this.no_list.visible = true;
            return false
        }
        this.list_box.visible = true;
        this.no_list.visible = false;
        var t = this.listData(e);
        this.lists.array = t;
        this.lists.repeatY = e.length;
        this.page.value = n + "/" + s
    };
    e.changeList = function(e) {
        if (this.rankType === e) {
            return false
        }
        n = 1;
        this.updateBtn();
        this.rankType = e;
        this.GetFishGoldRankReq(1)
    };
    e.lastPageFun = function() {
        if (n <= 1) {
            return false
        }
        n--;
        this.updateBtn();
        this.GetFishGoldRankReq(n)
    };
    e.nextPageFun = function() {
        if (!a) {
            return false
        }
        if (n >= s) {
            return false
        }
        n++;
        this.updateBtn();
        this.GetFishGoldRankReq(n)
    };
    e.updateBtn = function() {
        this.btnPrev.skin = "resource/common/" + (n <= 1 ? "btn_dis.png": "btn_lv2.png");
        this.btnNext.skin = "resource/common/" + (n >= s ? "btn_dis.png": "btn_lv2.png");
        this.prevIcon.skin = "resource/common/" + (n <= 1 ? "zi_shangyiye_dis.png": "zi_shangyiye.png");
        this.nextIcon.skin = "resource/common/" + (n >= s ? "zi_xiayiye_dis.png": "zi_xiayiye.png")
    };
    e.GetFishGoldRankReq = function(e) {
        Request.GetFishGoldRankReq({
            Page: e,
            PageSize: 4
        })
    };
    e.reset = function() {
        this.close();
        if (t) {
            t = null
        }
        a = false
    };
    return {
        show: function(e) {
            WinUtils.showDialog(RES.loadTaskList.rankList, i,
            function(e) {
                t = e;
                t.popup()
            });
            ActionEventReport.report(ActionEventReport.actionIndex.ID1066, {
                t: e ? 0 : 1
            })
        },
        rankListRes: function(e) {
            Waiting.hide();
            a = true;
            if (t) {
                n = e.CurrentPage;
                s = e.TotalPage;
                t.update(e.RankMsg)
            }
        }
    }
} ();
var FirstGiftBag = function() {
    var e = Laya.Event;
    function t() {
        t.super(this)
    }
    Laya.class(t, "FirstGiftBagFn", FirstGiftBagUI, "");
    var i = t.prototype;
    i.init = function() {
        var e = this;
        this.welcomeBox.visible = false;
        this.playAnimation()
    };
    i.createText = function(e, t) {
        var i = new Laya.Text;
        i.text = e;
        i.bold = true;
        i.color = "#0463AD";
        i.font = "Microsoft YaHei";
        i.fontSize = 30;
        this.welcomeTxtBox.addChild(i);
        var n = t * i.width + t * 2;
        i.x = n;
        return i
    };
    i.playAnimation = function() {
        this.img_qihang.visible = true;
        this.jiangluo.play(0, false);
        this.jiangluo.on(e.COMPLETE, this,
        function() {
            this.handAnim.visible = true;
            this.handAnim.play(0, true);
            this.openImg.visible = true;
            this.continueLine = new Laya.TimeLine;
            this.continueLine.to(this.openImg, {
                alpha: 1
            },
            1e3, null).to(this.openImg, {
                alpha: .5
            },
            1e3, null);
            this.continueLine.play(0, true);
            this.once(e.CLICK, this,
            function() {
                this.handAnim.clear();
                NoviceGuidanceOnMinGame.showMask();
                Sound.playSound(Sound.RES.qihanglibao.url, Sound.RES.qihanglibao.vol);
                this.dakai.play(0, false);
                this.dakai.on(e.COMPLETE, this,
                function() {
                    GetFirstReward.show();
                    this.close()
                })
            })
        })
    };
    i.onOpened = function() {
        ActionReport.report(ActionReport.actionIndex.firstGiftBag_Open);
        s.opened && s.opened();
        this.init();
        NoviceGuidanceOnMinGame.hideMask();
        Sound.stopBgMusic();
        if (Channel && Channel.cfg.cps == Game.ChannelConstants.taiWanHaiMeng) {} else if (Channel && Channel.cfg.cps == Game.ChannelConstants.qiTian) {} else {
            Sound.playSound(Sound.RES.huanyinglaidabuyudajiangsai.url, Sound.RES.huanyinglaidabuyudajiangsai.vol)
        }
    };
    i.onClosed = function() {
        s.closed && s.closed();
        this.openImg.visible = false;
        if (this.continueLine) {
            this.continueLine.destroy()
        }
        ActionReport.report(ActionReport.actionIndex.firstGiftBag_Close);
        BaseDialog.prototype.onClosed.call(this);
        n = null
    };
    i.reset = function() {
        this.removeSelf();
        n = null
    };
    var n = null;
    var s = {
        opened: null,
        closed: null,
        show: function() {
            Waiting.show();
            Resource.load(RES.loadTaskList.firstGiftBag,
            function() {
                Waiting.hide();
                if (!n) {
                    n = new t
                }
                n.popup()
            })
        }
    };
    return s
} ();
var FirstRecharge = function() {
    var n = null;
    function e() {
        e.super(this);
        this.closeCall = null
    }
    Laya.class(e, "FirstRechargeFun", FirstRechargeUI, "");
    var t = e.prototype;
    t.reset = function() {
        this.close();
        if (n) {
            n = null
        }
    };
    t.onClosed = function(e) {
        FirstRecharge.hasRes = true;
        this.closeCall && this.closeCall(e);
        BaseDialog.prototype.onClosed.call(this);
        n = null
    };
    return {
        hasRes: true,
        show: function(t, i) {
            if (Game.miniGameIOS()) {
                return
            }
            Waiting.show();
            WinUtils.showDialog(RES.loadTaskList.firstBuy, e,
            function(e) {
                n = e;
                if (t) {
                    n.closeCall = t
                }
                n.contentView.init(i);
                n.popup();
                Waiting.hide()
            })
        },
        close: function(e) {
            if (e) {
                if (n) {
                    n.close();
                    n.reset()
                }
            } else {
                if (n) {
                    n.close()
                }
            }
        }
    }
} ();
var PlayPackage = function() {
    function e() {
        e.super(this)
    }
    Laya.class(e, "PlayPackageFn", PlayPackageUI, "");
    var t = e.prototype;
    t.onOpened = function() {
        n.opened && n.opened()
    };
    t.onClosed = function(e) {
        n.closed && n.closed();
        this.closeCall && this.closeCall(e);
        this.destroy();
        BaseDialog.prototype.onClosed.call(this);
        i = null
    };
    t.reset = function() {
        this.close();
        i = null
    };
    var i = null;
    var n = {
        opened: null,
        closed: null,
        show: function(t) {
            if (Game.isIOS && Game.onMiniGame) {
                return
            }
            WinUtils.showDialog(RES.loadTaskList.playPackage, e,
            function(e) {
                i = e;
                i.closeCall = t;
                i.contentView.init();
                i.contentView.updateList();
                i.popup();
                Waiting.hide()
            })
        },
        update: function() {
            i && i.contentView.updateList()
        },
        close: function() {
            i && i.close()
        }
    };
    return n
} ();
var AlmsShare2 = function() {
    var t = null;
    function e() {
        e.super(this)
    }
    Laya.class(e, "Fun", almsShare2UI, "");
    var i = e.prototype;
    i.init = function() {
        this.size(Game.UIWidth, Game.UIHeight);
        this.invitationList.scrollBar.hide = true;
        this.updateList();
        this.on(Laya.Event.CLICK, this,
        function(e) {
            var t = e.target.name;
            if (t === "invite") {
                if (Channel && Channel.forward) {
                    Channel.forward("alms_invitationWei")
                }
            } else if (t === "receive") {
                if (this.RemainSec > 0) {
                    if (Channel && Channel.forward) {
                        Channel.forward("alms")
                    }
                } else {
                    Alms.clickBtn(0)
                }
                ActionReport.addLog(ActionReport.actionIndex.jiuJiJin_GetWX)
            } else if (t === "btn_buy") {
                PoChanDialogShow()
            }
        });
        Request.JiuJiJinStatusReq();
        if (Game.onMiniGame) {
            this.boxIos.visible = Game.isIOS ? true: false;
            this.boxApk.visible = !this.boxIos.visible
        }
    };
    i.setLeftTime = function(e) {
        this.RemainSec = e;
        if (e > 0) {
            this.timer.loop(1e3, this, this.timeLoopFun);
            this.timeLoopFun()
        }
    };
    i.timeLoopFun = function() {
        if (this.RemainSec > 0) {
            this.leftTime.text = Utils.secondToCountDownTime(this.RemainSec);
            this.RemainSec--
        } else {
            this.leftTime.text = Utils.secondToCountDownTime(0);
            this.timer.clear(this, this.timeLoopFun)
        }
    };
    i.onOpened = function() {};
    i.onClosed = function() {
        this.timer.clearAll(this);
        AlmsShare2.closeCall && AlmsShare2.closeCall();
        AlmsShare2.closeCall = null;
        BaseDialog.prototype.onClosed.call(this);
        t = null
    };
    i.show = function() {
        this.popup()
    };
    i.reset = function() {
        this.close()
    };
    i.updateList = function() {
        var e = GameConfig.task.taskWechatCfg(),
        t = [e[0], e[1], e[2]],
        i = [];
        for (var n = 0,
        s = t.length; n < s; n++) {
            var a = t[n],
            r = a.PrizeItem,
            o = a.NeedNum,
            l = {};
            l.personNum = "邀请" + o + "人";
            var h = r.split("|");
            if (h.length > 3) {
                h.length = 3
            }
            for (var u = 0,
            c = h.length; u < c; u++) {
                var f = h[u],
                d = f.split(":"),
                g = GameConfig.Item.getItemInfoById(d[0]);
                l["bg_" + u] = Utils.getItemIconBgSkin(g.FrameLevel);
                l["icon_" + u] = {
                    skin: g.skin
                };
                l["num_" + u] = {
                    value: d[1]
                }
            }
            i.push(l)
        }
        this.invitationList.array = i
    };
    var n = false;
    return {
        closeCall: null,
        show: function() {
            if (Game.state.get() == Game.sceneConfig.sceneID.scene_Dragon_DaoDan || Game.state.get() == Game.sceneConfig.sceneID.scene_YouYiSai) {
                return
            }
            if (!NoviceGuidanceOnMinGame.isCanPopup() || n) {
                return
            }
            Resource.checkLoaded = false;
            Resource.load(RES.loadTaskList.almsShare,
            function() {
                if (!t) {
                    t = new e;
                    t.init()
                }
                n = true;
                t.show();
                Laya.timer.once(3e3, this,
                function() {
                    n = false
                })
            })
        },
        JiuJiJinStatusRep: function(e) {
            if (t) {
                t.RewardGold.value = e.RewardGold + "";
                t.setLeftTime(e.RemainSec)
            }
        },
        hide: function() {
            if (t && t.visible) {
                t.close()
            }
        }
    }
} ();
var AlmsShare = function() {
    var t = null;
    function e() {
        e.super(this)
    }
    Laya.class(e, "AlmsShareFun", AlmsShareUI, "");
    var i = e.prototype;
    i.init = function() {
        this.updateUiFun();
        this.on(Laya.Event.CLICK, this,
        function(e) {
            var t = e.target.name;
            if (t == "receive") {
                if (this.RemainSec > 0) {
                    MsgToast.show(GameConfig.ErrorMsg.clientErrorMsg(10182))
                } else Alms.clickBtn(0);
                this.close();
                ActionReport.addLog(ActionReport.actionIndex.jiuJiJin_GetWX)
            } else if (t === "btn_buy") {
                this.close();
                PoChanDialogShow()
            }
        });
        this.timer.frameLoop(1, this, this.bgLoopFun);
        Request.JiuJiJinStatusReq();
        this.getChildByName("btn_buy").visible = !Game.miniGameIOS()
    };
    i.bgLoopFun = function() {
        this.bg_light.rotation += 1
    };
    i.updateUiFun = function() {
        this.size(Game.UIWidth, Game.UIHeight);
        this.left_time.text = Player.getAlms()
    };
    i.setLeftTime = function(e) {
        this.RemainSec = e;
        if (e > 0) {
            this.timer.loop(1e3, this, this.timeLoopFun);
            this.timeLoopFun()
        }
    };
    i.timeLoopFun = function() {
        if (this.RemainSec > 0) {
            this.leftTime.text = Utils.secondToCountDownTime(this.RemainSec);
            this.RemainSec--
        } else {
            this.leftTime.text = Utils.secondToCountDownTime(0);
            this.timer.clear(this, this.timeLoopFun)
        }
    };
    i.onOpened = function() {};
    i.onClosed = function() {
        this.timer.clearAll(this);
        BaseDialog.prototype.onClosed.call(this);
        t = null
    };
    i.reset = function() {
        this.close()
    };
    var n = false;
    return {
        show: function() {
            if (Game.state.get() == Game.sceneConfig.sceneID.scene_Dragon_DaoDan || Game.state.get() == Game.sceneConfig.sceneID.scene_YouYiSai) {
                return
            }
            if (!NoviceGuidanceOnMinGame.isCanPopup() || n) {
                return
            }
            Resource.checkLoaded = false;
            Resource.load(RES.loadTaskList.almsShare,
            function() {
                if (!t) {
                    t = new e;
                    t.init()
                }
                n = true;
                t.popup();
                Laya.timer.once(3e3, this,
                function() {
                    n = false
                })
            })
        },
        JiuJiJinStatusRep: function(e) {
            if (t) {
                t.left_time.text = e.RemainTimes + "";
                t.RewardGold.value = e.RewardGold + "";
                t.setLeftTime(e.RemainSec)
            }
        },
        hide: function() {
            if (t) {
                t.close()
            }
        }
    }
} ();
var Alms = function() {
    var a = null,
    n = undefined,
    r = 3,
    s = null,
    o = true,
    e = {
        gameCenter: {
            right: 60,
            bottom: 90
        },
        fishscreen: {
            right: 230,
            bottom: 126
        }
    },
    t = undefined;
    var l = false;
    var h = true;
    var u = true;
    function c() {
        c.super(this);
        this.getAlmsCall = null
    }
    Laya.class(c, "AlmsFun", AlmsUI, "");
    var i = c.prototype;
    i.init = function() {
        this.initEvent();
        this.on(Laya.Event.CLICK, this,
        function() {
            if (Game.showShare()) {
                if (Player.getGold() < 10 && Game.state.get() === Game.sceneConfig.sceneID.gameCenter) {
                    AlmsShare2.show()
                } else {
                    this.hide()
                }
            } else {
                AlmsShare.show()
            }
        })
    };
    i.clickBtn = function(e) {
        if (!o) {
            return false
        }
        if (n <= 0) {
            MsgToast.show(GameConfig.ErrorMsg.clientErrorMsg(10014));
            return false
        }
        incomeRemind(function() {
            o = false;
            Request.getAlmsReq(e)
        });
        ActionReport.addLog(ActionReport.actionIndex.jiuJiJin_Get)
    };
    i.display = function() {
        this.num.value = n + "/" + r;
        this.ani1.play(0, false);
        this.timer.frameLoop(60, this, this.frameLoopFun);
        this.timer.frameLoop(1, this, this.bgRotationFun)
    };
    i.bgRotationFun = function() {
        this.bg.rotation += 1
    };
    i.frameLoopFun = function() {
        this.ani1.play(0, false)
    };
    i.unDisplay = function() {
        o = true;
        this.timer.clear(this, this.frameLoopFun);
        this.timer.clear(this, this.bgRotationFun);
        this.bg.rotation = 0
    };
    i.reset = function() {
        this.timer.clear(this, this.frameLoopFun);
        this.timer.clear(this, this.bgRotationFun);
        this.bg.rotation = 0;
        t = undefined;
        this.removeSelf();
        if (a) {
            a = null
        }
    };
    i.show = function() {
        this.visible = true;
        if (Game.state.get() > 0) {
            this.right = e.fishscreen.right;
            this.bottom = e.fishscreen.bottom
        } else {
            this.right = e.gameCenter.right;
            this.bottom = e.gameCenter.bottom
        }
        this.ani1.play(0, false);
        this.timer.frameLoop(60, this, this.frameLoopFun);
        this.timer.frameLoop(1, this, this.bgRotationFun)
    };
    i.hide = function(e) {
        this.timer.clear(this, this.frameLoopFun);
        this.timer.clear(this, this.bgRotationFun);
        this.bg.rotation = 0;
        if (this.visible) {
            this.visible = false
        }
        if (e) {
            this.reset()
        }
    };
    return {
        show: function(e) {
            if (Game.state.get() == Game.sceneConfig.sceneID.scene_Dragon_DaoDan || Game.state.get() == Game.sceneConfig.sceneID.scene_YouYiSai) {
                return
            }
            if (!e) {
                return false
            }
            s = e;
            n = Player.getAlms();
            if (n <= 0) {
                if (a) {
                    a.reset()
                }
                return false
            }
            if (!a) {
                a = new c;
                a.init()
            }
            var t = Game.state.get();
            if (t > 0) {
                a.timer.clearAll(this);
                var i = function() {
                    if (a) {
                        switch (t) {
                        case 1:
                            if (Player.getGold() >= 10) {
                                if (l) {
                                    return false
                                }
                                a.hide()
                            }
                            break;
                        case 2:
                            if (Player.getGold() >= 100) {
                                if (l) {
                                    return false
                                }
                                a.hide()
                            }
                            break;
                        case 3:
                            if (Player.getGold() >= 1e3) {
                                if (l) {
                                    return false
                                }
                                a.hide()
                            }
                            break;
                        case 4:
                            if (Player.getGold() >= 1e3) {
                                if (l) {
                                    return false
                                }
                                a.hide()
                            }
                            break
                        }
                    }
                };
                a.timer.once(4e3, a, i)
            }
            a.show();
            a = e.addChild(a);
            return a
        },
        showShare: function() {
            n = Player.getAlms();
            if (!a) {
                a = new c;
                a.init()
            }
            a.show();
            var e = FishScene.getFishScene();
            e.addChild(a)
        },
        hide: function(e) {
            if (l) {
                return false
            }
            if (a) {
                a.hide(e)
            }
        },
        ifInScene: function() {
            if (a) {
                return a.visible
            }
            return false
        },
        getReceive: function(e) {
            t = e;
            if (a) {
                a.clickBtn(e)
            }
        },
        clickBtn: function(e) {
            t = e;
            if (n <= 0) {
                MsgToast.show(GameConfig.ErrorMsg.clientErrorMsg(10014));
                return false
            }
            incomeRemind(function() {
                Request.getAlmsReq(e)
            });
            ActionReport.addLog(ActionReport.actionIndex.jiuJiJin_Get)
        },
        receiveRes: function(t) {
            console.log(t);
            if (Game.state.get() > 0) {
                Alms.showShare();
                h = true;
                if (a) {
                    a.timer.once(4e3, a,
                    function() {
                        u = true
                    })
                }
            }
            if (t.Tag && t.Tag === 1) {
                t.AlmsTime = t.RemainTimes;
                AlmsShare2.hide();
                if (a) {
                    a.num.value = t.AlmsTime + "/" + r
                }
                Request.GetUserMoneyReq();
                Player.setAlms(t.AlmsTime);
                if (Game.state.get() > Game.sceneConfig.sceneID.gameCenter) {
                    var e = this;
                    var i = new Laya.Templet;
                    i.loadAni("res/spine/alms/jiujingjin-Ani.sk");
                    i.on(Laya.Event.COMPLETE, this,
                    function() {
                        var e = i.buildArmature(0);
                        l = true;
                        e.play(0, false);
                        e.pos( - 246, -94);
                        if (a) {
                            a.visible = true;
                            a.addChild(e)
                        }
                        Sound.playSound(Sound.RES.coinluoru.url, Sound.RES.coinluoru.vol, true);
                        e.on(Laya.Event.STOPPED, this,
                        function() {
                            Sound.stopSoundByUrl(Sound.RES.coinluoru.url);
                            var e = "恭喜领取了" + t.RewardGold + "金币哦！赶快去捕鱼吧！";
                            MsgToast.show(e);
                            if (a) {
                                if (t.AlmsTime <= 0) {
                                    a.hide(true)
                                } else {
                                    a.hide(false)
                                }
                            }
                            o = true;
                            l = false
                        })
                    });
                    Request.GoldChangeReq()
                } else if (Game.state.get() === Game.sceneConfig.sceneID.gameCenter) {
                    if (a) {
                        if (t.AlmsTime <= 0) {
                            a.hide(true)
                        } else {
                            a.hide(false)
                        }
                    }
                    o = true;
                    var n = "恭喜领取了" + t.RewardGold + "金币哦！赶快去捕鱼吧！";
                    var s = MessageBox.show(n);
                    s.submitCall = function() {
                        GameCenter.quickStart()
                    }
                }
            } else {
                MsgToast.show(GameConfig.ErrorMsg.getMsgById(t.MsgId))
            }
        }
    }
} ();
var Address = function() {
    var o = Laya.Handler;
    var l = [];
    var s = 0;
    var a = true;
    var t = 0;
    var h = null;
    var u = null;
    var c = null;
    var f, d, n;
    var g, p, _, m, v, y, e;
    function r() {
        r.super(this)
    }
    Laya.class(r, "AddressFn", AddressUI);
    var I = AddressConfig.addressArr;
    var i = r.prototype;
    i.init = function() {
        this.on(Laya.Event.CLICK, this,
        function(e) {
            if (e.target.name == "close") {
                ActionReport.addLog(ActionReport.actionIndex.address_Close)
            }
        });
        this.province.scrollBar.hide = true;
        this.city.scrollBar.hide = true;
        this.town.scrollBar.hide = true;
        var e = "";
        var t = AddressConfig.addressArr[0];
        for (var i = 0; i < t.length; i++) {
            var n = t[i];
            e += n + ","
        }
        e = e.substring(0, e.length - 1);
        this.province.labels = e;
        this.province.itemAlign = "center";
        this.province.selectHandler = new o(this, this.onSelect, [this.province]);
        this.city.selectHandler = new o(this, this.onCitySelect, [this.city]);
        this.town.selectHandler = new o(this, this.onTownSelect, [this.town]);
        var s = [];
        if (l.length >= 5) {
            for (var a = 0; a < l.length; a++) {
                var n = l[a];
                s.push(n)
            }
        } else {
            for (var r = 0; r < l.length + 1; r++) {
                var n = l[r];
                s.push(n)
            }
        }
        this.btn_tiJiao.clickHandler = new o(this,
        function() {
            ActionReport.addLog(ActionReport.actionIndex.address_Submit);
            g = this.name.text;
            p = this.phone.text;
            _ = this.address.text;
            m = this.province.selectedLabel;
            v = this.city.selectedLabel;
            y = this.town.selectedLabel;
            var e = Utils.getPhoneReg();
            if (!g) {
                MsgToast.show("请输入名字")
            } else if (!p) {
                MsgToast.show(GameConfig.ErrorMsg.clientErrorMsg(10002))
            } else if (!e.test(p)) {
                MsgToast.show(GameConfig.ErrorMsg.getMsgById(801))
            } else if (!_) {
                MsgToast.show(GameConfig.ErrorMsg.clientErrorMsg(10003))
            } else if (!m) {
                MsgToast.show(GameConfig.ErrorMsg.clientErrorMsg(10004))
            } else if (this.city.visible && !v) {
                MsgToast.show(GameConfig.ErrorMsg.clientErrorMsg(10005))
            } else if (!y) {
                MsgToast.show(GameConfig.ErrorMsg.clientErrorMsg(10006))
            } else {
                if (_.replace(/(^\s*)|(\s*$)/g, "") == h + u + c) {
                    MsgToast.show(GameConfig.ErrorMsg.clientErrorMsg(10007));
                    return
                }
                if (!this.city.visible && v) {
                    v = m
                }
                if (y == null) {
                    y = ""
                }
                Request.exchangeReq(f, d, g, p, m, v, y, _)
            }
        })
    };
    i.autoAddAddress = function(e, t, i) {
        if (i == undefined || !i) {
            i = ""
        }
        this.address.text = e + t + i
    };
    i.onSelect = function(e) {
        h = e.selectedLabel;
        t = e.selectedIndex;
        if (e.selectedIndex == 0 || e.selectedIndex == 1 || e.selectedIndex == 2 || e.selectedIndex == 3) {
            u = "";
            this.city.visible = false;
            this.cityText.visible = false;
            this.updateTown(t, 0)
        } else {
            this.city.visible = true;
            this.cityText.visible = true;
            this.updateCity(e.selectedIndex)
        }
    };
    i.onCitySelect = function(e) {
        u = e.selectedLabel;
        if (e.selectedIndex >= 0) {
            this.updateTown(t, e.selectedIndex)
        }
    };
    i.onTownSelect = function(e) {
        c = e.selectedLabel;
        if (t == 0 || t == 1 || t == 2 || t == 3) {
            this.autoAddAddress(h, c)
        } else {
            this.autoAddAddress(h, u, c)
        }
    };
    i.updateCity = function(e) {
        if (e >= 0) {
            this.city.labels = I["0_" + e].join(",");
            this.city.selectedIndex = 0;
            u = I["0_" + e][0];
            this.updateTown(t, 0)
        }
    };
    i.updateTown = function(e, t) {
        if (e >= 0 && t >= 0) {
            if (I["0_" + e + "_" + t]) {
                this.town.labels = I["0_" + e + "_" + t].join(",");
                this.town.selectedIndex = 0;
                c = I["0_" + e + "_" + t][0];
                this.autoAddAddress(h, u, c)
            } else {
                this.town.labels = " ";
                this.town.selectedIndex = 0;
                this.autoAddAddress(h, u, "")
            }
        }
    };
    i.updateFrom = function(e) {
        if (e.Address) {
            this.name.text = e.Name;
            this.phone.text = e.PhoneNum;
            var t = I[0].indexOf(e.Province || I["0"][0]);
            if (t >= 0) {
                this.province.selectedIndex = t;
                this.city.labels = I["0_" + t].join(",")
            }
            var i = this.city.labels.split(",").indexOf(e.City || I["0_0"][0]);
            if (i >= 0) {
                this.city.selectedIndex = i;
                if (I["0_" + t + "_" + i]) {
                    this.town.labels = I["0_" + t + "_" + i].join(",")
                } else {
                    this.town.labels = ""
                }
                this.city.visible = true
            } else {
                this.city.visible = false
            }
            var n = this.town.labels.split(",").indexOf(e.Zone || I["0_0_0"][0]);
            if (n >= 0) {
                this.town.selectedIndex = n;
                this.town.visible = true
            }
            this.address.text = e.Address;
            a = false
        } else {
            s = 0;
            a = true;
            this.name.text = "";
            this.phone.text = "";
            this.address.text = "";
            this.province.labels = I["0"].join(",");
            h = I[0][0];
            this.province.selectedIndex = 0;
            this.city.labels = I["0_0"].join(",");
            this.city.selectedIndex = 0;
            u = I["0_0"][0];
            this.town.labels = I["0_0_0"].join(",");
            this.town.selectedIndex = 0;
            c = I["0_0_0"][0]
        }
    };
    i.onOpened = function() {
        if (!this.isInit) {
            this.isInit = true;
            this.init()
        }
        this.itemNme.changeText(n)
    };
    i.onClosed = function() {
        this.name.text = "";
        this.phone.text = "";
        this.address.text = "";
        this.province.selectedIndex = 0;
        this.cityText.visible = true;
        this.city.visible = true;
        S.isUseQuan = false;
        this.destroy();
        BaseDialog.prototype.onClosed.call(this);
        S = null
    };
    i.reset = function() {
        this.close()
    };
    var S = null;
    var C = {
        show: function(e, t, i) {
            f = e;
            d = t;
            n = i;
            Request.getAddressReq();
            if (!S) {
                S = new r
            }
            S.popup()
        },
        hide: function() {
            S && S.close()
        },
        updateFrom: function(e) {
            S && S.updateFrom(e)
        }
    };
    return C
} ();
var Announcement = function() {
    var e = Laya.Handler;
    var t = null,
    i = null;
    function n() {
        n.super(this)
    }
    Laya.class(n, "AnnouncementFun", AnnouncementUI, "");
    var s = n.prototype;
    s.init = function() {
        this.panels.vScrollBar.hide = true;
        this.list.renderHandler = new e(this, this.renderFun);
        this.list.selectHandler = new e(this, this.selectFun);
        this.on(Laya.Event.CLICK, this,
        function(e) {
            if (e.target.name == "close") {
                ActionReport.addLog(ActionReport.actionIndex.notice_Close)
            }
        })
    };
    s.update = function(e) {
        if (e.length <= 0) {
            return false
        }
        this.list.array = e;
        this.list.repeatY = e.length;
        this.list.selectedIndex = 0
    };
    s.updateRight = function(e) {
        if (e.Title == "更新公告") {
            this.versionNumTxt.text = "当前版本号：" + (Game.bigVersion / 1e3).toFixed(1) + "." + Game.smallVersion + "." + Game.channel.cfg.cps;
            this.label_text.y = 24
        } else {
            this.versionNumTxt.text = "";
            this.label_text.y = 1
        }
        this.label_text.text = e.Content;
        this.title.text = e.Title;
        this.txtBox.height = this.label_text.height + 20;
        this.contentBox.visible = true
    };
    s.renderFun = function(e, t) {
        var i = e.dataSource;
        e.getChildByName("btn").label = i.Title
    };
    s.selectFun = function(e) {
        var t = this.list,
        i = undefined;
        i = t.selectedItem;
        var n = this.list.cells;
        var s = this.list.selection;
        for (var a = 0; a < n.length; a++) {
            var r = n[a].getChildByName("btn");
            r.skin = "resource/common/btn_nor.png";
            r.labelColors = "#FFFFFE";
            r.width = 250;
            r.x = 128;
            r.labelPadding = "0,-2,8,0"
        }
        var o = s.getChildByName("btn");
        o.skin = "resource/common/btn_sel.png";
        o.labelColors = "#9E5200";
        o.x = 134;
        o.width = 262;
        o.labelPadding = "0,5,8,0";
        Request.getNoticeDetailReq(i.ID);
        ActionReport.addLog(ActionReport.actionIndex.notice_LeftList)
    };
    s.onOpened = function() {
        if (Game.state.get() >= 0) {
            var e = (Game.bigVersion / 1e3).toFixed(1) + "." + Game.smallVersion + "." + Game.channel.cfg.cps;
            Request.saveUserVersionReq(e)
        }
    };
    s.onClosed = function() {
        i.closedCall && i.closedCall();
        BaseDialog.prototype.onClosed.call(this);
        t = null
    };
    s.unDisplay = function() {};
    s.reset = function() {
        this.close()
    };
    i = {
        closedCall: null,
        show: function() {
            if (!t) {
                t = new n;
                t.init();
                t.list.scrollBar.hide = true
            }
            Request.getNoticeListReq();
            t.popup()
        },
        getListRes: function(e) {
            if (e.List) {
                if (t) {
                    t.update(e.List)
                }
            }
        },
        getDetailRes: function(e) {
            if (e.Title) {
                if (t) {
                    t.updateRight(e)
                }
            }
        }
    };
    return i
} ();
var PreventIndulge = function() {
    var s = null;
    var a = null;
    var r = function(e) {
        var t = parseInt(e);
        var i = 0;
        var n = 0;
        if (t > 60) {
            i = parseInt(t / 60);
            if (i >= 60) {
                n = parseInt(i / 60);
                i = parseInt(i % 60)
            }
        }
        if (n >= 3 && i > 0) {
            var s = parseInt(n) + "小时" + parseInt(i) + "分钟"
        } else {
            var s = parseInt(n) + "小时"
        }
        return s
    };
    function i() {
        i.super(this)
    }
    Laya.class(i, "PreventIndulgeFn", PreventIndulgeUI, "");
    var e = i.prototype;
    e.init = function() {
        this.on(Laya.Event.CLICK, this,
        function(e) {
            var t = e.target.name;
            if (t == "btnAppraisal") {
                if (Player.getSMRZ() && Player.getNeedFcm() == 2) {
                    MsgToast.show(GameConfig.ErrorMsg.clientErrorMsg(10045))
                } else {
                    Certificate.popup()
                }
                ActionReport.addLog(ActionReport.actionIndex.preventIndulge_Appraisal)
            } else if (e.target.name == "close") {
                ActionReport.addLog(ActionReport.actionIndex.preventIndulge_Close)
            }
        })
    };
    e.updateData = function() {
        var e = this;
        function t() {
            e.leiJiTxt.y = 210;
            e.hourTxt.y = 210;
            e.promptTxt.y = 253
        }
        if (a == 1) {
            if (Player.getFcmState() == 1) {
                this.promptTxt.text = GameConfig.ErrorMsg.clientErrorMsg(10041)
            } else if (Player.getFcmState() == 2) {
                this.promptTxt.text = GameConfig.ErrorMsg.clientErrorMsg(10042)
            }
            t();
            this.leiJiTxt.visible = true;
            this.hourTxt.visible = true;
            this.hourTxt.changeText(r(Player.getFcmTime() * 60))
        } else if (a == 2) {
            var i = r(s.fcmOnlineTime * 60);
            var n = parseInt(i);
            if (n * 1 < 3 && s.fcmCode == 1) {
                this.leiJiTxt.y = 255;
                this.hourTxt.y = 255;
                this.promptTxt.text = ""
            } else if (n * 1 == 3 && s.fcmCode * 1 == 1) {
                this.leiJiTxt.y = 235;
                this.hourTxt.y = 235;
                this.promptTxt.y = 278;
                this.promptTxt.text = GameConfig.ErrorMsg.clientErrorMsg(10040)
            } else if (s.fcmCode == 2) {
                t();
                this.promptTxt.text = GameConfig.ErrorMsg.clientErrorMsg(10041)
            } else if (s.fcmCode == 3) {
                t();
                this.promptTxt.text = GameConfig.ErrorMsg.clientErrorMsg(10042)
            }
            this.leiJiTxt.visible = true;
            this.hourTxt.visible = true;
            this.hourTxt.changeText(i)
        } else if (a == 3) {
            this.promptTxt.y = 240;
            this.promptTxt.text = GameConfig.ErrorMsg.clientErrorMsg(10043);
            this.leiJiTxt.visible = false;
            this.hourTxt.visible = false
        }
    };
    e.onOpened = function() {
        t.opened && t.opened();
        if (!this.isInit) {
            this.isInit = true;
            this.init()
        }
    };
    e.onClosed = function() {
        t.closed && t.closed();
        this.destroy();
        BaseDialog.prototype.onClosed.call(this);
        n = null
    };
    e.reset = function() {
        this.close();
        n = null
    };
    var n = null;
    var t = {
        opened: null,
        closed: null,
        show: function(e, t) {
            a = e;
            s = t;
            if (!n) {
                n = new i
            }
            n.zOrder = 9998;
            n.updateData();
            n.popup()
        },
        hide: function() {
            if (n) {
                n.close()
            }
        }
    };
    return t
} ();
var UserAgreement = function() {
    var e = null;
    function t() {
        t.super(this)
    }
    Laya.class(t, "UserAgreementFun", UserAgreementUI, "");
    var i = t.prototype;
    i.init = function() {
        var e = this._textContent;
        e.scrollBar.hide = true;
        this.btnClose.clickHandler = new Laya.Handler(this,
        function() {
            ActionReport.addLog(ActionReport.actionIndex.agreement_Close)
        });
        var t = [];
        for (var i = 1; i < 17; i++) {
            t.push({
                img: "resource/usertxt/img_" + (i < 10 ? "0" + i: i) + ".jpg"
            })
        }
        e.array = t
    };
    i.onClosed = function() {
        this.destroy();
        BaseDialog.prototype.onClosed.call(this);
        e = null
    };
    return {
        show: function() {
            if (!e) {
                e = new t;
                e.init()
            }
            e.popup()
        }
    }
} ();
var Seting = function() {
    var i = Laya.Handler;
    var n = "resource/personalCenter/bar_on.png";
    var s = "resource/personalCenter/img_kaiguan_bg.png";
    function t() {
        t.super(this)
    }
    Laya.class(t, "SetingFn", SetingUI, "");
    var e = t.prototype;
    e.init = function() {
        this.on(Laya.Event.CLICK, this,
        function(e) {
            if (e.target) {
                if (e.target.name == "btnMusic" || e.target.name == "musicImg") {
                    ActionReport.addLog(ActionReport.actionIndex.seting_Music);
                    var t = myStorage.getItem("soundSet");
                    Laya.Tween.to(this.btnMusic, {
                        x: t.bgm ? 55 : 6
                    },
                    200, null, new i(this,
                    function() {
                        this.musicImg.skin = t.bgm ? s: n
                    }));
                    Sound.stopMusic(t.bgm ? 1 : 0);
                    myStorage.setItem("soundSet", {
                        bgm: !t.bgm,
                        sod: t.sod,
                        fls: t.fls
                    })
                } else if (e.target.name == "btnSound" || e.target.name == "soundImg") {
                    ActionReport.addLog(ActionReport.actionIndex.seting_Sound);
                    var t = myStorage.getItem("soundSet");
                    Laya.Tween.to(this.btnSound, {
                        x: t.sod ? 55 : 6
                    },
                    200, null, new i(this,
                    function() {
                        this.soundImg.skin = t.sod ? s: n
                    }));
                    Sound.stopSound(t.sod ? 1 : 0);
                    myStorage.setItem("soundSet", {
                        bgm: t.bgm,
                        sod: !t.sod,
                        fls: t.fls
                    })
                }
            }
        })
    };
    e.onOpened = function() {
        r.opened && r.opened();
        if (!this.isInit) {
            this.isInit = true;
            this.init()
        }
    };
    e.onClosed = function() {
        r.closed && r.closed();
        this.destroy();
        BaseDialog.prototype.onClosed.call(this);
        a = null
    };
    e.reset = function() {
        this.close();
        a = null
    };
    var a = null;
    var r = {
        opened: null,
        closed: null,
        show: function() {
            Resource.load(RES.loadTaskList.personalCenter,
            function() {
                if (!a) {
                    a = new t
                }
                var e = myStorage.getItem("soundSet");
                if (e) {
                    if (e.bgm) {
                        a.btnMusic.x = 6;
                        a.musicImg.skin = n
                    } else {
                        a.btnMusic.x = 55;
                        a.musicImg.skin = s
                    }
                    if (e.sod) {
                        a.btnSound.x = 6;
                        a.soundImg.skin = n
                    } else {
                        a.btnSound.x = 55;
                        a.soundImg.skin = s
                    }
                }
                a.popup()
            })
        },
        getSwitchState: function() {
            var e = myStorage.getItem("soundSet");
            return e.fls
        },
        setSwitchState: function() {}
    };
    return r
} ();
var Package = function() {
    var e = Laya.Handler;
    var r = null,
    a = null,
    o = null,
    l = null;
    var h = [];
    function t() {
        t.super(this)
    }
    Laya.class(t, "PackageFun", PackageUI, "");
    var i = t.prototype;
    i.init = function() {
        var i = this;
        this.listVis.scrollBar.hide = true;
        this.listVis.renderHandler = new e(this, this.renderHandlerFun);
        this.listVis.selectHandler = new e(this, this.selectHandlerFun);
        this.rightDom.on(Laya.Event.CLICK, this,
        function(e) {
            var t = e.target.name;
            if (t === "gift") {
                i.giftFun();
                ActionReport.addLog(ActionReport.actionIndex.package_Give)
            } else if (t === "use") {
                i.useFun();
                ActionReport.addLog(ActionReport.actionIndex.package_Use)
            } else if (t === "buy") {
                i.buyFun()
            } else if (t === "close") {
                ActionReport.addLog(ActionReport.actionIndex.package_Close)
            }
        })
    };
    i.update = function(e) {
        var t = [];
        if (e) {
            for (var i in e) {
                var n = GameConfig.Item.getItemInfoById(parseInt(i));
                if (!n) {
                    continue
                }
                if (n.Deposit === 0 || !Player.openChat() && i * 1 == Game.item.Horn) {
                    continue
                }
                n.num = e[i].num;
                n.skin = "resource/package/" + n.PicID + ".png";
                n.isNew = e[i].isNew;
                t.push(n)
            }
        }
        if (t.length <= 0) {
            this.goods_box_a.visible = false;
            this.no_goods.visible = true;
            return false
        }
        t.sort(function(e, t) {
            return e.Sort - t.Sort
        });
        t.sort(function(e, t) {
            return t.isNew - e.isNew
        });
        if (t.length < 16) {
            for (var s = t.length,
            a = 16; s < a; s++) {
                t.push({
                    skin: ""
                })
            }
        }
        this.no_goods.visible = false;
        this.goods_box_a.visible = true;
        this.listVis.repeatY = t.length;
        this.listVis.array = t;
        this.listVis.visible = true;
        this.big_bg.visible = true;
        this.rightDom.visible = true;
        this.listVis.scrollTo(0);
        this.listVis.selectedIndex = 0;
        this.selectHandlerFun()
    };
    i.renderHandlerFun = function(e, t) {
        var i = e.dataSource;
        if (!i) {
            return false
        }
        e.getChildByName("bg").skin = Utils.getItemIconBgSkin(i.FrameLevel);
        e.getChildByName("icon_left").skin = i.skin;
        e.getChildByName("num").value = i.num;
        if (i.num <= 1) {
            e.getChildByName("num").visible = false
        } else {
            e.getChildByName("num").visible = true
        }
        if (i.isNew === 1) {
            e.getChildByName("is_new").visible = true
        } else {
            e.getChildByName("is_new").visible = false
        }
    };
    i.updateBtnPos = function() {
        var e = this.btnBox.numChildren;
        var t = [];
        for (var i = 0; i < e; i++) {
            var n = this.btnBox.getChildAt(i);
            if (n.visible) {
                t.push(n)
            }
        }
        if (t.length == 2) {
            t[0].pos(0, 0);
            t[1].pos(150, 0)
        } else if (t.length == 1) {
            t[0].pos(75, 0)
        } else if (t.length > 2) {
            console.log("按钮长度超出")
        }
    };
    i.selectHandlerFun = function() {
        var e = this.listVis,
        t = this.rightDom;
        o = e.selectedItem;
        if (!o || o && !o.num) {
            return false
        }
        if (a) {
            a.getChildByName("chosed").visible = false
        }
        a = e.selection;
        a.getChildByName("chosed").visible = true;
        var i = this.btnGift;
        var n = this.btnUse;
        var s = this.btnBuy;
        if (o.isNew === 1) {
            Request.package.delPointReq(o.ID)
        }
        t.getChildByName("right_goods_bg").skin = Utils.getItemIconBgSkin(o.FrameLevel);
        u(t, o);
        if (Player.getOpenGiveBtn()) {
            i.visible = o.AllowGive ? true: false
        } else {
            i.visible = false
        }
        n.visible = o.Enabled === 0 ? false: true;
        s.visible = o.AllowBuy === 0 ? false: Game.miniGameIOS() ? false: true;
        this.updateBtnPos()
    };
    i.giftFun = function() {
        if (this.listVis.selectedItem.AllowGive === 0) {
            MessageBox.show(GameConfig.ErrorMsg.clientErrorMsg(10027));
            return false
        }
        var e = this.listVis.selectedItem,
        t = {
            ItemId: e.ID,
            level: e.FrameLevel,
            num: e.num,
            skin: e.skin,
            name: e.ItemName,
            GroupNum: e.GroupNum
        };
        if (e.num < e.GroupNum) {
            MsgToast.show("此道具最低赠送" + e.GroupNum + "个。");
            return false
        }
        if (Player.getIfBindingPhone()) {
            if (Player.getPhone()) {
                PackageGift.show(t)
            } else {
                PhoneBinding.show()
            }
        } else {
            PackageGift.show(t)
        }
    };
    i.useFun = function() {
        var e = this.listVis.selectedItem;
        var t = this;
        switch (e.Enabled) {
        case 0:
            MessageBox.show(GameConfig.ErrorMsg.clientErrorMsg(10028));
            break;
        case 1:
            var i = e.ID;
            if (i == Game.item.CommonBox || i == Game.item.SuperBox) {
                t.close();
                Activity.show()
            } else if (i == Game.item.Horn) {
                HornInput.show()
            } else {
                Request.package.useGoodsReq(i, 1)
            }
            break;
        case 2:
            if (Game.channel.cfg.cps === Game.ChannelConstants.vivo) {
                MessageBox.show("暂无法使用")
            } else {
                PersonalCenter.show()
            }
            break
        }
    };
    i.buyFun = function() {
        var e = this.listVis.selectedItem;
        BuyQuick.show(e.ID)
    };
    i.onOpened = function() {};
    i.onClosed = function() {
        Request.GetRedPointReq();
        this.listVis.scrollTo(0);
        this.listVis.selectedIndex = 0;
        BaseDialog.prototype.onClosed.call(this);
        r = null
    };
    i.reset = function() {
        this.close();
        if (r) {
            r = null
        }
        l = null;
        a = null;
        o = null;
        l = null;
        h = null
    };
    function u(e, t) {
        e.getChildByName("icon_right").skin = t.skin;
        e.getChildByName("goods_name").text = t.ItemName;
        if (t.ID === 109) {
            e.getChildByName("goods_num").text = Utils.fenToYuan(t.num) + "元"
        } else {
            e.getChildByName("goods_num").text = t.num
        }
        e.getChildByName("goods_des").text = t.Description
    }
    return {
        popup: function(e) {
            Resource.load(RES.loadTaskList.package,
            function() {
                if (!r) {
                    r = new t;
                    r.init()
                }
                Request.package.getListReq();
                r.popup()
            });
            ActionEventReport.report(ActionEventReport.actionIndex.ID1064, {
                t: e ? 0 : 1
            })
        },
        close: function() {
            if (r) {
                r.close()
            }
        },
        setPkgData: function(e) {
            h = e;
            Waiting.hide();
            var t = e.BagList,
            i = false;
            l = {};
            if (t.length > 0) {
                for (var n = 0,
                s = t.length; n < s; n++) {
                    var a = {};
                    if (t[n].IsNew && t[n].IsNew === 1) {
                        a.isNew = t[n].IsNew;
                        i = true
                    } else {
                        a.isNew = 0
                    }
                    a.num = t[n].ItemNum;
                    if (Game.onBaiDuGame && t[n].ItemId == Game.item.ChangeNameCard) {
                        continue
                    }
                    l[t[n].ItemId] = a
                }
                if (i === true) {
                    GameCenter.isShowRedMark(Game.redPoint.package, true)
                }
            }
            FishScene.updateItemNum();
            if (r && r.visible) {
                r.update(l)
            }
            if (HitMonster && HitMonster.updateItemNum) {
                HitMonster.updateItemNum()
            }
            ActCards.getCardByPackage()
        },
        getPkgData: function() {
            return h
        },
        delPointFun: function(e) {
            if (e.Tag === 1 && r) {
                a.getChildByName("is_new").visible = false;
                o.isNew = 0;
                l[o.ID].isNew = 0
            }
        },
        getDataById: function(e) {
            if (l) {
                return l[e]
            }
            return null
        },
        updateNumById: function(e, t) {
            if (t <= 0) {
                delete l[e]
            } else {
                if (l[e]) {
                    if (t > l[e].num) {
                        l[e].isNew = 1
                    }
                    l[e].num = t
                } else {
                    l[e] = {};
                    l[e].isNew = 1;
                    l[e].num = t
                }
            }
            if (r && r.visible) {
                r.update(l)
            }
        },
        useGoodsRes: function(e) {
            if (e.Tag === 1 && e.Item.length > 0) {
                incomeRemind(function() {
                    GetReward.show("恭喜获得", e.Item);
                    Request.package.getListReq()
                })
            }
            if (e.Tag === 1 && e.Item.length == 0) {
                Request.package.getListReq();
                MsgToast.show(GameConfig.ErrorMsg.getMsgById(609))
            } else if (e.MsgId && GameConfig.ErrorMsg.getMsgById(e.MsgId)) {
                MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgId))
            }
        }
    }
} ();
var PackageGift = function() {
    var i = null,
    s = null,
    a = true;
    function n() {
        n.super(this)
    }
    Laya.class(n, "PackageGiftFun", PackageGiftUI, "");
    var e = n.prototype;
    e.init = function() {
        var i = this;
        this.size(Game.UIWidth, Game.UIHeight);
        this.on(Laya.Event.CLICK, this,
        function(e) {
            var t = e.target.name;
            if (t === "btn_reduce") {
                i.reduceFun();
                ActionReport.addLog(ActionReport.actionIndex.packageGet_Jian)
            } else if (t === "btn_increased") {
                i.increasedFun();
                ActionReport.addLog(ActionReport.actionIndex.packageGet_Jia)
            } else if (t === "btn_max") {
                i.maxFun();
                ActionReport.addLog(ActionReport.actionIndex.packageGet_Max)
            } else if (t === "btn_gift") {
                i.giftFun();
                ActionReport.addLog(ActionReport.actionIndex.packageGet_Give)
            } else if (t === "close") {
                ActionReport.addLog(ActionReport.actionIndex.packageGet_Close)
            } else if (t === "btn_search") {
                i.searchInfoFun()
            }
        })
    };
    e.maxFun = function() {
        if (parseInt(this.gift_num.text) >= parseInt(s.num)) {
            return false
        }
        var e = s.GroupNum;
        if (s.num > e) {
            var t = Math.floor(s.num / e);
            var i = t * e;
            this.gift_num.text = i
        }
    };
    e.update = function() {
        this.goods_name.text = s.name;
        this.have_num.text = s.num;
        this.gift_num.text = s.GroupNum;
        this.goods_box_cion.skin = Utils.getItemIconBgSkin(s.level);
        this.goods_icon.skin = s.skin
    };
    e.searchInfoFun = function() {
        var e = this.input_search.text;
        if (!e) {
            MsgToast.show("请输入要查找的昵称或者用户编号");
            return false
        }
        Request.GetGiveUserInfoReq(e)
    };
    e.reduceFun = function() {
        var e = s.GroupNum;
        var t = parseInt(this.gift_num.text);
        if (t <= e) {
            return false
        }
        t -= e;
        this.gift_num.text = t
    };
    e.increasedFun = function() {
        var e = s.GroupNum;
        var t = parseInt(this.gift_num.text);
        if (t >= parseInt(this.have_num.text)) {
            return false
        }
        t += e;
        if (t > s.num) {
            t -= e
        }
        this.gift_num.text = t
    };
    e.giftFun = function() {
        if (!this.userId) {
            return false
        }
        var e = this;
        if (a) {
            var t = this.gift_num.text;
            var i = "请确认是否将" + t + "个" + s.name + "赠送给ID: " + this.userId + "(昵称: " + this.nick + ")";
            var n = MessageBox.show(i);
            n.submitCall = function() {
                Request.package.giveGoodsReq(e.userId * 1, s.ItemId * 1, t * 1);
                a = false
            }
        }
    };
    e.searchRep = function(e) {
        this.no_result_box.visible = true;
        this.result_box.visible = true;
        this.input_search.text = "";
        var t = this.img_sex;
        switch (e.Sex) {
        case 0:
            t.skin = "resource/package/icn-women.png";
            break;
        case 1:
            t.skin = "resource/package/icn-men.png";
            break;
        case 2:
            t.skin = "resource/package/icn-women.png";
            break;
        default:
            t.skin = "resource/package/icn-women.png";
            break
        }
        var i = this.img_userHead.getChildByName("userHeadImg");
        if (e.AvatarUrl) {
            i.skin = e.AvatarUrl
        } else {
            i.skin = "resource/head/" + e.AvatarID + ".png"
        }
        this.img_vipLevel.skin = "resource/icon/vipLevel/vip" + e.VipLevel + ".png";
        this.label_name.text = e.Nick;
        this.nick = e.Nick;
        this.label_id.text = "编号：" + e.UserId;
        this.userId = e.UserId;
        this.no_result_box.visible = false;
        this.result_box.visible = true
    };
    e.giveGoodsRes = function(e) {
        a = true;
        if (e) {
            if (e.Tag && e.Tag === 1) {
                MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgId));
                this.close();
                Request.package.getListReq()
            } else {
                MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgId))
            }
        }
    };
    e.reset = function() {
        this.close();
        i = null;
        s = null
    };
    e.unDisplay = function() {};
    e.onOpened = function() {
        this.update()
    };
    e.onClosed = function() {
        a = true;
        s = null;
        BaseDialog.prototype.onClosed.call(this);
        i = null
    };
    return {
        show: function(e, t) {
            if (Game.debug) {}
            if (!e) {
                return false
            }
            Waiting.show();
            Resource.load(RES.loadTaskList.package,
            function() {
                s = e;
                if (!i) {
                    i = new n;
                    i.init()
                }
                if (t) {
                    i.searchRep(t)
                }
                i.popup();
                Waiting.hide()
            })
        },
        hide: function(e) {
            if (i) {
                i.close();
                if (e) {
                    i.removeSelf()
                }
            }
        },
        searchRep: function(e) {
            if (Game.debug) {}
            if (!e.Tag) {
                if (e.MsgId) {
                    if (i) {
                        i.no_result_box.visible = false;
                        i.result_box.visible = false
                    }
                    MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgId))
                }
            } else {
                i && i.searchRep(e)
            }
        },
        giveGoodsRes: function(e) {
            i && i.giveGoodsRes(e)
        }
    }
} ();
var Email = function() {
    var h = Laya.Handler;
    var i = null,
    n = null,
    s = null,
    t = null,
    a = false;
    function r() {
        r.super(this)
    }
    Laya.class(r, "EmailFun", EmailUI, "");
    var e = r.prototype;
    e.init = function() {
        this.email_list.scrollBar.hide = true;
        this.attachment_list.scrollBar.hide = true;
        this.jdList.scrollBar.hide = true;
        this.email_list.renderHandler = new h(this, this.renderHandlerFun);
        this.email_list.selectHandler = new h(this, this.selectHandlerFun);
        this.jdList.renderHandler = new h(this, this.jdRenderHandlerFun);
        this.on(Laya.Event.CLICK, this,
        function(e) {
            if (e.target) {
                var t = e.target.name;
                if (t === "receive") {
                    this.receiveFun(1);
                    ActionReport.addLog(ActionReport.actionIndex.email_Get)
                } else if (t === "all_receive") {
                    if (a) {
                        this.deleteFun( - 1)
                    } else {
                        this.receiveFun(0)
                    }
                    ActionReport.addLog(ActionReport.actionIndex.email_GetAll)
                } else if (t === "delete") {
                    this.deleteFun(1);
                    ActionReport.addLog(ActionReport.actionIndex.email_Del)
                } else if (t === "close") {
                    ActionReport.addLog(ActionReport.actionIndex.email_Close)
                } else if (t === "btnoneCopy") {
                    if (this.codes) Utils.setCopyValue(this.codes);
                    ActionEventReport.report(ActionEventReport.actionIndex.ID1025)
                }
            }
        })
    };
    e.update = function(e) {
        if (e.length <= 0) {
            this.email_dir.visible = false;
            this.no_email_bg.visible = true;
            return false
        }
        if (a) {
            this.email_dir.getChildByName("all_receive").skin = "resource/common/btn_huang.png";
            this.email_dir.getChildByName("all_receive").getChildByName("re_de").skin = "resource/email/zi_yijianshanchu.png"
        } else {
            this.email_dir.getChildByName("all_receive").skin = "resource/common/btn_lv.png";
            this.email_dir.getChildByName("all_receive").getChildByName("re_de").skin = "resource/email/zi_yijianlingqu.png"
        }
        this.email_list.array = e;
        this.email_dir.visible = true;
        this.no_email_bg.visible = false;
        this.email_list.repeatY = e.length;
        this.email_list.scrollTo(0);
        this.email_list.selectedIndex = 0;
        this.selectHandlerFun()
    };
    e.renderHandlerFun = function(e, t) {
        var i = e.dataSource;
        e.getChildByName("e_title").text = i.Title;
        e.getChildByName("left_time").text = "剩余时间:" + i.LeftTime + "天";
        if (i.IsRead && i.IsRead === 1) {
            e.getChildByName("is_read").visible = false;
            e.getChildByName("email_icon").skin = "resource/email/icn_youpiaogonggao.png"
        } else {
            e.getChildByName("is_read").visible = true;
            e.getChildByName("email_icon").skin = "resource/email/icn_youpiaoyoujian.png"
        }
        if (i.IsReceive) {
            e.getChildByName("has_attach").visible = true
        } else {
            e.getChildByName("has_attach").visible = false
        }
    };
    e.selectHandlerFun = function() {
        if (n) {
            n.getChildByName("btnBg").skin = "resource/common/btn_nor.png"
        }
        var e = this.email_list;
        s = e.selectedItem;
        n = e.selection;
        n.getChildByName("btnBg").skin = "resource/common/btn_sel.png";
        Request.email.getDetailReq(s.MaiId);
        ActionReport.addLog(ActionReport.actionIndex.email_XuanZhong)
    };
    e.updateRight = function(e) {
        var t = this;
        if (e.IsJDCard) {
            this.mailBox.visible = false;
            this.jdBox.visible = true;
            this.labTime.text = u(e.SendTime);
            var i = JSON.parse(e.MailContent);
            var n = 0;
            var s = [];
            for (var a = 0; a < i.length; a++) {
                var r = i[a];
                if (e.IsJDCard == 1) r.type = "元京东E卡";
                else {
                    r.type = "元微信红包";
                    r.name = r.name / 100
                }
                n += r.name;
                s.push(r.value)
            }
            this.codes = s.toString();
            this.jdList.array = i;
            this.jdList.repeatY = i.length;
            this.jdList.scrollTo(0);
            this.jdMoney.value = n + "";
            if (e.IsJDCard == 1) {
                this.jdLab.visible = true;
                this.jdNum.visible = true;
                this.jdtxt1.visible = true;
                this.wxhongbao.visible = false;
                this.jdNum.value = "x" + i.length;
                this.jdtxt1.x = this.jdNum.x + this.jdNum.value.length * 14 + 5;
                this.jdMoney.x = this.jdtxt1.x + 78;
                this.labWX.visible = false;
                if (i.length < 2) {
                    this.btnoneCopy.visible = false;
                    this.jdLabBox.x = 83;
                    this.jdLabBox.y = 100;
                    this.jdList.y = 140
                } else {
                    this.btnoneCopy.visible = true;
                    this.jdLabBox.x = 25;
                    this.jdLabBox.y = 51;
                    this.jdList.y = 91
                }
            } else {
                this.jdLab.visible = false;
                this.jdNum.visible = false;
                this.jdtxt1.visible = false;
                this.wxhongbao.visible = true;
                this.jdMoney.x = 140;
                this.btnoneCopy.visible = false;
                this.jdLabBox.x = 25;
                this.jdLabBox.y = 51;
                this.jdList.y = 91;
                this.labWX.visible = true
            }
            this.jdyuan.x = this.jdMoney.x + this.jdMoney.value.length * 14 + 5;
            ActionEventReport.report(ActionEventReport.actionIndex.ID1024)
        } else {
            this.mailBox.visible = true;
            this.jdBox.visible = false;
            this.d_title.text = e.Title;
            this.name.text = Utils.nickBylen(e.SendNick);
            this.des.text = e.MailContent;
            this.user_id.text = "ID: " + e.SendUserId;
            this.des.wordWrap = true;
            this.des.visible = true;
            this.time.text = u(e.SendTime);
            var o = e.AttachmentList;
            if (o && o.length > 0) {
                var l = this.attachment_list;
                l.array = o;
                l.renderHandler = new h(this,
                function(e, t) {
                    var i = e.dataSource,
                    n = GameConfig.Item.getItemInfoById(i.ItemId);
                    if (n) {
                        e.getChildByName("attach_bg").skin = Utils.getItemIconBgSkin(n.FrameLevel);
                        var s = e.getChildByName("arrach_num");
                        if (i.ItemValid > 0) {
                            s.text = Utils.LeftTimeFormat(i.ItemValid)
                        } else if (i.ItemValid < 0) {
                            s.text = "永久"
                        } else {
                            if (i.ItemId == 10) {
                                i.ItemNum /= 100
                            }
                            if (i.ItemNum >= 1e4) {
                                var a = Math.floor(i.ItemNum / 100) / 100;
                                s.text = a + "万"
                            } else {
                                s.text = i.ItemNum
                            }
                        }
                        e.getChildByName("goods_icon").skin = n.skin
                    } else {
                        console.log("item中没有对应ID: " + i.ItemId)
                    }
                });
                t.attachment_list.visible = true;
                t.time.y = 272;
                t.receive.visible = true;
                t.delete.visible = false
            } else {
                t.attachment_list.visible = false;
                t.time.y = 272;
                this.receive.visible = false;
                this.delete.visible = true
            }
        }
    };
    e.jdRenderHandlerFun = function(e, t) {
        var i = e.dataSource;
        e.getChildByName("itemname").text = i.name + i.type;
        var n = e.getChildByName("itemma");
        n.text = i.value;
        var s = e.getChildByName("btnCopy");
        if (!s.clickHandler) {
            s.clickHandler = new Laya.Handler(this,
            function() {
                Utils.setCopyValue(i.value);
                ActionEventReport.report(ActionEventReport.actionIndex.ID1025)
            })
        }
        n.editable = !Utils.hasCopy();
        n.mouseEnabled = n.editable
    };
    e.receiveFun = function(e) {
        var t = undefined;
        switch (e) {
        case 0:
            t = 0;
            break;
        default:
            t = this.email_list.selectedItem.MaiId;
            break
        }
        incomeRemind(function() {
            Request.email.receiveReq(t)
        })
    };
    e.deleteFun = function(e) {
        if (e === -1) {
            Request.email.deleteReq( - 1)
        } else {
            var t = s.MaiId;
            Request.email.deleteReq(t)
        }
    };
    e.onOpened = function() {};
    e.onClosed = function() {
        this.email_list.scrollTo(0);
        if (t !== null && t.length > 0) {
            this.email_list.selectedIndex = 0
        }
        n = null;
        s = null;
        Request.GetRedPointReq();
        BaseDialog.prototype.onClosed.call(this);
        i = null
    };
    e.reset = function() {
        this.close();
        this.destroy()
    };
    function u(e) {
        var t = new Date(e * 1e3),
        i = t.getFullYear(),
        n = o(t.getMonth() + 1),
        s = o(t.getDate());
        return i + "-" + n + "-" + s
    }
    function o(e) {
        if (e < 10) {
            return "0" + e
        } else {
            return e.toString()
        }
    }
    return {
        popup: function(e) {
            WinUtils.showDialog(RES.loadTaskList.email, r,
            function(e) {
                i = e;
                Request.email.getListReq();
                Waiting.hide()
            });
            ActionEventReport.report(ActionEventReport.actionIndex.ID1065, {
                t: e ? 0 : 1
            })
        },
        getItemFun: function(e) {
            if (e.Tag && e.Tag === 1) {
                t = e.MailList;
                a = e.DeleteTag;
                if (i) {
                    i.update(t);
                    if (!i.displayedInStage) {
                        i.popup()
                    }
                }
            } else {
                MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgId))
            }
            Waiting.hide()
        },
        getEmailDetailFun: function(e) {
            if (e.Tag && e.Tag === 1) {
                if (n) {
                    n.getChildByName("is_read").visible = false;
                    n.getChildByName("email_icon").skin = "resource/email/icn_youpiaogonggao.png"
                }
                if (s) {
                    s.IsRead = 1
                }
                var t = e.Mail;
                if (!t) {
                    return false
                }
                if (i) {
                    i.updateRight(t)
                }
            } else {
                MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgId))
            }
        },
        receiveRes: function(e) {
            if (e.Tag === 1) {
                function i(e) {
                    if (e.length <= 0) {
                        return false
                    }
                    var t = GetReward.show("", e[0].ItemString, false, undefined, undefined, true);
                    t.closeCallback = function() {
                        t = null;
                        e.shift();
                        Request.email.getListReq();
                        i(e)
                    }
                }
                var t = e.AttchMailList;
                i(t)
            } else {
                MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgId))
            }
        },
        deleteRes: function(e) {
            if (e.Tag === 1) {
                MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgId));
                Request.email.getListReq()
            } else {
                MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgId))
            }
        }
    }
} ();
var Activity = function() {
    var e = Laya.Handler;
    var o = -1;
    var l = [];
    var h = null;
    var u = false;
    var t = null;
    function n() {
        n.super(this);
        this.closeCall = null;
        this.isClearRes = true;
        this.resList = RES.loadTaskList.activity
    }
    Laya.class(n, "ActivityFn", ActivityUI, "");
    var i = n.prototype;
    i.init = function() {
        this.choiceList.scrollBar.hide = true;
        this.choiceList.selectEnable = true;
        this.choiceList.selectHandler = new e(this, this.selectChoiceList);
        this.on(Laya.Event.CLICK, this,
        function(e) {
            var t = e.target.name;
            if (t == "close") {
                ActionReport.addLog(ActionReport.actionIndex.act_Close)
            }
        });
        EventBus.on(EventConfig.Shuang11.Shuang11_BUY_SUCCESS, this, this.updateChoiceListWithBuy)
    };
    i.updateChoiceListWithBuy = function() {
        o = -1;
        this.updateChoiceList(this.saveMsg)
    };
    i.updateChoiceList = function(e) {
        this.saveMsg = e;
        var t = e.Lists;
        var i = [];
        l = [];
        t.sort(function(e, t) {
            return e.Sort * 1e4 + e.ActId - (t.Sort * 1e4 + t.ActId)
        });
        var n = 0;
        for (var s = 0; s < t.length; s++) {
            var a = t[s].ActType;
            if (a == Game.actType.hitMonster) {
                HitMonster.showIcon(t[s]);
                continue
            }
            if (a == Game.actType.ActShuang11 && !Player.CanBuyDoubleEleven()) {
                continue
            }
            if (a > Game.actType.maxActType || a == Game.actType.exchange && Channel && Channel.cfg.cps == Game.ChannelConstants.appStore) {
                continue
            }
            if (Game.miniGameIOS()) {
                if (Game.onWX()) {
                    if (a == Game.actType.rankPay || a == Game.actType.ActShipment || a == Game.actType.ActLuckOrder) {
                        continue
                    }
                } else {
                    if (a == Game.actType.DayPay || a == Game.actType.CountPay || a == Game.actType.rankPay || a == Game.actType.ActShipment || a == Game.actType.ActLuckOrder || a == Game.actType.ActSuperPkg) {
                        continue
                    }
                }
            }
            if (!Player.OpenRedActivity() && a == Game.actType.ActRedPackage) {
                continue
            }
            if (a == Game.actType.ActDavyJonesGift) {
                continue
            }
            if (t[s].CanGet) {
                l.push(n)
            }
            n++;
            i.push({
                btnChoice: t[s].ActTitle,
                type: t[s].ActType,
                CanGet: t[s].CanGet,
                id: t[s].ActId,
                redDot: {
                    visible: t[s].CanGet ? true: false
                }
            })
        }
        this.choiceList.array = i;
        this.choiceList.repeatY = i.length;
        if (t.length > 0) {
            this.choiceList.visible = true;
            this.contentBox.visible = true;
            if (o < 0) {
                if (l.length > 0) {
                    var r = l[0];
                    if (r < 0) r = 0;
                    this.choiceList.scrollTo(r);
                    this.choiceList.selectedIndex = r
                } else {
                    this.choiceList.scrollTo(0);
                    this.choiceList.selectedIndex = 0
                }
            } else {
                o *= 1;
                this.choiceList.scrollTo(0);
                this.choiceList.scrollTo(o);
                this.choiceList.selectedIndex = o;
                this.selectChoiceList(o)
            }
        } else {
            this.choiceList.visible = false;
            this.contentBox.visible = false
        }
    };
    i.updateSelectItemRedPoint = function(e) {
        this.choiceList.selectedItem.redDot = {
            visible: e
        };
        this.choiceList.changeItem(this.choiceList.selectedIndex, this.choiceList.selectedItem)
    };
    i.selectChoiceList = function(e) {
        var t = this.choiceList.cells;
        var i = this.choiceList.selection;
        if (i && i.dataSource) {
            var n = i.dataSource;
            for (var s = 0; s < t.length; s++) {
                var a = t[s].getChildByName("btnChoice");
                a.skin = "resource/common/btn_nor.png";
                a.labelColors = "#FFFFFF";
                a.width = 196;
                a.x = 97
            }
            var r = i.getChildByName("btnChoice");
            r.skin = "resource/common/btn_sel.png";
            r.labelColors = "#8E3302";
            r.width = 210;
            r.x = 103;
            o = e;
            Request.getActInfoReq(n.id);
            ActionReport.addLog(ActionReport.actionIndex.act_LeftList)
        }
    };
    i.onOpened = function() {
        s.opened && s.opened()
    };
    i.onClosed = function(e) {
        s.closed && s.closed();
        this.closeCall && this.closeCall(e);
        this.choiceList.scrollTo(0);
        this.choiceList.selectedIndex = 0;
        Request.GetRedPointReq();
        BaseDialog.prototype.onClosed.call(this, e);
        EventBus.off(EventConfig.Shuang11.Shuang11_BUY_SUCCESS, this, this.updateChoiceList);
        c = null
    };
    i.reset = function() {
        this.close();
        c = null
    };
    var c = null,
    f = false,
    d = 0;
    var s = {
        pigAct: function() {
            return u
        },
        opened: null,
        closed: null,
        nowSelectType: -1,
        isShow: function() {
            return c
        },
        show: function(e, t, i) {
            if (c) return;
            Waiting.show();
            Resource.load(RES.loadTaskList.activity,
            function() {
                if (!c) {
                    c = new n;
                    c.closeCall = e;
                    c.init()
                }
                Request.getActListReq();
                c.isShowSevenDayRecharge = t
            });
            ActionEventReport.report(ActionEventReport.actionIndex.ID1063, {
                t: i ? 0 : 1
            })
        },
        updateSelectItemRedPoint: function(e) {
            if (c) {
                c.updateSelectItemRedPoint(e)
            }
        },
        close: function(e) {
            if (c) {
                c.close(e)
            }
        },
        hide: function(e) {
            if (c) {
                c.visible = false;
                if (e) {
                    c.reset()
                }
            }
        },
        setMouseEnable: function(e) {
            if (c) {
                c.choiceList.mouseEnabled = e
            }
        },
        unShowDayLogin: function() {
            return f && d == 1
        },
        updateList: function(e) {
            u = false;
            if (e.Lists.length > 0) {
                h = true
            } else {
                h = false;
                GameCenter.showHideMonster(false)
            }
            if (e && e.Lists) {
                if (c) {
                    c.updateChoiceList(e)
                }
                var t = false,
                i = false,
                n = false;
                var s = null,
                a = false;
                d = 0;
                for (var r = 0; r < e.Lists.length; r++) {
                    var o = e.Lists[r],
                    l = o.ActType;
                    if (l == Game.actType.GoldPig) {
                        u = true
                    } else if (l == Game.actType.hitMonster) {
                        t = true;
                        s = e.Lists[r]
                    } else if (l == Game.actType.actMpTask) {
                        i = true
                    } else if (l == Game.actType.treasureBox) {
                        n = true
                    } else if (l == Game.actType.dayLogin) {
                        f = true
                    } else if (l == Game.actType.ActDavyJonesGift) {
                        DavyJonesGift.ActId = o.ActId;
                        WinUtils.getSaveUI(GameCenter.SKIN_NAME).btnDavyJonesGift.visible = !Game.miniGameIOS();
                        if (WinUtils.getSaveUI(GameCenter.SKIN_NAME).btnDavyJonesGift.visible) {
                            WinUtils.getSaveUI(GameCenter.SKIN_NAME).btnDavyJonesFX.play(0, true)
                        }
                        continue
                    }
                    if (o.CanGet) {
                        d++
                    }
                }
                GameCenter.ActSwitch(Game.actType.GoldPig, u, null);
                if (t) {
                    HitMonster.showIcon(s)
                } else {
                    GameCenter.showHideMonster(false)
                }
                GameCenter.showHideBtnXiFromSky(n);
                if (c && !c.displayedInStage) {
                    c.popup();
                    if (c.isShowSevenDayRecharge && SevenDayRecharge.msgData && SevenDayRecharge.msgData.ChargedToday != 1) {
                        SevenDayRecharge.show(function() {})
                    }
                }
            }
        },
        updateContents: function(t) {
            if (Game.debug) console.log(t);
            if (c && c.contentBox) {
                if (this.nowSelectType != t.ActType) {
                    var e = c.contentBox.numChildren;
                    c.contentBox.removeChildren(0, e);
                    this.nowSelectType = t.ActType
                }
                if (t.ActType === Game.actType.dayLogin) {
                    ActDayLogin.show(t, c.contentBox)
                } else if (t.ActType === Game.actType.exchange) {
                    ActExchange.show(c.contentBox)
                } else if (t.ActType === Game.actType.rankCash || t.ActType === Game.actType.rankKillFish || t.ActType === Game.actType.rankPay || t.ActType === Game.actType.rankKillTypeFish || t.ActType === Game.actType.ActUseDTRank) {
                    ActRankList.show(t, c.contentBox)
                } else if (t.ActType === Game.actType.mysticalStore) {
                    ActMysticalStore.show(t, c.contentBox)
                } else if (t.ActType === Game.actType.treasureBox) {
                    ActTreasureBox.show(t, c.contentBox)
                } else if (t.ActType === Game.actType.actMpTask) {} else if (t.ActType === Game.actType.ActCards) {
                    ActCards.show(t, c.contentBox)
                } else if (t.ActType === Game.actType.GoldPig) {
                    GoldPigShow.show(c.contentBox)
                } else if (t.ActType === Game.actType.ActShipment) {
                    ShipmentPrize.show(t, c.contentBox)
                } else if (t.ActType === Game.actType.ActApkMiniGame) {
                    ActApkMiniGame.show(t, c.contentBox)
                } else if (t.ActType == Game.actType.ActSuperPkg) {
                    WinUtils.showView(RES.loadTaskList.ActRelicGift, "ActRelicGift", c.contentBox, ActRelicGift,
                    function(e) {
                        e.initData(t)
                    }.bind(this))
                } else if (t.ActType == Game.actType.ActFireOfWar) {
                    ActFireOfWar.show(t, c.contentBox)
                } else if (t.ActType == Game.actType.ActSuperMatch || t.ActType == Game.actType.ActHappyPrize) {
                    ActHappyPrize.show(t, c.contentBox)
                } else if (t.ActType == Game.actType.ActRedPackage) {
                    WinUtils.showView(RES.QTTRedPkgAct, "QTTRedPkgAct", c.contentBox, QTTRedPkgAct,
                    function(e) {}.bind(this))
                } else if (t.ActType == Game.actType.ActShuang11yr || t.ActType == Game.actType.ActShuang11) {
                    WinUtils.showView(RES.QTTShuang11yr, "Shuang11yr", c.contentBox, Shuang11yr,
                    function(e) {
                        e.initData(t)
                    }.bind(this))
                } else if (t.ActType == Game.actType.ActLuckOrder) {
                    if (c.choiceList.array[o]) t.CanGet = c.choiceList.array[o].CanGet;
                    ActLuckOrder.show(c.contentBox, t)
                } else {
                    ActTask.show(t, c.contentBox)
                }
            }
        },
        getIsActList: function() {
            return h
        }
    };
    return s
} ();
var DaoDanSpecial = function() {
    var e = Laya.Handler;
    var f = null;
    function s() {
        s.super(this)
    }
    Laya.class(s, "DaoDanSpecialFn", DaoDanSpecialUI, "");
    var t = s.prototype;
    t.init = function() {
        this.roomList.vScrollBarSkin = "resource/common/vscroll.png";
        this.choiceList.scrollBar.hide = true;
        this.roomList.scrollBar.hide = true;
        this.choiceList._currIndex = 0;
        this.disReqScene = false;
        this.roomList.renderHandler = new e(this, this.renderRoomList);
        this.choiceList.selectHandler = new e(this, this.selectChoiceList);
        this.roomList.selectHandler = new e(this, this.selectedRoom);
        this.btnCreateRoom.clickHandler = new Laya.Handler(this,
        function() {
            var e = Player.getCreateRoomVipLevel();
            if (e || e == 0) {
                var t = Player.getVipLevel();
                if (t >= e) {
                    CreateRoom.show()
                } else {
                    var i = /{\$1}/g;
                    var n = GameConfig.ErrorMsg.clientErrorMsg(10077);
                    if (n) {
                        if (i.test(n)) {
                            var s = n.replace(/{\$1}/g, e);
                            MsgToast.show(s)
                        }
                    }
                }
            }
            ActionEventReport.report(l == Game.sceneConfig.sceneID.scene_DaoDan ? ActionEventReport.actionIndex.ID1079: ActionEventReport.actionIndex.ID1077)
        });
        this.btnQuickEnter.clickHandler = new Laya.Handler(this, this.btnQuickEnterFun)
    };
    t.btnQuickEnterFun = function() {
        n()
    };
    t.updateChoiceList = function(e) {
        var t = [];
        for (var i = 0; i < e.length; i++) {
            t.push({
                btnChoice: e[i].name,
                type: e[i].type
            })
        }
        this.choiceList.array = t;
        this.choiceList.repeatY = t.length;
        this.choiceList.selectedIndex = 0;
        this.choiceList.visible = true
    };
    t.selectChoiceList = function(e) {
        ActionReport.addLog(ActionReport.actionIndex.daoDan_LeftList);
        var t = this.choiceList.cells;
        var i = this.choiceList.selection;
        for (var n = 0; n < t.length; n++) {
            var s = t[n].getChildByName("btnChoice");
            s.skin = "resource/common/btn_nor.png";
            s.labelColors = "#FFFFFE";
            s.labelStrokeColor = "#004ECF";
            s.width = 264;
            s.x = 132
        }
        var a = i.getChildByName("btnChoice");
        a.skin = "resource/common/btn_sel.png";
        a.labelColors = "#FFFFFF";
        a.labelStrokeColor = "#D55500";
        a.width = 277;
        a.x = 138;
        var r = this.choiceList.selectedItem;
        if (r && r.type && e != this.choiceList._currIndex) {
            if (!this.disReqScene) {
                Waiting.show();
                GameCenter.selectSceneFn(r.type)
            }
            this.disReqScene = false;
            this.choiceList._currIndex = e
        }
    };
    t.selectedRoom = function(e) {
        if (this.roomList.selection) {
            var t = this.roomList.selectedItem;
            var i = t.totalRoomsNum;
            var n = t.roomPeopleNum;
            if (n < i) {
                if (t.roomName) {
                    EnterRoom.show(t)
                } else {
                    Request.EnterTableReq(t.id);
                    Waiting.show();
                    ActionReport.addLog(ActionReport.actionIndex.daoDan_Room)
                }
            } else {
                MsgToast.show(GameConfig.ErrorMsg.getMsgById(113))
            }
            this.roomList.selection = null
        }
    };
    t.updateRoomList = function(e) {
        var t = [];
        var i = [];
        for (var n = 1; n <= d; n++) {
            i.push({
                PeopleCount: 0,
                TableId: n,
                Name: ""
            })
        }
        for (var n = 0; n < e.length; n++) {
            var s = e[n];
            if (s) {
                var a = i[s.TableId - 1];
                if (a) {
                    a.PeopleCount = s.PeopleCount;
                    a.Name = s.Name
                } else {
                    i[s.TableId - 1] = {
                        PeopleCount: s.PeopleCount,
                        TableId: s.TableId,
                        Name: s.Name
                    }
                }
            }
        }
        e = i;
        for (var n = 0; n < e.length; n++) {
            var r = n + 1;
            if (e[n]) {
                t.push({
                    id: e[n].TableId,
                    roomPeopleNum: e[n].PeopleCount,
                    peopleNum: e[n].PeopleCount + "人",
                    totalRoomsNum: 4,
                    peopleNumCilp: {
                        value: e[n].PeopleCount + "/4"
                    },
                    roomNum: {
                        value: r <= 9 ? "0" + r: r
                    },
                    progress: e[n].PeopleCount / 4,
                    roomName: e[n].Name || ""
                })
            }
        }
        var o = [];
        var l = [];
        var h = [];
        for (var n = 0,
        u = t.length; n < u; n++) {
            var c = t[n];
            if (c.roomName) {
                l.push(c)
            } else {
                h.push(c)
            }
        }
        if (l.length > 0) {
            l.sort(function(e, t) {
                return t.id - e.id
            })
        }
        h.sort(function(e, t) {
            return e.id - t.id
        });
        f = h;
        if (l.length > 0) {
            for (var n = 0,
            u = l.length; n < u; n++) {
                o.push(l[n])
            }
        }
        for (var n = 0,
        u = h.length; n < u; n++) {
            o.push(h[n])
        }
        if (o.length > d) {
            o = o.slice(0, d)
        }
        this.roomList.array = o;
        this.roomList.visible = true;
        Waiting.hide()
    };
    t.renderRoomList = function(e, t) {
        var i = e.dataSource;
        var n = i.totalRoomsNum;
        var s = i.roomPeopleNum;
        var a = e.getChildByName("peopleNum");
        var r = e.getChildByName("stateImg");
        var o = e.getChildByName("getRoom");
        var l = e.getChildByName("img_lock");
        r.skin = s < n ? "resource/daoDanSpecial/room_huang.png": "resource/daoDanSpecial/room_hong.png";
        if (s < n) {
            o.text = "点击进入房间>>";
            o.align = "right";
            o.color = "#B56204"
        } else {
            o.text = "房间爆满";
            o.align = "center";
            o.color = "#A40000"
        }
        if (i.roomName) {
            l.visible = true;
            var h = "";
            if (i.roomName.length > 5) {
                var u = i.roomName.substr(0, 5);
                h = u + "..."
            } else {
                h = i.roomName
            }
            a.text = h + " 的房间"
        } else {
            l.visible = false
        }
    };
    t.onOpened = function() {
        h.opened && h.opened();
        Waiting.hide();
        this.updateChoiceList([{
            name: "导弹专场",
            type: Game.sceneConfig.sceneID.scene_DaoDan
        },
        {
            name: "龙晶专场",
            type: Game.sceneConfig.sceneID.scene_Dragon_DaoDan
        }]);
        if (l == Game.sceneConfig.sceneID.scene_Dragon_DaoDan) {
            if (this && this.choiceList && this.disReqScene) {
                this.choiceList.selectedIndex = 1
            }
        }
        if (l == Game.sceneConfig.sceneID.scene_DaoDan) {
            this.titleDD.visible = true;
            this.titleLJ.visible = false
        } else {
            this.titleLJ.visible = true;
            this.titleDD.visible = false
        }
    };
    t.onClosed = function(e) {
        if (e == "close" || e == "side") {
            Request.LeaveGameSvrReq()
        }
        h.closed && h.closed();
        this.choiceList.scrollTo(0);
        this.destroy();
        BaseDialog.prototype.onClosed.call(this);
        a = null;
        l = 0
    };
    t.reset = function() {};
    function i(e) {
        var t = [];
        var i = [];
        for (var n = 1; n <= d; n++) {
            i.push({
                PeopleCount: 0,
                TableId: n,
                Name: ""
            })
        }
        for (var n = 0; n < e.length; n++) {
            var s = e[n];
            if (s) {
                if (i[s.TableId - 1]) {
                    i[s.TableId - 1].PeopleCount = s.PeopleCount;
                    i[s.TableId - 1].Name = s.Name
                } else {
                    i[s.TableId - 1] = {
                        PeopleCount: s.PeopleCount,
                        TableId: s.TableId,
                        Name: s.Name
                    }
                }
            }
        }
        e = i;
        for (var n = 0; n < e.length; n++) {
            var a = n + 1;
            if (e[n]) {
                t.push({
                    id: e[n].TableId,
                    roomPeopleNum: e[n].PeopleCount,
                    peopleNum: e[n].PeopleCount + "人",
                    totalRoomsNum: 4,
                    peopleNumCilp: {
                        value: e[n].PeopleCount + "/4"
                    },
                    roomNum: {
                        value: a <= 9 ? "0" + a: a
                    },
                    progress: e[n].PeopleCount / 4,
                    roomName: e[n].Name || ""
                })
            }
        }
        var r = [];
        for (var n = 0,
        o = t.length; n < o; n++) {
            var l = t[n];
            if (l.roomName) {} else {
                r.push(l)
            }
        }
        r.sort(function(e, t) {
            return e.id - t.id
        });
        return r
    }
    function n(e) {
        Request.EnterTableReq(0)
    }
    var a = null,
    r = [],
    d = 0,
    o = false,
    l = 0;
    var h = {
        opened: null,
        closed: null,
        show: function(t, i, n) {
            Waiting.show();
            WinUtils.showDialog(RES.loadTaskList.daoDanSpecial, s,
            function(e) {
                d = t;
                a = e;
                l = i;
                if (a) {
                    if (a.isPopup) {
                        a.roomList.array = [];
                        a.updateRoomList(r);
                        Request.GetTableInfoListReq()
                    } else {
                        a.disReqScene = l == Game.sceneConfig.sceneID.scene_Dragon_DaoDan ? true: false;
                        Request.GetTableInfoListReq();
                        a.popup(false, n);
                        Waiting.hide()
                    }
                }
            })
        },
        close: function() {
            a && a.close()
        },
        update: function(e) {
            r = e;
            if (o) {
                o = false;
                n()
            } else {
                if (a && a.visible) {
                    a.updateRoomList(r)
                }
                Waiting.hide()
            }
        },
        autoEnter: function(e, t) {
            d = e;
            l = t;
            o = true;
            Request.GetTableInfoListReq()
        },
        getMaxTableNum: function() {
            return d
        }
    };
    return h
} ();
var ShopMall = function() {
    var a = Laya.Handler;
    var l = null;
    var e = false;
    var t = null;
    function i() {
        i.super(this);
        this.currIndex = 0
    }
    Laya.class(i, "ShopMallFn", ShopMallUI, "");
    var n = i.prototype;
    n.init = function() {
        this.shopList.scrollBar.hide = true;
        this.shopList.renderHandler = new a(this, this.renderShopList);
        Laya.stage.on(Laya.Event.def_updateUserInfo, this, this.updateUser);
        this.shopList.visible = false;
        this.ani1.play(0, false)
    };
    n.doAnim = function() {
        this.ani2.play(0, true)
    };
    n.onOpened = function() {
        r.opened && r.opened();
        this.ani1.on(Laya.Event.COMPLETE, this, this.doAnim);
        this.iosHint.visible = Game.miniGameIOS()
    };
    n.onClosed = function() {
        this.ani2.stop();
        r.closed && r.closed();
        this.destroy();
        BaseDialog.prototype.onClosed.call(this);
        s = null
    };
    n.reset = function() {
        s = null
    };
    n.renderShopList = function(e, t) {
        var i = e.getChildByName("bgImg");
        var n = e.getChildByName("btnBuy");
        var s = {
            GoodsID: e.dataSource.GoodsID,
            goodsName: e.dataSource.shopTitle,
            price: e.dataSource.CostNum
        };
        i.clickHandler = new a(this,
        function() {
            r.buyRecharge(s)
        });
        n.clickHandler = new a(this,
        function() {
            r.buyRecharge(s)
        })
    };
    n.updateShopList = function(e) {
        var t = GameConfig.shopCity.getCfg();
        var i = [],
        n = null;
        t.sort(function(e, t) {
            return e.Sort - t.Sort
        });
        if (!e) {
            e = l
        }
        var s = {};
        if (e) {
            for (var a = 0; a < e.List.length; a++) {
                s[e.List[a].GoodsId] = e.List[a].Discount
            }
        }
        for (var a = 0; a < t.length; a++) {
            n = t[a];
            if (n.GoodsId && n.Type == 1 && n.MallType == 1) {
                var r = n.Detail.split(":");
                var o = {
                    GoodsID: n.GoodsId,
                    shopIcon: {
                        skin: "resource/shopMall/icon_sc_jb" + n.PicID + ".png",
                        y: n.GoodsId == 5 ? 110 : 116
                    },
                    doubleIcon: {
                        visible: false
                    },
                    shopTitle: n.GoodsName,
                    giveImg: {
                        visible: false
                    },
                    shopGiveCilp: {
                        visible: false,
                        text: "再送10000金币"
                    },
                    priceCilp: {
                        value: Utils.fenToYuan(n.CostNum),
                        x: Game.miniGameIOS() ? 174 : 126
                    },
                    iosText: {
                        visible: Game.miniGameIOS()
                    },
                    CostNum: Utils.fenToYuan(n.CostNum)
                };
                if (s[n.GoodsId]) {
                    if (s[n.GoodsId] == 100) {
                        o["doubleIcon"] = {
                            visible: true,
                            skin: "resource/shopMall/bq_shougoushaungbei.png"
                        }
                    } else {
                        o["doubleIcon"] = {
                            visible: true,
                            skin: "resource/shopMall/bq_huodong.png"
                        }
                    }
                    o["shopGiveCilp"] = {
                        visible: true,
                        text: "再送" + Math.ceil(r[1] * 1) * (s[n.GoodsId] / 100) + "金币"
                    }
                }
                i.push(o)
            }
        }
        this.shopList.array = i;
        this.shopList.visible = true
    };
    n.updateUser = function() {
        e = Player.getPhone()
    };
    var s = null;
    var r = {
        opened: null,
        closed: null,
        show: function(e, t) {
            if (e == undefined && !Game.miniGameIOS()) {
                BuyGoodsChain(ShopMall.show, t);
                return
            }
            ActionEventReport.report(ActionEventReport.actionIndex.ID1069, {
                t: t == undefined ? 6 : t
            });
            WinUtils.showDialog(RES.loadTaskList.shopMall, i,
            function(e) {
                s = e;
                Request.GetShopCityInfoReq(Game.channel.cfg.cps);
                ActionReport.addLog(ActionReport.actionIndex.gameHall_Shop)
            })
        },
        paySwitch: function() {
            if (Channel && Channel.cfg.cps == 3) {
                return true
            }
            if (Game.onMiniGame && Game.isIOS) {
                return GameConfig.getSysCfgByKey("SysSwitch_iosPayTip") * 1 ? false: true
            } else {
                return false
            }
        },
        pay: function(e, t, i, n, s, a) {
            if ((Game.onMiniGame || Game.onBaiDuGame) && Game.isIOS) {
                if (Channel && Channel.forward) {
                    Channel.forward(Game.ShareType.RECHARGE_REQUEST + n.GoodsID, undefined, 0, 0, {
                        GoodsID: n.GoodsID,
                        nickName: Player.getNick()
                    });
                    return
                } else {
                    var r = "由于IOS政策,支付系统已关闭";
                    var o = GameConfig.getSysCfgByKey("SysSwitch_iosPayTip") * 1;
                    if (!o) {
                        MessageBox.show(r);
                        return
                    } else if (o == 1) {
                        r += ",关注“球球捕鱼”公众号签到可领免费金币,连续签到送大奖!";
                        MessageBox.show(r);
                        return
                    }
                }
            }
            var l = null;
            if (Game.onMiniGame && Game.isIOS) {
                l = "xyxios"
            } else if (Game.onMiniGame && Game.isApp) {
                l = "xyxandroid"
            } else if (Channel && Channel.payExt) {
                l = Channel.payExt
            } else if (t == 1) {
                if (Channel.cfg && Channel.cfg.pay && Channel.cfg.pay.wx) {
                    l = Channel.cfg.pay.wx.payExt
                }
            } else if (t == 2) {
                if (Channel.cfg && Channel.cfg.pay && Channel.cfg.pay.ali) {
                    l = Channel.cfg.pay.ali.payExt
                }
            } else if (t == 5) {
                if (Channel.cfg && Channel.cfg.pay && Channel.cfg.pay.ios) {
                    l = Channel.cfg.pay.ios.payExt;
                    a = Channel.cfg.pay.ios.name
                }
            } else if (Game.onOPPOMiniGame) {
                l = Channel.token
            }
            if (Game.channel.cfg.cps == Game.ChannelConstants.fly) {
                l = t + "";
                t = Game.channel.cfg.payChannel
            }
            var h = {
                CpsID: Game.channel.cfg.cps,
                PayChannel: t || Game.channel.cfg.payChannel,
                GoodsID: n.GoodsID,
                BuyNum: s,
                LoginVer: Game.loginVer,
                Ext: l,
                SPName: a || Game.channel.cfg.name,
                SdkVer: Game.channel.cfg.SdkVer
            };
            if (n.SendToUserID) {
                h.SendToUserID = n.SendToUserID
            }
            if (n.SendUserCpsID) {
                h.SendUserCpsID = n.SendUserCpsID
            }
            if (Channel && Channel.cfg.name && (Channel.cfg.name == "mp" || Game.onQQ())) {
                var u = myStorage.getItem("wx_session_key");
                if (u) {
                    h["WechatSessionID"] = u
                } else {}
            }
            if (Channel && Channel.payToLogin) {
                Channel.payToLogin(function() {
                    Request.CreatePayOrderReq(h)
                })
            } else {
                Request.CreatePayOrderReq(h)
            }
        },
        buyRecharge: function(t, e) {
            if (Game.debug) console.log(t);
            ActionEventReport.PayEvent = e;
            if (Player.getSMRZ()) {
                if (!Player.getNeedFcm()) {
                    PreventIndulge.show(3)
                } else if (Player.getNeedFcm() == 1) {
                    PreventIndulge.show(3)
                } else {
                    incomeRemind(function() {
                        if (Channel) {
                            if (Channel.payCenter) {
                                if (ShopMallCenter && ShopMallCenter.show) {
                                    ShopMallCenter.show(t)
                                }
                            } else {
                                var e = Game.channel.cfg;
                                ShopMall.pay(e.cps, e.payChannel, Player.getUserId(), t, 1)
                            }
                        }
                    })
                }
            } else {
                PreventIndulge.show(3)
            }
        },
        GetShopCityInfoRep: function(e) {
            l = e;
            if (s) {
                s.updateShopList(e);
                s.popup();
                Waiting.hide()
            }
        },
        close: function() {
            s && s.close()
        }
    };
    return r
} ();
var ShopMallCenter = function() {
    var i = null;
    function e() {
        e.super(this)
    }
    Laya.class(e, "ShopMallCenterFun", shopMallCenterUI, "");
    var t = e.prototype;
    t.updateData = function(a) {
        this.width = Game.UIWidth;
        this.height = Game.UIHeight;
        this.goodsName.text = a.goodsName;
        if (Game.isApp) {
            this.price.text = a.price + "元"
        } else {
            this.price.text = "¥： " + a.price
        }
        this.on(Laya.Event.CLICK, this,
        function(e) {
            if (Channel.cfg.pay) {
                var t = Channel.cfg.pay;
                var i = t.wx;
                var n = t.ali;
                var s = e.target.name;
                if (s === "aliPay") {
                    ShopMall.pay(Channel.cfg.cps, n.payChannel, Player.getUserId(), a, 1, n.name)
                } else if (s === "wePay") {
                    ShopMall.pay(Channel.cfg.cps, i.payChannel, Player.getUserId(), a, 1, i.name)
                }
            }
        })
    };
    t.onClosed = function() {
        BaseDialog.prototype.onClosed.call(this);
        i = null
    };
    t.reset = function() {
        this.close();
        i = null
    };
    return {
        show: function(t) {
            Waiting.show();
            WinUtils.showDialog(RES.loadTaskList.shopMallCenter, e,
            function(e) {
                i = e;
                i.updateData(t);
                i.popup();
                Waiting.hide()
            })
        },
        hide: function() {
            if (i && i.visible) {
                i.close()
            }
        }
    }
} ();
var ExChangeJuan = function() {
    var s = Laya.Handler;
    var o = null;
    var h = false;
    function i() {
        i.super(this)
    }
    Laya.class(i, "ExChangeJuanFn", ExchangeJuanUI, "");
    var e = i.prototype;
    e.init = function(e) {
        this.btnMenu = {
            currIndex: 0,
            obj: [this.btnJiangquan, this.btnHongbao, this.btnMonster],
            data: [["resource/exchange/zi_jiangquan1.png", "resource/exchange/zi_jiangquan2.png"], ["resource/exchange/zi_hongbao1.png", "resource/exchange/zi_hongbao2.png"], ["resource/exchange/zi_jifen_nor.png", "resource/exchange/zi_jifen_sel.png"]],
            exchangeType: [1, 4],
            iconMoney: ["resource/exchange/img_jiangquan.png", "resource/exchange/icon_hongbao.png", "resource/exchange/icon_yubi.png"],
            posX: [112, 122],
            size: [[85, 57], [104, 66]]
        };
        this.dataList.scrollBar.hide = true;
        this.on(Laya.Event.CLICK, this,
        function(e) {
            if (e.target) {
                if (e.target.name == "btnLog") {
                    if (this.btnMenu.currIndex == 2) {
                        MonsterExchangeRecord.show(true)
                    } else {
                        ExchangeRecord.show(this.btnMenu.exchangeType[this.btnMenu.currIndex])
                    }
                    ActionReport.addLog(ActionReport.actionIndex.jiangQuan_JiLu)
                } else if (e.target.name == "close") {
                    this.dataList.scrollTo(0);
                    ActionReport.addLog(ActionReport.actionIndex.jiFen_Close)
                } else if (e.target.name == "btnChoice") {
                    if (this.choiceBox.visible) {
                        this.choiceBox.visible = !this.choiceBox.visible
                    } else {
                        this.choiceBox.visible = !this.choiceBox.visible
                    }
                } else if (e.target.name == "btnJiangquan") this.changeView(0);
                else if (e.target.name == "btnHongbao") this.changeView(1);
                else if (e.target.name == "btnMonster") {
                    this.changeView(2)
                } else if (e.target.name == "getYb") {
                    HitMonster.show();
                    this.close()
                }
            }
        });
        this.btnHongbaoBox.visible = Player.OpenRedActivity();
        this.btnMonsterBox.visible = HitMonster.isIconShow();
        this.btnJiangquanBox.visible = this.btnHongbaoBox.visible || this.btnMonsterBox.visible;
        var t = 0;
        for (var i = 0; i < this.btnMenu.obj.length; i++) {
            var n = this.btnMenu.obj[i];
            if (n.parent.visible) {
                n.parent.y = t * 66;
                t++
            }
        }
        this.hongbaoHint.text = GameConfig.ErrorMsg.clientErrorMsg(10186);
        this.dataList.selectHandler = new s(this, this.selectedHandler);
        Laya.stage.on(Laya.Event.def_updateUserMoney, this, this.updateJiangQuan);
        this.update();
        this.updateJiangQuan();
        if (e) this.changeView(e);
        EventBus.on(EventConfig.ExchangeJuan.ExchangeJuan_Success, this, this.refreshView)
    };
    e.refreshView = function(e) {
        if (this.btnMenu.currIndex == e) {
            this.updateJiangQuan()
        }
    };
    e.updateMenu = function(e) {
        if (e < this.btnMenu.obj.length) {
            var t = this.btnMenu.obj[this.btnMenu.currIndex],
            i = t.getChildAt(0);
            t.skin = "resource/common/btn_fenlei_sel.png";
            i.skin = this.btnMenu.data[this.btnMenu.currIndex][0];
            var n = this.btnMenu.size[0];
            t.size(n[0], n[1]);
            var s = this.btnMenu.obj[e],
            a = s.getChildAt(0);
            s.skin = "resource/common/btn_fenlei_nor.png";
            a.skin = this.btnMenu.data[e][1];
            var r = this.btnMenu.size[1];
            s.size(r[0], r[1]);
            this.btnMenu.currIndex = e
        }
    };
    e.changeView = function(e) {
        if (this.btnMenu.currIndex == e) {
            return
        }
        this.updateMenu(e);
        this.updateJiangQuan();
        this.update();
        this.hongbaoHint.visible = e == 1;
        this.getYb.visible = e == 2
    };
    e.onOpened = function() {
        this.update();
        this.updateJiangQuan();
        t.opened && t.opened()
    };
    e.onClosed = function() {
        t.closed && t.closed();
        this.destroy();
        BaseDialog.prototype.onClosed.call(this);
        n = null;
        EventBus.off(EventConfig.ExchangeJuan.ExchangeJuan_Success, this, this.refreshView);
        if (GuidanceRedActivity.guide) {
            GuidanceRedActivity.guide = false;
            GuidanceRedActivity.closeView(true)
        }
    };
    e.reset = function() {
        this.close();
        n = null
    };
    e.update = function() {
        if (this.btnMenu.currIndex == 0) var e = GameConfig.exchange.getLotteryList();
        else if (this.btnMenu.currIndex == 1) {
            e = GameConfig.exchange.getRedList()
        } else {
            e = GameConfig.exchange.getFishScoreList()
        }
        var t = [];
        for (var i = 0; i < e.length; i++) {
            if (this.btnMenu.currIndex == 1 && e[i].ExchangeTimes == -1) continue;
            if (o == 1 || !o) {
                t.push(e[i])
            } else if (o == 2) {
                if (e[i].NeedCondition == 2) {
                    t.push(e[i])
                }
            } else if (o == 3) {
                if (e[i].NeedCondition == 1) {
                    t.push(e[i])
                }
            }
            if (NoviceGuidanceOnMinGame.stepNum() == 5) {
                if (e[i].ItemId == 207) {
                    e[i].SORT = 0
                }
            }
        }
        t.sort(function(e, t) {
            return e.SORT - t.SORT
        });
        this.orginData = t;
        var n = [];
        for (var s = 0; s < t.length; s++) {
            if (t[s].ExchangeID) {
                var a = this.btnMenu.currIndex == 0 ? t[s].Money2Num: this.btnMenu.currIndex == 1 ? t[s].Money10Num / 100 : t[s].Money5Num;
                var r = GameConfig.Item.getItemInfoById(t[s].ItemId);
                n.push({
                    id: t[s].ExchangeID,
                    FC_money: {
                        value: a,
                        zOrder: 9
                    },
                    imgyuan: {
                        visible: this.btnMenu.currIndex != 1 ? false: true,
                        x: (a + "").length * 14 + 78
                    },
                    icon_money: this.btnMenu.iconMoney[this.btnMenu.currIndex],
                    name: t[s].GoodsName.indexOf("导弹") > 0 ? t[s].GoodsName + "x" + t[s].ItemNum: t[s].GoodsName,
                    icon: {
                        scaleX: this.btnMenu.currIndex == 2 && t[s].NeedCondition == 2 ? .9 : 1,
                        scaleY: this.btnMenu.currIndex == 2 && t[s].NeedCondition == 2 ? .9 : 1,
                        skin: r.skin
                    },
                    itemId: t[s].ItemId,
                    needCondition: t[s].NeedCondition,
                    sort: t[s].SORT,
                    getDate: t[s].GetDate,
                    itmeNum: t[s].ItemNum,
                    jiangQuan: {
                        zOrder: 9
                    },
                    money: a,
                    num: t[s].Num,
                    vip: t[s].Vip,
                    imgfrist: {
                        visible: this.btnMenu.currIndex == 1 && t[s].ExchangeTimes == 1
                    }
                })
            }
        }
        this.dataList.array = n;
        if (t.length > 0) {
            this.dataList.visible = true
        } else {
            console.log("this.dataList.visible false");
            this.dataList.visible = false
        }
        if (Player.getNewPlayer()) {
            this.dataList.scrollBar.min = 0;
            this.dataList.scrollBar.max = 0
        }
    };
    e.selectedHandler = function(e) {
        if (e < 0) {
            return
        }
        if (this.btnMenu.currIndex == 2) {
            this.receiveFun();
            this.dataList.selectedIndex = -1;
            return
        }
        var t = this.dataList.selectedItem;
        var i = t.name;
        var n = t.needCondition;
        var s = t.id;
        var a = t.money;
        var r = this.btnMenu.currIndex == 0 ? Player.getJiangJuan() : Player.getHongBao();
        var o = this.btnMenu.currIndex == 0 ? "奖券": "红包券";
        var l = this.btnMenu.currIndex == 0 ? 1 : 4;
        if (t.vip && Player.getVipLevel() < t.vip) {
            MessageBox.show("贵族" + t.vip + "才能兑换该奖励哦", null, MessageBox.model.submit);
            return
        }
        ActionReport.addLog(ActionReport.actionIndex.jiangQuan_Exc);
        if (r * 1 < a * 1) {
            if (this.btnMenu.currIndex == 0) MsgToast.show(GameConfig.ErrorMsg.getMsgById(602));
            else MsgToast.show(GameConfig.ErrorMsg.getMsgById(614))
        } else if (Player.getIfBindingPhone() && !Player.getPhone() && !Player.getNewPlayer() && n != 0 && n != 4) {
            PhoneBinding.show()
        } else {
            incomeRemind(function() {
                if (Player.getSMRZ() || Player.getNewPlayer()) {
                    if (n == 1 || n == 3) {
                        PhoneRecharge.show(s, l, i)
                    } else if (n == 2) {
                        Address.show(s, l, i)
                    } else {
                        if (Game.state.get() >= 0 && Player.getOpenXSYD() && NoviceGuidanceOnMinGame.stepNum() == 5) {
                            NoviceGuidanceOnMinGame.hideClickArea();
                            var e = "<font color='#904120'>是否消耗</font><font color='#ffe2d6'>" + a + "奖券</font><font color='#904120'>兑换</font><font color='#ffe2d6'>" + i + "</font>";
                            ExchangePrompt.show(e).submitCall = function() {
                                Request.exchangeReq(s, l, "", "", "", "", "", "", 1)
                            };
                            ExchangePrompt.opened = function() {
                                NoviceGuidanceOnMinGame.fourthStep()
                            }
                        } else {
                            var e = "<font color='#904120'>是否消耗</font><font color='#ffe2d6'>" + a + o + "</font><font color='#904120'>兑换</font><font color='#ffe2d6'>" + i + "</font>";
                            if (h) {
                                QTTPhoneCard.show(function(e, t, i) {
                                    Request.exchangeReq(s, l, i, e, "", "", "", "", 1, t)
                                })
                            } else {
                                ExchangePrompt.show(e).submitCall = function() {
                                    Request.exchangeReq(s, l)
                                }
                            }
                        }
                    }
                } else {
                    PreventIndulge.show(3)
                }
            })
        }
        this.dataList.selectedIndex = -1
    };
    e.receiveFun = function() {
        console.log(this.dataList.selectedItem);
        var e = this.orginData[this.dataList.selectedIndex];
        if (e.Status === 0) {
            MonsterMsgBox1.show("此物品暂时缺货哦!请尝试其他物品吧!", true);
            return false
        }
        if (e.Money5Num > Player.getYuBi()) {
            MonsterMsgBox1.show("您的积分不足哦! 快去击败恶霸获得积分吧! \n 使用导弹可以极大提高击败首领的概率!", true);
            return false
        }
        var t = "<font color='#904120'>是否消耗</font><font color='#ffe2d6'>" + e.Money5Num + "积分</font><font color='#904120'>兑换</font><font color='#ffe2d6'>" + e.GoodsName + "</font>";
        if (e.ExchangeId) {
            if (e.NeedCondition === 2) {
                ExchangePrompt.show(t).submitCall = function() {
                    MonsterAdress.show(true,
                    function() {
                        console.log("FishExchangeReq");
                        Request.FishExchangeReq(e.ExchangeId)
                    })
                }
            } else if (e.NeedCondition == 3 || e.NeedCondition == 1) {
                PhoneRecharge.show(e.ExchangeId, 0, this.dataList.selectedItem.name, true)
            } else {
                ExchangePrompt.show(t).submitCall = function() {
                    Request.FishExchangeReq(e.ExchangeId)
                }
            }
        }
    };
    e.updateJiangQuan = function() {
        if (this.btnMenu.currIndex == 0) {
            this.FC_JiFen.value = Player.getJiangJuan();
            this.iconmoney.skin = "resource/exchange/img_jiangquan.png";
            this.imgyuan.visible = false
        } else if (this.btnMenu.currIndex == 1) {
            this.FC_JiFen.value = Player.getHongBao();
            this.iconmoney.skin = "resource/exchange/icon_hongbao.png";
            this.imgyuan.visible = true;
            this.imgyuan.x = this.FC_JiFen.x + (this.FC_JiFen.value + "").length * 14 + 2
        } else {
            this.FC_JiFen.value = Player.getYuBi();
            this.iconmoney.skin = "resource/exchange/icon_yubi.png";
            this.imgyuan.visible = false
        }
        this.FC_JiFen.zOrder = 9
    };
    var n = null;
    var t = {
        opened: null,
        closed: null,
        show: function(e, t) {
            Resource.load(RES.loadTaskList.exchange,
            function() {
                if (!n) {
                    n = new i;
                    n.init(e)
                }
                n.popup();
                Request.GetFishExchangeListReq();
                Waiting.hide()
            });
            ActionEventReport.report(ActionEventReport.actionIndex.ID1067, {
                t: t ? 0 : 1
            })
        },
        hide: function() {
            if (n && n.visible) {
                n.close()
            }
        },
        updateDataList: function() {
            if (n && n.visible) {
                n.update()
            }
        },
        setIsRedDrawNeedCheck: function(e) {
            h = e
        }
    };
    return t
} ();
var ExchangeRecord = function() {
    var e = Laya.Handler;
    var a = ["待确认", "已确认", "配货中", "已发货", "发货取消"];
    var r = 1;
    var o = 0;
    var l = true;
    var s = {},
    h = null;
    var u = function(e, t) {
        var i;
        switch (t) {
        case 1:
            i = GameConfig.exchange.getLotteryCfg();
            break;
        case 4:
            i = GameConfig.exchange.getRedListCfg();
            break;
        case 5:
            i = GameConfig.exchange.getExchangeDHQList();
            break;
        default:
            i = GameConfig.exchange.getLotteryCfg();
            break
        }
        for (var n = 0; n < i.length; n++) {
            h = i[n];
            s[h.ExchangeID] = h
        }
        if (s) {
            return s[e] || null
        }
        return null
    };
    function t() {
        t.super(this)
    }
    Laya.class(t, "ExchangeRecordFn", ExchangeRecordUI, "");
    var i = t.prototype;
    i.init = function() {
        this.okJIlu.zOrder = 9;
        this.on(Laya.Event.CLICK, this,
        function(e) {
            if (e.target) {
                if (e.target.name == "btnNext") {
                    if (r >= o) {
                        return
                    }
                    l = false;
                    r++;
                    this.upBtnState();
                    Request.exchangeRecordReq(r, this.ExchangeType);
                    ActionReport.addLog(ActionReport.actionIndex.jiLu_Next)
                } else if (e.target.name == "btnPrev") {
                    if (r <= 1) {
                        return
                    }
                    l = false;
                    r--;
                    this.upBtnState();
                    Request.exchangeRecordReq(r, this.ExchangeType);
                    ActionReport.addLog(ActionReport.actionIndex.jiLu_Prev)
                } else if (e.target.name == "close") {
                    ActionReport.addLog(ActionReport.actionIndex.jiLu_Close)
                }
            }
        });
        this.dataList.scrollBar.hide = true;
        this.dataList.renderHandler = new e(this, this.renderDataList)
    };
    i.upBtnState = function() {
        if (r >= o) {
            this.btnNext.skin = "resource/common/btn_dis.png"
        } else {
            this.btnNext.skin = "resource/common/btn_lv2.png"
        }
        if (r <= 1) {
            this.btnPrev.skin = "resource/common/btn_dis.png"
        } else {
            this.btnPrev.skin = "resource/common/btn_lv2.png"
        }
    };
    i.updateLogList = function(e) {
        var t = e.List;
        if (l) {
            o = e.TotalNum
        }
        if (t.length > 0) {
            this.okJIlu.visible = true;
            this.pagesNum.value = r + "/" + o;
            this.noJIlu.visible = false
        } else {
            this.okJIlu.vsible = false;
            this.noJIlu.visible = true;
            this.pagesNum.value = "0/0"
        }
        var i = [];
        for (var n = 0; n < t.length; n++) {
            var s = u(t[n].ExchangeId, t[n].ExchangeType);
            i.push({
                itemName: s.GoodsName,
                dateTxt: t[n].CreateTime,
                stageTxt: a[t[n].Status * 1 - 1],
                stage: t[n].Status
            })
        }
        this.dataList.array = i
    };
    i.renderDataList = function(e, t) {
        var i = e.dataSource;
        var n = e.getChildByName("stageTxt");
        var s = e.getChildByName("boxBg");
        if (t % 2 == 1) {
            s.graphics._one[4] = "#FFF6EF";
            s.graphics._one[5] = "#FFF6EF"
        } else {
            s.graphics._one[4] = "#FFE8D8";
            s.graphics._one[5] = "#FFE8D8"
        }
        if (i.stage == 1) {
            n.color = "#09B400"
        } else if (i.stage == 2) {
            n.color = "#1C76FE"
        } else if (i.stage == 3) {
            n.color = "#FFFF00"
        } else if (i.stage == 4) {
            n.color = "#F2A770"
        } else if (i.stage == 5) {
            n.color = "#FF4500"
        }
    };
    i.onOpened = function() {
        c.opened && c.opened();
        this.upBtnState();
        if (!this.isInit) {
            this.isInit = true;
            this.init()
        }
    };
    i.onClosed = function() {
        c.closed && c.closed();
        r = 1;
        this.destroy();
        BaseDialog.prototype.onClosed.call(this);
        n = null
    };
    i.reset = function() {
        this.close();
        n = null
    };
    var n = null;
    var c = {
        opened: null,
        closed: null,
        show: function(e) {
            if (!n) {
                n = new t
            }
            n.ExchangeType = e;
            Request.exchangeRecordReq(1, e);
            n.popup()
        },
        updateList: function(e) {
            n && n.updateLogList(e)
        }
    };
    return c
} ();
var ExchangePrompt = function() {
    var i = Laya.HTMLDivElement;
    function a(e) {
        var t = new i;
        t.style.font = "Microsoft YaHei";
        t.style.wordWrap = true;
        t.style.fontSize = 24;
        t.style.lineHeight = 30;
        t.height = 30;
        t.width = 390;
        return t
    }
    function n() {
        n.super(this);
        this.submitCall = null;
        this.closeCall = null
    }
    Laya.class(n, "ExchangePromptFn", ExchangePromptUI, "");
    var e = n.prototype;
    e.init = function() {
        this.btnYes.clickHandler = new Laya.Handler(this,
        function() {
            NoviceGuidanceOnMinGame.hideClickArea(true);
            this.close();
            this.submitCall && this.submitCall();
            ActionReport.addLog(ActionReport.actionIndex.exchange_OK)
        });
        if (Player.getNewPlayer()) {
            this.btnClose.visible = false
        }
    };
    e.setMsg = function(e) {
        if (e) {
            this.div = a(this.divBox.width);
            this.divBox.addChild(this.div);
            this.div.innerHTML = e;
            var t = this.div.contextWidth * 1;
            var i = this.div.contextHeight * 1;
            var n = (this.divBox.width - t) / 2;
            var s = (this.divBox.height - i) / 2;
            this.div.pos(n, s)
        }
    };
    e.onOpened = function() {
        t.opened && t.opened()
    };
    e.onClosed = function(e) {
        ActionReport.addLog(ActionReport.actionIndex.exchange_Close);
        this.closeCall && this.closeCall(e);
        Laya.Pool.recover("ExchangePromptFn", this);
        this.div.removeSelf();
        BaseDialog.prototype.onClosed.call(this);
        s = null
    };
    e.reset = function() {
        s = null
    };
    var s = null;
    var t = {
        opened: null,
        show: function(e) {
            var t = Laya.Pool.getItemByClass("ExchangePromptFn", n);
            s = t;
            s.init();
            t.setMsg(e);
            t.popup();
            return t
        },
        hide: function(e) {
            if (s) {
                if (e) {
                    s.submitCall = null
                }
                s.close()
            }
        }
    };
    return t
} ();
var PhoneRecharge = function() {
    var e = Laya.Handler;
    var s = null;
    var a = null;
    var r = null;
    function o() {
        o.super(this)
    }
    Laya.class(o, "PhoneRechargeFn", PhoneRechargeUI, "");
    var t = o.prototype;
    t.init = function() {
        this.on(Laya.Event.CLICK, this,
        function(e) {
            if (e.target) {
                if (e.target.name == "btnSubmit") {
                    var t = this.phone.text;
                    var i = this.confirmPhone.text;
                    var n = Utils.getPhoneReg();
                    if (!t) {
                        MsgToast.show(GameConfig.ErrorMsg.clientErrorMsg(10002))
                    } else if (!n.test(t)) {
                        MsgToast.show("手机号格式有误")
                    } else if (!i) {
                        MsgToast.show(GameConfig.ErrorMsg.clientErrorMsg(10008))
                    } else if (!n.test(i)) {
                        MsgToast.show("手机号格式有误")
                    } else if (t != i) {
                        MsgToast.show(GameConfig.ErrorMsg.clientErrorMsg(10009))
                    } else {
                        console.log("提交");
                        console.log("_id" + s + "_type" + a + "_phone" + i);
                        if (this.isHitMonster) {
                            Request.FishExchangeReq(s, i);
                            this.close()
                        } else {
                            Request.exchangeReq(s, a, "", i)
                        }
                    }
                    ActionReport.addLog(ActionReport.actionIndex.phoneRecharge_Submit)
                } else if (e.target.name == "close") {
                    ActionReport.addLog(ActionReport.actionIndex.phoneRecharge_Close)
                }
            }
        })
    };
    t.update = function() {
        this.itemName.text = r
    };
    t.onOpened = function() {
        i.opened && i.opened();
        if (!this.isInit) {
            this.isInit = true;
            this.init()
        }
        this.update()
    };
    t.onClosed = function() {
        i.closed && i.closed();
        this.phone.text = "";
        this.confirmPhone.text = "";
        this.destroy();
        BaseDialog.prototype.onClosed.call(this);
        l = null
    };
    t.reset = function() {
        this.close();
        l = null
    };
    var l = null;
    var i = {
        opened: null,
        closed: null,
        show: function(e, t, i, n) {
            s = e;
            a = t;
            r = i;
            if (!l) {
                l = new o
            }
            l.popup();
            l.isHitMonster = n
        },
        hide: function() {
            l && l.close()
        }
    };
    return i
} ();
var EstablishAccount = function() {
    var n = null;
    function e() {
        e.super(this)
    }
    Laya.class(e, "EstablishAccountFun", EstablishAccountUI, "");
    function t() {
        t.super(this)
    }
    Laya.class(t, "EstablishAccount2Fun", EstablishAccount2UI, "");
    var i = t.prototype,
    s = e.prototype;
    s.init = i.init = function() {
        this.create_user.clickHandler = new Laya.Handler(this, this.createUserHanFun);
        this.btnClose.clickHandler = new Laya.Handler(this,
        function() {
            ActionReport.addLog(ActionReport.actionIndex.createAccount_Close)
        })
    };
    s.createUserHanFun = i.createUserHanFun = function() {
        ActionReport.addLog(ActionReport.actionIndex.createAccount_Create);
        var e = this.user_name.text,
        t = this.psw.text,
        i = this.re_psw.text,
        n = undefined,
        s = undefined,
        a = undefined,
        r = undefined,
        o = undefined,
        l = undefined,
        h = undefined;
        if (e === "") {
            MsgToast.show(GameConfig.ErrorMsg.clientErrorMsg(10018));
            return false
        }
        a = /^[a-zA-Z0-9\u4e00-\u9fa5]+$/;
        if (!a.test(e)) {
            MsgToast.show(GameConfig.ErrorMsg.clientErrorMsg(10019));
            return false
        }
        r = /[\u4E00-\u9FA5]/g;
        o = /[a-zA-Z]/g;
        l = /[0-9]/g;
        var u = e.match(r),
        c = e.match(o),
        f = e.match(l);
        if (u && c && f) {
            if (u.length * 2 + c.length + f.length > 12) {
                MsgToast.show(GameConfig.ErrorMsg.clientErrorMsg(10020));
                return false
            }
        } else if (u && !c && !f) {
            if (u.length * 2 > 12) {
                MsgToast.show(GameConfig.ErrorMsg.clientErrorMsg(10020));
                return false
            }
        } else if (c && !u && !f) {
            if (c.length > 12) {
                MsgToast.show(GameConfig.ErrorMsg.clientErrorMsg(10020));
                return false
            }
        } else if (!u && !c && f) {
            if (f.length > 12) {
                MsgToast.show(GameConfig.ErrorMsg.clientErrorMsg(10020));
                return false
            }
        } else if (u && c && !f) {
            if (u.length * 2 + c.length > 12) {
                MsgToast.show(GameConfig.ErrorMsg.clientErrorMsg(10020));
                return false
            }
        } else if (u && f && !c) {
            if (u.length * 2 + f.length > 12) {
                MsgToast.show(GameConfig.ErrorMsg.clientErrorMsg(10020));
                return false
            }
        } else if (!u && c && f) {
            if (c.length + f.length > 12) {
                MsgToast.show(GameConfig.ErrorMsg.clientErrorMsg(10020));
                return false
            }
        }
        if (t === "") {
            MsgToast.show(GameConfig.ErrorMsg.clientErrorMsg(10021));
            return false
        }
        if (t.length < 6 || t.length > 18) {
            MsgToast.show(GameConfig.ErrorMsg.clientErrorMsg(10022));
            return false
        }
        var d = /^[0-9A-Za-z]+$/;
        if (i !== t) {
            MsgToast.show(GameConfig.ErrorMsg.clientErrorMsg(10023));
            return false
        }
        var g = {
            CpsId: Game.channel.cfg.cps,
            SubCpsId: 0,
            Imei: Game.device.id || "",
            SysVer: "",
            PhoneModel: "",
            RegVer: Game.loginVer,
            ClientOnly: "",
            ChannelId: Game.channel.cfg.LoginChannel,
            RegType: 0,
            Ext: Game.device.Ext || ""
        };
        if (Channel && Channel.getPhoneMsg) {
            var p = Channel.getPhoneMsg();
            g.Imei = p.IMEI || "";
            g.PhoneModel = p.model || "";
            g.SysVer = p.VERSION || ""
        }
        if (Game.channel.isNeedCer) {
            n = this.real_name.text;
            s = this.id_num.text;
            if (n === "") {
                MsgToast.show(GameConfig.ErrorMsg.clientErrorMsg(10015));
                return false
            }
            if (s === "") {
                MsgToast.show(GameConfig.ErrorMsg.clientErrorMsg(10016));
                return false
            }
            h = /(^\d{15}$)|(^\d{18}$)|(^\d{17}(\d|X|x)$)/;
            if (!h.test(s)) {
                MsgToast.show(GameConfig.ErrorMsg.clientErrorMsg(10017));
                return false
            }
            Waiting.show();
            g.RegType = 2;
            g.Nick = e;
            g.Password = t;
            g.RealName = n;
            g.IdCardNum = s;
            Request.registerReq(g)
        } else {
            Waiting.show();
            g.Nick = e;
            g.Password = t;
            Request.registerReq(g)
        }
    };
    s.reset = i.reset = function() {
        this.close();
        if (n) {
            n = null
        }
    };
    s.onClosed = i.onClosed = function() {
        BaseDialog.prototype.onClosed.call(this);
        this.reset()
    };
    return {
        show: function() {
            n = Game.channel.isNeedCer ? new t: new e;
            n.init();
            n.popup();
            ActionReport.addLog(ActionReport.actionIndex.login_Establish)
        },
        hide: function() {
            n && n.close()
        },
        registerRepSuccess: function(e) {
            Waiting.hide();
            if (e.Tag) {
                Player.setNewPlayer(e.isNew);
                if (n) {
                    var t = n.user_name.text,
                    i = n.psw.text;
                    Utils.setLocalStorageFun(t, i, 0);
                    n.close()
                }
                ChoiceAccount.hide();
                GameCenter.loginRep(e)
            } else if (e.MsgId) {
                MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgId));
                if (e.MsgId == 407 && !Game.channel.isNeedCer && n) {
                    n.close();
                    Game.channel.isNeedCer = true;
                    EstablishAccount.show()
                }
            }
        }
    }
} ();
var Certificate = function() {
    var e = Laya.Handler,
    t = Laya.Event;
    var i = null,
    h = {
        11 : "北京",
        12 : "天津",
        13 : "河北",
        14 : "山西",
        15 : "内蒙古",
        21 : "辽宁",
        22 : "吉林",
        23 : "黑龙江 ",
        31 : "上海",
        32 : "江苏",
        33 : "浙江",
        34 : "安徽",
        35 : "福建",
        36 : "江西",
        37 : "山东",
        41 : "河南",
        42 : "湖北 ",
        43 : "湖南",
        44 : "广东",
        45 : "广西",
        46 : "海南",
        50 : "重庆",
        51 : "四川",
        52 : "贵州",
        53 : "云南",
        54 : "西藏 ",
        61 : "陕西",
        62 : "甘肃",
        63 : "青海",
        64 : "宁夏",
        65 : "新疆",
        71 : "台湾",
        81 : "香港",
        82 : "澳门",
        91 : "国外 "
    };
    function n() {
        n.super(this);
        this.closeCall = null
    }
    Laya.class(n, "CertificateFun", CertificateUI, "");
    var s = n.prototype;
    s.init = function() {
        this.submit_btn.clickHandler = new e(this, this.submitFun);
        this.on(Laya.Event.CLICK, this,
        function(e) {
            if (e.target.name == "close") {
                ActionReport.addLog(ActionReport.actionIndex.shiMing_Close)
            }
        })
    };
    s.submitFun = function() {
        var e = this.name.text,
        t = this.id_num.text,
        i = /(^\d{15}$)|(^\d{18}$)|(^\d{17}(\d|X|x)$)/;
        if (e === "") {
            MsgToast.show(GameConfig.ErrorMsg.clientErrorMsg(10015));
            return false
        }
        if (t === "") {
            MsgToast.show(GameConfig.ErrorMsg.clientErrorMsg(10016));
            return false
        }
        if (!i.test(t)) {
            MsgToast.show(GameConfig.ErrorMsg.clientErrorMsg(10017));
            return false
        }
        Waiting.show();
        Request.realNameReq(e, t);
        ActionReport.addLog(ActionReport.actionIndex.shiMing_Submit)
    };
    s.onClosed = function() {
        this.name.text = "";
        this.id_num.text = "";
        this.closeCall && this.closeCall();
        this.closeCall = undefined;
        this.destroy();
        BaseDialog.prototype.onClosed.call(this);
        i = null;
        Certificate.isShow = false
    };
    s.reset = function() {
        this.close();
        if (i) {
            i = null
        }
    };
    function a(e) {
        var t = true;
        if (!e || !/^\d{6}(18|19|20)?\d{2}(0[1-9]|1[12])(0[1-9]|[12]\d|3[01])\d{3}(\d|X)$/i.test(e)) {
            t = false
        } else if (!h[e.substr(0, 2)]) {
            t = false
        } else {
            if (e.length === 18) {
                e = e.split("");
                var i = [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2];
                var n = [1, 0, "X", 9, 8, 7, 6, 5, 4, 3, 2];
                var s = 0;
                var a = 0;
                var r = 0;
                for (var o = 0; o < 17; o++) {
                    a = e[o];
                    r = i[o];
                    s += a * r
                }
                var l = n[s % 11];
                if (n[s % 11] !== e[17]) {
                    t = false
                }
            }
        }
        return t
    }
    return {
        popup: function(e, t) {
            if (!i) {
                i = new n;
                i.init()
            }
            if (e) {
                i.btnClose.visible = false;
                i.size(Game.ViewWidth, Game.ViewHeight)
            }
            i.closeCall = t;
            i.zOrder = 9999;
            i.popup();
            Certificate.isShow = true;
            return i
        },
        realNameRep: function(e) {
            Waiting.hide();
            console.log(e);
            if (e.Tag && e.Tag === 1) {
                if (i) {
                    i.close();
                    PreventIndulge.hide();
                    Player.setSMRZ(1);
                    Player.setNeedFcm(e.NeedFcm);
                    PersonalCenter.updateUserInfo()
                }
            }
            MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgId))
        }
    }
} ();
var LuckyTurntable = function() {
    var e = Laya.Handler,
    t = Laya.Ease;
    var s = [{
        x: 211,
        y: 51,
        r: 18
    },
    {
        x: 274,
        y: 97,
        r: 54
    },
    {
        x: 296.5,
        y: 172,
        r: 90
    },
    {
        x: 271.3,
        y: 244.2,
        r: 126
    },
    {
        x: 209.6,
        y: 287.5,
        r: 162
    },
    {
        x: 133.7,
        y: 286.5,
        r: 198
    },
    {
        x: 73,
        y: 242,
        r: 234
    },
    {
        x: 49,
        y: 170,
        r: 270
    },
    {
        x: 72.2,
        y: 97.2,
        r: 306
    },
    {
        x: 133.5,
        y: 51.5,
        r: 342
    }],
    r = true,
    o = 0,
    l = undefined,
    h = undefined,
    u = undefined;
    var n = null;
    function a() {
        a.super(this);
        this.closeCall = null;
        this.getWardCall = null;
        this.isClearRes = true;
        this.resList = RES.loadTaskList.luckyTurntable
    }
    var i = null;
    Laya.class(a, "LuckyTurntableFn", LuckyTurntableUI, "");
    var c = a.prototype;
    c.init = function() {
        this.updateDrawTimes();
        this.on(Laya.Event.CLICK, this,
        function(e) {
            if (e.target) {
                var t = e.target.name;
                if (t === "closeBg") {
                    if (r) {
                        this.close("bg_close")
                    }
                    ActionReport.addLog(ActionReport.actionIndex.turntable_Close)
                } else if (t === "lottery_draw") {
                    if (Player.getDrawTimes() > 0) {
                        this.lotteryDrawFun();
                        ActionReport.addLog(ActionReport.actionIndex.turntable_Get)
                    } else if (Player.getDrawShareTimes() > 0) {
                        if (Channel && Channel.forward) {
                            Channel.forward("luckyShare");
                            ActionReport.addLog(ActionReport.actionIndex.LuckyTurnTable_Share)
                        }
                    } else {}
                }
            }
        })
    };
    c.lightFlashFun = function() {
        this._index = -1;
        var e = this.light_ani,
        t = e._childs.length;
        this.timer.loop(100, this, this.breathingLamp, [e, t])
    };
    c.breathingLamp = function(e, t) {
        this._index++;
        var i = e.getChildAt(this._index);
        this.breathingStage(i);
        if (this._index >= t - 1) {
            this._index = -1
        }
    };
    c.breathingStage = function(e) {
        if (this._index % 2 === 0) {
            e.skin = "resource/luckyTurntable/hongdeng2.png"
        } else {
            e.skin = "resource/luckyTurntable/landeng2.png"
        }
        this.timer.once(300, this,
        function() {
            if (e.skin === "resource/luckyTurntable/hongdeng2.png") {
                e.skin = "resource/luckyTurntable/hongdeng1.png"
            }
            if (e.skin === "resource/luckyTurntable/landeng2.png") {
                e.skin = "resource/luckyTurntable/landeng1.png"
            }
        })
    };
    c.setPrizesFun = function(e) {
        for (var t = 0,
        i = e.length; t < i; t++) {
            var n = new TumtablePrizeUI;
            n.img.skin = "resource/luckyTurntable/" + e[t].ItemId + ".png";
            n.img.x = (72 - n.img.width) / 2;
            n.num.value = e[t].Count;
            n.x = s[t].x;
            n.y = s[t].y;
            n.rotation = s[t].r;
            this.prize_box.addChild(n)
        }
        this.lightFlashFun()
    };
    c.lotteryDrawFun = function() {
        if (!r) {
            return false
        }
        incomeRemind(function() {
            Request.getPrize.startGetPrizeReq()
        })
    };
    c.startGet = function() {
        var t = this;
        r = false;
        o++;
        var e = 360 * 4 * o - (2 * h - 1) * 18;
        this.tweenMaxInst = Laya.Pool.getItemByClass("TweenLite", TweenLite, "");
        this.tweenMaxInst.target = this.prize_box;
        this.tweenMaxInst.szy_init(this.prize_box, 4.5, {
            ease: "easeOutCirc",
            rotation: e
        });
        this.timer.once(4500, this,
        function() {
            LuckyGift.show(this, 0, 0);
            LuckyGift.processCall = function() {
                t.timer.clearAll(this);
                t.close("wards_close");
                t.lottery_draw.getChildByName("draw_img").skin = "resource/luckyTurntable/zi_yongwan.png";
                var e = GetReward.show("恭喜您获得", l.toString() + ":" + u, true);
                e.closeCallback = function() {
                    e = null;
                    t.getWardCall && t.getWardCall()
                };
                r = true
            };
            Sound.playSound(Sound.RES.luckTurn5.url, Sound.RES.luckTurn5.vol)
        });
        var i = 0,
        n = 36,
        s = 0;
        var a = Game.onMiniGame ? 1 : 3;
        n = Game.onMiniGame ? 2 : 36;
        this.timer.frameLoop(a, this,
        function() {
            var e = t.prize_box.rotation;
            if (e - i >= n || i === 0) {
                i = e;
                s++;
                if (s === 3) {
                    n = Game.onMiniGame ? 2 : 90
                }
                if (Game.onMiniGame) {} else {
                    Sound.playSound(Sound.RES.luckTurn1.url, Sound.RES.luckTurn1.vol)
                }
            }
        })
    };
    c.onOpened = function() {
        this.updateDrawTimes()
    };
    c.onClosed = function(e) {
        Sound.setMusicVolume(.4);
        this.timer.clearAll(this);
        this.prize_box.rotation = 0;
        o = 0;
        this.closeCall && this.closeCall(e);
        BaseDialog.prototype.onClosed.call(this);
        n = null
    };
    c.updateDrawTimes = function() {
        if (Game.onMiniGame) {
            if (this.lottery_draw) {
                var e = this.lottery_draw.getChildByName("draw_img");
                if (e) {
                    if (Player.getDrawTimes() > 0) {
                        e.skin = "resource/luckyTurntable/zi_choujiang.png";
                        this.lottery_draw.visible = true;
                        this.no_times.visible = false
                    } else if (Player.getDrawShareTimes() > 0) {
                        e.skin = "resource/luckyTurntable/share_add.png";
                        this.lottery_draw.visible = true;
                        this.no_times.visible = false
                    } else {
                        this.lottery_draw.visible = false;
                        this.no_times.visible = true;
                        e.skin = "resource/luckyTurntable/zi_yongwan.png"
                    }
                }
            }
        } else {
            if (Player.getDrawTimes() > 0) {
                this.lottery_draw.getChildByName("draw_img").skin = "resource/luckyTurntable/zi_choujiang.png";
                this.lottery_draw.visible = true;
                this.no_times.visible = false
            } else {
                this.lottery_draw.visible = false;
                this.no_times.visible = true;
                this.lottery_draw.getChildByName("draw_img").skin = "resource/luckyTurntable/zi_yongwan.png"
            }
        }
    };
    c.reset = function() {
        this.close();
        if (n) {
            n = null
        }
    };
    var f = {
        opened: null,
        closed: null,
        show: function(t, i, e) {
            if (!Player.TurntableActivitySwitch()) {
                if (t) t();
                return
            }
            Waiting.show();
            ActionEventReport.report(ActionEventReport.actionIndex.ID1059, {
                t: e ? 0 : 1
            });
            WinUtils.showDialog(RES.loadTaskList.luckyTurntable, a,
            function(e) {
                Request.getPrize.getPrizesReq();
                n = e;
                n.popup();
                n.closeCall = t;
                n.getWardCall = i;
                Waiting.hide()
            })
        },
        hide: function(e) {
            if (n) {
                n.visible = false;
                if (e) {
                    n.reset()
                }
            }
        },
        getPrizeFun: function(e) {
            if (n) {
                var t = e.Draw.sort(function(e, t) {
                    return e.Sort - t.Sort
                });
                n.setPrizesFun(t)
            }
        },
        startGetPrizeFun: function(e) {
            Sound.setMusicVolume(.2);
            if (e.Tag !== 1) {
                var t = GameConfig.ErrorMsg.getMsgById(e.MsgId);
                MsgToast.show(t);
                return false
            }
            l = e.ItemId;
            h = e.Id;
            u = e.ItemCount;
            Player.setDrawShareTimes(e.ShareTimes);
            Player.setDrawTimes(e.DrawTimes);
            if (n) {
                n.startGet()
            }
        },
        updateDrawTimes: function() {
            n && n.updateDrawTimes()
        }
    };
    return f
} ();
var GetReward = function() {
    var r = null;
    var t = Laya.Event;
    var o = null;
    function l() {
        l.super(this);
        this.closeCallback = null
    }
    Laya.class(l, "GetRewardFn", GetRewardNewUI, "");
    var e = l.prototype;
    e.init = function() {
        var e = this;
        this.zOrder = 9999;
        this.timer.once(800, this,
        function() {
            this.on(t.CLICK, this,
            function(e) {
                if (e.target) {
                    if (e.target.name == "btnClose" || e.target.name == "btnreceive") {
                        var t = this.itemList.cells;
                        this.btnClose.visible = false;
                        this.btnreceive.visible = false;
                        this.animation(t);
                        if (e.target.name == "btnreceive") {
                            if (Channel && Channel.forward) {
                                Channel.forward(Game.ShareType.GETREWARD)
                            }
                        }
                    }
                }
            })
        });
        this.btnreceive.visible = this.showShare
    };
    e.spineFun = function(e) {
        if (e && e.buildArmature) {
            var t = e.buildArmature(0);
            var i = this.titleBox;
            this.mArmature = t;
            t.x = i.width / 2;
            t.y = i.height / 2;
            i.addChild(t);
            t.play(0, false)
        }
    };
    e.animation = function(h, u) {
        ActionReport.addLog(ActionReport.actionIndex.getReward_Get);
        var c = 238;
        var f = this;
        for (var e = 0; e < h.length; e++) {
            var t = h[e]; (function(e, t) {
                if (Game.state.get() > Game.sceneConfig.sceneID.gameCenter) {
                    if (WinUtils.getSaveUI(FishScene.SKIN_NAME)) {
                        var i = WinUtils.getSaveUI(FishScene.SKIN_NAME).cannon1.getChildByName("paoBox");
                        var n = Utils.localToGlobal(i);
                        var s = n.y;
                        var a = n.x
                    } else {
                        var s = 580;
                        var a = 1e3
                    }
                } else {
                    var i = WinUtils.getSaveUI(GameCenter.SKIN_NAME).btnBackIcon;
                    var n = Utils.localToGlobal(i);
                    var s = n.y - 37.5;
                    var a = n.x - 31.5
                }
                if (u) {
                    var r = Player.getCannonInst();
                    var o = r.viewUser.getChildByName("paoParent");
                    var l = util.localToGlobal(o);
                    a = l.x;
                    s = l.y
                }
                Laya.timer.once(t * c / 2, null,
                function() {
                    Utils.tweenTo(e, {
                        x: a,
                        y: s,
                        scaleX: .5,
                        scaleY: .5
                    },
                    1e3, Laya.Ease.backIn,
                    function() {
                        e.removeSelf();
                        e.visible = false;
                        Sound.playSound(Sound.RES.DiamondIn.url, Sound.RES.DiamondIn.vol);
                        if (t == h.length - 1) {
                            f.close()
                        }
                    })
                })
            })(t, e)
        }
    };
    e.loadResCompleted = function(e, t, i, n) {
        if (e && this.titleTxt) {
            this.titleTxt.text = e
        }
        var s = this.itemList;
        if (!s) {
            return
        }
        var a = [];
        if (typeof t == "string") {
            var r = t.split("|");
            for (var o = 0; o < r.length; o++) {
                var l = r[o].split(":");
                if (l && l.length > 0) {
                    var h = l[0],
                    u = l[1];
                    var c = GameConfig.Item.getItemInfoById(h);
                    if (c) {
                        var f = c.skin;
                        if (c.ID == 139) {
                            f = "resource/icon/207.png"
                        } else if (c.ID == 135) {
                            f = "resource/icon/208.png"
                        }
                        if (h == 10) {
                            u /= 100
                        }
                        a.push({
                            kuang: Utils.getItemIconBgSkin(c.FrameLevel),
                            numClip: {
                                value: u,
                                zOrder: 9
                            },
                            icon: f
                        })
                    }
                }
            }
        } else if (t instanceof Array && t.length) {
            for (var o = 0; o < t.length; o++) {
                var d = t[o];
                var c = GameConfig.Item.getItemInfoById(d.ItemId);
                if (c) {
                    var f = c.skin;
                    if (c.ID == 139) {
                        f = "resource/icon/207.png"
                    } else if (c.ID == 135) {
                        f = "resource/icon/208.png"
                    }
                    if (d.ItemId == 10) {
                        d.ItemNum /= 100
                    }
                    a.push({
                        kuang: Utils.getItemIconBgSkin(c.FrameLevel),
                        numClip: {
                            value: d.ItemNum,
                            zOrder: 9
                        },
                        icon: f
                    })
                }
            }
        }
        if (a[0]) {
            s.array = a;
            s.visible = true;
            var g = a.length;
            var p = 98,
            _ = s.spaceX;
            var m = g * p + (g - 1) * _;
            var v = Math.ceil(g / 2);
            if (g > 5) {
                s.repeatX = v;
                var m = v * p + (v - 1) * _;
                s.width = m;
                s.pivotX = m / 2;
                s.x = Game.UIWidth / 2;
                s.height = 98 * 2 + 10;
                s.spaceY = 8;
                s.y = 305
            } else {
                s.repeatX = g;
                s.y = 331;
                s.width = m;
                s.pivotX = m / 2;
                s.x = Game.UIWidth / 2
            }
        } else {
            s.visible = false
        }
    };
    e.onOpened = function() {
        if (!this._init_) {
            this._init_ = true
        }
        if (!o) {
            Sound.playSound(Sound.RES.win1.url, Sound.RES.win1.vol)
        }
        Sound.setMusicVolume(.2)
    };
    e.onClosed = function() {
        this.btnClose.visible = true;
        if (this.titleTxt) this.titleTxt.visible = false;
        Request.package.getListReq();
        Request.GetUserMoneyReq();
        Sound.setMusicVolume(.4);
        this.closeCallback && this.closeCallback();
        ActionReport.addLog(ActionReport.actionIndex.getReward_Close);
        BaseDialog.prototype.onClosed.call(this);
        h = null;
        if (r) {
            r()
        }
    };
    e.reset = function() {
        this.close()
    };
    var h = null;
    return {
        submitCall: null,
        cancelCall: null,
        closeCall: null,
        show: function(e, t, i, n, s, a) {
            r = s;
            o = i;
            h = new l;
            h.showShare = a && Game.showShare();
            h.loadResCompleted(e, t, i);
            h.init(n);
            h.btnClose.size(Game.ViewWidth, Game.ViewHeight);
            h.popup();
            return h
        }
    }
} ();
var GetNewDaoDan = function() {
    var t = Laya.Event;
    function i() {
        i.super(this);
        this.closeCallback = null
    }
    Laya.class(i, "GetNewDaoDanFn", GetNewDaoDanUI, "");
    var e = i.prototype;
    e.init = function() {
        var e = this;
        this.zOrder = 9999;
        this.btnClose.size(0, 0);
        this.timer.once(800, this,
        function() {
            this.on(t.CLICK, this,
            function(e) {
                if (e.target) {
                    if (e.target.name == "btnreceive") {
                        var t = this.itemList.cells;
                        this.btnClose.visible = false;
                        this.btnreceive.visible = false;
                        this.close()
                    }
                }
            })
        })
    };
    e.onOpened = function() {};
    e.onClosed = function() {
        this.closeCallback && this.closeCallback();
        this.closeCallback = null;
        BaseDialog.prototype.onClosed.call(this);
        n = null
    };
    e.reset = function() {
        this.close()
    };
    var n = null;
    return {
        show: function(e) {
            Waiting.show();
            Resource.load(RES.loadTaskList.GetNewDaoDan,
            function() {
                Waiting.hide();
                n = new i;
                n.closeCallback = e;
                n.init();
                n.popup()
            })
        }
    }
} ();
var LoginPhone = function() {
    var i = null,
    n = Utils.getPhoneReg();
    haveCode = false,
    timeLimit = 60;
    function e() {
        e.super(this)
    }
    Laya.class(e, "LoginPhoneFun", LoginPhoneUI, "");
    var t = e.prototype;
    t.init = function() {
        this.on(Laya.Event.CLICK, this,
        function(e) {
            var t = e.target.name;
            if (t === "send_code") {
                this.sendCodeFun();
                ActionReport.addLog(ActionReport.actionIndex.phoneLogin_Send)
            } else if (t === "login") {
                this.loginFun();
                ActionReport.addLog(ActionReport.actionIndex.phoneLogin_GetInto)
            } else if (t === "close") {
                ActionReport.addLog(ActionReport.actionIndex.phoneLogin_Close)
            }
        })
    };
    t.sendCodeFun = function() {
        if (haveCode === true) {
            return false
        }
        var e = this.phone_num.text;
        if (e) {
            Request.phoneLoginGetCodeReq(e, 0)
        }
    };
    t.timerCountDown = function() {
        timeLimit--;
        if (timeLimit <= 0) {
            this.timer.clear(this, this.timerCountDown);
            this.time_c.visible = false;
            timeLimit = 60;
            haveCode = false;
            this.send_img.visible = true
        }
        this.time_c.changeText(timeLimit + "s")
    };
    t.loginFun = function() {
        var e = this.phone_num.text,
        t = this.code_num.text;
        if (e === "") {
            MsgToast.show(GameConfig.ErrorMsg.clientErrorMsg(10025));
            return false
        }
        if (!n.test(e)) {
            MsgToast.show(GameConfig.ErrorMsg.clientErrorMsg(10030));
            return false
        }
        if (t === "") {
            MsgToast.show(GameConfig.ErrorMsg.clientErrorMsg(10032));
            return false
        }
        this.telphoneNum = e;
        this.phoneCode = t;
        Waiting.show();
        Request.GetAccountListReq(e, t)
    };
    t.getRoleListRep = function(e) {
        if (!e.Tag && e.MsgId) {
            MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgId));
            return false
        }
        var t = this;
        if (e.Lists.length > 0) {
            this.close();
            RoleChoice.show(e.Lists, e.Token)
        } else {
            Waiting.show();
            var i = LoginViewApp.getParam({
                PhoneNum: t.telphoneNum,
                PhoneVCode: t.phoneCode,
                Type: 2
            });
            Request.login(i)
        }
    };
    t.reset = function() {
        this.close();
        if (i) {
            i = null
        }
        this.destroy()
    };
    t.onClosed = function() {
        if (this.code_num) {
            this.code_num.text = ""
        }
        BaseDialog.prototype.onClosed.call(this);
        i = null
    };
    return {
        show: function() {
            if (!i) {
                i = new e;
                i.init()
            }
            i.popup()
        },
        hide: function(e) {
            if (i) {
                i.close();
                if (e) {
                    i.removeSelf()
                }
            }
        },
        getCodeRes: function(e) {
            if (e.Tag) {
                haveCode = true;
                if (i) {
                    i.send_img.visible = false;
                    i.time_c.visible = true;
                    i.time_c.text = timeLimit + "s";
                    i.timer.loop(1e3, i, i.timerCountDown)
                }
            } else if (e.MsgId) {
                MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgId))
            }
        },
        getRoleListRep: function(e) {
            Waiting.hide();
            i && i.getRoleListRep(e)
        },
        loginRes: function(e, t) {
            Waiting.hide();
            if (t) {
                i && i.close();
                GameCenter.loginRep(e)
            }
        }
    }
} ();
var PersonalCenter = function() {
    var i = Laya.Handler;
    var n = "resource/personalCenter/bar_on.png";
    var s = "resource/personalCenter/img_kaiguan_bg.png";
    function e() {
        e.super(this)
    }
    Laya.class(e, "PersonalCenterFn", PersonalCenterUI, "");
    var t = e.prototype;
    t.init = function() {
        Laya.stage.on(Laya.Event.def_updateUserInfo, this, this.updateUserInfo, [true]);
        this.telTxt.underlineColor = "#FFFFFF";
        this.gongZhongHao.underlineColor = "#FFFFFF";
        this.wxNumTxt.underlineColor = "#FFFFFF";
        this.on(Laya.Event.CLICK, this,
        function(e) {
            if (e.target) {
                if (e.target.name == "headImg") {
                    ActionReport.addLog(ActionReport.actionIndex.personalCore_SetHerder);
                    if (Game.onMiniGame) {
                        return
                    }
                    SetAvatar.show()
                } else if (e.target.name == "btnReplaceHead") {
                    ActionReport.addLog(ActionReport.actionIndex.personalCore_SetHerder);
                    SetAvatar.show()
                } else if (e.target.name == "btnModify") {
                    Request.getUserGmkReq();
                    ActionReport.addLog(ActionReport.actionIndex.personalCore_SetNick)
                } else if (e.target.name == "btnCopy") {
                    if (Game.onMiniGame) {
                        Utils.setCopyValue(Player.getUserId())
                    }
                    ActionReport.addLog(ActionReport.actionIndex.personalCore_Copy)
                } else if (e.target.name == "btnNameRenZheng") {
                    Certificate.popup();
                    ActionReport.addLog(ActionReport.actionIndex.personalCore_RealName)
                } else if (e.target.name == "close") {
                    ActionReport.addLog(ActionReport.actionIndex.personalCore_Close)
                } else if (e.target.name == "btnMusic" || e.target.name == "musicImg") {
                    ActionReport.addLog(ActionReport.actionIndex.personalCore_Music);
                    var t = myStorage.getItem("soundSet");
                    Laya.Tween.to(this.btnMusic, {
                        x: t.bgm ? 55 : 6
                    },
                    200, null, new i(this,
                    function() {
                        this.musicImg.skin = t.bgm ? s: n
                    }));
                    Sound.stopMusic(t.bgm ? 1 : 0);
                    myStorage.setItem("soundSet", {
                        bgm: !t.bgm,
                        sod: t.sod,
                        fls: t.fls
                    })
                } else if (e.target.name == "btnSound" || e.target.name == "soundImg") {
                    ActionReport.addLog(ActionReport.actionIndex.personalCore_Sound);
                    var t = myStorage.getItem("soundSet");
                    Laya.Tween.to(this.btnSound, {
                        x: t.sod ? 55 : 6
                    },
                    200, null, new i(this,
                    function() {
                        this.soundImg.skin = t.sod ? s: n
                    }));
                    Sound.stopSound(t.sod ? 1 : 0);
                    myStorage.setItem("soundSet", {
                        bgm: t.bgm,
                        sod: !t.sod,
                        fls: t.fls
                    })
                } else if (e.target.name == "btnShock" || e.target.name == "shockImg") {
                    ActionReport.addLog(ActionReport.actionIndex.personalCore_Screen);
                    var t = myStorage.getItem("soundSet");
                    if (!t.fls) {
                        Laya.Tween.to(this.btnShock, {
                            x: 6
                        },
                        200, null, new i(this,
                        function() {
                            this.shockImg.skin = n
                        }));
                        Sound.setIsShock(false);
                        t.fls = true
                    } else {
                        Laya.Tween.to(this.btnShock, {
                            x: 55
                        },
                        200, null, new i(this,
                        function() {
                            this.shockImg.skin = s
                        }));
                        Sound.setIsShock(true);
                        t.fls = false
                    }
                    myStorage.setItem("soundSet", {
                        bgm: t.bgm,
                        sod: t.sod,
                        fls: t.fls
                    })
                }
            }
        });
        this.updateUserInfo()
    };
    t.isShowKF = function() {
        if (Player.getOpenKF() && Player.getKFDetail()) {
            var e = JSON.parse(Player.getKFDetail());
            this.kfTxt.text = GameConfig.ErrorMsg.clientErrorMsg(10049);
            this.wxGzhTxt.text = GameConfig.ErrorMsg.clientErrorMsg(10051);
            this.kfWxTxt.text = GameConfig.ErrorMsg.clientErrorMsg(10053);
            this.telTxt.text = e.phone;
            this.gongZhongHao.text = e.wxgzh;
            this.wxNumTxt.text = e.wx;
            this.personalBox.y = 0;
            this.personalBox.visible = true;
            this.keFuBox.visible = true
        } else {
            this.kfTxt.text = GameConfig.ErrorMsg.clientErrorMsg(10049);
            this.wxGzhTxt.text = GameConfig.ErrorMsg.clientErrorMsg(10051);
            this.kfWxTxt.text = GameConfig.ErrorMsg.clientErrorMsg(10053);
            this.telTxt.text = GameConfig.ErrorMsg.clientErrorMsg(10050);
            this.gongZhongHao.text = GameConfig.ErrorMsg.clientErrorMsg(10052);
            this.wxNumTxt.text = GameConfig.ErrorMsg.clientErrorMsg(10054);
            this.personalBox.y = 58;
            this.keFuBox.visible = false;
            this.personalBox.visible = true
        }
        if (Game.onMiniGame || Game.onBaiDuGame || Channel && Channel.disModNick || Game.channel.cfg.cps === Game.ChannelConstants.vivo) {
            this.btnModify.visible = false;
            this.btnReplaceHead.visible = false;
            this.btnNameRenZheng.pos(390, 90);
            this.yiRenZhengIcon.pos(390, 90)
        } else {
            this.btnModify.visible = true;
            this.btnReplaceHead.visible = true
        }
    };
    t.updateUserInfo = function(e) {
        if (e && !this.displayedInStage) {
            return
        }
        this.headImg.skin = !Player.getAvatarUrl() ? "resource/head/1.png": Player.getAvatarUrl();
        var t = Player.getNick();
        if (t.length > 6) {
            t = t.slice(0, 6) + "..."
        }
        this.nickTxt.text = t;
        if (Player.getOpenRealName()) {
            if (Player.getSMRZ() && Player.getNeedFcm() == 2) {
                this.yiRenZhengIcon.visible = true;
                this.btnNameRenZheng.visible = false
            } else {
                this.yiRenZhengIcon.visible = false;
                this.btnNameRenZheng.visible = true
            }
        } else {
            if (Player.getSMRZ() && Player.getNeedFcm() == 2) {
                this.yiRenZhengIcon.visible = true;
                this.btnNameRenZheng.visible = false
            } else {
                this.yiRenZhengIcon.visible = false;
                this.btnNameRenZheng.visible = false
            }
        }
        this.idClip.text = Player.getUserId();
        if (Game.channel.cfg.cps === Game.ChannelConstants.vivo) {
            this.yiRenZhengIcon.visible = false
        }
        this.btnCopy.visible = Game.onMiniGame ? true: false
    };
    t.onOpened = function() {
        r.opened && r.opened()
    };
    t.onClosed = function() {
        r.closed && r.closed();
        Laya.stage.off(Laya.Event.def_gameExit, this, this.reset);
        Laya.stage.off(Laya.Event.def_updateUserInfo, this, this.updateUserInfo);
        this.destroy();
        BaseDialog.prototype.onClosed.call(this);
        a = null
    };
    t.reset = function() {
        this.close();
        a = null
    };
    var a = null;
    var r = {
        opened: null,
        closed: null,
        show: function() {
            Waiting.show();
            WinUtils.showDialog(RES.loadTaskList.personalCenter, e,
            function(e) {
                a = e;
                a.isShowKF();
                var t = myStorage.getItem("soundSet");
                if (t) {
                    if (t.bgm) {
                        a.btnMusic.x = 6;
                        a.musicImg.skin = n
                    } else {
                        a.btnMusic.x = 55;
                        a.musicImg.skin = s
                    }
                    if (t.sod) {
                        a.btnSound.x = 6;
                        a.soundImg.skin = n
                    } else {
                        a.btnSound.x = 55;
                        a.soundImg.skin = s
                    }
                }
                a.popup();
                Waiting.hide()
            })
        },
        updateUserInfo: function() {
            a && a.updateUserInfo()
        }
    };
    return r
} ();
var PhoneBinding = function() {
    var t = null,
    i = Utils.getPhoneReg();
    haveCode = false,
    timeLimit = 60;
    function e() {
        e.super(this)
    }
    Laya.class(e, "PhoneBindingFun", PhoneBindingUI, "");
    var n = e.prototype;
    n.init = function() {
        var i = this;
        this.width = Game.UIWidth;
        this.height = Game.UIHeight;
        this.on(Laya.Event.CLICK, this,
        function(e) {
            var t = e.target.name;
            if (t === "send_code") {
                i.sendCodeFun();
                ActionReport.addLog(ActionReport.actionIndex.phoneBD_Send)
            } else if (t === "binding") {
                i.bindingFun();
                ActionReport.addLog(ActionReport.actionIndex.phoneBD_Submit)
            } else if (t === "close") {
                ActionReport.addLog(ActionReport.actionIndex.phoneBD_Close)
            }
        })
    };
    n.sendCodeFun = function() {
        if (haveCode === true) {
            return false
        }
        var e = this.phone_num.text;
        if (e) {
            Request.sendPhoneCodeReq(e)
        }
    };
    n.timerCountDown = function() {
        timeLimit--;
        if (timeLimit <= 0) {
            this.timer.clear(this, this.timerCountDown);
            this.time_c.visible = false;
            timeLimit = 60;
            haveCode = false
        }
        this.time_c.text = timeLimit + "s"
    };
    n.bindingFun = function() {
        var e = this.phone_num.text,
        t = this.code.text;
        if (e === "") {
            MsgToast.show(GameConfig.ErrorMsg.clientErrorMsg(10025));
            return false
        }
        if (!i.test(e)) {
            MsgToast.show(GameConfig.ErrorMsg.clientErrorMsg(10024));
            return false
        }
        if (t === "") {
            MsgToast.show(GameConfig.ErrorMsg.clientErrorMsg(10032));
            return false
        }
        Request.bindPhoneReq(e, t)
    };
    n.reset = function() {
        this.close();
        haveCode = false;
        timeLimit = 60;
        t = null
    };
    n.onClosed = function() {
        BaseDialog.prototype.onClosed.call(this);
        haveCode = false;
        timeLimit = 60;
        t = null
    };
    return {
        show: function() {
            if (!t) {
                t = new e;
                t.init()
            }
            t.popup()
        },
        hide: function(e) {
            if (t) {
                t.close();
                if (e) {
                    t.removeSelf()
                }
            }
        },
        getCodeRes: function(e) {
            if (!t) {
                return false
            }
            if (e.Tag && e.Tag === 1) {
                MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgId));
                haveCode = true;
                t.time_c.visible = true;
                t.time_c.text = timeLimit + "s";
                t.timer.loop(1e3, t, t.timerCountDown)
            } else if (e.MsgId) {
                MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgId))
            }
        },
        bindingPhoneRes: function(e) {
            if (e.Tag && e.Tag === 1) {
                Player.setPhone(e.Phone);
                MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgId),
                function() {
                    if (t) {
                        t.close()
                    }
                })
            } else if (e.MsgId) {
                MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgId))
            }
        }
    }
} ();
var SetNick = function() {
    var t = undefined,
    i = undefined,
    n = undefined,
    s = undefined;
    var e = SetNickUI.prototype;
    e.init = function() {
        this.on(Laya.Event.CLICK, this, this.clickFun)
    };
    e.clickFun = function(e) {
        if (e.target) {
            if (e.target.name == "btnSet") {
                t = this.nickInput.text;
                i = this.password.text;
                n = this._password.text;
                if (!t) {
                    MsgToast.show(GameConfig.ErrorMsg.clientErrorMsg(10010))
                } else if (Player.getChangeNameNeedPsw()) {
                    if (!i) {
                        MsgToast.show(GameConfig.ErrorMsg.clientErrorMsg(10011))
                    } else if (!n) {
                        MsgToast.show(GameConfig.ErrorMsg.clientErrorMsg(10012))
                    } else if (i != n) {
                        MsgToast.show(GameConfig.ErrorMsg.clientErrorMsg(10023))
                    } else {
                        Request.editNameReq(t, i, n)
                    }
                } else {
                    Request.editNameNoPswReq(t)
                }
                ActionReport.addLog(ActionReport.actionIndex.setNick_SET)
            } else if (e.target.name == "close") {
                ActionReport.addLog(ActionReport.actionIndex.setNick_Close)
            }
        }
    };
    e.updateUI = function() {
        if (Player.getChangeNameNeedPsw()) {
            this.password.visible = true;
            this._password.visible = true;
            this.passwordTxt.visible = true;
            this._passwordTxt.visible = true;
            this.BG.height = 420;
            this.BG.y = 0;
            this.baiBG.height = 294;
            this.baiBG.y = 21;
            this.btnSet.y = 324;
            this.setNickBox.y = 0;
            this.setNickBox.height = 420
        } else {
            this.password.visible = false;
            this._password.visible = false;
            this.passwordTxt.visible = false;
            this._passwordTxt.visible = false;
            this.BG.height = 315;
            this.baiBG.height = 193;
            this.btnSet.y = 220;
            this.setNickBox.y = 52;
            this.setNickBox.height = 315
        }
    };
    e.onOpened = function() {
        r.opened && r.opened();
        s = Player.getNick();
        if (!this.isInit) {
            this.isInit = true
        }
    };
    e.onClosed = function() {
        r.closed && r.closed();
        this.nickInput.text = "";
        this.password.text = "";
        this._password.text = "";
        t = undefined;
        i = undefined;
        n = undefined;
        s = undefined;
        Request.GetRedPointReq();
        this.destroy();
        BaseDialog.prototype.onClosed.call(this);
        a = null
    };
    e.reset = function() {
        this.close();
        a = null
    };
    var a = null;
    var r = {
        opened: null,
        closed: null,
        show: function() {
            Waiting.show();
            WinUtils.showDialog(RES.loadTaskList.setNick, SetNickUI,
            function(e) {
                a = e;
                a.updateUI();
                Waiting.hide();
                a.popup()
            })
        },
        hide: function() {
            a && a.close()
        },
        editNickRes: function(e) {
            if (e.Tag) {
                if (a) {
                    a.close()
                }
                Player.setNick(e.Name);
                Request.package.getListReq();
                PersonalCenter.updateUserInfo();
                if (s) {
                    if (Player.getChangeNameNeedPsw()) {
                        Utils.setLocalStorageFun(t, i, 0, s)
                    } else {
                        i = Utils.getPswByNick(s);
                        Utils.setLocalStorageFun(t, i, 0, s)
                    }
                }
            }
            if (e.MsgId) {
                MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgId))
            }
        }
    };
    return r
} ();
var SetAvatar = function() {
    function a(e) {
        var t = e.replace(/[^0-9]/gi, "");
        return t
    }
    function e() {
        e.super(this)
    }
    Laya.class(e, "SetAvatarFn", SetAvatarUI, "");
    var t = e.prototype;
    t.init = function() {
        var i = this;
        var n = null;
        var s = this.xiangKuang;
        s.zOrder = 99;
        var e = this.headBox.numChildren;
        for (var t = 0; t < e; t++) {
            var a = this.headBox.getChildAt(t); (function(e, t) {
                e.on(Laya.Event.CLICK, i,
                function() {
                    n = Utils.localToGlobal(e, false);
                    n = i.globalToLocal(n, true);
                    s.pos(n.x - 10, n.y - 10);
                    Request.ReviseAvatarReq(t * 1 + 1);
                    ActionReport.addLog(ActionReport.actionIndex.setHear_SET)
                })
            })(a, t)
        }
    };
    t.update = function() {
        var i = null;
        var n = this.xiangKuang;
        n.zOrder = 99;
        var e = this.headBox.numChildren;
        for (var t = 0; t < e; t++) {
            var s = this.headBox.getChildAt(t); (function(e, t) {
                if (a(Player.getAvatarUrl()) == t + 1) {
                    i = Utils.localToGlobal(e, false);
                    n.pos(i.x - 10, i.y - 10)
                }
            })(s, t)
        }
    };
    t.onOpened = function() {
        n.opened && n.opened();
        if (!this.isInit) {
            this.isInit = true;
            this.init()
        }
    };
    t.onClosed = function() {
        n.closed && n.closed();
        ActionReport.addLog(ActionReport.actionIndex.setHear_Close);
        this.destroy();
        BaseDialog.prototype.onClosed.call(this);
        i = null
    };
    t.reset = function() {
        this.close();
        i = null
    };
    var i = null;
    var n = {
        opened: null,
        closed: null,
        show: function() {
            if (!i) {
                i = new e
            }
            i.update();
            i.popup()
        },
        hide: function() {
            i.close()
        }
    };
    return n
} ();
var SeaGodGift = function() {
    var t = null,
    e = 0,
    a = [100, 200, 300, 400, 10, 500, 600, 700, 0],
    r = false,
    o = 0,
    i = null;
    function n() {
        n.super(this);
        this.giftBoxObj = {
            gift_1: this.gift_1,
            gift_2: this.gift_2,
            gift_3: this.gift_3,
            gift_4: this.gift_4,
            gift_5: this.gift_5,
            gift_6: this.gift_6,
            gift_7: this.gift_7,
            gift_8: this.gift_8,
            gift_9: this.gift_9
        }
    }
    Laya.class(n, "SeaGodGiftFun", SeaGodGiftUI, "");
    var s = n.prototype;
    s.init = function() {
        this.width = Game.UIWidth;
        this.height = Game.UIHeight;
        for (var e in this.giftBoxObj) {
            var t = this.giftBoxObj[e];
            var i = t.getChildByName("ani");
            i.play(0, true);
            var n = t.getChildByName("sbg");
            n.timer.frameLoop(1, n, this.bgLoopFun, [n]);
            t.once(Laya.Event.CLICK, this, this.clickFun)
        }
    };
    s.bgLoopFun = function(e) {
        e.rotation += 1
    };
    s.clickFun = function(e) {
        Sound.playSound(Sound.RES.btn2.url, Sound.RES.btn2.vol, false);
        if (r) {
            return false
        }
        var t = e.target,
        i = t.name,
        n = a[0];
        delete this.giftBoxObj[i];
        this.timer.once(140, this,
        function() {
            this.updateUiFun(n, t)
        });
        var s = a.splice(0, 1);
        o += s[0];
        if (n === 0) {
            r = true;
            this.gameOverFun()
        }
        if (a.length <= 1) {
            r = true;
            this.gameOverFun()
        }
        Request.GetTreasurePrizeReq()
    };
    s.gameOverFun = function() {
        this.timer.once(2e3, this,
        function() {
            var e = 0;
            for (var t in this.giftBoxObj) {
                var i = this.giftBoxObj[t],
                n = a[e];
                this.updateUiFun(n, i, true);
                e++
            }
        });
        this.timer.once(4e3, this,
        function() {
            this.close()
        })
    };
    s.updateUiFun = function(t, i) {
        var e = i.getChildByName("ani"),
        n = i.getChildByName("num");
        e.source = "UIRoot/FX/baozangkai.ani";
        e.blendMode = "lighter";
        e.play(0, false);
        Sound.playSound(Sound.RES.qihanglibao.url, Sound.RES.qihanglibao.vol, false);
        var s = i.getChildByName("ani_end");
        this.timer.frameOnce(5, this,
        function() {
            i.getChildByName("sbg").skin = "resource/seaGoldGift/guang2.png";
            if (t === 0) {
                s.source = "UIRoot/FX/baozangkazhadan.ani";
                n.visible = false;
                var e = new laya.ui.Image;
                e.skin = "resource/seaGoldGift/zi_zadan.png";
                e.anchorY = .5;
                e.anchorX = .5;
                e.bottom = 0;
                e.x = 48;
                i.addChild(e);
                s.visible = true;
                s.play(0, false);
                Sound.playSound(Sound.RES.cycle_bomb.url, Sound.RES.cycle_bomb.vol, false)
            } else {
                s.source = "UIRoot/FX/baozangkaijinbi.ani";
                n.value = t;
                n.visible = true;
                s.visible = true;
                s.play(0, true);
                Sound.playSound(Sound.RES.clown_rw_appear.url, Sound.RES.clown_rw_appear.vol, false)
            }
        })
    };
    s.onOpened = function() {
        l.openedCall && l.openedCall();
        Request.GetTreasureInfoReq()
    };
    s.onClosed = function() {
        if (i) {
            var e = {
                x: Game.UIWidth / 2,
                y: Game.UIHeight / 2
            },
            t = 1;
            if (o > 0) {
                BaoFuLa.show(o, e, t)
            }
        }
        Request.TreasureCancleReq();
        l.closedCall && l.closedCall();
        BaseDialog.prototype.onClosed.call(this);
        this.resetData()
    };
    s.resetData = function() {
        t = null;
        e = 0;
        r = false;
        a = [];
        o = 0;
        i = null
    };
    s.reset = function() {
        this.close();
        t = null;
        e = 0;
        r = false;
        a = [];
        o = 0;
        i = null
    };
    var l = {
        closedCall: null,
        openedCall: null,
        dropDomToTarget: function(o, l, h, u) {
            Resource.checkLoaded = false;
            Resource.load(RES.loadTaskList.seaGoldGift,
            function() {
                var n = new haishenDropUI,
                e = Utils.circularRandomPoint({
                    x: h,
                    y: u
                },
                1);
                n.x = e.x;
                n.y = e.y;
                n.timer.frameLoop(1, n,
                function() {
                    n.bg.rotation += 1
                });
                n.once(Laya.Event.DISPLAY, n,
                function() {
                    n.pivot(n.width / 2, n.height / 2)
                });
                n.name = "haishenyu_" + l.userId;
                o.fishBox.addChild(n);
                var t = Math.random() * 1e3 + 2500,
                i = .5;
                var s = Laya.Pool.getItemByClass("pointA", Laya.Point);
                s.x = n.x;
                s.y = n.y;
                var a = null;
                switch (l.localPos) {
                case 1:
                    a = {
                        x: l.globalPoint.x + 136,
                        y: l.globalPoint.y - 136
                    };
                    break;
                case 2:
                    a = {
                        x: l.globalPoint.x,
                        y: l.globalPoint.y + 150
                    };
                    break;
                case 3:
                    a = {
                        x: l.globalPoint.x,
                        y: l.globalPoint.y + 150
                    };
                    break;
                case 4:
                    a = {
                        x: l.globalPoint.x,
                        y: l.globalPoint.y - 150
                    };
                    break
                }
                var r = s.distance(a.x, a.y);
                Laya.Tween.to(n, {
                    x: a.x,
                    y: a.y
                },
                r / i, null, Laya.Handler.create(n,
                function() {
                    n.ani1.play(0, true);
                    if (l.isCurrPlayer) {
                        n.once(Laya.Event.MOUSE_UP, n,
                        function(e) {
                            var t = e.target.name,
                            i = t.split("_");
                            if (i[0] === "haishenyu") {
                                n.removeSelf();
                                l.stop(true);
                                SeaGodGift.show(o.zhuanPanBox);
                                SeaGodGift.closedCall = function() {
                                    if (n) {
                                        n.removeSelf()
                                    }
                                }
                            }
                        })
                    }
                }), t)
            })
        },
        removeIcon: function(e, t) {
            var i = e.fishBox.getChildByName("haishenyu_" + t);
            if (i) {
                i.removeSelf()
            }
        },
        show: function(e) {
            Resource.checkLoaded = false;
            Resource.load(RES.loadTaskList.seaGoldGift,
            function() {
                i = e;
                if (!t) {
                    t = new n;
                    t.init()
                }
                t.popup()
            })
        },
        hide: function() {
            if (t && t.visible) {
                t.close()
            }
        },
        getListRep: function(e) {
            if (e.Tag === 1) {
                a = e.Golds
            } else {
                MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgId))
            }
        }
    };
    return l
} ();
var BuyQuick = function() {
    var i = null;
    function e() {
        e.super(this)
    }
    Laya.class(e, "QuickBuyFn", BuyQuickUI, "");
    var t = e.prototype;
    t.init = function() {
        this.goods_list.renderHandler = new Laya.Handler(this, this.renderFun);
        this.goods_list.selectEnable = true
    };
    t.onSelect = function(e) {
        var t = this.goods_list.array[e];
        var i = {
            GoodsID: t.GoodsId,
            goodsName: t.GoodsName,
            price: Utils.fenToYuan(t.CostNum)
        };
        ShopMall.buyRecharge(i)
    };
    t.renderFun = function(e, t) {
        var i = e.dataSource,
        n = i.Detail.split(":");
        if (t == 0) {
            e.getChildByName("bg").visible = true;
            e.getChildByName("bg_1").visible = true
        } else {
            e.getChildByName("bg_2").visible = false;
            e.getChildByName("bg_3").visible = false
        }
        var s = GameConfig.Item.getItemInfoById(n[0]);
        e.getChildByName("icon").skin = s.skin;
        e.getChildByName("num").value = "x" + n[1];
        var a = Math.ceil(n[1] - i.CostNum / i.BasePrice);
        if (a > 0) {
            e.getChildByName("more").value = a;
            e.getChildByName("more").visible = true;
            e.getChildByName("more_1").visible = true;
            e.getChildByName("more_2").visible = true;
            e.getChildByName("more_3").visible = true
        } else {
            e.getChildByName("more").visible = false;
            e.getChildByName("more_1").visible = false;
            e.getChildByName("more_2").visible = false;
            e.getChildByName("more_3").visible = false
        }
        e.getChildByName("price").value = Utils.fenToYuan(i.CostNum);
        e.on(Laya.Event.CLICK, this, this.onSelect, [t])
    };
    t.updateUiFun = function(e) {
        var t = GameConfig.shopCity.getCfg(),
        i = [];
        if (t.length <= 0) {
            return false
        }
        for (var n = 0,
        s = t.length; n < s; n++) {
            var a = t[n];
            if (a.GroupID === parseInt(e)) {
                i.push(a)
            }
        }
        i.sort(function(e, t) {
            return t.CostNum - e.CostNum
        });
        this.goods_list.array = i;
        this.goods_list.width = i.length * 228
    };
    t.onOpened = function() {
        n.openedCall && n.openedCall()
    };
    t.onClosed = function() {
        n.closedCall && n.closedCall();
        BaseDialog.prototype.onClosed.call(this);
        i = null
    };
    t.reset = function() {
        this.close()
    };
    var n = {
        openedCall: null,
        closedCall: null,
        show: function(t) {
            if (Game.miniGameIOS()) {
                MsgToast.show("道具数量不足!");
                return
            }
            Waiting.show();
            WinUtils.showDialog(RES.loadTaskList.buyQuick, e,
            function(e) {
                i = e;
                i.updateUiFun(t);
                i.popup();
                Waiting.hide()
            })
        },
        hide: function() {
            if (i && i.visible) {
                i.close()
            }
        }
    };
    return n
} ();
var EntranceGuidance = function() {
    var i = undefined;
    function e() {
        e.super(this)
    }
    Laya.class(e, "EntranceGuidanceFn", EntranceGuidanceUI, "");
    var t = e.prototype;
    t.init = function() {};
    t.onOpened = function() {
        s.opened && s.opened()
    };
    t.onClosed = function() {
        if (i) {
            s.closed && s.closed();
            i = undefined
        }
        ActionReport.addLog(ActionReport.actionIndex.entrance_Know);
        this.destroy();
        BaseDialog.prototype.onClosed.call(this);
        n = null
    };
    t.reset = function() {
        this.close();
        this.destroy();
        n = null
    };
    var n = null;
    var s = {
        opened: null,
        closed: null,
        show: function(t) {
            if (Game.onMiniGame && !Game.onQQ()) {} else {
                if (t) {
                    s.closed && s.closed()
                }
                return
            }
            Waiting.show();
            WinUtils.showDialog(RES.loadTaskList.entranceGuidance, e,
            function(e) {
                i = t;
                n = e;
                n.popup();
                Waiting.hide()
            })
        }
    };
    return s
} ();
var FreeLottery = function() {
    var t = function(e) {
        var t = e % 60;
        var i = Math.floor(e / 60);
        if (t) {
            if (t <= 9) {
                t = "0" + t
            }
        } else {
            t = "00"
        }
        if (i <= 9) {
            i = "0" + i
        }
        return i + ":" + t
    };
    var n, s = null,
    a;
    var r = 120;
    function e() {
        e.super(this)
    }
    Laya.class(e, "FreeLottery", FreeLotteryUI, "");
    var i = e.prototype;
    i.init = function() {
        this.itemList.scrollBar.hide = true;
        this.fc_time.visible = false;
        this.fc_time.value = "00:00";
        this.gapTime = r;
        this._lastTime = 0;
        this.disLottery = false;
        var e = this;
        this.btnLottery.clickHandler = new Laya.Handler(this,
        function() {
            ActionReport.addLog(ActionReport.actionIndex.gameHall_LuckyDraw);
            if (this.disLottery) {
                return
            }
            if (Channel && Channel.showVideo) {
                Channel.showVideo(undefined, e.closeVideoCall.bind(e))
            } else {
                Waiting.show();
                if (RewardedVideoAd) {
                    RewardedVideoAd.show(undefined, e.closeVideoCall.bind(e))
                }
            }
            Laya.timer.once(2e3, this,
            function() {
                Waiting.hide()
            })
        });
        var t = GameConfig.getFreeDrawCfgList();
        var i = [];
        for (var n = 0; n < t.length; n++) {
            var s = t[n];
            if (s) {
                var a = GameConfig.Item.getItemInfoById(s.ItemId);
                i.push({
                    icon: "resource/icon/" + s.ItemId + ".png",
                    name: a.ItemName,
                    num_fc: {
                        text: s.Count
                    }
                })
            }
        }
        this.oneGroupNum = i.length;
        i = i.concat(i);
        this.itemList.repeatX = i.length;
        this.itemList.array = i
    };
    i.closeVideoCall = function(e, t) {
        Sound.stopMusic(0);
        Sound.stopSound(0);
        if (e) {
            this.showVideoCall();
            Request.GetAdDrawPrizeReq()
        } else {
            if (t) {
                MsgToast.show("今日广告抽奖次数已用完，过会再来吧");
                return true
            } else {
                MsgToast.show("观看完整广告才可抽奖哦")
            }
        }
        Waiting.hide();
        return false
    };
    i.showVideoCall = function() {
        var e = this;
        if (Player.GetADPrizeTimes() > 1) {
            e.isClearRes = false;
            e.disLottery = true
        } else {
            e.isClearRes = true;
            e.disBtn.visible = true;
            e.btnLottery.visible = false;
            e.LabelTip.visible = true;
            e.adTipLabel.visible = false;
            e.redPointTip.visible = false;
            if (a) {
                a.visible = false
            }
        }
        e.disBtn.visible = true;
        e.btnLottery.visible = false;
        e._lastTime = 0;
        e.close();
        Sound.stopMusic(1);
        Sound.stopSound(1)
    };
    i.onOpened = function() {
        if (!Player.GetADPrizeTimes()) {
            this.disBtn.visible = true;
            this.btnLottery.visible = false;
            this.LabelTip.visible = true;
            this.adTipLabel.visible = false;
            this.redPointTip.visible = false
        } else {
            this.LabelTip.visible = false;
            if (this.gapTime < r) {
                this.adTipLabel.visible = false;
                this.redPointTip.visible = false;
                this.disBtn.visible = true
            } else {
                this.adTipLabel.visible = true;
                this.redPointTip.visible = true;
                this.disBtn.visible = false
            }
        }
        this.timer.frameLoop(1, this, this.update);
        var t = this;
        if (!t.isLoad) {
            t.isLoad = true;
            Utils.getTempletByUrl("res/spine/Xingyunchoujiang/Xingyunchoujiang.sk",
            function(e) {
                if (t && t.displayedInStage) {
                    e.pos(361, 244);
                    t.addChild(e)
                }
            })
        }
        l.opened && l.opened()
    };
    i.onClosed = function() {
        ActionReport.addLog(ActionReport.actionIndex.FreeLottery_Close);
        if (!this.disLottery) {
            this.timer.clear(this, this.update)
        }
        l.closed && l.closed();
        BaseDialog.prototype.onClosed.call(this);
        if (Player.GetADPrizeTimes() <= 0) {
            this.isLoad = false;
            o = null
        }
    };
    i.reset = function() {};
    i.update = function() {
        if (this.itemList.x <= -this.oneGroupNum * 84) {
            this.itemList.x = 0
        }
        this.itemList.x -= 1;
        if (this.disLottery) {
            var e = this.timer.currTimer;
            var t = e - this._lastTime;
            if (t >= 1e3 && this.gapTime > 0) {
                if (this._lastTime > 0) {
                    var i = Math.floor(t / 1e3);
                    if (this.gapTime > i) {
                        this.gapTime -= i
                    } else {
                        this.gapTime = 0
                    }
                } else {
                    this.gapTime -= 1
                }
                this._lastTime = e;
                this.updateTime()
            }
        }
    };
    i.updateTime = function() {
        var e = t(this.gapTime);
        this.fc_time.value = e;
        this.fc_time.visible = true;
        this.LabelTip.visible = false;
        this.adTipLabel.visible = false;
        this.redPointTip.visible = false;
        if (a) {
            a.visible = false
        }
        if (s) {
            s.value = e;
            if (n) {
                n.visible = true
            }
        }
        if (this.gapTime == 0) {
            this.fc_time.visible = false;
            this.disLottery = false;
            if (n) {
                n.visible = false
            }
            if (!this.visible) {
                this.timer.clear(this, this.update)
            }
            var e = Player.GetADPrizeTimes();
            if (e) {
                this.adTipLabel.visible = true;
                this.disBtn.visible = false;
                this.gapTime = r;
                this.btnLottery.visible = true;
                this.redPointTip.visible = true;
                if (a) {
                    a.visible = true
                }
            } else {
                this.LabelTip.visible = true;
                this.disBtn.visible = true;
                this.gapTime = r;
                this.btnLottery.visible = false;
                this.redPointTip.visible = false;
                if (a) {
                    a.visible = false
                }
            }
        }
    };
    var o = null;
    var l = {
        opened: null,
        closed: null,
        init: function(e, t, i) {
            n = e;
            s = t;
            a = i
        },
        show: function() {
            Waiting.show();
            if (o) {
                o.popup();
                Waiting.hide()
            } else {
                WinUtils.showDialog(RES.loadTaskList.FreeLottery, e,
                function(e) {
                    e.isClearRes = Player.GetADPrizeTimes() <= 0;
                    o = e;
                    o.popup();
                    Waiting.hide()
                })
            }
        }
    };
    return l
} ();
var DayLoginShare = function() {
    var t = true;
    var e = new Date;
    var i = parseInt(e.getFullYear()).toString();
    var n = parseInt(e.getMonth()).toString();
    var s = parseInt(e.getDate()).toString();
    var a = i + n + s;
    function r() {
        r.super(this)
    }
    Laya.class(r, "DayLoginShareFn", DayLoginShareUI, "");
    var o = r.prototype;
    o.init = function() {
        this.on(Laya.Event.CLICK, this,
        function(e) {
            var t = e.target.name;
            if (t == "close") {
                this.close()
            } else if (t == "btnShare") {
                this.close();
                Activity.show()
            }
        });
        this.fenXiang1.ani1.play(0, true)
    };
    o.onOpened = function() {
        h.opened && h.opened()
    };
    o.onClosed = function() {
        h.closed && h.closed();
        BaseDialog.prototype.onClosed.call(this);
        l = null
    };
    o.reset = function() {
        this.close()
    };
    o.hide = function() {
        this.close()
    };
    var l = null;
    var h = {
        opened: null,
        closed: null,
        show: function() {
            Waiting.show();
            WinUtils.showDialog(RES.loadTaskList.dayLoginShare, r,
            function(e) {
                l = e;
                Waiting.hide();
                l.popup()
            })
        },
        hide: function() {
            if (l) {
                l.hide()
            }
        },
        isShowDayLoginShare: function() {
            var e = myStorage.getItemWithUserId("dayLoginShare");
            t = e.shaerDay === a ? false: true;
            myStorage.setItemWithUserId("dayLoginShare", {
                shaerDay: a
            });
            return t
        }
    };
    return h
} ();
var InvitationWX = function() {
    var f = false;
    function e() {
        e.super(this)
    }
    Laya.class(e, "InvitationWXFn", InvitationWXUI, "");
    var t = e.prototype;
    t.init = function() {
        this.prizeLsit.scrollBar.hide = true;
        this.prizeLsit.renderHandler = new Laya.Handler(this, this.renderList)
    };
    t.upDateList = function(e) {
        this.inviteNum.text = e.InviteTime;
        var t = e.TaskInfo;
        var i = GameConfig.task.taskWechatCfg();
        if (e.TotalItemList) {
            var n = e.TotalItemList.split("|");
            for (var s = 0; s < n.length; s++) {
                var a = n[s].split(":");
                if (a[0] == 1) {
                    this.goldNum.value = a[1]
                } else if (a[0] == 102) {
                    this.suoDingNum.value = a[1]
                } else if (a[0] == 103) {
                    this.kuangPaoNum.value = a[1]
                } else if (a[0] == 2) {
                    this.jiangQuanNum.value = a[1]
                }
            }
        }
        var r = [],
        o = {};
        for (var s = 0; s < i.length; s++) {
            for (var l = 0; l < Math.ceil(t.length); l++) {
                if (t[l].TaskId == i[s].NeedNum) {
                    if (t[l].TaskInfo == 0 && e.InviteTime >= i[s].NeedNum) {
                        t[l].TaskInfo = -1
                    }
                    if (t[l].TaskInfo == -1) {
                        f = true
                    }
                    var h = i[s].PrizeItem.split("|");
                    o = {};
                    o["btnShare"] = {
                        visible: t[l].TaskInfo == 0 ? true: false
                    };
                    o["btnGet"] = {
                        visible: t[l].TaskInfo == -1 ? true: false
                    };
                    o["alreadyReceived"] = {
                        visible: t[l].TaskInfo == 1 ? true: false
                    };
                    o["taskId"] = t[l].TaskId;
                    o["taskInfo"] = t[l].TaskInfo;
                    o["invitesNum"] = {
                        text: "成功邀请 " + i[s].NeedNum + " 人"
                    };
                    for (var u = 0; u < h.length; u++) {
                        var a = h[u].split(":");
                        var c = GameConfig.Item.getItemInfoById(a[0]);
                        o["kuang_" + u] = Utils.getItemIconBgSkin(c.FrameLevel);
                        o["num_" + u] = {
                            value: a[1],
                            zOrder: 9
                        };
                        o["icon_" + u] = c.skin
                    }
                    r.push(o)
                }
            }
        }
        r.sort(function(e, t) {
            if (e.taskInfo == t.taskInfo) {
                return e.taskId - t.taskId
            }
            return e.taskInfo - t.taskInfo
        });
        this.prizeLsit.array = r;
        d.updateIsShowRedMark()
    };
    t.renderList = function(e, t) {
        var i = e.dataSource;
        var n = i.taskId;
        var s = e.getChildByName("btnShare");
        var a = e.getChildByName("btnGet");
        s.clickHandler = new Laya.Handler(this,
        function() {
            ActionReport.addLog(ActionReport.actionIndex.getReward_ShareWX);
            if (Channel && Channel.forward) {
                Channel.forward("invitationWei")
            }
            this.close()
        });
        a.clickHandler = new Laya.Handler(this,
        function() {
            ActionReport.addLog(ActionReport.actionIndex.getReward_GetWX);
            Request.getWechatInvitePrizeReq(n * 1)
        })
    };
    t.onOpened = function() {
        d.opened && d.opened();
        if (!this.isInit) {
            this.isInit = true
        }
    };
    t.onClosed = function() {
        d.closed && d.closed();
        Request.GetRedPointReq();
        BaseDialog.prototype.onClosed.call(this);
        i = null
    };
    t.reset = function() {
        this.close();
        i = null
    };
    var i = null;
    var d = {
        opened: null,
        closed: null,
        show: function() {
            Waiting.show();
            WinUtils.showDialog(RES.loadTaskList.invitation, e,
            function(e) {
                i = e;
                Request.getWechatInviteInformationReq("invitation");
                i.popup();
                Waiting.hide()
            })
        },
        upDateList: function(e) {
            i && i.upDateList(e)
        },
        updateIsShowRedMark: function() {
            GameCenter.isShowRedMark(Game.redPoint.invitation, f)
        }
    };
    return d
} ();
var SmallGoldPig = function() {
    var a = null,
    i = null;
    var r = 0;
    function e() {
        e.super(this)
    }
    Laya.class(e, "SmallGoldPigFn", SmallGoldPigUI, "");
    var t = e.prototype;
    t.init = function() {
        this.itemNum.zOrder = 9;
        if (Game.showShare()) {
            this.btnShare.visible = true;
            this.imgTitle.skin = "resource/smallGoldPig/biaoti_fenxianghaoyou.png"
        } else {
            this.btnShare.visible = false;
            this.imgTitle.skin = "resource/smallGoldPig/biaoti_fenxianghaoyou2.png"
        }
        this.btnShare.selected = false;
        this.imgtwo.visible = false;
        this.on(Laya.Event.CLICK, this,
        function(e) {
            var t = e.target.name;
            if (t == "close") {
                this.close();
                ActionReport.addLog(ActionReport.actionIndex.SmallGoldPig_Close)
            } else if (t == "btnShare") {
                this.btnShare.selected = !this.btnShare.selected;
                this.imgtwo.visible = this.btnShare.selected
            } else if (t === "btnreceive") {
                if (this.btnShare.selected) {
                    if (Channel && Channel.forward) {
                        if (Game.onMiniGame) {
                            Channel.forward("goldPig",
                            function() {
                                Request.getPigSharePrizeReq(2)
                            })
                        } else {
                            Channel.forward("goldPig");
                            this.timer.once(100, this,
                            function() {
                                Request.getPigSharePrizeReq(2)
                            })
                        }
                        ActionReport.addLog(ActionReport.actionIndex.SmallGoldPig_Share)
                    }
                } else {
                    Request.getPigSharePrizeReq(1);
                    ActionReport.addLog(ActionReport.actionIndex.SmallGoldPig_Receive)
                }
                this.close()
            }
        })
    };
    t.updateItem = function(e) {
        if (!e.ShareTimes) {
            this.btnShare.disabled = true
        } else {
            this.btnShare.disabled = false;
            this.btnShare.selected = false;
            this.imgtwo.visible = false
        }
        var t = e.Item.split(":");
        var i = GameConfig.Item.getItemInfoById(t[0]);
        this.itemIcon.skin = i.skin;
        this.itemNum.value = t[1];
        this.itemKuang.skin = Utils.getItemIconBgSkin(i.FrameLevel)
    };
    t.onOpened = function() {
        c.opened && c.opened()
    };
    t.onClosed = function() {
        c.closed && c.closed();
        BaseDialog.prototype.onClosed.call(this);
        l = null
    };
    t.reset = function() {
        this.close();
        l = null
    };
    var n = function() {
        if (a && a.visible && a.displayedInStage) {
            Laya.Tween.to(i, {
                scaleX: 1 - i.scaleX,
                scaleY: 1 - i.scaleY
            },
            200);
            Laya.timer.once(3e3, null, n)
        }
    };
    var o = function() {
        if (a) {
            a.visible = true;
            var e = Laya.TimeLine.to(a, {
                x: 680
            },
            4e3);
            e.play(0, false);
            a.timer.once(4e3, this,
            function() {
                if (a.displayedInStage) {
                    i.visible = true;
                    i.scale(0, 0);
                    n()
                }
            })
        }
    };
    var s = function() {
        if (a) {
            a.visible = false;
            a.x = 1250
        }
        if (i) {
            i.visible = false
        }
    };
    var l = null;
    var h = false;
    var u = false;
    var c = {
        opened: null,
        closed: null,
        init: function(e, t) {
            a = e;
            i = t
        },
        showGoldPigIcon: function() {
            if (Game.onBaiDuGame) {
                return
            }
            if (Game.miniGameIOS() || Game.state.get() == Game.sceneConfig.sceneID.scene_Dragon_DaoDan || Game.channel.cfg.cps == Game.ChannelConstants.uygur) {
                return
            }
            if (FishScene.isMatchScene() && !FishScene.isSuperMatchScene() || FishScene.isDTScene()) {
                return
            }
            if (a && a.visible) {
                if (Game.debug) {
                    console.log("显示中...")
                }
                return
            }
            var e = new Date;
            var t = e.getFullYear() + e.getMonth() + e.getDate();
            if (Laya.LocalStorage.getItem(Player.getUserId() + myStorage.StorageStaticCode.Storage_FirstCatchGoldFish + t) != "true" && !Player.getFirstGiftOneSG() && !Game.miniGameIOS() && Player.getFirstGiftOne()) {
                Laya.LocalStorage.setItem(Player.getUserId() + myStorage.StorageStaticCode.Storage_FirstCatchGoldFish + t, "true");
                h = true;
                o();
                return
            }
            if (Laya.LocalStorage.getItem(Player.getUserId() + myStorage.StorageStaticCode.Storage_FIRSTFishSceneShowYaoYiYao + t) != "true" && Player.IsCanShowShark()) {
                Laya.LocalStorage.setItem(Player.getUserId() + myStorage.StorageStaticCode.Storage_FIRSTFishSceneShowYaoYiYao + t, "true");
                u = true;
                o();
                return
            }
            var i = Player.getPigShareTimes();
            var n = FishScene.getSceneTimer();
            if (n && n.currTimer) {
                var s = n.currTimer;
                if (i > 0 && s - r >= 2 * 60 * 1e3) {
                    r = s;
                    o()
                }
            }
        },
        show: function() {
            if (Game.onBaiDuGame) {
                return
            }
            if (Game.miniGameIOS() || Game.state.get() == Game.sceneConfig.sceneID.scene_Dragon_DaoDan || Game.channel.cfg.cps == Game.ChannelConstants.uygur) {
                return
            }
            if (FishScene.isMatchScene() && !FishScene.isSuperMatchScene() || FishScene.isDTScene()) {
                return
            }
            if (h) {
                h = false;
                FirstBuyToOneNew.show(null, true);
                s();
                return
            }
            if (u) {
                u = false;
                LuckyShake.show(true);
                s();
                return
            }
            Resource.checkLoaded = false;
            Resource.load(RES.loadTaskList.smallGoldPig,
            function() {
                if (!l) {
                    l = new e;
                    l.init()
                }
                Request.getPigShareCfgReq();
                s()
            })
        },
        updateItem: function(e) {
            if (l) {
                l.updateItem(e);
                l.popup()
            }
        }
    };
    return c
} ();
var LoginGift = function() {
    var t = Laya.Handler;
    var s = null;
    var w = null,
    x = [],
    R = [];
    var L = undefined,
    T = undefined;
    var v = ["一", "二", "三", "四", "五", "六", "日"];
    function i() {
        i.super(this)
    }
    Laya.class(i, "LoginGiftFun", loginGiftUI, "");
    var e = i.prototype;
    e.init = function() {
        var e = this;
        this.goodsId = 0;
        this.Sign_list.disScrollBar();
        this.accumulative_list.disScrollBar();
        this.weekTodayData = null;
        this.signCfg = {};
        this.receive_btn.clickHandler = new t(this,
        function() {
            if (this.receive_btn.dbClick) {
                return
            }
            this.receive_btn.dbClick = true;
            if (this.weekTodayData) {
                if (this.weekTodayData.State) {
                    MsgToast.show(GameConfig.ErrorMsg.clientErrorMsg(10057));
                    this.receive_btn.dbClick = false
                } else {
                    e.dayReceiveFun();
                    this.timer.once(1e3, this,
                    function() {
                        this.receive_btn.dbClick = false
                    })
                }
            }
        });
        this.btndingyue.visible = false;
        this.btndingyue.on(Laya.Event.CLICK, this,
        function(e) {
            if (DingYue.CanDingYue()) DingYue.show();
            else MsgToast.show("您已经订阅过")
        })
    };
    e.bgLoopFun = function(e) {
        e.rotation += 1
    };
    e.dayReceiveFun = function(e, t) {
        var e = this.weekTodayData.id;
        Request.GetSignPrizeReq(e, 1)
    };
    e.getDefaultData = function(e) {
        var t = e.Items;
        L = e.TotalDay;
        T = e.Week;
        var i = GameConfig.task.loginGiftCfg();
        if (!i) {
            return false
        }
        w = i;
        var n = [],
        s = [];
        x = [];
        R = [];
        this.signCfg = {};
        for (var a = 0,
        r = w.length; a < r; a++) {
            var o = w[a];
            if (o) {
                this.signCfg[o.Id] = o
            }
            for (var l = 0,
            h = t.length; l < h; l++) {
                var u = t[l];
                if (o.Id === u.Id) {
                    o.State = u.State;
                    if (o.PrizeType === 1) {
                        s.push(o)
                    } else if (o.PrizeType === 2) {
                        n.push(o)
                    }
                    break
                }
            }
        }
        for (var c = 0,
        f = n.length; c < f; c++) {
            var d = n[c],
            g = {};
            g.Id = d.Id;
            g.total_day = {
                text: d.NeedCondition + "天"
            };
            g.NeedCondition = d.NeedCondition;
            if (d.State === 0) {
                g.has_receive = {
                    visible: false
                }
            } else {
                g.has_receive = {
                    visible: true
                }
            }
            g.PrizeItem = d.PrizeItem;
            var p = d.PrizeItem.split(":"),
            _ = "resource/icon/" + d.IcoinId + ".png";
            g.gift_icon = {
                skin: _
            };
            switch (parseInt(p[0])) {
            case 1:
                g.gift_num = {
                    text: p[1] + "金币"
                };
                break;
            default:
                g.gift_num = {
                    text: p[1] + "个"
                };
                break
            }
            x.push(g)
        }
        for (var m = 0,
        v = s.length; m < v; m++) {
            var y = s[m],
            I = {};
            I.Id = y.Id;
            var S = y.PrizeItem.split(":"),
            C = "resource/icon/" + S[0] + ".png";
            I.gift = {
                skin: C
            };
            I.PrizeItem = y.PrizeItem;
            switch (m) {
            case 0:
                I.date = {
                    text: "星期一"
                };
                break;
            case 1:
                I.date = {
                    text: "星期二"
                };
                break;
            case 2:
                I.date = {
                    text: "星期三"
                };
                break;
            case 3:
                I.date = {
                    text: "星期四"
                };
                break;
            case 4:
                I.date = {
                    text: "星期五"
                };
                break;
            case 5:
                I.date = {
                    text: "星期六"
                };
                break;
            case 6:
                I.date = {
                    text: "星期日"
                };
                break
            }
            if (y.State === 0) {
                I.isReceive = {
                    visible: false
                }
            } else {
                I.isReceive = {
                    visible: true
                }
            }
            I.State = y.State;
            I.num = {
                text: "x" + S[1]
            };
            R.push(I)
        }
        this.accumulative_list.array = x;
        this.Sign_list.array = R;
        this.Sign_list.selectedIndex = T - 1;
        var b = this.Sign_list.selectedItem;
        if (b.State) {
            this.hasLogin.visible = true;
            this.receive_btn.visible = false
        } else {
            this.hasLogin.visible = false;
            this.receive_btn.visible = true
        }
        this.updateProcess()
    };
    e.updateProcess = function() {
        var e = this.progress_1,
        t = this.progress_2,
        i = this.progress_3;
        switch (L) {
        case 2:
            e.getChildByName("p_1").skin = "resource/loginGift/img_jindu2.png";
            e.getChildByName("p_2").skin = "resource/loginGift/img_jindu2.png";
            e.getChildByName("p_3").skin = "resource/loginGift/img_jindu1.png";
            e.getChildByName("p_4").skin = "resource/loginGift/img_jindu1.png";
            t.getChildByName("p_1").skin = "resource/loginGift/img_jindu1.png";
            t.getChildByName("p_2").skin = "resource/loginGift/img_jindu1.png";
            t.getChildByName("p_3").skin = "resource/loginGift/img_jindu1.png";
            t.getChildByName("p_4").skin = "resource/loginGift/img_jindu1.png";
            i.getChildByName("p_1").skin = "resource/loginGift/img_jindu1.png";
            i.getChildByName("p_2").skin = "resource/loginGift/img_jindu1.png";
            i.getChildByName("p_3").skin = "resource/loginGift/img_jindu1.png";
            i.getChildByName("p_4").skin = "resource/loginGift/img_jindu1.png";
            break;
        case 3:
            e.getChildByName("p_1").skin = "resource/loginGift/img_jindu2.png";
            e.getChildByName("p_2").skin = "resource/loginGift/img_jindu2.png";
            e.getChildByName("p_3").skin = "resource/loginGift/img_jindu2.png";
            e.getChildByName("p_4").skin = "resource/loginGift/img_jindu2.png";
            t.getChildByName("p_1").skin = "resource/loginGift/img_jindu1.png";
            t.getChildByName("p_2").skin = "resource/loginGift/img_jindu1.png";
            t.getChildByName("p_3").skin = "resource/loginGift/img_jindu1.png";
            t.getChildByName("p_4").skin = "resource/loginGift/img_jindu1.png";
            i.getChildByName("p_1").skin = "resource/loginGift/img_jindu1.png";
            i.getChildByName("p_2").skin = "resource/loginGift/img_jindu1.png";
            i.getChildByName("p_3").skin = "resource/loginGift/img_jindu1.png";
            i.getChildByName("p_4").skin = "resource/loginGift/img_jindu1.png";
            break;
        case 4:
            e.getChildByName("p_1").skin = "resource/loginGift/img_jindu2.png";
            e.getChildByName("p_2").skin = "resource/loginGift/img_jindu2.png";
            e.getChildByName("p_3").skin = "resource/loginGift/img_jindu2.png";
            e.getChildByName("p_4").skin = "resource/loginGift/img_jindu2.png";
            t.getChildByName("p_1").skin = "resource/loginGift/img_jindu2.png";
            t.getChildByName("p_2").skin = "resource/loginGift/img_jindu2.png";
            t.getChildByName("p_3").skin = "resource/loginGift/img_jindu1.png";
            t.getChildByName("p_4").skin = "resource/loginGift/img_jindu1.png";
            i.getChildByName("p_1").skin = "resource/loginGift/img_jindu1.png";
            i.getChildByName("p_2").skin = "resource/loginGift/img_jindu1.png";
            i.getChildByName("p_3").skin = "resource/loginGift/img_jindu1.png";
            i.getChildByName("p_4").skin = "resource/loginGift/img_jindu1.png";
            break;
        case 5:
            e.getChildByName("p_1").skin = "resource/loginGift/img_jindu2.png";
            e.getChildByName("p_2").skin = "resource/loginGift/img_jindu2.png";
            e.getChildByName("p_3").skin = "resource/loginGift/img_jindu2.png";
            e.getChildByName("p_4").skin = "resource/loginGift/img_jindu2.png";
            t.getChildByName("p_1").skin = "resource/loginGift/img_jindu2.png";
            t.getChildByName("p_2").skin = "resource/loginGift/img_jindu2.png";
            t.getChildByName("p_3").skin = "resource/loginGift/img_jindu2.png";
            t.getChildByName("p_4").skin = "resource/loginGift/img_jindu2.png";
            i.getChildByName("p_1").skin = "resource/loginGift/img_jindu1.png";
            i.getChildByName("p_2").skin = "resource/loginGift/img_jindu1.png";
            i.getChildByName("p_3").skin = "resource/loginGift/img_jindu1.png";
            i.getChildByName("p_4").skin = "resource/loginGift/img_jindu1.png";
            break;
        case 6:
            e.getChildByName("p_1").skin = "resource/loginGift/img_jindu2.png";
            e.getChildByName("p_2").skin = "resource/loginGift/img_jindu2.png";
            e.getChildByName("p_3").skin = "resource/loginGift/img_jindu2.png";
            e.getChildByName("p_4").skin = "resource/loginGift/img_jindu2.png";
            t.getChildByName("p_1").skin = "resource/loginGift/img_jindu2.png";
            t.getChildByName("p_2").skin = "resource/loginGift/img_jindu2.png";
            t.getChildByName("p_3").skin = "resource/loginGift/img_jindu2.png";
            t.getChildByName("p_4").skin = "resource/loginGift/img_jindu2.png";
            i.getChildByName("p_1").skin = "resource/loginGift/img_jindu2.png";
            i.getChildByName("p_2").skin = "resource/loginGift/img_jindu2.png";
            i.getChildByName("p_3").skin = "resource/loginGift/img_jindu1.png";
            i.getChildByName("p_4").skin = "resource/loginGift/img_jindu1.png";
            break;
        case 7:
            e.getChildByName("p_1").skin = "resource/loginGift/img_jindu2.png";
            e.getChildByName("p_2").skin = "resource/loginGift/img_jindu2.png";
            e.getChildByName("p_3").skin = "resource/loginGift/img_jindu2.png";
            e.getChildByName("p_4").skin = "resource/loginGift/img_jindu2.png";
            t.getChildByName("p_1").skin = "resource/loginGift/img_jindu2.png";
            t.getChildByName("p_2").skin = "resource/loginGift/img_jindu2.png";
            t.getChildByName("p_3").skin = "resource/loginGift/img_jindu2.png";
            t.getChildByName("p_4").skin = "resource/loginGift/img_jindu2.png";
            i.getChildByName("p_1").skin = "resource/loginGift/img_jindu2.png";
            i.getChildByName("p_2").skin = "resource/loginGift/img_jindu2.png";
            i.getChildByName("p_3").skin = "resource/loginGift/img_jindu2.png";
            i.getChildByName("p_4").skin = "resource/loginGift/img_jindu2.png";
            break;
        default:
            e.getChildByName("p_1").skin = "resource/loginGift/img_jindu1.png";
            e.getChildByName("p_2").skin = "resource/loginGift/img_jindu1.png";
            e.getChildByName("p_3").skin = "resource/loginGift/img_jindu1.png";
            e.getChildByName("p_4").skin = "resource/loginGift/img_jindu1.png";
            t.getChildByName("p_1").skin = "resource/loginGift/img_jindu1.png";
            t.getChildByName("p_2").skin = "resource/loginGift/img_jindu1.png";
            t.getChildByName("p_3").skin = "resource/loginGift/img_jindu1.png";
            t.getChildByName("p_4").skin = "resource/loginGift/img_jindu1.png";
            i.getChildByName("p_1").skin = "resource/loginGift/img_jindu1.png";
            i.getChildByName("p_2").skin = "resource/loginGift/img_jindu1.png";
            i.getChildByName("p_3").skin = "resource/loginGift/img_jindu1.png";
            i.getChildByName("p_4").skin = "resource/loginGift/img_jindu1.png";
            break
        }
    };
    e.onClosed = function() {
        BaseDialog.prototype.onClosed.call(this);
        this.reset()
    };
    e.reset = function() {
        s = null;
        L = undefined;
        T = undefined
    };
    e.updateSign = function(e) {
        var t = e.Items;
        L = e.TotalDay;
        var i = e.Week;
        var n = GameConfig.task.loginGiftCfg();
        console.log(e);
        console.log(n);
        if (!n) {
            return false
        }
        var s = [],
        a = [],
        r = 0,
        o = null;
        for (var l = 0,
        h = n.length; l < h; l++) {
            var u = n[l];
            for (var c = 0,
            f = t.length; c < f; c++) {
                var d = t[c];
                if (u.Id === d.Id) {
                    u.State = d.State;
                    var g = u.PrizeItem;
                    var p = g.split(":");
                    if (g) {
                        if (u.PrizeType === 1) {
                            s.push({
                                id: u.Id,
                                state: u.State,
                                bg: "resource/loginGift/img_jiangli" + (r == 0 ? "1.png": r == 6 ? "3.png": "2.png"),
                                icon: "resource/loginGift/" + p[0] + ".png",
                                maskA: {
                                    visible: r < i - 1 || u.State ? true: false,
                                    skin: "resource/loginGift/img_zhezhao" + (r == 0 ? "1.png": r == 6 ? "3.png": "2.png")
                                },
                                mark: {
                                    visible: u.State ? true: false
                                },
                                week: "星期" + v[r],
                                num: "x" + p[1],
                                prizeItem: u.PrizeItem
                            });
                            r++
                        } else if (u.PrizeType === 2) {
                            var _ = {
                                id: u.Id,
                                icon: "resource/loginGift/" + p[0] + ".png",
                                fc_num: {
                                    value: "x" + p[1]
                                },
                                day: u.NeedCondition + "天",
                                prizeItem: u.PrizeItem
                            };
                            a.push(_);
                            if (L == u.NeedCondition && !u.State) {
                                o = _
                            }
                        }
                    }
                    break
                }
            }
        }
        this.Sign_list.array = s;
        this.accumulative_list.array = a;
        var m = s[i - 1];
        this.weekTodayData = m;
        this.receive_btn.visible = m.state ? false: true;
        Laya.Tween.to(this.giftProgress, {
            width: L / 7 * 540 + 90
        },
        60 * L);
        if (o) {
            this.weekTodayData = o;
            this.timer.once(2e3, this, this.dayReceiveFun)
        } else if (m.state) {}
    };
    return {
        show: function(e) {
            WinUtils.showDialog(RES.loadTaskList.loginGift, i,
            function(e) {
                Request.GetSignDataReq();
                s = e;
                s.popup();
                Waiting.hide()
            });
            ActionEventReport.report(ActionEventReport.actionIndex.ID1060, {
                t: e ? 0 : 1
            })
        },
        hide: function() {
            if (s) {
                s.close()
            }
        },
        GetSignDataRep: function(e) {
            if (e && s) {
                s.updateSign(e)
            }
        },
        GetSignPrizeRep: function(e) {
            if (e.Tag) {
                if (s) {
                    var t = [{
                        ItemId: e.ItemId,
                        ItemNum: e.ItemNum
                    }];
                    if (e.PrizeId) {
                        var i = s.signCfg[e.PrizeId];
                        if (i && i.PrizeItem && i.PrizeItem.indexOf(":") > 0) {
                            var n = i.PrizeItem.split(":");
                            t.push({
                                ItemId: n[0],
                                ItemNum: n[1]
                            })
                        }
                    }
                    GetReward.show("恭喜您获得", t, false, undefined,
                    function() {
                        DingYue.show()
                    })
                }
                Request.GetSignDataReq();
                Request.GetRedPointReq()
            } else {
                MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgId))
            }
        },
        loginSignShare: function() {
            if (s && s.goodsId) {
                Request.GetSignPrizeReq(s.goodsId, 2)
            }
        },
        getTomorrowGift: function() {
            var e = "";
            var t = GameConfig.task.loginGiftCfg();
            var i = new Date;
            var n = (i.getDay() || 7) - 1;
            if (t && n >= 0 && n < t.length) {
                var s = t[n];
                e = s.PrizeItem
            }
            return e
        }
    }
} ();
var CannonSkins = function() {
    var t = null;
    function i() {
        i.super(this)
    }
    Laya.class(i, "CannonSkinsFun", CannonSkinsUI, "");
    var e = i.prototype;
    e.init = function() {
        this.allData = [];
        this.activeData = [];
        this.vipData = [];
        this.currentChoice = null;
        this.currentListId = 1;
        this.activeDataCount = 0;
        this.wingListData = [];
        this.btnMenu = {
            currIndex: 0,
            obj: [this.btnSkin, this.btnWing],
            data: [["resource/cannonSkins/zi_pifu_nor.png", "resource/cannonSkins/zi_pifu_sel.png"], ["resource/cannonSkins/zi_shipin_nor.png", "resource/cannonSkins/zi_shipin_sel.png"]],
            posX: [112, 122],
            size: [[85, 57], [104, 66]]
        };
        this.on(Laya.Event.CLICK, this,
        function(e) {
            var t = e.target.name;
            switch (t) {
            case "all":
                if (this.currentListId !== 1) {
                    this.switchListFun(1)
                }
                break;
            case "active":
                if (this.currentListId !== 2) {
                    this.switchListFun(2)
                }
                break;
            case "vip":
                if (this.currentListId !== 3) {
                    this.switchListFun(3)
                }
                break;
            case "get_skin":
                this.close();
                VipInfo.show();
                break;
            case "equip":
                this.equipSkin();
                break;
            case "btnGetWing":
                this.close();
                Activity.show();
                break;
            case "btnUseWing":
                this.useWingReq();
                break;
            case "btnSkin":
                this.changeView(0);
                break;
            case "btnWing":
                this.changeView(1);
                break
            }
        });
        this.listArg.scrollBar.hide = true;
        this.listArg.selectHandler = new Laya.Handler(this, this.selectHandlerFun);
        this.listArg.renderHandler = new Laya.Handler(this, this.renderHandler);
        this.net.on(Laya.Event.COMPLETE, this,
        function() {
            this.net.visible = false;
            this.timer.once(450, this, this.netCall)
        });
        if (Game.state.get() > Game.sceneConfig.sceneID.gameCenter) {
            this.btnGetWing.visible = false
        }
    };
    e.netCall = function() {
        if (this.net.displayedInStage && this.net.aniName) {
            this.net.visible = true;
            this.net.play(0, false, this.net.aniName)
        }
    };
    e.updateMenu = function(e) {
        if (e < this.btnMenu.obj.length) {
            var t = this.btnMenu.obj[this.btnMenu.currIndex],
            i = t.getChildAt(0);
            t.skin = "resource/common/btn_fenlei_sel.png";
            i.skin = this.btnMenu.data[this.btnMenu.currIndex][0];
            t.x = this.btnMenu.posX[0];
            var n = this.btnMenu.size[0];
            t.size(n[0], n[1]);
            var s = this.btnMenu.obj[e],
            a = s.getChildAt(0);
            s.skin = "resource/common/btn_fenlei_nor.png";
            a.skin = this.btnMenu.data[e][1];
            s.x = this.btnMenu.posX[1];
            var r = this.btnMenu.size[1];
            s.size(r[0], r[1]);
            this.btnMenu.currIndex = e
        }
    };
    e.changeView = function(e) {
        if (this.btnMenu.currIndex == e) {
            return
        }
        this.updateMenu(e);
        if (e == 0) {
            this.wingCntBox.visible = false;
            this.skinBox.visible = true;
            this.listArg.array = this.allData
        } else if (e == 1) {
            this.skinBox.visible = false;
            this.wingCntBox.visible = true;
            this.listArg.array = this.wingListData
        }
        this.listArg.selectedIndex = 0;
        this.selectHandlerFun()
    };
    e.renderHandler = function(e) {
        var t = e.dataSource;
        e.getChildByName("hasGet").visible = t.hasGet ? true: false
    };
    e.equipSkin = function() {
        if (this.currentChoice) {
            var e = this.currentChoice.dataSource;
            if (e && e.Id) {
                Request.UseCannonReq(e.Id)
            }
        }
    };
    e.selectHandlerFun = function(e) {
        var t = this.listArg,
        i = t.selectedItem;
        if (!i || !i.Id) {
            return false
        }
        if (this.currentChoice) {
            this.currentChoice.getChildByName("choice").visible = false
        }
        this.currentChoice = t.selection;
        if (this.currentChoice) {
            this.currentChoice.getChildByName("choice").visible = true
        }
        if (this.btnMenu.currIndex) {
            this.updateWingInfo()
        } else { (function(e, t) {
                Cannon.createFramesById(t.Id,
                function() {
                    e.updateRightUI(t.rightData)
                })
            })(this, i)
        }
    };
    e.updateRightUI = function(e) {
        this.cannon_skin.skin = e.skin;
        this.skin_name.text = e.ItemName;
        this.bullet_skin.skin = "resource/skins/" + e.Id + "/bullet.png";
        this.net.aniName = "net_" + e.Id;
        this.net.play(0, false, this.net.aniName);
        if (!e.has) {
            this.has_time.visible = false;
            this.has_none.visible = true;
            this.txt_condition.text = e.GetDesc;
            if (Game.miniGameIOS()) {
                this.btnGet_skin.visible = false
            }
        } else if (e.has && e.IsUse >= 0) {
            this.has_time.visible = true;
            this.has_none.visible = false;
            this.hasEquip.visible = e.IsUse ? true: false;
            this.btnEquip.visible = e.IsUse ? false: true;
            this.lab_des.text = e.Description;
            this.lab_left_time.text = e.ExpiryTime > -1 ? this.getLeftTime(e.ExpiryTime) : "永久";
            this.lab_left_time.color = e.ExpiryTime > -1 ? "#ffffff": "#fbef32"
        }
    };
    e.switchListFun = function(e) {
        this.currentListId = e;
        var t = this.all,
        i = this.active,
        n = this.vip;
        switch (e) {
        case 1:
            t.skin = "resource/cannonSkins/btn_fenlei1_1.png";
            t.getChildByName("le").skin = "resource/cannonSkins/zi_quanbu.png";
            t.height = 45;
            t.y = 184;
            i.skin = "resource/cannonSkins/btn_fenlei1.png";
            i.getChildByName("le").skin = "resource/cannonSkins/zi_huodong.png";
            i.height = 40;
            i.y = 188;
            n.skin = "resource/cannonSkins/btn_fenlei1.png";
            n.getChildByName("le").skin = "resource/cannonSkins/zi_guizu.png";
            n.height = 40;
            n.y = 188;
            this.listArg.array = this.allData;
            this.listArg.repeatY = this.allData.length;
            this.listArg.selectedIndex = 0;
            break;
        case 2:
            t.skin = "resource/cannonSkins/btn_fenlei1.png";
            t.getChildByName("le").skin = "resource/cannonSkins/zi_quanbu2.png";
            t.height = 40;
            t.y = 188;
            i.skin = "resource/cannonSkins/btn_fenlei1_1.png";
            i.getChildByName("le").skin = "resource/cannonSkins/zi_huodong2.png";
            i.height = 45;
            i.y = 184;
            n.skin = "resource/cannonSkins/btn_fenlei1.png";
            n.getChildByName("le").skin = "resource/cannonSkins/zi_guizu.png";
            n.height = 40;
            n.y = 188;
            this.listArg.array = this.activeData;
            this.listArg.repeatY = this.activeData.length;
            this.listArg.selectedIndex = 0;
            break;
        case 3:
            t.skin = "resource/cannonSkins/btn_fenlei1.png";
            t.getChildByName("le").skin = "resource/cannonSkins/zi_quanbu2.png";
            t.height = 40;
            t.y = 188;
            i.skin = "resource/cannonSkins/btn_fenlei1.png";
            i.getChildByName("le").skin = "resource/cannonSkins/zi_huodong.png";
            i.height = 40;
            i.y = 188;
            n.skin = "resource/cannonSkins/btn_fenlei1_1.png";
            n.getChildByName("le").skin = "resource/cannonSkins/zi_guizu2.png";
            n.height = 45;
            n.y = 184;
            this.listArg.array = this.vipData;
            this.listArg.repeatY = this.vipData.length;
            this.listArg.selectedIndex = 0;
            break;
        default:
            t.skin = "resource/cannonSkins/btn_fenlei1_1.png";
            t.getChildByName("le").skin = "resource/cannonSkins/zi_quanbu.png";
            t.height = 45;
            t.y = 184;
            i.skin = "resource/cannonSkins/btn_fenlei1.png";
            i.getChildByName("le").skin = "resource/cannonSkins/zi_huodong.png";
            i.height = 40;
            i.y = 188;
            n.skin = "resource/cannonSkins/btn_fenlei1.png";
            n.getChildByName("le").skin = "resource/cannonSkins/zi_guizu.png";
            n.height = 40;
            n.y = 188;
            this.listArg.array = this.allData;
            this.listArg.repeatY = this.allData.length;
            this.listArg.selectedIndex = 0;
            break
        }
    };
    e.getLeftTime = function(e) {
        return Utils.LeftTimeFormat(e, true)
    };
    e.ListDataSort = function(e) {
        var t = [],
        i = [],
        n = [],
        s = [];
        for (var a = 0; a < e.length; a++) {
            var r = e[a];
            if (r.rightData) {
                if (r.rightData.IsUse) {
                    t.push(r)
                } else if (r.rightData.has) {
                    i.push(r)
                } else {
                    n.push(r)
                }
            } else {
                s.push(r)
            }
        }
        i.sort(function(e, t) {
            return e.GetConditionId >= t.GetConditionId
        });
        n.sort(function(e, t) {
            return e.GetConditionId >= t.GetConditionId
        });
        return t.concat(i).concat(n).concat(s)
    };
    e.onClosed = function() {
        this.net.stop();
        this.timer.clear(this, this.netCall);
        if (this.wingSpine) {
            this.wingSpine.removeSelf();
            this.wingSpine.stop();
            this.wingSpine.destroy(true);
            this.wingSpine = null
        }
        BaseDialog.prototype.onClosed.call(this);
        this.reset()
    };
    e.reset = function() {
        t = null
    };
    e.useWingReq = function() {
        var e = this.listArg.selectedItem;
        if (e && e.Id) {
            Request.UseWingReq(e.Id)
        }
    };
    e.showWingSpine = function(e) {
        var n = this;
        Utils.getTempletByUrl("res/spine/wing_" + e + "/wing_" + e + ".sk",
        function(e) {
            if (n) {
                if (n.wingSpine) {
                    n.wingSpine.removeSelf();
                    n.wingSpine.stop();
                    n.wingSpine.destroy(true);
                    n.wingSpine = null
                }
                n.wingSpine = e;
                var t = n.wingSpineBox.pivotX,
                i = n.wingSpineBox.pivotY;
                e.scale(.75, .75);
                e.pos(t, i - 20);
                e.visible = false;
                e.on(Laya.Event.DISPLAY, this,
                function() {
                    e.visible = true
                });
                n.wingSpineBox.addChild(e)
            }
        })
    };
    e.updateWingInfo = function() {
        var e = this.listArg.selectedItem;
        var t = e.rightData;
        this.wingCntBox.dataSource = t;
        this.showWingSpine(e.Id)
    };
    e.setCannData = function(e) {
        if (Game.debug) {
            console.log(e)
        }
        this.allData = [];
        this.activeData = [];
        this.vipData = [];
        this.activeDataCount = 0;
        this.currentListId = 1;
        var t = this;
        var i = GameConfig.Item.getCannonSkins();
        for (var n = 0,
        s = i.length; n < s; n++) {
            var a = i[n],
            r = {};
            if (a.Disable) {
                continue
            }
            r.Id = a.ID;
            r.Sort = a.Sort;
            r.bg = {
                skin: Utils.getItemIconBgSkin(a.FrameLevel)
            };
            r.icon = {
                skin: "resource/icon/" + a.ID + ".png"
            };
            r.GetConditionId = a.GetConditionId;
            r.rightData = {
                Id: a.ID,
                ItemName: a.ItemName,
                Description: a.Description,
                GetDesc: a.GetDesc,
                skin: "resource/skins/" + a.ID + "/" + a.ID + ".png",
                has: 0,
                type: a.SkinType,
                hasGet: {
                    visible: false
                }
            };
            if (e && e.Items && e.Items.length) {
                var o = e.Items;
                for (var l = 0,
                h = o.length; l < h; l++) {
                    var u = o[l];
                    if (u.Id === a.ID) {
                        r.rightData.has = 1;
                        r.hasGet = {
                            visible: true
                        };
                        r.rightData.ExpiryTime = u.ExpiryTime;
                        r.rightData.IsUse = u.IsUse
                    }
                }
            }
            if (a.SkinType === 1) {
                r.a_v = {
                    visible: true,
                    skin: "resource/cannonSkins/mark_huodong.png"
                };
                t.activeData.push(r);
                this.activeDataCount += 1
            } else if (a.SkinType === 2) {
                r.a_v = {
                    visible: true,
                    skin: "resource/cannonSkins/mark_xianshi.png"
                };
                t.vipData.push(r)
            } else {
                r.a_v = {
                    visible: false
                }
            }
            t.allData.push(r)
        }
        if (t.allData.length < 9) {
            for (var c = t.allData.length,
            f = 9; c < f; c++) {
                t.allData.push({
                    icon: {
                        skin: ""
                    },
                    bg: {
                        skin: "resource/common/bar_wupinkong.png"
                    },
                    a_v: {
                        visible: false
                    }
                })
            }
        }
        if (t.activeData.length < 9) {
            for (var d = t.activeData.length,
            g = 9; d < g; d++) {
                t.activeData.push({
                    icon: {
                        skin: ""
                    },
                    bg: {
                        skin: "resource/common/bar_wupinkong.png"
                    },
                    a_v: {
                        visible: false
                    }
                })
            }
        }
        if (t.vipData.length < 9) {
            for (var p = t.vipData.length,
            _ = 9; p < _; p++) {
                t.vipData.push({
                    icon: {
                        skin: ""
                    },
                    bg: {
                        skin: "resource/common/bar_wupinkong.png"
                    },
                    a_v: {
                        visible: false
                    }
                })
            }
        }
        this.allData = this.ListDataSort(this.allData);
        this.activeData = this.ListDataSort(this.activeData);
        this.listArg.array = this.allData;
        this.listArg.repeatY = this.allData.length;
        this.currentListId = 1;
        this.listArg.scrollTo(0);
        this.listArg.selectedIndex = 0;
        this.selectHandlerFun();
        if (this.activeDataCount == 0) {
            this.active.visible = false;
            this.vip.visible = false
        } else {
            this.active.visible = true;
            this.vip.visible = true
        }
    };
    e.setWingData = function(e) {
        var t = GameConfig.Item.getWingList();
        var i = [];
        for (var n = 0,
        s = t.length; n < s; n++) {
            var a = t[n];
            if (a.Disable) {
                continue
            }
            var r = {
                Id: a.ID,
                Sort: a.Sort,
                GetConditionId: a.GetConditionId,
                bg: {
                    skin: Utils.getItemIconBgSkin(a.FrameLevel)
                },
                icon: {
                    skin: "resource/icon/" + a.ID + ".png",
                    scaleX: .4,
                    scaleY: .4
                },
                rightData: {
                    Id: a.ID,
                    name: a.ItemName,
                    ExpiryTime: "",
                    hasGet: false,
                    IsUse: false,
                    getBox: {
                        condition: {
                            text: a.GetDesc
                        },
                        visible: true
                    },
                    useBox: {
                        leftTime: "0天 00:00",
                        des: a.Description,
                        hasEquip: {
                            visible: false
                        },
                        btnUseWing: {
                            visible: false
                        },
                        visible: false
                    }
                }
            };
            if (e && e.Items && e.Items.length) {
                var o = e.Items;
                for (var l = 0,
                h = o.length; l < h; l++) {
                    var u = o[l];
                    if (u.Id === a.ID) {
                        r.rightData.hasGet = true;
                        r.hasGet = {
                            visible: true
                        };
                        r.rightData.getBox.visible = false;
                        r.rightData.ExpiryTime = u.ExpiryTime;
                        r.rightData.IsUse = u.IsUse;
                        r.rightData.useBox.leftTime = u.ExpiryTime > -1 ? this.getLeftTime(u.ExpiryTime) : "永久";
                        r.rightData.useBox.visible = true;
                        r.rightData.useBox.hasEquip.visible = u.IsUse ? true: false;
                        r.rightData.useBox.btnUseWing.visible = u.IsUse ? false: true;
                        break
                    }
                }
            }
            i.push(r)
        }
        i = this.ListDataSort(i);
        this.wingListData = i;
        if (this.wingCntBox.visible) {
            this.listArg.array = i;
            this.listArg.scrollTo(0);
            this.listArg.selectedIndex = 0;
            this.selectHandlerFun(0)
        }
    };
    return {
        show: function(e) {
            Resource.load(RES.CannonSkins,
            function() {
                if (!t) {
                    Request.GetUserCannonReq();
                    Request.GetUserWingReq();
                    t = new i;
                    t.init()
                }
                Waiting.hide();
                t.popup()
            });
            ActionEventReport.report(ActionEventReport.actionIndex.ID1068, {
                t: e ? 0 : 1
            })
        },
        hide: function() {
            t && t.close()
        },
        GetUserCannonRep: function(e) {
            t && t.setCannData(e)
        },
        GetUserWingRep: function(e) {
            t && t.setWingData(e)
        },
        UseCannonRep: function(e) {
            if (e.Tag) {
                Request.GetUserCannonReq();
                if (Game.state.get() > Game.sceneConfig.sceneID.gameCenter) {
                    Request.UseCannonSuccessReq(e.CannonId)
                }
            } else {
                MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgId))
            }
        },
        UseWingRep: function(e) {
            if (e.Tag) {
                Request.GetUserWingReq();
                if (Game.state.get() > Game.sceneConfig.sceneID.gameCenter) {
                    Request.UseWingSuccessReq(e.WingId)
                }
            } else {
                MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgId))
            }
        }
    }
} ();
var VipInfo = function() {
    function t() {
        t.super(this)
    }
    Laya.class(t, "VipInfoFn", VipInfoUI, "");
    var e = t.prototype;
    e.init = function() {
        this.itemList.scrollBar.hide = true;
        this.detailList.scrollBar.hide = true;
        this.detailList.scrollBar.touchScrollEnable = false;
        this.itemList.renderHandler = new Laya.Handler(this, this.itemRender);
        this.detailList.renderHandler = new Laya.Handler(this, this.detailRender);
        this.currDetailIndex = 0;
        this.on(Laya.Event.CLICK, this,
        function(e) {
            if (e.target) {
                if (e.target.name == "rechargeBtn") {
                    this.close();
                    ShopMall.show(undefined, 4)
                } else if (e.target.name == "btnDetailNext") {
                    this.scrollDetailToIndex(1)
                } else if (e.target.name == "btnDetailPrev") {
                    this.scrollDetailToIndex(0)
                }
            }
        });
        this.updateUserInfo();
        this.updateItemListData()
    };
    e.onOpened = function() {
        n.opened && n.opened()
    };
    e.onClosed = function() {
        n.closed && n.closed();
        BaseDialog.prototype.onClosed.call(this);
        i = null
    };
    e.reset = function() {
        i = null
    };
    e.descRender = function(e) {
        if (Channel && Channel.cfg.cps == Game.ChannelConstants.uygur) {
            var t = e.getChildByName("des");
            t.align = "right"
        }
    };
    e.itemRender = function(e) {
        var t = e.getChildByName("btnDetail");
        var i = e.dataSource;
        t.clickHandler = new Laya.Handler(this,
        function() {
            this.showDetailList(i.level - 1)
        })
    };
    e.detailRender = function(e) {
        var t = e.getChildByName("btnBackToList");
        var i = e.getChildByName("descList");
        var n = e.getChildByName("giftList");
        i.scrollBar.hide = true;
        n.scrollBar.hide = true;
        i.off(Laya.Event.RENDER, this);
        i.on(Laya.Event.RENDER, this, this.descRender);
        t.clickHandler = new Laya.Handler(this,
        function() {
            this.showItemList()
        })
    };
    e.getGiftData = function(e) {
        var t = e.split("|");
        var i = [];
        for (var n = 0; n < t.length; n++) {
            var s = t[n].split(":");
            if (s.length == 2) {
                var a = GameConfig.Item.getItemInfoById(s[0]);
                var r = Utils.getItemIconBgSkin(a.FrameLevel);
                i.push({
                    bg: r,
                    icon: a.skin,
                    fc_num: {
                        value: s[1]
                    }
                })
            }
        }
        return i
    };
    e.getDescData = function(e) {
        var t = [];
        for (var i = 0; i < e.length; i++) {
            t.push({
                des: {
                    text: e[i].VipDesc,
                    color: e[i].Color
                }
            })
        }
        return t
    };
    e.updateItemListData = function() {
        var e = GameConfig.getVipCfg();
        var t = [];
        for (var i = 0; i < e.length; i++) {
            var n = e[i];
            if (n.VipLevel == 0) {
                continue
            }
            var s = n.CannonId;
            var a = GameConfig.Item.getItemInfoById(s);
            var r = this.getGiftData(n.VipGift);
            var o = this.getDescData(n.VipDesc);
            t.push({
                fc_level: {
                    value: n.VipLevel
                },
                cannon_skin: "resource/vip/" + s + ".png",
                name: a.ItemName,
                level: n.VipLevel,
                descList: {
                    array: o
                },
                giftList: {
                    array: r
                },
                arrow: {
                    visible: n.VipLevel == 1 ? false: true
                },
                giftName: "贵族" + n.VipLevel + "礼包",
                needCost: Utils.fenToYuan(n.NeedRmb)
            })
        }
        this.itemList.array = t;
        this.detailList.array = t;
        var l = Player.getVipLevel();
        if (l > 0) {
            this.itemList.tweenTo(l - 1, 100)
        } else {
            this.itemList.tweenTo(0, 100)
        }
        Laya.Tween.to(this.itemList, {
            scaleX: 1,
            scaleY: 1
        },
        100)
    };
    e.updateUserInfo = function() {
        var e = GameConfig.getVipCfg();
        var t = e[e.length - 1];
        if (t) {
            var i = t.VipLevel;
            var n = Player.getVipLevel();
            var s = Player.getPayRmb();
            if (n < i) {
                var a = GameConfig.getVipInfoByLevel(n + 1);
                var r = Utils.fenToYuan(a.NeedRmb);
                this.currVipIcon.skin = "resource/icon/vipLevel/vip" + n + ".png";
                this.nextVipIcon.skin = "resource/icon/vipLevel/vip" + (n + 1) + ".png";
                var o = r - s;
                this.fc_needCost.value = o + "元";
                this.fc_costProgress.value = (s >= r ? r: s) + "/" + r;
                this.costProgress.value = s >= r ? 1 : s / r
            } else {
                var l = GameConfig.getVipInfoByLevel(e.length - 1);
                var h = Utils.fenToYuan(l.NeedRmb);
                this.currVipIcon.skin = "resource/icon/vipLevel/vip" + n + ".png";
                this.nextVipIcon.skin = "resource/icon/vipLevel/vip_qidai.png";
                this.txt_desc_1.visible = false;
                this.txt_desc_2.visible = false;
                this.txt_desc_3.visible = true;
                this.fc_needCost.visible = false;
                this.fc_costProgress.value = s + "/" + h;
                this.costProgress.value = 1
            }
        }
    };
    e.showItemList = function() {
        this.hideDetailList();
        this.itemList.scale(0, 0);
        this.itemList.visible = true;
        this.timer.once(200, this,
        function() {
            Laya.Tween.to(this.itemList, {
                scaleX: 1,
                scaleY: 1
            },
            200)
        })
    };
    e.hideItemList = function() {
        Laya.Tween.to(this.itemList, {
            scaleX: 0,
            scaleY: 0
        },
        200, null, Laya.Handler.create(this,
        function() {
            this.itemList.visible = false
        }))
    };
    e.showDetailList = function(e) {
        this.currDetailIndex = e;
        this.scrollDetailToIndex();
        this.updatePageBtnState();
        this.hideItemList();
        this.detailList.scale(0, 0);
        this.detailList.visible = true;
        this.timer.once(200, this,
        function() {
            Laya.Tween.to(this.detailList, {
                scaleX: 1,
                scaleY: 1
            },
            200)
        })
    };
    e.hideDetailList = function() {
        Laya.Tween.to(this.detailList, {
            scaleX: 0,
            scaleY: 0
        },
        200, null, Laya.Handler.create(this,
        function() {
            this.detailList.visible = false
        }))
    };
    e.updatePageBtnState = function() {
        this.btnDetailPrev.visible = this.currDetailIndex > 0 ? true: false;
        this.btnDetailNext.visible = this.currDetailIndex < this.detailList.array.length - 1 ? true: false
    };
    e.scrollDetailToIndex = function(e) {
        var t = 0;
        if (e == 1) {
            if (this.currDetailIndex < this.detailList.array.length - 1) {
                this.currDetailIndex += 1;
                t = 300
            } else {
                return
            }
        } else if (e == 0) {
            if (this.currDetailIndex > 0) {
                this.currDetailIndex -= 1;
                t = 300
            } else {
                return
            }
        }
        this.updatePageBtnState();
        this.detailList.tweenTo(this.currDetailIndex, t)
    };
    var i = null;
    var n = {
        opened: null,
        closed: null,
        show: function(e) {
            if (Game.miniGameIOS() && Channel && !Channel.forward) {
                return
            }
            Waiting.show();
            WinUtils.showDialog(RES.loadTaskList.vipInfo, t,
            function(e) {
                i = e;
                i.popup();
                i.updateUserInfo();
                Waiting.hide()
            });
            ActionEventReport.report(ActionEventReport.actionIndex.ID1062, {
                t: e ? 0 : 1
            })
        },
        update: function() {}
    };
    return n
} ();
var MpGiftBag = function() {
    var t = null;
    function e() {
        e.super(this)
    }
    Laya.class(e, "MpGiftBagFun", MpGiftBagUI, "");
    var i = e.prototype;
    i.init = function() {
        var i = this;
        this.on(Laya.Event.CLICK, this,
        function(e) {
            var t = e.target.name;
            switch (t) {
            case "copy_mp":
                Utils.setCopyValue(i.Mp);
                MsgToast.show("复制成功");
                break
            }
        });
        this.feformDate()
    };
    i.feformDate = function() {
        var e = GameConfig.getMpGift();
        var t = [];
        if (e) {
            var i = e[0].PrizeItem,
            n = i.split("|");
            this.Mp = e[0].MP;
            for (var s = 0,
            a = n.length; s < a; s++) {
                var r = n[s],
                o = r.split(":");
                var l = GameConfig.Item.getItemInfoById(o[0] * 1);
                var h = {};
                h.ID = l.ID;
                h.icon = {
                    skin: l.skin
                };
                h.num = {
                    value: o[1]
                };
                switch (l.FrameLevel) {
                case 0:
                    h.bg = {
                        skin: "resource/common/bar_wupinkong.png"
                    };
                    break;
                case 1:
                    h.bg = {
                        skin: "resource/common/bar_wupinlv.png"
                    };
                    break;
                case 2:
                    h.bg = {
                        skin: "resource/common/bar_wupinlan.png"
                    };
                    break;
                case 3:
                    h.bg = {
                        skin: "resource/common/bar_wupinzi.png"
                    };
                    break;
                case 4:
                    h.bg = {
                        skin: "resource/common/bar_wupinjin.png"
                    };
                    break;
                default:
                    h.bg = {
                        skin: "resource/common/bar_wupinkong.png"
                    };
                    break
                }
                t.push(h)
            }
            this.giftList.array = t
        }
    };
    i.onClosed = function() {
        BaseDialog.prototype.onClosed.call(this);
        this.reset()
    };
    i.reset = function() {
        t = null
    };
    return {
        show: function() {
            Waiting.show();
            WinUtils.showDialog(RES.loadTaskList.mpGiftBag, e,
            function(e) {
                t = e;
                Waiting.hide();
                t.popup()
            })
        },
        hide: function() {
            t && t.close()
        }
    }
} ();
var NoticeBox = function() {
    var t = null;
    function i() {
        i.super(this)
    }
    Laya.class(i, "NoticeBoxFun", NoticeboxUI, "");
    var e = i.prototype;
    e.init = function(e) {
        this.size(Game.UIWidth, Game.UIHeight);
        if (this.textLabel) {
            this.textLabel.text = "";
            this.textLabel.text = e
        }
        this.on(Laya.Event.CLICK, this,
        function(e) {
            var t = e.target.name;
            if (t === "sureSubmit") {
                this.close()
            }
        })
    };
    e.onClosed = function() {
        NoticeBox.submitCall && NoticeBox.submitCall();
        BaseDialog.prototype.onClosed.call(this);
        this.reset()
    };
    e.reset = function() {
        t = null
    };
    return {
        submitCall: null,
        show: function(e) {
            if (!FishScene.getFishScene()) {
                return
            }
            if (!t) {
                t = new i;
                t.init(e)
            }
            t.popup()
        },
        hide: function() {
            t && t.close()
        }
    }
} ();
var LuckyShake = function() {
    function t() {
        t.super(this)
    }
    Laya.class(t, "LuckyShake", LuckyShakeUI, "");
    var e = t.prototype;
    e.onClosed = function() {
        a.closed && a.closed();
        BaseDialog.prototype.onClosed.call(this);
        this.boxView.scaleX = 1;
        this.boxView.scaleY = 1;
        i = null
    };
    e.close = function(e) {
        if (!FishScene.getFishScene() || FishScene.getFishScene() && FishScene.getFishScene().sceneCfg.SceneId == Game.sceneConfig.sceneID.scene_YouYiSai) {
            BaseDialog.prototype.close.call(this)
        } else {
            if (Laya.LocalStorage.getItem(Player.getUserId() + myStorage.StorageStaticCode.Storage_FIRSTSHAKE_GUANG) == "true") {
                BaseDialog.prototype.close.call(this)
            } else {
                if (n) {
                    if (!s) {
                        this.ani1.once(Laya.Event.COMPLETE, this, this.doMove);
                        this.ani1.play(0, false);
                        s = true
                    }
                } else {
                    BaseDialog.prototype.close.call(this)
                }
            }
        }
    };
    e.closeWin = function() {
        BaseDialog.prototype.close.call(this)
    };
    e.doMove = function() {
        var e = Utils.localToGlobal(FishScene.getFishScene().boxBtnLuckyShake);
        var t = this.globalToLocal(e, true);
        Laya.Tween.to(this.moveBox, t, 1e3, Laya.Ease.cubicInOut, Laya.Handler.create(this, this.moveEnd))
    };
    e.moveEnd = function() {
        this.jbIcon.visible = false;
        this.isModal = false;
        Laya.Dialog.manager._checkMask();
        if (FishScene.getFishScene()) {
            this.timer.once(400, this, this.closeWin)
        } else {
            BaseDialog.prototype.close.call(this)
        }
        Laya.LocalStorage.setItem(Player.getUserId() + myStorage.StorageStaticCode.Storage_FIRSTSHAKE_GUANG, "true")
    };
    e.reset = function() {
        LuckyShakeView.giveUp()
    };
    var i = null;
    var n = false;
    var s = false;
    var a = {
        opened: null,
        closed: null,
        show: function(e) {
            Waiting.show();
            Resource.load(RES.loadTaskList.luckyShake,
            function() {
                if (!i) {
                    i = new t
                }
                n = e;
                s = false;
                LuckyShakeView.show(i.boxView,
                function(e) {
                    e.scaleX = 1;
                    e.scaleY = 1;
                    e.x = 0;
                    e.y = 0;
                    e.getChildByName("close").visible = true;
                    i.popup()
                },
                function() {
                    i = null
                });
                Waiting.hide()
            })
        }
    };
    return a
} ();
var ChoiceAccount = function() {
    var h = Laya.LocalStorage,
    n = Laya.Handler;
    var s = null;
    var e = false;
    var u = null;
    var r = undefined,
    o = undefined;
    function t() {
        t.super(this)
    }
    Laya.class(t, "ChoiceAccountFun", ChoiceAccountUI, "");
    var i = t.prototype;
    i.init = function() {
        this.size(Game.UIWidth, Game.UIHeight);
        this.on(Laya.Event.CLICK, this,
        function(e) {
            var t = e.target.name;
            switch (t) {
            case "create_account":
                EstablishAccount.show();
                this.close();
                break;
            case "start_game":
                this.clickStartGameFun();
                break;
            case "switch_box":
                this.changeUserFun();
                break
            }
        });
        this.on(Laya.Event.CLICK, this,
        function() {
            if (this.list_box.visible && !e) {
                this.list_box.visible = false
            }
            e = false
        });
        this.list_box.on(Laya.Event.CLICK, this.list_box,
        function(e) {
            e.stopPropagation()
        });
        this.user_history_list.renderHandler = new n(this, this.historyRenderFun)
    };
    i.clickStartGameFun = function() {
        var e = this.user_name.text,
        t = this.psw.text;
        if (e === "") {
            MsgToast.show(GameConfig.ErrorMsg.clientErrorMsg(10036));
            return false
        }
        if (t === "") {
            MsgToast.show(GameConfig.ErrorMsg.clientErrorMsg(10037));
            return false
        }
        var i = LoginViewApp.getParam({
            UserName: e,
            Password: t
        });
        Waiting.show();
        if (!u) {
            i.Type = 0;
            Game.loginPosition.positon = Game.loginPosition.loginApp3;
            Request.login(i)
        } else {
            var n = false;
            for (var s = 0,
            a = u.length; s < a; s++) {
                if (e === u[s].name && u[s].type === 2) {
                    n = true;
                    break
                }
            }
            if (n) {
                i.Type = 1;
                r = e;
                o = t;
                Game.loginPosition.positon = Game.loginPosition.loginApp4;
                Request.login(i)
            } else {
                i.Type = 0;
                Game.loginPosition.positon = Game.loginPosition.loginApp3;
                Request.login(i)
            }
        }
    };
    i.changeUserFun = function() {
        if (this.list_box.visible === false) {
            this.user_history_list.scrollBar.hide = true;
            this.list_box.visible = true
        } else {
            this.list_box.visible = false
        }
        e = true
    };
    i.getHistoryFun = function() {
        var e = h.getItem("userHistory");
        if (e) {
            u = ChoiceAccount.handleHistoryFun(e);
            this.user_history_list.visible = true;
            this.user_history_list.array = u;
            this.user_history_list.array.repeatY = u.length;
            this.user_name.text = u[0].name;
            this.psw.text = u[0].psw
        } else {
            this.user_name.text = "";
            this.user_history_list.visible = false
        }
    };
    i.historyRenderFun = function(e, t) {
        var i = e.dataSource;
        if (i.name === this.user_name.text) {
            e.getChildByName("list_bg").visible = true
        } else {
            e.getChildByName("list_bg").visible = false
        }
        e.getChildByName("delete_his").clickHandler = new n(this, this.deleteHistoryFun, [t]);
        e.getChildByName("name").clickHandler = new n(this,
        function(e) {
            this.user_name.text = i.name;
            this.psw.text = i.psw;
            this.list_box.visible = false;
            LoginViewApp.userInfo.name = i.name;
            LoginViewApp.userInfo.pwd = i.psw;
            LoginViewApp.userInfo.type = i.type
        })
    };
    i.deleteHistoryFun = function(r) {
        var e = GameConfig.ErrorMsg.clientErrorMsg(10035),
        o = MessageBox.show(e),
        l = this;
        o.submitCall = null;
        o.closeCall = null;
        o.submitCall = function() {
            o.submitCall = null;
            o = null;
            var e = "";
            var t = [];
            u.splice(r, 1);
            for (var i = 0,
            n = u.length; i < n; i++) {
                e += u[i].name + u[i].type + ":" + u[i].psw + "|"
            }
            for (var s = 0,
            a = u.length; s < a; s++) {
                t.push(u[s])
            }
            l.user_history_list.array = t;
            l.user_history_list.repeatY = t.length;
            if (t.length <= 0) {
                l.list_box.visible = false;
                l.user_name.text = "";
                l.psw.text = ""
            }
            h.setItem("userHistory", e);
            l.getHistoryFun();
            LoginViewApp.handleStorageInfo(e)
        }
    };
    i.onClosed = function() {
        BaseDialog.prototype.onClosed.call(this);
        this.reset()
    };
    i.onOpened = function() {
        this.getHistoryFun()
    };
    i.reset = function() {
        if (s) {
            s = null
        }
    };
    return {
        show: function() {
            Waiting.show();
            WinUtils.showDialog(RES.loadTaskList.choiceAccount, t,
            function(e) {
                s = e;
                s.popup();
                Waiting.hide()
            })
        },
        hide: function() {
            if (s) {
                s.close()
            }
        },
        accountLoginRep: function(e) {
            if (s) {
                var t = s.user_name.text,
                i = s.psw.text;
                Utils.setLocalStorageFun(t, i, 0)
            }
            ChoiceAccount.hide();
            Waiting.hide();
            StartView.hide();
            LoadingView.show();
            GameCenter.loginRep(e)
        },
        experimenterLogin: function(e) {
            if (s && r && o) {
                Utils.setLocalStorageFun(r, o, 2)
            }
            ChoiceAccount.hide();
            Waiting.hide();
            StartView.hide();
            LoadingView.show();
            GameCenter.loginRep(e)
        },
        handleHistoryFun: function(e) {
            if (!e) {
                return false
            }
            var t = [],
            i = e.split("|");
            i.pop();
            for (var n = 0,
            s = i.length; n < s; n++) {
                var a = i[n].split(":"),
                r = a[0],
                o = r.substring(0, r.length - 1),
                l = r.substring(r.length - 1);
                t.push({
                    name: o,
                    psw: a[1],
                    type: parseInt(l)
                })
            }
            return t
        }
    }
} ();
var EntranceGuidanceAndroid = function() {
    function e() {
        e.super(this)
    }
    Laya.class(e, "EntranceGuidanceAndroid", EntranceGuidanceAndroidUI, "");
    var t = e.prototype;
    t.onClosed = function() {
        n.closed && n.closed();
        BaseDialog.prototype.onClosed.call(this);
        i = null
    };
    t.display = function() {
        var e = (Game.ViewHeight - this.height) * .5;
        this.shou.y = 55 - e;
        var t = (Game.ViewWidth - this.width) * .5;
        this.shou.x = t + this.width - 150;
        this.hitLabel.visible = Game.onMiniGame && !Game.onQQ()
    };
    var i = null;
    var n = {
        opened: null,
        closed: null,
        show: function() {
            Waiting.show();
            WinUtils.showDialog(RES.loadTaskList.newPlayerGuid, e,
            function(e) {
                i = e;
                Waiting.hide();
                i.popup()
            })
        }
    };
    return n
} ();
var EntranceGuidanceIOS = function() {
    function e() {
        e.super(this)
    }
    Laya.class(e, "EntranceGuidanceIOS", EntranceGuidanceIOSUI, "");
    var t = e.prototype;
    t.onClosed = function() {
        n.closed && n.closed();
        BaseDialog.prototype.onClosed.call(this);
        i = null
    };
    t.display = function() {
        var e = (Game.ViewHeight - this.height) * .5;
        this.shou.y = 55 - e;
        var t = (Game.ViewWidth - this.width) * .5;
        this.shou.x = t + this.width - 150
    };
    var i = null;
    var n = {
        show: function() {
            Waiting.show();
            WinUtils.showDialog(RES.loadTaskList.newPlayerGuid, e,
            function(e) {
                i = e;
                Waiting.hide();
                i.popup()
            })
        }
    };
    return n
} ();
var RoleChoice = function() {
    var i = null;
    function n() {
        n.super(this)
    }
    var s = null,
    a = null;
    Laya.class(n, "RoleChoiceFun", RoleChoiceUI, "");
    var e = n.prototype;
    e.init = function(e, t) {
        this.list_role.scrollBar.hide = true;
        this.list_role.renderHandler = new Laya.Handler(this, this.renderHandlerFun);
        this.list_role.selectHandler = new Laya.Handler(this, this.selectHandlerFun);
        this.listData = e;
        this.token = t;
        this.list_role.array = e
    };
    e.renderHandlerFun = function(e, t) {
        var i = e.dataSource;
        var n = e.getChildByName("img_userHead").getChildByName("userHeadImg");
        if (i.AvatarUrl) {
            n.skin = i.AvatarUrl
        } else if (i.AvatarID) {
            n.skin = "resource/head/" + i.AvatarID + ".png"
        } else {
            n.skin = "resource/head/1.png"
        }
        e.getChildByName("img_vipLevel").skin = "resource/login/vipLevel/vip" + i.VipLevel + ".png";
        e.getChildByName("label_name").text = i.Nick;
        e.getChildByName("label_id").text = "编号：" + i.UserID
    };
    e.selectHandlerFun = function() {
        var e = this.list_role.selectedItem,
        t = this;
        var i = LoginViewApp.getParam({
            UserName: e.UserID.toString(),
            Password: t.token,
            Type: 4
        });
        s = e.Nick;
        a = this.token;
        Waiting.show();
        Request.login(i)
    };
    e.onClosed = function() {
        BaseDialog.prototype.onClosed.call(this);
        this.reset()
    };
    e.reset = function() {
        i = null
    };
    return {
        show: function(e, t) {
            if (!i) {
                i = new n;
                i.init(e, t)
            }
            i.popup()
        },
        hide: function() {
            i && i.close()
        },
        loginRes: function(e) {
            Waiting.hide();
            if (e.Tag) {
                i && i.close();
                if (s && a) {
                    Utils.setLocalStorageFun(s, a, 0);
                    s = null;
                    a = null
                }
                GameCenter.loginRep(e)
            }
        }
    }
} ();
var FirstBuyToOne = function() {
    var e = FirstBuyToOneUI.prototype;
    var t = null;
    e.init = function() {
        if (Channel && Channel.cfg.cps == Game.ChannelConstants.qtt) {
            this.quIconBox.visible = true;
            this.tt.visible = false
        }
        this.btnGet.clickHandler = new Laya.Handler(this,
        function() {
            var e = GameConfig.shopCity.getCfgById(105);
            var t = {
                GoodsID: e.GoodsId,
                goodsName: e.GoodsName,
                price: Utils.fenToYuan(e.CostNum)
            };
            ShopMall.buyRecharge(t);
            this.close()
        })
    };
    e.onOpened = function() {
        i.opened && i.opened()
    };
    e.onClosed = function() {
        i.closed && i.closed();
        BaseDialog.prototype.onClosed.call(this);
        this.reset()
    };
    e.reset = function() {
        t = null
    };
    var i = {
        opened: null,
        closed: null,
        show: function() {
            Waiting.show();
            WinUtils.showDialog(RES.loadTaskList.firstBuyToOne, FirstBuyToOneUI,
            function(e) {
                t = e;
                t.popup();
                Waiting.hide()
            })
        }
    };
    return i
} ();
var FirstBuyToOneNew = function() {
    var e = FirstBuyToOneNewUI.prototype;
    var s = null;
    e.show = function(e) {
        this.recharge.show(e, this.isPoChan);
        EventBus.on(EventConfig.FirstBuyToOne.FirstBuyToOne_BUY_SUCCESS, this, this.close);
        this.setBtClick(this.recharge.btnClose)
    };
    e.onClick = function(e) {
        if (this.closeCall) {
            this.close("close")
        } else {
            if (!FishScene.getFishScene() || FishScene.getFishScene() && FishScene.getFishScene().sceneCfg.SceneId == Game.sceneConfig.sceneID.scene_YouYiSai) {
                this.close()
            } else {
                if (Laya.LocalStorage.getItem(Player.getUserId() + myStorage.StorageStaticCode.Storage_FIRSTBUYTOONE_GUANG) == "true") {
                    this.close()
                } else {
                    this.ani1.once(Laya.Event.COMPLETE, this, this.doMove);
                    this.ani1.play(0, false)
                }
            }
        }
    };
    e.doMove = function() {
        var e = Utils.localToGlobal(FishScene.getFishScene().btnTeHui);
        var t = this.globalToLocal(e, true);
        Laya.Tween.to(this.moveBox, t, 1e3, Laya.Ease.cubicInOut, Laya.Handler.create(this, this.moveEnd))
    };
    e.moveEnd = function() {
        this.tuoWei.visible = false;
        this.btnTeHuiGuang.visible = true;
        this.jbIcon.visible = false;
        this.isModal = false;
        Laya.Dialog.manager._checkMask();
        if (FishScene.getFishScene()) {
            this.btnTeHuiGuang.play(0, true);
            this.timer.once(400, this, this.close)
        } else {
            this.close()
        }
        Laya.LocalStorage.setItem(Player.getUserId() + myStorage.StorageStaticCode.Storage_FIRSTBUYTOONE_GUANG, "true")
    };
    e.onOpened = function() {
        a.opened && a.opened()
    };
    e.onClosed = function(e) {
        a.closed && a.closed();
        BaseDialog.prototype.onClosed.call(this, e);
        EventBus.off(EventConfig.FirstBuyToOne.FirstBuyToOne_BUY_SUCCESS, this, this.close);
        this.closeCall && this.closeCall(e);
        this.reset()
    };
    e.reset = function() {
        s = null;
        a.isShow = false
    };
    var a = {
        opened: null,
        closed: null,
        show: function(t, i) {
            var n = Player.getFirstGiftOneId();
            if (i) {
                ActionEventReport.report(ActionEventReport.actionIndex.ID1001)
            }
            if (n < 0) {
                return
            }
            if (a.doShowing || a.isShow) return;
            a.doShowing = true;
            Waiting.show();
            WinUtils.showDialog(RES.loadTaskList.firstBuyToOneNew, FirstBuyToOneNewUI,
            function(e) {
                s = e;
                s.closeCall = t;
                s.isPoChan = i;
                s.show(n);
                s.popup();
                a.doShowing = false;
                a.isShow = true;
                Waiting.hide()
            })
        }
    };
    return a
} ();
var VipService = function() {
    var i = null;
    function n() {
        n.super(this)
    }
    Laya.class(n, "VipServiceFun", VipServiceUI, "");
    var e = n.prototype;
    e.init = function() {
        this.btnCopy.clickHandler = new Laya.Handler(this, this.copyFun)
    };
    e.updateUI = function(e, t) {
        this.wxCode.text = e;
        this.QRCode.skin = t
    };
    e.copyFun = function() {
        var e = this.wxCode.text;
        if (e === "") {
            return false
        }
        Utils.setCopyValue(e)
    };
    e.onClosed = function() {
        BaseDialog.prototype.onClosed.call(this);
        this.reset()
    };
    e.reset = function() {
        i = null
    };
    return {
        show: function(e, t) {
            Resource.checkLoaded = false;
            Resource.load(RES.loadTaskList.vipService,
            function() {
                if (!i) {
                    i = new n;
                    i.init()
                }
                i.updateUI(e, t);
                i.popup()
            })
        }
    }
} ();
var ChatSystem = function() {
    var g = null;
    var i = Laya.Handler;
    var c = null;
    var e = null;
    var _ = {
        room: 1,
        friends: 2,
        kefu: 3,
        maxRecord: 50
    };
    var m = _.room;
    var t = [{
        Id: 1,
        emjoyIcon: "resource/chatSystem/emjoy_1.png"
    },
    {
        Id: 2,
        emjoyIcon: "resource/chatSystem/emjoy_2.png"
    },
    {
        Id: 3,
        emjoyIcon: "resource/chatSystem/emjoy_3.png"
    },
    {
        Id: 4,
        emjoyIcon: "resource/chatSystem/emjoy_4.png"
    },
    {
        Id: 5,
        emjoyIcon: "resource/chatSystem/emjoy_5.png"
    },
    {
        Id: 6,
        emjoyIcon: "resource/chatSystem/emjoy_6.png"
    },
    {
        Id: 7,
        emjoyIcon: "resource/chatSystem/emjoy_7.png"
    },
    {
        Id: 8,
        emjoyIcon: "resource/chatSystem/emjoy_8.png"
    },
    {
        Id: 9,
        emjoyIcon: "resource/chatSystem/emjoy_9.png"
    },
    {
        Id: 10,
        emjoyIcon: "resource/chatSystem/emjoy_10.png"
    },
    {
        Id: 11,
        emjoyIcon: "resource/chatSystem/emjoy_11.png"
    },
    {
        Id: 12,
        emjoyIcon: "resource/chatSystem/emjoy_12.png"
    }];
    var p = null;
    var v = [{
        type: 1,
        sort: 0
    },
    {
        type: 3,
        isRead: 1,
        sort: 1
    }];
    var y = {};
    var o = function() {
        var i = [];
        var n = [];
        return {
            get: function() {
                return i.concat(n)
            },
            push: function(e, t) {
                if (i.length >= _.maxRecord) {
                    i.shift();
                    i.push(e);
                    if (g && m === _.kefu) {
                        g.setChatListDataFun(i.concat(n))
                    }
                    if (t) {
                        t()
                    }
                } else {
                    i.push(e);
                    if (g && m === _.kefu) {
                        g.setChatListDataFun(i.concat(n))
                    }
                    if (t) {
                        t()
                    }
                }
            },
            clear: function() {
                i = [];
                n = []
            },
            pushTip: function(e) {
                n = [];
                n.push(e);
                console.log(n);
                g.setChatListDataFun(i.concat(n))
            }
        }
    } ();
    var s = function() {
        var i = [];
        return {
            get: function() {
                return i
            },
            push: function(e, t) {
                if (i.length >= _.maxRecord) {
                    i.shift();
                    i.push(e);
                    if (g && m === _.room) {
                        g.setChatListDataFun(i)
                    }
                    if (t) {
                        t()
                    }
                } else {
                    i.push(e);
                    if (g && m === _.room) {
                        g.setChatListDataFun(i)
                    }
                    if (t) {
                        t()
                    }
                }
            },
            clear: function() {
                i = []
            }
        }
    } ();
    var l = function(e, t) {
        var i = undefined;
        for (var n = 0,
        s = v.length; n < s; n++) {
            var a = v[n];
            if (e === _.kefu || e === _.room) {
                if (a.type === e) {
                    i = n;
                    break
                }
            } else {
                if (t) {
                    if (t * 1 === a.UserId) {
                        i = n;
                        break
                    }
                }
            }
        }
        if (i || i == 0) {
            v[i].isRead = 0;
            v.sort(function(e, t) {
                return e.sort - t.sort
            });
            if (g) {
                g.friendsList.array = v
            }
        }
    };
    var I = function(e) {
        var t = /{{\+?[1-9][0-9]*}}/g,
        i = /{-\+?[1-9][0-9]*-}/g;
        if (t.test(e)) {
            var n = e.replace(/[^0-9]/gi, "");
            return {
                Id: n * 1,
                type: 2
            }
        } else if (i.test(e)) {
            var s = e.replace(/[^0-9]/gi, "");
            return {
                Id: s * 1,
                type: 1
            }
        } else {
            return {
                Id: -1,
                type: 3,
                msg: e
            }
        }
    };
    var n = function(e) {
        if (e) {
            var t = e.UserId;
            var i = FishScene.getUserCannonByUid(t);
            if (i) {
                var n = i.localPos - 1;
                if (n >= 0) {
                    var s = c[n];
                    if (s) {
                        var a = s.getChildByName("chatCnt");
                        var r = s.getChildByName("emjoy");
                        if (r) {
                            r.removeSelf();
                            r.destroy()
                        }
                        var o = I(e.ChatContent);
                        switch (o.type) {
                        case 1:
                            a.visible = true;
                            var l = GameConfig.getShortcut(o.Id);
                            a.text = l;
                            var h = a.width;
                            h += 80;
                            h = h < 146 ? 146 : h;
                            s.width = h;
                            s.getChildAt(0).width = h;
                            break;
                        case 2:
                            a.visible = false;
                            var u = new Laya.Image;
                            u.name = "emjoy";
                            u.skin = "resource/chatSystem/emjoy_" + o.Id + ".png";
                            u.centerY = 0;
                            u.centerX = 0;
                            s.addChild(u);
                            s.width = 147;
                            s.getChildAt(0).width = 147;
                            u = null;
                            break;
                        case 3:
                            a.visible = true;
                            a.text = o.msg || "";
                            var h = a.width;
                            h += 80;
                            h = h < 146 ? 146 : h;
                            s.width = h;
                            s.getChildAt(0).width = h;
                            break
                        }
                        s.visible = true;
                        Laya.timer.once(2500, this,
                        function() {
                            if (s && s.displayedInStage) {
                                s.visible = false
                            }
                        })
                    }
                }
            }
        }
    };
    var a = {
        _list: [],
        start: function() {
            Laya.timer.loop(1e3, this, this.update)
        },
        stop: function() {
            Laya.timer.clear(this, this.update)
        },
        update: function() {
            for (var e = 0; e < this._list.length; e++) {
                var t = this._list[e];
                var i = Math.floor(Date.now() / 1e3);
                if (t && i - t.time >= 60) {
                    this._list.removeByValue(t)
                }
            }
        },
        add: function(e) {
            this._list.push({
                cnt: e,
                time: Math.floor(Date.now() / 1e3)
            })
        },
        contain: function(e) {
            var t = false;
            var i = Math.floor(Date.now() / 1e3);
            if (e) {
                for (var n = 0; n < this._list.length; n++) {
                    var s = this._list[n];
                    if (s && s.cnt == e && i - s.time < 60) {
                        t = true;
                        break
                    }
                }
            }
            return t
        }
    };
    function r() {
        r.super(this)
    }
    Laya.class(r, "ChatSystemFun", chatSystemUI, "");
    var h = r.prototype;
    h.init = function() {
        this.width = Game.UIWidth;
        this.height = Game.UIHeight;
        this.friendsList.scrollBar.hide = true;
        this.chatLists.scrollBar.hide = true;
        this.quickChatList.scrollBar.hide = true;
        this.emjoyList.scrollBar.hide = true;
        this.friendsList.renderHandler = new i(this, this.friendsListRender);
        this.friendsList.selectHandler = new i(this, this.friendsListSelect);
        this.chatLists.renderHandler = new i(this, this.chatListRender);
        this.quickChatList.renderHandler = new i(this, this.quickChatRender);
        this.emjoyList.renderHandler = new i(this, this.emjoyRender);
        this.on(Laya.Event.CLICK, this,
        function(e) {
            var t = e.target;
            var i = t.name;
            switch (i) {
            case "btnAddFri":
                if (t.parent) {
                    this.chatOperateFun(1, t.parent.dataSource)
                }
                break;
            case "btnShield":
                if (t.parent) {
                    this.chatOperateFun(5, t.parent.dataSource)
                }
                break;
            case "btnQuickChat":
                this.btnQuickChatFun();
                break;
            case "btnBQ":
                this.btnBQFun();
                break;
            case "btnSendMsg":
                this.btnSendMsgFun();
                break;
            case "horn":
                if (!this.horn.gray) {
                    HornInput.show()
                } else {
                    MsgToast.show("数量不足")
                }
                break
            }
        });
        var e = GameConfig.getSysCfgByKey("LiaoTianXianzZhiZiShu");
        if (e) {
            e *= 1;
            this.inputChatMsg.prompt = "请输入.....(最多" + (e || 15) + "字符)"
        }
        this.horn.visible = Player.openChat() ? true: false;
        var t = Package.getDataById(Game.item.Horn);
        this.horn.gray = (t && t.num) > 0 ? false: true
    };
    h.btnSendMsgFun = function() {
        var e = GameConfig.getSysCfgByKey("LiaoTianXianzZhiZiShu") * 1;
        var t = this.inputChatMsg.text;
        if (!t) {
            MsgToast.show(GameConfig.ErrorMsg.clientErrorMsg(10070))
        } else if (t.length > (e || 15) && !Utils.getUrlParam("GM")) {
            var i = GameConfig.ErrorMsg.clientErrorMsg(10071);
            i = i.replace(/[0-9]+/, e || 15);
            MsgToast.show(i)
        } else if (t.indexOf("@GM@ver@") >= 0) {
            var n = t.split("@");
            var s = n[n.length - 1] * 1;
            if (s > 0) {
                myStorage.setItem("gmVer", s)
            } else {
                myStorage.removeItem("gmVer")
            }
        } else {
            if (m == _.room) {
                this.sendMsgFun(3, t || "");
                this.inputChatMsg.text = ""
            } else {
                if (a.contain(t)) {
                    MsgToast.show("1分钟内不能发送完全一样的信息")
                } else {
                    this.sendMsgFun(3, t || "");
                    this.inputChatMsg.text = "";
                    a.add(t)
                }
            }
        }
    };
    h.checkRoomChat = function() {
        var e = undefined;
        for (var t = 0,
        i = v.length; t < i; t++) {
            var n = v[t];
            if (n.type === _.room) {
                e = t;
                break
            }
        }
        if (e || e === 0) {
            if (Game.state.get() <= 0) {
                v.splice(e, 1)
            }
        } else {
            if (Game.state.get() > 0) {
                v.unshift({
                    type: _.room,
                    sort: 1,
                    isRead: 1
                })
            }
        }
        v.sort(function(e, t) {
            return e.sort - t.sort
        });
        this.friendsList.array = v
    };
    h.friendsListRender = function(e, t) {
        var i = e.dataSource;
        var n = e.getChildByName("userHead"),
        s = e.getChildByName("redMark"),
        a = e.getChildByName("frinName"),
        r = e.getChildByName("vipLe");
        if (i.isRead === 0) {
            s.visible = true
        } else {
            s.visible = false
        }
        if (i.type === _.room || i.type === _.kefu) {
            if (n) {
                n.visible = false
            }
            if (a) {
                a.visible = false
            }
            if (r) {
                r.visible = false
            }
            if (!e.getChildByName("kefuRoom")) {
                var o = new Laya.Image;
                o.name = "kefuRoom";
                o.anchorX = .5;
                o.anchorY = .5;
                o.centerX = 0;
                o.centerY = 0;
                if (i.type === _.room) {
                    o.skin = "resource/chatSystem/zi_room.png"
                } else {
                    o.skin = "resource/chatSystem/zi_kefu.png"
                }
                e.addChild(o);
                o = null
            } else {
                if (i.type === _.room) {
                    e.getChildByName("kefuRoom").skin = "resource/chatSystem/zi_room.png"
                } else {
                    e.getChildByName("kefuRoom").skin = "resource/chatSystem/zi_kefu.png"
                }
            }
        } else {
            if (e.getChildByName("kefuRoom") && e.getChildByName("kefuRoom").visible) {
                e.getChildByName("kefuRoom").visible = false
            }
            if (i.AvatarUrl) {
                n.getChildByName("userHeadImg").skin = i.AvatarUrl
            } else if (i.AvatarID) {
                n.getChildByName("userHeadImg").skin = "resource/head/" + i.AvatarID + ".png"
            } else {
                n.getChildByName("userHeadImg").skin = "resource/head/1.png"
            }
            a.text = i.Nick;
            r.skin = "resource/icon/vipLevel/vip" + i.VipLevel + ".png";
            n.visible = true;
            a.visible = true;
            r.visible = true
        }
        this.friendsListSelect()
    };
    h.friendsListSelect = function() {
        var e = this.friendsList;
        var t = e.selectedItem;
        if (p) {
            p.getChildByName("bg").skin = "resource/chatSystem/bar_haoyou.png"
        }
        p = this.friendsList.selection;
        p.getChildByName("bg").skin = "resource/chatSystem/bar_haoyou_sel.png";
        if (p.getChildByName("redMark").visible) {
            p.getChildByName("redMark").visible = false;
            t.isRead = 1
        }
        m = t.type;
        switch (t.type) {
        case 1:
            var i = s.get();
            this.setChatListDataFun(i);
            this.btnQuickChat.visible = true;
            this.btnBQ.visible = true;
            if (Player.openChat()) {
                this.horn.visible = true
            }
            break;
        case 2:
        case 3:
            Request.UpdateCustomerServiveChatReq();
            var n = o.get();
            this.btnQuickChat.visible = false;
            this.btnBQ.visible = false;
            this.qucikChatBox.visible = false;
            this.horn.visible = false;
            this.emjoysBox.visible = false;
            this.setChatListDataFun(n);
            break
        }
    };
    h.friendsListFun = function() {};
    h.updateRightMsgList = function() {};
    h.setChatListDataFun = function(e) {
        var t = this.chatLists;
        if (!e || e.length <= 0) {
            t.visible = false;
            return false
        }
        t.visible = true;
        t.array = e;
        t.scrollBar.value = t.scrollBar.max
    };
    h.chatListRender = function(e, t) {
        var i = e.dataSource;
        var n = e.getChildByName("vipLe"),
        s = e.getChildByName("userHead"),
        a = e.getChildByName("sex"),
        r = e.getChildByName("chatDesImg"),
        o = e.getChildByName("btnAddFri"),
        l = e.getChildByName("btnShield"),
        h = e.getChildByName("roomnName"),
        u = e.getChildByName("chatDes");
        u.autoSize = true;
        if (!i.ChatHeadimg) {
            if (i.AvatarID) {
                s.getChildByName("userHeadImg").skin = "resource/head/" + i.AvatarID + ".png"
            } else if (i.ChatAvatar) {
                s.getChildByName("userHeadImg").skin = "resource/head/" + i.ChatAvatar + ".png"
            } else {
                s.getChildByName("userHeadImg").skin = "resource/head/1.png"
            }
        } else {
            s.getChildByName("userHeadImg").skin = i.ChatHeadimg
        }
        a.skin = "resource/common/" + (i.Sex == 1 ? "icn-men": "icn-women") + ".png";
        if (m === _.kefu) {
            if (i.isSelf === 0) {
                n.visible = false;
                a.visible = false;
                h.text = "官方客服";
                h.x = 74;
                n.skin = ""
            } else {
                n.visible = true;
                a.visible = true;
                h.text = i.ChatNick || "";
                h.x = 238;
                n.skin = "resource/icon/vipLevel/vip" + i.VipLevel + ".png"
            }
        } else {
            n.visible = true;
            a.visible = true;
            h.text = i.ChatNick || "";
            n.skin = "resource/icon/vipLevel/vip" + i.VipLevel + ".png"
        }
        if (i.isSelf) {
            s.x = 550;
            n.x = 550;
            h.x = 295;
            h.align = "right";
            h.width = 190;
            a.x = 500;
            r.skewY = 180;
            r.x = 514;
            u.anchorX = 1;
            u.x = 494;
            o.visible = false;
            l.visible = false
        } else {
            s.x = 33;
            n.x = 34;
            h.x = 92;
            h.align = "left";
            a.x = 76;
            r.skewY = 0;
            r.x = 68;
            u.anchorX = 0;
            u.x = 90
        }
        if (m === _.friends || m === _.kefu) {
            o.visible = false;
            l.visible = false
        }
        var c = I(i.ChatContent);
        u.width = undefined;
        u.autoSize = true;
        if (c) {
            switch (c.type) {
            case 1:
                u.wordWrap = false;
                if (c.Id) {
                    var f = GameConfig.getShortcut(c.Id);
                    u.text = f || ""
                }
                r.width = u.width + 40;
                if (r.getChildByName("bqImg")) {
                    r.getChildByName("bqImg").removeSelf()
                }
                r.height = 40;
                u.visible = true;
                break;
            case 2:
                if (c.Id) {
                    u.visible = false;
                    var d = null;
                    d = r.getChildByName("bqImg");
                    if (d) {
                        d.removeSelf()
                    }
                    var g = new Laya.Image;
                    g.name = "bqImg";
                    g.skin = "resource/chatSystem/emjoy_" + c.Id + ".png";
                    g.anchorX = .5;
                    g.anchorY = .5;
                    g.centerY = 0;
                    g.centerX = 0;
                    r.width = 74;
                    r.height = 64;
                    r.addChild(g);
                    g = null
                }
                break;
            case 3:
                if (c.msg) {
                    u.text = c.msg || ""
                }
                r.width = u.width + 40;
                if (r.getChildByName("bqImg")) {
                    r.getChildByName("bqImg").removeSelf()
                }
                u.visible = true;
                var p = u.text.charLength();
                if (p >= 54) {
                    u.leading = 3;
                    r.width = 505;
                    r.height = (Math.floor(p / 54) + 1) * 30;
                    u.width = 480;
                    u.wordWrap = true
                } else {
                    u.leading = 3;
                    r.height = 40;
                    r.width = u.width + 40;
                    u.wordWrap = false
                }
                break
            }
            if (r.width < 52) {
                r.width = 52
            }
        }
    };
    h.chatOperateFun = function(e, t) {
        if (t && t.UserId) {
            if (e === 1) {
                Request.FriendsActionReq(1, t.UserId)
            } else if (e === 5) {
                Request.FriendsActionReq(5, t.UserId)
            }
        }
    };
    h.btnQuickChatFun = function() {
        var e = this.qucikChatBox;
        e.visible = !e.visible;
        if (e.visible) {
            if (this.emjoysBox.visible) {
                this.emjoysBox.visible = false
            }
            this.quickChatListFun()
        }
    };
    h.quickChatListFun = function() {
        e = GameConfig.getShortcut();
        if (!e || e.length <= 0) {
            return false
        }
        if (Game.debug) {
            console.log(e)
        }
        this.quickChatList.array = e
    };
    h.quickChatClick = function(e) {
        var t = e.target.dataSource;
        this.sendMsgFun(1, t.Id || 1);
        this.qucikChatBox.visible = false
    };
    h.quickChatRender = function(e, t) {
        e.off(Laya.Event.CLICK, this, this.quickChatClick);
        e.on(Laya.Event.CLICK, this, this.quickChatClick)
    };
    h.btnBQFun = function() {
        var e = this.emjoysBox;
        e.visible = !e.visible;
        if (e.visible) {
            if (this.qucikChatBox.visible) {
                this.qucikChatBox.visible = false
            }
            this.emjoyListFun()
        }
    };
    h.emjoyListFun = function() {
        this.emjoyList.array = t
    };
    h.emjoyClick = function(e) {
        var t = e.target.dataSource;
        this.emjoysBox.visible = false;
        this.sendMsgFun(2, t.Id || 1)
    };
    h.emjoyRender = function(e, t) {
        e.off(Laya.Event.CLICK, this, this.emjoyClick);
        e.on(Laya.Event.CLICK, this, this.emjoyClick)
    };
    h.sendMsgFun = function(e, t) {
        var i = this.formatSendMsg(e, t);
        this.sendMsgByType(i)
    };
    h.sendMsgByType = function(e) {
        if (!e) {
            e = ""
        }
        switch (m) {
        case 1:
            if (Game.debug && Utils.getUrlParam("GM")) {
                Request.worldChatReq(1, e);
                return
            }
            Request.RoomChatReq(1, e);
            break;
        case 2:
            if (p && p.dataSource && p.dataSource.UserId) {
                Request.ChatPersonalReq(p.dataSource.UserId, e)
            }
            break;
        case 3:
            Request.CustomerServiceChatReq(e);
            break
        }
    };
    h.formatSendMsg = function(e, t) {
        var i = undefined;
        switch (e) {
        case 1:
            if (isNaN(t)) {
                i = ""
            } else {
                i = "{-" + t + "-}"
            }
            break;
        case 2:
            if (isNaN(t)) {
                i = ""
            } else {
                i = "{{" + t + "}}"
            }
            break;
        case 3:
            i = t || "";
            break
        }
        return i
    };
    h.redPointFun = function() {};
    h.setFriendsChat = function(e, t) {
        var i = null;
        if (e.UserId == Player.getUserId()) {
            i = y[p.dataSource.UserId]
        } else {
            i = y[e.UserId];
            if (!i) {
                i = y[e.UserId] = []
            }
            var n = false;
            for (var s = 0,
            a = v.length; s < a; s++) {
                var r = v[s];
                if (r.UserId && r.UserId === e.UserId) {
                    n = true;
                    break
                } else {
                    n = false
                }
            }
            if (!n) {
                var o = v.length;
                var l = {};
                for (var h in e) {
                    l[h] = e[h]
                }
                l.type = 2;
                l.isRead = 0;
                l.sort = o;
                v.push(l)
            }
            v.sort(function(e, t) {
                return e.sort - t.sort
            })
        }
        if (t) {
            if (i.length >= _.maxRecord) {
                i.shift();
                i.push(t);
                this.setChatListDataFun(i)
            } else {
                i.push(t);
                this.setChatListDataFun(i)
            }
            this.friendsList.array = v
        } else {
            var u = undefined;
            for (var s = 0,
            a = v.length; s < a; s++) {
                if (v[s].UserId == e.UserId) {
                    u = s;
                    break
                }
            }
            this.friendsList.array = v;
            if (u) {
                this.friendsList.selectedIndex = u
            }
        }
    };
    h.display = function() {
        a.start()
    };
    h.onClosed = function() {
        BaseDialog.prototype.onClosed.call(this);
        this.reset();
        a.stop()
    };
    h.reset = function() {
        g = null
    };
    return {
        init: function(e) {
            c = e
        },
        show: function(t) {
            Waiting.show();
            WinUtils.showDialog(RES.loadTaskList.chatSystem, r,
            function(e) {
                e.isClearRes = false;
                Request.CustomerServiceChatListReq();
                g = e;
                if (t) {
                    g.setFriendsChat(t)
                }
                g.checkRoomChat();
                g.popup();
                Waiting.hide()
            })
        },
        hide: function() {
            g && g.close()
        },
        CustomerServiceChatRep: function(e) {
            if (e && e.Tag && e.ChatMsg) {
                var t = {
                    isSelf: 1,
                    ChatContent: e.ChatMsg,
                    UserId: Player.getUserId(),
                    VipLevel: Player.getVipLevel(),
                    ChatNick: Utils.nickBylen(Player.getNick()),
                    Sex: Player.getSex()
                };
                if (!Player.getAvatarUrl()) {
                    t.ChatHeadimg = "resource/head/1.png"
                } else {
                    t.ChatHeadimg = Player.getAvatarUrl()
                }
                o.push(t);
                if (m === _.kefu) {} else {
                    l(_.kefu)
                }
            }
        },
        BrowserSendMessageToClientRep: function(e) {
            if (Game.debug) {
                console.log(e)
            }
            if (e.Tag && e.ChatMsg) {
                o.push({
                    isSelf: 0,
                    ChatContent: e.ChatMsg
                });
                if (m !== _.kefu) {
                    l(_.kefu)
                }
            }
        },
        UpdateCustomerServiveChatRep: function(e) {},
        CustomerServiceChatListRep: function(e) {
            if (e.Tag && e.List && e.List.length > 0) {
                for (var t = 0,
                i = e.List.length; t < i; t++) {
                    var n = e.List[t];
                    var s = {
                        isSelf: 0,
                        ChatContent: n.ChatMsg
                    };
                    o.push(s)
                }
                if (m !== _.kefu) {
                    l(_.kefu)
                }
            }
            var a = {
                isSelf: 0
            };
            if (e.FirstChatRewardStatus == 0) {
                a.ChatContent = GameConfig.ErrorMsg.clientErrorMsg(10150)
            } else {
                a.ChatContent = GameConfig.ErrorMsg.clientErrorMsg(10151)
            }
            var r = o.get();
            if (r.length == 0 || r[r.length - 1].ChatContent != a.ChatContent) o.push(a)
        },
        RoomChatRep: function(e) {
            if (Game.debug) {
                console.log(e)
            }
            n(e);
            e.isSelf = e.UserId === Player.getUserId() ? 1 : 0;
            e.AvatarID = e.ChatAvatar;
            s.push(e);
            if (m !== _.room) {
                l(_.room)
            }
        },
        clearRoomData: function() {
            s.clear()
        },
        clearAllChatData: function() {
            s.clear();
            o.clear();
            v = [{
                type: 1,
                sort: 0
            },
            {
                type: 3,
                isRead: 1,
                sort: 1
            }];
            y = {}
        },
        ChatPersonalRep: function(e) {
            if (Game.debug) {
                console.log(e)
            }
            if (e.Tag) {
                var t = {
                    AvatarUrl: e.StartHeadImg || "",
                    AvatarID: e.StartAvatarId || 1,
                    Nick: e.StartNick || "",
                    Sex: 1,
                    UserId: e.StartUserID || "",
                    VipLevel: e.StartVip || 0
                };
                var i = {
                    ChatHeadimg: e.StartHeadImg || "",
                    AvatarID: e.StartAvatarId || 1,
                    ChatNick: e.StartNick || "",
                    Sex: 1,
                    UserId: e.StartUserID,
                    VipLevel: e.StartVip,
                    ChatContent: e.ChatMsg
                };
                if (Player.getUserId() != e.StartUserID) {
                    i.isSelf = 0
                } else {
                    i.isSelf = 1
                }
                if (g) {
                    g.setFriendsChat(t, i)
                } else {
                    var n = null;
                    var s = t;
                    var a = i;
                    if (s.UserId == Player.getUserId()) {
                        n = y[p.dataSource.UserId]
                    } else {
                        n = y[s.UserId];
                        if (!n) {
                            n = y[s.UserId] = []
                        }
                        var r = false;
                        var o = undefined;
                        for (var l = 0,
                        h = v.length; l < h; l++) {
                            var u = v[l];
                            if (u.UserId && u.UserId === s.UserId) {
                                r = true;
                                o = l;
                                break
                            } else {
                                r = false
                            }
                        }
                        if (!r) {
                            var c = v.length;
                            var f = {};
                            for (var d in s) {
                                f[d] = s[d]
                            }
                            f.type = 2;
                            f.isRead = 0;
                            f.sort = c;
                            v.push(f)
                        } else if (o || o == 0) {
                            if (v[o]) {
                                v[o].isRead = 0
                            }
                        }
                        v.sort(function(e, t) {
                            return e.sort - t.sort
                        })
                    }
                    if (a) {
                        if (n.length >= _.maxRecord) {
                            n.shift();
                            n.push(a);
                            if (g) {
                                g.setChatListDataFun(n)
                            }
                        } else {
                            n.push(a);
                            if (g) {
                                g.setChatListDataFun(n)
                            }
                        }
                    }
                }
                if (Game.state.get() > 0 && !g) {
                    FishScene.chatRedPointFun(true);
                    FishScene.noticeFriendChatMsg(e.TargetUserID)
                }
            } else if (e.MsgID) {
                MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgID))
            }
        },
        FriendsActionRep: function(e) {
            if (g && e.Tag && e.Type === 5) {}
        }
    }
} ();
var PackageGift2 = function() {
    var t = null;
    function i() {
        i.super(this)
    }
    Laya.class(i, "PackageGift2Fun", PackageGift2UI, "");
    var e = i.prototype;
    e.init = function(e) {
        this.userInfo = e;
        this.giftLists.scrollBar.hide = true;
        this.giftLists.selectHandler = new Laya.Handler(this, this.selsectFun)
    };
    e.getListRep = function(e) {
        var t = [];
        for (var i = 0,
        n = e.length; i < n; i++) {
            var s = e[i];
            var a = GameConfig.Item.getItemInfoById(s.ItemId);
            if (a) {
                if (a.AllowGive) {
                    var r = {};
                    r.ItemId = s.ItemId;
                    r.ItemName = a.ItemName;
                    r.itemIcon = {
                        skin: a.skin
                    };
                    r.itemNum = {
                        value: s.ItemNum
                    };
                    r.itemBg = {
                        skin: Utils.getItemIconBgSkin(a.FrameLevel)
                    };
                    r.level = a.FrameLevel;
                    r.name = a.ItemName;
                    r.GroupNum = a.GroupNum;
                    r.skin = a.skin;
                    r.num = s.ItemNum;
                    t.push(r)
                }
            }
        }
        this.giftLists.array = t
    };
    e.selsectFun = function() {
        var e = this;
        var t = this.giftLists.selectedItem;
        if (t) {
            if (t.num < t.GroupNum) {
                MsgToast.show("此道具最低赠送" + t.GroupNum + "个。");
                return false
            }
        }
        if (Player.getIfBindingPhone() === 1) {
            if (Player.getPhone()) {
                PackageGift.show(t, e.userInfo)
            } else {
                PhoneBinding.show()
            }
        } else {
            PackageGift.show(t, e.userInfo)
        }
        this.giftLists.selectedIndex = -1
    };
    e.onClosed = function() {
        BaseDialog.prototype.onClosed.call(this);
        this.reset()
    };
    e.reset = function() {
        t = null
    };
    return {
        show: function(e) {
            Waiting.show();
            Resource.load(RES.loadTaskList.package,
            function() {
                Request.package.getListReq();
                if (!t) {
                    t = new i;
                    t.init(e)
                }
                Waiting.hide();
                t.popup()
            })
        },
        hide: function() {
            t && t.close()
        },
        getListRep: function(e) {
            if (t && e.BagList && e.BagList.length > 0) {
                t.getListRep(e.BagList)
            }
        }
    }
} ();
var EnterRoom = function() {
    var t = null;
    var n = null;
    function i() {
        i.super(this)
    }
    Laya.class(i, "EnterRoomFun", EnterRoomUI, "");
    var e = i.prototype;
    e.init = function() {
        this.btnEnterRoom.clickHandler = new Laya.Handler(this, this.enterRoomFun);
        if (n) {
            if (n.roomName) {
                var e = "";
                if (n.roomName.length > 9) {
                    var t = n.roomName.substr(0, 7);
                    e = t + "..."
                } else {
                    e = n.roomName
                }
                this.roomName.text = e || "";
                this.deFangJian.x = this.roomName.width + this.roomName.x + 10
            }
        }
    };
    e.enterRoomFun = function() {
        var e = /^\d{4}$/;
        var t = this.roomPwd.text;
        if (!e.test(t)) {
            MsgToast.show(GameConfig.ErrorMsg.clientErrorMsg(10076));
            return false
        }
        if (n) {
            var i = "1" + t;
            Request.EnterTableReq(n.id, n.roomName, i * 1)
        }
    };
    e.onClosed = function() {
        BaseDialog.prototype.onClosed.call(this);
        this.reset()
    };
    e.reset = function() {
        t = null;
        n = null
    };
    return {
        show: function(e) {
            n = e;
            if (!t) {
                t = new i;
                t.init()
            }
            t.popup()
        },
        hide: function() {
            t && t.close()
        }
    }
} ();
var CreateRoom = function() {
    var e = null;
    function t() {
        t.super(this)
    }
    Laya.class(t, "CreateRoomFun", CreateRoomUI, "");
    var i = t.prototype;
    i.init = function() {
        this.btnCreate.clickHandler = new Laya.Handler(this, this.createRoomFun);
        this.roomName.text = Utils.nickBylen(Player.getNick()) || "";
        var e = Player.getCreateRoomVipLevel();
        if (e) {
            this.msgText.text = "需要贵族" + e + "才可以创建房间哦！"
        }
    };
    i.createRoomFun = function() {
        var e = this.roomName.text,
        t = this.roomPwd.text;
        var i = /^\d{4}$/;
        if (e === "") {
            MsgToast.show(GameConfig.ErrorMsg.clientErrorMsg(10075));
            return false
        }
        if (!i.test(t)) {
            MsgToast.show(GameConfig.ErrorMsg.clientErrorMsg(10076));
            return false
        }
        var n = "1" + t;
        Request.EnterTableReq(0, e, n * 1)
    };
    i.onClosed = function() {
        BaseDialog.prototype.onClosed.call(this);
        this.reset()
    };
    i.reset = function() {
        e = null
    };
    return {
        show: function() {
            if (!e) {
                e = new t;
                e.init()
            }
            e.popup()
        },
        hide: function() {
            e && e.close()
        }
    }
} ();
var VipNoticeBox = function() {
    var n = null;
    function e() {
        e.super(this)
    }
    Laya.class(e, "VipNoticeBoxFun", VipNoticeBoxUI, "");
    var t = e.prototype;
    t.init = function() {
        this.btnSure.clickHandler = new Laya.Handler(this,
        function() {
            this.close()
        })
    };
    t.updateUi = function(e, t) {
        var i = "";
        if (e) {
            i = "贵族" + e
        } else {
            i = "贵族0"
        }
        this.vipLevel.text = i;
        if (t) {
            this.notEnough.text = "您的金币不足" + t;
            this.getEnough.text = "系统自动补至" + t
        } else {
            this.notEnough.text = "您的金币不足0";
            this.getEnough.text = "系统自动补至0"
        }
    };
    t.onClosed = function() {
        BaseDialog.prototype.onClosed.call(this);
        this.reset()
    };
    t.reset = function() {
        n = null
    };
    return {
        show: function(t, i) {
            Resource.checkLoaded = false;
            WinUtils.showDialog(RES.loadTaskList.noticeBox, e,
            function(e) {
                n = e;
                n.updateUi(t, i);
                n.popup()
            })
        },
        hide: function() {
            n && n.close()
        }
    }
} ();
var WXAuthorize = function() {
    var s = null;
    var t = function() {
        wx.getSetting({
            success: function(e) {
                var t = e.authSetting;
                if (t["scope.userInfo"] === true) {
                    console.log("1_2");
                    i()
                } else if (t["scope.userInfo"] === false) {
                    wx.openSetting({
                        success: function(e) {
                            console.log("1_3");
                            var t = e.authSetting;
                            if (t && t["scope.userInfo"]) {
                                console.log("1_4");
                                i()
                            } else {
                                n()
                            }
                        },
                        fail: function() {
                            console.log("1_5");
                            n()
                        }
                    })
                } else {
                    console.log("1_6");
                    wx.authorize({
                        scope: "scope.userInfo",
                        success: function() {
                            i()
                        },
                        fail: function(e) {
                            n()
                        }
                    })
                }
            },
            fail: function() {
                n();
                console.log("log---:   wx.getSetting fail");
                Waiting.hide();
                var e = {
                    user_id: "",
                    code: 0,
                    msg: "wx.getSetting -> fail"
                };
                Ajax(Game.reportErrMsgUrl, e, "get")
            }
        })
    };
    var i = function() {
        n();
        wx.getUserInfo({
            openIdList: ["selfOpenId"],
            success: function(e) {
                console.log("log: getUserInfo-> success");
                console.log(e);
                ActionReport.addLog(ActionReport.actionIndex.wxGetUserInfo);
                var t = e.userInfo;
                if (t) {
                    Player.setSex(t.gender);
                    Player.setProvince(t.province);
                    Player.setCity(t.city);
                    Request.SaveUserExtDataReq(Player.getSex(), Player.getProvince(), Player.getCity());
                    GameCenter.setHeadTip();
                    Request.BindThirdReq({
                        HeadImg: t.avatarUrl,
                        Nick: t.nickName
                    })
                }
            },
            fail: function(e) {
                console.log("log: getUserInfo-> fail");
                console.log(e);
                var t = {
                    user_id: "",
                    code: 0,
                    msg: "wx.getUserInfo -> fail"
                };
                Ajax(Game.reportErrMsgUrl, t, "get")
            }
        })
    };
    var a = function() {
        wx.login({
            success: function(e) {
                t()
            },
            fail: function() {
                console.log("log  wx.login ->fail");
                var e = {
                    user_id: "",
                    code: 0,
                    msg: "wx.login -> fail"
                };
                Ajax(Game.reportErrMsgUrl, e, "get")
            }
        })
    };
    var e = function() {
        if (s) {
            return
        }
        var t = false;
        var e = Laya.Browser.clientWidth;
        var i = Laya.Browser.clientHeight;
        var n = 0;
        i = Laya.Browser.clientHeight / 2;
        n = i;
        s = wx.createUserInfoButton({
            type: "text",
            text: "",
            image: "",
            style: {
                left: 0,
                top: n,
                width: e,
                height: i
            }
        });
        s.onTap(function(e) {
            console.log("wxUserInfoBtn.onTap");
            console.log(e);
            if (!t) {
                t = true;
                ActionReport.report(ActionReport.actionIndex.OnTapStartGameBtn);
                a();
                u.close();
                Laya.timer.once(500, this,
                function() {
                    t = false
                })
            }
        });
        s.show()
    };
    var n = function() {
        if (s) {
            s.hide();
            s.destroy();
            s = null
        }
    };
    var r = function() {
        swan.getSetting({
            success: function(e) {
                var t = e.authSetting;
                if (t["scope.userInfo"]) {
                    o()
                } else {
                    l()
                }
            },
            fail: function() {
                console.log("log---:   wx.getSetting fail");
                Waiting.hide();
                l();
                var e = {
                    user_id: "",
                    code: 0,
                    msg: "wx.getSetting -> fail"
                };
                Ajax(Game.reportErrMsgUrl, e, "get")
            }
        })
    };
    var o = function(e) {
        swan.getUserInfo({
            swanIdList: ["selfSwanId"],
            success: function(e) {
                var t = e.data;
                if (t) {
                    Player.setSex(t.gender);
                    Request.BindBaiduReq({
                        HeadImg: t.avatarUrl,
                        Nick: t.nickName
                    })
                }
            },
            fail: function() {}
        })
    };
    var l = function() {
        swan.authorize({
            scope: "scope.userInfo",
            success: function() {
                o()
            },
            fail: function() {
                var e = MessageBox.show("用户已拒绝授权,将退出游戏!");
                e.submitCall = function() {
                    swan.exit()
                };
                e.closeCall = function() {
                    swan.exit()
                }
            }
        })
    };
    var h = wxAuthorizeUI.prototype;
    h.onClosed = function() {
        BaseDialog.prototype.onClosed.call(this);
        PersonalCenter.show();
        n()
    };
    var u = null;
    var c = {
        show: function() {
            Waiting.show();
            Resource.load(RES.loadTaskList.wxAuth,
            function() {
                u = new wxAuthorizeUI;
                u.popup();
                Waiting.hide();
                if (Game.onMiniGame) {
                    e()
                } else {
                    u.btnAuth.clickHandler = new Laya.Handler(this,
                    function() {
                        if (Game.onBaiDuGame) {
                            if (u) {
                                u.close()
                            }
                            r()
                        }
                    })
                }
            })
        },
        unAuth: function() {
            if (Game.onMiniGame) {
                if (Game.onByteBeat) {
                    return false
                }
                return ! Player.BindWeChat()
            } else {
                return false
            }
        }
    };
    return c
} ();
var PigBank = function() {
    var e = PigBankUI.prototype;
    e.init = function() {
        var e = Player.getBankState();
        console.log(e);
        var t = Player.getBankMoney();
        this.fc_money.value = "x" + t;
        this.updateState(e);
        var i = Player.getVipLevel();
        this.fc_vip.value = i;
        if (i < 10) {
            var n = GameConfig.getVipInfoByLevel(i);
            if (n) {
                this.fc_1.value = "x" + n.BankNum
            }
            var s = GameConfig.getVipInfoByLevel(i + 1);
            this.tip_vip.text = "成为贵族" + (i * 1 + 1) + "最多可领";
            if (s) {
                this.fc_2.value = "x" + s.BankNum
            }
        } else {
            var n = GameConfig.getVipInfoByLevel(i);
            if (n) {
                this.fc_1.value = "x" + n.BankNum
            }
            this.tip_vip.visible = false;
            this.fc_2.visible = false;
            this.tip_1.y = 150;
            this.fc_1.y = 178
        }
        if (e < 2) {
            this.btnGet.clickHandler = new Laya.Handler(this,
            function() {
                var e = Player.getBankState();
                if (e == 0) {
                    Request.GetBankPrizeReq()
                } else if (e == 1) {
                    if (Game.onMiniGame || Channel && Channel.showVideo) {
                        if (Channel && Channel.showVideo) {
                            Channel.showVideo(null,
                            function(e) {
                                if (e) {
                                    Request.GetBankPrizeReq()
                                }
                            })
                        } else {
                            RewardedVideoAd.show(null,
                            function(e) {
                                if (e) {
                                    Request.GetBankPrizeReq()
                                }
                            })
                        }
                    }
                }
            })
        }
        if (Game.onMiniGame && Game.isIOS) {
            this.btnShop.visible = false
        } else {
            this.btnShop.clickHandler = new Laya.Handler(this,
            function() {
                ShopMall.show();
                this.close()
            })
        }
    };
    e.updateState = function(e) {
        if (e == 1) {
            this.btnGet.skin = "resource/pigBank/btn_lingqu.png";
            this.btnIcon.skin = "resource/pigBank/zi_zailingyici.png"
        } else if (e == 2) {
            this.btnGet.skin = "resource/pigBank/btn_mingri.png";
            this.btnIcon.skin = "resource/pigBank/zi_mingri.png"
        }
    };
    e.onOpened = function() {
        t.opened && t.opened()
    };
    e.onClosed = function() {
        BaseDialog.prototype.onClosed.call(this);
        t.closed && t.closed();
        i = null
    };
    e.reset = function() {
        i = null
    };
    var i = null;
    var t = {
        opened: null,
        closed: null,
        show: function(e) {
            WinUtils.showDialog(RES.loadTaskList.pigBank, PigBankUI,
            function(e) {
                i = e;
                Waiting.hide();
                i.popup()
            });
            ActionEventReport.report(ActionEventReport.actionIndex.ID1070, {
                t: e ? 0 : 1
            })
        },
        GetBankPrizeRep: function(e, t) {
            console.log(t);
            if (e) {
                GetReward.show("", "1:" + e)
            }
            if (! (Game.onMiniGame || Channel && Channel.showVideo) && t == 1) {
                t == 2
            }
            Player.setBankState(t);
            Request.GetRedPointReq();
            if (i) {
                i.fc_money.value = "x0";
                i.updateState(t)
            }
        },
        BankViewVideoRep: function(e) {
            var t = Player.getBankState() * 1 + 1;
            Player.setBankState(t);
            if (i) {
                if (e) {
                    i.fc_money.value = "x" + e
                }
                i.updateState(t)
            }
            if (e) {
                Player.setBankMoney(e)
            }
        }
    };
    return t
} ();
var SpecialGiftDialog = function() {
    function e() {
        e.super(this)
    }
    Laya.class(e, "SpecialGiftDialog", SpecialGiftDialogUI, "");
    e.prototype.onClosed = function(e) {
        BaseDialog.prototype.onClosed.call(this, e);
        EventBus.off(EventConfig.GAME_CENTER.SPECIAL_GIFT_BUY, this, this.buyCall);
        this.closeCall && this.closeCall(e);
        this.timer.clearAll(this)
    };
    e.prototype.buyCall = function(e) {
        if (e) {
            this.close()
        } else {}
    };
    e.show = function(t) {
        WinUtils.showDialog(RES.specialGift, e,
        function(e) {
            e.closeCall = t;
            e.contentView.init();
            e.popup()
        })
    };
    return e
} ();
var QRDownload = function() {
    var e = null;
    var t = QRDownloadUI.prototype;
    t.init = function() {
        if (Channel) {
            var e = Game.domain + "static/QRCode/" + Channel.cfg.cps + ".png";
            this.QRImage.skin = e;
            this.QRImage.size(235, 235)
        }
        this.on(Laya.Event.CLICK, this, this.clickFun)
    };
    t.clickFun = function(e) {
        if (e.target) {
            if (e.target.name == "close") {
                this.close()
            }
        }
    };
    t.onClosed = function() {
        i.closed && i.closed();
        this.destroy();
        BaseDialog.prototype.onClosed.call(this);
        e = null
    };
    t.reset = function() {
        this.close();
        e = null
    };
    var i = {
        show: function() {
            if (!e) {
                e = new QRDownloadUI;
                e.init()
            }
            e.popup()
        }
    };
    return i
} ();
var NewPlayerGift = function() {
    var a = null;
    var i = [];
    var n = null;
    var s = -1;
    var r = 0;
    var e = "NewPlayerGiftFun";
    function o() {
        o.super(this);
        this.isClearRes = true
    }
    Laya.class(o, "NewPlayerGiftFun", NewPlayerGiftUI, "");
    var t = o.prototype;
    t.init = function() {
        if (Player.getNewSevenDay()) {
            i = Player.getNewSevenDay()
        }
        var e = this.getListArray(GameConfig.getNewPlayerGift(), i);
        this.gift_list.array = e;
        this.gift_list.selectEnable = true;
        this.gift_list.selectHandler = new Laya.Handler(this, this.onSelect);
        r = this.getSelectedIndex();
        if (r >= 1) {
            if (r >= 7) {
                s = 6;
                this.final_prize_choose.visible = true
            } else {
                this.final_prize_choose.visible = false;
                s = r - 1;
                if (n) {
                    n.getChildByName("np_choose").visible = false
                }
                n = this.gift_list.getCell(s);
                n.getChildByName("np_choose").visible = true
            }
        }
        this.setGrayItem(i);
        if (GameConfig.getNewPlayerGift().length >= 7 && GameConfig.getNewPlayerGift()[6].Reward && GameConfig.getNewPlayerGift()[6].Reward.indexOf(":") > 0) {
            var t = GameConfig.getNewPlayerGift()[6].Reward.split(":");
            this.final_prize.skin = "resource/skins/" + t[0] + "/" + t[0] + ".png";
            if (i[6] && i[6] > 0) {
                this.np_final_choose.visible = true;
                this.np_final_choose.skin = "resource/newPlayerGift/img_tip_" + i[6] + ".png"
            }
        }
        this.box_final_prize.on(Laya.Event.CLICK, this,
        function(e) {
            this.final_prize_choose.visible = true;
            s = 6;
            if (n) {
                n.getChildByName("np_choose").visible = false;
                n = null
            }
            if (i[6] && i[6] == "1") {
                Request.GetNewSevenDayRewardReq(6)
            }
        });
        this.btndingyue.visible = false;
        this.btndingyue.on(Laya.Event.CLICK, this,
        function(e) {
            if (DingYue.CanDingYue()) DingYue.show();
            else MsgToast.show("您已经订阅过")
        })
    };
    t.unDisplay = function() {
        this.reset()
    };
    t.getSelectedIndex = function() {
        var e = -1;
        if (i && i.length == 7) {
            for (var t = 0; t < 7; t++) {
                if (i[t] == "0") {
                    return t
                }
            }
        }
        return e
    };
    t.setGrayItem = function(e) {
        if (e && e.length == 7) {
            for (var t = 0; t < 7; t++) {
                if (t == 6) {
                    if (e[6] == "2" || e[6] == "3") {
                        this.box_final_prize.gray = true
                    }
                } else if (e[t] == "2" || e[t] == "3") {
                    this.gift_list.getCell(t).gray = true
                }
            }
        }
    };
    t.onClosed = function() {
        this.removeSelf();
        this.reset()
    };
    t.getListArray = function(e, t) {
        var i = [];
        if (e && e instanceof Array && t.length == 7) {
            for (var n = 0; n < 6; n++) {
                var s = e[n].Reward;
                if (s && s.indexOf(":") > 0) {
                    var a = s.split(":");
                    var r = {
                        np_day: {
                            skin: "resource/newPlayerGift/day_" + (n + 1) + ".png"
                        },
                        np_prize: {
                            skin: "resource/icon/" + a[0] + ".png",
                            scaleX: a[2] ? 1.4 : 1,
                            scaleY: a[2] ? 1.4 : 1
                        },
                        np_take_tip: t[n] == 0 ? {
                            visible: false
                        }: {
                            skin: "resource/newPlayerGift/img_tip_" + t[n] + ".png",
                            visible: true
                        },
                        np_prize_name: {
                            text: GameConfig.Item.getItemInfoById(a[0]).ItemName + "x" + a[1]
                        },
                        prize_time: {
                            value: a[2] ? Utils.LeftTimeFormat2(a[2], false) : ""
                        },
                        np_prize_bg: a[0] == 101 || a[0] == 102 || a[0] == 103 || a[0] == 108 ? {
                            visible: false
                        }: {
                            visible: true
                        }
                    };
                    i.push(r)
                }
            }
        }
        return i
    };
    t.onSelect = function(e) {
        this.final_prize_choose.visible = false;
        s = e;
        if (n) {
            n.getChildByName("np_choose").visible = false
        }
        n = this.gift_list.getCell(e);
        n.getChildByName("np_choose").visible = true;
        if (i[e] == "1") {
            ActionReport.addLog(ActionReport.actionIndex.newPlayerGift_drawPrize);
            Request.GetNewSevenDayRewardReq(e)
        }
    };
    t.getReward = function(e, t) {
        incomeRemind(function() {
            Request.getActPrizeReq(e, t)
        })
    };
    t.reset = function() {
        if (a) {
            a = null;
            i = [];
            n = null;
            s = -1
        }
    };
    t.changeTakeInfo = function(e) {
        Player.getNewSevenDay().splice(e, 1, "2");
        i = Player.getNewSevenDay()
    };
    t.toGetReward = function(e) {
        if (e.Reward && e.Reward.indexOf(":") > 0) {
            var t = [{
                ItemId: e.Reward.split(":")[0],
                ItemNum: e.Reward.split(":")[1]
            }];
            a.changeTakeInfo(s);
            GetReward.show("恭喜您获得", t, false, undefined,
            function() {
                DingYue.show()
            });
            if (n) {
                this.gift_list.array = this.getListArray(GameConfig.getNewPlayerGift(), i);
                n.gray = true
            } else {
                this.np_final_choose.skin = "resource/newPlayerGift/img_tip_2.png";
                this.box_final_prize.gray = true
            }
            GameCenter.checkSevenDayRedpoint();
            FishScene.checkSevenDayRedpoint()
        }
    };
    return {
        show: function(e) {
            if (GameConfig.getNewPlayerGift()[6]) {
                var t = GameConfig.getNewPlayerGift()[6];
                if (t.Reward && t.Reward.indexOf(":") > 0) {
                    var i = [];
                    var n = t.Reward.split(":");
                    var s = "res/atlas/resource/skins/" + n[0] + ".atlas";
                    i = RES.loadTaskList.newPlayerGift;
                    i.push(s);
                    WinUtils.showDialog(i, o,
                    function(e) {
                        a = e;
                        a.popup();
                        Waiting.hide()
                    })
                }
            }
            ActionEventReport.report(ActionEventReport.actionIndex.ID1061, {
                t: e ? 0 : 1
            })
        },
        hide: function() {
            if (a) {
                a.close()
            }
        },
        getReward: function(e) {
            if (a) {
                a.toGetReward(e)
            }
        },
        getTomorrowGift: function() {
            var e = "";
            var t = GameConfig.getNewPlayerGift();
            var i = Player.getNewSevenDay();
            var n = i.indexOf("0");
            if (t && t[n]) {
                e = t[n].Reward
            }
            return e
        }
    }
} ();
var OneMoneyGiftD = function() {
    function e() {
        e.super(this);
        EventBus.on(EventConfig.OneMoneyGift.ONEMONEYGIFT_BUY, this, this.buyCall);
        EventBus.on(EventConfig.OneMoneyGift.ONEMONEYGIFT_SHOW, this, this.showDialog)
    }
    Laya.class(e, "OneMoneyGiftD", OneMoneyGiftUI, "");
    var t = e.prototype;
    t.showDialog = function(e) {
        if (e.KanJiaLiBaoID == -1) {
            this.close();
            return
        }
        this.popup()
    };
    t.buyCall = function(e) {
        if (e) {
            this.close()
        } else {}
    };
    t.onClosed = function() {
        BaseDialog.prototype.onClosed.call(this);
        EventBus.off(EventConfig.OneMoneyGift.ONEMONEYGIFT_BUY, this, this.buyCall);
        EventBus.off(EventConfig.OneMoneyGift.ONEMONEYGIFT_SHOW, this, this.showDialog)
    };
    var i = {};
    i.show = function(t) {
        if (Game.showShare() && GameCenter.getSceneInfo().SvrId != Game.sceneConfig.sceneID.scene_SuperMatch && (Game.onMiniGame && !Game.isIOS)) {} else {
            return
        }
        if (!t) {
            WinUtils.showDialog(RES.oneMoneyGiftDialog, e,
            function(e) {
                Request.KanJiaLiBaoInfoReq()
            })
        } else {
            WinUtils.showDialog(RES.oneMoneyGiftDialog, e,
            function(e) {
                e.popup();
                e.contentView.infoCall(t)
            })
        }
    };
    return i
} ();
var BossShareDialog = function() {
    function t() {
        t.super(this);
        this.setBtClick([this.btnShare, this.btnCheck])
    }
    Laya.class(t, "BossShareDialog", BossShareDialogUI, "");
    t.prototype.init = function() {
        var e = GameConfig.fish.getCfgById(t.shareInfo.type);
        console.log(e);
        this.paobeiText.text = t.shareInfo.paoMu + "倍炮";
        this.paobeiText.text = t.shareInfo.paoMu + "倍炮";
        this.bossDes.text = t.shareInfo.FishMultipleNum + "倍" + e.FishName;
        this.bossIcon.skin = "resource/pokedex/" + t.shareInfo.type + ".png"
    };
    t.prototype.onClick = function(e) {
        switch (e.target) {
        case this.btnShare:
            if (Channel && Channel.forward) {
                Channel.forward("bossShare", undefined, 2, Game.shareBossConfig[t.shareInfo.type + ""])
            }
            break;
        case this.btnCheck:
            this.btnCheck.selected = !this.btnCheck.selected;
            t.isIngore = this.btnCheck.selected;
            break
        }
    };
    t.show = function() {
        WinUtils.showDialog(RES.BossShareDialog.concat("res/atlas/resource/pokedex.atlas"), t,
        function(e) {
            e.isClearRes = false;
            e.popup()
        })
    };
    return t
} ();
var FreeGoldDialog = function() {
    function e() {
        e.super(this);
        this.setBtClick([this.btnGet, this.btnShare]);
        this.qqIcon.visible = Game.onQQ();
        this.wechatIcon.visible = !Game.onQQ() && Game.onMiniGame;
        EventBus.on(EventConfig.FreeGold.FREEGOLD_GETAWARD, this, this.getAwardCall)
    }
    Laya.class(e, "FreeGoldDialog", FreeGoldDialogUI, "");
    var t = e.prototype;
    t.show = function(e) {
        this.serverMsg = e;
        this.btnGet.visible = e.JinBiBaoXiangRewardTimes > 0;
        this.btnShare.visible = e.JinBiBaoXiangShareGet == 0 || e.JinBiBaoXiangRewardTimes == 0;
        this.goldText.value = e.JinBiBaoXiangRewardGold;
        if (e.JinBiBaoXiangShareGet == 0 || e.JinBiBaoXiangRewardTimes > 0) {} else {}
    };
    t.onClosed = function() {
        BaseDialog.prototype.onClosed.call(this);
        EventBus.off(EventConfig.FreeGold.FREEGOLD_GETAWARD, this, this.getAwardCall)
    };
    t.getAwardCall = function(e) {
        if (e.Tag == 1) {
            if (e.IsShare == 0) {
                this.serverMsg.JinBiBaoXiangRewardTimes--
            } else {
                this.serverMsg.JinBiBaoXiangShareGet = 1
            }
            this.show(this.serverMsg);
            EventBus.send(EventConfig.FreeGold.FREEGOLD_SHOW, this.serverMsg)
        }
    };
    t.onClick = function(e) {
        switch (e.target) {
        case this.btnGet:
            Request.JinBiBaoXiangGetReq({
                IsShare:
                this.serverMsg.JinBiBaoXiangRewardTimes > 0 ? 0 : this.serverMsg.JinBiBaoXiangShareGet == 0 ? 1 : 0
            });
            break;
        case this.btnShare:
            if (Channel && Channel.forward) {
                if (this.serverMsg.JinBiBaoXiangShareGet == 0) {
                    Channel.forward("freeGold",
                    function() {
                        Request.JinBiBaoXiangGetReq({
                            IsShare: 1
                        })
                    })
                } else {
                    Channel.forward("freeGold")
                }
            }
            break
        }
    };
    var i = {};
    i.show = function(t) {
        WinUtils.showDialog(RES.FreeGoldDialog, e,
        function(e) {
            e.popup();
            e.show(t)
        })
    };
    return i
} ();
var DingYue = function() {
    var t = null;
    var e = "DingYueFun";
    var i = false;
    function n() {
        n.super(this);
        this.isClearRes = true
    }
    Laya.class(n, e, DingYueUI, "");
    var s = n.prototype;
    s.init = function() {
        if (Game.onMiniGame && wx && wx.onTouchEnd) {
            wx.onTouchEnd(this.onClick)
        } else if (Game.debug) {
            this.btnDingyue.on(Laya.Event.MOUSE_UP, this,
            function(e) {
                Request.WXSubscribeReq(1)
            })
        }
        this.getNum.text = "x" + Player.getWxSubRewardNum()
    };
    s.setItem = function() {
        var e = Player.getNewSevenDay();
        var t;
        if (e && e.length == 7) {
            var i = -1;
            for (var n = 0; n < 7; n++) {
                if (e[n] == "0") {
                    i = n;
                    break
                }
            }
            if (i > -1) {
                var s = GameConfig.getNewPlayerGift();
                var a = s[i].Reward;
                if (a && a.indexOf(":") > 0) {
                    var r = a.split(":");
                    t = {
                        skin: "resource/icon/" + r[0] + ".png",
                        text: GameConfig.Item.getItemInfoById(r[0]).ItemName + "x" + r[1]
                    }
                }
            }
        }
        if (t) {
            this.goods_icon.skin = t.skin;
            this.arrach_num.text = t.text;
            this.sType = 1
        } else {
            Request.GetSignDataReq();
            this.sType = 2
        }
        ActionEventReport.report(ActionEventReport.actionIndex.ID1004, {
            t: this.sType
        })
    };
    s.updateSign = function(e) {
        var t = e.Items;
        var i = e.Week % 7;
        var n = GameConfig.task.loginGiftCfg();
        if (!n) {
            return false
        }
        var s = 0;
        for (var a = 0,
        r = n.length; a < r; a++) {
            var o = n[a];
            for (var l = 0,
            h = t.length; l < h; l++) {
                var u = t[l];
                if (o.Id === u.Id) {
                    o.State = u.State;
                    var c = o.PrizeItem;
                    var f = c.split(":");
                    if (c) {
                        if (o.PrizeType === 1) {
                            if (s == i) {
                                item = {
                                    skin: "resource/icon/" + f[0] + ".png",
                                    text: "x" + f[1]
                                };
                                this.goods_icon.skin = item.skin;
                                this.arrach_num.text = item.text;
                                return
                            }
                            s++
                        }
                    }
                    break
                }
            }
        }
    };
    s.close = function(e, t) {
        if (e != "side") {
            laya.ui.Dialog.prototype.close.call(this, e, t)
        }
    };
    s.onClosed = function() {
        if (Game.onMiniGame && wx && wx.offTouchEnd) {
            wx.offTouchEnd(this.onClick)
        }
        if (!Player.getShowNewSevenDay() && Player.getWxSubStatus() == 0) Request.WXSubscribeReq(2);
        i = true;
        t = null
    };
    s.onClick = function(e) {
        if (Channel && Channel.subscribeMessage) {
            if (e && e.changedTouches && e.changedTouches[0]) {
                var t = e.changedTouches[0].clientX / Laya.Browser.clientWidth * Laya.stage.width;
                var i = e.changedTouches[0].clientY / Laya.Browser.clientHeight * Laya.stage.height;
                if (DingYue.getInstance() && DingYue.getInstance().btnDingyue.hitTestPoint(t, i)) {
                    ActionEventReport.report(ActionEventReport.actionIndex.ID1005, {
                        t: DingYue.getInstance().sType
                    });
                    Channel.subscribeMessage(Player.getWxSubPlaf(Game.DyType.NEW_SEVEN_DAY),
                    function(e) {
                        if (e.code == 1) {
                            Request.WXSubscribeReq(1);
                            ActionEventReport.report(ActionEventReport.actionIndex.ID1006, {
                                t: DingYue.getInstance().sType
                            })
                        } else if (e.code == 2) {
                            Request.WXSubscribeReq(2);
                            ActionEventReport.report(ActionEventReport.actionIndex.ID1007, {
                                t: DingYue.getInstance().sType
                            })
                        } else if (e.code == -1) {
                            MsgToast.show("订阅失败：" + e.errMsg)
                        } else if (e.code == -2) {
                            MsgToast.show("微信版本过低，请升级微信版本")
                        }
                    })
                }
            }
        }
    };
    return {
        show: function() {
            if (DingYue.CanDingYue()) {
                WinUtils.showDialog(["res/atlas/resource/dingyue.atlas", "UIRoot/dialog/DingYue.json"], n,
                function(e) {
                    t = e;
                    t.setItem();
                    t.popup();
                    Waiting.hide()
                })
            }
        },
        CanDingYue: function() {
            return (Game.onMiniGame && !Game.onQQ() || Game.debug) && Player.getWxSubStatus() == 0 && t == null && !i
        },
        GetSignDataRep: function(e) {
            if (e && t) {
                t.updateSign(e)
            }
        },
        close: function() {
            if (t) t.close()
        },
        getInstance: function() {
            return t
        }
    }
} ();
var BankruptGift = function() {
    function e() {
        e.super(this)
    }
    Laya.class(e, "BankruptGift", BankruptGiftUI, "");
    var t = e.prototype;
    t.init = function() {
        this.listData = ["超值1元购", "首充特惠"];
        this.menuList.selectEnable = true;
        this.menuList.selectHandler = new Laya.Handler(this, this.selectList);
        this.menuList.renderHandler = new Laya.Handler(this, this.renderList);
        this.menuList.array = this.listData;
        this.selectIndex = 0;
        this.firstBuyToOneView.show(Player.getFirstGiftOneId());
        this.firstRecharge.init();
        EventBus.on(EventConfig.Recharge.RECHARGE_CLICK_RECHARGE, this, this.close);
        this.setBtClick(this.firstBuyToOneView.btnClose)
    };
    t.onClick = function(e) {
        if (e.target == this.firstBuyToOneView.btnClose) {
            this.close()
        }
    };
    t.selectList = function(e) {
        this.selectIndex = e;
        this.menuList.refresh();
        this.firstRecharge.visible = this.selectIndex == 1;
        this.firstBuyToOneView.visible = this.selectIndex == 0
    };
    t.renderList = function(e, t) {
        var i = e.getChildByName("text");
        i.text = this.listData[t];
        e.label = "";
        if (this.selectIndex == t) {
            e.skin = "resource/common/btn_sel.png";
            e.width = 150;
            i.color = "#8E3302"
        } else {
            e.skin = "resource/common/btn_nor.png";
            i.color = "#FFFFFF";
            e.width = 130
        }
    };
    t.onClosed = function() {
        BaseDialog.prototype.onClosed.call(this);
        EventBus.off(EventConfig.Recharge.RECHARGE_CLICK_RECHARGE, this, this.close)
    };
    e.show = function() {
        WinUtils.showDialog(RES.BankruptGift, e,
        function(e) {
            e.popup()
        })
    };
    return e
} ();
var TeHuiGiftDialog = function() {
    var r = ["resource/tehuiGift/biaoqian_remai.png", "resource/tehuiGift/biaoqian_xiangou.png"];
    function t() {
        t.super(this);
        EventBus.on(EventConfig.TeHui.TeHui_REFRESH_LIST, this, this.refreshList)
    }
    Laya.class(t, "TeHuiGiftDialog", TehuiGiftUI, "");
    var e = t.prototype;
    e.refreshList = function() {
        this.contentBox.removeChildren();
        this.listData = GameConfig.getTeHuiGift();
        this.choiceList.array = this.listData;
        this.choiceList.refresh();
        this.selectIndex = 0;
        this.selectList(0)
    };
    e.init = function() {
        this.viewFun = [FirstRechargeView, FirstBuyToOneView, PlayPackageView, SpecialGiftView, OneMoneyGiftView, LuckyShakeView, Shuang11, WeekCardView];
        this.listData = GameConfig.getTeHuiGift();
        this.choiceList.vScrollBarSkin = "";
        this.choiceList.selectEnable = true;
        this.choiceList.selectHandler = new Laya.Handler(this, this.selectList);
        this.choiceList.renderHandler = new Laya.Handler(this, this.renderList);
        this.choiceList.array = this.listData;
        this.selectIndex = 0;
        this.choiceList.selectedIndex = 0;
        Laya.stage.on(Laya.Event.def_changeShakeTimes, this, this.changeShakeTimes)
    };
    e.selectList = function(e) {
        if (this.selectIndex != e) {
            this.contentBox.removeChildren()
        }
        this.selectIndex = e;
        this.choiceList.refresh();
        this.refreshView(this.listData[e].Type)
    };
    e.refreshView = function(e) {
        if (this.viewFun[e]) {
            if (e == 5) {
                this.viewFun[e].show(this.contentBox, this.scaleView.bind(this, this.selectIndex), this.loadFail.bind(this))
            } else {
                this.viewFun[e].show(this.contentBox, this.scaleView.bind(this, this.selectIndex))
            }
        }
    };
    e.loadFail = function() {
        this.selectList(0)
    };
    e.scaleView = function(e, t) {
        if (this.selectIndex != e) {
            t.removeSelf();
            return
        }
        var i = Math.min(this.contentBox.width / t.width, this.contentBox.height / t.height);
        if (t.getChildByName("close")) t.getChildByName("close").visible = false;
        if (t.getChildByName("btnClose")) t.getChildByName("btnClose").visible = false;
        t.scaleX = i;
        t.scaleY = i;
        var n = (this.contentBox.width - t.width * i) / 2;
        var s = (this.contentBox.height - t.height * i) / 2;
        t.x = n;
        t.y = -s;
        t.TeHui = this.selectIndex + 10
    };
    e.renderList = function(e, t) {
        var i = this.listData[t];
        var n = e.getChildByName("btn");
        var s = n.getChildByName("text");
        s.text = i.ItemName;
        n.label = "";
        n.getChildByName("label").skin = r[i.Label];
        if (i.Type == 5) {
            var a = Player.getShakeTimes();
            e.getChildByName("redPoint").visible = a > 0 ? true: false
        } else {
            e.getChildByName("redPoint").visible = false
        }
        if (this.selectIndex == t) {
            n.skin = "resource/common/btn_sel.png";
            s.color = "#8E3302";
            n.width = 215
        } else {
            n.skin = "resource/common/btn_nor.png";
            s.color = "#FFFFFF";
            n.width = 200
        }
    };
    e.changeShakeTimes = function() {
        this.choiceList.refresh();
        LuckyShakeView.refreshUI()
    };
    e.onClosed = function() {
        BaseDialog.prototype.onClosed.call(this);
        EventBus.off(EventConfig.TeHui.TeHui_REFRESH_LIST, this, this.refreshList);
        Laya.stage.off(Laya.Event.def_changeShakeTimes, this, this.changeShakeTimes);
        t.isShow = false;
        if (!myStorage.getItemWithUserId(myStorage.StorageStaticCode.Storage_TEHUI_ShowRedPoint)) {
            myStorage.setItemWithUserId(myStorage.StorageStaticCode.Storage_TEHUI_ShowRedPoint, true);
            Laya.stage.event(Laya.Event.def_changeShakeTimes)
        }
    };
    t.show = function(e) {
        ActionEventReport.report(ActionEventReport.actionIndex.ID1012, {
            t: e
        });
        WinUtils.showDialog(RES.TeHuiGiftDialog, t,
        function(e) {
            e.popup();
            t.isShow = true
        })
    };
    return t
} ();
var ChongZhiMessageBox = function() {
    function e() {
        e.super(this);
        this.closeCallback = null
    }
    var t = null;
    Laya.class(e, "ChongZhiMessageBoxFn", ChongZhiMessageBoxUI, "");
    var i = e.prototype;
    i.init = function() {
        this.on(Laya.Event.CLICK, this,
        function(e) {
            switch (e.target) {
            case this.btnCheck:
                this.btnCheck.selected = !this.btnCheck.selected;
                var t = 0;
                if (this.btnCheck.selected == true) {
                    t = 1
                }
                Laya.LocalStorage.setItem(Player.getUserId() + myStorage.StorageStaticCode.Storage_ShowChongZhiMessageBos, t);
                break
            }
        })
    };
    i.onClosed = function() {
        n.closed && n.closed();
        this.destroy();
        this.closeCallback && this.closeCallback();
        BaseDialog.prototype.onClosed.call(this);
        t = null
    };
    i.reset = function() {
        this.close();
        t = null
    };
    var n = {
        show: function() {
            if (!t) {
                t = new e;
                t.init()
            }
            t.popup();
            return t
        },
        closed: function() {}
    };
    return n
} ();
var RedPackageGet = function() {
    function e() {
        e.super(this);
        this.setBtClick([this.btnJoin])
    }
    Laya.class(e, "RedPackageGet", RedPackageGetUI);
    var t = e.prototype;
    t.onClick = function() {
        GameCenter.selectNormalScene();
        this.close()
    };
    t.onClosed = function(e) {
        BaseDialog.prototype.onClosed.call(this, e);
        if (e == "side" || e == "close") {
            if (this.closeCall) {
                this.closeCall()
            }
        }
    };
    var i = {};
    i.show = function(t) {
        WinUtils.showDialog(RES.RedPackageGet, e,
        function(e) {
            e.closeCall = t;
            e.popup()
        })
    };
    return i
} ();
var WeekCard = function() {
    var i = null;
    function e() {
        e.super(this);
        this.closeCall = null
    }
    Laya.class(e, "WeekCardFun", WeekCardUI, "");
    var t = e.prototype;
    t.reset = function() {
        this.close();
        if (i) {
            i = null
        }
    };
    t.onClosed = function(e) {
        WeekCard.hasRes = true;
        this.closeCall && this.closeCall(e);
        BaseDialog.prototype.onClosed.call(this);
        i = null
    };
    return {
        hasRes: true,
        show: function(t) {
            if (Game.miniGameIOS()) {
                return
            }
            Waiting.show();
            ActionEventReport.report(ActionEventReport.actionIndex.ID1053, {
                t: 1
            });
            WinUtils.showDialog(RES.loadTaskList.WeekCard, e,
            function(e) {
                i = e;
                if (t) {
                    i.closeCall = t
                }
                i.contentView.init();
                i.popup();
                Waiting.hide()
            })
        },
        close: function(e) {
            if (e) {
                if (i) {
                    i.close();
                    i.reset()
                }
            } else {
                if (i) {
                    i.close()
                }
            }
        }
    }
} ();
var SevenDayRecharge = function() {
    function e() {
        e.super(this);
        this.setBtClick([this.menu0, this.menu1, this.btnBuy, this.btnBuqian, this.dhBt0, this.dhBt1, this.finishDh, this.btnRule])
    }
    Laya.class(e, "SevenDayRecharge", SevenDayRechargeUI);
    var t = e.prototype;
    t.initData = function(e, t) {
        if (!e.Display) {
            this.close();
            return
        }
        this.msgData = e;
        this.dayTimeLabel.value = e.NeedChargeDay;
        for (var i = 0; i < 2; i++) {
            this["rechargeLabel" + i].value = e.DayChargeRMB;
            this["sendLabel" + i].value = e.RewardHuaFei
        }
        this.btnBuy.visible = !e.IsBuQian;
        this.btnBuqian.visible = e.IsBuQian;
        this.infoDes.innerHTML = "<font style='fontSize:20' color='#1761bc'>已返还兑换券</font><font style='fontSize:20' color='#fffd3c'>" + e.UserDuiHuanQuan + "元</font> <font style='fontSize:20' color='#1761bc'> 满</font> <font style='fontSize:20' color='#fffd3c'>" + e.TotalJiangQuan + "元</font> <font style='fontSize:20' color='#1761bc'>可兑换京东卡、金币</font>";
        this.limitTime.text = Utils.LeftTimeFormat(e.RemainDuiHuanSec, true);
        var n = e.LiBaoReward.split("|").concat(e.DuiHuanQuanReward);
        for (var i = 0; i < n.length; i++) {
            var s = n[i];
            var a = s.split(":");
            var r = this["reward" + i];
            if (r) {
                var o = GameConfig.Item.getItemInfoById(a[0]);
                r.getChildByName("icon").skin = o.skin;
                r.getChildByName("des").text = o.ItemName + "x" + Utils.numberFormat(a[1])
            }
        }
        var l = e.DuiHuanGoodsID.split("|");
        for (var i = 0; i < l.length; i++) {
            var h = l[i];
            var u = GameConfig.exchange.getExchangeDHQById(h);
            var c = this["duihuan" + i];
            if (c) {
                var o = GameConfig.Item.getItemInfoById(u.ItemId);
                if (o.ID == 139) {
                    c.getChildByName("icon").skin = "resource/icon/207.png"
                } else if (o.ID == 135) {
                    c.getChildByName("icon").skin = "resource/icon/208.png"
                } else {
                    c.getChildByName("icon").skin = o.skin
                }
                c.getChildByName("des").text = o.ItemName
            }
            this["dhBt" + i].gray = e.UserDuiHuanQuan < u.DHQNum || e.AlreadyBuyNum != e.NeedChargeDay;
            this["dhDes" + i].innerHTML = "<font style='fontSize:20' color='#ffffff'>消耗</font><font style='fontSize:20' color='#fffd3c'>" + u.DHQNum + "</font><font style='fontSize:20' color='#ffffff'>兑换券</font>"
        }
        this.nowDayList.renderHandler = new Laya.Handler(this, this.renderList);
        this.nowDayList.array = ["1", "2", "3", "4", "5", "6", "7"];
        this.dhList.renderHandler = new Laya.Handler(this, this.renderDayList);
        this.dhList.array = ["6", "5", "4", "3", "2", "1", "0"];
        if (t) {
            this.changeView(0)
        } else {
            if (Channel && Channel.subscribeMessage) {
                if (e.AlreadyBuyNum == 1 && Player.getWxSubStatusByType(Game.DyType.SEVEN_DAY_RECHARGE) <= 0) {
                    if (Game.onMiniGame && wx && wx.onTouchEnd) {
                        wx.onTouchEnd(this.wxClick)
                    }
                    f.dyBox = MessageBox.show("立即订阅，不错过明日特惠礼包！");
                    f.dyBox.closeCall = function() {
                        f.dyBox = undefined;
                        Request.WXSubscribeReq(2, 2)
                    };
                    Player.setWxSubStatusByType(Game.DyType.SEVEN_DAY_RECHARGE, 1)
                }
            }
        }
        this.noSign.visible = this.msgData.AlreadyBuyNum == 0;
        this.signP.visible = this.msgData.AlreadyBuyNum > 0 && this.msgData.AlreadyBuyNum != this.msgData.NeedChargeDay;
        this.signP.width = 586 - this.msgData.AlreadyBuyNum * 84;
        this.finishView.visible = e.RemainDuiHuanSec == 0;
        this.unFinishView.visible = e.RemainDuiHuanSec > 0;
        EventBus.on(EventConfig.SevenDayRecharge.SevenDayRecharge_BUYSUCCESS, this, this.initData);
        this.btnBuy.gray = e.ChargedToday == 1 || e.RemainDuiHuanSec == 0;
        this.dhScale.text = "兑换比: 1:" + e.ExchangeGoldRate;
        this.finishDh.gray = e.UserDuiHuanQuan <= 0;
        this.btnBuqian.gray = e.RemainDuiHuanSec == 0
    };
    t.onClick = function(e) {
        switch (e.target) {
        case this.menu0:
            this.changeView(0);
            break;
        case this.menu1:
            this.changeView(1);
            break;
        case this.btnBuy:
            ActionEventReport.report(ActionEventReport.actionIndex.ID1027, {
                t: this.msgData.AlreadyBuyNum + 1
            });
            this.doBuy(e.target, this.msgData.LiBaoGoodsID);
            break;
        case this.btnBuqian:
            ActionEventReport.report(ActionEventReport.actionIndex.ID1029, {
                t: this.msgData.AlreadyBuyNum + 1
            });
            this.doBuy(e.target, this.msgData.LiBaoGoodsID);
            break;
        case this.dhBt0:
            this.exchange(e.target, this.msgData.DuiHuanGoodsID.split("|")[0]);
            break;
        case this.dhBt1:
            this.exchange(e.target, this.msgData.DuiHuanGoodsID.split("|")[1]);
            break;
        case this.finishDh:
            this.exchange(e.target, this.msgData.ExchangeGoldGoodsID);
            break;
        case this.btnRule:
            var t = GameConfig.exchange.getExchangeDHQById(this.msgData.ExchangeGoldGoodsID);
            var i = GameConfig.Item.getItemInfoById(t.ItemId);
            SevenDayRechargeRule.show("1:" + this.msgData.ExchangeGoldRate, i.ItemName);
            break
        }
    };
    t.wxClick = function(e) {
        if (Channel && Channel.subscribeMessage) {
            console.log(e);
            if (e && e.changedTouches && e.changedTouches[0]) {
                var t = e.changedTouches[0].clientX / Laya.Browser.clientWidth * Laya.stage.width;
                var i = e.changedTouches[0].clientY / Laya.Browser.clientHeight * Laya.stage.height;
                if (f.dyBox && f.dyBox.btnSubmit.hitTestPoint(t, i) && f.dyBox.parent && f.dyBox.parent.getChildIndex(f.dyBox) == f.dyBox.parent.numChildren - 1) {
                    Channel.subscribeMessage(Player.getWxSubPlaf(Game.DyType.SEVEN_DAY_RECHARGE),
                    function(e) {
                        if (e.code == 1) {
                            Request.WXSubscribeReq(1, 2)
                        } else if (e.code == 2) {
                            Request.WXSubscribeReq(2, 2)
                        } else if (e.code == -1) {
                            MsgToast.show("订阅失败：" + e.errMsg)
                        } else if (e.code == -2) {
                            MsgToast.show("微信版本过低，请升级微信版本")
                        }
                    });
                    f.dyBox = undefined
                }
            }
        }
    };
    t.exchange = function(e, t) {
        if (e.gray) return;
        var i = GameConfig.exchange.getExchangeDHQById(t);
        if (i.NeedCondition == 1 || i.NeedCondition == 3) {
            PhoneRecharge.show(t * 1, 5, i.GoodsName);
            if (i.NeedCondition == 1) {
                ActionEventReport.report(ActionEventReport.actionIndex.ID1031, {})
            } else {
                ActionEventReport.report(ActionEventReport.actionIndex.ID1033, {})
            }
        } else {
            var n = GameConfig.Item.getItemInfoById(i.ItemId);
            var s = "是否确认兑换?";
            if (e == this.finishDh) {
                s = "是否兑换" + this.msgData.ExchangeGoldRate * 1 * (this.msgData.UserDuiHuanQuan * 1) + n.ItemName + "?"
            } else {
                if (n.ItemName.indexOf("京东卡") > -1) {
                    ActionEventReport.report(ActionEventReport.actionIndex.ID1031, {})
                } else {
                    ActionEventReport.report(ActionEventReport.actionIndex.ID1033, {})
                }
            }
            var a = MessageBox.show(s);
            if (a) {
                a.submitCall = function() {
                    Request.exchangeReq(t * 1, 5)
                }.bind(this)
            }
        }
    };
    t.doBuy = function(e, t) {
        if (e.gray) return;
        if (this.isDoingPlay) return;
        this.data = GameConfig.shopCity.getCfgById(t);
        if (this.data) {
            this.isDoingPlay = true;
            var i = {
                GoodsID: this.data.GoodsId,
                goodsName: this.data.GoodsName,
                price: Utils.fenToYuan(this.data.CostNum)
            };
            ShopMall.buyRecharge(i);
            this.timer.once(1e3, this, this.buyCall)
        }
    };
    t.buyCall = function(e) {
        this.isDoingPlay = e
    };
    t.renderDayList = function(e, t) {
        if (this.dhList.array[t] == "0") {
            e.text = "可兑换"
        } else {
            e.text = "还差" + this.dhList.array[t] + "天"
        }
        e.color = this.msgData.AlreadyBuyNum > t ? "#13a487": "#868ba5";
        e.getChildByName("line").visible = this.dhList.array[t] != "0";
        e.getChildByName("line").skin = this.msgData.AlreadyBuyNum > t ? "resource/sevenDayRecharge/img_fengexian2.png": "resource/sevenDayRecharge/img_fengexianlv1.png"
    };
    t.renderList = function(e, t) {
        e.getChildByName("value").value = this.nowDayList.array[t];
        e.getChildByName("complete").visible = this.msgData.AlreadyBuyNum > t;
        e.getChildByName("select").visible = this.msgData.AlreadyBuyNum == t;
        e.getChildByName("unSelect").visible = this.msgData.AlreadyBuyNum < t;
        e.getChildByName("value").skin = this.msgData.AlreadyBuyNum == t ? "resource/sevenDayRecharge/fontclip_shuzi_dt.png": "resource/sevenDayRecharge/fontclip_shuzi_wdt.png"
    };
    t.changeView = function(e) {
        for (var t = 0; t < 2; t++) {
            this["box" + t].visible = t == e;
            var i = this["menu" + t];
            i.skin = t == e ? "resource/sevenDayRecharge/btn_fenye2.png": "resource/sevenDayRecharge/btn_fenye1.png";
            i.getChildByName("select").visible = t == e;
            i.getChildByName("unSelect").visible = t != e
        }
    };
    t.onClosed = function() {
        BaseDialog.prototype.onClosed.call(this);
        if (this.closeCall) {
            this.closeCall();
            this.closeCall = undefined
        }
        f.isShow = false;
        EventBus.off(EventConfig.SevenDayRecharge.SevenDayRecharge_BUYSUCCESS, this, this.initData);
        if (Game.onMiniGame && wx && wx.offTouchEnd) {
            wx.offTouchEnd(this.wxClick)
        }
    };
    var f = {};
    f.show = function(t) {
        if (Game.miniGameIOS() || !f.msgData || !f.msgData.Display) {
            if (t) {
                t();
                t = undefined
            }
            Request.SevenDayChargeGetInfoReq();
            return
        }
        console.log(f.msgData);
        Waiting.show();
        WinUtils.showDialog(RES.SevenDayRecharge, e,
        function(e) {
            e.closeCall = t;
            e.initData(f.msgData, true);
            e.popup();
            f.isShow = true;
            Request.SevenDayChargeGetInfoReq();
            Waiting.hide();
            ActionEventReport.report(ActionEventReport.actionIndex.ID1026, {})
        })
    };
    return f
} ();
var SevenDayRechargeRule = function() {
    function n() {
        n.super(this)
    }
    Laya.class(n, "SevenDayRechargeRule", SevenDayRechargeRuleUI);
    var e = {};
    e.show = function(e, t) {
        var i = "1、活动期间，玩家每日购买指定价值的奖品，即可返还兑换券\n" + "2、购买满一定额度可兑换京东卡、金币等，详情见兑换页面\n" + "3、活动结束后，未使用的兑换券，可以按" + e + "的比例兑换" + t + "\n" + "4、连续充值在某一天断掉时，可通过购买一定价值的礼包进行补签，补签成功后可获得当天兑换券\n" + "5、充值任务每日0点刷新\n" + "6、活动最终解释权归《捕鱼大奖赛》运营团队所有\n";
        WinUtils.showDialog(RES.SevenDayRechargeRule, n,
        function(e) {
            e.des.text = i;
            e.zOrder = 100;
            e.popup()
        })
    };
    return e
} ();
var DavyJonesGift = function() {
    function i() {
        i.super(this);
        this.itemList.vScrollBarSkin = "";
        this.itemList.selectEnable = true;
        this.itemList.selectHandler = new Laya.Handler(this, this.selectItemList);
        this.itemList.renderHandler = new Laya.Handler(this, this.renderItemList);
        this.propList.vScrollBarSkin = "";
        this.propList.renderHandler = new Laya.Handler(this, this.renderPropList);
        this.setBtClick([this.btnBuy])
    }
    Laya.class(i, "DavyJonesGift", davyJonesGiftUI);
    var e = i.prototype;
    e.dealMsg = function(e) {
        for (var t = 0; t < e.Item.length; t++) {
            var i = [];
            var n = e.Item[t].Condition.split("|");
            for (var s = 0; s < n.length; s++) {
                var a = GameConfig.shopCity.getCfgById(n[s]);
                if (!a) continue;
                var r = a.Detail.split("|");
                for (var o = 0; o < r.length; o++) {
                    var l = r[o].split(":");
                    i.push({
                        ItemId: l[0],
                        ItemNum: l[2] ? l[2] / 1440 + "天": Utils.numberFormat(l[1])
                    })
                }
            }
            for (var s = 0; s < e.Item[t].Item.length; s++) {
                if (e.Item[t].Item[s].ItemValid > 0) {
                    e.Item[t].Item[s].ItemNum = e.Item[t].Item[s].ItemValid / 1440 + "天"
                } else {
                    e.Item[t].Item[s].ItemNum = Utils.numberFormat(e.Item[t].Item[s].ItemNum)
                }
            }
            e.Item[t].Item = i.concat(e.Item[t].Item)
        }
    };
    e.initData = function(e) {
        this.dealMsg(e);
        this.itemList.array = e.Item;
        this.propList.array = e.Item[0].Item;
        this.selectIndex = 0;
        this.actTime.text = this.getDate(e.StartDate) + "-" + this.getDate(e.EndDate);
        this.selectItemList(0);
        EventBus.on(EventConfig.DavyJonesGift.DavyJonesGift_REFRESH, this, this.refreshData)
    };
    e.selectItemList = function(e) {
        this.propList.array = this.itemList.array[e].Item;
        this.selectIndex = e;
        this.intervalTime.value = this.itemList.array[e].CurrInt64Value * 1 / 60;
        this.itemList.refresh();
        var t = this.itemList.array[e].State;
        this.btnBuyImg.skin = t < 3 ? "resource/davyJonesGift/zi_lijigoumao.png": "resource/davyJonesGift/zi_mingrizailai.png";
        this.btnBuy.gray = t > 2;
        this.remainingTime.visible = t > 0;
        this.remainingTime.text = Utils.secondToCountDownTime(this.itemList.array[e].Param1);
        if (this.itemList.array[e].Param1 > 0) {
            this.timer.loop(1e3, this, this.refreshTime)
        }
    };
    e.renderItemList = function(e, t) {
        e.getChildByName("select").visible = this.selectIndex == t;
        var i = this.itemList.array[t].ShowCon.split(":");
        e.getChildByName("name").text = i[0];
        e.getChildByName("level").text = i[1];
        e.getChildByName("icon").skin = "resource/davyJonesGift/img_libaoicon" + (t + 1) + ".png"
    };
    e.renderPropList = function(e, t) {
        var i = this.propList.array[t];
        var n = this.itemList.array[this.selectIndex];
        var s = GameConfig.Item.getItemInfoById(i.ItemId);
        if (s) e.getChildByName("icon").skin = s.skin;
        e.getChildByName("num").text = "x" + i.ItemNum;
        var a = n.State;
        var r = 0;
        switch (n.State) {
        case 0:
            break;
        case 1:
            r = 4;
            break;
        case 2:
            r = 4;
            break;
        case 3:
            r = 10;
            break;
        case 4:
            r = 8;
            break
        }
        e.getChildByName("get").visible = t < r;
        e.getChildByName("lose").visible = t > 7 && (a == 2 || a == 4);
        e.getChildByName("maskBg").visible = e.getChildByName("get").visible || e.getChildByName("lose").visible || t > 3 && a == 0;
        e.getChildByName("zeng").visible = t > 7
    };
    e.refreshData = function(e) {
        console.log(e);
        this.isDoingPlay = false;
        if (!e) return;
        this.dealMsg(e);
        this.propList.array = e.Item[this.selectIndex].Item;
        this.itemList.array = e.Item;
        this.selectItemList(this.selectIndex);
        this.propList.refresh()
    };
    e.onClosed = function() {
        BaseDialog.prototype.onClosed.call(this);
        EventBus.off(EventConfig.DavyJonesGift.DavyJonesGift_REFRESH, this, this.refreshData);
        this.timer.clear(this, this.refreshTime);
        n.isShow = false
    };
    e.refreshTime = function() {
        var e = this.itemList.array[this.selectIndex];
        if (e.Param1 > 0) {
            e.Param1--
        } else {
            Request.getActInfoReq(n.ActId);
            this.timer.clear(this, this.refreshTime)
        }
        this.remainingTime.visible = e.State > 0;
        this.remainingTime.text = Utils.secondToCountDownTime(e.Param1)
    };
    e.getDate = function(e) {
        e = e.toString();
        var t = (e + "").substring(4, 6);
        var i = (e + "").substring(6, 8);
        return t + "月" + i + "日"
    };
    e.onClick = function(e) {
        if (e.target.gray) return;
        if (this.isDoingPlay) return;
        var t = this.itemList.array[this.selectIndex].Condition.split("|");
        var i = this.itemList.array[this.selectIndex].State == 0 ? t[0] : t[1];
        var n = GameConfig.shopCity.getCfgById(i);
        if (n) {
            this.isDoingPlay = true;
            var s = {
                GoodsID: n.GoodsId,
                goodsName: n.GoodsName,
                price: Utils.fenToYuan(n.CostNum)
            };
            ShopMall.buyRecharge(s);
            this.timer.once(1e3, this, this.refreshData)
        }
    };
    var n = {};
    n.show = function(t, e) {
        if (n.ActId) {
            if (!t) Request.getActInfoReq(n.ActId);
            WinUtils.showDialog(RES.DavyJonesGift, i,
            function(e) {
                if (t) {
                    e.initData(t);
                    e.popup();
                    n.isShow = true;
                    Request.getActInfoReq(n.ActId)
                }
            })
        }
        ActionEventReport.report(ActionEventReport.actionIndex.ID1073, {
            t: e ? 0 : 1
        })
    };
    return n
} ();
var CommonSendSuccess = function() {
    function e() {
        e.super(this);
        this.setBtClick([this.btnSubmit])
    }
    Laya.class(e, "CommonSendSuccess", CommonSendSuccessUI);
    e.prototype.onClick = function() {
        if (Channel && Channel.forward) {
            Channel.forward(Game.ShareType.RECHARGE_NOTIFICATION + this.goodsId, undefined, 0, 0, {
                addGoldUserId: Game.channel.FromUserID
            })
        }
    };
    e.show = function(t) {
        if (Channel && Channel.forward) {
            WinUtils.showDialog(["UIRoot/dialog/CommonSendSuccess.json"], e,
            function(e) {
                e.goodsId = t;
                e.popup()
            })
        }
    };
    return e
} ();
var SendUserShop = function() {
    function e() {
        e.super(this);
        this.setBtClick([this.btnSubmit])
    }
    Laya.class(e, "SendUserShop", SendUserShopUI);
    var t = e.prototype;
    t.initData = function(e) {
        this.msgData = e;
        var t = GameConfig.shopCity.getCfgById(e.GoodsID);
        this.msgLabel.text = "赠送玩家" + Utils.nickBylen(e.nickName) + "以下礼品:";
        this.priceLabel.text = "￥" + Utils.fenToYuan(t.CostNum);
        this.numClip.value = t.Detail.split(":")[1];
        EventBus.on(EventConfig.SendUserShop.SENDUSERSHOP_SUCCESS, this, this.buyCall)
    };
    t.onClick = function() {
        if (this.isDoingPlay) return;
        this.data = GameConfig.shopCity.getCfgById(this.msgData.GoodsID);
        if (this.data) {
            this.isDoingPlay = true;
            var e = {
                GoodsID: this.data.GoodsId,
                goodsName: this.data.GoodsName,
                price: Utils.fenToYuan(this.data.CostNum),
                SendUserCpsID: this.msgData.cpsId * 1,
                SendToUserID: Game.channel.FromUserID
            };
            ShopMall.buyRecharge(e);
            this.timer.once(1e3, this, this.buyCall)
        }
    };
    t.buyCall = function(e) {
        this.isDoingPlay = false;
        if (e) {
            this.close()
        }
    };
    t.onClosed = function() {
        BaseDialog.prototype.onClosed.call(this);
        i.isShow = false;
        EventBus.off(EventConfig.SendUserShop.SENDUSERSHOP_SUCCESS, this, this.buyCall);
        if (i.closeCall) {
            i.closeCall()
        }
    };
    var i = {};
    i.show = function(t) {
        i.isShow = true;
        WinUtils.showDialog(["UIRoot/dialog/SendUserShop.json"], e,
        function(e) {
            e.initData(t);
            e.popup()
        })
    };
    return i
} ();
var UpgradeHint = function() {
    function s() {
        s.super(this);
        this.setBtClick([this.goBt])
    }
    Laya.class(s, "UpgradeHint", UpgradeHintUI);
    var e = s.prototype;
    e.initData = function(e) {
        var t = Game.TipRoot.globalToLocal(Utils.localToGlobal(FishScene.getCurrentCannon().paoBox), true);
        this.x = t.x;
        this.y = t.y - 100;
        var i = GameConfig.getUpgradeHintByType(e);
        this.hintText.text = i.HintName;
        if (e == 2) {
            this.bg.width = 428
        } else {
            this.bg.width = 316
        }
        this.goBt.visible = e == 2;
        this.timer.once(i.HintTime, this, this.removeSelf);
        if (FishScene.getCurrentCannon() && !FishScene.getCurrentCannon().isFrenzy && !FishScene.getCurrentCannon().locked && !FishScene.getCurrentCannon().isHarmonics) FishScene.getCurrentCannon().stop()
    };
    e.onClick = function(e) {
        Request.LeaveGameSvrReq();
        FishScene.isUpgrade = true;
        this.removeSelf()
    };
    var t = {};
    t.show = function(e) {
        if (Player.getDaysFromReg() > 2 || Player.getDaysFromReg() < 0) return;
        if (!FishScene.getFishScene()) return;
        if (!FishScene.getCurrentCannon()) return;
        if (NoviceGuidanceOnMinGame.isGuidOver()) {
            return
        }
        if (FishScene.getFishScene().sceneCfg.SceneId == Game.sceneConfig.sceneID.scene_10 || FishScene.getFishScene().sceneCfg.SceneId == Game.sceneConfig.sceneID.scene_100) {} else {
            return
        }
        var t = -1;
        var i = FishScene.getCurrentCannon().cannonMul;
        if (e / i >= GameConfig.getUpgradeHintByType(0).Condition) {
            if (i == 90 || i == 500) {
                if (e / i >= GameConfig.getUpgradeHintByType(2).Condition) {
                    t = 2
                } else {
                    t = 1
                }
            } else {
                t = 0
            }
        }
        if (t == -1) {
            return
        }
        var n = myStorage.getItemWithUserId(myStorage.StorageStaticCode.Storage_UpgradeHint + t);
        if (n && Player.getDaysFromReg() == n) {
            return
        }
        WinUtils.showView(RES.UpgradeHint, "UpgradeHint", Game.TipRoot, s,
        function(e) {
            e.initData(t);
            myStorage.setItemWithUserId(myStorage.StorageStaticCode.Storage_UpgradeHint + t, Player.getDaysFromReg())
        })
    };
    return t
} ();
var WeekCardView = function() {
    function h() {
        h.super(this)
    }
    Laya.class(h, "recharge.WeekCardView", WeekCardViewUI, "");
    var u = null;
    var e = h.prototype;
    e.init = function() {
        u = this;
        this.weekitem = GameConfig.shopCity.getCfgById(329);
        if (!this.weekitem) return;
        this.cost.value = Utils.fenToYuan(this.weekitem.CostNum);
        var e = this.weekitem.ExtraField.split("|");
        var t = this.weekitem.Detail.split("|");
        var i = [];
        for (var n = 0,
        s = e.length; n < s; n++) {
            var a = e[n].split(":");
            var r = GameConfig.Item.getItemInfoById(parseInt(a[0]));
            if (r) {
                var o = r.ItemName;
                if (a[1] > 1) o = o + "x" + a[1];
                o += "/天";
                var l = {
                    itemname: {
                        text: o,
                        color: "#016bd5"
                    },
                    fristimg: {
                        visible: false
                    },
                    itemicon: "resource/icon/" + r.ID + ".png",
                    bg: "resource/weekCard/img_wupindi_lanse.png"
                };
                i.push(l)
            }
        }
        for (var n = 0,
        s = t.length; n < s; n++) {
            var a = t[n].split(":");
            var r = GameConfig.Item.getItemInfoById(parseInt(a[0]));
            if (r) {
                var o = r.ItemName;
                if (a[1] > 1) o = o + "x" + a[1];
                if (r.ItemType == 5) {
                    o += "7天"
                }
                var l = {
                    itemname: {
                        text: o,
                        color: "#c95102"
                    },
                    fristimg: {
                        visible: true
                    },
                    itemicon: "resource/icon/" + r.ID + ".png",
                    bg: "resource/weekCard/img_wupindi.png"
                };
                i.splice(n * 3, 0, l)
            }
        }
        this.itemList.array = i;
        this.btnbuy.clickHandler = new Laya.Handler(this,
        function() {
            if (this.weekitem) {
                var e = {
                    GoodsID: this.weekitem.GoodsId,
                    goodsName: this.weekitem.GoodsName,
                    price: Utils.fenToYuan(this.weekitem.CostNum)
                };
                ShopMall.buyRecharge(e)
            }
            if (h.monthCardDays >= 0) {
                ActionEventReport.report(ActionEventReport.actionIndex.ID1057, {
                    d: h.monthCardDays
                })
            } else ActionEventReport.report(ActionEventReport.actionIndex.ID1055)
        });
        Request.WeekCardInfoReq();
        ActionEventReport.report(ActionEventReport.actionIndex.ID1054)
    };
    e.unDisplay = function() {
        u = null;
        if (h.monthCardDays && h.monthCardDays < 0) EventBus.send(EventConfig.GAME_CENTER.GAME_CENTER_WEEK_CARD_INFO, {
            days: h.monthCardDays
        })
    };
    e.updata = function() {
        if (h.monthCardDays >= 0) {
            if (h.monthCardDays > 3) {
                this.leftLab.text = "剩余" + h.monthCardDays;
                this.leftLab.color = "#0075bf"
            } else {
                this.leftLab.text = "仅剩余" + h.monthCardDays;
                this.leftLab.color = "#f12121"
            }
            this.buy1.skin = "resource/weekCard/zi_xu.png";
            this.buy2.skin = "resource/weekCard/zi_gou.png"
        } else {
            this.leftLab.text = "7";
            this.leftLab.color = "#0075bf";
            this.buy1.skin = "resource/weekCard/zi_gou.png";
            this.buy2.skin = "resource/weekCard/zi_mai.png"
        }
    };
    return {
        SKIN_NAME: "WeekCardView",
        isRecieve: 1,
        weekCardDays: -1,
        show: function(e, t) {
            if (Game.miniGameIOS()) {
                return
            }
            Waiting.show();
            WinUtils.showView(RES.WeekCardView, h.SKIN_NAME, e, h,
            function(e) {
                Waiting.hide();
                if (t) t(e)
            });
            ActionEventReport.report(ActionEventReport.actionIndex.ID1053, {
                t: 2
            })
        },
        WeekCardInfoRep: function(e) {
            h.isRecieve = e.IsGet;
            h.monthCardDays = e.days;
            if (h.monthCardDays >= 0 && h.isRecieve == 0) {
                Request.WeekCardReceiveReq()
            }
            if (u) {
                u.updata()
            }
        },
        WeekCardReceiveRep: function(e) {
            h.isRecieve = e.IsGet;
            h.monthCardDays = e.days;
            if (u) {
                u.updata()
            }
        }
    }
} ();
var FirstBuyToOneView = function() {
    function i() {
        i.super(this);
        console.log("recharge.FirstBuyToOneView")
    }
    Laya.class(i, "recharge.FirstBuyToOneView", FirstBuyToOneViewUI, "");
    var e = i.prototype;
    e.show = function(e, t) {
        this.shopId = e;
        this.isPoChan = t;
        this.firstOneBox.visible = !Player.getFirstGiftOneBuyStatus();
        this.fugou.visible = !this.firstOneBox.visible;
        if (Channel && Channel.cfg.cps == Game.ChannelConstants.qtt) {
            this.qtt.visible = true;
            this.notQtt.visible = false
        } else {
            this.qtt.visible = false;
            this.notQtt.visible = true
        }
        var i = GameConfig.shopCity.getCfgById(this.shopId);
        var n = i.Detail.split("|");
        this.dataList = [];
        for (var s = 0; s < n.length; s++) {
            var a = n[s].split(":");
            var r = {
                id: a[0],
                num: a[1],
                time: a[2]
            };
            this.dataList.push(r)
        }
        this.itemList.renderHandler = new Laya.Handler(this, this.renderList);
        this.itemList.array = this.dataList;
        this.itemList.x = this.dataList.length == 1 ? 400 : 300;
        this.btnGet.clickHandler = new Laya.Handler(this,
        function() {
            var e = GameConfig.shopCity.getCfgById(this.shopId);
            var t = {
                GoodsID: e.GoodsId,
                goodsName: e.GoodsName,
                price: Utils.fenToYuan(e.CostNum)
            };
            if (this.isPoChan) {
                ShopMall.buyRecharge(t, ActionEventReport.actionIndex.ID1003);
                ActionEventReport.report(ActionEventReport.actionIndex.ID1002)
            } else {
                ShopMall.buyRecharge(t)
            }
            if (this.parent && this.parent.close && typeof this.parent.close == "function") {
                this.parent.close()
            }
            EventBus.send(EventConfig.Recharge.RECHARGE_CLICK_RECHARGE);
            if (this.TeHui) {
                ActionEventReport.report(ActionEventReport.actionIndex.ID1013, {
                    t: this.TeHui
                })
            }
        })
    };
    e.renderList = function(e, t) {
        var i = this.dataList[t];
        var n = GameConfig.Item.getItemInfoById(i.id);
        e.getChildByName("icon").skin = n.skin;
        if (n.ID == Game.item.Gold) {
            e.getChildByName("icon").skin = "resource/firstBuyToOneNew/img_jinbi3.png"
        }
        if (i.num == 1) {
            e.getChildByName("name").text = n.ItemName
        } else {
            e.getChildByName("name").text = "x" + i.num
        }
        e.getChildByName("label").visible = i.time == -1
    };
    return {
        SKIN_NAME: "FirstBuyToOneView",
        show: function(e, t) {
            if (Game.miniGameIOS()) {
                return
            }
            Waiting.show();
            WinUtils.showView(RES.FirstBuyToOneView, i.SKIN_NAME, e, i,
            function(e) {
                Waiting.hide();
                e.show(Player.getFirstGiftOneId());
                if (t) t(e)
            })
        }
    }
} ();
var FirstRechargeView = function() {
    function i() {
        i.super(this)
    }
    Laya.class(i, "recharge.FirstRechargeView", FirstRechargeViewUI, "");
    var n = null;
    var e = i.prototype;
    e.init = function(e) {
        this.onOpened();
        this.buy_now.clickHandler = new Laya.Handler(this,
        function() {
            if (n) {
                var e = {
                    GoodsID: n.GoodsId,
                    goodsName: n.GoodsName,
                    price: Utils.fenToYuan(n.CostNum)
                };
                ShopMall.buyRecharge(e);
                EventBus.send(EventConfig.Recharge.RECHARGE_CLICK_RECHARGE);
                if (this.parent && this.parent.close && typeof this.parent.close == "function") {
                    this.parent.close()
                }
                if (this.TeHui) {
                    ActionEventReport.report(ActionEventReport.actionIndex.ID1013, {
                        t: this.TeHui
                    })
                }
            }
        });
        ActionEventReport.report(ActionEventReport.actionIndex.ID1058, {
            t: e ? 0 : 1
        })
    };
    e.onOpened = function() {
        var e = GameConfig.shopCity.getCfg();
        for (var t = 0,
        i = e.length; t < i; t++) {
            if (e[t].Type === 2 && e[t].MallType === 1) {
                n = e[t];
                break
            }
        }
        this.renderGift(n)
    };
    e.renderGift = function(e) {
        if (!e) {
            return false
        }
        var t = e.Detail.split("|"),
        i = [];
        for (var n = 0,
        s = t.length; n < s; n++) {
            var a = t[n].split(":"),
            r = GameConfig.Item.getItemInfoById(parseInt(a[0]));
            r.num = a[1];
            i.push(r)
        }
        for (var n = 0; n < 4; n++) {
            this["gift_" + (n + 1)].getChildByName("icon").skin = i[n].ID == Game.item.Gold ? "resource/firstBuy/icn_jinbi.png": i[n].ID == Game.item.SuoDing ? "resource/firstBuy/102.png": i[n].ID == Game.item.KuangBao ? "resource/firstBuy/103.png": i[1].skin;
            this["gift_" + (n + 1)].getChildByName("gift_n").text = i[n].ItemName + "x" + i[n].num
        }
    };
    return {
        SKIN_NAME: "FirstRechargeView",
        show: function(e, t) {
            if (Game.miniGameIOS()) {
                return
            }
            Waiting.show();
            WinUtils.showView(RES.FirstRechargeView, i.SKIN_NAME, e, i,
            function(e) {
                Waiting.hide();
                if (t) t(e)
            })
        }
    }
} ();
var LuckyShakeView = function() {
    var t = function(e) {
        var t = e % 60;
        var i = Math.floor(e / 60);
        if (t) {
            if (t <= 9) {
                t = "0" + t
            }
        } else {
            t = "00"
        }
        if (i <= 9) {
            i = "0" + i
        }
        return i + ":" + t
    };
    var n = 180;
    function s() {
        s.super(this);
        this.on(Laya.Event.DISPLAY, this, this.displayCall);
        this.on(Laya.Event.UNDISPLAY, this, this.unDisplayCall)
    }
    Laya.class(s, "recharge.LuckyShakeView", LuckyShakeViewUI, "");
    var e = s.prototype;
    e.init = function() {
        var t = false;
        this.on(Laya.Event.CLICK, this,
        function(e) {
            if (t) {
                return
            }
            if (e.target) {
                if (e.target.name == "btnShake") {
                    t = true;
                    this.shakeStart();
                    this.timer.once(1e3, this,
                    function() {
                        t = false
                    })
                } else if (e.target.name == "btnGiveUp") {
                    this.giveUp()
                } else if (e.target.name == "btnBuy") {
                    this.buy()
                }
            }
        });
        this.initLight();
        this.userShakeTimes = Player.getShakeTimes();
        this.goodId = 0;
        this.countDownStartTime = 0;
        this.countDownCurrNum = n;
        this.lightOpenIndex = 0;
        this.currTime = 0;
        this.disableBuy = true;
        Laya.loader.load("UIRoot/FX/yaoyiyao4.part");
        this.lastX = 0;
        this.lastY = 0;
        this.lastZ = 0;
        this.lastTime = 0;
        var o = this;
        var l = 110;
        if (Game.onMiniGame && !Game.onQQ()) {
            var h = wx;
            h.onAccelerometerChange(function(e) {
                var t = (new Date).getTime();
                if (t - o.lastTime > 100) {
                    var i = e.x,
                    n = e.y,
                    s = e.z;
                    var a = t - o.lastTime;
                    o.lastTime = t;
                    var r = Math.abs(i + n + s - o.lastX - o.lastY - o.lastZ) / a * 1e4;
                    o.lastX = i;
                    o.lastY = n;
                    o.lastZ = s;
                    if (r > l) {
                        h.stopAccelerometer();
                        o.lastX = 0;
                        o.lastY = 0;
                        o.lastZ = 0;
                        o.lastTime = 0;
                        o.shakeStart()
                    }
                }
            });
            h.stopAccelerometer()
        }
    };
    e.displayCall = function() {
        this.timer.frameLoop(1, this, this.update);
        this.countDownUpdate();
        if (this.shakeAni) {
            this.shakeAni.play(0, true, "standby")
        }
        this.userShakeTimes = Player.getShakeTimes();
        this.fc_shakeTimes.value = this.userShakeTimes < 0 ? 0 : this.userShakeTimes;
        if (this.ShakeBox.visible) {
            this.startAccelerometer()
        }
        i.opened && i.opened()
    };
    e.unDisplayCall = function() {
        i.closed && i.closed();
        if (Game.onMiniGame && !Game.onQQ()) {
            wx.stopAccelerometer()
        }
        BaseDialog.prototype.onClosed.call(this)
    };
    e.reset = function() {
        this.giveUp()
    };
    e.startAccelerometer = function() {
        if (Game.onMiniGame && this.visible) {
            if (!Game.onQQ()) {
                wx.startAccelerometer({
                    interval: "game"
                })
            }
        }
    };
    e.over = function() {
        this.timer.clear(this, this.update);
        this.off(Laya.Event.DISPLAY, this, this.displayCall);
        this.off(Laya.Event.UNDISPLAY, this, this.unDisplayCall)
    };
    e.update = function() {
        if (this.bgLight) {
            this.bgLight.rotation += 1
        }
        if (this.lightBox && this.lightBox.numChildren > 1 && this.timer.currTimer - this.currTime > 40) {
            this.currTime = this.timer.currTimer;
            this.lightEft()
        }
    };
    e.initLight = function() {
        var e = 20;
        if (this.lightBox.numChildren >= e) {
            return
        }
        var t = 18;
        var i = [0, 8, 9, 10, 11, 12, 19];
        for (var n = 0; n < e; n++) {
            if (i.indexOf(n) >= 0) {
                continue
            }
            var s = Laya.Pool.getItemByClass("shakeLight", LuckyShakeLightUI);
            s.rotation = n * t;
            s.pos(226, 224);
            this.lightBox.addChild(s)
        }
    };
    e.lightEft = function() {
        var e = 4;
        var t = [1, 1.2, 1.3, 1.4];
        if (this.lightOpenIndex >= this.lightBox.numChildren) {
            this.lightOpenIndex = 0
        }
        for (var i = 0; i < e; i++) {
            var n = this.lightOpenIndex + i;
            var s = this.lightBox.getChildAt(n);
            if (s) {
                var a = s.getChildAt(0);
                a.scale(t[i], t[i])
            }
        }
        this.lightOpenIndex++
    };
    e.shakeStart = function() {
        if (this.ShakeBox.visible) {
            if (this.userShakeTimes > 0) {
                if (this.shakeAni) {
                    if (Game.onMiniGame & !Game.onQQ()) {
                        var e = wx;
                        e.stopAccelerometer();
                        e.vibrateLong()
                    } else if (Channel && Channel.startShake) {}
                    this.shakeAni.once(Laya.Event.COMPLETE, this,
                    function() {
                        Request.ShakeReq()
                    });
                    this.shakeAni.play(0, false, "Shake");
                    Sound.playSound(Sound.RES.shark_yaoyiyao.url, Sound.RES.shark_yaoyiyao.vol)
                }
            }
        }
    };
    e.shakeStop = function() {
        if (this.shakeAni) {
            this.shakeAni.stop()
        }
    };
    e.playGoldEft = function() {
        Laya.loader.load("UIRoot/FX/yaoyiyao4.part", Laya.Handler.create(this,
        function() {
            this.loadPartCompleted = true;
            if (this.goldFx) {
                this.goldFx.alpha = 1;
                this.goldFx.visile = true;
                this.goldFx.autoPlay = true;
                this.goldFx.emitter.start();
                this.goldFx.play();
                this.goldFx.timer.once(1600, this,
                function() {
                    this.goldFx.alpha = 0
                })
            }
        }))
    };
    e.shakeResult = function(e) {
        Sound.playSound(Sound.RES.shark_jieguo.url, Sound.RES.shark_jieguo.vol);
        var t = 160;
        this.awardBox.scale(0, 0);
        Laya.Tween.to(this.ShakeBox, {
            scaleX: 0,
            scaleY: 0
        },
        t, null, Laya.Handler.create(this,
        function() {
            this.ShakeBox.visible = false;
            this.awardBox.visible = true;
            this.shakeStop()
        }));
        Laya.Tween.to(this.awardBox, {
            scaleX: 1,
            scaleY: 1
        },
        t, null, Laya.Handler.create(this,
        function() {}), t);
        this.timer.once(t, this,
        function() {
            if (this.fireAni) {
                this.fireAni.visible = true;
                this.fireAni.once(Laya.Event.COMPLETE, this,
                function() {
                    this.fireAni.visible = false
                });
                this.fireAni.play(0, false)
            }
            this.playGoldEft()
        });
        this.updateResultData(e)
    };
    e.updateResultData = function(e) {
        e.NewPrice = Utils.fenToYuan(e.NewPrice);
        e.OldPrice = Utils.fenToYuan(e.OldPrice);
        this.fc_gold.value = e.Gold;
        this.fc_price.value = e.NewPrice;
        this.orgPriceLabel.changeText("原价:" + e.OldPrice + "元");
        this.goodId = e.GoodsId;
        Player.setShakeTimes(e.ShakeTimes);
        this.fc_shakeTimes.value = e.ShakeTimes < 0 ? 0 : e.ShakeTimes;
        this.userShakeTimes = e.ShakeTimes;
        this.disableBuy = false;
        this.timer.clear(this, this.countDown);
        this.countDownCurrNum = n;
        this.fc_time.value = "03:00";
        this.timer.loop(1e3, this, this.countDown)
    };
    e.giveUp = function() {
        if (this.userShakeTimes) {
            this.ShakeBox.visible = true;
            this.awardBox.visible = false;
            Laya.Tween.to(this.ShakeBox, {
                scaleX: 1,
                scaleY: 1
            },
            260);
            this.startAccelerometer()
        } else {
            this.ShakeBox.visible = true;
            this.awardBox.visible = false;
            Laya.Tween.to(this.ShakeBox, {
                scaleX: 1,
                scaleY: 1
            },
            260);
            if (this.parent && this.parent.close && typeof this.parent.close == "function") {
                this.parent.close()
            }
            this.refreshUI()
        }
        this.countDownReset()
    };
    e.refreshUI = function() {
        var e = Player.getShakeTimes();
        a.userShakeTimes = e;
        a.btnShake.gray = e <= 0;
        this.displayCall()
    };
    e.hide = function() {
        this.visible = false
    };
    e.buy = function() {
        if (this.goodId) {
            var e = GameConfig.shopCity.getCfgById(this.goodId);
            ShopMall.buyRecharge({
                GoodsID: this.goodId,
                goodsName: e.GoodsName,
                price: this.fc_price.value
            });
            if (this.TeHui) {
                ActionEventReport.report(ActionEventReport.actionIndex.ID1013, {
                    t: this.TeHui
                })
            }
            if (this.parent && this.parent.close && typeof this.parent.close == "function") {
                this.parent.close();
                this.countDownReset();
                this.over();
                a = null
            } else {
                this.giveUp()
            }
        }
    };
    e.countDown = function() {
        if (this.countDownCurrNum == n) {
            this.countDownStartTime = (new Date).getTime()
        }
        this.countDownCurrNum -= 1;
        if (this.countDownCurrNum > 0) {
            var e = t(this.countDownCurrNum);
            this.fc_time.value = e
        } else {
            this.giveUp()
        }
    };
    e.countDownReset = function() {
        this.disableBuy = true;
        this.countDownCurrNum = n;
        this.fc_time.value = "03:00";
        this.timer.clear(this, this.countDown)
    };
    e.countDownUpdate = function() {
        var e = (new Date).getTime();
        if (this.countDownStartTime > 0 && e > this.countDownStartTime) {
            var t = e - this.countDownStartTime;
            var i = Math.floor(t / 1e3);
            this.countDownCurrNum = n - i
        } else {
            if (this.countDownStartTime > 0) {
                this.giveUp()
            }
        }
    };
    e.refresh = function() {
        var e = Player.getShakeTimes();
        a.userShakeTimes = e;
        a.btnShake.gray = e <= 0
    };
    var a = null;
    var i = {
        opened: null,
        closed: null,
        hide: function() {
            a.hide()
        },
        show: function(t, i, e) {
            Waiting.show();
            Resource.load(RES.LuckyShakeView,
            function() {
                var e = Player.getShakeTimes();
                if (!a) {
                    a = new s;
                    a.init()
                }
                a.userShakeTimes = e;
                a.btnShake.gray = e <= 0;
                t.addChild(a);
                if (i) {
                    i(a)
                }
                if (e > 0 || a && !a.disableBuy) {} else if (e == 0) {
                    MsgToast.show("摇一摇次数不足，在捕鱼场捕获黄金鱼即可获取次数哦!")
                } else {
                    MsgToast.show("今日已购买，请明日再来")
                }
                Waiting.hide()
            })
        },
        shakeRep: function(e) {
            a && a.shakeResult(e)
        },
        giveUp: function() {
            a && a.giveUp()
        },
        refreshUI: function() {
            a && a.refreshUI()
        }
    };
    return i
} ();
var SpecialGiftView = function() {
    function i() {
        i.super(this);
        this.buyBt.on(Laya.Event.CLICK, this, this.buySubmit);
        EventBus.on(EventConfig.GAME_CENTER.SPECIAL_GIFT_BUY, this, this.buyCall)
    }
    Laya.class(i, "recharge.SpecialGiftView", SpecialGiftViewUI, "");
    i.prototype.unDisplay = function(e) {
        EventBus.off(EventConfig.GAME_CENTER.SPECIAL_GIFT_BUY, this, this.buyCall);
        this.closeCall && this.closeCall(e);
        this.timer.clearAll(this)
    };
    i.prototype.init = function() {
        this.buyBt.gray = !Player.isSpecialGiftCanBuy();
        var e = Player.isSpecialGiftCanBuy();
        if (!e) {
            e = 107
        }
        var t = GameConfig.shopCity.getCfgById(e);
        if (!t) return;
        this.data = t;
        this.price.value = Utils.fenToYuan(t.CostNum);
        var i = t.Detail.split("|");
        for (var n = 0; n < i.length; n++) {
            var s = i[n].split(":");
            if (s && s.length > 0) {
                var a = s[0],
                r = s[1];
                var o = GameConfig.Item.getItemInfoById(a);
                this.goods.getChildByName("icon" + n).skin = o.skin;
                this.goods.getChildByName("num" + n).text = "x" + Utils.numberFormat(r)
            }
        }
    };
    i.prototype.buySubmit = function() {
        if (this.buyBt.gray) return;
        if (this.isDoingPlay) return;
        if (this.data) {
            this.isDoingPlay = true;
            var e = {
                GoodsID: this.data.GoodsId,
                goodsName: this.data.GoodsName,
                price: Utils.fenToYuan(this.data.CostNum)
            };
            ShopMall.buyRecharge(e);
            if (this.TeHui) {
                ActionEventReport.report(ActionEventReport.actionIndex.ID1013, {
                    t: this.TeHui
                })
            }
            this.timer.once(1e3, this, this.buyCall)
        }
    };
    i.prototype.buyCall = function(e) {
        if (e) {
            Player.setSpecialGiftBuy(true);
            this.init()
        } else {
            this.isDoingPlay = false
        }
    };
    i.show = function(e, t) {
        WinUtils.showView(RES.specialGiftView, "SpecialGiftView", e, i,
        function(e) {
            if (t) t(e)
        })
    };
    return i
} ();
var PlayPackageView = function() {
    var h = {
        340 : "biaoti_50.png",
        339 : "biaoti_25yuan.png",
        338 : "biaoti_6yuan.png"
    };
    var u = {
        340 : "img_50yuanbg.png",
        339 : "img_25yuanbg.png",
        338 : "img_6yuanbg.png"
    };
    var c = {
        340 : "img_yuanjiabg50.png",
        339 : "img_yuanjiabg25.png",
        338 : "img_yuanjiabg6.png"
    };
    var f = {
        340 : "icon_jinbi50.png",
        339 : "icon_jinbi25.png",
        338 : "icon_jinbi6.png"
    };
    function i() {
        i.super(this)
    }
    Laya.class(i, "recharge.PlayPackageView", PlayPackageViewUI, "");
    var e = i.prototype;
    e.init = function() {
        this.dataList.scrollBar.hide = true;
        this.dataList.renderHandler = new Laya.Handler(this, this.renderDataList)
    };
    e.updateList = function() {
        var e = GameConfig.shopCity.getCfg();
        var t = [],
        i = null,
        n = {};
        e.sort(function(e, t) {
            return t.Sort - e.Sort
        });
        var s = 0;
        for (var a = 0; a < e.length; a++) {
            var i = e[a];
            if (i.GoodsId && i.Type == 3 && i.MallType == 1) {
                var r = i.Detail.split("|");
                var n = {
                    GoodsID: i.GoodsId,
                    money: Utils.fenToYuan(i.CostNum),
                    bg_1: "resource/playPackage/" + u[i.GoodsId],
                    bg_2: "resource/playPackage/" + u[i.GoodsId],
                    title: "resource/playPackage/" + h[i.GoodsId],
                    k_0: "resource/common/bar_wupinlv.png",
                    k_1: "resource/common/bar_wupinlv.png",
                    k_2: "resource/common/bar_wupinlv.png",
                    yuanjiaBg: "resource/playPackage/" + c[i.GoodsId],
                    jinbi: "resource/playPackage/" + f[i.GoodsId],
                    yuanjia: {
                        text: "原价" + i.BasePrice + "元"
                    }
                };
                for (var o = 0; o < r.length; o++) {
                    var l = r[o].split(":");
                    if (o > 0) {
                        n["num_" + o] = {
                            text: "x" + l[1]
                        };
                        n["i_" + o] = "resource/icon/" + l[0] + ".png"
                    } else {
                        n["num_" + o] = {
                            text: l[1]
                        }
                    }
                }
                t.push(n);
                s++
            }
        }
        this.dataList.array = t
    };
    e.renderDataList = function(e, t) {
        var i = e.dataSource;
        var n = e.getChildByName("btnObtain");
        var s = e.getChildByName("alreadyBy");
        if (Player.getShopCW()) {
            var a = Player.getShopCW().split("|");
            if (a.toString().indexOf(i.GoodsID * 1) > -1) {
                n.visible = false;
                s.visible = true
            } else {
                n.visible = true;
                s.visible = false
            }
        }
        n.clickHandler = new Laya.Handler(this,
        function() {
            ActionReport.addLog(ActionReport.actionIndex.playPackage_Buy);
            var e = {
                GoodsID: i.GoodsID,
                goodsName: "畅玩礼包",
                price: i.money
            };
            console.log(e);
            ShopMall.buyRecharge(e);
            if (this.TeHui) {
                ActionEventReport.report(ActionEventReport.actionIndex.ID1013, {
                    t: this.TeHui
                })
            }
        })
    };
    e.display = function() {
        t.opened && t.opened()
    };
    e.unDisplay = function(e) {
        t.closed && t.closed();
        this.closeCall && this.closeCall(e);
        n = null
    };
    var n = null;
    var t = {
        opened: null,
        closed: null,
        show: function(e, t) {
            if (Game.isIOS && Game.onMiniGame) {
                return
            }
            WinUtils.showView(RES.playPackageView, "PlayPackageView", e, i,
            function(e) {
                n = e;
                n.updateList();
                if (t) t(n);
                Waiting.hide()
            })
        },
        update: function() {
            n && n.updateList()
        }
    };
    return t
} ();
var OneMoneyGiftView = function() {
    function n() {
        n.super(this);
        this.setBtClick([this.inviteBtn, this.buyBtn]);
        EventBus.on(EventConfig.OneMoneyGift.ONEMONEYGIFT_SHOW, this, this.showDialog)
    }
    Laya.class(n, "recharge.OneMoneyGiftView", OneMoneyGiftViewUI, "");
    var e = n.prototype;
    e.showDialog = function(e) {
        if (e.KanJiaLiBaoID == -1) {
            this.removeSelf();
            return
        }
        this.infoCall(e)
    };
    e.onClick = function(e) {
        switch (e.target) {
        case this.inviteBtn:
            if (Game.showShare()) {
                if (Channel && Channel.forward) Channel.forward("kanjia", undefined, 3)
            }
            break;
        case this.buyBtn:
            if (this.isDoingPlay) return;
            if (this.data) {
                this.isDoingPlay = true;
                var t = {
                    GoodsID: this.data.GoodsId,
                    goodsName: this.data.GoodsName,
                    price: Utils.fenToYuan(this.data.CostNum)
                };
                ShopMall.buyRecharge(t);
                if (this.TeHui) {
                    ActionEventReport.report(ActionEventReport.actionIndex.ID1013, {
                        t: this.TeHui
                    })
                }
                this.timer.once(1e3, this, this.buyCall)
            }
            break
        }
    };
    e.buyCall = function(e) {
        if (e) {} else {
            this.isDoingPlay = false
        }
    };
    e.infoCall = function(e) {
        console.log(e);
        var t = GameConfig.getKanJiaLibaoById(e.KanJiaLiBaoID);
        if (!t) {
            return
        }
        this.nextRen.text = t.NeedInviteNum - e.KanJiaLiBaoNeedNum;
        this.progressText.text = e.KanJiaLiBaoNeedNum + "/" + t.NeedInviteNum;
        var i = e.KanJiaLiBaoNeedNum / t.NeedInviteNum * 350;
        this.progress.width = i;
        this.progressLight.visible = i > 0;
        this.data = GameConfig.shopCity.getCfgById(e.KanJiaLiBaoID);
        this.nowPrice.text = "现价:" + Utils.fenToYuan(this.data.CostNum) + "元";
        this.oldPrice.text = "原价:" + this.data.BasePrice + "元";
        if (this.data.Detail) {
            var n = this.data.Detail.split(":");
            if (n.length > 1) this.goldLab.value = n[1] + ""
        }
        var s = GameConfig.shopCity.getCfgById(e.KanJiaLiBaoNexID);
        if (e.KanJiaLiBaoNexID == -1) {
            s = GameConfig.shopCity.getCfgById(e.KanJiaLiBaoID)
        }
        this.price.text = Utils.fenToYuan(s.CostNum) + "元";
        this.price1.text = Utils.fenToYuan(s.CostNum) + "元";
        this.des0.visible = e.KanJiaLiBaoNexID != -1;
        this.des1.visible = e.KanJiaLiBaoNexID == -1;
        this.inviteHint.visible = e.KanJiaLiBaoNexID != -1;
        this.inviteBtn.visible = e.KanJiaLiBaoNexID != -1;
        this.buyBtn.centerX = e.KanJiaLiBaoNexID == -1 ? 0 : 123;
        this.progressBox.visible = t.NeedInviteNum > 0
    };
    e.unDisplay = function() {
        EventBus.off(EventConfig.OneMoneyGift.ONEMONEYGIFT_SHOW, this, this.showDialog)
    };
    var t = {};
    t.show = function(e, t, i) {
        if (!i) {
            WinUtils.showView(RES.oneMoneyGiftView, "OneMoneyGiftView", e, n,
            function(e) {
                Request.KanJiaLiBaoInfoReq();
                if (t) t(e)
            })
        } else {
            WinUtils.showView(RES.oneMoneyGiftView, "OneMoneyGiftView", e, n,
            function(e) {
                e.infoCall(i);
                if (t) t(e)
            })
        }
    };
    return t
} ();
var OneMoneyGiftBtn = function(e) {
    var t = false;
    function i() {
        i.super(this);
        this.init()
    }
    Laya.class(i, "kanjia.OneMoneyGiftBtn", e, "");
    var n = i.prototype;
    n.init = function() {
        this.on(Laya.Event.CLICK, this, this.onClick);
        this.on(Laya.Event.DISPLAY, this, this.disPlay);
        this.on(Laya.Event.UNDISPLAY, this, this.unDisPlay)
    };
    n.disPlay = function() {
        EventBus.on(EventConfig.OneMoneyGift.ONEMONEYGIFT_SHOW, this, this.showOneMoneyGift);
        EventBus.on(EventConfig.OneMoneyGift.ONEMONEYGIFT_BUY, this, this.oneMoneyGiftBuy);
        Request.KanJiaLiBaoInfoReq();
        this.getChildByName("redPoint").visible = t
    };
    n.unDisPlay = function(e) {
        EventBus.off(EventConfig.OneMoneyGift.ONEMONEYGIFT_SHOW, this, this.showOneMoneyGift);
        EventBus.off(EventConfig.OneMoneyGift.ONEMONEYGIFT_BUY, this, this.oneMoneyGiftBuy)
    };
    n.onClick = function(e) {
        OneMoneyGiftD.show();
        this.getChildByName("redPoint").visible = false;
        t = false
    };
    n.showOneMoneyGift = function(e) {
        this.visible = e.KanJiaLiBaoID != -1 && !Player.getNewPlayer() && Game.showShare() && GameCenter.getSceneInfo().SvrId != Game.sceneConfig.sceneID.scene_SuperMatch && (Game.onMiniGame && !Game.isIOS);
        Player.setKanJiaVisible(this.visible);
        if (!this.getChildByName("redPoint").visible) {
            this.getChildByName("redPoint").visible = e.RedPoint == 1;
            t = e.RedPoint == 1
        } else {
            this.getChildByName("redPoint").visible = t
        }
    };
    n.oneMoneyGiftBuy = function(e) {
        this.visible = !e
    };
    return i
} (Laya.Button);
var FreeGoldBtn = function(e) {
    function t() {
        t.super(this);
        this.init()
    }
    Laya.class(t, "fish.FreeGoldBtn", e, "");
    var i = t.prototype;
    i.init = function() {
        this.on(Laya.Event.CLICK, this, this.onClick);
        this.on(Laya.Event.DISPLAY, this, this.disPlay);
        this.on(Laya.Event.UNDISPLAY, this, this.unDisPlay);
        this.visible = Game.showShare() && GameCenter.getSceneInfo().SvrId != Game.sceneConfig.sceneID.scene_SuperMatch && Game.onMiniGame
    };
    i.disPlay = function() {
        EventBus.on(EventConfig.FreeGold.FREEGOLD_SHOW, this, this.showFreeGold)
    };
    i.unDisPlay = function(e) {
        EventBus.off(EventConfig.FreeGold.FREEGOLD_SHOW, this, this.showFreeGold);
        if (this.baoXiang) {
            this.baoXiang.paused();
            this.baoXiang.removeSelf();
            this.baoXiang = undefined
        }
    };
    i.showFreeGold = function(e) {
        this.serverMsg = e;
        if (e.JinBiBaoXiangShareGet == 0 || e.JinBiBaoXiangRewardTimes > 0) {
            if (this.baoXiang) {
                this.baoXiang.resume();
                this.baoXiang.visible = true
            } else {
                Utils.getTempletByUrl("res/spine/baoxiang/baoxiang.sk",
                function(e) {
                    e.x = 46;
                    e.y = 55;
                    this.addChildAt(e, 0);
                    e._parent_ = e.parent;
                    this.baoXiang = e
                }.bind(this))
            }
            this.getChildByName("box").visible = false
        } else {
            if (this.baoXiang) {
                this.baoXiang.paused();
                this.baoXiang.visible = false
            }
            this.getChildByName("box").visible = true
        }
    };
    i.onClick = function(e) {
        FreeGoldDialog.show(this.serverMsg)
    };
    return t
} (Laya.Box);
var StarRank = function() {
    var e = StarRankUI.prototype;
    e.init = function() {
        this.rankList.scrollBar.hide = true;
        this.startReq = false;
        this.on(Laya.Event.CLICK, this,
        function(e) {
            if (e && e.target && e.target.name) {
                var t = e.target.name;
                if (t == "btnUpdate") {
                    this.reqPageData()
                }
            }
        })
    };
    e.reqPageData = function() {
        if (this.startReq) {
            return
        }
        this.startReq = true;
        StarRankNet.GetUserStarRankReq(true);
        this.timer.once(300, this,
        function() {
            this.startReq = false
        })
    };
    e.getListData = function(e) {
        var t = [];
        if (e && e instanceof Array) {
            for (var i = 0; i < e.length; i++) {
                var n = e[i];
                if (n) {
                    var s = {
                        type: n.userStarType,
                        typeIcon: "resource/starRank/img_" + n.userStarType + ".png",
                        userHead: n.HeadImg ? Utils.AvatarAddPrefix(n.HeadImg) : n.AvatarId ? "resource/head/" + n.AvatarId + ".png": "resource/head/1.png",
                        vip: "resource/icon/vipLevel/vip" + n.Vip + ".png",
                        name: Utils.nickBylen(n.Nick),
                        id: "编号:" + n.UserId,
                        uid: n.UserId
                    };
                    t.push(s)
                }
            }
        }
        return t
    };
    e.updatePage = function(e) {
        var t = this.getListData(e);
        this.rankList.array = t
    };
    e.onClosed = function() {
        BaseDialog.prototype.onClosed.call(this);
        StarRankBar.showBar();
        i = null
    };
    e.reset = function() {
        i = null
    };
    var i = null,
    n = null,
    s = -1;
    var t = {
        show: function() {
            Resource.load(RES.loadTaskList.starRank,
            function() {
                if (!i) {
                    i = new StarRankUI;
                    i.init()
                }
                if (n) {
                    i.updatePage(n)
                }
                i.popup()
            })
        },
        pageData: function(e, t) {
            s = t;
            n = e;
            if (i) {
                i.updatePage(n)
            }
        }
    };
    return t
} ();
var StarRankBar = function() {
    var t = null;
    var e = StarRankBarUI.prototype;
    e.init = function() {
        this.initEvent();
        this.rankList.scrollBar.hide = true;
        this.barFlag = true,
        this.ani_ing = false;
        this.on(Laya.Event.CLICK, this,
        function(e) {
            StarRank.show()
        });
        this.right = 0;
        this.centerY = 30
    };
    e.showBar = function() {
        this.ani_ing = true;
        Laya.Tween.to(this, {
            right: 0
        },
        200, null, Laya.Handler.create(this,
        function() {
            this.ani_ing = false;
            this.barFlag = true
        }))
    };
    e.hideBar = function() {
        this.ani_ing = true;
        Laya.Tween.to(this, {
            right: -88
        },
        200, null, Laya.Handler.create(this,
        function() {
            this.ani_ing = false;
            this.barFlag = false;
            StarRank.show()
        }))
    };
    e.reqPageData = function() {
        if (this.startReq) {
            return
        }
        this.startReq = true;
        this.timer.once(1e3, this,
        function() {
            this.startReq = false
        })
    };
    e.getListData = function(e) {
        var t = [];
        if (e && e instanceof Array) {
            for (var i = 0; i < e.length; i++) {
                var n = e[i];
                if (n) {
                    var s = {
                        type: n.userStarType,
                        userHead: "resource/head/2.png",
                        vip: {
                            text: n.Vip
                        },
                        name: n.Nick,
                        uid: n.UserId
                    };
                    t.push(s)
                }
            }
        }
        return t
    };
    e.updatePage = function(e) {
        var t = this.getListData(e);
        this.rankList.array = t
    };
    e.reset = function() {
        i = null
    };
    var i = null,
    n = null;
    var s = {
        init: function(e) {
            t = e
        },
        show: function() {
            Resource.checkLoaded = false;
            Resource.load(RES.loadTaskList.starRank,
            function() {
                if (!i) {
                    i = new StarRankBarUI;
                    i.init()
                }
                if (t) {
                    if (n) {
                        i.updatePage(n)
                    }
                    t.addChild(i)
                }
            })
        },
        showBar: function() {
            if (i) {
                i.showBar()
            }
        },
        pageData: function(e) {
            n = e;
            if (i) {
                i.updatePage(e)
            }
        }
    };
    return s
} ();
var StarRankNet = function() {
    var i = 0;
    return {
        GetUserStarRankReq: function(e) {
            Request.GetUserStarRankReq({
                Index: i,
                IsChange: e ? 1 : 0
            })
        },
        GetUserStarRankRep: function(e) {
            if (e) {
                if (e.Tag) {
                    i = e.Index;
                    var t = e.MoneyInfo.concat(e.BuyuInfo).concat(e.ActiveInfo);
                    if (t.length) {
                        t.sort(function() {
                            return.5 - Math.random()
                        });
                        StarRankBar.pageData(e.MoneyInfo);
                        StarRank.pageData(t, i);
                        StarRankBar.show()
                    }
                } else if (e.MsgId) {
                    MessageBox.show(GameConfig.ErrorMsg.getMsgById(e.MsgId))
                }
            }
        }
    }
} ();
var RedPackageRules = function() {
    var e = null;
    function t() {
        t.super(this)
    }
    Laya.class(t, "RedPackageRulesFun", redPackageRulesUI, "");
    var i = t.prototype;
    i.init = function() {
        this.width = Game.UIWidth;
        this.height = Game.UIHeight
    };
    i.onClosed = function() {
        BaseDialog.prototype.onClosed.call(this);
        this.reset()
    };
    i.reset = function() {
        e = null
    };
    return {
        show: function() {
            if (!e) {
                e = new t;
                e.init()
            }
            e.popup()
        }
    }
} ();
var GetRedPackage = function() {
    var t = null;
    var i = null;
    function n() {
        n.super(this)
    }
    Laya.class(n, "GetRedPackageFun", getRedPackageUI, "");
    var e = n.prototype;
    e.init = function() {
        this.width = Game.UIWidth;
        this.height = Game.UIHeight;
        this.btnAddFriend.clickHandler = new Laya.Handler(this,
        function() {
            if (i && i.UserID) {
                Request.FriendsActionReq(1, i.UserID * 1)
            }
        })
    };
    e.updateUi = function(e) {
        if (e.Headimg) {
            this.userHeadImg.skin = e.Headimg
        } else {
            this.userHeadImg.skin = "resource/head/1.png"
        }
        this.userName.text = e.Nick || "";
        this.vipLevel.skin = "resource/icon/vipLevel/vip" + e.VipLevel + ".png";
        this.userId.text = "编号：" + e.UserID;
        this.userDes.text = e.Slogan || "";
        this.getGoldNum.value = e.Money || 0;
        this.leftTimes.text = e.GetTime || "0"
    };
    e.playGoldEft = function() {
        if (this.goldFx) {
            this.goldFx.alpha = 1;
            this.goldFx.visile = true;
            this.goldFx.autoPlay = true;
            if (this.goldFx.emitter && this.goldFx.emitter.start) {
                this.goldFx.emitter.start()
            }
            this.goldFx.play();
            this.goldFx.timer.once(1600, this,
            function() {
                this.goldFx.alpha = 0
            })
        }
        if (this.fireAni) {
            this.fireAni.visible = true;
            this.fireAni.once(Laya.Event.COMPLETE, this,
            function() {
                this.fireAni.visible = false
            });
            this.fireAni.play(0, false)
        }
    };
    e.onClosed = function() {
        BaseDialog.prototype.onClosed.call(this);
        this.reset()
    };
    e.reset = function() {
        t = null
    };
    return {
        show: function(e) {
            Resource.load(RES.loadTaskList.redPackage,
            function() {
                i = e;
                if (!t) {
                    t = new n;
                    t.init()
                }
                t.playGoldEft();
                t.updateUi(e);
                t.popup();
                Waiting.hide()
            })
        },
        hide: function() {
            t && t.close()
        }
    }
} ();
var SendRedPackage = function() {
    var t = null;
    var a = null;
    var i = undefined;
    var r = 0;
    function e() {
        e.super(this)
    }
    Laya.class(e, "SendRedPackageFun", sendRedPackageUI, "");
    var n = e.prototype;
    n.init = function() {
        this.width = Game.UIWidth;
        this.height = Game.UIHeight;
        if (Player.getRedGettings()) {
            this.gettings.editable = true
        } else {
            this.gettings.editable = false
        }
        this.on(Laya.Event.CLICK, this,
        function(e) {
            var t = e.target.name;
            switch (t) {
            case "btnGoldMinux":
                this.btnGoldMinuxFun();
                break;
            case "btnGoldAdd":
                this.btnGoldAddFun();
                break;
            case "btnNumMinux":
                this.btnNumMinuxFun();
                break;
            case "btnNumAdd":
                this.btnNumAddFun();
                break;
            case "btnHelp":
                RedPackageRules.show();
                break;
            case "btnSend":
                this.sendRedFun();
                break
            }
        })
    };
    n.sendRedFun = function() {
        var e = myStorage.getItem("redPackageLeftTime");
        if (e) {
            var t = (new Date).getTime();
            if (t < e) {
                MsgToast.show(GameConfig.ErrorMsg.clientErrorMsg(10065));
                return false
            }
        }
        if (!a || a.length <= 0) {
            return false
        }
        var i = a[r];
        var n = this.packageNum.text * 1;
        if (n < i.MinNum) {
            MsgToast.show(GameConfig.ErrorMsg.clientErrorMsg(10069));
            return false
        }
        if (n > i.MaxNum) {
            MsgToast.show(GameConfig.ErrorMsg.clientErrorMsg(10069));
            return false
        }
        var s = this.gettings.text;
        Request.SendRedBagReq(i.MaxMoney, n, s)
    };
    n.formatData = function() {
        if (i) {
            var e = i.split("|");
            if (e.length > 1) {
                var t = Math.floor(Math.random() * e.length);
                this.gettings.text = e[t]
            } else {
                this.gettings.text = e[0]
            }
        }
        if (!a) {
            return false
        }
        a.sort(function(e, t) {
            return e.MaxMoney - t.MaxMoney
        })
    };
    n.btnGoldMinuxFun = function() {
        if (!a || a.length <= 0) {
            return false
        }
        if (r - 1 < 0) {
            return false
        }
        r -= 1;
        var e = a[r];
        this.packageNum.text = e.MaxNum;
        this.packageAmount.text = e.MinMoney
    };
    n.btnGoldAddFun = function() {
        if (!a || a.length <= 0) {
            return false
        }
        if (r + 1 > a.length - 1) {
            return false
        }
        r += 1;
        var e = a[r];
        this.packageNum.text = e.MaxNum;
        this.packageAmount.text = e.MinMoney
    };
    n.btnNumMinuxFun = function() {
        var e = this.packageNum.text * 1;
        var t = a[r];
        if (e <= t.MinNum) {
            return false
        }
        var i = (t.MaxNum - t.MinNum) / 10;
        if (e - i < t.MinNum) {
            return false
        }
        this.packageNum.text = e - i
    };
    n.btnNumAddFun = function() {
        var e = this.packageNum.text * 1;
        var t = a[r];
        if (e >= t.MaxNum) {
            return false
        }
        var i = (t.MaxNum - t.MinNum) / 10;
        if (e + i > t.MaxNum) {
            return false
        }
        this.packageNum.text = e + i
    };
    n.SendRedBagRep = function(e) {
        if (Game.debug) {
            console.log(e)
        }
        if (e.Tag) {
            this.close();
            Request.GetUserMoneyReq();
            if (e.RestTime) {
                var t = (new Date).getTime();
                var i = t + e.RestTime * 1e3;
                myStorage.setItem("redPackageLeftTime", i)
            }
        }
        if (e.MsgID) {
            MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgID))
        }
    };
    n.onClosed = function() {
        BaseDialog.prototype.onClosed.call(this);
        this.reset()
    };
    n.reset = function() {
        t = null;
        r = 0
    };
    return {
        show: function() {
            Waiting.show();
            Resource.load(RES.loadTaskList.redPackage,
            function() {
                a = GameConfig.getRedPackageData();
                i = GameConfig.getSysCfgByKey("RedBag_Blessing");
                if (!t) {
                    t = new e;
                    t.init()
                }
                t.formatData();
                t.popup();
                Waiting.hide()
            })
        },
        hide: function() {
            t && t.close()
        },
        SendRedBagRep: function(e) {
            if (t) {
                t.SendRedBagRep(e)
            }
        }
    }
} ();
var RedPackageIcon = function() {
    var n = "RedPackageIconFun";
    function e() {
        e.super(this)
    }
    Laya.class(e, n, redPackageIconUI, "");
    var t = e.prototype;
    t.init = function() {
        this.initEvent();
        this.LeftTimeTotal = 3;
        this.btnGet.on(Laya.Event.CLICK, this, this.getClick)
    };
    t.display = function() {
        if (this.LeftTimeTotal > 0) {
            this.leftTi.visible = true;
            this.timer.loop(1e3, this, this.runLeftTime)
        }
    };
    t.unDisplay = function() {
        this.reset()
    };
    t.reset = function() {
        this.timer.clear(this, this.runLeftTime);
        this.timer.clearAll(this)
    };
    t.show = function(e, t) {
        this.redBagId = t || 0;
        this.visible = true;
        this.centerX = 6;
        this.centerY = 100;
        if (e) {
            e.visible = true;
            e.mouseEnabled = true;
            this.timer.clear(this, this.FifMinFun);
            this.timer.once(1e3 * 60 * 5, this, this.FifMinFun)
        }
    };
    t.FifMinFun = function() {
        if (this) {
            this.hide()
        }
    };
    t.runLeftTime = function() {
        var e = this;
        if (this.LeftTimeTotal <= 0) {
            this.timer.clear(this, this.runLeftTime);
            this.leftTi.visible = false;
            this.mark_bg.visible = false;
            this.leftTimeImg.visible = false
        } else {
            this.LeftTimeTotal -= 1;
            this.leftTi.value = this.LeftTimeTotal
        }
    };
    t.getClick = function(e) {
        if (this.redBagId && this.LeftTimeTotal <= 0) {
            Request.GetRedBagReq(this.redBagId)
        }
    };
    t.hide = function() {
        this.visible = false;
        this.btnGet.off(Laya.Event.CLICK, this, this.getClick);
        if (this.parent) {
            this.parent.mouseEnabled = false
        }
        this.removeSelf();
        this.reset()
    };
    t.hideById = function(e) {
        if (this.redBagId != e) {
            return false
        }
        this.hide()
    };
    return {
        show: function(t, i) {
            WinUtils.showView(RES.loadTaskList.redPackage, n, t, e,
            function(e) {
                e.show(t, i);
                Waiting.hide()
            })
        },
        hide: function() {
            WinUtils.getSaveUI(n) && WinUtils.getSaveUI(n).hide()
        },
        hideById: function(e) {
            if (WinUtils.getSaveUI(n) && e) {
                WinUtils.getSaveUI(n).hideById(e)
            }
        },
        GetRedBagRep: function(e) {
            if (Game.debug) {
                console.log(e)
            }
            var t = Utils.redPackageStock.delete(e.RedID);
            if (WinUtils.getSaveUI(n)) {
                WinUtils.getSaveUI(n).hide()
            }
            if (t && t.length > 0) {
                FishScene.showRedPackage(t[0])
            }
            if (e.Tag) {
                Request.GetUserMoneyReq();
                GetRedPackage.show(e)
            }
            if (e.MsgID) {
                MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgID))
            }
        }
    }
} ();
var SuperMatchResult = function() {
    function e() {
        e.super(this)
    }
    Laya.class(e, "SuperMatchResult", SuperMatchResultUI, "");
    var t = e.prototype;
    t.initData = function(e) {
        this.on(Laya.Event.CLICK, this,
        function(e) {
            if (e.target.name == "btnStart") {
                if (this.shareTip.visible && Channel && Channel.forward) {
                    Channel.forward(Game.ShareType.SUPER_MATCH + FishScene.getSceneId(),
                    function() {
                        var e = FishScene.getSceneId();
                        var t = SuperMatch.reportIdMap[e];
                        ActionEventReport.report(ActionEventReport.actionIndex.ID1015, {
                            t: t
                        });
                        Request.MatchChallengeShareReq(e, 0)
                    },
                    0, 0);
                    return
                }
                n.MatchAgain = true;
                this.isClearRes = false;
                FishScene.LeaveGameSvrReq();
                this.close()
            }
        })
    };
    t.updateFreeTimes = function(e) {
        if (e == Game.sceneConfig.sceneID.scene_SuperMatchJuan && e <= Game.sceneConfig.sceneID.scene_SuperMatchSkill) {
            this.shareTip.visible = false;
            this.LeftTimes++
        }
    };
    t.updateData = function(e) {
        this.fc_dayMaxScore.value = e.MaxScore;
        this.fc_score.value = e.Score;
        this.fc_allScore.value = e.FinalScore;
        this.fc_rank.value = e.Rank > 0 ? e.Rank: "...";
        var t = Player.getVipLevel();
        var i = GameConfig.getVipInfoByLevel(t);
        if (i) {
            var n = Math.floor(i.MatchOdd / 100);
            this.fc_vipUp.value = n + "%"
        }
        if (e.PrizeId >= Game.item.QinTongDaoDan && e.PrizeId <= Game.item.BaiJinDaoDan) {
            this.rewardIcon.skin = "resource/superMatch/" + e.PrizeId + ".png";
            this.fc_rewardNum.value = "x" + e.PrizeNum
        }
        if (e.Rank > 0 && e.Rank <= 20) {
            this.unRankTipBox.visible = false;
            this.rewardBox.visible = true
        } else {
            this.unRankTipTxt.visible = e.Rank ? false: true;
            this.unRankTipBox.visible = true;
            this.rewardBox.visible = false
        }
        this.shareTip.visible = e.LeftFreeTimes <= 0 && e.LeftChallengeShareTimes > 0 && Player.OpenMatchShare() ? true: false
    };
    t.onOpened = function() {
        var e = FishScene.getCurrentCannon();
        if (e && e.stop) {
            e.stop(true)
        }
        n.opened && n.opened()
    };
    t.onClosed = function(e) {
        EventBus.off(EventConfig.SuperMatch.UpdateFreeTimes, this, this.updateFreeTimes);
        if (e == "close") {
            FishScene.LeaveGameSvrReq()
        }
        BaseDialog.prototype.onClosed.call(this);
        n.closed && n.closed();
        i = null
    };
    t.reset = function() {
        i = null
    };
    var i = null;
    var n = {
        MatchAgain: false,
        opened: null,
        closed: null,
        show: function(t) {
            console.log(t);
            Waiting.show();
            WinUtils.showDialog(RES.loadTaskList.superMatchResult, e,
            function(e) {
                e.resList = ["res/atlas/resource/superMatchResult.atlas", "UIRoot/superMatch/SuperMatchResult.json"];
                i = e;
                i.initData(t);
                i.updateData(t);
                i.popup();
                Waiting.hide()
            })
        }
    };
    return n
} ();
var SuperMatch = function() {
    var e = "SuperMatch";
    function i() {
        i.super(this)
    }
    Laya.class(i, "SuperMatch", SuperMatchUI, "");
    var t = i.prototype;
    t.init = function() {
        this.initEvent();
        this.DailyRankList.scrollBar.hide = true;
        this.weekRankList.scrollBar.hide = true;
        EventBus.on(EventConfig.SuperMatch.UpdateFreeTimes, this, this.updateFreeTimes);
        this.on(Laya.Event.CLICK, this,
        function(e) {
            if (e.target.name == "btnStart") {
                if (this.shareTip.visible && Channel && Channel.forward) {
                    Channel.forward(Game.ShareType.SUPER_MATCH + Game.sceneConfig.sceneID.scene_SuperMatch,
                    function() {
                        var e = i.reportIdMap[Game.sceneConfig.sceneID.scene_SuperMatch];
                        ActionEventReport.report(ActionEventReport.actionIndex.ID1014, {
                            t: e
                        });
                        Request.MatchChallengeShareReq(Game.sceneConfig.sceneID.scene_SuperMatch, 0)
                    },
                    0, 0);
                    return
                }
                GameCenter.selectSceneFn(Game.sceneConfig.sceneID.scene_SuperMatch);
                SuperMatchDoor.close()
            } else if (e.target.name == "btnRule") {
                SuperMatchRule.show(Game.sceneConfig.sceneID.scene_SuperMatch)
            }
        })
    };
    t.updateFreeTimes = function(e) {
        if (e == Game.sceneConfig.sceneID.scene_SuperMatch) {
            this.fc_leftTimes.value = 1;
            this.leftTimesBox.visible = true;
            this.shareTip.visible = false;
            this.costGoldBox.visible = false
        }
    };
    t.reset = function() {};
    t.hide = function() {
        EventBus.off(EventConfig.SuperMatch.UpdateFreeTimes, this, this.updateFreeTimes);
        this.removeSelf()
    };
    t.updateData = function(e) {
        console.debug(e);
        this.label_jiFen.text = e.Score + "";
        this.label_rank.text = e.Rank + "";
        this.label_time.text = e.ActTime;
        Player.setMatchDayPrize(e.DayPrize);
        var t = GameConfig.getSysCfgByKey("SuperMatch_GoldValue");
        this.fc_MatchGold.value = t ? t: 5e4;
        if (e.BulletNum > 0 && e.BulletNum < 2e3 || e.IsSettlement == 1) {
            this.btnStartInnerImg.skin = "resource/superMatch/zi_jixu.png";
            this.shareTip.visible = false;
            this.costGoldBox.visible = false;
            this.leftTimesBox.visible = false;
            if (!e.IsSettlement && e.BulletNum == 0) {}
        } else {
            this.btnStartInnerImg.skin = "resource/superMatch/zi_mianfeitiaozhan.png";
            if (e.LeftTimes > 0) {
                this.fc_leftTimes.value = e.LeftTimes;
                this.leftTimesBox.visible = true
            } else {
                this.leftTimesBox.visible = false;
                this.btnStartInnerImg.skin = "resource/superMatch/zi_tiaozhan2.png";
                if (e.LeftChallengeShareTimes > 0 && Player.OpenMatchShare()) {
                    this.shareTip.visible = true;
                    this.costGoldBox.visible = false;
                    this.leftTimesBox.visible = false
                } else if (e.LeftGoldTimes > 0) {
                    this.costGoldBox.visible = true;
                    this.shareTip.visible = false;
                    this.leftTimesBox.visible = false
                }
            }
        }
        if (e.CurrDay) {
            var i = e.CurrDay.split("|");
            if (i.length == 2) {
                this.label_month.text = i[0];
                this.label_day.text = i[1]
            }
        }
        var n = [];
        for (var s = 0; s < e.WeekRank.length; s++) {
            var a = e.WeekRank[s];
            var r = {
                icon: "",
                rankIcon: "",
                fc_num: {
                    value: "x" + a.PrizeItemNum
                },
                fc_jiFen: {
                    value: a.Score
                },
                labelName: a.Nick
            };
            if (s < 3) {
                r["rankIcon"] = {
                    skin: "resource/superMatch/img_win" + (s + 1) + ".png"
                };
                if (a.PrizeItemId >= Game.item.QinTongDaoDan && a.PrizeItemId <= Game.item.BaiJinDaoDan) {
                    r["icon"] = "resource/superMatch/" + a.PrizeItemId + ".png";
                    r["fc_num"] = {
                        value: "x" + a.PrizeItemNum
                    }
                }
                n.push(r)
            }
        }
        this.weekRankList.array = n;
        var o = [];
        for (var s = 0; s < e.DayRank.length; s++) {
            var a = e.DayRank[s];
            var r = {
                icon: "",
                rank: "",
                fc_num: {
                    value: "x" + a.PrizeItemNum
                },
                rankRange: "",
                fc_jiFen: {
                    text: a.Score
                },
                name: a.Nick
            };
            if (s < 3) {
                r["rank"] = {
                    skin: "resource/superMatch/img_paiming" + (s + 1) + ".png",
                    visible: true
                };
                r["rankRange"] = {
                    visible: false,
                    value: 0
                }
            } else {
                r["rank"] = {
                    visible: false
                };
                r["rankRange"] = {
                    visible: true,
                    value: s + 1
                }
            }
            if (a.PrizeItemId >= Game.item.QinTongDaoDan && a.PrizeItemId <= Game.item.BaiJinDaoDan) {
                r["icon"] = "resource/superMatch/" + a.PrizeItemId + ".png"
            }
            o.push(r)
        }
        this.DailyRankList.array = o
    };
    var n = null;
    var s = {
        opened: null,
        closed: null,
        reportIdMap: {
            7 : 1,
            8 : 2,
            9 : 3,
            10 : 4
        },
        init: function(e) {
            n = e
        },
        show: function() {
            Waiting.show();
            Request.GetSuperMatchRankReq()
        },
        GetSuperMatchRankRep: function(t) {
            console.log(t);
            Waiting.show();
            WinUtils.showView(RES.loadTaskList.superMatch, e, n, i,
            function(e) {
                e.isClearRes = false;
                e.updateData(t);
                e.visible = true;
                Waiting.hide()
            })
        },
        MatchAgain: function() {
            SuperMatchResult.MatchAgain = false;
            SuperMatchDoor.setMatchAgain(false);
            GameCenter.selectSceneFn(Game.sceneConfig.sceneID.scene_SuperMatch)
        },
        hide: function() {
            if (WinUtils.getSaveUI(e)) {
                WinUtils.getSaveUI(e).hide()
            }
        }
    };
    return s
} ();
var SuperMatchRule = function() {
    var i = null;
    function e() {
        e.super(this)
    }
    Laya.class(e, "SuperMatchRule", SuperMatchRuleUI, "");
    var t = e.prototype;
    t.initData = function(e) {
        var t = this;
        switch (e) {
        case Game.sceneConfig.sceneID.scene_SuperMatch:
            t.box1.visible = true;
            t.box2.visible = false;
            t.box3.visible = false;
            t.box4.visible = false;
            t.rulesFun();
            break;
        case Game.sceneConfig.sceneID.scene_SuperMatchJuan:
            t.box1.visible = false;
            t.box2.visible = true;
            t.box3.visible = false;
            t.box4.visible = false;
            break;
        case Game.sceneConfig.sceneID.scene_SuperMatchDaoDan:
            t.box1.visible = false;
            t.box2.visible = false;
            t.box3.visible = true;
            t.box4.visible = false;
            break;
        case Game.sceneConfig.sceneID.scene_SuperMatchSkill:
            t.box1.visible = false;
            t.box2.visible = false;
            t.box3.visible = false;
            t.box4.visible = true;
            break;
        default:
            t.box1.visible = true;
            t.box2.visible = false;
            t.box3.visible = false;
            t.box4.visible = false;
            t.rulesFun();
            break
        }
    };
    t.rulesFun = function() {
        this.btnList = [this.btnJoin, this.btnMatch, this.btnReward];
        this.titleArr = [["resource/superMatchRule/zi_cansai2.png", "resource/superMatchRule/zi_cansai.png"], ["resource/superMatchRule/zi_bisai2.png", "resource/superMatchRule/zi_bisai.png"], ["resource/superMatchRule/zi_jiangli2.png", "resource/superMatchRule/zi_jiangli.png"]];
        this.currIndex = 0;
        this.off(Laya.Event.CLICK, this, this.clickFun);
        this.on(Laya.Event.CLICK, this, this.clickFun)
    };
    t.clickFun = function(e) {
        var t = this;
        if (e.target.name == "btnJoin") {
            t.changeView(0)
        } else if (e.target.name == "btnMatch") {
            t.changeView(1)
        } else if (e.target.name == "btnReward") {
            t.changeView(2)
        }
    };
    t.changeView = function(e) {
        if (e == this.currIndex) {
            return
        }
        this.btnList[this.currIndex].skin = "resource/superMatchRule/btn_biaoqian.png";
        this["title_" + this.currIndex].skin = this.titleArr[this.currIndex][0];
        this["rule_" + this.currIndex].visible = false;
        this.btnList[e].skin = "resource/superMatchRule/btn_sel.png";
        this["title_" + e].skin = this.titleArr[e][1];
        this["rule_" + e].visible = true;
        this.currIndex = e
    };
    t.onOpened = function() {
        n.opened && n.opened()
    };
    t.onClosed = function() {
        BaseDialog.prototype.onClosed.call(this);
        n.closed && n.closed();
        this.reset()
    };
    t.reset = function() {
        i = null
    };
    var n = {
        opened: null,
        closed: null,
        show: function(t) {
            Waiting.show();
            WinUtils.showDialog(RES.loadTaskList.superMatchRule, e,
            function(e) {
                i = e;
                i.initData(t);
                i.popup();
                Waiting.hide()
            })
        }
    };
    return n
} ();
var SuperMatchDoor = function() {
    var e = SuperMatchDoorUI.prototype;
    var t = {};
    e.init = function() {
        Laya.stage.on(Laya.Event.def_updateUserInfo, this, this.updateData, [true]);
        this.selectedBox = null;
        this.showCntInst = null;
        this.menuInstMap = {};
        this.GetMatchRankReqType = 0;
        this.menuList.scrollBar.hide = true;
        this.menuList.selectEnable = true;
        this.menuList.selectHandler = new Laya.Handler(this, this.selectHandler);
        var e = [{
            sceneId: Game.sceneConfig.sceneID.scene_SuperMatch,
            state_0: {
                m_zi: "resource/superMatch/zi_dajiangsai2.png"
            },
            state_1: {
                m_zi: "resource/superMatch/zi_dajiangsai1.png"
            }
        },
        {
            sceneId: Game.sceneConfig.sceneID.scene_SuperMatchJuan,
            state_0: {
                m_zi: "resource/superMatch/zi_huafeisai2.png"
            },
            state_1: {
                m_zi: "resource/superMatch/zi_huafeisai1.png"
            }
        },
        {
            sceneId: Game.sceneConfig.sceneID.scene_SuperMatchDaoDan,
            state_0: {
                m_zi: "resource/superMatch/zi_daodansai2.png"
            },
            state_1: {
                m_zi: "resource/superMatch/zi_daodansai1.png"
            }
        },
        {
            sceneId: Game.sceneConfig.sceneID.scene_SuperMatchSkill,
            state_0: {
                m_zi: "resource/superMatch/zi_jinengsai2.png"
            },
            state_1: {
                m_zi: "resource/superMatch/zi_jinengsai1.png"
            }
        }];
        this.menuList.array = e;
        if (Game.miniGameIOS()) {
            this.btnChong.visible = false;
            this.btnDui.visible = false
        }
        this.on(Laya.Event.CLICK, this,
        function(e) {
            if (e.target.name == "btnChong") {
                ShopMall.show(undefined, 3);
                this.close()
            } else if (e.target.name == "btnDui") {
                ExChangeJuan.show();
                this.close()
            } else if (e.target.name == "btnClose") {
                this.close()
            }
        })
    };
    e.updateData = function(e, t) {
        this.fc_gold.value = Player.getGold();
        this.fc_Juan.value = Player.getJiangJuan();
        if (!e) {
            if (t != undefined) {
                if (t >= 0 && t <= this.menuList.array.length) {
                    this.menuList.selectedIndex = t
                }
            } else {
                if (this.menuList.selectedIndex < 0) {
                    this.menuList.selectedIndex = 0
                } else {
                    this.selectHandler(this.menuList.selectedIndex)
                }
            }
        }
    };
    e.selectHandler = function(e) {
        if (this.selectedBox) {
            this.selectedBox.getChildByName("state_0").visible = true;
            this.selectedBox.getChildByName("state_1").visible = false
        }
        this.selectedBox = this.menuList.selection;
        var t = this.menuList.array[e];
        if (this.selectedBox) {
            this.selectedBox.getChildByName("state_0").visible = false;
            this.selectedBox.getChildByName("state_1").visible = true
        }
        if (this.showCntInst && this.showCntInst.hide) {
            this.showCntInst.hide()
        }
        if (this.menuInstMap[t.sceneId]) {
            this.showCntInst = this.menuInstMap[t.sceneId];
            if (this.showCntInst && this.showCntInst.show) {
                if (t.sceneId >= Game.sceneConfig.sceneID.scene_SuperMatchJuan && t.sceneId <= Game.sceneConfig.sceneID.scene_SuperMatchSkill) {
                    this.GetMatchRankReq(t.sceneId)
                }
                this.showCntInst.show()
            }
        } else {
            if (t.sceneId == Game.sceneConfig.sceneID.scene_SuperMatch) {
                SuperMatch.init(this.cntBox);
                SuperMatch.show();
                this.menuInstMap[t.sceneId] = SuperMatch;
                this.showCntInst = SuperMatch
            } else if (t.sceneId >= Game.sceneConfig.sceneID.scene_SuperMatchJuan && t.sceneId <= Game.sceneConfig.sceneID.scene_SuperMatchSkill) {
                var i = new SuperMatchJuan;
                this.menuInstMap[t.sceneId] = i;
                if (i && i.show) {
                    this.GetMatchRankReq(t.sceneId);
                    i.initData(this.cntBox, t.sceneId);
                    i.show();
                    this.showCntInst = i
                }
            }
        }
    };
    e.GetMatchRankReq = function(e) {
        Waiting.show();
        this.GetMatchRankReqType = e;
        Request.GetMatchRankReq(e)
    };
    e.updateCntData = function(e) {
        var t = this.menuInstMap[this.GetMatchRankReqType];
        if (t && t.updateData) {
            t.updateData(e)
        }
    };
    e.onOpened = function() {
        var e = 0;
        if (s > 0) {
            var t = this.menuList.array;
            for (var i = 0; i < t.length; i++) {
                var n = t[i];
                if (n && n.sceneId == s) {
                    e = i;
                    break
                }
            }
        }
        this.updateData(false, e || 0);
        r.opened && r.opened()
    };
    e.onClosed = function() {
        BaseDialog.prototype.onClosed.call(this);
        i = null;
        s = -1;
        r.closed && r.closed()
    };
    e.reset = function() {
        if (i) {
            i.close()
        }
        i = null
    };
    var i = null,
    n = false,
    s = -1,
    a = 1;
    var r = {
        opened: null,
        closed: null,
        show: function(t) {
            Waiting.show();
            WinUtils.showDialog(RES.loadTaskList.superMatch, SuperMatchDoorUI,
            function(e) {
                e.isClearRes = false;
                i = e;
                s = t;
                i.popup();
                Waiting.hide()
            })
        },
        close: function() {
            if (i) {
                i.close()
            }
        },
        setMatchAgain: function(e) {
            a = Game.state.get();
            n = e
        },
        getMatchAgain: function() {
            return n
        },
        MatchAgain: function() {
            SuperMatchResult.MatchAgain = false;
            n = false;
            if (a >= Game.sceneConfig.sceneID.scene_SuperMatch && a <= Game.sceneConfig.sceneID.scene_SuperMatchSkill) {
                GameCenter.selectSceneFn(a);
                a = 0
            }
        },
        GetMatchRankRep: function(e) {
            if (i) {
                i.updateCntData(e);
                Waiting.hide()
            }
        }
    };
    return r
} ();
var SuperMatchJuan = function() {
    function h(e) {
        if (e) {
            var t = e.split(":");
            if (t.length >= 2) {
                return t[0] + ":" + t[1]
            }
            return false
        }
        return false
    }
    var e = SuperMatchJuanUI.prototype;
    e.initData = function(e, i) {
        var t = this;
        this.initEvent();
        this.wrapBox = e;
        this.rankList.scrollBar.hide = true;
        EventBus.on(EventConfig.SuperMatch.UpdateFreeTimes, this, this.updateFreeTimes);
        this.on(Laya.Event.CLICK, this,
        function(e) {
            var t = e.target.name;
            if (t == "btnStart") {
                if (this.shareTip.visible && Channel && Channel.forward) {
                    Channel.forward(Game.ShareType.SUPER_MATCH + i,
                    function() {
                        var e = SuperMatch.reportIdMap[i];
                        ActionEventReport.report(ActionEventReport.actionIndex.ID1014, {
                            t: e
                        });
                        Request.MatchChallengeShareReq(i, 0)
                    },
                    0, 0);
                    return
                }
                GameCenter.selectSceneFn(i);
                SuperMatchDoor.close()
            } else if (t === "btnRule") {
                SuperMatchRule.show(i)
            }
        });
        this.once(Laya.Event.UNDISPLAY, this,
        function() {
            EventBus.off(EventConfig.SuperMatch.UpdateFreeTimes, this, this.updateFreeTimes)
        })
    };
    e.updateFreeTimes = function(e) {
        if (e >= Game.sceneConfig.sceneID.scene_SuperMatchJuan && e <= Game.sceneConfig.sceneID.scene_SuperMatchSkill) {
            this.fc_leftTimes.value = 1;
            this.leftTimesBox.visible = true;
            this.shareTip.visible = false;
            this.costGoldBox.visible = false
        }
    };
    e.show = function() {
        Waiting.show();
        if (!this.displayedInStage) {
            this.wrapBox.addChild(this)
        }
        this.visible = true
    };
    e.hide = function() {
        this.visible = false
    };
    e.updateData = function(e) {
        console.log(e);
        if (!e) {
            return
        }
        this.fc_rank.value = e.Rank;
        this.fc_leftTimes.value = e.LeftTimes;
        this.fc_rank.visible = e.Rank > 0 ? true: false;
        this.rankTxtTip.visible = !this.fc_rank.visible;
        var t = h(e.StartTime);
        var i = h(e.EndTime);
        this.timeLabel.text = t + "-" + i;
        this.timeBox.visible = e.StartTime ? true: false;
        if (e.BulletNum > 0 && e.BulletNum < 500 || e.IsSettlement == 1) {
            this.btnStartInnerImg.skin = "resource/superMatch/zi_jixu.png";
            this.leftTimesBox.visible = false;
            this.shareTip.visible = false;
            this.costGoldBox.visible = false
        } else {
            this.btnStartInnerImg.skin = "resource/superMatch/zi_mianfeitiaozhan.png";
            if (e.LeftTimes > 0) {
                this.fc_leftTimes.value = e.LeftTimes;
                this.leftTimesBox.visible = true;
                this.shareTip.visible = false;
                this.costGoldBox.visible = false
            } else {
                this.leftTimesBox.visible = false;
                this.btnStartInnerImg.skin = "resource/superMatch/zi_tiaozhan2.png";
                if (e.LeftChallengeShareTimes > 0 && Player.OpenMatchShare()) {
                    this.shareTip.visible = true
                } else if (e.LeftBuyTimes > 0) {
                    this.costGoldBox.visible = true
                }
            }
        }
        this.fc_MatchGold.value = e.BuyGold;
        var n = e.DayRank;
        var s = [];
        for (var a = 0; a < n.length; a++) {
            var r = n[a];
            var o = GameConfig.Item.getItemInfoById(r.PrizeItemId);
            var l = "";
            if (o && o.skin) {
                l = o.skin
            }
            s.push({
                rankIcon: r.Rank < 4 ? {
                    skin: "resource/superMatch/img_paiming" + r.Rank + ".png",
                    visible: true
                }: {
                    visible: false
                },
                sex: r.sex == 1 ? {
                    skin: "resource/common/icn-men.png",
                    visible: true
                }: r.sex == 2 ? {
                    skin: "resource/common/icn-women.png",
                    visible: true
                }: {
                    visible: false
                },
                rewardIcon: l,
                nickLabel: r.Nick,
                uidLabel: "编号:" + r.UserId,
                vipIcon: "resource/icon/vipLevel/vip" + r.VipLevel + ".png",
                userHead: {
                    skin: r.AvatarUrl ? r.AvatarUrl: "resource/head/" + (r.AvatarId || 1) + ".png",
                    visible: true
                },
                fc_num: {
                    value: r.PrizeItemNum
                },
                fc_rank: r.Rank > 3 ? {
                    value: r.Rank,
                    visible: true
                }: {
                    value: r.Rank,
                    visible: false
                },
                fc_JiFen: {
                    value: r.Score
                }
            })
        }
        this.rankList.array = s;
        Waiting.hide()
    };
    return SuperMatchJuanUI
} ();
var SuperMatchJuanResult = function() {
    var e = SuperMatchJuanResultUI.prototype;
    e.init = function() {
        this.costGold = 0;
        this.btnExit.clickHandler = new Laya.Handler(this,
        function() {
            FishScene.LeaveGameSvrReq();
            this.close()
        });
        this.btnAgain.clickHandler = new Laya.Handler(this,
        function() {
            if (this.shareTip.visible && Channel && Channel.forward) {
                Channel.forward(Game.ShareType.SUPER_MATCH + FishScene.getSceneId(),
                function() {
                    var e = FishScene.getSceneId();
                    var t = SuperMatch.reportIdMap[e];
                    ActionEventReport.report(ActionEventReport.actionIndex.ID1015, {
                        t: t
                    });
                    Request.MatchChallengeShareReq(e, 0)
                },
                0, 0);
                return
            }
            if (this.LeftTimes > 0) {
                this.isClearRes = false;
                SuperMatchDoor.setMatchAgain(true);
                FishScene.LeaveGameSvrReq();
                this.close()
            } else {
                if (this.LeftBuyTimes > 0) {
                    var e = Player.getGold();
                    if (e >= this.costGold) {
                        this.isClearRes = false;
                        SuperMatchDoor.setMatchAgain(true);
                        FishScene.LeaveGameSvrReq();
                        this.close()
                    } else {
                        if (Game.miniGameIOS()) {
                            var t = MessageBox.show("今日已达到挑战上限,明日再战吧！");
                            t.submitCall = function() {
                                FishScene.LeaveGameSvrReq();
                                if (i) {
                                    i.close()
                                }
                            };
                            t.closeCall = function() {
                                FishScene.LeaveGameSvrReq();
                                if (i) {
                                    i.close()
                                }
                            };
                            return
                        }
                        var t = MessageBox.show("金币不足，前往充值?");
                        t.submitCall = function() {
                            ShopMall.show()
                        };
                        t.closeCall = function() {
                            FishScene.LeaveGameSvrReq();
                            if (i) {
                                i.close()
                            }
                        }
                    }
                } else {
                    var t = MessageBox.show("今日已达到挑战上限,明日再战吧！");
                    t.submitCall = function() {
                        FishScene.LeaveGameSvrReq();
                        if (i) {
                            i.close()
                        }
                    };
                    t.closeCall = function() {
                        FishScene.LeaveGameSvrReq();
                        if (i) {
                            i.close()
                        }
                    }
                }
            }
        });
        EventBus.on(EventConfig.SuperMatch.UpdateFreeTimes, this, this.updateFreeTimes)
    };
    e.updateFreeTimes = function(e) {
        if (e >= Game.sceneConfig.sceneID.scene_SuperMatchJuan && e <= Game.sceneConfig.sceneID.scene_SuperMatchSkill) {
            this.shareTip.visible = false;
            this.LeftTimes++
        }
    };
    e.updateData = function(e) {
        this.costGold = e.BuyGold;
        this.fc_Score.value = e.Score;
        this.maxScoreLabel.text = e.MaxScore;
        this.RankLabel.text = e.Rank;
        this.AllRankNumLabel.text = e.JoinNum;
        this.fc_costGold.value = e.BuyGold;
        this.LeftTimes = e.LeftTimes;
        this.LeftBuyTimes = e.LeftBuyTimes;
        if (e.LeftTimes <= 0) {
            this.shareTip.visible = false;
            this.costGoldBox.visible = false;
            if (e.LeftChallengeShareTimes > 0 && Player.OpenMatchShare()) {
                this.shareTip.visible = true
            } else if (e.LeftBuyTimes > 0) {
                this.costGoldBox.visible = true
            }
        }
    };
    e.onOpened = function() {
        t.opened && t.opened()
    };
    e.onClosed = function() {
        EventBus.off(EventConfig.SuperMatch.UpdateFreeTimes, this, this.updateFreeTimes);
        BaseDialog.prototype.onClosed.call(this);
        t.closed && t.closed();
        i = null
    };
    e.reset = function() {
        i.close();
        i = null
    };
    var i = null;
    var t = {
        MatchAgain: false,
        opened: null,
        closed: null,
        show: function(t) {
            console.log(t);
            Waiting.show();
            WinUtils.showDialog(RES.loadTaskList.superMatchJuanResult, SuperMatchJuanResultUI,
            function(e) {
                e.resList = ["res/atlas/resource/superMatchJuanResult.atlas", "UIRoot/superMatch/SuperMatchJuanResult.json"];
                i = e;
                i.updateData(t);
                i.popup();
                Waiting.hide()
            })
        }
    };
    return t
} ();
var SuperMatchShareTip = function() {
    function e() {
        e.super(this)
    }
    Laya.class(e, "SuperMatchShareTip", SuperMatchShareTipUI, "");
    var t = e.prototype;
    t.initData = function(t) {
        var i = FishScene.getSceneId();
        var n = SuperMatch.reportIdMap[i];
        EventBus.on(EventConfig.SuperMatch.UpdateBltShareTimes, this, this.updateBltShareTime);
        this.on(Laya.Event.CLICK, this,
        function(e) {
            if (e.target.name == "btnBlt") {
                Channel.forward(Game.ShareType.SUPER_MATCH + FishScene.getSceneId(),
                function() {
                    ActionEventReport.report(ActionEventReport.actionIndex.ID1017, {
                        t: n
                    });
                    Request.MatchChallengeShareReq(i, 1)
                },
                0, 0, {
                    UserId: Player.getUserId(),
                    SceneId: FishScene.getSceneId(),
                    ShareTime: t.NowTime,
                    GameTimesId: t.GameTimesId,
                    ShareId: t.ShareId
                })
            } else if (e.target.name == "txtNo") {
                ActionEventReport.report(ActionEventReport.actionIndex.ID1018, {
                    t: n
                });
                this.close();
                Request.GetMatchSettlementReq()
            }
        });
        this.LeftShareTimes = t.LeftShareTimes;
        this.fc_leftTimes.value = t.LeftShareTimes;
        if (this.htmlDiv) {
            this.htmlDiv.style.font = "SimHei";
            this.htmlDiv.style.width = 433;
            this.htmlDiv.style.lineHeight = 32;
            this.htmlDiv.innerHTML = "<font style='fontSize:24' color='#ffe2d6'>子弹不够啦，分享给好友并点击链接返回游戏，即可领取额外</font><font style='fontSize:24' color='#fffa72'>" + t.BulletNumByShare + "</font><font style='fontSize:24' color='#ffe2d6'>发子弹哦!</font>"
        }
        ActionEventReport.report(ActionEventReport.actionIndex.ID1016, {
            t: n
        })
    };
    t.updateBltShareTime = function(e) {};
    t.close = function(e, t) {
        if (e != "side") {
            laya.ui.Dialog.prototype.close.call(this, e, t)
        }
    };
    t.onClosed = function(e) {
        EventBus.off(EventConfig.SuperMatch.UpdateBltShareTimes, this, this.updateBltShareTime);
        i = null
    };
    var i = null;
    var n = {
        MatchAgain: false,
        opened: null,
        closed: null,
        show: function(t) {
            console.log(t);
            Waiting.show();
            WinUtils.showDialog(RES.loadTaskList.superMatch, e,
            function(e) {
                e.isClearRes = false;
                i = e;
                i.initData(t);
                i.popup();
                Waiting.hide()
            })
        },
        hide: function() {
            i && i.close()
        }
    };
    function s(e) {
        if (Game.server && Game.server.socket && Game.server.socket.connected()) {
            if (e.UserId && e.SceneId && e.ShareTime && e.GameTimesId && e.ShareId) {
                Laya.timer.once(2e3, null,
                function() {
                    Request.SendMatchShareReq({
                        UserId: e.UserId * 1,
                        SceneId: e.SceneId * 1,
                        ShareTime: e.ShareTime,
                        GameTimesId: e.GameTimesId * 1,
                        ShareId: e.ShareId * 1
                    })
                })
            }
        } else {
            Laya.timer.once(1e3, null, s, [e])
        }
    }
    EventBus.on(EventConfig.WX_ONSHOW, this,
    function(e) {
        if (e && e.query) {
            var t = e.query;
            s(t)
        }
    });
    return n
} ();
var ActCards = function() {
    var r = "ActCards";
    var e = Laya.Tween;
    var i = null;
    var f = null;
    var o = null;
    var d = 0;
    var n = 0;
    var s = 0;
    var a;
    var t = Laya.Event;
    var l = 0;
    var h = 0;
    var u = 0;
    var c = 0;
    var g = 0;
    var p = 0;
    var _ = 0;
    var m = false;
    var v = Laya.Image;
    var y = Laya.FontClip;
    var I = ActCardsUI.prototype;
    I.init = function() {
        i = this;
        this.on(Laya.Event.CLICK, this,
        function(e) {
            var t = e.target.name;
            if (!m) {
                if (t === "btn_choujiang") {
                    m = true;
                    i.chouJiang(0)
                } else if (t === "btn_choujiang_2") {
                    m = true;
                    i.chouJiang(105)
                } else if (t === "btn_choujiang_3") {
                    m = true;
                    i.chouJiang(106)
                } else if (t === "btn_choujiang_4") {
                    m = true;
                    i.chouJiang(107)
                }
            }
        });
        f = [{
            x: this.box_prize_1.x,
            y: this.box_prize_1.y
        },
        {
            x: this.box_prize_2.x,
            y: this.box_prize_2.y
        },
        {
            x: this.box_prize_3.x,
            y: this.box_prize_3.y
        },
        {
            x: this.box_prize_4.x,
            y: this.box_prize_4.y
        },
        {
            x: this.box_prize_5.x,
            y: this.box_prize_5.y
        },
        {
            x: this.box_prize_6.x,
            y: this.box_prize_6.y
        },
        {
            x: this.box_prize_7.x,
            y: this.box_prize_7.y
        },
        {
            x: this.box_prize_8.x,
            y: this.box_prize_8.y
        },
        {
            x: this.box_prize_9.x,
            y: this.box_prize_9.y
        },
        {
            x: this.box_prize_10.x,
            y: this.box_prize_10.y
        }];
        a = this.spize_tip;
        this.spize_tip.on(Laya.Event.MOUSE_DOWN, this, C);
        this.getCradNum()
    };
    function S(e, t) {
        return e - t
    }
    function C(e) {
        n = a.mouseX;
        s = a.mouseY;
        Laya.stage.on(t.MOUSE_MOVE, i, w);
        Laya.stage.on(t.MOUSE_UP, i, b)
    }
    function b(e) {
        Laya.stage.off(t.MOUSE_MOVE, i, w);
        Laya.stage.off(t.MOUSE_UP, i, b)
    }
    function w() {
        var e = a.mouseX;
        var t = a.mouseY;
        a.scrollX += n - e;
        a.scrollY += s - t;
        n = e;
        s = t
    }
    I.show = function(e, t) {
        this.updateUI(e)
    };
    I.chouJiang = function(e) {
        Request.getActPrizeReq(d, e, null, null)
    };
    I.toGetPrize = function(i) {
        if (!o) {
            o = new Laya.Animation
        }
        o.loadAnimation("UIRoot/FX/card_shine.ani");
        this.box_choujiangchi.addChild(o);
        o.pos(this.box_prize_1.x, this.box_prize_1.y);
        o.play();
        var n = 0;
        var s = 0;
        var a = Math.floor(Math.random() * 10 + 1);
        Laya.timer.loop(100, this,
        function() {
            if (n == 10) {
                n = 0
            }
            if (a == 10) {
                a = 9
            }
            if (s > 10) {
                if (n == a) {
                    Laya.timer.clearAll(this);
                    o.clear();
                    o = null;
                    m = false;
                    WinUtils.getSaveUI(r).checkSuperPrize(i.Item);
                    var e = false;
                    for (var t = 0; t < i.Item.length; t++) {
                        if (i.Item[t].ItemId == 118) {
                            e = true
                        }
                    }
                    GetReward.show("", i.Item, undefined, undefined, undefined, e);
                    return
                }
            }
            o.pos(f[n].x, f[n].y);
            n++;
            s++
        })
    };
    I.checkSuperPrize = function(e) {
        for (var t = 0; t < e.length; t++) {
            var i = e[t].ItemId;
            if (i == 118) {
                this.zhengxi_1.visible = false;
                this.superPrize_owned_1.visible = true;
                this.card_bg_1.gray = true
            }
        }
    };
    I.updateUI = function(e) {
        d = e.ActId;
        this.spize_tip.text = e.Desc;
        this.label_acttime.text = x(e.StartDate) + "~" + x(e.EndDate);
        var t = e.DivideGold.Limit1;
        var i = e.DivideGold.LimitGet;
        if (i == 0) {
            this.zhengxi_1.visible = true;
            this.superPrize_owned_1.visible = false;
            this.card_bg_1.gray = false
        } else {
            this.zhengxi_1.visible = false;
            this.superPrize_owned_1.visible = true;
            this.card_bg_1.gray = true
        }
        var n = e.DivideGold.Items;
        var s = 50;
        if (n[0].ItemValid && n[0].ItemValid != 0) {
            var a = Utils.LeftTimeFormat2(n[0].ItemValid, false);
            this.prize_time_1.value = a;
            this.prize_time_1.visible = true
        } else {
            this.prize_time_1.visible = false
        }
        this.label_topPrize_tip.value = e.DivideGold.DivideGold;
        this.label_topPrizeNumer.value = e.DivideGold.DivideNum + "人";
        for (var r = 1; r < 10; r++) {
            var o = new Laya.Sprite;
            var l = new v(Utils.getItemIconBgSkin(GameConfig.Item.getItemInfoById(n[r].ItemId).FrameLevel));
            l.size(65, 65);
            var h = new v("resource/icon/" + n[r].ItemId + ".png");
            o.addChildren(l, h);
            h.pivot(h.width / 2, h.height / 2).scale(.6, .6).pos(l.width / 2, l.height / 2);
            var u = new y("resource/common/fontclip_shijian.png", "0123456789天时分秒永久");
            u.value = Utils.LeftTimeFormat2(n[r].ItemValid, false);
            o.addChild(u);
            u.scale(.8, .8).size(72, 21).pos(0, 0);
            u.align = "right";
            u.spaceX = -9;
            var c = new y("resource/actCards/fontclip_shuizi2.png", "x0123456789");
            c.value = "x" + n[r].ItemNum;
            o.addChild(c);
            c.size(75, 17).pos( - 5, 51);
            c.align = "center";
            c.spaceX = -6;
            if (n[r].ItemValid && n[r].ItemValid != 0) {
                u.visible = true;
                c.visible = false
            } else {
                u.visible = false;
                c.visible = true
            }
            this.box_choujiangchi.addChild(o);
            o.pos(f[r].x, f[r].y)
        }
    };
    function x(e) {
        var t = "";
        var i = "";
        var n = String(e);
        var s = n.substring(0, 4) + "年";
        if (n.substring(4, 5) === "0") {
            t = n.substring(5, 6) + "月"
        } else {
            t = n.substring(4, 6) + "月"
        }
        if (n.substring(6, 7) === "0") {
            i = n.substring(7, 8) + "日"
        } else {
            i = n.substring(6, 8) + "日"
        }
        var a = s + t + i;
        return a
    }
    I.updatePrize = function(e) {
        var t = e.Tag;
        if (t == 1) {
            this.toGetPrize(e)
        } else {
            m = false
        }
    };
    I.getCradNum = function() {
        if (typeof Package.getDataById(119) == "undefined") {
            l = 0
        } else {
            l = Package.getDataById(119).num
        }
        if (typeof Package.getDataById(120) == "undefined") {
            h = 0
        } else {
            h = Package.getDataById(120).num
        }
        if (typeof Package.getDataById(121) == "undefined") {
            u = 0
        } else {
            u = Package.getDataById(121).num
        }
        if (typeof Package.getDataById(122) == "undefined") {
            c = 0
        } else {
            c = Package.getDataById(122).num
        }
        if (typeof Package.getDataById(123) == "undefined") {
            g = 0
        } else {
            g = Package.getDataById(123).num
        }
        if (typeof Package.getDataById(124) == "undefined") {
            p = 0
        } else {
            p = Package.getDataById(124).num
        }
        this.card_num_1.value = "x" + l;
        this.card_num_2.value = "x" + h;
        this.card_num_3.value = "x" + u;
        this.card_num_4.value = "x" + c;
        this.card_num_5.value = "x" + g;
        this.card_num_6.value = "x" + p;
        _ = this.firstNumBySort();
        if (_ == 0) {
            this.superprize_sign.visible = false
        } else {
            this.superprize_sign.visible = true
        }
        this.label_choujiang_times.value = _;
        if (this.firstNumBySort() <= 0) {
            Activity.updateSelectItemRedPoint(false)
        }
    };
    I.firstNumBySort = function() {
        var e = [l, h, u, c, g, p];
        e.sort(S);
        return e[0]
    };
    I.unDisplay = function() {
        Laya.timer.clearAll(this);
        if (o) {
            o.clear();
            o = undefined
        }
        m = false
    };
    var R = {
        show: function(t, i) {
            Request.package.getListReq();
            Waiting.show();
            WinUtils.showView(RES.loadTaskList.actCards, r, i, ActCardsUI,
            function(e) {
                e.show(t, i);
                Waiting.hide()
            })
        },
        hide: function() {},
        getPrize: function(e) {
            WinUtils.getSaveUI(r).updatePrize(e)
        },
        getCardByPackage: function() {
            if (WinUtils.getSaveUI(r)) {
                WinUtils.getSaveUI(r).getCradNum()
            }
        }
    };
    return R
} ();
var ActDayLogin = function() {
    var c = "ActDayLoginFun";
    function i() {
        i.super(this);
        this.initBase(c);
        this.isNeedDestroy = false
    }
    Laya.class(i, c, ActDayLoginUI, "");
    var e = i.prototype;
    e.init = function() {
        this.initEvent();
        this.IsLoginGet = 0;
        this.loginPacksList.scrollBar.hide = true
    };
    e.getDate = function(e) {
        e = e.toString();
        var t = (e + "").substring(4, 6);
        if (t.substring(0, 1) < 1) {
            t = t.substring(1, 2)
        }
        var i = (e + "").substring(6, 8);
        if (i.substring(0, 1) < 1) {
            i = i.substring(1, 2)
        }
        return t + "月" + i + "日"
    };
    e.show = function(t, e) {
        this.lab_actTime.text = "活动时间:" + this.getDate(t.StartDate) + "-" + this.getDate(t.EndDate);
        if (!t.LoginItem || t.LoginItem.length <= 0) {
            return false
        }
        var i = [];
        for (var n = 0; n < t.LoginItem.length; n++) {
            var s = t.LoginItem[n];
            var a = GameConfig.Item.getItemInfoById(s.ItemId);
            if (a) {
                i.push({
                    kuang: Utils.getItemIconBgSkin(a.FrameLevel),
                    num: {
                        value: s.ItemNum,
                        visible: s.ItemValid == 0 ? true: false
                    },
                    icon: a.skin,
                    valid: {
                        value: Utils.LeftTimeFormat2(s.ItemValid, false),
                        visible: s.ItemValid != 0 ? true: false
                    }
                })
            }
        }
        var r = this.loginPacksList;
        var o = i.length;
        var l = 98;
        var h = r.spaceX;
        var u = o * l + (o - 1) * h;
        r.repeatX = o;
        r.width = u;
        r.pivotX = u / 2;
        r.x = 288;
        r.array = i;
        this.IsLoginGet = t.IsLoginGet;
        if (t.IsLoginGet == 1 || t.IsLoginGet == 3 && (Game.onMiniGame || Channel && Channel.showVideo)) {
            this.btnGet.visible = true;
            this.alreadyReceived.visible = false;
            this.btnGet.clickHandler = new Laya.Handler(this,
            function() {
                if (t.IsLoginGet == 3 && (Game.onMiniGame || Channel && Channel.showVideo)) {
                    if (Channel && Channel.showVideo) {
                        Channel.showVideo(null,
                        function(e) {
                            if (e && WinUtils.getSaveUI(c)) {
                                WinUtils.getSaveUI(c).getReward(t.ActId)
                            }
                        })
                    } else {
                        if (RewardedVideoAd) {
                            RewardedVideoAd.show(null,
                            function(e) {
                                if (e && WinUtils.getSaveUI(c)) {
                                    WinUtils.getSaveUI(c).getReward(t.ActId)
                                }
                            })
                        }
                    }
                } else {
                    this.getReward(t.ActId)
                }
                ActionReport.addLog(ActionReport.actionIndex.act_LoginPacks_Get)
            });
            if (Game.onMiniGame || Channel && Channel.showVideo) {
                WinUtils.getSaveUI(c).btnIcon.skin = t.IsLoginGet == 1 ? "resource/activity/zi_lingqu.png": "resource/activity/zi_kanshipin.png";
                if (t.IsLoginGet != 1) {
                    Laya.LocalStorage.setItem("yxl_actDayLogin", Utils.getDateStr())
                }
            } else {
                WinUtils.getSaveUI(c).btnIcon.skin = "resource/activity/zi_lingqu.png"
            }
        } else {
            this.btnGet.visible = false;
            this.alreadyReceived.visible = true
        }
        e.addChild(this)
    };
    e.getReward = function(e, t) {
        incomeRemind(function() {
            Laya.LocalStorage.setItem("yxl_actDayLogin", Utils.getDateStr());
            Request.getActPrizeReq(e, t)
        })
    };
    e.reset = function() {
        this.removeSelf()
    };
    e.close = function() {
        this.reset()
    };
    return {
        show: function(e, t) {
            if (t.getChildByName(c)) {
                WinUtils.getSaveUI(c).show(e, t);
                return
            }
            new i;
            WinUtils.getSaveUI(c).show(e, t);
            Waiting.hide()
        },
        hide: function() {
            WinUtils.getSaveUI(c) && WinUtils.getSaveUI(c).close()
        }
    }
} ();
var ActExchange = function() {
    var t = "ActExchangeFun";
    function i() {
        i.super(this);
        this.initBase(t);
        this.isNeedDestroy = false
    }
    Laya.class(i, t, ActExchangeUI, "");
    var e = i.prototype;
    e.init = function() {
        var i = this;
        this.initEvent();
        this.on(Laya.Event.CLICK, this,
        function(e) {
            var t = e.target.name;
            if (t === "btnExchange") {
                i.exchangeFun();
                ActionReport.addLog(ActionReport.ActivityExchange)
            }
        })
    };
    e.exchangeFun = function() {
        var e = this.exchangeId.text;
        try {
            e = e.trim()
        } catch(e) {
            console.log("无trim方法")
        }
        if (e === "") {
            MsgToast.show("请输入兑换码");
            return false
        }
        Request.RedeemCodeReq(e, 0)
    };
    e.reset = function() {
        this.removeSelf()
    };
    return {
        show: function(e) {
            if (e.getChildByName(t)) return;
            e.addChild(new i);
            Waiting.hide()
        },
        RedeemCodeRep: function(e) {
            if (e.Tag === 1) {
                if (WinUtils.getSaveUI(t) && WinUtils.getSaveUI(t).exchangeId) {
                    WinUtils.getSaveUI(t).exchangeId.text = ""
                }
                if (e.RewardList) {
                    GetReward.show("", e.RewardList)
                }
            } else if (e.MsgId) {
                MessageBox.show(GameConfig.ErrorMsg.getMsgById(e.MsgId))
            }
        }
    }
} (); (function() {
    this.isLoad = false;
    function e() {
        e.super(this);
        this.getActAwardCall = function(e) {
            if (e.Tag) {
                this.select.visible = false;
                this.unselect.visible = false;
                this.getAward.gray = true;
                this.already.visible = true;
                GetReward.show("", e.Item);
                Activity.updateSelectItemRedPoint(false)
            } else {}
        };
        this.getActAward = function() {
            if (this.getAward.gray) return;
            Request.getActPrizeReq(this.id, this.index)
        };
        this.init = function() {
            Waiting.hide();
            this.on(Laya.Event.CLICK, this,
            function(e) {
                switch (e.target) {
                case this.getAward:
                    this.getActAward();
                    break
                }
            });
            EventBus.on(EventConfig.EVENT_ACTRELICGIFT_GETAWARD, this, this.getActAwardCall)
        };
        this.getDate = function(e) {
            e = e.toString();
            var t = (e + "").substring(4, 6);
            var i = (e + "").substring(6, 8);
            return t + "月" + i + "日"
        };
        this.setListData = function(e) {
            this.listData = e;
            this.propList.scrollBar.hide = true;
            this.propList.renderHandler = new Laya.Handler(this, this.renderList);
            this.propList.array = e
        };
        this.renderList = function(e, t) {
            var i = this.listData[t];
            e.getChildByName("num").value = "x" + i.ItemNum;
            var n = GameConfig.Item.getItemInfoById(i.ItemId);
            e.getChildByName("des").text = n.Description;
            e.getChildByName("prop").skin = n.skin
        }
    }
    Laya.class(e, "ActRelicGift", ActRelicGiftUI)
})();
ActRelicGift.prototype.unDisplayFun = function() {
    BaseView.prototype.unDisplayFun.call(this);
    EventBus.off(EventConfig.EVENT_ACTRELICGIFT_GETAWARD, this, this.getActAwardCall)
};
ActRelicGift.prototype.initData = function(e) {
    this.actTime.text = this.getDate(e.StartDate) + "-" + this.getDate(e.EndDate);
    this.id = e.ActId;
    for (var t = 0; t < e.Item.length; t++) {
        var i = e.Item[t];
        if (i.ObjId == i.Idx) {
            if (i.CurrValue > i.MaxValue) i.CurrValue = i.MaxValue;
            this.needNum.value = Utils.fenToYuan(i.MaxValue);
            this.propgressText.value = Utils.fenToYuan(i.CurrValue) + "/" + Utils.fenToYuan(i.MaxValue);
            this.progressBar.value = i.CurrValue / i.MaxValue;
            if (this.progressBar.value == 0) this.progressBar.value = .01;
            this.setListData(i.Item);
            this.select.visible = i.State == Game.activityStatus.Can;
            this.unselect.visible = i.State == Game.activityStatus.Not;
            this.getAward.gray = !this.select.visible;
            this.already.visible = i.State == Game.activityStatus.Already;
            this.index = i.Idx;
            break
        }
    }
};
var ActRankList = function() {
    var e = "ActRankListFun";
    function n() {
        n.super(this);
        this.isClearRes = true
    }
    var o = undefined;
    Laya.class(n, e, ActRankListUI, "");
    var t = n.prototype;
    t.init = function() {
        this.list.scrollBar.hide = true
    };
    t.unDisplay = function() {
        console.log("unDisplay");
        if (this) {
            this.reset()
        }
    };
    t.onClosed = function() {
        this.removeSelf();
        this.reset()
    };
    t.getDate = function(e) {
        e = e.toString();
        var t = (e + "").substring(0, 4);
        var i = (e + "").substring(4, 6);
        var n = (e + "").substring(6, 8);
        return t + "-" + i + "-" + n
    };
    t.getItemListArr = function(e) {
        var t = [];
        if (e && e instanceof Array) {
            for (var i = 0; i < e.length; i++) {
                var n = e[i];
                if (n) {
                    var s = GameConfig.Item.getItemInfoById(parseInt(n.ItemId));
                    if (s) {
                        var a = Utils.LeftTimeFormat2(n.ItemValid, false);
                        var r = n.ItemNum >= 1e4 ? Math.floor(n.ItemNum / 1e4) + "万": n.ItemNum;
                        t.push({
                            itemBg: Utils.getItemIconBgSkin(s.FrameLevel),
                            itemIcon: s.skin,
                            num: {
                                value: r,
                                visible: n.ItemValid ? false: true
                            },
                            valid: {
                                value: a,
                                visible: n.ItemValid ? true: false
                            }
                        })
                    }
                }
            }
        }
        return t
    };
    t.getListArray = function(e) {
        var t = [];
        if (e && e instanceof Array) {
            for (var i = 0; i < e.length; i++) {
                var n = e[i];
                if (n) {
                    var s = n.Value;
                    if (n.Value >= 1e4 && o && o === Game.actType.rankCash) {
                        s = Math.floor(n.Value / 1e4 * 100) / 100 + "万"
                    }
                    var a = this.getItemListArr(n.Item);
                    var r = {
                        num123: {
                            visible: n.Rank <= 3 ? true: false,
                            skin: "resource/ActRanklist/img_paiming" + (n.Rank <= 3 ? n.Rank: 3) + ".png"
                        },
                        fontNum: {
                            visible: n.Rank > 3 ? true: false,
                            value: n.Rank
                        },
                        userHeadImg: {
                            skin: n.AvatarUrl ? Utils.AvatarAddPrefix(n.AvatarUrl) : n.AvatarId ? "resource/head/" + n.AvatarId + ".png": "resource/head/1.png"
                        },
                        img_vipLevel: "resource/icon/vipLevel/vip" + n.VipLevel + ".png",
                        Nick: n.Nick,
                        user_id: "编号：" + n.UserId,
                        Value: s,
                        priceList: {
                            array: a
                        }
                    };
                    t.push(r)
                }
            }
        }
        return t
    };
    t.show = function(e, t) {
        o = e.ActType;
        var i = e.ActBg || 0;
        this.startTime.text = this.getDate(e.StartDate);
        this.endTime.text = this.getDate(e.EndDate);
        this.desc.text = e.Desc;
        if (e.ActRankInfo.length > 0) {
            this.list.array = this.getListArray(e.ActRankInfo)
        }
    };
    t.close = function() {
        this.removeSelf();
        this.reset()
    };
    t.reset = function() {};
    return {
        show: function(t, i) {
            WinUtils.showView(RES.loadTaskList.ActRankList, e, i, n,
            function(e) {
                e.show(t, i);
                Waiting.hide()
            })
        },
        hide: function() {
            WinUtils.getSaveUI(e) && WinUtils.getSaveUI(e).close()
        }
    }
} ();
var ActTask = function() {
    var e = "ActTaskFun";
    var m = {
        2 : "连续充值",
        3 : "累计充值",
        4 : "捕获",
        5 : "使用",
        13 : "捕获"
    };
    var v = undefined,
    y = undefined;
    function n() {
        n.super(this)
    }
    Laya.class(n, e, ActTaskUI, "");
    var t = n.prototype;
    t.init = function() {
        this.initEvent();
        this.tiredChargeList.scrollBar.hide = true;
        this.tiredChargeList.renderHandler = new Laya.Handler(this, this.renderList)
    };
    t.renderList = function(e, t) {
        var i = e.dataSource;
        var n = i.list;
        var s = e.getChildByName("itemList");
        var a = e.getChildByName("btnBet");
        var r = e.getChildByName("btnQianWang");
        var o = r.getChildByName("qianWangIng");
        var l = e.getChildByName("description");
        var h = e.getChildByName("numTxt");
        var u = e.getChildByName("yuanTxt");
        var c = n.length;
        var f = 64;
        s.spaceX = 6;
        var d = s.spaceX;
        var g = c * f + (c - 1) * d;
        s.repeatX = c;
        s.width = g;
        s.pivotX = g / 2;
        s.x = 114;
        if (y == 2 || y == 3) {
            o.skin = "resource/activity/zi_chongzhi.png"
        } else if (y == 4 || y == 5 || y == 13) {
            o.skin = "resource/activity/zi_qianwang.png"
        }
        r.clickHandler = new Laya.Handler(this,
        function() {
            if (y == 2 || y == 3) {
                ShopMall.show(undefined, 5)
            } else if (y == 4 || y == 5 || y == 13) {
                GameCenter.quickStart()
            }
            Activity.close("qianWang")
        });
        a.clickHandler = new Laya.Handler(this,
        function() {
            this.getReward(v, i.id);
            ActionReport.addLog(ActionReport.actionIndex.act_TiredCharge_Get)
        })
    };
    t.getReward = function(e, t) {
        incomeRemind(function() {
            Request.getActPrizeReq(e, t)
        })
    };
    t.getDate = function(e) {
        e = e.toString();
        var t = (e + "").substring(0, 4);
        var i = (e + "").substring(4, 6);
        var n = (e + "").substring(6, 8);
        return t + "-" + i + "-" + n
    };
    t.show = function(e, t) {
        this.dateTxt.text = this.getDate(e.StartDate) + " ~ " + this.getDate(e.EndDate);
        this.jeiShaoTxt.visible = e.Desc ? true: false;
        this.descriptionLabel.text = e.Desc ? e.Desc: "";
        v = e.ActId;
        y = e.ActType;
        var i = {
            2 : "天",
            3 : "元",
            4 : "条",
            5 : "个",
            13 : "条"
        };
        var n = e.Item;
        n.sort(function(e, t) {
            if (e.State == t.State) {
                return e.Idx - t.Idx
            }
            return e.State - t.State
        });
        var s = [],
        a = {},
        r = null;
        for (var o = 0; o < n.length; o++) {
            var l = n[o].Item,
            h = "";
            if (n[o].ObjId) {
                r = n[o].ObjId;
                if (y == Game.actType.DayKillFish) {
                    var u = GameConfig.fish.getCfgById(r);
                    if (u) {
                        h = u.FishName
                    }
                } else if (y == Game.actType.DayUseItem) {
                    var u = GameConfig.Item.getItemInfoById(r);
                    if (u) {
                        h = u.ItemName
                    }
                } else if (y == Game.actType.DayKillTypeFish) {
                    var u = GameConfig.fishtype.getCfgById(r);
                    if (u) {
                        h = u.TypeName
                    }
                }
            }
            if (y == Game.actType.CountPay) {
                n[o].MaxValue = Utils.fenToYuan(n[o].MaxValue);
                n[o].CurrValue = Utils.fenToYuan(n[o].CurrValue)
            }
            a = {};
            a["id"] = n[o].Idx;
            a["description"] = {
                text: m[y] + (h ? h: "")
            };
            a["yuanTxt"] = {
                text: i[y]
            };
            a["numTxt"] = {
                text: n[o].MaxValue
            };
            a["FClip_num"] = {
                value: (n[o].CurrValue ? n[o].CurrValue > n[o].MaxValue ? n[o].MaxValue: n[o].CurrValue: 0) + "/" + n[o].MaxValue
            };
            a["alreadyReceived"] = {
                visible: n[o].State == 3 ? true: false
            };
            a["btnBet"] = {
                visible: n[o].State == 1 ? true: false
            };
            a["btnQianWang"] = {
                visible: n[o].State == 2 ? true: false
            };
            a["btnState"] = n[o].State;
            a["progress"] = {
                value: n[o].CurrValue / n[o].MaxValue
            };
            var c = [],
            f = {};
            for (var d = 0; d < (l.length > 3 ? 3 : l.length); d++) {
                f = {};
                var g = GameConfig.Item.getItemInfoById(l[d].ItemId);
                if (g) {
                    f["kuang"] = {
                        skin: Utils.getItemIconBgSkin(g.FrameLevel)
                    };
                    var p = l[d].ItemNum;
                    if (p >= 1e5) {
                        f["num"] = {
                            value: parseInt(p / 1e4) + "万",
                            zOrder: 9,
                            visible: l[d].ItemValid ? false: true
                        }
                    } else {
                        f["num"] = {
                            value: l[d].ItemNum,
                            zOrder: 9,
                            visible: l[d].ItemValid ? false: true
                        }
                    }
                    f["icon"] = {
                        skin: g.skin
                    };
                    var _ = Utils.LeftTimeFormat2(l[d].ItemValid, false);
                    f["valid"] = {
                        value: _,
                        visible: l[d].ItemValid ? true: false
                    };
                    c.push(f)
                }
            }
            a["list"] = c;
            a["itemList"] = {
                array: c
            };
            s.push(a)
        }
        this.tiredChargeList.array = s;
        if (t) {
            t.addChild(this)
        }
    };
    return {
        show: function(t, i) {
            Waiting.show();
            WinUtils.showView(RES.loadTaskList.ActTask, e, i, n,
            function(e) {
                e.show(t, i);
                Waiting.hide()
            })
        },
        hide: function() {
            WinUtils.getSaveUI(e) && WinUtils.getSaveUI(e).close()
        }
    }
} ();
var ActApkMiniGame = {
    show: function(e, t) {
        WinUtils.showView(RES.loadTaskList.ActApkMiniGame, "ActApkMiniGameUI", t, ActApkMiniGameUI,
        function(e) {
            e.isClearRes = true;
            var t = GameConfig.getSysCfgByKey("Focus_Mp_Prize");
            var i = GameConfig.getSysCfgByKey("Download_Prize");
            e.miniList.scrollBar.hide = true;
            e.appList.scrollBar.hide = true;
            if (t) {
                var n = t.split("|");
                if (n.length) {
                    var s = [];
                    for (var a = 0; a < n.length; a++) {
                        if (n[a]) {
                            var r = n[a].split(":");
                            if (r && r.length >= 2) {
                                var o = GameConfig.Item.getItemInfoById(r[0]);
                                s.push({
                                    kuang: Utils.getItemIconBgSkin(o.FrameLevel),
                                    icon: o.skin,
                                    fc_num: {
                                        value: "x" + r[1]
                                    }
                                })
                            }
                        }
                    }
                    e.miniList.array = s
                }
            }
            if (i) {
                var n = i.split("|");
                if (n.length) {
                    var l = [];
                    for (var a = 0; a < n.length; a++) {
                        if (n[a]) {
                            var r = n[a].split(":");
                            if (r && r.length >= 2) {
                                var o = GameConfig.Item.getItemInfoById(r[0]);
                                l.push({
                                    kuang: Utils.getItemIconBgSkin(o.FrameLevel),
                                    icon: o.skin,
                                    fc_num: {
                                        value: "x" + r[1]
                                    }
                                })
                            }
                        }
                    }
                    e.appList.array = l
                }
            }
            e.y = -2;
            Waiting.hide()
        })
    }
};
var HitMonster = function() {
    var e = function(e, t, i) {
        var n = new Laya.Templet;
        n.loadAni(e);
        n.on(Laya.Event.COMPLETE, this,
        function() {
            var e = n.buildArmature(0);
            i && i.call(t, e)
        })
    };
    var c = function(e) {
        e = e.toString();
        if (e.length >= 8) {
            return e.substring(4, 6) + "月" + e.substring(6, 8) + "日"
        }
        return e
    };
    var t = null,
    i = null,
    n = null;
    function s() {
        var e = [{
            root: "resource/monster/ani/standby/root_",
            length: 7,
            name: "standby"
        },
        {
            root: "resource/monster/ani/hit/com_suffer_",
            length: 8,
            name: "hit"
        },
        {
            root: "resource/monster/ani/hit_2/suffer_",
            length: 5,
            name: "hit_2"
        },
        {
            root: "resource/monster/ani/revive/revive_",
            length: 10,
            name: "revive"
        }];
        for (var t = 0; t < e.length; t++) {
            var i = e[t];
            var n = [];
            for (var s = 1; s < i.length + 1; s++) {
                var a = s < 10 ? "0" + s: s;
                n.push(i.root + a + ".png")
            }
            Laya.Animation.createFrames(n, i.name)
        }
    }
    var a = HitMonsterUI.prototype;
    a.init = function() {
        this.initEvent();
        this.spineQuanTou = null;
        this.viewData = null;
        this.playActName = "standby";
        this.hitType = 1;
        this.reqHitType = Game.item.QuanTao;
        this.hitting = false;
        this.rewardList.scrollBar.hide = true;
        this.DanTouId = Game.item.BaiJinDaoDan;
        this.dropData = null;
        this.maskSmokeAni.on(Laya.Event.COMPLETE, this,
        function() {
            this.maskSmokeAni.visible = false;
            this.maskSmokeAni.index = 0
        });
        this.monsterAni.on(Laya.Event.COMPLETE, this,
        function(e, t) {
            if (this.playActName == "hit" || this.playActName == "hit_2") {
                this.playAct("standby", true)
            }
        });
        this.on(Laya.Event.CLICK, this,
        function(e) {
            if (e.target.name == "btnMini") {
                this.ReqFight(Game.item.QuanTao)
            } else if (e.target.name == "btnMax") {
                this.ReqFight(this.DanTouId)
            } else if (e.target.name == "btnGo") {
                MonsterTaskList.show()
            } else if (e.target.name == "btnGet") {
                MonsterTaskList.show()
            } else if (e.target.name == "package") {
                MonsterExchangeList.show()
            } else if (e.target.name == "close") {
                this.hide()
            } else if (e.target.name == "img_exchange") {
                MonsterExchangeList.show()
            }
        });
        this.y = -Laya.stage.height;
        s();
        e("res/spine/quanTou/quantao.sk", this, this.initSpineQuanTou)
    };
    a.initSpineQuanTou = function(e) {
        e.pos(770, 550);
        e.visible = false;
        this.spineQuanTou = e;
        this.addChild(e);
        this.spineQuanTou.play(2, false);
        this.spineQuanTou.stop();
        this.spineQuanTou.on(Laya.Event.STOPPED, this,
        function() {
            this.hitting = false
        })
    };
    a.ReqFight = function(e) {
        if (this.hitting) {
            return
        }
        if (e == Game.item.QuanTao) {
            var t = Package.getDataById(Game.item.QuanTao);
            if (t && t.num > 0) {
                this.reqHitType = e;
                l.setGetActPrizeType(3);
                this.hitting = true;
                Request.getActPrizeReq(n.ActId, 3, e)
            } else {
                this.hitting = false;
                MonsterMsgBox2.show()
            }
        } else if (e >= Game.item.QinTongDaoDan && e <= Game.item.BaiJinDaoDan) {
            var i = Package.getDataById(this.DanTouId);
            if (i && i.num > 0) {
                this.reqHitType = this.DanTouId;
                l.setGetActPrizeType(3);
                this.hitting = true;
                Request.getActPrizeReq(n.ActId, 3, this.DanTouId)
            } else {
                MonsterMsgBox3.show();
                this.hitting = false
            }
        } else {
            this.hitting = false
        }
    };
    a.updateNum = function(e) {
        if (e == Game.item.QuanTao) {
            var t = Package.getDataById(Game.item.QuanTao);
            if (t != undefined) {
                var i = t.num >= 1 ? t.num - 1 : 0;
                this.fc_quan.value = "x" + i;
                Package.updateNumById(e, i)
            } else {
                this.fc_quan.value = "x" + 0
            }
        } else {
            var n = Package.getDataById(e);
            if (n != undefined) {
                var i = n.num >= 1 ? n.num - 1 : 0;
                Package.updateNumById(e, i);
                this.fc_dan.value = "x" + i
            } else {
                this.fc_dan.value = "x" + 0
            }
        }
    };
    a.playSpineAct = function(e, t) {
        this.updateNum(e);
        if (this.spineQuanTou) {
            this.dropData = t.Item;
            console.log(t.Item);
            this.showMaskSmoke(e);
            if (e == Game.item.QuanTao) {
                this.spineQuanTou.play(2, false);
                this.playAct("hit_2", false, true)
            } else {
                this.spineQuanTou.play(0, false);
                this.playAct("hit", false, true)
            }
        }
    };
    a.showMaskSmoke = function(e) {
        if (this.hitType != e) {
            this.hitType = e;
            this.addChild(this.maskSmokeAni);
            this.maskSmokeAni.visible = true;
            this.maskSmokeAni.play(0, false)
        }
    };
    a.show = function() {
        this.getReqData();
        this.visible = true;
        Laya.Tween.to(this, {
            y: 0
        },
        600, null, Laya.Handler.create(this,
        function() {
            if (this.spineQuanTou) {
                this.spineQuanTou.play(2, false);
                this.spineQuanTou.stop();
                this.spineQuanTou.visible = true;
                this.glove.visible = false
            }
            GameCenter.hide()
        }))
    };
    a.hide = function() {
        if (this.spineQuanTou) {
            this.spineQuanTou.visible = false
        }
        GameCenter.show();
        Game.UIRoot.addChild(this);
        Laya.Tween.to(this, {
            y: -Laya.stage.height
        },
        600, null, Laya.Handler.create(this,
        function() {
            this.visible = false;
            this.removeSelf();
            if (this.closedCall) this.closedCall()
        }))
    };
    a.reset = function() {};
    a.display = function() {
        l.display && l.display()
    };
    a.unDisplay = function() {
        this.reset();
        l.unDisplay && l.unDisplay();
        l.unDisplay = null;
        if (WinUtils.getSaveUI(GameCenter.SKIN_NAME) && WinUtils.getSaveUI(GameCenter.SKIN_NAME).resumeSk) WinUtils.getSaveUI(GameCenter.SKIN_NAME).resumeSk()
    };
    a.dropItem = function() {
        if (this.dropData && this.dropData.length > 0) {
            var e = this.dropData;
            for (var t = 0; t < e.length; t++) {
                var i = e[t];
                if (i) {
                    var n = GameConfig.Item.getItemInfoById(i.ItemId);
                    this.dropItemAni(n.skin, i.ItemNum)
                }
            }
        }
    };
    a.dropItemAni = function(e, t) {
        var i = Laya.Pool.getItemByClass("imgJiFen", Laya.Image);
        i.skin = e;
        i.size(44, 47);
        i.pivot(22, 23.5);
        i.pos(747, 162);
        i.scale(1, 1);
        this.addChild(i);
        var n = {
            delay: 0,
            bezier: [{
                x: i.x,
                y: i.y
            },
            {
                x: 960,
                y: 137
            },
            {
                x: this.packageIcon.x,
                y: this.packageIcon.y
            }]
        };
        Laya.Tween.to(i, {
            scaleX: .4,
            scaleY: .4
        },
        2e3, null, Laya.Handler.create(this,
        function() {
            Laya.Pool.recover("imgJiFen", i);
            i.removeSelf()
        }));
        this.timer.once(1800, this,
        function() {
            this.fc_JiFenNum.value = "+" + t;
            this.fc_JiFenNum.alpha = 1;
            this.fc_JiFenNum.visible = true;
            Laya.Tween.to(this.fc_JiFenNum, {
                y: 421 - 60,
                alpha: 0
            },
            600, null, Laya.Handler.create(this,
            function() {
                this.fc_JiFenNum.alpha = 1;
                this.fc_JiFenNum.visible = false;
                this.fc_JiFenNum.y = 421
            }))
        });
        this.tweenMaxInst = Laya.Pool.getItemByClass("TweenLite", TweenLite, "");
        this.tweenMaxInst.target = i;
        this.tweenMaxInst.szy_init(i, 2, n)
    };
    a.playAct = function(e, t, i) {
        if (i) {
            this.timer.once(1100, this,
            function() {
                if (this.monsterAni && this.displayedInStage) {
                    this.playActName = e;
                    this.dropItem();
                    this.monsterAni.play(0, t ? true: false, e)
                }
            });
            this.timer.once(550, this,
            function() {
                Sound.playSound(Sound.RES.eba_Injured.url, Sound.RES.eba_Injured.vol)
            })
        } else {
            this.monsterAni.play(0, t ? true: false, e)
        }
    };
    a.updateViewData = function(e) {
        if (Game.debug) {
            console.log(e)
        }
        var t = {
            ActId: e.ActId,
            ActType: e.ActType,
            StartDate: e.StartDate,
            EndDate: e.EndDate,
            Desc: e.Desc
        };
        t.ActHitMonsterInfo = e.ActHitMonsterInfo;
        this.viewData = t;
        var i = "活动时间:" + c(t.StartDate) + "-" + c(t.EndDate);
        this.actTimeLabel.text = i;
        var n = t.ActHitMonsterInfo;
        if (n) {
            var s = n.Item;
            if (s && s.length) {
                var a = [];
                for (var r = 0; r < s.length; r++) {
                    var o = s[r];
                    if (o) {
                        var l = GameConfig.Item.getItemInfoById(o.ItemId);
                        a.push({
                            icon: l.skin
                        })
                    }
                }
                this.rewardList.array = a
            }
            if (n.Task1State || n.Task1State) {
                this.btnGet.visible = true;
                this.btnGo.visible = false
            } else {
                this.btnGo.visible = true;
                this.btnGet.visible = false
            }
            if (n.DantouId >= Game.item.QinTongDaoDan && n.DantouId <= Game.item.BaiJinDaoDan) {
                this.DanTouId = n.DantouId;
                this.DanTouIcon.skin = "resource/monster/" + n.DantouId + ".png";
                var h = Package.getDataById(n.DantouId);
                if (h != undefined) {
                    this.fc_dan.value = "x" + h.num
                } else {
                    this.fc_dan.value = "x" + 0
                }
                var u = Package.getDataById(Game.item.QuanTao);
                if (u != undefined) {
                    this.fc_quan.value = "x" + u.num
                } else {
                    this.fc_quan.value = "x" + 0
                }
            }
        }
    };
    a.getReqData = function() {
        if (n && n.ActId) {
            Request.getActInfoReq(n.ActId)
        }
    };
    var r = "HitMonsterUI",
    o = -1;
    var l = {
        display: null,
        unDisplay: null,
        init: function(e) {
            if (e) {
                t = e
            }
        },
        showIcon: function(e) {
            n = e;
            if (t && Player.getOpenGiveBtn()) {
                t.visible = true;
                if (!Player.getNewPlayer() && !myStorage.getItemWithUserId(myStorage.StorageStaticCode.STORAGE_GAMECENTER_TIPECHANGE)) {
                    GameCenter.showExchangeTip(Game.TipExchange.NEW)
                }
            }
        },
        show: function() {
            if (!n) {
                return
            }
            if (WinUtils.getSaveUI(r)) {
                WinUtils.getSaveUI(r).show()
            } else {
                WinUtils.showView(RES.loadTaskList.monster, r, Game.UIRoot, HitMonsterUI,
                function(e) {
                    e.show()
                },
                {
                    isWindow: true,
                    needFitViews: ["bg"]
                })
            }
        },
        getReqData: function() {
            if (WinUtils.getSaveUI(r)) {
                WinUtils.getSaveUI(r).getReqData()
            }
        },
        hide: function() {
            if (WinUtils.getSaveUI(r)) {
                WinUtils.getSaveUI(r).hide()
            }
        },
        setGetActPrizeType: function(e) {
            o = e
        },
        GetActPrizeType: function() {
            return o
        },
        updateViewData: function(e) {
            WinUtils.getSaveUI(r) && WinUtils.getSaveUI(r).updateViewData(e)
        },
        FightRep: function(e) {
            if (WinUtils.getSaveUI(r) && e.ActType === Game.actType.hitMonster) {
                Request.package.getListReq();
                WinUtils.getSaveUI(r).getReqData();
                MonsterTaskList.hide();
                if (o == 3) {
                    if (e.Tag) {
                        WinUtils.getSaveUI(r).playSpineAct(WinUtils.getSaveUI(r).reqHitType, e)
                    } else {
                        WinUtils.getSaveUI(r).hitting = false
                    }
                } else {
                    GetReward.show("", e.Item)
                }
            }
        },
        getViewData: function() {
            if (WinUtils.getSaveUI(r) && WinUtils.getSaveUI(r).viewData) {
                return WinUtils.getSaveUI(r).viewData
            } else {
                return null
            }
        },
        ReqFight: function() {
            if (WinUtils.getSaveUI(r) && WinUtils.getSaveUI(r).DanTouId) {
                WinUtils.getSaveUI(r).ReqFight(WinUtils.getSaveUI(r).DanTouId)
            }
        },
        updateItemNum: function() {
            if (WinUtils.getSaveUI(r)) {
                var e = Package.getDataById(Game.item.QuanTao);
                if (e && e.num) {
                    WinUtils.getSaveUI(r).fc_quan.value = "x" + e.num
                } else {
                    WinUtils.getSaveUI(r).fc_quan.value = "x" + 0
                }
                var t = Package.getDataById(WinUtils.getSaveUI(r).DanTouId);
                if (t && t.num) {
                    WinUtils.getSaveUI(r).fc_dan.value = "x" + t.num
                } else {
                    WinUtils.getSaveUI(r).fc_dan.value = "x" + 0
                }
            }
        },
        isIconShow: function() {
            return t && t.visible
        }
    };
    return l
} ();
var MonsterAdress = function() {
    var n = null;
    function e() {
        e.super(this)
    }
    Laya.class(e, "MonsterAdressFun", monsterAdressUI, "");
    var t = e.prototype;
    t.init = function() {
        this.btnSave.clickHandler = new Laya.Handler(this, this.saveAddress)
    };
    t.saveAddress = function() {
        var e = this;
        if (e.address_phone.text === "") {
            MsgToast.show(GameConfig.ErrorMsg.clientErrorMsg(10031));
            return false
        }
        var t = Utils.getPhoneReg();
        if (!t.test(e.address_phone.text)) {
            MsgToast.show(GameConfig.ErrorMsg.clientErrorMsg(10030));
            return false
        }
        Request.SetAddressInfoReq({
            Name: e.address_name.text,
            PhoneNum: e.address_phone.text,
            Province: e.address_province.text,
            City: e.address_city.text,
            Zone: e.address_zone.text,
            Address: e.address_detail.text
        })
    };
    t.updateInfo = function(e) {
        this.address_name.text = e.Name;
        this.address_phone.text = e.PhoneNum;
        this.address_province.text = e.Province;
        this.address_city.text = e.City;
        this.address_zone.text = e.Zone;
        this.address_detail.text = e.Address
    };
    t.SetAddressInfoRep = function(e) {
        if (e.Tag) {
            if (!this.callBack) MsgToast.show(GameConfig.ErrorMsg.clientErrorMsg(10060));
            Request.GetFishExchangeListReq();
            this.close();
            if (this.callBack) this.callBack()
        }
    };
    t.onClosed = function() {
        BaseDialog.prototype.onClosed.call(this);
        this.reset()
    };
    t.reset = function() {
        n = null
    };
    return {
        show: function(t, i) {
            if (!n) {
                WinUtils.showDialog(["res/atlas/resource/monster.atlas", "UIRoot/monster/monsterAdress.json"], e,
                function(e) {
                    Request.GetAddressInfoReq();
                    e.isClearRes = t;
                    n = e;
                    n.callBack = i;
                    n.popup()
                })
            } else {
                Request.GetAddressInfoReq();
                n.isClearRes = t;
                n.callBack = i;
                n.popup()
            }
        },
        GetAddressInfoRep: function(e) {
            if (Game.debug) {
                console.log(e)
            }
            if (n) {
                n.updateInfo(e)
            }
        },
        SetAddressInfoRep: function(e) {
            if (Game.debug) {
                console.log(e)
            }
            if (n) {
                n.SetAddressInfoRep(e)
            }
        }
    }
} ();
var MonsterExchangeList = function() {
    var t = null;
    var i = 0;
    var n = 0;
    function e() {
        e.super(this)
    }
    Laya.class(e, "MonsterExchangeListFun", monsterExchangeListUI, "");
    var s = e.prototype;
    s.init = function() {
        this.listPrice.scrollBar.hide = true;
        this.on(Laya.Event.CLICK, this,
        function(e) {
            var t = e.target.name;
            if (t === "btnRecord") {
                MonsterExchangeRecord.show()
            } else if (t === "btnAdress") {
                MonsterAdress.show()
            } else if (t === "btnReceive") {
                this.receiveFun()
            }
        })
    };
    s.receiveFun = function() {
        console.log(this.listPrice.selectedItem);
        var e = this.listPrice.selectedItem;
        if (e.Status === 0) {
            MonsterMsgBox1.show("此物品暂时缺货哦!请尝试其他物品吧!");
            return false
        }
        if (e.needMonney5Num > i) {
            MonsterMsgBox1.show("您的积分不足哦! 快去击败恶霸获得积分吧! \n 使用导弹可以极大提高击败首领的概率!");
            return false
        }
        if (e.ExchangeId) {
            if (e.NeedCondition === 2) {
                if (n) {
                    Request.FishExchangeReq(e.ExchangeId)
                } else {
                    MonsterAdress.show()
                }
            } else if (e.NeedCondition == 3 || e.NeedCondition == 1) {
                PhoneRecharge.show(e.ExchangeId, 0, e.goods_name.text, true)
            } else {
                Request.FishExchangeReq(e.ExchangeId)
            }
        }
    };
    s.updateList = function(e) {
        e.sort(function(e, t) {
            return e.SORT - t.SORT
        });
        var t = [];
        for (var i = 0,
        n = e.length; i < n; i++) {
            var s = e[i];
            var a = {};
            var r = GameConfig.Item.getItemInfoById(s.ItemId);
            a.img_goods = r.skin;
            a.goods_name = {
                text: r.ItemName
            };
            a.condition = {
                text: s.Money5Num + "积分"
            };
            a.needMonney5Num = s.Money5Num;
            switch (s.Status) {
            case 0:
                a.stock = {
                    text: "库存：无"
                };
                break;
            case 1:
                a.stock = {
                    text: "库存：少量"
                };
                break;
            case 2:
                a.stock = {
                    text: "库存：充足"
                };
                break;
            default:
                a.stock = {
                    text: "库存：无"
                };
                break
            }
            a.Status = s.Status;
            a.NeedCondition = s.NeedCondition;
            a.ExchangeId = s.ExchangeId;
            t.push(a)
        }
        this.listPrice.array = t
    };
    s.FishExchangeRep = function(e) {
        i = e.Money5Num || 0;
        this.jifen.text = i;
        switch (e.IsReal) {
        case 0:
            GetReward.show("领取成功", [{
                ItemId: e.ItemId,
                ItemNum: e.ItemNum
            }]);
            break;
        case 1 || 3 : MonsterMsgBox1.show(GameConfig.ErrorMsg.clientErrorMsg(10058));
            break;
        case 2:
            MonsterMsgBox1.show(GameConfig.ErrorMsg.clientErrorMsg(10059));
            break
        }
    };
    s.onClosed = function() {
        BaseDialog.prototype.onClosed.call(this);
        this.reset()
    };
    s.reset = function() {
        t = null
    };
    return {
        show: function() {
            Request.GetFishExchangeListReq();
            if (!t) {
                t = new e;
                t.init()
            }
            t.popup()
        },
        GetFishExchangeListRep: function(e) {
            if (Game.debug) {
                console.log(e)
            }
            if (e.Tag) {
                if (t) {
                    t.jifen.text = e.Money5Num || 0;
                    i = e.Money5Num || 0;
                    n = e.BindPhone || 0;
                    if (e.Datas && e.Datas.length > 0) {
                        t.updateList(e.Datas)
                    }
                }
            }
        },
        FishExchangeRep: function(e) {
            if (Game.debug) {
                console.log(e)
            }
            if (e.Tag && t) {
                t.FishExchangeRep(e)
            } else if (e.MsgId) {
                MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgId))
            }
        }
    }
} ();
var MonsterExchangeRecord = function() {
    var i = null;
    function e() {
        e.super(this)
    }
    Laya.class(e, "MonsterExchangeRecordFun", monsterExchangeRecordUI, "");
    var t = e.prototype;
    t.init = function() {
        this.listRecord.scrollBar.hide = true
    };
    t.updateList = function(e) {
        var t = [];
        for (var i = 0,
        n = e.length; i < n; i++) {
            var s = e[i];
            var a = {};
            a.exchange_time = {
                text: s.CreateTime
            };
            a.goods_name = {
                text: s.GoodsName + "x1"
            };
            t.push(a)
        }
        this.listRecord.array = t
    };
    t.onClosed = function() {
        BaseDialog.prototype.onClosed.call(this);
        this.reset()
    };
    t.reset = function() {
        i = null
    };
    return {
        show: function(t) {
            if (!i) {
                WinUtils.showDialog(["res/atlas/resource/monster.atlas", "UIRoot/monster/monsterExchangeRecord.json"], e,
                function(e) {
                    Request.GetFishExchangeLogReq(1, 1e4);
                    i = e;
                    e.isClearRes = t;
                    i.popup()
                })
            } else {
                Request.GetFishExchangeLogReq(1, 1e4);
                i.isClearRes = t;
                i.popup()
            }
        },
        GetFishExchangeLogRep: function(e) {
            if (Game.debug) {
                console.log(e)
            }
            if (e.Tag && i && e.List) {
                i.updateList(e.List)
            } else if (e.MsgId) {
                MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgId))
            }
        }
    }
} ();
var MonsterMsgBox1 = function() {
    var n = null;
    function e() {
        e.super(this)
    }
    Laya.class(e, "MonsterMsgBox1Fun", monsterMsgBox1UI, "");
    var t = e.prototype;
    t.init = function() {
        this.btnKnow.clickHandler = new Laya.Handler(this, this.knowFun)
    };
    t.knowFun = function() {
        this.close()
    };
    t.updateFun = function(e) {
        this.contentText.text = "";
        this.contentText.text = e || "捕鱼大奖赛!"
    };
    t.onClosed = function() {
        BaseDialog.prototype.onClosed.call(this);
        this.reset()
    };
    t.reset = function() {
        n = null
    };
    return {
        show: function(t, i) {
            if (!n) {
                WinUtils.showDialog(["res/atlas/resource/monster.atlas", "UIRoot/monster/monsterMsgBox1.json"], e,
                function(e) {
                    n = e;
                    e.isClearRes = i;
                    n.updateFun(t);
                    n.popup()
                })
            } else {
                n.updateFun(t);
                n.popup();
                n.isClearRes = i
            }
        }
    }
} ();
var MonsterMsgBox2 = function() {
    var e = null;
    function t() {
        t.super(this)
    }
    Laya.class(t, "MonsterMsgBox2Fun", monsterMsgBox2UI, "");
    var i = t.prototype;
    i.init = function() {
        this.btnReceive.clickHandler = new Laya.Handler(this, this.receiveFun);
        this.btnUse.clickHandler = new Laya.Handler(this, this.useFun)
    };
    i.receiveFun = function() {
        MonsterTaskList.show()
    };
    i.useFun = function() {
        this.close();
        HitMonster.ReqFight()
    };
    i.onClosed = function() {
        BaseDialog.prototype.onClosed.call(this);
        this.reset()
    };
    i.reset = function() {
        e = null
    };
    i.hide = function() {
        this.close()
    };
    return {
        show: function() {
            if (!e) {
                e = new t;
                e.init()
            }
            e.popup()
        },
        hide: function() {
            if (e) {
                e.hide()
            }
        }
    }
} ();
var MonsterMsgBox3 = function() {
    var e = null;
    function t() {
        t.super(this)
    }
    Laya.class(t, "MonsterMsgBox3Fun", monsterMsgBox3UI, "");
    var i = t.prototype;
    i.init = function() {
        this.btnGet.clickHandler = new Laya.Handler(this, this.getFun)
    };
    i.getFun = function() {
        this.close();
        HitMonster.unDisplay = GameCenter.quickStart;
        HitMonster.hide();
        ActionEventReport.report(ActionEventReport.actionIndex.ID1051)
    };
    i.onClosed = function(e) {
        if (e == "close") {
            ActionEventReport.report(ActionEventReport.actionIndex.ID1052)
        }
        BaseDialog.prototype.onClosed.call(this);
        this.reset()
    };
    i.reset = function() {
        e = null
    };
    i.hide = function() {
        this.close()
    };
    return {
        show: function() {
            if (!e) {
                e = new t;
                e.init()
            }
            e.popup();
            ActionEventReport.report(ActionEventReport.actionIndex.ID1050)
        },
        hide: function() {
            if (e) {
                e.hide()
            }
        }
    }
} ();
var MonsterTaskList = function() {
    var e = null;
    function t() {
        t.super(this)
    }
    Laya.class(t, "MonsterTaskListFun", monsterTaskListUI, "");
    var i = t.prototype;
    i.init = function() {
        var i = this;
        this.ActId = 0;
        this.on(Laya.Event.CLICK, this,
        function(e) {
            var t = e.target.name;
            if (t === "btnGoToTask") {
                this.goToFun()
            } else if (t === "btnReceive1") {
                HitMonster.setGetActPrizeType(1);
                Request.getActPrizeReq(i.ActId, 1)
            } else if (t === "btnCharge") {
                this.chargeFun()
            } else if (t === "btnReceive2") {
                Request.getActPrizeReq(i.ActId, 2);
                HitMonster.setGetActPrizeType(2)
            }
        })
    };
    i.updateFun = function() {
        var e = HitMonster.getViewData();
        if (!e) {
            return false
        }
        this.ActId = e.ActId;
        this.taskNum.value = e.ActHitMonsterInfo.DayFlowingWater + "/" + e.ActHitMonsterInfo.MaxFlowingWater;
        var t = e.ActHitMonsterInfo;
        var i = GameConfig.Item.getItemInfoById(t.Task1Item[0].ItemId);
        this.priceIcon1.skin = i.skin;
        this.priceNum1.value = "x" + t.Task1Item[0].ItemNum;
        var n = GameConfig.Item.getItemInfoById(t.Task2Item[0].ItemId);
        this.priceIcon2.skin = n.skin;
        this.priceNum2.value = "x" + t.Task2Item[0].ItemNum;
        switch (e.ActHitMonsterInfo.Task1State) {
        case 0:
            this.btnGoToTask.visible = true;
            this.btnHasReceive1.visible = false;
            this.btnReceive1.visible = false;
            break;
        case 1:
            this.btnGoToTask.visible = false;
            this.btnHasReceive1.visible = false;
            this.btnReceive1.visible = true;
            break;
        case 2:
            this.btnGoToTask.visible = false;
            this.btnHasReceive1.visible = true;
            this.btnReceive1.visible = false;
            break;
        default:
            this.btnGoToTask.visible = true;
            this.btnHasReceive1.visible = false;
            this.btnReceive1.visible = false;
            break
        }
        switch (e.ActHitMonsterInfo.Task2State) {
        case 0:
            this.btnCharge.visible = true;
            this.btnHasReceive2.visible = false;
            this.btnReceive2.visible = false;
            break;
        case 1:
            this.btnCharge.visible = false;
            this.btnHasReceive2.visible = false;
            this.btnReceive2.visible = true;
            break;
        case 2:
            this.btnCharge.visible = false;
            this.btnHasReceive2.visible = true;
            this.btnReceive2.visible = false;
            break;
        default:
            this.btnCharge.visible = true;
            this.btnHasReceive2.visible = false;
            this.btnReceive2.visible = false;
            break
        }
    };
    i.goToFun = function() {
        this.close();
        HitMonster.hide();
        MonsterMsgBox2.hide();
        GameCenter.quickStart()
    };
    i.chargeFun = function() {
        this.close();
        ShopMall.show()
    };
    i.onClosed = function() {
        BaseDialog.prototype.onClosed.call(this);
        this.reset()
    };
    i.reset = function() {
        e = null
    };
    i.hide = function() {
        this.close()
    };
    return {
        show: function() {
            if (!e) {
                e = new t;
                e.init()
            }
            e.updateFun();
            e.popup()
        },
        hide: function() {
            if (e) {
                e.hide()
            }
        }
    }
} ();
var ActMysticalStore = function() {
    var i = "ActMysticalStoreFun";
    var u = "res/resource/actMysticalStore/img_shouwan.png";
    var t = true;
    function n() {
        n.super(this)
    }
    Laya.class(n, i, ActMysticalStoreUI, "");
    var e = n.prototype;
    e.init = function() {
        this.initEvent();
        this.exchangeList.scrollBar.hide = true;
        this.exchangeList.selectHandler = new Laya.Handler(this, this.selectFun)
    };
    e.leftTimeFun = function(e) {
        if (!e) {
            return false
        }
        var t = this.getDate(e);
        var i = new Date(t + "T24:00:00").getTime();
        this.timer.clear(this, this.timerFun);
        this.timer.loop(1e3, this, this.timerFun, [i])
    };
    e.timerFun = function(e) {
        var t = (new Date).getTime();
        if (t >= e) {
            this.timer.clear(this, this.timerFun);
            this.leftTime.text = "活动结束";
            return false
        }
        var i = e - t;
        var n = parseInt(i / (24 * 3600 * 1e3));
        var s = parseInt(i % (24 * 3600 * 1e3) / (3600 * 1e3));
        var a = parseInt(i % (24 * 3600 * 1e3) % (3600 * 1e3) / (60 * 1e3));
        var r = parseInt(i % (24 * 3600 * 1e3) % (3600 * 1e3) % (60 * 1e3) / 1e3);
        var o = "",
        l = "",
        h = "";
        if (s < 10) {
            o = "0" + s.toString()
        } else {
            o = s.toString()
        }
        if (a < 10) {
            l = "0" + a.toString()
        } else {
            l = a.toString()
        }
        if (r < 10) {
            h = "0" + r.toString()
        } else {
            h = r.toString()
        }
        this.leftTime.text = "剩余时间：" + n + "天 " + +o + ":" + l + ":" + h
    };
    e.getDate = function(e) {
        e = e.toString();
        var t = (e + "").substring(0, 4);
        var i = (e + "").substring(4, 6);
        var n = (e + "").substring(6, 8);
        return t + "-" + i + "-" + n
    };
    e.selectFun = function() {
        if (!t) {
            return false
        }
        t = false;
        var e = this.exchangeList.selectedItem;
        this.exchangeList.selectedIndex = -1;
        if (e.Idx) {
            incomeRemind(function() {
                Request.getActPrizeReq(e.ActId, e.Idx)
            })
        }
    };
    e.updateUI = function(e) {
        var t = e.ActBg || 0;
        this.bg_1.skin = "resource/actMysticalStore/bg_" + t + "_1.png";
        this.bg_2.skin = "resource/actMysticalStore/bg_" + t + "_2.png";
        var i = e.MysticalStoreInfo;
        if (i.length <= 0) {
            return false
        }
        var n = [];
        for (var s = 0,
        a = i.length; s < a; s++) {
            var r = i[s];
            var o = GameConfig.Item.getItemInfoById(r.SourceItemId);
            var l = GameConfig.Item.getItemInfoById(r.TargetItemId);
            var h = {
                ActId: e.ActId,
                Idx: r.Idx,
                exchangeIcon: {
                    skin: o.skin
                },
                exchangeNum: {
                    value: r.SourceItemNum || 0
                },
                icon: {
                    skin: ""
                },
                name: l.ItemName + "x" + r.TargetItemNum,
                stock: {
                    text: "库存：" + r.LeftNum || "库存：0"
                }
            };
            if (r.LeftNum && r.LeftNum > 0) {
                h.icon.skin = l.skin
            } else {
                h.icon.skin = u
            }
            n.push(h)
        }
        this.exchangeList.array = n
    };
    e.reset = function() {
        this.removeSelf();
        this.timer.clearAll(this)
    };
    e.unDisplay = function() {
        this.timer.clear(this, this.timerFun)
    };
    return {
        show: function(t, e) {
            WinUtils.showView(RES.loadTaskList.actStore, i, e, n,
            function(e) {
                e.leftTimeFun(t.EndDate);
                e.updateUI(t);
                Waiting.hide()
            })
        },
        updateExchagneEnd: function() {
            t = true
        }
    }
} ();
var ActTreasureBox = function() {
    var i = "ActTreasureBoxFun";
    function n() {
        n.super(this)
    }
    var h = undefined;
    Laya.class(n, i, ActTreasureBoxUI, "");
    var e = n.prototype;
    e.initData = function(e) {
        this.initEvent();
        this.data = e;
        this.listPrice.scrollBar.hide = true;
        this.off(Laya.Event.CLICK, this, this.clickFun);
        this.on(Laya.Event.CLICK, this, this.clickFun)
    };
    e.clickFun = function(e) {
        var t = e.target.name;
        switch (t) {
        case "btnReceive":
            TreasureBoxGet.show(this.data);
            break;
        case "btnDetail":
            TreasureBoxDetail.show(this.data.ActTreasureBoxInfo.FinalItem);
            break;
        case "btnOpen":
            var i = e.target.parent.dataSource;
            this.openBox(i, 1);
            break;
        case "btnOpen2":
            var n = e.target.parent.dataSource;
            this.openBox(n, 10);
            break
        }
    };
    e.openBox = function(e, t) {
        if (!e || e.boxNum <= 0) {
            GameConfig.ErrorMsg.clientErrorMsg(10061);
            return false
        }
        Request.getActPrizeReq(h, 4, e.ItemId, t)
    };
    e.getDate = function(e) {
        e = e.toString();
        var t = (e + "").substring(0, 4);
        var i = (e + "").substring(4, 6);
        var n = (e + "").substring(6, 8);
        return t + "-" + i + "-" + n
    };
    e.updateUi = function(e) {
        h = e.ActId;
        var t = e.ActTreasureBoxInfo;
        this.startTime.text = this.getDate(e.StartDate);
        this.endTime.text = this.getDate(e.EndDate);
        var i = t.PreviewItem;
        var n = [];
        if (i && i.length > 0) {
            for (var s = 0,
            a = i.length; s < a; s++) {
                var r = i[s];
                var o = {};
                var l = GameConfig.Item.getItemInfoById(r.ItemId);
                o.ItemId = r.ItemId;
                o.icon = {
                    skin: l.skin
                };
                n.push(o)
            }
            this.listPrice.array = n
        }
        this.boxS.dataSource = {
            boxNum: t.SNum,
            num: {
                value: t.SNum
            },
            ItemId: 431
        };
        this.boxC.dataSource = {
            boxNum: t.CNum,
            num: {
                value: t.CNum
            },
            ItemId: 430
        };
        this.superGiftIcon.skin = GameConfig.Item.getItemInfoById(t.FinalItem.ItemId).skin || ""
    };
    e.reset = function() {
        if (this) {
            this.removeSelf()
        }
    };
    e.hide = function(e) {
        this.visible = false;
        if (e && this) {
            this.reset()
        }
    };
    return {
        show: function(t, e) {
            WinUtils.showView(RES.loadTaskList.ActTreasureBox, i, e, n,
            function(e) {
                e.visible = true;
                e.initData(t);
                e.updateUi(t);
                Waiting.hide()
            })
        },
        hide: function() {
            WinUtils.getSaveUI(i) && WinUtils.getSaveUI(i).hide()
        }
    }
} ();
var TreasureBoxDetail = function() {
    var t = null;
    function i() {
        i.super(this)
    }
    Laya.class(i, "TreasureBoxDetailFun", TreasureBoxDetailUI, "");
    var e = i.prototype;
    e.init = function() {
        this.detailList.renderHandler = new Laya.Handler(this, this.listRenderFun)
    };
    e.listRenderFun = function(e, t) {
        var i = e.getChildByName("img_userHead").getChildByName("userHeadImg");
        var n = e.dataSource;
        if (n.AvatarUrl) {
            i.skin = Utils.AvatarAddPrefix(n.AvatarUrl)
        } else if (n.AvatarID) {
            i.skin = "resource/head/" + n.AvatarID + ".png"
        } else {
            i.skin = "resource/head/1.png"
        }
    };
    e.updateList = function(e) {
        var t = [];
        for (var i = 0,
        n = e.length; i < n; i++) {
            var s = {};
            var a = e[i];
            s.date = {
                text: a.Date
            };
            switch (e.Sex) {
            case 0:
                s.sex = {
                    skin: "resource/ActTreasureBox/icn-women.png"
                };
                break;
            case 1:
                s.sex = {
                    skin: "resource/ActTreasureBox/icn-men.png"
                };
                break;
            case 2:
                s.sex = {
                    skin: "resource/ActTreasureBox/icn-women.png"
                };
                break;
            default:
                s.sex = {
                    skin: "resource/ActTreasureBox/icn-women.png"
                };
                break
            }
            s.nick = {
                text: a.Nick
            };
            s.user_id = {
                text: "编号：" + a.UserId
            };
            s.img_vipLevel = {
                skin: "resource/icon/vipLevel/vip" + a.VipLevel + ".png"
            };
            var r = GameConfig.Item.getItemInfoById(a.FinalItem.ItemId);
            s.icon = {
                skin: r.skin
            };
            s.num = {
                value: "x" + a.FinalItem.ItemNum
            };
            s.AvatarUrl = a.AvatarUrl;
            s.AvatarID = a.AvatarId;
            t.push(s)
        }
        this.detailList.array = t
    };
    e.setFinalItem = function(e) {
        if (!e) {
            return false
        }
        var t = GameConfig.Item.getItemInfoById(e.ItemId);
        if (t) {
            this.finalItems.text = t.ItemName + "x" + e.ItemNum
        }
    };
    e.onClosed = function() {
        BaseDialog.prototype.onClosed.call(this);
        this.reset()
    };
    e.reset = function() {
        t = null
    };
    return {
        show: function(e) {
            if (Game.debug) {
                console.log(e)
            }
            Request.GetTreasureBoxLogReq();
            if (!t) {
                t = new i;
                t.init()
            }
            t.setFinalItem(e);
            t.popup()
        },
        hide: function() {
            t && t.close()
        },
        GetTreasureBoxLogRep: function(e) {
            if (Game.debug) {
                console.log(e)
            }
            if (e.Tag && e.Logs && e.Logs.length && t) {
                t.updateList(e.Logs)
            }
        }
    }
} ();
var TreasureBoxGet = function() {
    var t = null;
    var s = undefined;
    var a = null;
    function i() {
        i.super(this)
    }
    Laya.class(i, "TreasureBoxGetFun", TreasureBoxGetUI, "");
    var e = i.prototype;
    e.init = function() {
        Laya.stage.on(Laya.Event.def_updateActInfo, this, this.updateActInfo);
        this.width = Game.UIWidth;
        this.height = Game.UIHeight;
        this.on(Laya.Event.CLICK, this,
        function(e) {
            var t = e.target.name;
            var i = this;
            switch (t) {
            case "btnReceive":
                Request.getActPrizeReq(s, 1);
                break;
            case "btnBuy":
                Request.getActPrizeReq(s, 2);
                break;
            case "hasReceive2":
                var n = a.ActTreasureBoxInfo;
                if (n && n.SGetNum <= 0) {
                    i.close();
                    Activity.hide(true);
                    ShopMall.show(undefined, 5)
                } else {
                    Request.getActPrizeReq(s, 3)
                }
                break
            }
        })
    };
    e.updateActInfo = function(e) {
        if (Game.isIOS && Game.onMiniGame) {
            this.chargeBox.visible = false;
            this.loginBox.x = 301;
            this.goldBox.x = 583
        } else {
            this.loginBox.x = 160;
            this.goldBox.x = 442;
            this.chargeBox.visible = true
        }
        if (!e) {
            return false
        }
        if (!this.visible) {
            return false
        }
        a = e;
        if (Game.debug) {
            console.log("treasureBoxGet==========================");
            console.log(e)
        }
        s = e.ActId;
        var t = Player.getVipLevel();
        this.loginBox.getChildByName("vipLevel").text = "贵族" + t;
        this.goldBox.getChildByName("vipLevel").text = "贵族" + t;
        var i = e.ActTreasureBoxInfo;
        this.loginBox.getChildByName("num").value = i.CGetNum || 0;
        this.goldBox.getChildByName("times").value = i.SBuyNum || 0;
        this.goldBox.getChildByName("condition").value = i.BuyPrice + "金币可购买";
        if (i.SGetNum <= 0) {
            this.chargeBox.getChildByName("num").value = 0
        } else {
            this.chargeBox.getChildByName("num").value = i.SGetNum
        }
        this.chargeBox.getChildByName("rechargeNum").value = Utils.fenToYuan(i.PayRMB) || 0;
        if (i.CGetNum <= 0) {
            this.loginBox.getChildByName("btnReceive").visible = false;
            this.loginBox.getChildByName("hasReceive").visible = true
        } else {
            this.loginBox.getChildByName("btnReceive").visible = true;
            this.loginBox.getChildByName("hasReceive").visible = false
        }
        if (i.SBuyNum <= 0) {
            this.goldBox.getChildByName("btnBuy").visible = false;
            this.goldBox.getChildByName("hasReceive").visible = true
        } else {
            this.goldBox.getChildByName("btnBuy").visible = true;
            this.goldBox.getChildByName("hasReceive").visible = false
        }
    };
    e.onClosed = function() {
        Laya.stage.off(Laya.Event.def_updateActInfo, this, this.updateActInfo);
        BaseDialog.prototype.onClosed.call(this);
        this.reset()
    };
    e.reset = function() {
        t = null
    };
    return {
        show: function(e) {
            if (!t) {
                t = new i;
                t.init()
            }
            t.updateActInfo(e);
            t.popup()
        },
        hide: function() {
            t && t.close()
        },
        updateUi: function(e) {
            if (t && t.visible) {
                t.updateActInfo(e)
            }
        }
    }
} ();
var GoldPig = function() {
    var r = Laya.Tween;
    var h = Laya.Sprite;
    var o = Laya.Handler;
    var l = Laya.Ease;
    var i = null;
    var t = null;
    var u = 6;
    var c = 86,
    f = 86;
    var d = 18;
    var n = 0;
    var s = 0;
    var a = 0;
    var g = false;
    var p = 0;
    var _ = 0;
    var m = 0;
    var v = 0;
    var y = 0;
    var I = 7;
    var S = 7;
    var C = 7;
    var e = 0;
    var b = 0;
    var w = 0;
    var x = 0;
    function R() {
        R.super(this)
    }
    var L = null;
    Laya.class(R, "GoldPig", goldPigPrizeUI);
    var T = R.prototype;
    T.init = function() {
        t = this;
        t.box_labaji.visible = true;
        t.caishenAni.visible = false;
        this.initPrize();
        e = parseInt(s % 1e3 / 100);
        b = parseInt(s % 100 / 10);
        w = parseInt(s % 10);
        this.ani_box1.visible = false;
        this.ani_box2.visible = false;
        this.ani_box3.visible = false;
        this.ani_box1.loadImage("resource/goldPig/icon_prize_" + (e - 1) + ".png", 0, 0, c, f);
        this.ani_box2.loadImage("resource/goldPig/icon_prize_" + (b - 1) + ".png", 0, 0, c, f);
        this.ani_box3.loadImage("resource/goldPig/icon_prize_" + (w - 1) + ".png", 0, 0, c, f);
        Laya.timer.once(400, t,
        function() {
            t.drawPrize(e, b, w)
        })
    };
    T.unDisplay = function() {
        this.reset()
    };
    T.reset = function() {
        t.zi_caishen.visible = false;
        t.calGold1.alpha = 0;
        t.calGold2.alpha = 0;
        t.calGold3.alpha = 0;
        t.calGold1.value = "";
        t.calGold2.value = "";
        t.calGold3.value = "";
        t.calGold1.y = 320;
        t.calGold2.y = 320;
        t.calGold3.y = 320;
        x = 0;
        p = 0;
        _ = 0;
        s = 0;
        g = false;
        t.caishenAni.pos(544, -126);
        this.box_runPrize.y = f + d;
        this.box_runPrize2.y = f + d;
        this.box_runPrize3.y = f + d;
        m = 0;
        v = 0;
        y = 0;
        I = 7;
        S = 7;
        C = 7;
        for (var e = -1; e <= u; e++) {
            this.box_runPrize.getChildAt(e + 1).centerY = (e - (u - 1)) * (f + d);
            this.box_runPrize2.getChildAt(e + 1).centerY = (e - (u - 1)) * (f + d);
            this.box_runPrize3.getChildAt(e + 1).centerY = (e - (u - 1)) * (f + d)
        }
        Laya.timer.clearAll(this);
        r.clearAll(t);
        if (i) {
            i = null
        }
    };
    T.initPrize = function() {
        this.box_runPrize.centerX = 0;
        this.box_runPrize.centerY = 0;
        this.box_runPrize.height = 224;
        this.box_runPrize2.centerX = 0;
        this.box_runPrize2.centerY = 0;
        this.box_runPrize2.height = 224;
        this.box_runPrize3.centerX = 0;
        this.box_runPrize3.centerY = 0;
        this.box_runPrize3.height = 224;
        for (var e = -1; e <= u; e++) {
            var t = new Laya.Box;
            if (e == -1) {
                t.loadImage("resource/goldPig/icon_prize_5.png", 0, 0, c, f)
            } else {
                t.loadImage("resource/goldPig/icon_prize_" + (e < 6 ? e: 0) + ".png", 0, 0, c, f)
            }
            t.centerX = 0;
            t.centerY = (e - (u - 1)) * (f + d);
            this.box_runPrize.addChild(t)
        }
        for (var i = -1; i <= u; i++) {
            var n = new Laya.Box;
            if (i == -1) {
                n.loadImage("resource/goldPig/icon_prize_5.png", 0, 0, c, f)
            } else {
                n.loadImage("resource/goldPig/icon_prize_" + (i < 6 ? i: 0) + ".png", 0, 0, c, f)
            }
            n.centerX = 0;
            n.centerY = (i - (u - 1)) * (f + d);
            this.box_runPrize2.addChild(n)
        }
        for (var s = -1; s <= u; s++) {
            var a = new Laya.Box;
            if (s == -1) {
                a.loadImage("resource/goldPig/icon_prize_5.png", 0, 0, c, f)
            } else {
                a.loadImage("resource/goldPig/icon_prize_" + (s < 6 ? s: 0) + ".png", 0, 0, c, f)
            }
            a.centerX = 0;
            a.centerY = (s - (u - 1)) * (f + d);
            this.box_runPrize3.addChild(a)
        }
        var r = new h;
        r.graphics.drawRect(0, 0, 110, 224, "#ff0000");
        this.box_prize.mask = r;
        var o = new h;
        o.loadImage("resource/goldPig/mask_bg.png", 0, 0, 110, 224);
        this.box_prize2.mask = o;
        var l = new h;
        l.loadImage("resource/goldPig/mask_bg.png", 0, 0, 110, 224);
        this.box_prize3.mask = l
    };
    T.drawPrize = function(e, t, i) {
        var n = 8 * 4 + (u - e);
        var s = 8 * 6 + (u - t);
        var a = 8 * 8 + (u - i);
        Laya.timer.scale;
        r.to(this.box_runPrize, {
            y: n * (f + d),
            update: new o(this, P)
        },
        2200, l.cubicOut, o.create(this, k));
        r.to(this.box_runPrize2, {
            y: s * (f + d),
            update: new o(this, U)
        },
        3400, l.cubicOut, o.create(this, G));
        r.to(this.box_runPrize3, {
            y: a * (f + d),
            update: new o(this, E)
        },
        4600, l.cubicOut, o.create(this, M));
        Sound.playSound(Sound.RES.lbj_roll.url, Sound.RES.lbj_roll.vol, 1)
    };
    function D() {}
    function k() {
        Sound.playSound(Sound.RES.jubaopen_stop.url, 1, false);
        this.box_runPrize.getChildAt(e).scaleX = 2;
        this.box_runPrize.getChildAt(e).scaleY = 2;
        this.box_runPrize.getChildAt(e).x = -86;
        this.box_runPrize.getChildAt(e).alpha = 0;
        r.to(this.box_runPrize.getChildAt(e), {
            scaleX: 1,
            scaleY: 1,
            alpha: 1,
            x: 0
        },
        300, l.backInOut, o.create(this,
        function() {
            this.ani_box1.visible = true;
            r.to(this.ani_box1, {
                scaleX: 2,
                scaleY: 2,
                alpha: 0
            },
            300, l.circOut, o.create(this,
            function() {
                this.ani_box1.visible = false;
                t.calGold1.value = A(e);
                r.from(t.calGold1, {
                    scaleX: 2,
                    scaleY: 2,
                    alpha: 0,
                    y: 320
                },
                300, l.backInOut, o.create(this,
                function() {
                    Sound.playSound(Sound.RES.clown_rw_appear.url, 1)
                }))
            }))
        }))
    }
    function G() {
        Sound.playSound(Sound.RES.jubaopen_stop.url, 1, false);
        this.box_runPrize2.getChildAt(b).scaleX = 2;
        this.box_runPrize2.getChildAt(b).scaleY = 2;
        this.box_runPrize2.getChildAt(b).x = -86;
        this.box_runPrize2.getChildAt(b).alpha = 0;
        r.to(this.box_runPrize2.getChildAt(b), {
            scaleX: 1,
            scaleY: 1,
            alpha: 1,
            x: 0
        },
        300, l.backInOut, o.create(this,
        function() {
            this.ani_box2.visible = true;
            r.to(this.ani_box2, {
                scaleX: 2,
                scaleY: 2,
                alpha: 0
            },
            300, l.circOut, o.create(this,
            function() {
                this.ani_box2.visible = false;
                t.calGold2.value = A(b);
                r.from(t.calGold2, {
                    scaleX: 2,
                    scaleY: 2,
                    alpha: 0,
                    y: 320
                },
                300, l.backInOut, o.create(this,
                function() {
                    Sound.playSound(Sound.RES.clown_rw_appear.url, 1)
                }))
            }))
        }))
    }
    function M() {
        Sound.stopSoundByUrl(Sound.RES.lbj_roll.url);
        Sound.playSound(Sound.RES.jubaopen_stop.url, 1, false);
        this.box_runPrize3.getChildAt(w).scaleX = 2;
        this.box_runPrize3.getChildAt(w).scaleY = 2;
        this.box_runPrize3.getChildAt(w).x = -86;
        this.box_runPrize3.getChildAt(w).alpha = 0;
        r.to(this.box_runPrize3.getChildAt(w), {
            scaleX: 1,
            scaleY: 1,
            alpha: 1,
            x: 0
        },
        300, l.backInOut, o.create(this,
        function() {
            t.calGold3.alpha = 1;
            this.ani_box3.visible = true;
            r.to(this.ani_box3, {
                scaleX: 2,
                scaleY: 2,
                alpha: 0
            },
            300, l.circOut, o.create(this,
            function() {
                this.ani_box3.visible = false;
                t.calGold3.value = A(w);
                r.from(t.calGold3, {
                    scaleX: 2,
                    scaleY: 2,
                    y: 320,
                    alpha: 0
                },
                300, l.backInOut, o.create(this,
                function() {
                    Sound.playSound(Sound.RES.clown_rw_appear.url, 1);
                    if (e == 1 || b == 1 || w == 1) {
                        r.to(t.box_labaji, {
                            alpha: 0,
                            scaleX: 3,
                            scaleY: 3
                        },
                        200, null, o.create(this,
                        function() {
                            var e = {
                                x: Game.UIWidth / 2,
                                y: Game.UIHeight / 2
                            };
                            BigWin.show(a, e, 1);
                            Sound.playSound(Sound.RES.lbj_caishen.url, Sound.RES.lbj_caishen.vol);
                            t.addGoldBack(true);
                            t.close()
                        }), 1e3)
                    } else {
                        N()
                    }
                }))
            }))
        }))
    }
    function B() {}
    function A(e) {
        var t = "";
        switch (e) {
        case 1:
            x++;
            if (x == 1) {
                t = "5%"
            } else if (x == 2) {
                t = "15%"
            } else if (x == 3) {
                t = "40%"
            }
            break;
        case 2:
            t = "100倍";
            break;
        case 3:
            t = "80倍";
            break;
        case 4:
            t = "50倍";
            break;
        case 5:
            t = "30倍";
            break;
        case 6:
            t = "20倍";
            break
        }
        return t
    }
    function P() {
        if (this.box_runPrize.y >= (f + d) * (m + 2)) {
            if (I < 0) {
                I = 7
            }
            this.box_runPrize.y = (f + d) * (m + 2);
            this.box_runPrize.getChildAt(I).centerY = ( - 7 - m) * (f + d) - 1;
            I--;
            m++
        }
    }
    function U() {
        if (this.box_runPrize2.y >= (f + d) * (v + 2)) {
            if (S < 0) {
                S = 7
            }
            this.box_runPrize2.getChildAt(S).centerY = ( - 7 - v) * (f + d);
            S--;
            v++
        }
    }
    function E() {
        if (this.box_runPrize3.y >= (f + d) * (y + 2)) {
            if (C < 0) {
                C = 7
            }
            this.box_runPrize3.getChildAt(C).centerY = ( - 7 - y) * (f + d);
            C--;
            y++
        }
    }
    function N() {
        Utils.getTempletByUrl("res/spine/goldPig/Caishenjianglin.sk",
        function(e) {
            if (t) {
                V(a);
                Laya.timer.once(1e3, t,
                function() {
                    Sound.playSound(Sound.RES.win1.url, Sound.RES.win1.vol);
                    e.pos(t.caishenAni.pivotX, t.caishenAni.pivotY);
                    t.caishenAni.addChildAt(e, 0);
                    r.to(t.box_labaji, {
                        alpha: 0,
                        scaleX: 3,
                        scaleY: 3
                    },
                    200, null, o.create(this,
                    function() {
                        t.box_labaji.visible = false;
                        t.goldpig_num_bg.visible = true;
                        t.prizepool_num.visible = true;
                        t.caishenAni.visible = true;
                        r.from(t.caishenAni, {
                            y: -125,
                            scaleX: 1,
                            scaleY: 1
                        },
                        400, Laya.Ease.circOut, o.create(t, F));
                        var e = new Laya.Animation;
                        t.caishenLightAni.visible = false;
                        e.loadAnimation("UIRoot/FX/yaoyiyao3.ani", o.create(t,
                        function() {
                            e.pivot(e.width / 2, e.height / 2);
                            e.pos(t.caishenLightAni.width / 2, t.caishenLightAni.height / 2);
                            t.caishenLightAni.addChild(e)
                        }), "res/atlas/resource.atlas");
                        t.caishenLightAni.visible = true;
                        e.play(0, false)
                    }))
                })
            }
        })
    }
    function F() {
        t.zi_caishen.visible = true;
        t.jbAni = new Laya.Animation;
        t.jbAni.interval = 60;
        t.jbAni.scaleX = 2;
        t.jbAni.scaleY = 2;
        t.jbAni.loadAtlas("res/atlas/resource/goldPig/jinbiAni.atlas", Laya.Handler.create(this,
        function() {
            t.box_jbFX.addChild(t.jbAni);
            t.jbAni.play();
            Laya.timer.once(3600, t,
            function() {
                t.addGoldBack(false);
                O()
            })
        }))
    }
    function O() {
        Laya.timer.once(500, t,
        function() {
            t.close();
            Sound.playSound(Sound.RES.close.url, Sound.RES.close.vol)
        })
    }
    function V(e) {
        if (!g) {
            p = 0;
            _ = Math.round(a / 1800 * 100);
            Laya.timer.loop(100, t,
            function() {
                if (p < a) {
                    p += _;
                    this.prizepool_num.value = p
                } else {
                    if (!g) {
                        g = true;
                        this.prizepool_num.value = a;
                        q()
                    }
                }
            })
        }
    }
    function q() {
        r.to(t.prizepool_num, {
            scaleX: 8,
            scaleY: 8,
            alpha: 1
        },
        150, l.circOut, o.create(t,
        function() {
            r.to(t.prizepool_num, {
                scaleX: .8,
                scaleY: .8,
                alpha: 1
            },
            100, l.circIn, o.create(t,
            function() {
                Sound.playSound(Sound.RES.cycle_bomb.url, Sound.RES.cycle_bomb.vol);
                r.to(t.prizepool_num, {
                    scaleX: 1,
                    scaleY: 1,
                    alpha: 1
                },
                100, l.circOut, o.create(t,
                function() {
                    Sound.playSound(Sound.RES.lbj_caishen.url, Sound.RES.lbj_caishen.vol)
                }))
            }))
        }))
    }
    T.updatePrizeNum = function(e) {
        n += e;
        this.prizepool_num.value = n
    };
    T.addGoldBack = function(e) {
        L && L(e)
    };
    var z = {
        show: function(e, t) {
            e = e + "";
            if (e.indexOf("0") >= 0) {
                MsgToast.show("获取奖池失败")
            } else {
                s = e;
                a = t;
                Waiting.show();
                WinUtils.showDialog(RES.GoldPigAct.goldPig, R,
                function(e) {
                    i = e;
                    e.popup();
                    e.isClearRes = false;
                    Waiting.hide()
                })
            }
        },
        hide: function() {
            if (i) {
                i.close()
            }
        },
        addGold: function(e) {
            L = e
        }
    };
    return z
} ();
var GoldPigRule = function() {
    var e = null;
    var i = null;
    function t() {
        t.super(this)
    }
    Laya.class(t, "GoldPigRule", goldPigRuleUI);
    var n = t.prototype;
    n.init = function() {
        i = this;
        this.on(Laya.Event.CLICK, this,
        function(e) {
            var t = e.target.name;
            if (t === "btnClose") {
                i.close()
            }
        })
    };
    n.show = function() {};
    n.reset = function() {};
    var s = {
        show: function() {
            Waiting.show();
            Resource.load(RES.GoldPigAct.goldPigRule,
            function() {
                if (!e) {
                    e = new t;
                    e.init()
                }
                e.popup();
                Waiting.hide()
            })
        },
        hide: function() {}
    };
    return s
} ();
var GoldPigShow = function() {
    var i = null;
    var n = null;
    var e = Laya.Tween;
    var t = 0;
    var s = 0;
    var a = 0;
    var r = 0;
    var o = 0;
    var l = 0;
    var h = 0;
    var u = 0;
    var c = 0;
    var f = false;
    var d = goldPigShowUI.prototype;
    d.init = function() {
        n = this;
        this.list_poolPrize.scrollBar.hide = true;
        this.btn_readRule.on(Laya.Event.CLICK, this,
        function(e) {
            GoldPigRule.show()
        });
        this.go_baiBeiRoom.on(Laya.Event.CLICK, this,
        function(e) {
            GameCenter.selectSceneFn(Game.sceneConfig.sceneID.scene_100);
            Activity.close()
        });
        this.go_qianBeiRoom.on(Laya.Event.CLICK, this,
        function(e) {
            GameCenter.selectSceneFn(Game.sceneConfig.sceneID.scene_1000);
            Activity.close()
        });
        this.go_guiZuRoom.on(Laya.Event.CLICK, this,
        function(e) {
            GameCenter.selectSceneFn(Game.sceneConfig.sceneID.scene_Vip);
            Activity.close()
        })
    };
    d.unDisplay = function() {
        this.reset()
    };
    d.show = function(e) {
        e.addChild(i)
    };
    d.reset = function() {
        t = 0;
        s = 0;
        a = 0;
        r = 0;
        o = 0;
        l = 0;
        h = 0;
        u = 0;
        c = 0;
        f = false;
        Laya.timer.clearAll(this);
        i = null
    };
    d.updateAct = function(e) {
        this.top_vipLevel.skin = "resource/goldPig/goldPigAct/vip" + e.Top.VipLevel + ".png";
        this.top_sharePrize.text = "瓜分奖池" + e.Top.Per + "%";
        this.top_getPrizeNum.text = "获得" + e.Top.Gold;
        this.top_userName.text = Utils.nickBylen(e.Top.Nick);
        this.top_userId.text = "编号:" + e.Top.UserId;
        this.top_updateTime.text = this.getTime(e.Top.AddDate);
        if (e.Top.AvatarUrl.length != "") {
            this.top_userhead.skin = e.Top.AvatarUrl
        }
        if (e.Top.Sex == 0) {
            this.top_sexFlag.skin = "resource/goldPig/goldPigAct/img_nv.png"
        } else {
            this.top_sexFlag.skin = "resource/goldPig/goldPigAct/img_nan.png"
        }
        this.top_poolType.text = this.getPoolType(e.Top.SceneId);
        var t = [];
        for (var i = 0; i < e.Logs.length; i++) {
            t.push({
                userId: "编号:" + e.Logs[i].UserId,
                userhead: e.Logs[i].AvatarUrl == "" ? "resource/head/1.png": e.Logs[i].AvatarUrl,
                vipLevel: "resource/goldPig/goldPigAct/vip" + e.Logs[i].VipLevel + ".png",
                sharePrize: "瓜分奖池" + e.Logs[i].Per + "%",
                sharePrize_bg: e.Logs[i].Per == 20 ? "resource/goldPig/goldPigAct/bar_guafenzuogao.png": "resource/goldPig/goldPigAct/bar_guafenbili.png",
                getPrizeNum: "获得" + e.Logs[i].Gold,
                userName: Utils.nickBylen(e.Logs[i].Nick),
                updateTime: n.getTime(e.Logs[i].AddDate),
                poolType: n.getPoolType(e.Logs[i].SceneId),
                sexFlag: e.Logs[i].Sex == 0 ? {
                    skin: "resource/goldPig/goldPigAct/img_nv.png"
                }: {
                    skin: "resource/goldPig/goldPigAct/img_nan.png"
                }
            })
        }
        this.list_poolPrize.array = t
    };
    d.getPoolType = function(e) {
        if (e == Game.sceneConfig.sceneID.scene_100) {
            return "百倍场"
        } else if (e == Game.sceneConfig.sceneID.scene_1000) {
            return "千倍场"
        } else if (e == Game.sceneConfig.sceneID.scene_Vip) {
            return "贵族场"
        } else {
            return ""
        }
    };
    d.getTime = function(e) {
        if (e == 0) {
            return 0
        }
        var t = parseInt((new Date).getTime() / 1e3);
        return Utils.LeftTimeFormat1(t - e, true) + "前"
    };
    d.updatePrize = function(e) {
        if (e.Gold1 != t) {
            t = e.Gold1;
            h = Math.round((t - r) / 4e3 * 100)
        }
        if (e.Gold2 != s) {
            s = e.Gold2;
            u = Math.round((s - o) / 4e3 * 100)
        }
        if (e.Gold3 != a) {
            a = e.Gold3;
            c = Math.round((a - l) / 4e3 * 100)
        }
        if (!f) {
            f = true;
            Laya.timer.loop(100, this,
            function() {
                if (h > 0) {
                    if (r <= t) {
                        r += h;
                        this.roomGoldNum_1.value = r
                    } else {
                        this.roomGoldNum_1.value = t
                    }
                } else {
                    if (r > t) {
                        r += h;
                        this.roomGoldNum_1.value = r
                    } else {
                        this.roomGoldNum_1.value = t
                    }
                }
                if (u > 0) {
                    if (o <= s) {
                        o += u;
                        this.roomGoldNum_2.value = o
                    } else {
                        this.roomGoldNum_2.value = s
                    }
                } else {
                    if (o > s) {
                        o += u;
                        this.roomGoldNum_2.value = o
                    } else {
                        this.roomGoldNum_2.value = s
                    }
                }
                if (c > 0) {
                    if (l <= a) {
                        l += c;
                        this.roomGoldNum_3.value = l
                    } else {
                        this.roomGoldNum_3.value = a
                    }
                } else {
                    if (l > a) {
                        l += c;
                        this.roomGoldNum_3.value = l
                    } else {
                        this.roomGoldNum_3.value = a
                    }
                }
            })
        }
    };
    d.loopReq = function() {
        Request.getGoldPigPrizeReq();
        Laya.timer.loop(1e3 * 5, this,
        function() {
            Request.getGoldPigPrizeReq()
        })
    };
    var g = {
        show: function(t) {
            Waiting.show();
            WinUtils.showDialog(RES.GoldPigAct.goldPigAct, goldPigShowUI,
            function(e) {
                i = e;
                Request.getActGoldPigReq();
                e.loopReq();
                e.show(t)
            })
        },
        getListData: function(e) {
            Waiting.hide();
            i && i.updateAct(e)
        },
        updatePrizePool: function(e) {
            if (i) {
                i.updatePrize(e)
            }
        },
        hide: function() {
            if (i) {
                i.reset()
            }
        }
    };
    return g
} ();
var ActCards = function() {
    var r = "ActCards";
    var e = Laya.Tween;
    var i = null;
    var f = null;
    var o = null;
    var d = 0;
    var n = 0;
    var s = 0;
    var a;
    var t = Laya.Event;
    var l = 0;
    var h = 0;
    var u = 0;
    var c = 0;
    var g = 0;
    var p = 0;
    var _ = 0;
    var m = false;
    var v = Laya.Image;
    var y = Laya.FontClip;
    var I = ActCardsUI.prototype;
    I.init = function() {
        i = this;
        this.on(Laya.Event.CLICK, this,
        function(e) {
            var t = e.target.name;
            if (!m) {
                if (t === "btn_choujiang") {
                    m = true;
                    i.chouJiang(0)
                } else if (t === "btn_choujiang_2") {
                    m = true;
                    i.chouJiang(105)
                } else if (t === "btn_choujiang_3") {
                    m = true;
                    i.chouJiang(106)
                } else if (t === "btn_choujiang_4") {
                    m = true;
                    i.chouJiang(107)
                }
            }
        });
        f = [{
            x: this.box_prize_1.x,
            y: this.box_prize_1.y
        },
        {
            x: this.box_prize_2.x,
            y: this.box_prize_2.y
        },
        {
            x: this.box_prize_3.x,
            y: this.box_prize_3.y
        },
        {
            x: this.box_prize_4.x,
            y: this.box_prize_4.y
        },
        {
            x: this.box_prize_5.x,
            y: this.box_prize_5.y
        },
        {
            x: this.box_prize_6.x,
            y: this.box_prize_6.y
        },
        {
            x: this.box_prize_7.x,
            y: this.box_prize_7.y
        },
        {
            x: this.box_prize_8.x,
            y: this.box_prize_8.y
        },
        {
            x: this.box_prize_9.x,
            y: this.box_prize_9.y
        },
        {
            x: this.box_prize_10.x,
            y: this.box_prize_10.y
        }];
        a = this.spize_tip;
        this.spize_tip.on(Laya.Event.MOUSE_DOWN, this, C);
        this.getCradNum()
    };
    function S(e, t) {
        return e - t
    }
    function C(e) {
        n = a.mouseX;
        s = a.mouseY;
        Laya.stage.on(t.MOUSE_MOVE, i, w);
        Laya.stage.on(t.MOUSE_UP, i, b)
    }
    function b(e) {
        Laya.stage.off(t.MOUSE_MOVE, i, w);
        Laya.stage.off(t.MOUSE_UP, i, b)
    }
    function w() {
        var e = a.mouseX;
        var t = a.mouseY;
        a.scrollX += n - e;
        a.scrollY += s - t;
        n = e;
        s = t
    }
    I.show = function(e, t) {
        this.updateUI(e)
    };
    I.chouJiang = function(e) {
        Request.getActPrizeReq(d, e, null, null)
    };
    I.toGetPrize = function(i) {
        if (!o) {
            o = new Laya.Animation
        }
        o.loadAnimation("UIRoot/FX/card_shine.ani");
        this.box_choujiangchi.addChild(o);
        o.pos(this.box_prize_1.x, this.box_prize_1.y);
        o.play();
        var n = 0;
        var s = 0;
        var a = Math.floor(Math.random() * 10 + 1);
        Laya.timer.loop(100, this,
        function() {
            if (n == 10) {
                n = 0
            }
            if (a == 10) {
                a = 9
            }
            if (s > 10) {
                if (n == a) {
                    Laya.timer.clearAll(this);
                    o.clear();
                    o = null;
                    m = false;
                    WinUtils.getSaveUI(r).checkSuperPrize(i.Item);
                    var e = false;
                    for (var t = 0; t < i.Item.length; t++) {
                        if (i.Item[t].ItemId == 118) {
                            e = true
                        }
                    }
                    GetReward.show("", i.Item, undefined, undefined, undefined, e);
                    return
                }
            }
            o.pos(f[n].x, f[n].y);
            n++;
            s++
        })
    };
    I.checkSuperPrize = function(e) {
        for (var t = 0; t < e.length; t++) {
            var i = e[t].ItemId;
            if (i == 118) {
                this.zhengxi_1.visible = false;
                this.superPrize_owned_1.visible = true;
                this.card_bg_1.gray = true
            }
        }
    };
    I.updateUI = function(e) {
        d = e.ActId;
        this.spize_tip.text = e.Desc;
        this.label_acttime.text = x(e.StartDate) + "~" + x(e.EndDate);
        var t = e.DivideGold.Limit1;
        var i = e.DivideGold.LimitGet;
        if (i == 0) {
            this.zhengxi_1.visible = true;
            this.superPrize_owned_1.visible = false;
            this.card_bg_1.gray = false
        } else {
            this.zhengxi_1.visible = false;
            this.superPrize_owned_1.visible = true;
            this.card_bg_1.gray = true
        }
        var n = e.DivideGold.Items;
        var s = 50;
        if (n[0].ItemValid && n[0].ItemValid != 0) {
            var a = Utils.LeftTimeFormat2(n[0].ItemValid, false);
            this.prize_time_1.value = a;
            this.prize_time_1.visible = true
        } else {
            this.prize_time_1.visible = false
        }
        this.label_topPrize_tip.value = e.DivideGold.DivideGold;
        this.label_topPrizeNumer.value = e.DivideGold.DivideNum + "人";
        for (var r = 1; r < 10; r++) {
            var o = new Laya.Sprite;
            var l = new v(Utils.getItemIconBgSkin(GameConfig.Item.getItemInfoById(n[r].ItemId).FrameLevel));
            l.size(65, 65);
            var h = new v("resource/icon/" + n[r].ItemId + ".png");
            o.addChildren(l, h);
            h.pivot(h.width / 2, h.height / 2).scale(.6, .6).pos(l.width / 2, l.height / 2);
            var u = new y("resource/common/fontclip_shijian.png", "0123456789天时分秒永久");
            u.value = Utils.LeftTimeFormat2(n[r].ItemValid, false);
            o.addChild(u);
            u.scale(.8, .8).size(72, 21).pos(0, 0);
            u.align = "right";
            u.spaceX = -9;
            var c = new y("resource/actCards/fontclip_shuizi2.png", "x0123456789");
            c.value = "x" + n[r].ItemNum;
            o.addChild(c);
            c.size(75, 17).pos( - 5, 51);
            c.align = "center";
            c.spaceX = -6;
            if (n[r].ItemValid && n[r].ItemValid != 0) {
                u.visible = true;
                c.visible = false
            } else {
                u.visible = false;
                c.visible = true
            }
            this.box_choujiangchi.addChild(o);
            o.pos(f[r].x, f[r].y)
        }
    };
    function x(e) {
        var t = "";
        var i = "";
        var n = String(e);
        var s = n.substring(0, 4) + "年";
        if (n.substring(4, 5) === "0") {
            t = n.substring(5, 6) + "月"
        } else {
            t = n.substring(4, 6) + "月"
        }
        if (n.substring(6, 7) === "0") {
            i = n.substring(7, 8) + "日"
        } else {
            i = n.substring(6, 8) + "日"
        }
        var a = s + t + i;
        return a
    }
    I.updatePrize = function(e) {
        var t = e.Tag;
        if (t == 1) {
            this.toGetPrize(e)
        } else {
            m = false
        }
    };
    I.getCradNum = function() {
        if (typeof Package.getDataById(119) == "undefined") {
            l = 0
        } else {
            l = Package.getDataById(119).num
        }
        if (typeof Package.getDataById(120) == "undefined") {
            h = 0
        } else {
            h = Package.getDataById(120).num
        }
        if (typeof Package.getDataById(121) == "undefined") {
            u = 0
        } else {
            u = Package.getDataById(121).num
        }
        if (typeof Package.getDataById(122) == "undefined") {
            c = 0
        } else {
            c = Package.getDataById(122).num
        }
        if (typeof Package.getDataById(123) == "undefined") {
            g = 0
        } else {
            g = Package.getDataById(123).num
        }
        if (typeof Package.getDataById(124) == "undefined") {
            p = 0
        } else {
            p = Package.getDataById(124).num
        }
        this.card_num_1.value = "x" + l;
        this.card_num_2.value = "x" + h;
        this.card_num_3.value = "x" + u;
        this.card_num_4.value = "x" + c;
        this.card_num_5.value = "x" + g;
        this.card_num_6.value = "x" + p;
        _ = this.firstNumBySort();
        if (_ == 0) {
            this.superprize_sign.visible = false
        } else {
            this.superprize_sign.visible = true
        }
        this.label_choujiang_times.value = _;
        if (this.firstNumBySort() <= 0) {
            Activity.updateSelectItemRedPoint(false)
        }
    };
    I.firstNumBySort = function() {
        var e = [l, h, u, c, g, p];
        e.sort(S);
        return e[0]
    };
    I.unDisplay = function() {
        Laya.timer.clearAll(this);
        if (o) {
            o.clear();
            o = undefined
        }
        m = false
    };
    var R = {
        show: function(t, i) {
            Request.package.getListReq();
            Waiting.show();
            WinUtils.showView(RES.loadTaskList.actCards, r, i, ActCardsUI,
            function(e) {
                e.show(t, i);
                Waiting.hide()
            })
        },
        hide: function() {},
        getPrize: function(e) {
            WinUtils.getSaveUI(r).updatePrize(e)
        },
        getCardByPackage: function() {
            if (WinUtils.getSaveUI(r)) {
                WinUtils.getSaveUI(r).getCradNum()
            }
        }
    };
    return R
} ();
var ActHappyPrize = function() {
    var a = undefined,
    o = undefined;
    var i = null;
    var e = "ActHappyPrizeFun";
    function n() {
        n.super(this);
        this.isClearRes = true
    }
    Laya.class(n, "ActHappyPrizeFun", ActHappyPrizeUI, "");
    var t = n.prototype;
    t.init = function() {
        this.task_list.scrollBar.hide = true
    };
    t.unDisplay = function() {
        this.reset()
    };
    t.getDate = function(e) {
        e = e.toString();
        var t = (e + "").substring(0, 4);
        var i = (e + "").substring(4, 6);
        var n = (e + "").substring(6, 8);
        return t + "-" + i + "-" + n
    };
    t.getItemListArr = function(e) {
        var t = [];
        if (e && e instanceof Array) {
            for (var i = 0; i < e.length; i++) {
                var n = e[i];
                if (n) {
                    var s = GameConfig.Item.getItemInfoById(parseInt(n.ItemId));
                    if (s) {
                        var a = Utils.LeftTimeFormat2(n.ItemValid, false);
                        var r = n.ItemNum >= 1e4 ? Math.floor(n.ItemNum / 1e4) + "万": n.ItemNum;
                        t.push({
                            itemBg: Utils.getItemIconBgSkin(s.FrameLevel),
                            itemIcon: s.skin,
                            num: {
                                value: r,
                                visible: n.ItemValid ? false: true
                            },
                            valid: {
                                value: a,
                                visible: n.ItemValid ? true: false
                            }
                        })
                    }
                }
            }
        }
        return t
    };
    t.getListArray = function(e) {
        var t = [];
        if (e && e instanceof Array) {
            for (var i = 0; i < e.length; i++) {
                var n = e[i];
                if (n) {
                    var s = o == 24 ? n.MaxValue: Math.floor(n.MaxInt64Value / 1e4) + "万";
                    var a = this.getItemListArr(n.Item);
                    var r = {
                        score_text: o == 24 ? "积分达到" + s + "分": "捕鱼值:" + s,
                        quota_text: o == 24 ? {
                            visible: false
                        }: {
                            visible: true,
                            text: "(" + n.Param1 + "/" + n.ObjId + ")"
                        },
                        btn_drawPrize: n.State == 1 ? o == 25 && n.Param1 == n.ObjId ? {
                            visible: false
                        }: {
                            visible: true
                        }: {
                            visible: false
                        },
                        btn_toComplete: n.State == 2 ? o == 25 && n.Param1 == n.ObjId ? {
                            visible: false
                        }: {
                            visible: true
                        }: {
                            visible: false
                        },
                        btn_drew: n.State == 3 ? o == 25 && n.Param1 == n.ObjId ? {
                            visible: false
                        }: {
                            visible: true
                        }: {
                            visible: false
                        },
                        qouta_tip: o == 25 && n.Param1 == n.ObjId ? {
                            visible: true
                        }: {
                            visible: false
                        },
                        priceList: {
                            array: a
                        },
                        id: n.Idx
                    };
                    t.push(r)
                }
            }
        }
        return t
    };
    t.show = function(e, t) {
        o = e.ActType;
        a = e.ActId;
        if (o == Game.actType.ActHappyPrize) {
            this.buyuScore_type.text = "捕鱼值"
        } else {
            this.buyuScore_type.text = "当前积分"
        }
        this.hp_actStartTime.text = this.getDate(e.StartDate);
        this.hp_actEndTime.text = this.getDate(e.EndDate);
        this.hp_actRule.text = e.Desc;
        var i = e.Item;
        i.sort(function(e, t) {
            if (e.State == t.State) {
                return e.Idx - t.Idx
            }
            return e.State - t.State
        });
        if (i.length > 0) {
            var n = this.getListArray(i);
            this.task_list.array = n;
            this.task_list.renderHandler = new Laya.Handler(this, this.onRender)
        }
        if (i[0]) {
            if (o == 25) {
                this.buyuScore_text.text = Math.floor(i[0].CurrInt64Value / 1e4) + "万"
            } else {
                this.buyuScore_text.text = i[0].CurrValue
            }
        }
        if (t) {
            t.addChild(this)
        }
    };
    t.onRender = function(e, t) {
        var i = e.dataSource;
        var n = e.getChildByName("btn_drawPrize");
        var s = e.getChildByName("btn_toComplete");
        n.clickHandler = new Laya.Handler(this,
        function() {
            this.getReward(a, i.id)
        });
        s.clickHandler = new Laya.Handler(this,
        function() {
            if (o == Game.actType.ActHappyPrize) {
                GameCenter.quickStart()
            } else if (o == Game.actType.ActSuperMatch) {
                SuperMatchDoor.show()
            }
            Activity.close("qianWang")
        })
    };
    t.getReward = function(e, t) {
        incomeRemind(function() {
            Request.getActPrizeReq(e, t)
        })
    };
    t.reset = function() {
        if (i) {
            i = null
        }
    };
    return {
        show: function(e, t) {
            Resource.load(RES.loadTaskList.actHappyPrize,
            function() {
                if (!i) {
                    i = new n;
                    i.init()
                }
                i.show(e, t)
            })
        },
        hide: function() {
            if (i) {
                i.close()
            }
        }
    }
} ();
var ActFireOfWar = function() {
    var e = "ActFireOfWar";
    function n() {
        n.super(this);
        this.isClearRes = true
    }
    Laya.class(n, e, ActFireOfWarUI, "");
    var t = n.prototype;
    t.init = function() {
        this.listUI.scrollBar.hide = true;
        this.listUI.renderHandler = new Laya.Handler(this, this.listRenderHandler)
    };
    t.listRenderHandler = function(e, t) {
        var i = e.dataSource;
        var n = e.getChildByName("btnGet");
        n.clickHandler = null;
        n.clickHandler = new Laya.Handler(this,
        function() {
            if (i.State == 1) {
                this.getReward(this.ActId, i.id)
            }
        })
    };
    t.getReward = function(e, t) {
        incomeRemind(function() {
            Request.getActPrizeReq(e, t)
        })
    };
    t.getDate = function(e) {
        e = e.toString();
        var t = (e + "").substring(0, 4);
        var i = (e + "").substring(4, 6);
        var n = (e + "").substring(6, 8);
        return t + "-" + i + "-" + n
    };
    t.getItemListArr = function(e) {
        var t = [];
        if (e && e instanceof Array) {
            for (var i = 0; i < e.length; i++) {
                var n = e[i];
                if (n) {
                    var s = GameConfig.Item.getItemInfoById(parseInt(n.ItemId));
                    if (s) {
                        var a = Utils.LeftTimeFormat2(n.ItemValid, false);
                        var r = n.ItemNum >= 1e4 ? Math.floor(n.ItemNum / 1e4) + "万": n.ItemNum;
                        t.push({
                            itemBg: Utils.getItemIconBgSkin(s.FrameLevel),
                            itemIcon: s.skin,
                            num: {
                                value: r,
                                visible: n.ItemValid ? false: true
                            },
                            valid: {
                                value: a,
                                visible: n.ItemValid ? true: false
                            }
                        })
                    }
                }
            }
        }
        return t
    };
    t.strIconCfgToArray = function(e) {
        var t = [];
        if (e) {
            var i = e.split("|");
            for (var n = 0; n < i.length; n++) {
                if (i[n]) {
                    var s = i[n].split(":");
                    var a = false;
                    if (s && s.length >= 2) {
                        a = s[1] * 1 ? false: true
                    }
                    var r = GameConfig.Item.getItemInfoById(parseInt(i[n]));
                    t.push({
                        itemBg: Utils.getItemIconBgSkin(r.FrameLevel),
                        itemIcon: r.skin,
                        num: {
                            value: 0,
                            visible: false
                        },
                        valid: {
                            value: 0,
                            visible: false
                        },
                        gray: a
                    })
                }
            }
        }
        return t
    };
    t.getListArray = function(e) {
        var t = [];
        if (e && e instanceof Array) {
            for (var i = 0; i < e.length; i++) {
                var n = e[i];
                if (n) {
                    var s = this.getItemListArr(n.Item);
                    var a = {
                        list_0: this.strIconCfgToArray(n.Condition),
                        list_1: s,
                        State: n.State,
                        id: n.Idx,
                        btnGet: {
                            visible: n.State <= 2 ? true: false,
                            gray: n.State != 1 ? true: false
                        },
                        btnHadGet: {
                            visible: n.State == 3 ? true: false
                        }
                    };
                    t.push(a)
                }
            }
        }
        return t
    };
    t.show = function(e, t) {
        if (e) {
            this.dateTxt.text = this.getDate(e.StartDate) + " ~ " + this.getDate(e.EndDate);
            this.descriptionLabel.text = e.Desc ? e.Desc: "";
            this.ActId = e.ActId;
            if (e.Item && e.Item[0]) {
                var i = e.Item[0].ShowCon;
                var n = this.strIconCfgToArray(i);
                for (var s = 0; s < n.length; s++) {
                    var a = n[s];
                    if (a && a.itemIcon && this["icon_" + s]) {
                        this["icon_" + s].skin = a.itemIcon
                    }
                }
            }
            var r = e.Item;
            r.sort(function(e, t) {
                if (e.State == t.State) {
                    return e.Idx - t.Idx
                }
                return e.State - t.State
            });
            var o = this.getListArray(r);
            this.listUI.array = o
        }
        if (t) {
            t.addChild(this)
        }
    };
    t.close = function() {
        this.removeSelf();
        this.reset()
    };
    t.reset = function() {};
    return {
        show: function(t, i) {
            console.log(t);
            WinUtils.showView(RES.loadTaskList.actFireOfWar, e, i, n,
            function(e) {
                e.show(t, i);
                Waiting.hide()
            })
        },
        hide: function() {
            WinUtils.getSaveUI(e) && WinUtils.getSaveUI(e).close()
        }
    }
} ();
var ShipmentNotice = function() {
    var e = null;
    function t() {
        t.super(this)
    }
    Laya.class(t, "ShipmentNoticeFun", ShipmentNoticeUI, "");
    var i = t.prototype;
    i.init = function() {
        Laya.stage.on(Laya.Event.def_LeaveBigRich, this, this.reset);
        this.btn_get.clickHandler = new Laya.Handler(this,
        function() {
            this.close();
            ShopMall.show(undefined, 5)
        });
        this.btn_iknow.clickHandler = new Laya.Handler(this,
        function() {
            this.close()
        })
    };
    i.onClosed = function() {
        BaseDialog.prototype.onClosed.call(this);
        e = null;
        Laya.stage.off(Laya.Event.def_LeaveBigRich, this, this.reset)
    };
    i.reset = function() {
        if (this.displayedInStage) {
            this.close()
        }
        e = null
    };
    return {
        show: function() {
            if (!e) {
                e = new t;
                e.init()
            }
            e.popup()
        },
        hide: function() {
            e && e.close()
        }
    }
} ();
var ShipmentPrize = function() {
    var s = "ShipmentPrizeUI";
    var e = null;
    var t = Laya.Tween;
    var i = ShipmentPrizeUI.prototype;
    i.initData = function(e) {
        this.data = e;
        this.PrizeInfoBox = [];
        this.PrizeViewpoint = [];
        this.curIndex = 0;
        this.moveIndex = 0;
        this.fiveTimes = 5;
        this.ActId = e.ActId;
        this.isBeginDraw = false;
        this.light_boxAddImg();
        var t = e.StartDate.toString();
        var i = e.EndDate.toString();
        if (t.length == 8 && i.length == 8) {
            var n = t.substr(4, 2) + "月" + t.substr(6, 2) + "日";
            var s = i.substr(4, 2) + "月" + i.substr(6, 2) + "日";
            this.act_time.text = n + "—" + s
        }
        this.time_after.visible = false;
        this.isDoingPlay = false
    };
    i.display = function() {
        this.on(Laya.Event.CLICK, this,
        function(e) {
            var t = e.target.name;
            if (t === "prize_rank") {
                ShipmentRank.show(this.data.ActRankInfo)
            } else if (t === "one_times") {
                if (this.remain_num.text > 0) {
                    if (this.isDoingPlay) {
                        return
                    }
                    this.isDoingPlay = true;
                    this.one_times.mouseEnabled = false;
                    this.five_times.mouseEnabled = false;
                    this.remain_num.text = this.leaveCount - 1;
                    Request.getActPrizeReq(this.ActId, null, 1, null)
                } else {
                    ShipmentNotice.show()
                }
            } else if (t === "five_times") {
                if (this.remain_num.text >= 5) {
                    if (this.isDoingPlay) {
                        return
                    }
                    this.isDoingPlay = true;
                    this.one_times.mouseEnabled = false;
                    this.five_times.mouseEnabled = false;
                    this.remain_num.text = this.leaveCount - 5;
                    Request.getActPrizeReq(this.ActId, null, 5, null)
                } else {
                    ShipmentNotice.show()
                }
            }
        })
    };
    i.TimeCountDown = function() {
        var e = [0, 6, 12, 18];
        var t = new Date;
        var i = t.getHours();
        var n = t.getMinutes();
        var s = t.getSeconds();
        var a = 0;
        for (var r = 0; r < e.length; r++) {
            if (r != e.length - 1 && i > e[r] && i < e[r + 1]) {
                a = e[r + 1]
            } else if (r == e.length - 1 && i >= e[r]) {
                a = 24
            }
        }
        this.TimeMss = (a - i - 1) * 60 * 60 * 1e3 + (60 - n) * 60 * 1e3 + (60 - s) * 1e3;
        this.time_after.text = this.formatDuring(this.TimeMss);
        this.timer.loop(1e3, this, this.updateTime)
    };
    i.updateTime = function() {
        this.TimeMss -= 1e3;
        this.time_after.text = this.formatDuring(this.TimeMss)
    };
    i.formatDuring = function(e) {
        var t = parseInt(e % (1e3 * 60 * 60 * 24) / (1e3 * 60 * 60));
        var i = parseInt(e % (1e3 * 60 * 60) / (1e3 * 60));
        var n = e % (1e3 * 60) / 1e3;
        if (t == 0 && n == 0 && i == 0) {
            Request.getHYDTInfoReq(WinUtils.getSaveUI(s).data.ActId)
        }
        if (t < 10) {
            t = "0" + t
        }
        if (i < 10) {
            i = "0" + i
        }
        if (n < 10) {
            n = "0" + n
        }
        return t + " : " + i + " : " + n
    };
    i.updataPrizeBoxInfo = function(e) {
        this.PrizeInfoBox = [];
        if (!this.isBeginDraw) {
            this.prizeBox.destroyChildren()
        }
        this.leaveCount = e.leaveCount;
        this.remain_num.text = this.leaveCount;
        var t = e.Item;
        var i = 16;
        var n = 10;
        if (t && t.length > 0) {
            for (var s = 0; s < t.length; s++) {
                var a = 0;
                var r = 0;
                var o = t[s];
                var l = null;
                if (!this.isBeginDraw) {
                    l = new ShipmentPrizeOptionUI;
                    this.prizeBox.addChild(l);
                    this.prizeBox.cacheAs = "bitmap"
                } else {
                    l = this.prizeBox._childs[s]
                }
                if (s < 5) {
                    a = l.width / 2 + s * (l.width + i);
                    r = l.height / 2
                } else if (s >= 5 && s < 7) {
                    a = this.prizeBox.width - l.width / 2;
                    r = l.height / 2 + (s - 5) * (l.height + n)
                } else if (s >= 7 && s < 12) {
                    a = this.prizeBox.width - (l.width / 2 + (s - 7) * (l.width + i));
                    r = this.prizeBox.height - l.height / 2
                } else if (s >= 12) {
                    a = l.width / 2;
                    r = this.prizeBox.height - (l.height / 2 + (s - 12) * (l.height + n))
                }
                l.x = a;
                l.y = r;
                l.prize_Img.skin = "resource/icon/" + o.ItemId + ".png";
                l.prize_Num.value = o.ItemNum;
                l.prize_integral.text = "积分:" + o.ItemScore;
                var h = Utils.LeftTimeFormat2(o.ItemValid, false);
                l.fc_valid.visible = o.ItemValid ? true: false;
                l.fc_valid.value = h;
                var u = {
                    x: a,
                    y: r - 1,
                    ItemId: o.ItemId,
                    ItemNum: o.ItemNum,
                    ItemScore: o.ItemScore,
                    ItemValid: o.ItemValid
                };
                this.PrizeInfoBox.push(u)
            }
        }
    };
    i.initSelecBoxPoint = function(e, t) {
        var i = 0;
        for (var n = 0; n < this.PrizeInfoBox.length; n++) {
            var s = this.PrizeInfoBox[n];
            if (e.ItemId == s.ItemId && e.ItemNum == s.ItemNum) {
                i = n + 1
            }
        }
        if (t) {
            i = Math.ceil(i) + 14
        } else {
            i = Math.ceil(i) + 28
        }
        return i
    };
    i.addSelectedImage = function() {
        var e = this.PrizeInfoBox[this.curIndex];
        var t = new Laya.Image;
        t.skin = "resource/ActShipmentPrize/ActShipmentPrize/bar_kuang.png";
        t.anchorX = .5;
        t.anchorY = .5;
        t.sizeGrid = "15,15,16,15";
        t.size(106, 120);
        t.pos(e.x, e.y);
        this.prize_select_box.addChild(t);
        return t
    };
    i.drawOneTime = function(e, t, i, n) {
        if (this.moveIndex < t) {
            var s = 30;
            if (t - this.moveIndex < 6 && t - this.moveIndex >= 3) {
                s = 200
            } else if (t - this.moveIndex < 3) {
                s = 400
            }
            var a = this.moveIndex % 14;
            var r = this.PrizeInfoBox[a];
            e.visible = true;
            this.timer.once(s, this,
            function() {
                this.moveIndex += 1;
                e.pos(r.x, r.y);
                e.visible = false;
                this.drawOneTime(e, t, i, n);
                this.curIndex = a
            })
        } else {
            e.visible = true;
            Sound.playSound(Sound.RES.shipmentPD.url, Sound.RES.shipmentPD.vol, false);
            if (i) {
                Laya.timer.once(1e3, this,
                function() {
                    this.drawFiveTimes(n)
                })
            } else {
                this.updatePrizeBoxInfo(n)
            }
        }
    };
    i.updatePrizeBoxInfo = function(e) {
        Laya.timer.once(1e3, this,
        function() {
            var i = this;
            var n = GetReward.show("", e);
            n.closeCallback = function() {
                n = null;
                i.prize_select_box.destroyChildren();
                var e = false;
                for (var t = 0; t < 14; t++) {
                    Laya.Tween.to(i.prizeBox._childs[t], {
                        scaleX: 0
                    },
                    300, null, Laya.Handler.create(i,
                    function(t) {
                        if (!e) {
                            e = true;
                            i.isBeginDraw = true;
                            Request.getHYDTInfoReq(WinUtils.getSaveUI(s).data.ActId)
                        }
                        Laya.timer.once(300, i,
                        function() {
                            for (var e = 0; e < 14; e++) {
                                Laya.Tween.to(i.prizeBox._childs[e], {
                                    scaleX: 1
                                },
                                300, undefined, Laya.Handler.create(i,
                                function(e) {
                                    if (t == 13 && e == 13) {
                                        if (WinUtils.getSaveUI(s)) WinUtils.getSaveUI(s).isDoingPlay = false
                                    }
                                },
                                [e]))
                            }
                        })
                    },
                    [t]))
                }
                Laya.timer.once(1200, i,
                function() {
                    i.curIndex = 0;
                    i.moveIndex = 0;
                    i.one_times.mouseEnabled = true;
                    i.five_times.mouseEnabled = true
                })
            };
            Request.GetRedPointReq()
        })
    };
    i.drawFiveTimes = function(e) {
        this.fiveTimes -= 1;
        if (this.fiveTimes >= 0) {
            this.moveIndex = this.curIndex;
            var t = false;
            if (this.fiveTimes < 4) {
                t = true
            }
            var i = this.initSelecBoxPoint(e[this.fiveTimes], t);
            var n = WinUtils.getSaveUI(s).addSelectedImage();
            this.drawOneTime(n, i, true, e);
            Sound.playSound(Sound.RES.shipmentPZ.url, Sound.RES.shipmentPZ.vol, false)
        } else {
            this.fiveTimes = 5;
            this.updatePrizeBoxInfo(e)
        }
    };
    i.light_boxAddImg = function() {
        var e = this.light_box.width / 21;
        var t = this.light_box.height / 11;
        for (var i = 0; i < 20; i++) {
            var n = new Laya.Image;
            n.skin = "resource/ActShipmentPrize/ActShipmentPrize/img_deng" + (i % 2 === 0 ? 2 : 1) + ".png";
            n.anchorX = .5;
            n.anchorY = .5;
            n.pos(e + e * i, 6);
            this.light_box.addChild(n)
        }
        for (var s = 0; s < 10; s++) {
            var n = new Laya.Image;
            n.skin = "resource/ActShipmentPrize/ActShipmentPrize/img_deng" + (s % 2 === 0 ? 2 : 1) + ".png";
            n.anchorX = .5;
            n.anchorY = .5;
            n.pos(this.light_box.width - 6, t + t * s);
            this.light_box.addChild(n)
        }
        for (var a = 0; a < 20; a++) {
            var n = new Laya.Image;
            n.skin = "resource/ActShipmentPrize/ActShipmentPrize/img_deng" + (a % 2 === 0 ? 2 : 1) + ".png";
            n.anchorX = .5;
            n.anchorY = .5;
            n.pos(this.light_box.width - (e + e * a), this.light_box.height - 6);
            this.light_box.addChild(n)
        }
        for (var r = 0; r < 10; r++) {
            var n = new Laya.Image;
            n.skin = "resource/ActShipmentPrize/ActShipmentPrize/img_deng" + (r % 2 === 0 ? 2 : 1) + ".png";
            n.anchorX = .5;
            n.anchorY = .5;
            n.pos(6, this.light_box.height - (t + t * r));
            this.light_box.addChild(n)
        }
        this.lightFlashFun()
    };
    i.lightFlashFun = function() {
        this._index = -1;
        this._turnIndex = -1;
        var e = this.light_box,
        t = e._childs.length;
        this.timer.loop(50, this, this.breathingLamp, [e, t])
    };
    i.breathingLamp = function(e, t) {
        this._index++;
        var i = e.getChildAt(this._index);
        this.breathingStage(i);
        if (this._index >= t - 1) {
            this._turnIndex++;
            this._index = -1;
            if (this._turnIndex >= 2) {
                this._fastIndex = -1;
                this.timer.clear(this, this.breathingLamp);
                this.timer.loop(300, this, this.breathingStageOther, [e, t])
            }
        }
    };
    i.breathingStage = function(e) {
        if (this._index % 2 === 0) {
            e.skin = "resource/ActShipmentPrize/ActShipmentPrize/img_deng1.png"
        } else {
            e.skin = "resource/ActShipmentPrize/ActShipmentPrize/img_deng2.png"
        }
        this.timer.once(300, this,
        function() {
            if (e.skin === "resource/ActShipmentPrize/ActShipmentPrize/img_deng1.png") {
                e.skin = "resource/ActShipmentPrize/ActShipmentPrize/img_deng2.png"
            } else {
                e.skin = "resource/ActShipmentPrize/ActShipmentPrize/img_deng1.png"
            }
        })
    };
    i.breathingStageOther = function(e, t) {
        this._fastIndex++;
        for (var i = 0; i < t; i++) {
            var n = e.getChildAt(i);
            if (n.skin === "resource/ActShipmentPrize/ActShipmentPrize/img_deng1.png") {
                n.skin = "resource/ActShipmentPrize/ActShipmentPrize/img_deng2.png"
            } else {
                n.skin = "resource/ActShipmentPrize/ActShipmentPrize/img_deng1.png"
            }
        }
        if (this._fastIndex >= 20) {
            this.timer.clear(this, this.breathingStageOther);
            this.lightFlashFun()
        }
    };
    i.unDisplay = function() {
        this.fiveTimes = -1;
        this.timer.clearAll(this);
        Laya.timer.clearAll(this)
    };
    i.reset = function() {
        this.unDisplay();
        this.removeSelf()
    };
    var n = {
        show: function(t, e) {
            WinUtils.showView(RES.ShipmentPrize, s, e, ShipmentPrizeUI,
            function(e) {
                e.initData(t);
                Request.getHYDTInfoReq(t.ActId);
                Waiting.hide()
            })
        },
        hide: function() {
            if (WinUtils.getSaveUI(s)) {
                WinUtils.getSaveUI(s).reset()
            }
        },
        GetHYDTInfoRep: function(e) {
            console.log(e);
            if (WinUtils.getSaveUI(s)) {
                WinUtils.getSaveUI(s).updataPrizeBoxInfo(e)
            }
        },
        ShipmentActPrizeRep: function(e) {
            console.log(e);
            if (WinUtils.getSaveUI(s) && e.Tag) {
                var t = e.Item;
                if (t && t.length == 1) {
                    var i = WinUtils.getSaveUI(s).initSelecBoxPoint(t[0], false);
                    var n = WinUtils.getSaveUI(s).addSelectedImage();
                    WinUtils.getSaveUI(s).drawOneTime(n, i, false, t);
                    Sound.playSound(Sound.RES.shipmentPZ.url, Sound.RES.shipmentPZ.vol, false)
                }
                if (t && t.length == 5) {
                    WinUtils.getSaveUI(s).drawFiveTimes(t)
                }
            }
        }
    };
    return n
} ();
var ShipmentRank = function() {
    var e = ShipmentRankUI.prototype;
    e.init = function() {
        Laya.stage.on(Laya.Event.def_LeaveBigRich, this, this.reset);
        this.ship_list.scrollBar.hide = true;
        Request.BigRichRankRewardListReq()
    };
    e.setRankList = function(e) {
        this.user_name.text = Utils.nickBylen(Player.getNick());
        if (e && e.length > 0) {
            var t = [];
            for (var i = 0; i < e.length; i++) {
                var n = e[i];
                var s = n["Rank"];
                if (n["Nick"] && n["UserId"]) {
                    t.push({
                        userHead: n["AvatarUrl"] == "" ? "resource/head/1.png": n["AvatarUrl"],
                        vipIcon: "resource/icon/vipLevel/vip" + n["VipLevel"] + ".png",
                        uName: {
                            text: n["Nick"] || ""
                        },
                        uId: {
                            text: "编号:" + n["UserId"] || "0"
                        },
                        rankImg: {
                            visible: s < 4 ? true: false,
                            skin: s < 4 ? "resource/ActShipmentPrize/ShipmentRank/img_paiming" + s + ".png": ""
                        },
                        fc_rank: {
                            visible: s >= 4 ? true: false,
                            value: s
                        },
                        fc_gold: {
                            value: n["Item"][0].ItemNum
                        },
                        prize_img: "resource/icon/" + n["Item"][0].ItemId + ".png",
                        uintegral: n["Value"]
                    })
                }
            }
            this.ship_list.array = t;
            if (t && t.length > 0) {
                this.ship_list.visible = true;
                this.img_nodata.visible = false
            } else {
                this.ship_list.visible = false;
                this.img_nodata.visible = true
            }
        }
    };
    e.onOpened = function() {
        t.opened && t.opened()
    };
    e.onClosed = function() {
        t.closed && t.closed()
    };
    e.reset = function() {
        if (this.displayedInStage) {
            this.close()
        }
        i = null
    };
    var i = null;
    var t = {
        opened: null,
        closed: null,
        show: function(t) {
            WinUtils.showDialog("res/atlas/resource/ActShipmentPrize/ShipmentRank.atlas", ShipmentRankUI,
            function(e) {
                e.isClearRes = false;
                i = e;
                i.setRankList(t);
                i.popup()
            })
        }
    };
    return t
} ();
var ActLuckCodeList = function() {
    function e() {
        e.super(this)
    }
    Laya.class(e, "ActLuckCodeList", ActLuckCodeListUI);
    var t = e.prototype;
    t.initData = function(e) {
        this.dataList.vScrollBarSkin = "";
        this.dataList.selectEnable = true;
        this.dataList.renderHandler = new Laya.Handler(this, this.renderList);
        this.dataList.array = e;
        this.noData.visible = this.dataList.array.length <= 0
    };
    t.renderList = function(e, t) {
        var i = this.dataList.array[t];
        e.getChildByName("status").text = i.Status == 2 ? "未中奖": i.Status == 1 ? "中奖": i.Status == 0 ? "未开奖": "";
        e.getChildByName("status").color = i.Status == 2 ? "#616b6f": i.Status == 1 ? "#18c545": i.Status == 0 ? "#bc5b1d": "";
        e.getChildByName("luckCode").text = i.LuckNum + "";
        e.getChildByName("rewardBox").visible = i.Status == 1;
        e.getChildByName("status").visible = i.Status != 1;
        if (i.Status == 1 && i.JinLiReward) {
            var n = i.JinLiReward.split(":");
            var s = GameConfig.Item.getItemInfoById(n[0]);
            e.getChildByName("rewardBox").getChildByName("icon").skin = s.skin;
            e.getChildByName("rewardBox").getChildByName("num").text = Utils.numberFormat(n[1])
        }
    };
    var i = {};
    i.show = function(t) {
        WinUtils.showDialog(["UIRoot/activity/ActLuckOrder/ActLuckCodeList.json", "UIRoot/activity/ActLuckOrder/ActLuckCodeItem.json"], e,
        function(e) {
            e.initData(t);
            e.popup()
        })
    };
    return i
} ();
var ActLuckOrder = function() {
    function i() {
        i.super(this);
        this.setBtClick([this.btnMyCode, this.btnRecharge, this.btnRank, this.btnRule])
    }
    Laya.class(i, "ActLuckOrder", ActLuckOrderUI);
    var e = i.prototype;
    e.initData = function(e) {
        this.msgData = e;
        this.totalDan.value = e.JinLiInfo.TotalNum;
        this.nowDan.value = e.JinLiInfo.DownNum;
        this.chouDan.value = e.JinLiInfo.RewardNum;
        this.progressImg.width = 386 * e.JinLiInfo.DownNum / e.JinLiInfo.TotalNum;
        this.progressDan.x = this.progressImg.width + 5;
        this.progressDanImg.x = this.progressImg.width + 5;
        this.progressDanImg.visible = e.JinLiInfo.TotalNum != e.JinLiInfo.DownNum && e.JinLiInfo.DownNum > 0;
        this.actTime.text = "活动时间" + this.getDate(e.StartDate) + "-" + this.getDate(e.EndDate);
        this.redP.visible = this.msgData.CanGet
    };
    e.onClick = function(e) {
        switch (e.target) {
        case this.btnMyCode:
            ActLuckCodeList.show(this.msgData.JinLiInfo.LuckNums);
            if (this.redP.visible) {
                Activity.updateSelectItemRedPoint(false);
                this.redP.visible = false;
                this.msgData.CanGet = false;
                Request.getActPrizeReq(this.msgData.ActId, 1)
            }
            break;
        case this.btnRecharge:
            ShopMall.show(true, 5);
            break;
        case this.btnRank:
            ActLuckOrderList.show(this.msgData.JinLiInfo.JinLiLists);
            break;
        case this.btnRule:
            ActLuckOrderRule.show(this.msgData.Desc);
            break
        }
    };
    e.getDate = function(e) {
        e = e.toString();
        var t = (e + "").substring(0, 4);
        var i = (e + "").substring(4, 6);
        var n = (e + "").substring(6, 8);
        return t + "." + i + "." + n
    };
    var t = {};
    t.show = function(e, t) {
        WinUtils.showView(RES.ActLuckOrder, "ActLuckOrder", e, i,
        function(e) {
            e.initData(t)
        })
    };
    return t
} ();
var ActLuckOrderList = function() {
    function e() {
        e.super(this)
    }
    Laya.class(e, "ActLuckOrderList", ActLuckOrderListUI);
    var t = e.prototype;
    t.initData = function(e) {
        this.dataList.vScrollBarSkin = "";
        this.dataList.selectEnable = true;
        this.dataList.renderHandler = new Laya.Handler(this, this.renderList);
        this.dataList.array = e;
        this.noData.visible = this.dataList.array.length <= 0
    };
    t.renderList = function(e, t) {
        var i = this.dataList.array[t];
        var n = "";
        if (Number.isInteger(i.HeadImg)) {
            n = i.HeadImg
        } else {
            n = "resource/head/" + i.HeadImg + ".png"
        }
        e.getChildByName("head").skin = n;
        e.getChildByName("nick").text = i.NickName;
        e.getChildByName("userID").text = "编号：" + i.UserId;
        var s = i.JinLiReward.split(":");
        var a = GameConfig.Item.getItemInfoById(s[0]);
        e.getChildByName("icon").skin = a.skin;
        e.getChildByName("num").text = Utils.numberFormat(s[1])
    };
    var i = {};
    i.show = function(t) {
        WinUtils.showDialog(["UIRoot/activity/ActLuckOrder/ActLuckOrderList.json", "UIRoot/activity/ActLuckOrder/ActLuckOrderItem.json"], e,
        function(e) {
            e.initData(t);
            e.popup()
        })
    };
    return i
} ();
var ActLuckOrderRule = function() {
    function e() {
        e.super(this)
    }
    Laya.class(e, "ActLuckOrderRule", ActLuckOrderRuleUI);
    var t = {};
    t.show = function(t) {
        WinUtils.showDialog(["UIRoot/activity/ActLuckOrder/ActLuckOrderRule.json"], e,
        function(e) {
            e.des.text = t;
            e.popup()
        })
    };
    return t
} ();
var LuckyGift = function() {
    function s() {
        s.super(this)
    }
    Laya.class(s, "LuckyGiftFun", zhuanpanliuxingUI, "");
    var e = s.prototype;
    e.init = function() {
        this.ani1.addLabel("a", 26);
        this.ani1.on(Laya.Event.LABEL, this,
        function(e) {
            if (e) {
                t.processCall && t.processCall()
            }
        });
        this.ani1.on(Laya.Event.COMPLETE, this,
        function() {
            t.closeCall && t.closeCall();
            this.removeSelf();
            Laya.Pool.recover("LuckyGiftFun", this)
        })
    };
    e.show = function(e, t, i) {
        if (e) {
            this.pos(t, i);
            this.ani1.play(0, true);
            e.addChild(this)
        }
    };
    var t = {
        closeCall: null,
        processCall: null,
        show: function(e, t, i) {
            var n = Laya.Pool.getItemByClass("LuckyGiftFun", s);
            n.init();
            n.show(e, t, i)
        }
    };
    return t
} ();
var DanTou = function() {
    var f = {
        getEndPoint: function(e) {
            var t = e.pathPointArray;
            var i = 0,
            n = 0,
            s = 0;
            var a = 0;
            if (!t) {
                return e.getXY()
            }
            for (var r = 0; r < t.length; r++) {
                var o = t[r];
                var l = Laya.Pool.getItemByClass("point", Laya.Point);
                l.x = o.x;
                l.y = o.y;
                s = l.distance(e.x, e.y);
                if (s <= i) {
                    i = s
                }
                Laya.Pool.recover("point", l);
                if (s <= 10) {
                    n = r;
                    break
                }
            }
            var h = 0,
            u = 0;
            if (n + 20 < t.length) {
                h = t[n + 20].x;
                u = t[n + 20].y
            } else {
                h = t[t.length - 1].x;
                u = t[t.length - 1].y
            }
            return {
                x: h,
                y: u
            }
        },
        showBombEffect: function(e, t) {
            if (d) {
                var i = Laya.Pool.getItemByClass("daodanbaozhaUI", daodanbaozhaUI);
                i.pos(e, t);
                i.size(Game.UIWidth, Game.UIHeight);
                i.pivot(Game.UIWidth / 2, Game.UIHeight / 2);
                i.once(Laya.Event.DISPLAY, this,
                function() {
                    i.ani1.play(0, false)
                });
                i.ani1.once(Laya.Event.COMPLETE, this,
                function() {
                    i.removeSelf();
                    Laya.Pool.recover("daodanbaozhaUI", i)
                });
                d.addChild(i);
                d.visible = true
            }
        }
    };
    var d = null;
    var e = {
        init: function(e) {
            d = e;
            Laya.Animation.createFrames(["resource/fishScene/fx-huoshe_00001.png", "resource/fishScene/fx-huoshe_00002.png"], "daoTouHuoSheAni")
        },
        show: function(e, t, i, n, s) {
            var a = Laya.Sprite.fromImage("resource/icon/" + i + ".png");
            var r = Laya.Pool.getItemByClass("Animation_danTou", Laya.Animation);
            r.size(50, 60);
            r.pivot(25, 60);
            r.rotation = 135;
            r.autoPlay = true;
            r.interval = 60;
            r.play(0, true, "daoTouHuoSheAni");
            if (i == Game.item.QinTongDaoDan) {
                r.pos(54, 54)
            } else {
                r.pos(65, 65)
            }
            a.addChild(r);
            a.pos(e.x, e.y);
            d.visible = true;
            d.addChild(a);
            var o = f.getEndPoint(t);
            var l = (e.x + o.x) / 2;
            var h = o.y;
            if (Math.abs(o.x - e.x) < 100) {
                l = o.x - 200
            }
            if (Math.abs(o.y - e.y) < 100) {
                h = o.y - 200
            }
            var u = [{
                x: e.x,
                y: e.y
            },
            {
                x: l,
                y: h
            },
            {
                x: o.x,
                y: o.y
            }];
            var c = {
                delay: 0,
                orientToBezier: ["x", "y", "rotation", 120],
                bezier: u,
                ease: "easeInCubic",
                onStart: function() {
                    if (n == Player.getUserId()) {
                        Sound.playSound(Sound.RES.ddz25.url, Sound.RES.ddz25.vol)
                    }
                },
                onComplete: function(e) {
                    Laya.Pool.recover("Animation_danTou", r);
                    e.removeSelf();
                    Sound.playSound(Sound.RES.BOSS_scene_bomb.url, Sound.RES.BOSS_scene_bomb.vol);
                    f.showBombEffect(t.getXY().x, t.getXY().y);
                    s && s(t)
                },
                onCompleteParams: [a]
            };
            TweenLite.to(a, 1.2, c)
        }
    };
    return e
} ();
var ShanDianLian = function() {
    var e = Laya.Event;
    var t = Laya.Animation;
    var f = Laya.Point;
    var r = false;
    var o = function() {
        t.createFrames(["resource/fishScene/lightning_00.png", "resource/fishScene/lightning_01.png", "resource/fishScene/lightning_02.png"], "dianLian");
        t.createFrames(["resource/fishScene/PT08_FXA1.png", "resource/fishScene/PT08_FXA2.png", "resource/fishScene/PT08_FXA3.png", "resource/fishScene/PT08_FXA4.png"], "dianGuang")
    };
    var d = 256;
    var u = Math.PI;
    var g = function(e, t, i) {
        var n = Laya.Pool.getItemByClass("animation_sdl", Laya.Animation);
        n.interval = 1e3 / 20;
        n.pivot(0, 45);
        n.scale(.8, .8);
        n.play(0, true, "dianLian");
        n.blendMode = "lighter";
        n.zOrder = i;
        n.pos(e, t);
        return n
    };
    var p = function(e, t, i) {
        var n = Laya.Pool.getItemByClass("animation_dgq", Laya.Animation);
        n.pivot(42.5, 42.5);
        n.scale(.6, .6);
        n.play(0, true, "dianGuang");
        n.zOrder = i + 1;
        n.pos(e, t);
        return n
    };
    function _(e, t) {
        var i = e.x * 1,
        n = e.y * 1,
        s = t.x * 1,
        a = t.y * 1;
        var r = Math.abs(i - s);
        var o = Math.abs(n - a);
        var l = Math.sqrt(r * r + o * o);
        var h = Math.round(Math.asin(o / l) / u * 180);
        if (s <= i && a <= n) {
            h += 180
        }
        if (s >= i && a <= n) {
            h = 0 - h
        }
        if (s <= i && a >= n) {
            h = 180 - h
        }
        if (s >= i && a >= n) {}
        if (s == i && a == n) {
            h = 0
        }
        return h
    }
    var m = null;
    var i = {
        init: function(e) {
            m = e
        },
        show: function(e, t) {
            if (!e) {
                return
            }
            if (!r) {
                r = true;
                o()
            }
            var h = [];
            var i = e.getXY();
            var u = i.x,
            c = i.y;
            for (var n = 0; n < t.length; n++) {
                var s = t[n]; (function(e) {
                    var t = e.getXY();
                    var i = t.x,
                    n = t.y;
                    var s = g(u, c, 0);
                    var a = p(i, n, 0);
                    var r = new f(u, c);
                    var o = r.distance(i, n);
                    s.scaleX = o / d;
                    var l = _(r, {
                        x: i,
                        y: n
                    });
                    s.rotation = l;
                    m.addChild(s);
                    m.addChild(a);
                    h.push(s);
                    h.push(a)
                })(s)
            }
            var a = p(u, c, 0);
            a.zOrder = 10;
            m.addChild(a);
            m.visible = true;
            h.push(a);
            e.timer.once(2500, this,
            function() {
                for (var e = 0; e < h.length; e++) {
                    var t = h[e];
                    t.removeSelf();
                    Laya.Pool.recover("animation_dgq", t)
                }
            })
        }
    };
    return i
} ();
var FishDeadSpine = function() {
    var s = Laya.Templet;
    var n = function(e, t) {
        if (t <= e.getAnimNum()) {
            e.play(0, t ? false: true)
        } else {
            console.log("play index:" + t + "------------" + "animNum:" + e.getAnimNum())
        }
    };
    var a = function(e, t, i) {
        o = e.buildArmature(0);
        l.addChild(o);
        l.visible = true;
        o.pos(t, i);
        n(o, 0)
    };
    var r = null,
    o, l = null;
    return {
        init: function(e) {
            l = e
        },
        show: function(e, t, i, n) {
            if (l) {
                if (r && o) {
                    a(r, e, t)
                } else {
                    r = Laya.Pool.getItemByClass("Templet", s);
                    r.loadAni("res/spine/fishDead/yibansiwang.sk");
                    r.on(Laya.Event.COMPLETE, this,
                    function() {
                        a(r, e, t);
                        n && n(o)
                    })
                }
            }
        }
    }
} ();
var BingDongSpine = function() {
    var t = Laya.Templet;
    var i = function(e, t) {
        if (t <= e.getAnimNum()) {
            e.play(0, t ? false: true)
        } else {}
    };
    var n = function(e) {
        a = e.buildArmature(0);
        r.addChild(a);
        o.push(a);
        r.visible = true;
        a.pos(Game.UIWidth / 2, Game.UIHeight / 2);
        i(a, 0)
    };
    var s = null,
    a, r = null,
    o = [];
    return {
        init: function(e) {
            r = e
        },
        show: function(e) {
            if (r) {
                if (s && a) {
                    n(s)
                } else {
                    s = Laya.Pool.getItemByClass("Templet", t);
                    s.loadAni("res/spine/bingDong/bingdong.sk");
                    s.on(Laya.Event.COMPLETE, this,
                    function() {
                        n(s);
                        e && e(a)
                    })
                }
            }
        },
        hide: function() {
            for (var e = 0; e < o.length; e++) {
                o[e].removeSelf()
            }
        }
    }
} ();
var SkillSuoDingCD = function() {
    var s, a, r, i, n, o = 270,
    l = .82 * 2;
    l = 1.2;
    var t = 0;
    var h = null;
    var u = {
        prevFireReqTimer: 0,
        playCDTime: function() {
            if (a && a.currCDTime > 1) {
                if (s && s.visible && !s.destroyed) {
                    a.currCDTime -= 1;
                    a.value = a.currCDTime
                } else {
                    u.stopCDTime()
                }
            } else {
                u.stopCDTime()
            }
        },
        updateAngle: function() {
            if (s) {
                s.graphics.clear();
                o += l;
                o = o > 630 ? 630 : o;
                s.graphics.drawPie(44, 44, 60, o, 630, "#000000");
                if (o >= 630) {
                    u.stopCDTime()
                }
            }
        },
        update: function() {
            var e = Laya.timer.currTimer;
            if (e - t >= 41) {
                t = e;
                this.updateAngle();
                h && h()
            }
        },
        stopCDTime: function() {
            if (a && s) {
                a.timer.clear(u, u.update);
                s.visible = false;
                a.visible = false;
                a.value = a.allCDTime;
                n && n.call(i, null);
                n = undefined
            }
        }
    };
    return {
        init: function(e, t, i, n) {
            s = e;
            a = t;
            r = i;
            h = n;
            a.once(Laya.Event.UNDISPLAY, this,
            function() {
                u.stopCDTime()
            })
        },
        show: function(e, t) {
            if (s) {
                i = e;
                n = t;
                a.value = r;
                s.visible = true;
                a.allCDTime = r;
                a.currCDTime = r;
                o = 270;
                l = 1.51;
                SkillHarmonicsCD.synTime(r);
                s.graphics.drawPie(39, 39, 60, 270, 630, "#000000");
                a.timer.clear(u, u.update);
                a.timer.loop(1, u, u.update)
            }
        },
        synKuangBao: function(e) {
            if (s) {
                a.value = e;
                s.visible = true;
                o = 270;
                l = 1.51 / (e / 15);
                s.graphics.drawPie(0, 0, 60, 270, 630, "#000000");
                a.currCDTime = e;
                a.timer.clear(u, u.update);
                a.timer.loop(1, u, u.update)
            }
        },
        reset: function() {
            u.prevFireReqTimer = 0;
            u.stopCDTime();
            o = 270
        }
    }
} ();
var SkillBinDongCD = function() {
    var n, s, a, i, r, o = 270,
    e = 1.2;
    var t = 0;
    var l = {
        playCDTime: function() {
            if (s && s.currCDTime > 1) {
                if (n && n.visible && !n.destroyed) {
                    s.currCDTime -= 1;
                    s.value = s.currCDTime
                } else {
                    l.stopCDTime()
                }
            } else {
                l.stopCDTime()
            }
        },
        updateAngle: function() {
            if (n) {
                n.graphics.clear();
                o += e;
                o = o > 630 ? 630 : o;
                n.graphics.drawPie(44, 44, 60, o, 630, "#000000");
                if (o >= 630) {
                    l.stopCDTime()
                }
            }
        },
        update: function() {
            var e = Laya.timer.currTimer;
            if (e - t >= 41) {
                t = e;
                this.updateAngle()
            }
        },
        stopCDTime: function() {
            if (s) {
                s.timer.clear(l, l.update);
                n.visible = false;
                s.visible = false;
                s.value = s.allCDTime;
                r && r(i, null)
            }
        }
    };
    return {
        init: function(e, t, i) {
            n = e;
            s = t;
            a = i;
            s.once(Laya.Event.UNDISPLAY, this,
            function() {
                l.stopCDTime()
            })
        },
        show: function(e, t) {
            if (n) {
                i = e;
                r = t;
                s.value = a;
                n.visible = true;
                s.allCDTime = a;
                s.currCDTime = a;
                o = 270;
                n.graphics.drawPie(39, 39, 60, 270, 630, "#000000");
                s.timer.clear(l, l.update);
                s.timer.loop(1, l, l.update)
            }
        },
        stop: function() {
            if (s && n) {
                l.stopCDTime()
            }
        }
    }
} ();
var SkillKuangBaoCD = function() {
    var s, a, r, i, n, o = 270,
    l = .82;
    l = 1.51 / 2;
    var h = null;
    var t = 0;
    var u = {
        playCDTime: function() {
            if (a && a.currCDTime > 1) {
                if (s && s.visible && !s.destroyed) {
                    a.currCDTime -= 1;
                    a.value = a.currCDTime
                } else {
                    u.stopCDTime()
                }
            } else {
                u.stopCDTime()
            }
        },
        stopCDTime: function() {
            if (a && s) {
                a.timer.clear(u, u.update);
                s.visible = false;
                a.visible = false;
                a.value = a.allCDTime;
                n && n.call(i, null);
                h = null;
                n = undefined
            }
        },
        updateAngle: function() {
            if (s) {
                s.graphics.clear();
                o += l;
                o = o > 630 ? 630 : o;
                s.graphics.drawPie(44, 44, 60, o, 630, "#000000");
                if (o >= 630) {
                    u.stopCDTime()
                }
            }
        },
        update: function() {
            var e = Laya.timer.currTimer;
            if (e - t >= 41) {
                t = e;
                this.updateAngle();
                h && h()
            }
        }
    };
    return {
        init: function(e, t, i, n) {
            s = e;
            a = t;
            r = i;
            h = n;
            a.once(Laya.Event.UNDISPLAY, this,
            function() {
                u.stopCDTime()
            })
        },
        show: function(e, t) {
            if (s) {
                i = e;
                n = t;
                a.value = r;
                s.visible = true;
                a.allCDTime = r;
                a.currCDTime = r;
                o = 270;
                l = 1.51 / 2;
                s.graphics.drawPie(0, 0, 60, 270, 630, "#000000");
                SkillSuoDingCD.synKuangBao(r);
                SkillHarmonicsCD.synTime(r);
                a.timer.clear(u, u.update);
                a.timer.loop(1, u, u.update)
            }
        },
        synHarmonics: function(e) {
            if (s) {
                a.value = e;
                s.visible = true;
                o = 270;
                l = 1.51 / (e / 15);
                s.graphics.drawPie(0, 0, 60, 270, 630, "#000000");
                a.currCDTime = e;
                a.timer.clear(u, u.update);
                a.timer.loop(1, u, u.update)
            }
        },
        reset: function() {
            u.stopCDTime();
            o = 270
        }
    }
} ();
var SkillAddSpeedCD = function() {
    var s, a, r, i, n, o = 270,
    l = .82 * 2;
    l = 1.2;
    var t = 0;
    var h = null;
    var u = {
        prevFireReqTimer: 0,
        playCDTime: function() {
            if (a && a.currCDTime > 1) {
                if (s && s.visible && !s.destroyed) {
                    a.currCDTime -= 1;
                    a.value = a.currCDTime
                } else {
                    u.stopCDTime()
                }
            } else {
                u.stopCDTime()
            }
        },
        updateAngle: function() {
            if (s) {
                s.graphics.clear();
                o += l;
                o = o > 630 ? 630 : o;
                s.graphics.drawPie(44, 44, 60, o, 630, "#000000");
                if (o >= 630) {
                    u.stopCDTime()
                }
            }
        },
        update: function() {
            var e = Laya.timer.currTimer;
            if (e - t >= 41) {
                t = e;
                this.updateAngle();
                h && h()
            }
        },
        stopCDTime: function() {
            if (a && s) {
                a.timer.clear(u, u.update);
                s.visible = false;
                a.visible = false;
                a.value = a.allCDTime;
                n && n.call(i, null);
                n = undefined
            }
        }
    };
    return {
        init: function(e, t, i, n) {
            s = e;
            a = t;
            r = i;
            h = n;
            a.once(Laya.Event.UNDISPLAY, this,
            function() {
                u.stopCDTime()
            })
        },
        show: function(e, t) {
            if (s) {
                i = e;
                n = t;
                a.value = r;
                s.visible = true;
                a.allCDTime = r;
                a.currCDTime = r;
                o = 270;
                l = 1.51;
                SkillHarmonicsCD.synTime(r);
                s.graphics.drawPie(39, 39, 60, 270, 630, "#000000");
                a.timer.clear(u, u.update);
                a.timer.loop(1, u, u.update)
            }
        },
        synTime: function(e) {
            if (s) {
                a.value = e;
                s.visible = true;
                o = 270;
                l = 1.51 / (e / 15);
                s.graphics.drawPie(0, 0, 60, 270, 630, "#000000");
                a.currCDTime = e;
                a.timer.clear(u, u.update);
                a.timer.loop(1, u, u.update)
            }
        },
        reset: function() {
            u.prevFireReqTimer = 0;
            u.stopCDTime();
            o = 270
        }
    }
} ();
var SkillHarmonicsCD = function() {
    var s, a, r, i, n, o = 270,
    l = .82 * 2;
    l = 1.2;
    var t = 0;
    var h = null;
    var u = {
        prevFireReqTimer: 0,
        playCDTime: function() {
            if (a && a.currCDTime > 1) {
                if (s && s.visible && !s.destroyed) {
                    a.currCDTime -= 1;
                    a.value = a.currCDTime
                } else {
                    u.stopCDTime()
                }
            } else {
                u.stopCDTime()
            }
        },
        updateAngle: function() {
            if (s) {
                s.graphics.clear();
                o += l;
                o = o > 630 ? 630 : o;
                s.graphics.drawPie(44, 44, 60, o, 630, "#000000");
                if (o >= 630) {
                    u.stopCDTime()
                }
            }
        },
        update: function() {
            var e = Laya.timer.currTimer;
            if (e - t >= 41) {
                t = e;
                this.updateAngle();
                h && h()
            }
        },
        stopCDTime: function() {
            if (a && s) {
                a.timer.clear(u, u.update);
                s.visible = false;
                a.visible = false;
                a.value = a.allCDTime;
                n && n.call(i, null);
                n = undefined
            }
        }
    };
    return {
        init: function(e, t, i, n) {
            s = e;
            a = t;
            r = i;
            h = n;
            a.once(Laya.Event.UNDISPLAY, this,
            function() {
                u.stopCDTime()
            })
        },
        show: function(e, t) {
            if (s) {
                i = e;
                n = t;
                a.value = r;
                s.visible = true;
                a.allCDTime = r;
                a.currCDTime = r;
                o = 270;
                l = 1.51;
                s.graphics.drawPie(39, 39, 60, 270, 630, "#000000");
                SkillKuangBaoCD.synHarmonics(r);
                SkillSuoDingCD.synKuangBao(r);
                SkillAddSpeedCD.synTime(r);
                a.timer.clear(u, u.update);
                a.timer.loop(1, u, u.update)
            }
        },
        synTime: function(e) {
            if (s) {
                a.value = e;
                s.visible = true;
                o = 270;
                l = 1.51 / (e / 15);
                s.graphics.drawPie(0, 0, 60, 270, 630, "#000000");
                a.currCDTime = e;
                a.timer.clear(u, u.update);
                a.timer.loop(1, u, u.update)
            }
        },
        reset: function() {
            u.prevFireReqTimer = 0;
            u.stopCDTime();
            o = 270
        }
    }
} ();
var SkillZhaDan = function() {
    var t = null;
    return {
        init: function(e) {
            t = e
        },
        show: function() {
            if (t && t.displayedInStage) {
                var e = Laya.Pool.getItemByClass("shenShuiZhaDan", shenshuizhadanUI);
                e.ani1.once(Laya.Event.COMPLETE, this,
                function() {
                    e._fromPool_ = true;
                    e.removeSelf();
                    Request.GetUserMoneyReq();
                    Laya.Pool.recover("shenShuiZhaDan", e)
                });
                e.once(Laya.Event.DISPLAY, this,
                function() {
                    e.ani1.play(0, false)
                });
                t.addChild(e)
            } else {
                if (Game.debug) {
                    console.log("炸弹找不到容器")
                }
            }
        }
    }
} ();
var JuBaoPen = function() {
    var a = null;
    var e = JuBaoPenUI.prototype;
    e.init = function(e, t) {
        var i = e + "";
        if (i.length < 4) {
            i = ("0000" + i).substr(i.length)
        } else if (i.length > 4) {
            i = i.substr(i.length - 4)
        }
        if (i.length >= 4) {
            this.fc_num_0.value = i[0];
            this.fc_num_1.value = i[1];
            this.fc_num_2.value = i[2];
            this.fc_num_3.value = i[3];
            this.fc_num_0.visible = false;
            this.fc_num_1.visible = false;
            this.fc_num_2.visible = false;
            this.fc_num_3.visible = false
        }
        this.zOrder = 99;
        this.completedIndex = 0;
        this.lightOpenIndex = 0;
        this.lightOpen2Index = this.lightBox.numChildren / 2;
        this.currTime = 0;
        this.callback = t;
        if (!this._fromPool_) {
            var n = 660;
            this.on(Laya.Event.DISPLAY, this,
            function() {
                this.chuxian.play(0, false);
                Sound.playSound(Sound.RES.jubaopen_continue.url, Sound.RES.jubaopen_continue.vol, true);
                this.timer.frameLoop(1, this, this.update);
                this.timer.once(n, this,
                function() {
                    this.stop(3)
                });
                this.timer.once(n * 2, this,
                function() {
                    this.stop(2)
                });
                this.timer.once(n * 3, this,
                function() {
                    this.stop(1)
                });
                this.timer.once(n * 4, this,
                function() {
                    this.stop(0);
                    Sound.stopSoundByUrl(Sound.RES.jubaopen_continue.url)
                });
                this.timer.once(n * 6, this,
                function() {
                    this.xiaoshi.play(0, false)
                })
            });
            this.xiaoshi.on(Laya.Event.COMPLETE, this,
            function() {
                this.removeSelf()
            });
            this.on(Laya.Event.UNDISPLAY, this,
            function() {
                this.callback && this.callback();
                this.callback = null;
                this.timer.clear(this, this.update);
                Laya.Pool.recover("JuBaoPenUI", this)
            })
        }
        this.cell_1.y = -28;
        this.cell_2.y = -28;
        this.cell_3.y = -28;
        this.cell_4.y = -28;
        this.cell_1.visible = true;
        this.cell_2.visible = true;
        this.cell_3.visible = true;
        this.cell_4.visible = true;
        this.increment = [26, 25, 23, 20];
        this.font_img_list = [this.cell_1, this.cell_2, this.cell_3, this.cell_4]
    };
    e.light = function(e) {
        var t = 4;
        var i = [1, 1.2, 1.3, 1.4];
        if (e) {
            if (this.lightOpenIndex >= this.lightBox.numChildren) {
                this.lightOpenIndex = 0
            }
            for (var n = 0; n < t; n++) {
                var s = this.lightOpenIndex + n;
                var a = this.lightBox.getChildAt(s);
                if (a) {
                    a.scale(i[n], i[n])
                }
            }
            this.lightOpenIndex++
        } else {
            if (this.lightOpen2Index >= this.lightBox.numChildren) {
                this.lightOpen2Index = 0
            }
            for (var n = 0; n < t; n++) {
                var s = this.lightOpen2Index + n;
                var a = this.lightBox.getChildAt(s);
                if (a) {
                    a.scale(i[n], i[n])
                }
            }
            this.lightOpen2Index++
        }
    };
    e.update = function() {
        for (var e = 0; e < this.font_img_list.length; e++) {
            var t = this.font_img_list[e];
            if (t && t.visible) {
                t.y -= this.increment[e];
                if (t.y <= -605) {
                    t.y = 5
                }
            }
        }
        if (this.timer.currTimer - this.currTime > 40) {
            this.currTime = this.timer.currTimer;
            this.light(true);
            this.light(false)
        }
    };
    e.completed = function() {
        console.log("completed")
    };
    e.stop = function(e) {
        var t = this["fc_num_" + e];
        if (this["cell_" + (e + 1)]) {
            this["cell_" + (e + 1)].visible = false
        }
        if (t) {
            t.visible = true;
            var i = Laya.TimeLine.to(t, {
                scaleX: 6,
                scaleY: 6
            },
            100).to(t, {
                scaleX: 1,
                scaleY: 1
            },
            80);
            i.on(Laya.Event.COMPLETE, this,
            function() {
                this.completedIndex += 1;
                if (this.completedIndex == 4) {
                    this.completed()
                }
            });
            Sound.playSound(Sound.RES.jubaopen_stop.url, Sound.RES.jubaopen_stop.vol, false);
            i.play(0, false)
        }
    };
    var t = {
        init: function(e) {
            a = e
        },
        show: function(e, t, i, n) {
            var s = Laya.Pool.getItemByClass("JuBaoPenUI", JuBaoPenUI);
            s.init(e, n);
            s.scale(i, i);
            s.pos(t.x, t.y);
            if (a) {
                a.addChild(s)
            } else {
                Laya.stage.addChild(s)
            }
        },
        fishComing: function(e) {
            var t = Laya.Pool.getItemByClass("JuBaoPenChuXian", Laya.Animation);
            t.source = "UIRoot/FX/JuBaoPenChuXian1.ani";
            if (e) {
                t.pos(0 - Laya.stage.width, Laya.stage.height / 2 - 20)
            } else {
                t.pos(Laya.stage.width / 2, Laya.stage.height / 2 - 20)
            }
            t.once(Laya.Event.DISPLAY, this,
            function() {
                if (!e) {
                    Sound.playSound(Sound.RES.jubaopen_apear.url, Sound.RES.jubaopen_apear.vol)
                }
                t.play(0, false, "jiangli")
            });
            t.once(Laya.Event.COMPLETE, this,
            function() {
                t.removeSelf();
                Laya.Pool.recover("JuBaoPenChuXian", t)
            });
            Game.UIRoot.addChild(t)
        }
    };
    return t
} ();
var StrikeMultiple = function() {
    var a = null;
    var e = StrikeMultipleUI.prototype;
    e.init = function(e, t, i) {
        this.callback = null;
        this.zOrder = 99;
        this.callback = i;
        this.isCurrPlayer = t == 1 ? true: false;
        this.value = e;
        this.scale(t, t);
        if (this.isCurrPlayer) {
            this.wenZiBox.y = Game.UIHeight + 20;
            this.wenZiBox.scale(.7, .7);
            this.bg.visible = true;
            this.bg.scale(Game.ViewScaleValue, Game.ViewScaleValue)
        } else {
            this.bg.visible = false;
            this.wenZiBox.y = 344;
            this.wenZiBox.scale(1, 1);
            this.bg.scale(1, 1)
        }
        if (!this._fromPool_) {
            if (this.ani1) {
                this.ani1.on(Laya.Event.COMPLETE, this,
                function() {
                    this.removeSelf();
                    this.callback && this.callback()
                })
            }
            if (this.XuanHuan) {
                this.XuanHuan.on(Laya.Event.COMPLETE, this,
                function() {
                    this.removeSelf();
                    this.callback && this.callback()
                })
            }
            this.on(Laya.Event.DISPLAY, this,
            function() {
                this.start()
            });
            this.on(Laya.Event.UNDISPLAY, this,
            function() {
                this._fromPool_ = true;
                this.timer.clear(this, this.update);
                Laya.Pool.recover("StrikeMultiple", this)
            })
        }
    };
    e.update = function(e) {
        if (!e) {
            e = Math.ceil(Utils.getRandom(2, 98))
        }
        if (e * 1 < 10) {
            this.chengImg.x = 42
        } else {
            this.chengImg.x = 22
        }
        this.fc_Multiple.value = e
    };
    e.start = function() {
        if (this.isCurrPlayer) {
            this.ani1.play(0, false);
            this.timer.frameLoop(5, this, this.update);
            Sound.playSound(Sound.RES.jubaopen_continue.url, Sound.RES.jubaopen_continue.vol, true);
            Laya.Tween.to(this.wenZiBox, {
                y: 344,
                scaleX: 1,
                scaleY: 1
            },
            2100);
            this.timer.once(1900, this,
            function() {
                Sound.stopSoundByUrl(Sound.RES.jubaopen_continue.url);
                this.timer.clear(this, this.update);
                Sound.playSound(Sound.RES.jubaopen_stop.url, Sound.RES.jubaopen_stop.vol, false);
                this.update(this.value, true);
                var e = Laya.TimeLine.to(this.fcBox, {
                    scaleX: 2.5,
                    scaleY: 2.5
                },
                150).to(this.fcBox, {
                    scaleX: 1,
                    scaleY: 1
                },
                100);
                e.play(0, false)
            })
        } else {
            this.XuanHuan.play(0, false);
            this.timer.frameLoop(5, this, this.update);
            this.timer.once(1900, this,
            function() {
                this.timer.clear(this, this.update);
                this.update(this.value, true);
                var e = Laya.TimeLine.to(this.fcBox, {
                    scaleX: 2.5,
                    scaleY: 2.5
                },
                150).to(this.fcBox, {
                    scaleX: 1,
                    scaleY: 1
                },
                100);
                e.play(0, false)
            })
        }
    };
    var t = {
        init: function(e) {
            a = e
        },
        show: function(e, t, i, n) {
            var s = Laya.Pool.getItemByClass("StrikeMultiple", StrikeMultipleUI);
            s.init(e, i, n);
            s.pos(t.x, t.y);
            if (a) {
                a.addChild(s)
            } else {
                Game.UIRoot.addChild(s)
            }
        },
        addCache: function() {
            var e = Laya.Pool.getPoolBySign("StrikeMultiple");
            if (e && e.length < 2) {
                var t = new StrikeMultipleUI;
                t.init(100, .2);
                t.pos(0 - Game.UIWidth, 0);
                Game.UIRoot.addChild(t);
                Laya.Pool.recover("StrikeMultiple", t)
            }
        }
    };
    return t
} ();
var BaoFuLa = function() {
    var a = null;
    var e = BaofuLaUI.prototype;
    e.show = function(e, t, i, n) {
        this.pos(t.x, t.y);
        this.scale(i, i);
        this.fc_gold.value = e;
        this.callback = n;
        if (!this._fromPool_) {
            this.size(Game.UIWidth, Game.UIHeight);
            this.pivot(Game.UIWidth / 2, Game.UIHeight / 2);
            this.ani1.on(Laya.Event.COMPLETE, this,
            function() {
                this.callback && this.callback();
                this.callback = null;
                this._fromPool_ = true;
                this.removeSelf();
                Request.GetUserMoneyReq();
                Laya.Pool.recover("BaofuLaUI", this)
            });
            this.on(Laya.Event.DISPLAY, this,
            function() {
                this.ani1.play(0, false);
                Sound.playSound(Sound.RES.notice_effect2.url, Sound.RES.notice_effect2.vol, false)
            })
        }
    };
    var t = {
        init: function(e) {
            a = e
        },
        show: function(e, t, i, n) {
            var s = Laya.Pool.getItemByClass("BaofuLaUI", BaofuLaUI);
            s.show(e, t, i, n);
            if (a) {
                a.addChild(s)
            } else {
                Game.UIRoot.addChild(s)
            }
        },
        addCache: function() {
            var e = Laya.Pool.getPoolBySign("BaofuLaUI");
            if (e && e.length < 2) {
                var t = new BaofuLaUI;
                t.show(100, {
                    x: 0 - Game.UIWidth,
                    y: 0
                },
                .2);
                Game.UIRoot.addChild(t);
                t.removeSelf();
                Laya.Pool.recover("BaofuLaUI", t)
            }
        }
    };
    return t
} ();
var BigWin = function() {
    var a = null;
    var e = BigWinUI.prototype;
    e.init = function(e, t, i, n) {
        this.size(Game.UIWidth, Game.UIHeight);
        this.pivot(Game.UIWidth / 2, Game.UIHeight / 2);
        this.scale(i, i);
        this.pos(t.x, t.y);
        this.maxRandom = e;
        if (this.bg) {
            this.bg.visible = i == 1 ? true: false
        }
        if (!this._fromPool_) {
            if (this.ani1) {
                this.ani1.on(Laya.Event.COMPLETE, this,
                function() {
                    this.removeSelf();
                    n && n()
                })
            }
            this.on(Laya.Event.DISPLAY, this,
            function() {
                if (this.ani1 && this.ani1.play) {
                    this.ani1.play(0, false)
                }
                this.timer.frameLoop(3, this, this.update);
                this.timer.frameOnce(45, this,
                function() {
                    this.timer.clear(this, this.update);
                    this.update(this.maxRandom)
                })
            });
            this.on(Laya.Event.UNDISPLAY, this,
            function() {
                this._fromPool_ = true;
                this.timer.clear(this, this.update);
                Laya.Pool.recover("BigWinUI", this)
            })
        }
    };
    e.update = function(e) {
        if (!e) {
            e = Math.ceil(Utils.getRandom(1, this.maxRandom))
        }
        this.fc_Multiple.value = e
    };
    var t = {
        init: function(e) {
            a = e
        },
        show: function(e, t, i, n) {
            var s = Laya.Pool.getItemByClass("BigWinUI", BigWinUI);
            s.init(e, t, i, n);
            if (a) {
                a.addChild(s)
            } else {
                Game.UIRoot.addChild(s)
            }
        },
        addCache: function() {
            var e = Laya.Pool.getPoolBySign("BigWinUI");
            if (e && e.length < 2) {
                var t = new BigWinUI;
                t.init(1e3, {
                    x: 0 - Game.UIWidth,
                    y: 0
                },
                .2);
                Game.UIRoot.addChild(t);
                t.removeSelf();
                Laya.Pool.recover("BigWinUI", t)
            }
        }
    };
    return t
} ();
var DaoDanBaoJi = function() {
    var s = null;
    var e = daodanbaojiUI.prototype;
    e.show = function(e, t, i) {
        this.fc_num.value = e;
        this.fc_num_2.value = e;
        this.callback = null;
        this.callback = i;
        this.scale(1, 1);
        this.value = e;
        var n = this.value > 9 ? 40 : 0;
        this.pos(Game.UIWidth / 2 - n, Game.UIHeight / 2);
        if (!this._fromPool_) {
            this.size(Game.UIWidth, Game.UIHeight);
            this.pivot(Game.UIWidth / 2, Game.UIHeight / 2);
            this.ani1.on(Laya.Event.COMPLETE, this,
            function() {
                this.timer.once(600, this,
                function() {
                    if (this.displayedInStage) {
                        this.toTarget(t)
                    }
                })
            });
            this.on(Laya.Event.DISPLAY, this,
            function() {
                this.ani1.play(0, false)
            });
            this.on(Laya.Event.UNDISPLAY, this,
            function() {
                Laya.Pool.recover("daodanbaojiUI", this)
            })
        }
    };
    e.hide = function() {
        if (this.displayedInStage) {
            var e = Laya.TimeLine.to(this, {
                scaleX: .65,
                scaleY: .65
            },
            200).to(this, {
                scaleX: 0,
                scaleY: 0
            },
            100);
            e.play(0, false);
            this.timer.once(300, this,
            function() {
                this.callback && this.callback();
                this.removeSelf()
            })
        }
    };
    e.toTarget = function(e) {
        var t = this.value > 9 ? 10 : 0;
        Laya.Tween.to(this, {
            x: e.x - t,
            y: e.y,
            scaleX: .4,
            scaleY: .4
        },
        600, null, Laya.Handler.create(this,
        function() {
            this.timer.once(600, this,
            function() {
                this.hide()
            })
        }))
    };
    var t = {
        init: function(e) {
            s = e
        },
        show: function(e, t, i) {
            var n = Laya.Pool.getItemByClass("daodanbaojiUI", daodanbaojiUI);
            n.show(e, t, i);
            if (s) {
                s.addChild(n)
            } else {
                Laya.stage.addChild(n)
            }
        }
    };
    return t
} ();
var JiangQuanTips = function() {
    var n = "TipsFn";
    function s() {
        s.super(this);
        this.initBase(n)
    }
    Laya.class(s, n, JiangQuanTipsUI, "");
    var e = s.prototype;
    var r = [];
    e.init = function() {
        this.initEvent();
        this.getData()
    };
    e.getData = function() {
        r = [];
        var e = GameConfig.exchange.getLotteryCfg();
        if (e && e.length > 0) {
            for (var t = 0,
            i = e.length; t < i; t++) {
                var n = e[t];
                if (n.NeedCondition === 0) {
                    r.push(n)
                }
            }
            r.sort(function(e, t) {
                return e.Money2Num - t.Money2Num
            })
        }
    };
    e.show = function(e) {
        var t = Player.getJiangJuan(),
        i = undefined;
        for (var n = 0,
        s = r.length; n < s; n++) {
            var a = r[n];
            if (t <= a.Money2Num) {
                i = n;
                break
            }
        }
        if (i || i === 0) {
            this.hua_fei.text = r[i].GoodsName;
            this.left_quan.text = r[i].Money2Num - t
        } else {
            this.hua_fei.text = r[r.length - 1].GoodsName;
            this.left_quan.text = 0
        }
        this.visible = true;
        this.timer.clear(this, this.hideTimerFun);
        this.timer.once(6e3, this, this.hideTimerFun)
    };
    e.hideTimerFun = function() {
        this.hide(true)
    };
    e.hide = function(e) {
        if (e) {
            this.visible = false;
            this.removeSelf()
        } else if (this.visible) {
            this.visible = false
        }
    };
    e.reset = function() {
        this.removeSelf()
    };
    return {
        show: function(e, t, i) {
            if (!WinUtils.getSaveUI(n)) {
                new s;
                WinUtils.getSaveUI(n).pos(t, i - 120)
            }
            Game.TipRoot.addChild(WinUtils.getSaveUI(n));
            WinUtils.getSaveUI(n).show()
        },
        hide: function(e) {
            if (WinUtils.getSaveUI(n)) {
                WinUtils.getSaveUI(n).hide(e)
            }
        }
    }
} ();
var MatchTask = function() {
    var i = null;
    var n = null;
    var e = MatchTaskUI.prototype;
    e.show = function(e) {
        this.y = -160;
        this.startTime = 0;
        this.maxTimeNum = 180;
        this.leftTime = this.maxTimeNum;
        this.imgTaskComplete.visible = false;
        this.imgTaskFail.visible = false;
        this.initViewData(e);
        this.once(Laya.Event.DISPLAY, this,
        function() {
            Laya.Tween.to(this, {
                y: 0
            },
            300, null, Laya.Handler.create(this,
            function() {
                if (this.displayedInStage) {
                    this.startTime = (new Date).getTime();
                    this.update()
                }
            }))
        });
        this.once(Laya.Event.UNDISPLAY, this,
        function() {
            if (i) {
                i.visible = false
            }
            this.timer.clearAll(this)
        });
        if (n) {
            n.visible = false
        }
        if (i) {
            i.visible = true;
            this.showStartAni()
        }
        this.isClearRes = false
    };
    e.showStartAni = function() {
        Sound.playSound(Sound.RES.pirate_go.url, Sound.RES.pirate_go.vol);
        var e = Laya.Pool.getItemByClass("Ani_tiaozhan3", Laya.Animation);
        e.source = "UIRoot/FX/tiaozhan3.ani";
        e.pos(Game.UIWidth / 2, Game.UIHeight / 2);
        e.once(Laya.Event.COMPLETE, this,
        function() {
            e.removeSelf();
            Laya.Pool.recover("Ani_tiaozhan3", e);
            i.addChild(this)
        });
        e.once(Laya.Event.DISPLAY, this,
        function() {
            e.play(0, false, "Jifenjiangli")
        });
        i.addChild(e)
    };
    e.initViewData = function(e) {
        var t = e.TaskId;
        var i = GameConfig.getSuperMatchTaskById(t);
        if (!i) {
            return
        }
        this.fc_Score.value = "x" + i.PrizeScore;
        if (i.TaskCondition) {
            var n = i.TaskCondition.split("|");
            this.mapData = {};
            if (n && n.length) {
                for (var s = 0; s < n.length; s++) {
                    var a = n[s];
                    var r = a.split(":");
                    if (r && r.length && r.length >= 2) {
                        this["fc_task_" + s].value = "0/" + r[1];
                        this["fish_" + s].skin = "resource/pokedex/" + r[0] + ".png";
                        this.mapData[r[0]] = {
                            maxNum: r[1],
                            fc: this["fc_task_" + s]
                        }
                    }
                }
            }
        }
    };
    e.updateViewData = function(e, t) {
        var i = this.mapData[e];
        if (i) {
            if (t <= i.maxNum && i.fc) {
                i.fc.value = t + "/" + i.maxNum
            }
        }
    };
    e.update = function() {
        this.leftTime -= 1;
        if (this.leftTime > 0) {
            var e = Utils.secondToCountDownTime(this.leftTime);
            this.fc_time.value = e;
            this.timer.once(1e3, this, this.update)
        } else {
            this.leftTime = this.maxTimeNum;
            s.taskResult({
                State: 2
            })
        }
    };
    e.updateLeftTime = function() {
        var e = (new Date).getTime();
        if (this.startTime > 0 && e > this.startTime) {
            var t = e - this.startTime;
            var i = Math.floor(t / 1e3);
            this.leftTime = this.maxTimeNum - i
        } else {
            this.leftTime = this.maxTimeNum
        }
    };
    e.showResultAni = function(e) {
        if (i) {
            var t = Laya.Pool.getItemByClass("Ani_tiaozhan3", Laya.Animation);
            t.source = "UIRoot/FX/tiaozhan3.ani";
            t.pos(Game.UIWidth / 2, Game.UIHeight / 2);
            t.once(Laya.Event.COMPLETE, this,
            function() {
                t.removeSelf();
                Laya.Pool.recover("Ani_tiaozhan3", t)
            });
            t.once(Laya.Event.DISPLAY, this,
            function() {
                t.play(0, false, e ? "Taibangle": "Henyihan")
            });
            i.addChild(t)
        }
    };
    e.complete = function(e) {
        this.imgTaskComplete.scale(3, 3);
        this.imgTaskComplete.visible = true;
        var t = Laya.TimeLine.to(this.imgTaskComplete, {
            scaleX: 1,
            scaleY: 1
        },
        200);
        t.once(Laya.Event.COMPLETE, this,
        function() {
            e && e()
        });
        t.play(0, false);
        this.showResultAni(true)
    };
    e.fail = function(e) {
        this.imgTaskFail.visible = true;
        this.showResultAni(false);
        e && e()
    };
    e.hide = function() {
        Laya.Tween.to(this, {
            y: -160
        },
        300, null, Laya.Handler.create(this,
        function() {
            if (this.displayedInStage) {
                this.removeSelf();
                if (n) {
                    n.visible = true
                }
            }
        }))
    };
    var t = null;
    var s = {
        init: function(e, t) {
            i = e;
            n = t
        },
        show: function(e) {
            Resource.load(RES.loadTaskList.pokedex,
            function() {
                if (!t) {
                    t = new MatchTaskUI
                }
                t.show(e)
            })
        },
        updateNum: function(e) {
            if (t && e) {
                t.updateViewData(e.FishId, e.KillNum)
            }
        },
        updateCountDownTime: function() {
            t && t.updateLeftTime()
        },
        taskResult: function(e) {
            if (t) {
                if (e && e.State == 1) {
                    t.complete()
                } else if (e && e.State == 2) {
                    t.fail()
                }
                t.timer.once(3e3, t, t.hide)
            }
        }
    };
    return s
} ();
var NewPlayerTask = function() {
    var t = null;
    var i = 0;
    var e = NewPlayerTaskUI.prototype;
    e.show = function(e) {
        if (this.displayedInStage) {
            this.imgTaskComplete.visible = false;
            this.initViewData(e);
            return
        }
        this.PrizeId = 0;
        this.PrizeNum = 0;
        this.taskMaxNum = 0;
        this.y = -130;
        this.imgTaskComplete.visible = false;
        this.imgTaskFail.visible = false;
        this.initViewData(e);
        this.initEvent();
        this.once(Laya.Event.DISPLAY, this,
        function() {
            Laya.Tween.to(this, {
                y: 0
            },
            300)
        });
        if (t) {
            t.visible = true;
            Sound.playSound(Sound.RES.pirate_go.url, Sound.RES.pirate_go.vol);
            t.addChild(this)
        }
        this.on(Laya.Event.UNDISPLAY, this,
        function() {
            this.reset()
        })
    };
    e.initViewData = function(e) {
        this.completeState = false;
        var t = e.Datas,
        i = 0;
        if (t && t.length > 0) {
            var n = t[0];
            i = n.Num
        }
        var s = GameConfig.getNewNewTask(e.TaskId);
        if (s) {
            var a = s.Prize.split(":");
            if (a.length >= 1) {
                this.PrizeId = a[0];
                var r = GameConfig.Item.getItemInfoById(a[0]);
                if (r) {
                    this.icon.skin = r.skin
                }
                this.PrizeNum = a[1];
                this.fc_num.value = "x" + a[1]
            }
            this.labelDesc.text = s.Desc;
            var o = s.Condition.split(":");
            if (o.length >= 1) {
                this.fc_task.value = i + "/" + o[1];
                this.taskMaxNum = o[1] * 1
            }
        }
    };
    e.updateViewData = function(e) {
        if (e <= this.taskMaxNum && this.taskMaxNum) {
            this.fc_task.value = e + "/" + this.taskMaxNum
        }
        if (e >= this.taskMaxNum && !this.completeState) {
            this.completeState = true;
            this.complete()
        }
    };
    e.complete = function(e) {
        this.imgTaskComplete.scale(3, 3);
        this.imgTaskComplete.visible = true;
        var t = Laya.TimeLine.to(this.imgTaskComplete, {
            scaleX: 1,
            scaleY: 1
        },
        200);
        t.once(Laya.Event.COMPLETE, this,
        function() {
            e && e()
        });
        t.play(0, false);
        GetReward.show("任务奖励", [{
            ItemId: this.PrizeId,
            ItemNum: this.PrizeNum
        }])
    };
    e.fail = function(e) {
        this.imgTaskFail.visible = true;
        e && e()
    };
    e.hide = function() {
        Laya.Tween.to(this, {
            y: -130
        },
        300, null, Laya.Handler.create(this,
        function() {
            if (this.displayedInStage) {
                this.removeSelf()
            }
        }))
    };
    e.reset = function() {
        n = null;
        s = []
    };
    e.afterRewardCall = function(e) {};
    var n = null;
    var s = [];
    var a = {
        init: function(e) {
            t = e;
            s = []
        },
        show: function(e) {
            if (WorldBoss.getBossState()) {
                return
            }
            s.push(e);
            if (!n) {
                n = new NewPlayerTaskUI
            }
            if (n.displayedInStage && n.visible) {} else {
                var t = s.shift();
                n.show(t)
            }
            if (e && e.TaskId) {
                i = e.TaskId
            }
        },
        updateNum: function(e) {
            if (n && e) {
                if (e.Datas && e.Datas.length > 0 && !n.completeState) {
                    var t = e.Datas[0];
                    n.updateViewData(t.Num)
                }
            }
        },
        taskResult: function(e) {
            if (n) {
                n.timer.once(3e3, n,
                function() {
                    if (s.length) {
                        var e = s.shift();
                        n.show(e)
                    } else {
                        n.hide()
                    }
                })
            }
        },
        hide: function() {
            if (n) {
                n.hide()
            }
        },
        getTaskId: function() {
            return i
        }
    };
    return a
} ();
var ChangeShow = function() {
    var e = {
        fishComing: function(e, t) {
            var i = Laya.Pool.getItemByClass("ChangeChuXian", Laya.Animation);
            i.source = "UIRoot/FX/Changechuxian.ani";
            if (e) {
                i.pos(0 - Laya.stage.width, Laya.stage.height / 2 - 20)
            } else {
                i.pos(Laya.stage.width / 2, Laya.stage.height / 2 - 20)
            }
            i.once(Laya.Event.DISPLAY, this,
            function() {
                if (!e) {
                    Sound.playSound(Sound.RES.jubaopen_apear.url, Sound.RES.jubaopen_apear.vol)
                }
                i.play(0, false)
            });
            i.once(Laya.Event.COMPLETE, this,
            function() {
                i.removeSelf();
                Laya.Pool.recover("ChangeChuXian", i);
                if (t) {
                    t()
                }
            });
            Game.UIRoot.addChild(i)
        }
    };
    return e
} ();
var ZhuanPan = function() {
    var a = {
        202 : "zhanpanzi_gangkui.png",
        203 : "zhanpanzi_shuimu.png",
        204 : "zhanpanzi_bianyu.png",
        205 : "zhanpanzi_bianfu.png",
        206 : "zhanpanzi_lansha.png",
        300 : "zhanpanzi_yinchuisha.png",
        301 : "zhanpanzi_jinkui.png",
        302 : "zhanpanzi_jinchan.png",
        304 : "zhanpanzi_jingui.png",
        305 : "zhanpanzi_jinmu.png",
        306 : "zhanpanzi_jinlongyu.png",
        307 : "zhanpanzi_jinchuisha.png",
        320 : "zhanpanzi_jinsha.png",
        321 : "zhanpanzi_jubaopen.png",
        322 : "zhanpanzi_jinlong.png",
        408 : "zhanpanzi_haishen.png",
        410 : "zhanpanzi_quanzhadan.png",
        411 : "zhuanpanzi_jinzhu.png",
        490 : "zi_zp_longxiawang.png",
        493 : "zi_zp_sancaixiongmao.png",
        500 : "zi_zhangyu.png",
        501 : "zi_baogui.png",
        502 : "zi_huolong.png",
        503 : "zi_meirenyu.png",
        505 : "zhuanpanzi_xiaoyao.png",
        506 : "zhuanpanzi_jiangjun.png",
        507 : "zhuanpanzi_nvwang.png",
        508 : "zhuanpanzi_molong.png",
        602 : "zhanpanzi_huangjinjukun.png"
    };
    function e(e) {
        this.pivot(Game.UIWidth / 2, Game.UIHeight / 2);
        if (!this._fromPool) {
            this.ani1.on(Laya.Event.COMPLETE, this,
            function() {
                this._fromPool = true;
                this.removeSelf();
                Laya.Pool.recover(e, this)
            });
            this.on(Laya.Event.DISPLAY, this,
            function() {
                this.ani1.play(0, false);
                if (this._fromPool) {
                    if (e == "zhuanPanMin") {
                        Sound.playSound(Sound.RES.smallZhuanpan.url, Sound.RES.smallZhuanpan.vol)
                    } else {
                        Sound.playSound(Sound.RES.bigZhuanpan.url, Sound.RES.bigZhuanpan.vol)
                    }
                }
            })
        }
    }
    function t(e, t, i) {
        if (a[e] && this.fishName) {
            this.fishName.graphics.clear();
            this.fishName.loadImage("resource/fishScene/" + a[e])
        } else {
            console.log("zhuanPan  缺少文字fishType:" + e)
        }
        if (i) {
            var n = 0,
            s = 0;
            if (i.length > 1) {
                i.sort(function(e, t) {
                    if (e.ItemId > t.ItemId) {
                        return - 1
                    } else if (e.ItemId < t.ItemId) {
                        return 1
                    } else if (e.ItemId == t.ItemId) {
                        return 0
                    }
                });
                n = i[0].ItemId;
                s = i[0].ItemNum
            } else if (i.length == 1) {
                n = i[0].ItemId;
                s = i[0].ItemNum
            }
            if (n && s && (n >= Game.item.QinTongDaoDan && n <= Game.item.BaiJinDaoDan)) {
                this.dantou.skin = "resource/fishScene/" + n + ".png";
                this.dantou.visible = true;
                this.fc_gold.visible = false
            } else {
                this.fc_gold.value = t;
                this.dantou.visible = false;
                this.fc_gold.visible = true
            }
        } else {
            this.fc_gold.value = t;
            this.dantou.visible = false;
            this.fc_gold.visible = true
        }
    }
    function i(e) {
        this.pos(e.x, e.y);
        if (s) {
            s.addChild(this)
        } else {
            Game.UIRoot.addChild(this)
        }
    }
    var r = {
        zhuanPanMax: zhuanpan2UI,
        zhuanPanMin: zhuanpan1UI,
        ZhongQiu: zhuanpan3UI,
        Halloween: zhuanpanWanshengUI,
        Saibotan: zhuanpanSaibotanUI,
        DoubleOne: zhuanpanshuang11UI,
        Christmas: zhuanpanshengdanUI,
        bxqy: zhuanpanBingxueqiyuanUI,
        csjd: zhuanpanCaishenjiadaoUI,
        jzsf: zhuanpanJinzhusongfuUI,
        bfwz: zhuanpanbingfengwangzuoUI,
        mxls: zhuanpanmixinlieshouUI,
        fyjh: zhuanpanlongUI,
        xinNian: zhuanpanXinnianUI,
        guoqing: zhuanpanguoqingUI,
        milu: zhuanpanMilujinglingUI
    };
    var o = {
        init: e,
        updateUI: t,
        show: i
    };
    var n = {
        0 : false,
        1 : "ZhongQiu",
        2 : "Halloween",
        3 : "Christmas",
        4 : "Saibotan",
        5 : "DoubleOne",
        6 : "xinNian",
        7 : "csjd",
        8 : "bxqy",
        9 : "jzsf",
        10 : "mxls",
        11 : "bfwz",
        12 : "fyjh",
        13 : "guoqing",
        14 : "milu"
    };
    var s = null;
    return {
        TurntableID: n,
        fishNameMap: a,
        init: function(e) {
            s = e;
            Laya.stage.once(Laya.Event.def_LeaveFishScene, this,
            function() {
                for (var e in r) {
                    Laya.Pool.clearBySign(e)
                }
            })
        },
        show: function(e, t, i, n, s) {
            if (r[s]) {
                var a = Laya.Pool.getItemByClass(s, r[s]);
                a.init(s);
                a.updateUI(t, i, n);
                a.show(e)
            }
        },
        addCache: function() {
            for (var e in r) {
                var i = r[e];
                for (var t in o) {
                    i.prototype[t] = o[t]
                }
            }
            var n = 200,
            s = 0;
            for (var e in r) {
                var i = r[e];
                for (var a = 0; a < 4; a++) { (function(e) {
                        var t = new i;
                        Laya.Pool.recover(e, t)
                    })(e)
                }
            }
        }
    }
} ();
var ChangEEft = function() {
    var a = null;
    var e = ChangEUI.prototype;
    e.init = function(e, t) {
        var i = e + "";
        if (i.length < 4) {
            i = ("0000" + i).substr(i.length)
        } else if (i.length > 4) {
            i = i.substr(i.length - 4)
        }
        if (i.length >= 4) {
            this.fc_num_0.value = i[0];
            this.fc_num_1.value = i[1];
            this.fc_num_2.value = i[2];
            this.fc_num_3.value = i[3];
            this.fc_num_0.visible = false;
            this.fc_num_1.visible = false;
            this.fc_num_2.visible = false;
            this.fc_num_3.visible = false
        }
        this.zOrder = 99;
        this.completedIndex = 0;
        this.lightOpenIndex = 0;
        this.lightOpen2Index = this.lightBox.numChildren / 2;
        this.currTime = 0;
        this.callback = t;
        if (!this._fromPool_) {
            var n = 660;
            this.on(Laya.Event.DISPLAY, this,
            function() {
                this.chuxian.play(0, false);
                Sound.playSound(Sound.RES.jubaopen_continue.url, Sound.RES.jubaopen_continue.vol, true);
                this.timer.frameLoop(1, this, this.update);
                this.timer.once(n, this,
                function() {
                    this.stop(3)
                });
                this.timer.once(n * 2, this,
                function() {
                    this.stop(2)
                });
                this.timer.once(n * 3, this,
                function() {
                    this.stop(1)
                });
                this.timer.once(n * 4, this,
                function() {
                    this.stop(0);
                    Sound.stopSoundByUrl(Sound.RES.jubaopen_continue.url)
                });
                this.timer.once(n * 6, this,
                function() {
                    this.xiaoshi.play(0, false)
                })
            });
            this.xiaoshi.on(Laya.Event.COMPLETE, this,
            function() {
                this.removeSelf()
            });
            this.on(Laya.Event.UNDISPLAY, this,
            function() {
                this.callback && this.callback();
                this.callback = null;
                this.timer.clear(this, this.update);
                Laya.Pool.recover("ChangEUI", this)
            })
        }
        this.cell_1.y = -28;
        this.cell_2.y = -28;
        this.cell_3.y = -28;
        this.cell_4.y = -28;
        this.cell_1.visible = true;
        this.cell_2.visible = true;
        this.cell_3.visible = true;
        this.cell_4.visible = true;
        this.increment = [26, 25, 23, 20];
        this.font_img_list = [this.cell_1, this.cell_2, this.cell_3, this.cell_4]
    };
    e.light = function(e) {
        var t = 4;
        var i = [1, 1.2, 1.3, 1.4];
        if (e) {
            if (this.lightOpenIndex >= this.lightBox.numChildren) {
                this.lightOpenIndex = 0
            }
            for (var n = 0; n < t; n++) {
                var s = this.lightOpenIndex + n;
                var a = this.lightBox.getChildAt(s);
                if (a) {
                    a.scale(i[n], i[n])
                }
            }
            this.lightOpenIndex++
        } else {
            if (this.lightOpen2Index >= this.lightBox.numChildren) {
                this.lightOpen2Index = 0
            }
            for (var n = 0; n < t; n++) {
                var s = this.lightOpen2Index + n;
                var a = this.lightBox.getChildAt(s);
                if (a) {
                    a.scale(i[n], i[n])
                }
            }
            this.lightOpen2Index++
        }
    };
    e.update = function() {
        for (var e = 0; e < this.font_img_list.length; e++) {
            var t = this.font_img_list[e];
            if (t && t.visible) {
                t.y -= this.increment[e];
                if (t.y <= -605) {
                    t.y = 5
                }
            }
        }
        if (this.timer.currTimer - this.currTime > 40) {
            this.currTime = this.timer.currTimer;
            this.light(true);
            this.light(false)
        }
    };
    e.completed = function() {};
    e.stop = function(e) {
        var t = this["fc_num_" + e];
        if (this["cell_" + (e + 1)]) {
            this["cell_" + (e + 1)].visible = false
        }
        if (t) {
            t.visible = true;
            var i = Laya.TimeLine.to(t, {
                scaleX: 6,
                scaleY: 6
            },
            100).to(t, {
                scaleX: 1,
                scaleY: 1
            },
            80);
            i.on(Laya.Event.COMPLETE, this,
            function() {
                this.completedIndex += 1;
                if (this.completedIndex == 4) {
                    this.completed()
                }
            });
            Sound.playSound(Sound.RES.jubaopen_stop.url, Sound.RES.jubaopen_stop.vol, false);
            i.play(0, false)
        }
    };
    var t = {
        init: function(e) {
            a = e
        },
        show: function(e, t, i, n) {
            var s = Laya.Pool.getItemByClass("ChangEUI", ChangEUI);
            s.init(e, n);
            s.scale(i, i);
            s.pos(t.x, t.y);
            if (a) {
                a.addChild(s)
            } else {
                Laya.stage.addChild(s)
            }
        },
        fishComing: function(e) {
            var t = Laya.Pool.getItemByClass("ChangEChuXian", Laya.Animation);
            t.source = "UIRoot/FX/Changechuxian.ani";
            if (e) {
                t.pos(0 - Laya.stage.width, Laya.stage.height / 2 - 20)
            } else {
                t.pos(Laya.stage.width / 2, Laya.stage.height / 2 - 20)
            }
            t.once(Laya.Event.DISPLAY, this,
            function() {
                if (!e) {
                    Sound.playSound(Sound.RES.jubaopen_apear.url, Sound.RES.jubaopen_apear.vol)
                }
                t.play(0, false)
            });
            t.once(Laya.Event.COMPLETE, this,
            function() {
                t.removeSelf();
                Laya.Pool.recover("ChangEChuXian", t)
            });
            Game.UIRoot.addChild(t)
        }
    };
    return t
} ();
window.RecorderMgr = function() {
    var t = null;
    var i = function(e) {
        if (tt) {
            tt.shareAppMessage({
                channel: "video",
                extra: {
                    videoPath: e
                }
            })
        }
    };
    var n = {
        obj_btn: null,
        recording: false,
        bindEvent: function() {
            if (t) {
                t.onStart(function(e) {
                    console.log("onstart...");
                    console.log(e);
                    t.recordClip({
                        timeRange: [3, 3]
                    });
                    if (n.obj_btn) {
                        n.obj_btn.skin = "resource/fishScene/btn_video_1.png"
                    }
                    n.recording = true
                });
                t.onStop(function(e) {
                    console.log("onStop...");
                    console.log(e);
                    if (n.obj_btn) {
                        n.obj_btn.skin = "resource/fishScene/btn_video_0.png"
                    }
                    n.recording = false;
                    t.clipVideo({
                        path: e.videoPath,
                        success: function(e) {
                            console.log("clipVideo...");
                            i(e.videoPath);
                            console.log(e)
                        },
                        fail: function(e) {
                            console.log("clipVideo fail...");
                            console.log(e)
                        }
                    })
                });
                t.onError(function(e) {
                    console.log(e)
                })
            }
        },
        init: function(e) {
            if (e) {
                this.obj_btn = e;
                e.clickHandler = new Laya.Handler(this,
                function() {
                    if (!t) {
                        t = tt.getGameRecorderManager();
                        this.bindEvent()
                    }
                    if (n.recording) {
                        t.stop()
                    } else {
                        t.start({
                            duration: 30,
                            microphoneEnabled: true
                        })
                    }
                });
                e.on(Laya.Event.UNDISPLAY, this,
                function() {
                    t = null;
                    n.obj_btn = null;
                    n.recording = false
                })
            }
        }
    };
    return n
} ();
var ChangeMulTip = function() {
    var l = {
        _obj: null,
        _clickNum: 0,
        _cd: false,
        updateMoney: function(e) {
            if (l._cd) {
                return
            }
            l._obj = e;
            var t = (new Date).toLocaleDateString().replace(/\//g, "");
            var i = myStorage.getItem("changMulTipDate");
            var n = myStorage.getItem("changMulTipNum") || 0;
            if (!i) {
                myStorage.setItem("changMulTipDate", t * 1)
            }
            if (i < t) {
                n = 0;
                myStorage.setItem("changMulTipNum", 0);
                myStorage.setItem("changMulTipDate", t)
            }
            if (n == 2) {
                return
            }
            if (Game.state.get() > Game.sceneConfig.sceneID.gameCenter && n * 1 < 2) {
                var s = Player.getGold();
                var a = Player.getPayRmb();
                var r = FishScene.getCurrentCannon();
                if (r && e) {
                    var o = r.cannonMul;
                    if (s / o >= 800 && a <= 0) {
                        e.visible = true;
                        e.play(0, true, "xsyd1");
                        n++;
                        myStorage.setItem("changMulTipNum", n);
                        if (n == 1) {
                            Laya.timer.once(1e3 * 60 * 2, this,
                            function() {
                                if (!l._obj.visible) {
                                    l._cd = false;
                                    if (e && e.displayedInStage) {
                                        l.updateMoney(e)
                                    }
                                } else {
                                    l._cd = true
                                }
                            })
                        } else if (n == 2) {
                            Laya.stage.off(Laya.Event.def_updateUserMoney, l, l.updateMoney)
                        }
                    } else {
                        e.visible = false;
                        e.stop(0);
                        if (n == 1) {
                            l._cd = true
                        }
                    }
                }
            }
        }
    };
    return {
        init: function(e) {
            l._cd = false;
            l._obj = e
        },
        showTip: function() {
            Laya.stage.on(Laya.Event.def_updateUserMoney, l, l.updateMoney, [l._obj]);
            l.updateMoney(l._obj)
        },
        hideTip: function() {
            if (l._obj) {
                l._obj.visible = false
            }
        },
        stageClick: function() {
            l._clickNum++;
            if (l._clickNum == 3) {
                this.hideTip();
                l._clickNum = 0
            }
        }
    }
} ();
var WBTitle = function() {
    var e = WBTitleUI.prototype;
    var t = function(e) {
        var t = "00",
        i = t,
        n = t;
        var s = Math.floor(e / 60);
        var a = e % 60;
        if (s >= 60) {
            t = s / 60;
            s = s % 60
        }
        i = s < 10 ? "0" + s: s;
        n = a < 10 ? "0" + a: a;
        return t != "00" ? t + ":": "" + i + ":" + n
    };
    var n = null,
    s = 1e4;
    e.init = function() {
        this.overCall = null;
        Laya.stage.once(Laya.Event.def_LeaveFishScene, this, this.reset, [true])
    };
    e.show = function(e, t) {
        this.fc_mul.value = s;
        this.t2.visible = false;
        this.t1.visible = false;
        this.t3.visible = false;
        if (e == 2 || e == 4) {
            this.t2.visible = true;
            this.t_2.visible = e == 2 ? true: false;
            this.t_4.visible = !this.t_2.visible
        } else if (e == 1) {
            this.t1.visible = true
        } else if (e == 3) {
            this.t3.visible = true
        }
        this.visible = true;
        if (t) {
            var i = Math.floor(t.RemainMilSec / 1e3);
            this.leftTime = i;
            if (i >= 0) {
                if (i == 0) {
                    this.hide();
                    this.overCall && this.overCall()
                }
                this.timer.loop(1e3, this, this.countdown)
            }
        }
        if (n && n.displayedInStage) {
            this.zOrder = 50;
            n.addChild(this);
            n.visible = true;
            WBTitleUI.displayedInStage = true
        }
        NewPlayerTaskTip.reShow()
    };
    e.hide = function() {
        this.visible = false
    };
    e.countdown = function() {
        this.leftTime -= 1;
        var e = t(this.leftTime);
        this.fc_time.value = e;
        if (this.leftTime <= 0) {
            this.timer.clear(this, this.countdown)
        }
    };
    e.reset = function(e) {
        this.removeSelf();
        this.timer.clearAll(this);
        this.off(Laya.Event.def_LeaveFishScene, this, this.reset);
        WBTitleUI.inst = null;
        WBTitleUI.loading = false;
        WBTitleUI.displayedInStage = false;
        if (e) {
            n = null
        }
    };
    WBTitleUI.displayedInStage = false;
    WBTitleUI.I = function(e) {
        if (!WBTitleUI.inst) {
            WBTitleUI.inst = new WBTitleUI;
            WBTitleUI.inst.init()
        }
        return WBTitleUI.inst
    };
    WBTitleUI.init = function(e) {
        if (e) {
            n = e.wrap
        }
    };
    WBTitleUI.setFishMul = function(e) {
        s = e;
        WBTitleUI.I().fc_mul.value = e
    };
    return WBTitleUI
} ();
var WBHitRank = function() {
    var e = WBHitRankUI.prototype;
    e.init = function() {
        this.rankList.scrollBar.hide = true
    };
    e.show = function(e, t) {
        if (t && t.displayedInStage) {
            t.addChild(this)
        }
        e = {
            user: {
                index: 2,
                score: 123
            },
            list: [{
                index: 1,
                score: 123
            },
            {
                index: 2,
                score: 120
            }]
        };
        if (e) {
            var i = e.user;
            var n = e.list;
            if (i) {
                this.fc_score.value = i.score;
                this.fc_rank.value = i.index
            }
            var s = [];
            if (n) {
                for (var a = 0; a < n.length; a++) {
                    var r = n[a];
                    if (r) {
                        s.push({
                            rank: {
                                visible: r.index <= 2,
                                skin: "resource/worldBoss/r_" + (r.index <= 2 ? r.index: 0) + ".png"
                            },
                            index: r.index,
                            score: r.score
                        })
                    }
                }
                this.rankList.array = s
            }
        }
    };
    WBHitRankUI.I = function() {
        if (!WBHitRankUI.inst) {
            WBHitRankUI.inst = new WBHitRankUI
        }
        return WBHitRankUI.inst
    };
    return WBHitRankUI
} ();
var WBAni = function() {
    var i = null;
    var n = {
        _stepAni: null,
        _comeAni: null,
        ani: {
            Henyihan: "Henyihan",
            "2fenzhong": "2fenzhong",
            jisha: "jisha"
        },
        init: function(e) {
            i = e;
            Laya.stage.on(Laya.Event.def_LeaveFishScene, this, this.reset)
        },
        reset: function() {
            this._stepAni = null;
            this._comeAni = null;
            Laya.stage.off(Laya.Event.def_LeaveFishScene, this, this.reset)
        },
        showStepAni: function(e) {
            if (!this._stepAni) {
                var t = new Laya.Animation;
                this._stepAni = t;
                t.source = "UIRoot/FX/Shayubushou.ani";
                t.pos(Game.ViewWidth / 2, Game.ViewHeight / 2)
            }
            if (i) {
                this._stepAni.visible = true;
                i.addChild(this._stepAni);
                i.visible = true
            }
            if (n.ani[e]) {
                this._stepAni.once(Laya.Event.COMPLETE, this,
                function() {
                    if (this._stepAni) {
                        this._stepAni.removeSelf()
                    }
                });
                this._stepAni.play(0, false, e)
            }
        },
        showComeAni: function() {
            if (!this._comeAni) {
                var e = new Shayubushou2UI;
                e.fc_mul.value = WorldBoss.getFishMul();
                e.pos(0, 0);
                this._comeAni = e
            }
            if (i) {
                i.visible = true;
                i.addChild(this._comeAni)
            }
            if (this._comeAni.ani1) {
                this._comeAni.ani1.once(Laya.Event.COMPLETE, this,
                function() {
                    this._comeAni.removeSelf()
                });
                this._comeAni.ani1.play(0, false)
            }
        }
    };
    return n
} ();
var FishSwim = function() {
    function e(e, t, i) {
        var n = t.pointArray,
        s = t.allTime,
        a = t.updatefun;
        this.isRotation = i;
        this._delay = t.delay;
        this.onStart = t.onStart;
        this.onComplete = t.onComplete;
        this.target = e;
        this._pointArray = n;
        var r = 0;
        var o = n[0];
        this.allDisArray = [];
        for (var l = 1; l < n.length; l++) {
            var h = n[l];
            var u = h.x - o.x;
            var c = h.y - o.y;
            var f = Math.sqrt(u * u + c * c);
            r += f;
            o = n[l];
            this.allDisArray[l] = f
        }
        this.allTime = s * 1e3;
        this.speed = r / this.allTime;
        this._updatefun = a;
        this.timeScale = 1
    }
    var t = e.prototype;
    t.play = function() {
        if (this.onStart) this.onStart();
        this.isStart = false;
        this.nowPointIndex = 0;
        this.next()
    };
    t.pause = function() {
        this.isPause = true
    };
    t.stop = function() {
        this.isStop = true
    };
    t.setTimeScale = function(e) {
        this.timeScale = e
    };
    t.resume = function() {
        this.isPause = false
    };
    t.next = function() {
        var e = this._pointArray[this.nowPointIndex];
        this.nowPointIndex++;
        var t = this._pointArray[this.nowPointIndex];
        if (t) this.move(e, t);
        else this.onComplete()
    };
    t.move = function(e, t) {
        this._x = e.x;
        this._y = e.y;
        this.target.pos(this._x, this._y);
        var i = t.x - e.x;
        var n = t.y - e.y;
        this._isComplete = false;
        var s = Math.atan2(n, i);
        if (!this.isStart) {
            if (this.isRotation) {
                this.target.rotation = s * 180 / Math.PI + 90
            } else {
                this.target.rotation = 0
            }
            this.isStart = true
        }
        this.nowPathMaxt = Math.sqrt(i * i + n * n) / this.speed;
        this.newSpeedX = this.speed * Math.cos(s);
        this.newSpeedY = this.speed * Math.sin(s)
    };
    t.onComplete = function() {
        this._isComplete = true;
        if (this.onComplete) this.onComplete()
    };
    t.swimByTime = function(e) {
        if (this._isComplete) return false;
        if (this.isStop) return false;
        if (this._delay > 0) {
            if (this._delay > e) {
                this._delay -= e;
                return false
            } else {
                e = e - this._delay;
                this._delay = 0
            }
        }
        var t = e * this.speed;
        var i = this._pointArray[this.nowPointIndex];
        var n = i.x - this._x;
        var s = i.y - this._y;
        var a = Math.sqrt(n * n + s * s);
        var r = a;
        this.allTime -= e;
        if (this.allTime <= 0) {
            this.onComplete();
            return false
        }
        while (t >= r) {
            t -= r;
            if (this.nowPointIndex >= this._pointArray.length - 1) {} else {
                this.next()
            }
            r = this.allDisArray[this.nowPointIndex]
        }
        var o = t / this.speed;
        var l = this.newSpeedX * o;
        var h = this.newSpeedY * o;
        var u = Math.atan2(h, l) * 180 / Math.PI;
        if (this.isRotation) {
            this.target.rotation = u + 90
        } else {
            this.target.rotation = 0
        }
        this._x = this._x + l;
        this._y = this._y + h;
        return true
    };
    t.update = function(e) {
        e = e * this.timeScale;
        if (this.isPause) return;
        if (this.swimByTime(e)) {
            this.target.pos(this._x, this._y);
            if (this._updatefun) this._updatefun()
        }
    };
    return e
} ();
var Gold = function() {
    var e = Laya.TimeLine,
    r = Laya.Ease,
    o = Laya.Event,
    l = Laya.Handler,
    t = Laya.Tween,
    i = Laya.Animation;
    var h = null,
    p = 50,
    _ = 1;
    function m() {
        m.super(this);
        this.timeLine = new e;
        this.completeCall = null
    }
    Laya.class(m, "Gold", Laya.Sprite, "");
    var n = m.prototype;
    n.createCoin = function(e, t) {
        var i = Laya.Pool.getItemByClass("Animation_gold", Laya.Animation);
        i.interval = 100;
        i.index = 0;
        i.zOrder = 0;
        i.visible = true;
        i.pivot(p / 2, p / 2);
        i.pos(e.posXY.x, e.posXY.y);
        i.scale(_, _);
        this.ani = i;
        var n = e.type ? "goldAni": "silverAni";
        i.play(0, true, n);
        this.isCurrPlayer = e.type;
        this.timer.once(e.delay, this,
        function() {
            if (h) {
                h.addChild(i)
            }
            this.animate(e.posXY, e.target, e.callback, t)
        });
        this.on(Laya.Event.UNDISPLAY, this,
        function() {
            Laya.Pool.recover("Animation_gold", this.ani);
            Laya.Pool.recover("globalGold", this);
            this.timeLine.pause();
            this.timeLine.destroy()
        })
    };
    n.animate = function(e, t, i, n) {
        if (this.ani.displayedInStage) {
            var s = this.ani,
            a = s.y,
            r = 200;
            this.timeLine.reset();
            this.timeLine.to(s, {
                y: a + 50
            },
            r).to(s, {
                y: a - 75
            },
            r).to(s, {
                y: a - 120
            },
            r).to(s, {
                y: a
            },
            r).to(s, {
                y: a - 75
            },
            r).to(s, {
                y: a
            },
            r);
            this.timeLine.on(o.COMPLETE, this,
            function() {
                this.timer.once(100, this, this.luoRu, [e, t, i, n])
            });
            this.ani.once(Laya.Event.UNDISPLAY, this,
            function() {
                this.timeLine.pause()
            });
            this.timeLine.play(0, false)
        }
    };
    n.luoRu = function(e, t, i, n) {
        if (this.ani.displayedInStage) {
            var s = Laya.Pool.getItemByClass("point", Laya.Point);
            s.x = t.x;
            s.y = t.y;
            var a = s.distance(e.x, e.y);
            Laya.Tween.to(this.ani, {
                x: t.x,
                y: t.y
            },
            a * 2, r.linear, l.create(this, this.onComplete, [n, i]));
            Laya.Tween.to(this.ani, {
                scaleX: .7,
                scaleY: .7
            },
            a, r.linear, null, a);
            Laya.Pool.recover("point", s)
        }
    };
    n.onComplete = function(e, t) {
        this.ani.visible = false;
        this.ani.stop();
        this.ani.removeSelf();
        if (this.timeLine) {
            this.timeLine.pause();
            this.timeLine.destroy()
        }
        this.timer.clearAll(this);
        this.removeSelf();
        if (e) {
            t && t();
            if (this.isCurrPlayer) {
                Sound.playSound(Sound.RES.gold_drop.url, Sound.RES.gold_drop.vol)
            }
        }
        this.completeCall && this.completeCall()
    };
    function v(e) {
        var t = 0,
        i = 0;
        if (e.length > 1) {
            t = Utils.getRandom(e[0], e[1])
        } else {
            t = e[0]
        }
        if (t >= 100) {
            i = 10
        } else if (t >= 50 && t <= 90) {
            i = 8
        } else if (t >= 20 && t <= 40) {
            i = 7
        } else if (t >= 6 && t <= 18) {
            i = 6
        } else if (t == 5) {
            i = 5
        } else if (t == 4) {
            i = 4
        } else if (t == 3) {
            i = 3
        } else if (t == 2) {
            i = 2
        }
        return i
    }
    function s(e, t, i, n) {
        var s = Laya.Pool.getItemByClass("_goldLabelFont_", Laya.FontClip);
        var a = t - 30;
        s.skin = n ? "resource/fishScene/FontClip_gold_1.png": "resource/fishScene/FontClip_gold_2.png";
        s.sheet = "+0123456789";
        s.align = "center";
        s.direction = "horizontal";
        s.value = "+" + i;
        s.zOrder = 998;
        s.alpha = 1;
        s.width = 200;
        s.pivotX = 120;
        s.pos(e, a);
        if (!s._fromPool) {
            s.on(o.DISPLAY, this,
            function() {
                var e = Laya.TimeLine.to(s, {
                    scaleX: 1.2,
                    scaleY: 1.2,
                    alpha: 1
                },
                100).to(s, {
                    scaleX: 1,
                    scaleY: 1,
                    alpha: 1
                },
                100).to(s, {
                    y: s.y - 60,
                    alpha: 0
                },
                500, null, 1e3);
                if (s.displayedInStage) {
                    e.play(0, false);
                    s.timer.once(1700, this,
                    function() {
                        s.removeSelf();
                        s.alpha = 1
                    })
                }
            });
            s.on(o.UNDISPLAY, this,
            function() {
                s._fromPool = true;
                Laya.Pool.recover("_goldLabelFont_", s)
            })
        }
        if (h) {
            h.addChild(s);
            h.visible = true
        }
    }
    return {
        countCoinNum: v,
        init: function(e) {
            Laya.Animation.createFrames(["resource/fishScene/gold_00000.png", "resource/fishScene/gold_00001.png", "resource/fishScene/gold_00002.png", "resource/fishScene/gold_00003.png", "resource/fishScene/gold_00004.png", "resource/fishScene/gold_00005.png", "resource/fishScene/gold_00006.png", "resource/fishScene/gold_00007.png", "resource/fishScene/gold_00008.png"], "goldAni");
            Laya.Animation.createFrames(["resource/fishScene/gold_yb_00000.png", "resource/fishScene/gold_yb_00001.png", "resource/fishScene/gold_yb_00002.png", "resource/fishScene/gold_yb_00003.png", "resource/fishScene/gold_yb_00004.png", "resource/fishScene/gold_yb_00005.png", "resource/fishScene/gold_yb_00006.png", "resource/fishScene/gold_yb_00007.png", "resource/fishScene/gold_yb_00008.png"], "silverAni");
            h = e
        },
        show: function(i, n, e, t, s, a) {
            if (Game.state.get() == Game.sceneConfig.sceneID.scene_Dragon_DaoDan) {
                Score.show(i, n, e, t, s, a);
                return
            } else if (Game.state.get() == Game.sceneConfig.sceneID.scene_YouYiSai) {
                return
            }
            var r = 0,
            o = null,
            l = 4,
            h = v(e);
            var u = undefined,
            c = undefined,
            f = {
                posXY: {
                    x: i,
                    y: n
                },
                num: h,
                type: t,
                target: s,
                callback: a
            };
            var d = h * p;
            for (var g = 0; g < h; g++) {
                o = null; (function(e, t) {
                    c = 0;
                    if (t >= 1) {
                        e = e % l;
                        c = t * p * _ - p * 3 / 2
                    }
                    u = e * p * _ - h * p / 2;
                    f.posXY.x = i + u;
                    f.posXY.y = n + c;
                    if (i <= s.x) {
                        f.delay = d - e * p
                    } else {
                        f.delay = e * p
                    }
                    o = Laya.Pool.getItemByClass("globalGold", m);
                    o.createCoin(f, e == h - 1)
                })(g, r)
            }
            if (t) {
                Sound.playSound(Sound.RES.gold_get.url, Sound.RES.gold_get.vol)
            }
        },
        showGoldNumFont: function(e, t, i, n) {
            s(e, t, i, n)
        },
        addCache: function() {
            this.init();
            for (var e = 0; e < 60; e++) { (function(e) {
                    var t = new m;
                    Laya.Pool.recover("globalGold", t);
                    Game.UIRoot.addChild(t);
                    var i = new Laya.FontClip;
                    i.skin = e % 2 ? "resource/fishScene/FontClip_gold_1.png": "resource/fishScene/FontClip_gold_2.png";
                    i.sheet = "+0123456789";
                    i.align = "center";
                    i.direction = "horizontal";
                    i.pos(0 - Game.UIWidth, 0);
                    i.value = "+100";
                    Game.UIRoot.addChild(i);
                    var n = new Laya.Animation;
                    n.once(Laya.Event.COMPLETE, this,
                    function() {
                        t.removeSelf();
                        n.removeSelf();
                        i.removeSelf();
                        Laya.Pool.recover("Animation_gold", n);
                        Laya.Pool.recover("_goldLabelFont_", i)
                    });
                    Game.UIRoot.addChild(n);
                    if (e % 0) {
                        n.play(0, false, "goldAni")
                    } else {
                        n.play(0, false, "silverAni")
                    }
                })(e)
            }
        }
    }
} ();
var Fish = function() {
    var i = Laya.Rectangle;
    var e = .065,
    t = 1e3,
    n = 90;
    var f = 1;
    var s = {
        delIndex: 0,
        addIndex: 0,
        clearIndex: 0,
        fishInstList: [[], [], [], [], [], [], [], [], []]
    };
    var a = [.65, 0, 0, 0, 0, 0, .3, 0, 0, 0, 0, 0, .3, 0, 0, 0, 0, 0, 1, 0];
    var r = {
        list: [],
        getOne: function() {
            if (this.list.length < 1) {
                return new Laya.ColorFilter(a)
            } else {
                return this.list.shift()
            }
        },
        recover: function(e) {
            if (e instanceof Laya.ColorFilter) {
                this.list.push(e)
            }
        }
    };
    function o(e, t, i) {
        if (Game.fishPathData && Game.fishPathData[e]) {
            var n = Game.fishPathData[e];
            if (e == 1106) t = -t;
            return l(n, t, i)
        } else {
            return false
        }
    }
    function l(e, t, i) {
        var n = [],
        s = e.length - 1;
        for (var a = 0; a < s; a++) {
            var r = e[a];
            if (!r) {
                continue
            }
            var o = 0,
            l = 0;
            if (r instanceof Array) {
                o = r[0] * 1 * f;
                l = r[1] * 1 * f
            } else {
                var h = r.split(",");
                o = h[0] * 1 * f,
                l = h[1] * 1 * f
            }
            var u = Utils.transformFishView(o + t * f, l + i * f);
            var c = r.length >= 3 ? r[2] : 1;
            n.push({
                x: u.x,
                y: u.y,
                timeScale: c
            })
        }
        return n
    }
    function h(e) {
        for (var t in FishModelCfg) {
            var i = FishModelCfg[t];
            if (i.isBoss) {
                if (FishScene.SceneBossCfg && e) {
                    var n = FishScene.SceneBossCfg[e];
                    if (n && n instanceof Array) {
                        if (n.indexOf(t * 1) < 0) {
                            continue
                        }
                    } else {
                        continue
                    }
                }
            }
            u(t)
        }
    }
    function u(e) {
        var t = FishModelCfg[e];
        if (t) {
            var i = [],
            n = [],
            s = [];
            if (t.youActMaxIndex) {
                for (var a = 0; a <= t.youActMaxIndex; a++) {
                    i.push("resource/newFish/type_" + t.atlas + "/" + t.nick + "_" + a + ".png")
                }
                Laya.Animation.createFrames(i, t.nick + "_you")
            }
            if (t.deadActMaxIndex) {
                for (var a = 0; a <= t.deadActMaxIndex; a++) {
                    n.push("resource/newFish/type_" + t.atlas + "/" + t.nick + "_dead_" + a + ".png")
                }
                Laya.Animation.createFrames(n, t.nick + "_dead")
            }
        }
    }
    var c = {
        Fish_xinshou: 99,
        Fish_xiaolvyu: 100,
        Fish_dayanyu: 101,
        Fish_xiaolanyu: 102,
        Fish_kedouyu: 103,
        Fish_nianyu: 104,
        Fish_wugui: 105,
        Fish_shenxianyu: 106,
        Fish_dengpaoyu: 107,
        Fish_tiaowenyu: 108,
        Fish_xiaochouyu: 109,
        Fish_kongqueyu: 110,
        Fish_hetun: 200,
        Fish_lantiaowenyu: 201,
        Fish_gangkuiyu: 202,
        Fish_shuimu: 203,
        Fish_bianbianyu: 204,
        Fish_bianfuyu: 205,
        Fish_lanshayu: 206,
        Fish_yinchuitousha: 300,
        Fish_jinhou: 301,
        Fish_jinchan: 302,
        Fish_jingui: 304,
        Fish_jinshuimu: 305,
        Fish_jinLongYu: 306,
        Fish_jinChuiTouSha: 307,
        Fish_daJiang: 308,
        Fish_jubaopen: 321,
        Fish_jinLong: 322,
        Fish_changE: 323,
        Fish_jiangquan_1: 400,
        Fish_jiangquan_2: 401,
        Fish_jiangquan_5: 402,
        Fish_jiangquan_10: 403,
        Fish_jiangquan_20: 404,
        Fish_jiangquan_50: 405,
        Fish_jiangquan_100: 406,
        Fish_dianman: 407,
        Fish_haiShenBaoZang: 408,
        Fish_zhadan: 410,
        Fish_JinZhu: 411,
        Fish_longXia: 490,
        Fish_xiongmao: 493,
        Fish_zhuangyu: 500,
        Fish_baogui: 501,
        Fish_huolong: 502,
        Fish_meirenyu: 503,
        Fish_bossXiaoYao: 505,
        Fish_bossJiangJun: 506,
        Fish_bossQueen: 507,
        Fish_bossDragon: 508,
        Fish_worldBoss: 601,
        Fish_kun: 602
    };
    var d = [c.Fish_jiangquan_1, c.Fish_jiangquan_2, c.Fish_jiangquan_5, c.Fish_jiangquan_10, c.Fish_jiangquan_20, c.Fish_jiangquan_50, c.Fish_jiangquan_100, c.Fish_zhadan, c.Fish_zhuangyu, c.Fish_baogui, c.Fish_huolong, c.Fish_meirenyu];
    var g = [c.Fish_shuimu, c.Fish_jinshuimu, c.Fish_zhuangyu, c.Fish_huolong, c.Fish_zhadan, c.Fish_jinchan, c.Fish_jubaopen, c.Fish_shenxianyu, c.Fish_jiangquan_1, c.Fish_jiangquan_2, c.Fish_jiangquan_5, c.Fish_jiangquan_10, c.Fish_jiangquan_20, c.Fish_jiangquan_50, c.Fish_jiangquan_100, c.Fish_haiShenBaoZang, c.Fish_meirenyu, c.Fish_changE, c.Fish_bossQueen, c.Fish_bossJiangJun, c.Fish_bossXiaoYao, c.Fish_bossDragon, c.Fish_daJiang, c.Fish_JinZhu, c.Fish_worldBoss, c.Fish_longXia, c.Fish_kun, c.Fish_xinshou, c.Fish_xiongmao];
    var p = [c.Fish_baogui, c.Fish_tiaowenyu, c.Fish_xiaochouyu, c.Fish_jinLongYu, c.Fish_huolong, c.Fish_dengpaoyu, c.Fish_longXia, c.Fish_kun, c.Fish_zhuangyu, c.Fish_xiongmao, c.Fish_xinshou];
    Game.FishID = c;
    function _() {
        _.super(this)
    }
    Laya.class(_, "FishRole", Laya.Sprite, "");
    var m = _.prototype;
    m.init = function(e) {
        this.id = e.Id;
        this.type = e.FishId;
        this.pathType = 0;
        this.pathId = e.PathId;
        this.pathOffsetX = e.OffsetX;
        this.pathOffsetY = e.OffsetY;
        this.pathDelay = e.Delay;
        this.StartTime = e.StartTime;
        this.RunTime = e.RunTime;
        this.LiveTime = e.LiveTime;
        this.SceneSeq = e.SceneSeq;
        this.prevFrameX = -1e4;
        this.alive = true;
        this.FishType = 0;
        this.TideSeq = e.TideSeq;
        this.visile = false;
        this.isLocked = false;
        this.lockedUserIdList = [];
        this.sockLightBox = null;
        this.need_add_index_list = [];
        this.need_del_index_list = [];
        this.alpha = 1;
        this.visile = true;
        this.scale(1, 1);
        this.updateGapIndex = 0;
        if (!this._fromPool) {
            this.fishConfigData = GameConfig.fish.getCfgById(this.type);
            if (this.fishConfigData) {
                this.modelCfg = FishModelCfg[this.type];
                this.FishMultiple = this.fishConfigData.FishMultiple;
                if (this.FishMultiple && this.FishMultiple.length > 0) {
                    this.FishMultipleNum = +this.FishMultiple[0]
                } else this.FishMultipleNum = 0;
                if (!this.modelCfg) {
                    this.dead(true);
                    return
                }
                this.name = this.fishConfigData.FishName + "_" + this.id;
                this.showMinZhuanPan = this.fishConfigData.minTurntable;
                this.showMaxZhuanPan = this.fishConfigData.maxTurntable;
                this.newTurntable = this.fishConfigData.newTurntable;
                this.isDaoDanSight = this.fishConfigData.DaoDanSight;
                this.isSuoDingSight = this.fishConfigData.SuoDingSight;
                this.zOrder = this.fishConfigData.FishLayer || 0;
                this.IsBoss = this.fishConfigData.IsBoss;
                this.FishType = this.fishConfigData.FishType;
                this.IsTreasure = this.fishConfigData.IsTreasure;
                this.IsFrozen = this.fishConfigData.IsFrozen;
                this.ableLock = this.isDaoDanSight || this.isSuoDingSight;
                var t = this.modelCfg.model;
                if (t) {
                    var i = new t,
                    n = i.fish,
                    s = i.animation;
                    if (n) {
                        if (!this.fishModelOtherAni) {
                            this.fishModelOtherAni = []
                        }
                        if (i.ani1) {
                            this.fishModelOtherAni.push(i.ani1)
                        }
                        if (s) {
                            s.stop();
                            s.play(0, true);
                            this.body = s;
                            this.bodyAniInterval = s.interval;
                            if (this.type == c.Fish_zhadan) {
                                var a = new shuileixiaoguoUI;
                                a.size(960, 540);
                                a.pivot(480, 270);
                                a.pos(92, 130);
                                n.addChild(a);
                                s.zOrder = 2
                            }
                            if (d.indexOf(this.type) < 0) {}
                        } else if (i.count) {
                            i.count.skin = "resource/newFish/type_4/" + this.modelCfg.countName;
                            this.body = i.body
                        }
                        if (this.type == c.Fish_haiShenBaoZang) {
                            this.body = i.body
                        }
                        if (i.area && !n.zhuanPanArea) {
                            var r = i.area.width / 1,
                            o = i.area.height / 1;
                            this.size(r, o);
                            this.pivot(i.area.pivotX, i.area.pivotY);
                            n.pos(i.area.pivotX, i.area.pivotY)
                        }
                        this.fishBox = n;
                        this.addChild(n)
                    } else {}
                }
            } else {
                this.dead(true);
                return
            }
        } else {
            if (this.fishConfigData) {
                this.name = this.fishConfigData.FishName + "_" + this.id;
                this.FishType = this.fishConfigData.FishType
            }
            if (this.bodyAniInterval) {
                this.body.interval = this.bodyAniInterval;
                if (this.body && this.body instanceof Laya.Animation) {
                    this.body.play(0, true)
                }
            } else {
                if (this.body instanceof Laya.Animation) {
                    this.body.play()
                }
            }
        }
        if (this.fishConfigData && this.fishConfigData.FishTalkId) {
            this.FishTalkId = this.fishConfigData.FishTalkId.split("|")
        } else if (this.FishTalkId) this.FishTalkId = undefined;
        if (this && !this.destroyed) {
            if (this.body) {
                this.body.filters = []
            }
            if (this.fishBox) {
                this.fishBox.filters = []
            }
            if (this.fishModelOtherAni && this.fishModelOtherAni.length > 0) {
                for (var l = 0; l < this.fishModelOtherAni.length; l++) {
                    this.fishModelOtherAni[l].play()
                }
            }
        } else {
            this.dead(true)
        }
        this.once(Laya.Event.UNDISPLAY, this, this.unDisplay)
    };
    m.unDisplay = function() {
        this.dead(true)
    };
    m.redFilter = function() {
        this.hitting && clearTimeout(this.hitting);
        this.hitting = null;
        var e = r.getOne();
        if (this.body) {
            this.body.filters = [e]
        } else if (this.fishBox) {
            this.fishBox.filters = [e]
        }
        var t = this;
        this.hitting = setTimeout(function() {
            if (t.displayedInStage) {
                if (!t.destroyed && t.body) {
                    t.body.filters = [];
                    r.recover(e)
                } else {
                    t.fishBox.filters = [];
                    r.recover(e)
                }
            }
        },
        400)
    };
    m.hit = function(e) {
        if (e) {
            this.redFilter()
        }
    };
    m.deadAct = function(e, t, i) {
        var n = 2e3;
        if (e == 1) {
            if (this.body && this.body instanceof Laya.Animation) {
                var s = Math.ceil(this.bodyAniInterval / 5) || 5;
                this.body.interval = s;
                this.body.play(this.body.index, true);
                this.timer.once(n, this,
                function() {
                    this.body.stop();
                    i && i.call(t, null)
                })
            } else {
                i && i.call(t, null)
            }
        } else if (e == 2) {
            var a = this.rotation + 360 * 3;
            Laya.Tween.to(this, {
                rotation: a,
                scaleX: this.scaleX * 1.4,
                scaleY: this.scaleY * 1.4
            },
            n, null, Laya.Handler.create(this,
            function() {
                i && i.call(t, null)
            }))
        }
    };
    m.playDeadAct = function(e, t) {
        this.alive = false;
        this.isLocked = false;
        this.pause(true);
        this.hideLockSight();
        if (this.FishType < 2) {
            t && t.call(e, null)
        } else if (this.FishType == 2 || this.type == c.Fish_longXia) {
            this.deadAct(1, e, t)
        } else {
            if (this.type == c.Fish_jinshuimu || this.type == c.Fish_zhuangyu || this.type == c.Fish_meirenyu || this.type == c.Fish_jinLong || this.type == c.Fish_dianman || this.type == c.Fish_baogui || this.type == c.Fish_jubaopen || this.type == c.Fish_zhadan || this.type == c.Fish_huolong) {
                this.deadAct(1, e, t)
            } else if (this.type >= c.Fish_jiangquan_1 && this.type <= c.Fish_jiangquan_100 || this.type == c.Fish_haiShenBaoZang || this.type == c.Fish_changE || this.type == c.Fish_bossQueen || this.type == c.Fish_bossJiangJun || this.type == c.Fish_bossDragon || this.type == c.Fish_daJiang || this.type == c.Fish_bossXiaoYao || this.type == c.Fish_worldBoss) {
                t && t.call(e, null)
            } else {
                this.deadAct(2, e, t)
            }
        }
    };
    m.deadLater = function(e) {
        if (this.type === Game.FishID.Fish_bossXiaoYao || this.type === Game.FishID.Fish_bossJiangJun || this.type === Game.FishID.Fish_bossQueen) {
            FishScene.showHaoJiaoIconAni()
        }
        Laya.Tween.to(this, {
            alpha: 0
        },
        200, null, Laya.Handler.create(this,
        function() {
            this.timer.clearAll(this);
            this.removeSelf();
            this.alpha = 1;
            if (!e) {
                this._fromPool = true;
                Laya.Pool.recover("fish_" + this.type, this)
            } else {
                if (this.mess_UI) {
                    this.mess_UI.destroy();
                    this.mess_UI = null
                }
                this.destroy()
            }
        }))
    };
    m.dead = function(e, t) {
        v.removeByValue(this);
        if (this.fishSwim) this.fishSwim.stop();
        this.fishSwim = undefined;
        this.quadTreeClear();
        this.alive = false;
        FishScene.delFishMap(this.id);
        if (this.IsBoss && !t) {
            FishScene.BossComeOver()
        }
        if (this.lockLight) {
            this.lockLight.removeSelf()
        }
        if (this.mess_UI) {
            this.mess_UI.removeSelf();
            this.timer.clear(this, this.showMess);
            this.timer.clear(this, this.hideMess)
        }
        if (this.fishModelOtherAni && this.fishModelOtherAni.length > 0) {
            for (var i = 0; i < this.fishModelOtherAni.length; i++) {
                this.fishModelOtherAni[i].stop()
            }
        }
        if (this.body && this.body instanceof Laya.Animation && this.bodyAniInterval) {
            this.body.interval = this.bodyAniInterval
        }
        if (this.body instanceof Laya.Animation) {
            this.body.stop()
        }
        if (this.type == c.Fish_changE) {
            this.timer.once(500, this,
            function() {
                this.deadLater(e)
            })
        } else {
            this.deadLater(e)
        }
    };
    m.onStartMove = function() {
        this.alpha = 1;
        this.visile = true
    };
    m.move = function(e) {
        if (this.destroyed) {
            this.dead(true);
            return
        }
        this.rotation = 0;
        var t = this;
        var i = o(this.pathId, this.pathOffsetX, this.pathOffsetY);
        if (!i) {
            this.dead(true);
            return
        }
        this.pos(i[0].x, i[0].y);
        var n = i.length;
        var s = n * Game.fishSpeed;
        s = s.toFixed(3) * 1;
        if (s == undefined) {
            console.log("pathTime undefined")
        }
        this.pathPointArray = i;
        if (this.IsBoss) {
            if (this.x < 0 && i[0].x <= i[2].x || this.x > Game.UIWidth && i[0].x >= i[2].x) {
                if (!e) {
                    FishScene.BossComeAni(this.type)
                }
            }
        }
        if (this.type == c.Fish_jubaopen) {
            if (this.x < 0 && i[0].x <= i[2].x || this.x > Game.UIWidth && i[0].x >= i[2].x) {
                if (!e) {
                    JuBaoPen.fishComing()
                }
            }
        }
        this.pathTime = s;
        var a = {
            delay: this.pathDelay,
            pointArray: i,
            allTime: s,
            speed: Game.fishSpeed,
            onStart: function() {
                this.onStartMove()
            }.bind(this),
            onComplete: function(e) {
                this.dead()
            }.bind(this)
        };
        this.fishSwim = new FishSwim(this, a, g.indexOf(this.type) < 0);
        if (this.fishSwim) {
            this.fishSwim.play();
            if (this.RunTime - 16 > 0) {
                this.fishSwim.swimByTime(this.RunTime - 16);
                this.update();
                this.updateDir();
                if (this.fishSwim) {
                    this.fishSwim.update(16);
                    this.update();
                    this.updateDir()
                }
            } else {
                this.fishSwim && this.fishSwim.swimByTime(this.RunTime);
                this.update();
                this.updateDir()
            }
        } else {
            console.log("this.fishSwim null")
        }
        if (FishScene.getFreezing()) {
            if (this.IsFrozen) {
                this.pause()
            }
        }
    };
    m.pause = function(e) {
        if (this.type == Game.FishID.Fish_bossXiaoYao || this.type == Game.FishID.Fish_bossJiangJun || this.type == Game.FishID.Fish_bossQueen || this.type == Game.FishID.Fish_bossDragon || this.type == Game.FishID.Fish_worldBoss || this.type == Game.FishID.Fish_changE) {
            return
        }
        if (this.body instanceof Laya.Animation) {
            this.body.gotoAndStop(this.body.index)
        }
        if (this.fishSwim) {
            if (e) {
                this.fishSwim.stop()
            } else {
                this.fishSwim.pause()
            }
        }
    };
    m.resume = function() {
        if (this.displayedInStage) {
            if (this.body instanceof Laya.Animation) {
                this.body.play(this.body.index)
            }
        }
        if (this.fishSwim) {
            this.fishSwim.resume()
        }
    };
    m.speedLeave = function() {
        if (this.fishSwim) {
            this.fishSwim.setTimeScale(60)
        } else {
            this.dead()
        }
    };
    m.updateFishPos = function() {};
    m.addLockSight = function() {
        if (this.lockLight && this.displayedInStage) {
            this.sockLightBox.addChild(this.lockLight);
            return
        }
        var e = Laya.Pool.getItemByClass("lockLight", Laya.Image);
        e.skin = "resource/fishScene/img_zhunxing.png";
        e.pivot(35, 35);
        e.pos(0, 0);
        if (e) {
            e.visible = false
        }
        this.sockLightBox.addChild(e);
        this.lockLight = e
    };
    m.showLockSight = function() {
        if (this.lockLight) {
            if (this.visible && this.alive) {
                this.lockLight.pos(this.x, this.y);
                this.lockLight.visible = true
            } else {
                this.lockLight.visible = false
            }
        } else {
            this.addLockSight();
            if (this.lockLight) {
                this.lockLight.visible = true
            }
        }
    };
    m.isShowLockSight = function() {
        return this.visible && this.displayedInStage && this.lockLight && this.lockLight.visible
    };
    m.hideLockSight = function() {
        if (this.lockLight && !this.isLocked) {
            this.lockLight.visible = false
        }
    };
    m.setLocked = function(e, t) {
        this.isLocked = t;
        if (t) {
            this.showLockSight();
            if (this.lockedUserIdList.indexOf(e) < 0) this.lockedUserIdList.push(e)
        } else {
            this.lockedUserIdList.removeByValue(e);
            this.lockedUserIdList.unique();
            if (this.lockedUserIdList.length == 0) {
                this.hideLockSight()
            }
        }
    };
    m.updateSwim = function(e) {
        if (this.fishSwim) {
            this.fishSwim.update(e);
            this.update()
        }
    };
    m.updateDir = function() {
        var e = this.getXY();
        if (this.pathPointArray && this.pathPointArray.length > 3) {
            if (p.indexOf(this.type) != -1) {
                if (this.prevFrameX > this.x) {
                    this.scaleX = 1
                } else {
                    this.scaleX = -1
                }
                this.prevFrameX = e.x
            }
            if (this.type == Game.FishID.Fish_JinZhu) {
                if (this.prevFrameX > this.x) {
                    this.scaleX = -1
                } else {
                    this.scaleX = 1
                }
                this.prevFrameX = e.x
            }
        }
    };
    m.update = function() {
        if (!this.alive) return;
        var e = this.getXY();
        if (this.displayedInStage) {
            this.quadTreeUpdate();
            this.updateMess()
        }
        if (this.lockLight && this.lockLight.visible) {
            this.lockLight.rotation += 2;
            this.lockLight.pos(e.x, e.y)
        }
        if (!FishScene.getFreezing() || !this.IsFrozen) this.updateDir();
        if (FishScene.getCurrentCannon() && FishScene.getCurrentCannon().isHarmonics && this.isLocked) {
            var t = this.getXY();
            var i = t.x,
            n = t.y;
            var s = Laya.Pool.getItemByClass("rectA", Laya.Rectangle);
            s.width = Game.UIWidth;
            s.height = Game.UIHeight;
            s.x = 0;
            s.y = 0;
            if (!Utils.InRange({
                x: i,
                y: n
            },
            s)) {
                FishScene.refreshHarmonicsFish(this);
                Laya.Pool.recover("rectA", s);
                return
            }
            Laya.Pool.recover("rectA", s)
        }
    };
    m.quadTreeClear = function() {
        for (var e = 1; e < s.fishInstList.length; e++) {
            s.fishInstList[e].removeByValue(this)
        }
    };
    m.quadTreeUpdate = function() {
        var e = this.getXY();
        if (e.x + this.width / 2 < 0 || e.y + this.height / 2 <= 0 || e.x - this.width > Game.UIWidth || e.y - this.height > Game.UIHeight) {
            this.quadTreeClear();
            return - 1
        } else {
            if (!this._quadTreeRect) {
                this._quadTreeRect = Laya.Pool.getItemByClass("fishRect", i)
            } else {
                this._quadTreeRect.setTo(e.x, e.y, this.width, this.height)
            }
            this.need_add_index_list = QuadTree.getAddIndexList(this._quadTreeRect);
            s.delIndex = 0;
            for (var t = 0; t < this.need_del_index_list.length; t++) {
                s.delIndex = this.need_del_index_list[t];
                s.fishInstList[s.delIndex].removeByValue(this)
            }
            s.addIndex = 0;
            for (var t = 0; t < this.need_add_index_list.length; t++) {
                s.addIndex = this.need_add_index_list[t];
                s.fishInstList[s.addIndex].push(this)
            }
            this.need_del_index_list = this.need_add_index_list
        }
    };
    m.getXY = function() {
        return {
            x: this.x,
            y: this.y
        }
    };
    m.demo_UpdateFishPos = function(e, t) {
        if (this.pos_s_UI) {
            this.pos_s_UI.changeText("x:" + parseInt(e) + " y:" + parseInt(t));
            this.pos_c_UI.changeText("x:" + parseInt(this.getXY().x) + " y:" + parseInt(this.getXY().y))
        }
    };
    m.showMess = function() {
        if (this.displayedInStage && this.FishTalkId && this.FishTalkId.length > 0) {
            var e = this.FishTalkId[Math.floor(Math.random() * this.FishTalkId.length)];
            var t = GameConfig.getFishTalk(e);
            if (t) {
                if (!this.mess_UI) {
                    this.mess_UI = new FishChatNoticeUI
                }
                this.parent.parent.addChild(this.mess_UI);
                this.mess_UI.messlab.text = t;
                this.mess_UI.width = this.mess_UI.messlab.width + 30;
                this.updateMess();
                this.timer.once(6e3, this, this.hideMess)
            }
        }
    };
    m.updateMess = function() {
        if (this.mess_UI && this.mess_UI.displayedInStage) {
            this.mess_UI.x = this.x;
            if (this.type == Game.FishID.Fish_jinLong || this.type == Game.FishID.Fish_dianman) {
                this.mess_UI.y = this.y - 80
            } else this.mess_UI.y = this.y - 50 - this.pivotY
        }
    };
    m.hideMess = function() {
        if (this.mess_UI) {
            this.mess_UI.removeSelf()
        }
        if (this.displayedInStage && this.FishTalkId && this.FishTalkId.length > 0) {
            this.timer.once(8e3 + Math.random() * 4e3, this, this.showMess)
        }
    };
    var v = [];
    var y = null;
    return {
        moveKeepAngleFishList: g,
        init: function(e) {
            h(e)
        },
        createFramesByType: function(e) {
            var t = FishModelCfg[e];
            var i = Laya.Animation.framesMap;
            if (!i[t.nick + "_you"]) {
                u(e)
            }
        },
        getFishPath: o,
        getFishByType: function(e) {
            if (e) {
                var t = Laya.Pool.getItemByClass("fish_" + e.FishId, _);
                if (t.destroyed) {
                    t = new _
                }
                t.init(e);
                v.push(t);
                return t
            }
        },
        getActFishCount: function() {
            return v.length
        },
        getQuadTreeFishByIndex: function(e) {
            return s.fishInstList[e] || []
        },
        release: function() {
            for (var e in c) {
                var t = c[e];
                Laya.Pool.clearBySign("fish_" + t)
            }
            var i = ["res/atlas/resource/newFish/type_1.atlas", "res/atlas/resource/newFish/type_2.atlas", "res/atlas/resource/newFish/type_3.atlas", "res/atlas/resource/newFish/type_4.atlas", "res/atlas/resource/newFish/type_5.atlas", "res/atlas/resource/newFish/type_6.atlas", "res/atlas/resource/newFish/type_7.atlas", "res/atlas/resource/newFish/type_8.atlas", "res/atlas/resource/newFish/type_9.atlas", "res/atlas/resource/newFish/type_10.atlas", "res/atlas/resource/newFish/type_11.atlas", "res/atlas/resource/newFish/type_12.atlas"];
            Resource.clearRes(i)
        },
        addCache: function(e) {
            return;
            this.init(e);
            for (var t in c) {
                var i = 1,
                n = c[t];
                var s = FishModelCfg[n];
                if (s && s.isBoss) {
                    if (FishScene.SceneBossCfg && e) {
                        var a = FishScene.SceneBossCfg[e];
                        if (a && a instanceof Array) {
                            if (a.indexOf(n) < 0) {
                                continue
                            }
                        } else {
                            continue
                        }
                    }
                }
                if (n >= c.Fish_hetun) {
                    i = 5
                } else {
                    i = 10
                }
                for (var r = 0; r < i; r++) {
                    var o = Laya.Pool.getPoolBySign("fish_" + n);
                    if (o.length < i) { (function(e, t) {
                            var i = new _;
                            i.init({
                                Id: t + "_" + e,
                                FishId: t,
                                PathId: 1001,
                                Delay: 0,
                                OffsetX: 0,
                                OffsetY: 0,
                                StartTime: 0,
                                FishScene: 0,
                                SceneSeq: 1,
                                RunTime: 0
                            });
                            i.pos( - 2e3, 0);
                            Game.UIRoot.addChild(i);
                            i.move(true);
                            i.once(Laya.Event.UNDISPLAY, this,
                            function() {
                                Laya.Pool.recover("fish_" + t, i)
                            });
                            i.timer.once(1e3, this,
                            function() {
                                i.pause();
                                i.dead(null, true)
                            })
                        })(r, n)
                    }
                }
            }
        }
    }
} ();
var Cannon = function() {
    var n = [[], [{
        scaleX: 1,
        scaleY: 1
    },
    {
        scaleX: 1,
        scaleY: .92
    },
    {
        scaleX: 1,
        scaleY: .8
    },
    {
        scaleX: 1,
        scaleY: 1.01
    },
    {
        scaleX: 1,
        scaleY: 1
    }], [{
        height: 85,
        width: 110,
        scaleX: 1,
        scaleY: 1
    },
    {
        height: 80,
        width: 115,
        scaleX: 1.04,
        scaleY: .94
    },
    {
        height: 75,
        width: 120,
        scaleX: 1.09,
        scaleY: .88
    },
    {
        height: 91,
        width: 100,
        scaleX: .9,
        scaleY: 1.07
    },
    {
        height: 85,
        width: 110,
        scaleX: 1,
        scaleY: 1
    }], [{
        height: 91,
        width: 100,
        scaleX: 1,
        scaleY: 1
    },
    {
        height: 86,
        width: 105,
        scaleX: 1.05,
        scaleY: .94
    },
    {
        height: 81,
        width: 110,
        scaleX: 1.1,
        scaleY: .89
    },
    {
        height: 101,
        width: 90,
        scaleX: .9,
        scaleY: 1.1
    },
    {
        height: 91,
        width: 100,
        scaleX: 1,
        scaleY: 1
    }]];
    var a = {
        Harmonics: "Harmonics"
    };
    var o = {
        501 : {
            netMaxIndex: 12,
            bulletAniMaxIndex: 4,
            id: 501
        },
        502 : {
            spineName: "Dixingfangzhou",
            bulletAniMaxIndex: 4,
            id: 502,
            netMaxIndex: 10
        },
        503 : {
            id: 503,
            bulletAniMaxIndex: 4,
            netMaxIndex: 6
        },
        504 : {
            bulletAniMaxIndex: 4,
            netMaxIndex: 8,
            id: 504
        },
        505 : {
            netMaxIndex: 10,
            id: 505,
            bulletAniMaxIndex: 4
        },
        506 : {
            id: 506,
            bulletAniMaxIndex: 4,
            netMaxIndex: 9
        },
        507 : {
            id: 507,
            netMaxIndex: 8,
            bulletAniMaxIndex: 4
        },
        508 : {
            id: 508,
            netMaxIndex: 10,
            bulletAniMaxIndex: 4
        },
        509 : {
            netMaxIndex: 10,
            id: 509,
            spineName: "Aochuangjiyuan",
            bulletAniMaxIndex: 4
        },
        510 : {
            netMaxIndex: 12,
            id: 510,
            bulletAniMaxIndex: 4
        },
        511 : {
            id: 511,
            netMaxIndex: 9,
            bulletAniMaxIndex: 4
        },
        512 : {
            bulletAniMaxIndex: 4,
            id: 512,
            netMaxIndex: 14
        },
        513 : {
            id: 513,
            bulletAniMaxIndex: 4,
            netMaxIndex: 9
        },
        514 : {
            id: 514,
            netMaxIndex: 11,
            bulletAniMaxIndex: 4
        },
        515 : {
            id: 515,
            bulletAniMaxIndex: 4,
            spineName: "Ememeiying",
            netMaxIndex: 14
        },
        516 : {
            id: 516,
            bulletAniMaxIndex: 4,
            netMaxIndex: 12
        },
        517 : {
            id: 517,
            bulletAniMaxIndex: 4,
            spineName: "Saibotaitan",
            netMaxIndex: 11
        },
        518 : {
            bulletAniMaxIndex: 4,
            id: 518,
            spineName: "Legoukuanghuan",
            netMaxIndex: 12
        },
        519 : {
            bulletAniMaxIndex: 4,
            id: 519,
            a_h: 0,
            spineName: "Xinniankuaile",
            netMaxIndex: 12
        },
        520 : {
            bulletAniMaxIndex: 4,
            id: 520,
            spineName: "Caishenjiadao",
            netMaxIndex: 10
        },
        521 : {
            bulletAniMaxIndex: 4,
            id: 521,
            spineName: "Bingxueqiyuan",
            netMaxIndex: 12
        },
        522 : {
            bulletAniMaxIndex: 4,
            id: 522,
            spineName: "Jinzhusongfu",
            netMaxIndex: 12
        },
        523 : {
            bulletAniMaxIndex: 4,
            id: 523,
            netMaxIndex: 9
        },
        524 : {
            bulletAniMaxIndex: 4,
            id: 524,
            netMaxIndex: 12
        },
        525 : {
            bulletAniMaxIndex: 4,
            spineName: "longtoupao",
            id: 525,
            netMaxIndex: 11
        },
        526 : {
            bulletAniMaxIndex: 4,
            spineName: "chixinjijia",
            id: 526,
            netMaxIndex: 11
        },
        527 : {
            bulletAniMaxIndex: 4,
            spineName: "milujingling_paotai",
            id: 527,
            netMaxIndex: 11,
            isNonePaoImg: true
        },
        Harmonics: {
            gunList: [{
                x: 67,
                y: 144,
                px: 35,
                py: 147,
                w: 71,
                h: 192
            },
            {
                x: 133,
                y: 144,
                px: 35,
                py: 147,
                w: 71,
                h: 192
            }],
            netMaxIndex: 5,
            bulletAniMaxIndex: 4,
            id: "Harmonics"
        }
    };
    var l = {};
    for (var e in o) {
        var t = o[e];
        var i = {
            id: t.id,
            net: "",
            bullet: "resource/skins/" + t.id + "/bullet.png",
            spineEft: "",
            bulletAni: ""
        };
        var s = [],
        r = [];
        if (t.spineName) {
            i["spineEft"] = "res/spine/" + t.spineName + "/" + t.spineName + ".sk"
        }
        if (t.bulletAniMaxIndex) {
            for (var h = 0; h <= t.bulletAniMaxIndex; h++) {
                s.push("resource/skins/" + t.id + "/pao2_0000" + h + ".png")
            }
            i["bulletAni"] = {
                2 : s
            }
        }
        if (t.netMaxIndex) {
            for (var h = 0; h <= t.netMaxIndex; h++) {
                r.push("resource/skins/" + t.id + "/net2_" + h + ".png")
            }
            i["net"] = r
        }
        l[e] = i
    }
    var u = function(e, t) {
        return 2
    };
    var c = function(e, t) {
        if (e == 2) {
            return 180 - t
        } else if (e == 3) {
            return 180 + t
        } else if (e == 4) {
            return 0 - t
        }
    };
    var f = function(e, t, i, n) {
        if (e) {
            var s = n + "pao_2";
            Laya.Animation.createFrames(e, s)
        }
        if (t) {
            var a = n + "pao_3";
            Laya.Animation.createFrames(t, a)
        }
    };
    function d() {
        d.super(this)
    }
    Laya.class(d, "CannonRole", Laya.Sprite, "");
    var g = d.prototype;
    var p = 5,
    _ = false;
    var m = 128,
    v = 256,
    y = m / 2,
    I = 200;
    g.init = function(t, e, i) {
        var n = this;
        this.bulletPerSec = Game.config.bullet.CountPerSec;
        this.huoFramePerSec = this.bulletPerSec * p;
        this.parent = t.parent;
        this.isSuperMatchScene = false;
        this.isMatchScene = false;
        this.matchBltNum = 0;
        this.matchScore = 0;
        this.paoBox = t.getChildByName("paoBox");
        this.viewUserPao = this.paoBox.getChildByName("pao");
        this.viewUserPaoTai = this.paoBox.getChildByName("paoTai");
        this.viewUserPaoTai2 = this.paoBox.getChildByName("paoTai2");
        this.paoImage = this.paoBox.getChildByName("paoImage");
        this.changeMulAni = t.getChildByName("changeMulAni");
        this.kbEft = this.viewUserPao.getChildByName("kbEft");
        this.goldIcon = e.getChildByName("goldIcon");
        this.quanIcon = e.getChildByName("quanIcon");
        this.isCurrPlayer = t.name == "currPlayer";
        this.paoHeight = 40;
        this.poChanIcon = t.getChildByName("poChanIcon");
        this.userInfoBox = e;
        this.userInfo = i;
        this.wrapBox = t;
        this.userId = i.UserId;
        this.localPos = i.Pos;
        this.cannonId = i.CannonId;
        this.nowUseSkin = i.CannonId;
        this.cannonMul = i.CannonMul;
        this.type = 2;
        this.bulletDataList = [];
        this.autoFire = false;
        this.autoFirePause = false;
        this.hadPoChan = false;
        this.locked = false;
        this.lockedFish = null;
        this.lockedCacheFishId = null;
        this.isFrenzy = false;
        this.lastFireTime = 0;
        this.longZhuMul = 1;
        this.textures = [];
        this.setAddBulletSpeed(false);
        this.isHarmonics = false;
        this.lockFishs = {};
        this.batterySaveId = 0;
        this.fc_money_1 = e.getChildByName("fc_money_1");
        this.fc_money_2 = e.getChildByName("fc_money_2");
        this.fc_cannonMul = t.getChildByName("fc_cannonMul");
        e.visible = true;
        var s = "resource/fishScene/icn_gold.png";
        var a = Game.state.get();
        if (a == Game.sceneConfig.sceneID.scene_Dragon_DaoDan) {
            s = "resource/fishScene/img_longjing.png"
        } else if (FishScene.isMatchScene() && !FishScene.isSuperMatchScene() || FishScene.isDTScene()) {
            s = "resource/fishScene/img_jifen.png"
        } else if (a == Game.sceneConfig.sceneID.scene_YouYiSai) {
            e.visible = false
        }
        this.goldIcon.skin = s;
        e.once(Laya.Event.UNDISPLAY, this, this.leave);
        this.wingInst = null;
        this.spineFX = null;
        var r = i.Nick;
        if (!r) {
            r = i.UserId
        } else {
            r = Utils.nickBylen(r)
        }
        if (e.getChildByName("userNameLabel")) {
            e.getChildByName("userNameLabel").text = r;
            this.userNickLabel = e.getChildByName("userNameLabel")
        }
        var o = e.getChildByName("sex");
        switch (i.Sex) {
        case 0:
            o.skin = "resource/fishScene/icn-women.png";
            o.visible = false;
            break;
        case 1:
            o.skin = "resource/fishScene/icn-men.png";
            o.visible = true;
            break;
        case 2:
            o.skin = "resource/fishScene/icn-women.png";
            o.visible = true;
            break;
        default:
            o.skin = "resource/fishScene/icn-women.png";
            o.visible = false;
            break
        }
        var l = e.getChildByName("userHead").getChildByName("userHeadImg"),
        h = e.getChildByName("vip_icon");
        this.userHeadImg = l;
        if (i.AvatarUrl) {
            l.skin = Utils.AvatarAddPrefix(i.AvatarUrl)
        } else {
            l.skin = "resource/head/" + i.AvatarID + ".png"
        }
        h.skin = "resource/fishScene/vip" + i.VipLevel + ".png";
        this.vipIcon = h;
        this.viewUserPao.visible = false;
        this.currTime = 0;
        this.prevFireReqTimer = 0;
        this.bltListPool = [];
        this.bulletIndex = -1;
        this.resetPoint();
        if (this.globalPoint) {
            this.paoPoint = this.wrapBox.parent.globalToLocal(this.globalPoint, true)
        }
        this.loopTime = 0;
        this.firing = false;
        if (this.isCurrPlayer) {
            Sound.playSound(Sound.RES.ChangeCannon.url, Sound.RES.ChangeCannon.vol);
            Laya.stage.on(Laya.Event.def_updateUserInfo, this, this.def_updateUserMoney);
            Laya.stage.on(Laya.Event.def_updateUserMoney, this, this.def_updateUserMoney)
        } else {
            this.viewUserPaoTai.on(Laya.Event.CLICK, this,
            function() {
                var e = t.name;
                if (e == "cannon2") {
                    FishScene.showUserIdUI(2)
                } else if (e == "cannon3") {
                    FishScene.showUserIdUI(3)
                } else if (e == "cannon4") {
                    FishScene.showUserIdUI(4)
                }
            })
        }
        this.updateSkin(i.CannonMul);
        if (this.viewUserPao instanceof Laya.Animation) {
            this.viewUserPao.interval = 40;
            this.viewUserPao.on(Laya.Event.COMPLETE, this,
            function() {
                if (!this.firing) {
                    this.viewUserPao.gotoAndStop(0)
                }
            })
        }
        if (FishScene.isMatchScene() || FishScene.isDTScene()) {
            if (FishScene.isSuperMatchScene()) {
                this.isSuperMatchScene = true;
                this.updateGold(i.Money1);
                this.updateJuan(i.Money2)
            }
            this.isMatchScene = true;
            this.matchBltNum = i.SM_Bullet;
            this.matchScore = i.SM_Score;
            this.updateMatchScore(i.SM_Score);
            if (this.isCurrPlayer) {
                this.updateMatchScore(i.SM_Score);
                Player.setMatchScore(i.SM_Score)
            }
            this.updateMatchBltNum(i.SM_Bullet)
        } else {
            var u = Game.state.get() == Game.sceneConfig.sceneID.scene_Dragon_DaoDan ? i.Money6: i.Money1;
            this.updateGold(u);
            this.updateJuan(i.Money2)
        }
        this.fc_cannonMul.value = i.CannonMul;
        this.addWing(i.WingId);
        if (this.isCurrPlayer) {
            QTTRedPkgT.updateCost(0);
            QTTRedPkgT.updateData({
                CostGold: QTTRedPkgT.getCostGold()
            })
        }
        this.refreshGunViewList()
    };
    g.refreshGunViewList = function() {
        if (!this.gunViewList) {
            this.gunViewList = []
        } else {
            for (var e = 0; e < this.gunViewList.length; e++) {
                var t = this.gunViewList[e];
                t.visible = false
            }
        }
        if (!this.gunImgs) {
            this.gunImgs = []
        } else {
            for (var e = 0; e < this.gunImgs.length; e++) {
                var t = this.gunImgs[e];
                t.visible = false
            }
        }
        if (!this.lockedLines) {
            this.lockedLines = []
        } else {
            for (var e = 0; e < this.lockedLines.length; e++) {
                this.lockedLines[e].visible = false
            }
        }
    };
    g.resetPoint = function() {
        if (this.displayedInStage) {
            this.globalPoint = Utils.localToGlobal(this.viewUserPao, false)
        }
    };
    g.changeSkinFun = function(e) {
        this.skinInfo = l[e];
        this.userInfo.CannonId = e;
        this.cannonId = e;
        if (this.isFrenzy) {
            return false
        }
        this.updateSkin()
    };
    g.def_updateUserMoney = function() {
        if (Game.state.get() == Game.sceneConfig.sceneID.scene_Dragon_DaoDan) {
            this.updateGold(Player.getDragon())
        } else {
            this.updateGold(Player.getGold())
        }
    };
    g.setLocalPos = function(s) {
        this.localPos = s;
        this.timer.frameOnce(2, this,
        function() {
            var e = Utils.localToGlobal(this.goldIcon);
            e = this.parent.globalToLocal(e, true);
            this.dropGoldPos = [e.x, e.y];
            var t = Utils.localToGlobal(this.quanIcon);
            t = this.parent.globalToLocal(t, true);
            this.dropQuanPos = [t.x, t.y];
            var i = Utils.localToGlobal(this.paoImage);
            i = this.parent.globalToLocal(i, true);
            if (s == 2 || s == 3) {
                i.y += 20
            } else {
                i.y -= 20
            }
            this.paoGloblePos = [i.x, i.y];
            var n = [i.x, i.y -= 160];
            if (s == 2 || s == 3) {
                n = [i.x, i.y += 300]
            }
            this.zhuanPanPos = n
        })
    };
    g.paoAct = function() {
        this.loopTime += this.timer.delta;
        var e = parseInt(this.loopTime / 1e3 * this.huoFramePerSec);
        e = (e + 1) % p;
        if (e == 0) {
            _ = false;
            this.loopTime = 0
        }
        var t = n[1];
        if (e > 0 && e < t.length) {
            var i = t[e];
            this.paoActIndex = e;
            this.viewUserPao.scale(i.scaleX, i.scaleY)
        }
    };
    g.paoAniActStart = function() {
        if (this.isHarmonics) {
            for (var e = 0; e < this.gunViewList.length; e++) {
                this.gunViewList[e].play(0, false, a.Harmonics + "pao_2", false);
                this.gunImgs[e].visible = false
            }
        } else {
            if (this.isFrenzy) {
                this.viewUserPao.play(0, false, "KuangbaoPaoAni")
            } else {
                if (this.skinInfo) {
                    this.viewUserPao.play(0, false, this.skinInfo.id + "pao_2", false)
                }
            }
            this.viewUserPao.visible = true;
            if (this.paoImage) {
                this.paoImage.visible = false
            }
        }
    };
    g.paoAniActStop = function() {
        this.timer.frameOnce(1, this,
        function() {
            if (this.viewUserPao.displayedInStage) {
                this.viewUserPao.visible = false;
                if (this.paoImage) {
                    this.paoImage.visible = true
                }
            }
        })
    };
    g.stopPaoAct = function() {
        this.loopTime = 0;
        if (this.paoActIndex != undefined && this.viewUserPao.displayedInStage) {
            var e = n[1];
            if (this.paoActIndex > 0 && this.paoActIndex < e.length - 1) {
                this.paoActIndex++;
                var t = e[this.paoActIndex];
                this.viewUserPao.scale(t.scaleX, t.scaleY);
                if (this.paoActIndex != 0 || this.paoActIndex != e.length - 1) {
                    this.timer.once(50, this, this.stopPaoAct)
                }
            }
        }
        if (this.viewUserPao instanceof Laya.Animation) {
            this.viewUserPao.gotoAndStop(0)
        }
    };
    g.updatePoChan = function(e) {
        if (Game.state.get() == Game.sceneConfig.sceneID.scene_Dragon_DaoDan && e || Game.state.get() == Game.sceneConfig.sceneID.scene_YouYiSai) {
            return
        }
        this.hadPoChan = e;
        this.poChanIcon.visible = e;
        if (this.isCurrPlayer) {
            if (Player.getAlms() > 0) {
                if (e) {
                    PoChanHandler()
                } else {
                    FishScene.updatePoChanBg(false)
                }
            } else {
                FishScene.updatePoChanBg(false)
            }
        }
    };
    g.fireJudge = function() {
        if (!Game.server.socket) {
            MsgToast.show("网络已断开");
            return false
        }
        if (Game.state.get() == Game.sceneConfig.sceneID.scene_YouYiSai) {
            return true
        }
        var e = false;
        if (this.isMatchScene) {
            var t = this.getMatchBltNum();
            var i = this.isFrenzy ? this.isSuperMatchScene ? 1 : 2 : 1;
            if (FishScene.isDTScene()) {
                i = 1
            }
            if (t >= i) {
                e = true
            } else {
                e = false;
                this.stop(true)
            }
            if (this.isSuperMatchScene) {
                if (this.isCurrPlayer) {
                    var n = Player.getGold() - this.cannonMul;
                    if (n >= 0) {
                        e = true
                    } else {
                        e = false;
                        if (!this.hadPoChan) {
                            this.updatePoChan(true)
                        } else {
                            this.poChanHandler()
                        }
                    }
                }
            }
        } else {
            if (this.hadPoChan) {
                this.poChanHandler();
                return false
            }
            var s = Player.getGold();
            if (Game.state.get() == Game.sceneConfig.sceneID.scene_Dragon_DaoDan) {
                s = Player.getDragon()
            }
            var n = s - this.cannonMul;
            if (n >= 0 && s) {
                e = true
            } else {
                if (s > 0) {
                    FishScene.updateCannonMul(false)
                }
                e = false;
                if (Game.state.get() == Game.sceneConfig.sceneID.scene_Dragon_DaoDan) {
                    MsgToast.show(GameConfig.ErrorMsg.clientErrorMsg(10081))
                }
                if (!this.hadPoChan) {
                    this.updatePoChan(true)
                }
            }
        }
        if (this.bltListPool.length >= Game.config.bullet.PoolMaxNum) {
            e = false;
            MsgToast.show(GameConfig.ErrorMsg.getMsgById(112));
            if (this.autoFire) {
                this.autoFirePause = true
            }
        }
        if (this.isCurrPlayer) {
            var a = Player.getVipLevel();
            var r = GameConfig.getVipInfoByLevel(a);
            if (this.cannonMul > r.Max_Mul && !FishScene.isDTScene() && e) {
                e = false;
                var o = GameConfig.getVipInfoByMul(this.cannonMul);
                if (o) {
                    var i = MessageBox.show("贵族" + o.VipLevel + "才可以使用此炮倍!");
                    i.submitCall = function() {
                        VipInfo.show()
                    }
                }
            }
            if (!this.skinInfo) {
                e = false
            }
        }
        return e
    };
    g.fire = function(e) {
        if (e) {
            this.fireLoop()
        } else {
            if (this.firing) {
                return
            }
            this.firing = true;
            this.timer.frameLoop(2, this, this.fireLoop)
        }
    };
    g.stop = function(e) {
        if (this.autoFire && !e || !this.firing) {
            return
        }
        this.timer.clear(this, this.fireLoop);
        this.firing = false;
        this.autoFire = false;
        if (this.isCurrPlayer && !this.autoFirePause) {
            FishScene.updateAutoFireUI(false)
        }
        this.viewUserPao.visible = false;
        if (this.skinInfo) {
            this.paoImage.skin = "resource/skins/" + (this.isFrenzy ? "kuangBao": this.skinInfo.id) + "/pao2_00000.png"
        }
        this.paoImage.visible = !this.isHarmonics;
        this.playingShotSound = false;
        this.prevFireReqTimer = 0
    };
    g.updateAutoFire = function(e) {
        if (this.isCurrPlayer) {
            this.autoFire = e == undefined ? !this.autoFire: e;
            if (this.autoFire) {
                this.fire()
            } else {
                if (this.locked) {} else {
                    this.stop()
                }
            }
            FishScene.updateAutoFireUI(this.autoFire)
        }
    };
    g.updatePaoRotation = function() {
        var e = Laya.stage.mouseX;
        var t = Laya.stage.mouseY;
        var i = Utils.getPaoAngle({
            x: this.globalPoint.x,
            y: this.globalPoint.y
        },
        {
            x: e,
            y: t
        },
        false);
        i = Math.max( - 85, i);
        i = Math.min(i, 85);
        if (this.paoBox) {
            this.paoBox.rotation = i;
            if (this.paoBox.getChildByName("dragonBallEff")) {
                this.paoBox.getChildByName("dragonBallEff")._childs[0].rotation = -i;
                this.paoBox.getChildByName("dragonBallEff")._childs[1].rotation = -i
            }
        } else {
            this.viewUserPao.rotation = i;
            if (this.paoImage) {
                this.paoImage.rotation = this.viewUserPao.rotation
            }
        }
    };
    g.fireLoop = function() {
        if (!this.viewUserPao.displayedInStage) {
            this.stop(true);
            return
        }
        if (this.isCurrPlayer) {
            if (!this.fireJudge()) {
                this.stop(true);
                return
            }
            var e = Utils.getMouseXY();
            var t = Game.UIWidth,
            i = Game.UIHeight;
            if ((e.x >= t || e.x <= 0 || e.y <= 0 || e.y >= i) && !this.locked && !this.autoFire && !this.isHarmonics) {
                this.stop();
                return
            }
            if (this.locked && !this.lockedFish) {
                return
            }
        }
        this.currTime = this.timer.currTimer;
        if (this.isCurrPlayer) {
            if (!this.locked && !this.isHarmonics) {
                if (this.autoFire) {
                    if (this.MouseEventTarget == "fishBox") {
                        this.updatePaoRotation()
                    } else {}
                } else {
                    if (this.MouseEventTarget == "fishBox") {
                        this.updatePaoRotation()
                    }
                }
            }
        }
        if (this.isCurrPlayer) {
            if (this.currTime - this.prevFireReqTimer >= 1e3 / this.bulletPerSec) {
                this.prevFireReqTimer = this.currTime;
                if (this.isHarmonics) {
                    for (var n = 0; n < 2; n++) {
                        this.requestFire(n)
                    }
                } else {
                    this.requestFire()
                }
            } else {
                return
            }
        } else {
            if (this.bulletDataList.length > 0) {
                this.paoAniActStart();
                var s = this.bulletDataList.shift();
                var a = c(this.localPos, s.angle);
                var r = s.IsFrenzy;
                if (!s.LongZhuMul) s.LongZhuMul = 1;
                if (this.longZhuMul != s.LongZhuMul) {
                    this.longZhuMul = s.LongZhuMul;
                    if (this.longZhuMul > 1) {
                        WinUtils.getSaveUI(FishScene.SKIN_NAME).dragonBall.showDragonBallAnim(this.paoBox, this.userId, this.localPos == 1 || this.localPos == 4)
                    } else {
                        WinUtils.getSaveUI(FishScene.SKIN_NAME).dragonBall.clearDragonBallAnim(this.userId)
                    }
                }
                if (this.isFrenzy != r) {
                    this.setFrenzy(r)
                }
                var o = s.lockFishInst;
                if (this.isHarmonics != s.IsPhantom) {
                    this.setHarmonics(s.IsPhantom);
                    if (s.IsPhantom && s.BatteryId > -1) {
                        this.lockFishs[s.BatteryId] = o;
                        this.setLockFishs(this.lockFishs)
                    }
                }
                if (this.addBulletSpeed != s.IsAccelerate) {
                    this.setAddBulletSpeed(s.IsAccelerate)
                }
                if (o && o.displayedInStage) {
                    if (this.isHarmonics) {
                        if (s.BatteryId > -1) this.lockFishs[s.BatteryId] = o;
                        o.setLocked(this.userId, true)
                    } else {
                        this.locked = true;
                        this.setLockedTarget(s.lockFishInst, s.lockLightWrap)
                    }
                    this.addBulletToView(undefined, s.BatteryId)
                } else {
                    if (this.paoBox) {
                        var l = Math.abs(a - this.paoBox.rotation);
                        if (!this.isCurrPlayer && l > 5) {
                            if (this.wingInst) {
                                this.wingInst.stop();
                                this.timer.once(500, this,
                                function() {
                                    this.wingInst.play("animation", true)
                                })
                            }
                        }
                        this.paoBox.rotation = a;
                        if (this.paoBox.getChildByName("dragonBallEff")) {
                            this.paoBox.getChildByName("dragonBallEff")._childs[0].rotation = -a;
                            this.paoBox.getChildByName("dragonBallEff")._childs[1].rotation = -a
                        }
                    } else {
                        this.viewUserPao.rotation = a;
                        if (this.paoImage) {
                            this.paoImage.rotation = this.viewUserPao.rotation
                        }
                    }
                    if (this.locked) {
                        this.setLockedTarget(null)
                    }
                    this.addBulletToView()
                }
            } else {}
        }
    };
    g.addBulletToView = function(e, t) {
        if (this.isMatchScene) {
            var i = this.getMatchBltNum();
            var n = this.isFrenzy ? this.isSuperMatchScene ? 1 : 2 : 1;
            if (FishScene.isDTScene()) {
                n = 1
            }
            if (i >= n) {
                this.updateMatchBltNum(i - n)
            } else {
                this.updateMatchBltNum(0)
            }
            if (FishScene.isDTScene() && this.isCurrPlayer) {
                var s = Player.getMatchScore();
                s = s - (this.isFrenzy ? this.cannonMul * 2 : this.cannonMul);
                s = s < 0 ? 0 : s;
                Player.setMatchScore(s);
                this.updateMatchScore(s)
            }
        }
        if (this.isCurrPlayer) {
            var a = Player.showGold();
            if (Game.state.get() == Game.sceneConfig.sceneID.scene_Dragon_DaoDan) {
                a = Player.showDragon()
            }
            var r = a - (this.isFrenzy ? this.cannonMul * 2 : this.cannonMul);
            if (r >= 0) {
                Sound.playFire()
            }
        } else {
            if (this.isMatchScene) {} else {
                var r = this.fc_money_1.value * 1 - (this.isFrenzy ? this.cannonMul * 2 : this.cannonMul);
                r = r < 0 ? 0 : r;
                this.updateGold(r);
                var o = FishScene.getCannonMulList();
                if (o.indexOf(this.cannonMul) == 0 && r < (this.isFrenzy ? this.cannonMul * 2 : this.cannonMul)) {
                    this.updatePoChan(true);
                    return
                }
            }
        }
        if (e == undefined) {
            this.bulletIndex++;
            e = this.bulletIndex
        }
        var l = Bullet.create(null, this, e, t);
        if (t != -1) {
            l.targetId = this.lockFishs[t] ? this.lockFishs[t].id: null;
            l.targetFish = this.lockFishs[t]
        }
        l.once(Laya.Event.UNDISPLAY, this,
        function() {
            this.bltListPool.removeByValue(l);
            l._InScene = false;
            if (this.bltListPool.length < Game.config.bullet.PoolMaxNum && this.autoFirePause) {
                this.autoFirePause = false;
                this.updateAutoFire(true)
            }
        });
        this.bltListPool.push(l);
        FishScene.addBulletToView(l)
    };
    g.requestFire = function(e) {
        if (e == undefined) e = -1;
        if (!this.lockFishs[e] && this.isHarmonics) return;
        this.paoAniActStart();
        this.bulletIndex++;
        var t = 0;
        if (this.isHarmonics) {
            var i = this.lockFishs[e];
            if (i && i.isLocked && !i.destroyed && i.displayedInStage && i.visible) {
                t = i.id
            }
        } else {
            if (this.locked && this.lockedFish && this.lockedFish.visible && !this.lockedFish.destroyed) {
                t = this.lockedFish.id
            }
        }
        Request.FireReq(this.bulletIndex, this.paoBox.rotation, this.cannonMul, t, this.isFrenzy, this.longZhuMul, e, this.addBulletSpeed, this.isHarmonics);
        QTTRedPkgT.updateCost(this.cannonMul, this.isFrenzy);
        this.addBulletToView(this.bulletIndex, e)
    };
    g.removeBltById = function(e) {
        for (var t = 0; t < this.bltListPool.length; t++) {
            var i = this.bltListPool[t];
            if (i.id == e) {
                i.poolRecover();
                break
            }
        }
    };
    g.changeGun = function(e) {
        var t = o[e].gunList;
        if (!t) return;
        for (var i = 0; i < t.length; i++) {
            var n = t[i];
            var s = this.gunViewList[i] ? this.gunViewList[i] : Laya.Pool.getItemByClass("AnimationPao", Laya.Animation);
            s.width = n.w;
            s.height = n.h;
            s.x = n.x;
            s.y = n.y;
            s.pivotX = s.width / 2;
            s.pivotY = n.py;
            s.visible = true;
            if (!this.gunViewList[i]) this.gunViewList[i] = s;
            var a = this.gunImgs[i] ? this.gunImgs[i] : new Laya.Image;
            a.width = n.w;
            a.height = n.h;
            a.x = n.x;
            a.y = n.y;
            a.pivotX = s.width / 2;
            a.pivotY = n.py;
            a.visible = true;
            if (!this.gunImgs[i]) this.gunImgs[i] = a;
            this.paoBox.addChild(a);
            this.paoBox.addChild(s)
        }
    };
    g.updateSkinFn = function() {
        if (this.viewUserPao.displayedInStage) {
            this.type = u(FishScene.getSceneId(), this.cannonMul);
            if (this.viewUserPao instanceof Laya.Animation) {
                var e = this.userInfo.CannonId || "501";
                this.skinInfo = l[e];
                this.skinInfo = l[this.userInfo.CannonId];
                var t = this.isFrenzy ? "kuangBao": this.skinInfo.id;
                var i = o[e].isNonePaoImg;
                this.paoImage.skin = "";
                if (!i) {
                    this.viewUserPaoTai2.skin = "resource/skins/" + t + "/paotai_2.png"
                } else {
                    this.viewUserPaoTai2.skin = ""
                }
                if (this.isHarmonics) {
                    this.paoImage.skin = "";
                    this.viewUserPaoTai.skin = "";
                    this.viewUserPao.visible = false;
                    this.changeGun(t);
                    this.viewUserPaoTai2.y = 185;
                    this.paoImage.visible = false
                } else {
                    this.paoImage.skin = "resource/skins/" + t + "/pao2_00000.png";
                    if (!i) {
                        this.viewUserPaoTai.skin = "resource/skins/" + t + "/paotai.png"
                    } else {
                        this.viewUserPaoTai.skin = ""
                    }
                    for (var n = 0; n < this.gunViewList.length; n++) {
                        this.gunViewList[n].visible = false;
                        this.gunImgs[n].visible = false
                    }
                    this.viewUserPao.visible = true;
                    this.viewUserPaoTai2.y = 201;
                    this.paoImage.visible = true
                }
                this.viewUserPao.visible = false;
                var s = null;
                if (!this.isFrenzy) {
                    if (this.isHarmonics) {
                        f(l[t].bulletAni["2"], undefined, undefined, t);
                        var a = "net_" + l[t].id;
                        Laya.Animation.createFrames(l[t].net, a)
                    } else {
                        f(this.skinInfo.bulletAni["2"], this.skinInfo.bulletAni["3"], this.skinInfo.net, this.skinInfo.id)
                    }
                    s = l[t].spineEft
                } else {
                    s = "res/spine/kuangBao/Kuangbaozhixin.sk"
                }
                var r = this;
                if (s) {
                    Utils.getTempletByUrl(s,
                    function(e) {
                        if (r) {
                            if (r.spineFX) {
                                r.spineFX.removeSelf()
                            }
                            r.spineFX = e;
                            var t = r.paoBox.pivotX,
                            i = r.paoBox.pivotY;
                            e.pos(t, r.skinInfo.id == 502 ? i: i - 20);
                            r.paoBox.addChild(e);
                            if (r.wingInst) {
                                r.paoBox.addChild(r.wingInst)
                            }
                        }
                    });
                    r.viewUserPaoTai2.visible = false
                } else {
                    r.viewUserPaoTai2.visible = true;
                    if (this.spineFX) {
                        this.spineFX.removeSelf();
                        this.spineFX = null
                    }
                }
            }
            if (this.isCurrPlayer) {
                if (this.changeMulAni) {
                    this.changeMulAni.visible = true;
                    this.changeMulAni.once(Laya.Event.COMPLETE, this,
                    function() {
                        this.changeMulAni.visible = false
                    });
                    this.changeMulAni.play(0, false)
                }
            }
        }
    };
    g.updateSkin = function() {
        var e = this.userInfo.CannonId || "501";
        var t = this;
        Resource.load(["res/atlas/resource/skins/" + e + ".atlas"],
        function() {
            t.updateSkinFn()
        })
    };
    g.updateCannonMul = function(e) {
        this.cannonMul = e;
        if (this.isCurrPlayer) {
            this.longZhuMul = WinUtils.getSaveUI(FishScene.SKIN_NAME).dragonBall.getNowUseMu();
            this.fc_cannonMul.value = e * this.longZhuMul
        } else {
            this.fc_cannonMul.value = e
        }
        if (this.isCurrPlayer) {
            var t = Laya.TimeLine.to(this.fc_cannonMul, {
                scaleX: 1.4,
                scaleY: 1.4
            },
            100).to(this.fc_cannonMul, {
                scaleX: 1,
                scaleY: 1
            },
            100);
            t.play(0, false);
            var i = Laya.TimeLine.to(this.viewUserPao, {
                scaleX: 1.08,
                scaleY: 1.08
            },
            100).to(this.viewUserPao, {
                scaleX: 1.2,
                scaleY: 1.2
            },
            60).to(this.viewUserPao, {
                scaleX: 1,
                scaleY: 1
            },
            100);
            i.play(0, false);
            Sound.playSound(Sound.RES.ChangeCannon.url, Sound.RES.ChangeCannon.vol);
            QTTRedPkgT.updateData({
                CostGold: QTTRedPkgT.getCostGold()
            });
            if (this.isHarmonics && !this.firing) {
                this.fire()
            }
        }
    };
    g.poChanHandler = function() {
        PoChanHandler()
    };
    g.updateGold = function(e) {
        if (this.isCurrPlayer) {
            if (this.isMatchScene && !this.isSuperMatchScene) {
                return
            }
        } else {
            if (this.isMatchScene) {
                return
            }
        }
        if (this.fc_money_1.displayedInStage) {
            if (e > this.fc_money_1.value) {
                var t = Laya.TimeLine.to(this.fc_money_1, {
                    scaleX: 1.4,
                    scaleY: 1.4
                },
                60).to(this.fc_money_1, {
                    scaleX: 1.2,
                    scaleY: 1.2
                },
                100);
                t.play(0, false)
            }
            this.fc_money_1.value = e;
            this.updatePoChan(!e)
        }
        if (this.isCurrPlayer) {
            UpgradeHint.show(e)
        }
    };
    g.updateJuan = function(e) {
        if (this.isCurrPlayer) {
            if (this.isMatchScene && !this.isSuperMatchScene) {
                return
            }
        } else {
            if (this.isMatchScene) {
                return
            }
        }
        if (this.fc_money_2.displayedInStage) {
            var t = false;
            if (e > this.fc_money_2.value) {
                var i = Laya.TimeLine.to(this.fc_money_2, {
                    scaleX: 1.4,
                    scaleY: 1.4
                },
                60).to(this.fc_money_2, {
                    scaleX: 1.2,
                    scaleY: 1.2
                },
                100);
                i.play(0, false);
                t = true
            }
            this.fc_money_2.value = e;
            if (t && this.isCurrPlayer) {
                FishScene.getFishScene().showJiangQuanTip()
            }
        }
    };
    g.updateMatchScore = function(e) {
        if (this.isCurrPlayer) {
            FishScene.updateMatchScore(e);
            if (this.isMatchScene && !this.isSuperMatchScene) {
                this.fc_money_1.value = e
            }
        } else {
            this.fc_money_1.value = e
        }
    };
    g.updateMatchBltNum = function(e, t) {
        if (t) {
            var i = this.bltListPool.length;
            if (e >= i) {
                e = e - i
            }
        }
        this.matchBltNum = e;
        if (this.isCurrPlayer) {
            FishScene.updateMatchBltNum(e);
            if (this.isMatchScene && !this.isSuperMatchScene) {
                this.fc_money_2.value = e
            }
        } else {
            this.fc_money_2.value = e
        }
    };
    g.getMatchBltNum = function() {
        return this.matchBltNum
    };
    g.leave = function() {
        this.wrapBox.visible = false;
        this.userInfoBox.visible = false;
        if (this.kbEft && this.kbEft instanceof Laya.Animation) {
            this.kbEft.stop();
            this.kbEft.gotoAndStop(0);
            this.kbEft.visible = false
        }
        if (this.lockedFish && this.lockedFish.displayedInStage) {
            this.lockedFish.setLocked(this.userId, false);
            this.lostLockedTarget()
        }
        this.timer.clearAll(this);
        if (this.wingInst) {
            this.wingInst.removeSelf()
        }
        if (this.spineFX) {
            this.spineFX.removeSelf()
        }
        Laya.stage.off(Laya.Event.def_updateUserInfo, this, this.def_updateUserMoney);
        Laya.stage.off(Laya.Event.def_updateUserMoney, this, this.def_updateUserMoney);
        WinUtils.getSaveUI(FishScene.SKIN_NAME).dragonBall.clearDragonBallAnim(this.userId);
        this.refreshGunViewList()
    };
    g.showSuoDingAni = function(e, t) {
        var i = Laya.Pool.getItemByClass("zhunXingImg", Laya.Image);
        i.skin = "resource/fishScene/img_zhunxing.png";
        var n = i.rotation;
        i.visible = false;
        i.size(70, 70);
        i.pivot(35, 35);
        i.scale(5, 5);
        i.pos(t.getXY().x, t.getXY().y);
        if (this.updateSuoDingAniPos) i.timer.clear(this, this.updateSuoDingAniPos);
        Laya.Tween.clearAll(i);
        Laya.Tween.to(i, {
            scaleX: 1,
            scaleY: 1,
            rotation: n + 360
        },
        600, null, Laya.Handler.create(this,
        function() {
            i.timer.clear(this, this.updateSuoDingAniPos);
            i.removeSelf();
            Laya.Pool.recover("zhunXingImg", i)
        }));
        e.addChild(i);
        this.updateSuoDingAniPos = function() {
            if (i && t) {
                if (!i.parent) {
                    e.addChild(i)
                }
                i.visible = true;
                i.pos(t.getXY().x, t.getXY().y)
            }
        };
        i.timer.frameLoop(1, this, this.updateSuoDingAniPos)
    };
    g.createLockedLine = function(e, t) {
        var i = new Laya.Sprite;
        var n = Laya.loader.getRes("resource/fishScene/miaozhun.png");
        if (t != undefined) {
            this.textures[t] = n
        } else {
            this.texture = n
        }
        i.pivotX = 14.5;
        var s = {
            x: this.paoPoint.x,
            y: this.paoPoint.y
        };
        i.pos(s.x, s.y);
        i.graphics.fillTexture(n, 0, 0, 29, 29, "repeat");
        i.visible = false;
        i.zOrder = 4;
        i.scale(.7, .7);
        if (t != undefined) {
            this.lockedLines[t] = i
        } else {
            this.lockedLine = i
        }
        e.addChild(i);
        e.visible = true
    };
    g.lostLockedTarget = function() {
        if (!this.isCurrPlayer) {
            this.locked = false
        }
        this.lockedFish = null;
        if (!this.autoFire) {
            this.stop()
        }
        if (this.lockedLine) {
            this.lockedLine.visible = false
        }
        this.timer.clear(this, this.updateAimLine)
    };
    g.updateAimLine2 = function(e) {
        for (var t = 0; t < 2; t++) {
            var i = t;
            var n = this.lockFishs[t];
            if (n && !n.destroyed && n.displayedInStage && n.visible) {
                if (!this.lockedLines[i]) {
                    this.createLockedLine(e, i)
                } else {}
                if (!n.displayedInStage || !n.alive || !n.visible) {
                    this.lockedLines[i].visible = false;
                    continue
                }
                var s = n.getXY();
                var a = s.x,
                r = s.y;
                var o = Laya.Pool.getItemByClass("rectA", Laya.Rectangle);
                o.width = Game.UIWidth;
                o.height = Game.UIHeight;
                o.x = 0;
                o.y = 0;
                if (!Utils.InRange({
                    x: a,
                    y: r
                },
                o)) {
                    this.lockedLines[i].visible = false;
                    Laya.Pool.recover("rectA", o);
                    continue
                }
                Laya.Pool.recover("rectA", o);
                var l = 29;
                var h = Laya.Pool.getItemByClass("pontA", Laya.Point);
                var u = {
                    x: this.paoPoint.x,
                    y: this.paoPoint.y
                };
                if (this.localPos == 1 || this.localPos == 4) {
                    if (this.gunViewList[i]) {
                        this.lockedLines[i].x = u.x + (this.gunViewList[i].x - this.viewUserPao.x);
                        this.lockedLines[i].y = u.y + (this.gunViewList[i].y - this.viewUserPao.y)
                    }
                } else {
                    if (this.gunViewList[i]) {
                        this.lockedLines[i].x = u.x - (this.gunViewList[i].x - this.viewUserPao.x);
                        this.lockedLines[i].y = u.y - (this.gunViewList[i].y - this.viewUserPao.y)
                    }
                }
                this.lockedLines[i].visible = true;
                h.x = this.lockedLines[i].x;
                h.y = this.lockedLines[i].y;
                var c = h.distance(a, r);
                var f = Utils.getPaoAngle(h, {
                    x: a,
                    y: r
                });
                var d = parseInt(c / l / this.lockedLines[i].scaleX);
                if (this.paoBox) {
                    if (this.localPos == 1 || this.localPos == 4) {
                        this.paoBox.rotation = 0;
                        if (this.gunViewList[t]) this.gunViewList[t].rotation = f
                    } else {
                        this.paoBox.rotation = 180;
                        if (this.gunViewList[t]) this.gunViewList[t].rotation = f + 180
                    }
                }
                if (this.localPos == 1 || this.localPos == 2) {
                    f = f + 180
                } else {
                    f = f - 180
                }
                this.lockedLines[i].rotation = f;
                this.lockedLines[i].graphics.clear();
                if (e) {
                    e.addChild(this.lockedLines[i])
                }
                this.lockedLines[i].graphics.fillTexture(this.textures[i], 0, 0, 29, l * d, "repeat");
                this.lockedLines[i].visible = true
            } else {
                if (this.lockedLines[t]) this.lockedLines[t].visible = false
            }
        }
    };
    g.updateAimLine = function(e) {
        if (this.lockedFish) {
            if (!this.texture) {
                this.createLockedLine(e)
            }
            if (!this.lockedFish.displayedInStage || !this.lockedFish.alive || !this.lockedFish.visible) {
                this.lostLockedTarget();
                return
            }
            var t = this.lockedFish.getXY();
            var i = t.x,
            n = t.y;
            var s = Laya.Pool.getItemByClass("rectA", Laya.Rectangle);
            s.width = Game.UIWidth;
            s.height = Game.UIHeight;
            s.x = 0;
            s.y = 0;
            if (!Utils.InRange({
                x: i,
                y: n
            },
            s)) {
                this.lostLockedTarget();
                Laya.Pool.recover("rectA", s);
                return
            }
            Laya.Pool.recover("rectA", s);
            var a = 29;
            var r = Laya.Pool.getItemByClass("pontA", Laya.Point);
            r.x = this.lockedLine.x;
            r.y = this.lockedLine.y;
            var o = r.distance(i, n);
            var l = Utils.getPaoAngle(r, {
                x: i,
                y: n
            });
            var h = parseInt(o / a / this.lockedLine.scaleX);
            if (this.paoBox) {
                this.paoBox.rotation = l
            } else {
                this.viewUserPao.rotation = l;
                if (this.paoImage) {
                    this.paoImage.rotation = this.viewUserPao.rotation
                }
            }
            if (this.localPos == 1 || this.localPos == 2) {
                l = l + 180
            } else {
                l = l - 180
            }
            this.lockedLine.rotation = l;
            this.lockedLine.graphics.clear();
            if (e) {
                e.addChild(this.lockedLine)
            }
            this.lockedLine.graphics.fillTexture(this.texture, 0, 0, 29, a * h, "repeat");
            this.lockedLine.visible = true
        } else {
            this.lostLockedTarget()
        }
    };
    g.setLockedTarget = function(e, t) {
        if (this.lockedFish && this.lockedFish.displayedInStage) {
            this.lockedFish.setLocked(this.userId, false)
        }
        this.lockedFish = e;
        if (e) {
            this.lockedCacheFishId = e.id
        } else {
            this.lostLockedTarget()
        }
        if (this.isCurrPlayer) {
            if (e && t) {
                e.setLocked(this.userId, true);
                this.showSuoDingAni(t, e);
                this.timer.clear(this, this.updateAimLine);
                this.timer.frameLoop(1, this, this.updateAimLine, [t]);
                this.fire()
            }
        } else if (e) {
            e.setLocked(this.userId, true);
            this.updateAimLine(t);
            this.timer.clear(this, this.updateAimLine);
            this.timer.frameLoop(1, this, this.updateAimLine, [t])
        }
    };
    g.ChangeFrenzyState = function(e) {
        if (this.viewUserPao && this.viewUserPao.displayedInStage) {
            if (e) {
                this.updateSkin(this.cannonMul);
                if (this.kbEft) {
                    this.kbEft.visible = true;
                    this.kbEft.play(0, true)
                }
                if (this.addSpeedAni && this.addBulletSpeed) this.paoBox.addChild(this.addSpeedAni)
            } else {
                this.updateSkin(this.cannonMul);
                this.viewUserPao.visible = false;
                if (this.kbEft) {
                    this.kbEft.stop();
                    this.kbEft.gotoAndStop(0);
                    this.kbEft.visible = false
                }
                if (this.spineFX) {
                    this.spineFX.visible = true
                }
            }
        }
    };
    g.setLocked = function(e) {
        this.locked = e
    };
    g.setFrenzy = function(e) {
        this.isFrenzy = e;
        this.ChangeFrenzyState(e)
    };
    g.setAddBulletSpeed = function(e) {
        this.addBulletSpeed = e;
        this.bulletPerSec = e ? Game.config.bullet.AddSppedCountPerSec: Game.config.bullet.CountPerSec;
        this.huoFramePerSec = this.bulletPerSec * p;
        if (!this.addSpeedAni) {
            this.addSpeedAni = new Laya.Animation;
            this.addSpeedAni.x = -26;
            this.addSpeedAni.y = 0;
            this.addSpeedAni.width = 221;
            this.addSpeedAni.height = 221;
            this.addSpeedAni.interval = 60
        }
        this.addSpeedAni.visible = e;
        this.paoBox.addChild(this.addSpeedAni);
        if (!e) {
            this.addSpeedAni.stop()
        } else {
            this.addSpeedAni.blendMode = "lighter";
            this.addSpeedAni.play(0, true, "battery_addSpeed")
        }
    };
    g.setHarmonics = function(e) {
        this.isHarmonics = e;
        if (e) {
            this.changeSkinFun(a.Harmonics);
            if (this.isCurrPlayer) this.fire()
        } else {
            for (var t = 0; t < this.lockedLines.length; t++) {
                this.lockedLines[t].visible = false
            }
            var i = Object.keys(this.lockFishs);
            for (var t = 0; t < i.length; t++) {
                var n = i[t];
                var s = this.lockFishs[n];
                if (s && !s.destroyed && s.displayedInStage && s.visible) this.lockFishs[n].setLocked(this.userId, false)
            }
            this.lockFishs = {};
            this.timer.clear(this, this.updateAimLine2);
            this.changeSkinFun(this.nowUseSkin)
        }
    };
    g.setLockFishs = function(e) {
        this.lockFishs = e;
        var t = Object.keys(this.lockFishs);
        if (this.isCurrPlayer) for (var i = 0; i < t.length; i++) {
            var n = t[i];
            this.showLine(FishScene.getFishScene().sockLightBox, this.lockFishs[n], i)
        }
        this.timer.clear(this, this.updateAimLine2);
        this.timer.frameLoop(1, this, this.updateAimLine2, [FishScene.getFishScene().sockLightBox]);
        if (this.isHarmonics && !this.firing) {
            this.fire()
        }
    };
    g.updateLockFishs = function(e) {
        if (this.lockFishs[this.batterySaveId]) this.lockFishs[this.batterySaveId].setLocked(this.userId, false);
        this.lockFishs[this.batterySaveId] = e;
        this.batterySaveId = (this.batterySaveId + 1) % 2;
        if (e && !e.destroyed && e.displayedInStage) {
            e.setLocked(this.userId, true)
        }
    };
    g.showLine = function(e, t) {
        if (t && !t.destroyed && t.displayedInStage && t.visible && e) {
            t.setLocked(this.userId, true);
            if (this.isCurrPlayer) this.showSuoDingAni(e, t)
        }
    };
    g.setLastFireTime = function(e) {
        this.lastFireTime = e
    };
    g.getLastFireTime = function() {
        return this.lastFireTime
    };
    g.getJuan = function() {
        return this.fc_money_2.value * 1
    };
    g.ReportVipUp = function(e) {
        if (this.vipIcon) {
            this.vipIcon.skin = "resource/fishScene/vip" + e + ".png"
        }
    };
    g.getCannonId = function() {
        return this.nowUseSkin || 0
    };
    g.getTurntableId = function() {
        var e = GameConfig.Item.getItemInfoById(this.nowUseSkin);
        if (e) {
            return e.TurntableId
        }
        return 0
    };
    g.addWing = function(e) {
        if (e >= Game.item.Wing_601 && e <= Game.item.Wing_614) {
            var n = this;
            Utils.getTempletByUrl("res/spine/wing_" + e + "/wing_" + e + ".sk",
            function(e) {
                if (n) {
                    if (n.wingInst) {
                        n.wingInst.removeSelf()
                    }
                    n.wingInst = e;
                    var t = n.paoBox.pivotX,
                    i = n.paoBox.pivotY;
                    e.pos(t, i - 20);
                    n.paoBox.addChild(e)
                }
            })
        } else {
            console.log("缺少翅膀配置:" + e)
        }
    };
    g.updateWxInfo = function() {
        if (this.userHeadImg) {
            this.userHeadImg.skin = Player.getAvatarUrl()
        }
        if (this.userNickLabel) {
            this.userNickLabel.text = Utils.nickBylen(Player.getNick())
        }
    };
    return {
        createCannon: function(e, t, i) {
            var n = new d;
            n.init(e, t, i);
            return n
        },
        createFramesById: function(e, t) {
            var i = l[e];
            if (i) {
                var n = Laya.Animation.framesMap;
                var s = "net_" + i.id;
                if (n[s]) {
                    t && t()
                } else {
                    Resource.checkLoaded = false;
                    Resource.load(["res/atlas/resource/skins/" + e + ".atlas"],
                    function() {
                        f(i.bulletAni["2"]);
                        Laya.Animation.createFrames(i.net, s);
                        t && t()
                    })
                }
            } else {
                t && t()
            }
        },
        createFrames: function() {
            Laya.Animation.createFrames(["resource/skins/kuangBao/pao2_00000.png", "resource/skins/kuangBao/pao2_00001.png", "resource/skins/kuangBao/pao2_00002.png", "resource/skins/kuangBao/pao2_00003.png", "resource/skins/kuangBao/pao2_00004.png"], "KuangbaoPaoAni");
            Laya.Animation.createFrames(["resource/skins/kuangBao/00.png", "resource/skins/kuangBao/01.png", "resource/skins/kuangBao/02.png", "resource/skins/kuangBao/03.png", "resource/skins/kuangBao/04.png", "resource/skins/kuangBao/05.png", "resource/skins/kuangBao/06.png", "resource/skins/kuangBao/07.png", "resource/skins/kuangBao/08.png"], "netAni_kb");
            Resource.load(["res/atlas/resource/skins/addSpeed.atlas"],
            function() {
                var e = [];
                for (var t = 1; t < 11; t++) {
                    e.push("resource/skins/addSpeed/speed_" + t + ".png")
                }
                Laya.Animation.createFrames(e, "battery_addSpeed")
            })
        }
    }
} ();
var Bullet = function() {
    var _ = Laya.Pool;
    var e = Laya.Rectangle;
    var t = Laya.Tween;
    var m = Math.PI;
    var v = {
        speed: 900,
        paoSkin: "resource/skins/501/bullet.png",
        bullet_kb_skin: "resource/fishScene/bullet_kb.png"
    };
    function g(e, t) {
        return e < t ? e: t
    }
    function p(e, t) {
        return e < t ? t: e
    }
    function a() {
        a.super(this)
    }
    Laya.class(a, "BulletRole", Laya.Sprite, "");
    var i = a.prototype;
    i.init = function(e, t, i, n) {
        if (!this._fromPool) {
            this.destroyChildren();
            for (var s = 0; s < 4; s++) {
                if (!this["blt_" + s]) {
                    var a = new Laya.Image;
                    a.skin = "resource/skins/" + t.skinInfo.id + "/bullet.png";
                    a.visible = false;
                    this["blt_" + s] = a;
                    this.addChild(a)
                }
            }
        }
        this.cannonInst = t;
        this.type = t.type;
        this["blt_0"].visible = false;
        this["blt_1"].visible = false;
        this["blt_2"].visible = false;
        this["blt_3"].visible = false;
        this["blt_0"].scale(1, 1);
        this["blt_1"].scale(1, 1);
        this["blt_2"].scale(1, 1);
        this["blt_3"].scale(1, 1);
        if (t.isFrenzy) {
            this["blt_0"].skin = v.bullet_kb_skin;
            this["blt_1"].skin = v.bullet_kb_skin;
            this["blt_2"].skin = v.bullet_kb_skin;
            this["blt_3"].skin = v.bullet_kb_skin
        } else {
            var r = "resource/skins/" + t.skinInfo.id + "/bullet.png";
            this["blt_0"].skin = r;
            this["blt_1"].skin = r;
            this["blt_2"].skin = r
        }
        this.width = 45;
        this.height = 107;
        this.bulletRadius = 30;
        if (t.type == 1 || t.isFrenzy || t.isHarmonics) {
            this["blt_0"].pos(0, 0);
            this["blt_0"].visible = true;
            this["blt_1"].visible = false;
            this["blt_2"].visible = false
        } else if (t.type == 2) {
            this["blt_1"].pos( - 13.5, 0);
            this["blt_1"].visible = true;
            this["blt_2"].pos(60, 0);
            this["blt_2"].visible = true;
            this["blt_0"].visible = false;
            this["blt_1"].skewY = 0;
            this["blt_2"].skewY = 180
        } else if (t.type == 3) {
            this["blt_0"].pos(0, -10);
            this["blt_0"].visible = true;
            this["blt_1"].pos( - 15, 30);
            this["blt_1"].visible = true;
            this["blt_2"].pos(15, 30);
            this["blt_2"].visible = true
        }
        if (t.isFrenzy) {
            this["blt_0"].pos( - 15, 0);
            this["blt_1"].pos(0, 0);
            this["blt_2"].pos(15, 0);
            this["blt_3"].pos(30, 0);
            this["blt_0"].scale(.6, .6);
            this["blt_1"].scale(.6, .6);
            this["blt_2"].scale(.6, .6);
            this["blt_3"].scale(.6, .6);
            this["blt_0"].skewY = 0;
            this["blt_1"].skewY = 0;
            this["blt_2"].skewY = 0;
            this["blt_3"].skewY = 0;
            this["blt_0"].visible = true;
            this["blt_1"].visible = true;
            this["blt_2"].visible = true;
            this["blt_3"].visible = true
        }
        this.pivot(this.width / 2, this.height / 2);
        this.id = i;
        this.targetId = t.lockedFish ? t.lockedFish.id: null;
        this.targetFish = t.lockedFish;
        this.isCurrPlayer = t.isCurrPlayer;
        this.quadIndex = -1;
        this.checkFishList = [];
        this.collidedFish = [];
        this.collidedFishInst = null;
        this._InScene = true;
        this.currTimer = 0;
        this.oldTime = 0;
        this.diffTime = 0;
        this.offsetX = 0;
        this.offsetY = 0;
        this.divX = 1;
        this.divY = 1;
        this.speedX = 0;
        this.speedY = 0;
        this.angle = 0;
        var o = t.paoBox.rotation;
        if (t.gunViewList[n]) {
            o = t.gunViewList[n].rotation
        }
        this.angle = o - 90;
        var l = m / 180 * this.angle;
        var h = Math.cos(l);
        var u = Math.sin(l);
        this.rotation = o;
        var c = t.viewUserPao.height / 3.4;
        var f = t.paoPoint.x;
        var d = t.paoPoint.y;
        var g = f + Math.cos(l) * c;
        var p = d + Math.sin(l) * c;
        if (t.gunViewList[n]) {
            if (t.localPos == 1 || t.localPos == 4) {
                g = g + (t.gunViewList[n].x - t.viewUserPao.x);
                p = p + (t.gunViewList[n].y - t.viewUserPao.y)
            } else {
                g = g - (t.gunViewList[n].x - t.viewUserPao.x);
                p = p - (t.gunViewList[n].y - t.viewUserPao.y)
            }
        }
        this.pos(g, p);
        this.speedX = Math.floor(v.speed * h);
        this.speedY = Math.floor(v.speed * u);
        if (FishScene.getSceneTimer()) {
            this.oldTime = FishScene.getSceneTimer().currTimer
        }
        this.once(Laya.Event.UNDISPLAY, this,
        function() {
            if (t.bltListPool) {
                t.bltListPool.removeByValue(this)
            }
            this._InScene = false;
            this._fromPool = true;
            _.recover("bullet", this)
        });
        return this
    };
    i.reset = function() {};
    i.update = function() {
        this.updatePosition();
        if (this.collideCheck()) {
            this.addNet(this.x, this.y);
            this.poolRecover()
        }
    };
    i.resetNet = function() {};
    i.addNet = function(e, t) {
        if (!this.cannonInst.isFrenzy) {
            i = Laya.Pool.getItemByClass("net_" + this.cannonInst.skinInfo.id, Laya.Animation);
            i.pivot(128, 128);
            i.pos(this.netX, this.netY);
            i.visible = true;
            i.zOrder = 2;
            i.once(Laya.Event.COMPLETE, this,
            function() {
                i.removeSelf();
                Laya.Pool.recover("net_" + this.cannonInst.skinInfo.id, i)
            });
            i.once(Laya.Event.DISPLAY, this,
            function() {
                i.play(0, false, "net_" + this.cannonInst.skinInfo.id)
            });
            FishScene.addNetToView(i);
            return
        }
        var i = _.getItemByClass("netAni_kb_ani", Laya.Animation);
        i.pivot(128, 128);
        i.zOrder = 2;
        i.rotation = this.cannonInst.viewUserPao.rotation;
        i.visible = true;
        i.pos(this.netX, this.netY);
        i.once(Laya.Event.DISPLAY, this,
        function() {
            i.play(0, false, "netAni_kb")
        });
        i.once(Laya.Event.COMPLETE, this,
        function() {
            i.visible = false;
            i.removeSelf();
            Laya.Pool.recover("netAni_kb_ani", i)
        });
        FishScene.addNetToView(i)
    };
    i.poolRecover = function() {
        this.removeSelf()
    };
    i.updatePosition = function() {
        if (!this.displayedInStage || !this.visible) {
            return
        }
        var e = Laya.Pool.getItemByClass("bltRect", Laya.Rectangle);
        e.width = Game.UIWidth;
        e.height = Game.UIHeight;
        e.x = 0;
        e.y = 0;
        if (this.targetFish && this.targetFish.displayedInStage && this.targetFish.alive && e.contains(this.targetFish.x, this.targetFish.y)) {
            var t = this.targetFish.getXY().x - this.x;
            var i = this.targetFish.getXY().y - this.y;
            var n = Math.atan(i / t);
            if (t < 0) {
                n += m
            }
            this.speedX = v.speed * Math.cos(n);
            this.speedY = v.speed * Math.sin(n);
            var s = n * 180 / m;
            this.angle = s;
            Laya.Pool.recover("bltRect", e)
        } else {
            Laya.Pool.recover("bltRect", e)
        }
        this.currTimer = FishScene.getSceneTimer().currTimer;
        this.diffTime = (this.currTimer - this.oldTime) / 1e3;
        this.offsetX = this.speedX * this.diffTime;
        this.offsetY = this.speedY * this.diffTime;
        this.oldTime = FishScene.getSceneTimer().currTimer;
        if (this.x < 0) {
            this.x = 0 - this.x;
            this.divX = -this.divX;
            this.angle = 180 - this.angle
        }
        if (this.x >= Game.UIWidth) {
            this.x = Game.UIWidth - (this.x - Game.UIWidth);
            this.divX = -this.divX;
            this.angle = 180 - this.angle
        }
        if (this.y < 0) {
            this.y = 0 - this.y;
            this.divY = -this.divY;
            this.angle = -this.angle
        }
        if (this.y >= Game.UIHeight) {
            this.y = Game.UIHeight - (this.y - Game.UIHeight);
            this.divY = -this.divY;
            this.angle = -this.angle
        }
        this.offsetY *= this.divY;
        this.offsetX *= this.divX;
        this.x += this.offsetX;
        this.y += this.offsetY;
        this.rotation = 90 + this.angle;
        this.quadTreeUpdate(this.x, this.y)
    };
    i.quadTreeUpdate = function() {
        if (this.x + this.width / 2 < 0 || this.y + this.height / 2 <= 0 || this.x - this.width > Game.UIWidth || this.y - this.height > Game.UIHeight) {
            this.quadIndex = 0
        } else {
            if (!this._quadTreeRect) {
                this._quadTreeRect = Laya.Pool.getItemByClass("bltRect", e)
            } else {
                this._quadTreeRect.setTo(this.x, this.y, this.width, this.height)
            }
            this.need_add_index_list = QuadTree.getAddIndexList(this._quadTreeRect, true);
            if (this.need_add_index_list.length > 0) {
                this.quadIndex = this.need_add_index_list[0]
            } else {
                this.quadIndex = 0
            }
        }
    };
    i.collideCheck = function() {
        if (this.quadIndex < 0) {
            return false
        }
        this.checkFishList = Fish.getQuadTreeFishByIndex(this.quadIndex);
        this.collidedFish = [];
        var e = null,
        t = false;
        for (var i = 0; i < this.checkFishList.length; i++) {
            e = this.checkFishList[i];
            if (e && (!e.visible || !e.displayedInStage || !e.alive)) {
                if (Game.debug && e.alive) {}
                continue
            }
            var n = Laya.Pool.getItemByClass("Point", Laya.Point);
            n.x = this.cannonInst.paoGloblePos[0];
            n.y = this.cannonInst.paoGloblePos[1];
            var s = e.getXY();
            if (n.distance(s.x, s.y) <= this.cannonInst.paoHeight) {
                Laya.Pool.recover("Point", n);
                continue
            }
            Laya.Pool.recover("Point", n);
            var a = Laya.Pool.getItemByClass("rectA", Laya.Rectangle);
            a.width = Game.UIWidth;
            a.height = Game.UIHeight;
            a.x = 0;
            a.y = 0;
            if (this.targetId && this.targetFish && this.targetFish.displayedInStage && this.targetFish.visible && this.targetFish.alive && this.targetId != e.id && Utils.InRange({
                x: this.targetFish.getXY().x,
                y: this.targetFish.getXY().y
            },
            a)) {
                continue
            }
            if (this.targetId && this.targetFish && this.targetFish.alive && this.targetFish.visible && this.targetFish.displayedInStage && this.targetId == e.id && Utils.InRange({
                x: s.x,
                y: s.y
            },
            a)) {
                var r = e.width > 80 ? 80 : e.width;
                var o = e.height > 80 ? 80 : e.height;
                t = this.isCollided(s.x, s.y, r, o, e.rotation, this.x, this.y, this.bulletRadius + 10)
            } else {
                t = this.isCollided(s.x, s.y, e.width, e.height, e.rotation, this.x, this.y, this.bulletRadius)
            }
            Laya.Pool.recover("rectA", a);
            if (t) {
                this.collidedFish.push(e);
                break
            }
        }
        if (this.collidedFish[0]) {
            if (this.isCurrPlayer) {
                if (this.collidedFish[0].type == Game.FishID.Fish_worldBoss) {
                    WorldBoss.setHitBltXy(this.x, this.y);
                    Request.WorldBossCollisionReq(this.id)
                } else {
                    if (this.collidedFish[0].id < 0) {
                        NoviceGuidanceOnMinGame.fishDead(this.cannonInst.userId, this.collidedFish[0].id)
                    } else {
                        Request.CatchFishReq(this.collidedFish[0].id, this.id)
                    }
                }
            }
            e = this.collidedFish[0];
            if (e && !e.destroyed && e.visible) {
                e.hit(this.isCurrPlayer)
            } else {
                e.dead(null, this.isCurrPlayer)
            }
            var n = this.collidedFish[0].getXY();
            if (n) {
                var l = Math.abs(n.x - this.x);
                var h = Math.abs(n.y - this.y);
                this.netX = n.x > this.x ? this.x + l / 3 * 2 : this.x - l / 3 * 2;
                this.netY = n.y > this.y ? this.y + h / 3 * 2 : this.y - h / 3 * 2
            } else {
                this.netX = this.x;
                this.netY = this.y
            }
            this.netX = Math.floor(this.netX);
            this.netY = Math.floor(this.netY)
        }
        return this.collidedFish[0] ? true: false
    };
    i.collideCheck_worker = function(e) {
        if (this.quadIndex < 0) {
            return false
        }
        this.checkFishList = Fish.getQuadTreeFishByIndex(this.quadIndex);
        this.collidedFish = [];
        var t = null,
        i = false;
        var n = [];
        for (var s = 0; s < this.checkFishList.length; s++) {
            t = this.checkFishList[s];
            if (t && (!t.visible || !t.displayedInStage || !t.alive)) {
                if (Game.debug && t.alive) {}
                continue
            }
            var a = Laya.Pool.getItemByClass("Point", Laya.Point);
            a.x = this.cannonInst.paoGloblePos[0];
            a.y = this.cannonInst.paoGloblePos[1];
            var r = t.getXY();
            if (a.distance(r.x, r.y) <= this.cannonInst.paoHeight) {
                Laya.Pool.recover("Point", a);
                continue
            }
            Laya.Pool.recover("Point", a);
            var o = Laya.Pool.getItemByClass("rectA", Laya.Rectangle);
            o.width = Game.UIWidth;
            o.height = Game.UIHeight;
            o.x = 0;
            o.y = 0;
            if (this.targetId && this.targetFish && this.targetFish.displayedInStage && this.targetFish.alive && this.targetId != t.id && Utils.InRange({
                x: this.targetFish.x,
                y: this.targetFish.y
            },
            o)) {
                continue
            }
            if (this.targetId && this.targetFish && this.targetFish.alive && this.targetFish.displayedInStage && this.targetId == t.id && Utils.InRange({
                x: r.x,
                y: r.y
            },
            o)) {
                var l = t.width > 80 ? 80 : t.width;
                var h = t.height > 80 ? 80 : t.height;
                n.push({
                    fishInst: t,
                    fx: r.x,
                    fy: r.y,
                    fw: l,
                    fh: h,
                    fr: t.rotation,
                    bx: this.x,
                    by: this.y,
                    r: this.bulletRadius + 10
                })
            } else {
                n.push({
                    fishInst: t,
                    fx: r.x,
                    fy: r.y,
                    fw: t.width,
                    fh: t.height,
                    fr: t.rotation,
                    bx: this.x,
                    by: this.y,
                    r: this.bulletRadius
                })
            }
            Laya.Pool.recover("rectA", o)
        }
        WorkerReq("collideCheck", n,
        function(e) {})
    };
    i.isCollided = function(e, t, i, n, s, a, r, o) {
        var l = Math.cos(s);
        var h = Math.sin(s);
        var u = (a - e) * l + (r - t) * h;
        var c = -(a - e) * h + (r - t) * l;
        var f = g(u, i * .5),
        f = p(f, -i * .5);
        var d = g(c, n * .5),
        d = p(d, -n * .5);
        return (u - f) * (u - f) + (c - d) * (c - d) <= o * o
    };
    var n = null;
    return {
        init: function() {},
        create: function(e, t, i, n) {
            var s = _.getItemByClass("bullet", a);
            s.init(e, t, i, n);
            return s
        },
        addCache: function() {
            return;
            for (var e = 0; e < 40; e++) { (function() {
                    var e = new Laya.Point;
                    var t = new Laya.Rectangle;
                    Laya.Pool.recover("Point", e);
                    Laya.Pool.recover("rectA", t);
                    var i = new a;
                    for (var n = 0; n < 3; n++) {
                        var e = new Laya.Image;
                        e.skin = v.paoSkin;
                        e.visible = false;
                        i["blt_" + n] = e;
                        i.addChild(e)
                    }
                    Game.UIRoot.addChild(i);
                    i.pos( - Game.UIWidth, 0);
                    i.timer.frameOnce(2, this,
                    function() {
                        i.removeSelf()
                    });
                    _.recover("bullet", i);
                    var s = new Laya.Animation;
                    s.size(220, 191);
                    s.pivot(110, 95.5);
                    s.pos(0 - Game.UIWidth, 0);
                    s.visible = true;
                    s.rotation = Math.random() * 360;
                    s.zOrder = 2;
                    s.once(Laya.Event.COMPLETE, this,
                    function() {
                        s.removeSelf();
                        Laya.Pool.recover("netAni_1", s)
                    });
                    s.once(Laya.Event.DISPLAY, this,
                    function() {
                        s.play(0, false, "net_501")
                    });
                    Game.UIRoot.addChild(s)
                })()
            }
        }
    }
} ();
var Player = function() {
    var a = null,
    i = 0,
    t = 0,
    n = 1;
    var e = false,
    s = -1,
    r = 0;
    var o = 0,
    l = null,
    h = null,
    u = null;
    var c = 0;
    var f = 0;
    var d = null;
    var g = 0,
    p = 0;
    var _ = "",
    m = true;
    var v = 0,
    y = -1;
    var I = [];
    var S = false;
    var C = false;
    var b = {};
    var w = {};
    var x = false;
    var R = 0;
    var L;
    return {
        isUserInfoInit: function() {
            return x
        },
        setUserInfo: function(e) {
            a = e;
            if (!x) {
                x = true
            }
            if (Game.debug) console.log(a);
            if (Game.temp_payRespToGetUserInfo) {
                return
            }
            if (a.NewSevenDay) {
                I = a.NewSevenDay.split("|")
            }
            if (a.WxSubStatusStr) {
                var t = a.WxSubStatusStr.split("|");
                for (var i = 0; i < t.length; i++) {
                    var n = t[i];
                    var s = n.split(":");
                    w[s[0]] = s[1]
                }
            }
            Laya.stage.event(Laya.Event.def_updateUserInfo)
        },
        setUserOtherInfo: function(e) {
            d = e;
            if (d.WxSubPlafs) {
                for (var t = 0; t < d.WxSubPlafs.length; t++) {
                    var i = d.WxSubPlafs[t];
                    b[i.SubType] = i.PlafIds
                }
            }
            Laya.stage.event(Laya.Event.def_updateUserOtherInfo)
        },
        setUserId: function(e) {
            t = e;
            myStorage.setItem("bydjs_uid", e)
        },
        getUserId: function() {
            if (a) {
                return a.UserId || t
            }
            return t
        },
        setGold: function(e) {
            if (a) {
                a.Money1 = e
            }
        },
        getGold: function() {
            if (a && a.Money1) {
                return a.Money1
            }
            return 0
        },
        setDragon: function(e) {
            if (a) {
                a.Money6 = e
            }
        },
        getDragon: function() {
            if (a && a.Money6) {
                return a.Money6
            }
            return 0
        },
        showDragon: function() {
            return Player.getDragon() - r
        },
        showGold: function() {
            return Player.getGold() - r
        },
        setOutSideGold: function(e) {
            r = e
        },
        getOutSideGold: function() {
            return r
        },
        getDrawShareTimes: function() {
            if (a && a.DrawShareTimes) {
                return a.DrawShareTimes
            } else {
                return 0
            }
        },
        setDrawShareTimes: function(e) {
            if (a && a.DrawShareTimes) {
                a.DrawShareTimes = e
            }
        },
        getJiangJuan: function() {
            if (a && a.Money2) {
                return a.Money2
            }
            return 0
        },
        setJiangJuan: function(e) {
            if (a) {
                a.Money2 = e
            }
        },
        getJiFen: function() {
            if (a && a.Money3) {
                return a.Money3
            }
            return 0
        },
        setJiFen: function(e) {
            if (a) {
                a.Money3 = e
            }
        },
        getHongBaoMoney: function() {
            if (a && a.Money10) {
                return a.Money10
            }
            return 0
        },
        getHongBao: function() {
            if (a && a.Money10) {
                return a.Money10 / 100
            }
            return 0
        },
        setHongBao: function(e) {
            if (a) {
                a.Money10 = e
            }
        },
        getIfBindingPhone: function() {
            if (a) {
                return a.BindPhone
            }
            return null
        },
        getPhone: function() {
            if (a && a.Phone) {
                return a.Phone
            }
        },
        setPhone: function(e) {
            if (a) {
                a.Phone = e
            }
        },
        setNick: function(e) {
            l = e;
            if (a) {
                a.Nick = e
            }
        },
        getNick: function() {
            if (a) {
                return a.Nick
            } else if (l) return l;
            return "12345674"
        },
        setAvatarUrl: function(e, t) {
            if (a) {
                a.AvatarID = e;
                a.Headimg = ""
            }
            if (t && a) {
                a.Headimg = t
            }
        },
        getAvatarUrl: function() {
            if (a && a.Headimg) {
                return Utils.AvatarAddPrefix(a.Headimg)
            }
            if (a) {
                return a.Headimg || "resource/head/" + a.AvatarID + ".png"
            }
            return ""
        },
        setNewPlayer: function(e) {
            n = e
        },
        getNewPlayer: function() {
            return n
        },
        setSessionId: function(e, t) {
            if (e && t) {
                i = [e, t]
            } else if (e && !t) {
                i = e
            }
        },
        getSessionId: function() {
            return i
        },
        setPos: function(e) {
            s = e
        },
        getPos: function() {
            return s
        },
        setSMRZ: function(e) {
            if (a) {
                a.SMRZ = e
            }
        },
        getSMRZ: function() {
            if (a) {
                if (a.OpenFcm) {
                    return a.SMRZ
                } else {
                    return true
                }
            }
            return 0
        },
        getDrawTimes: function() {
            if (a) {
                return a.DrawTimes
            }
            return null
        },
        setDrawTimes: function(e) {
            if (a) {
                a.DrawTimes = e
            }
        },
        getActRed: function() {
            if (d) {
                return d.ActRed
            }
            return null
        },
        setActRed: function(e) {
            if (d) {
                d.ActRed = e
            }
        },
        getBagRed: function() {
            if (d) {
                return d.BagRed
            }
            return null
        },
        getMailRed: function() {
            if (d) {
                return d.MailRed
            }
            return null
        },
        Open_CarveUp: function() {
            if (d) {
                return d.Open_CarveUp
            }
            return false
        },
        getAlms: function() {
            if (a) {
                return a.JiuJiJinRemainTimes
            }
        },
        setAlms: function(e) {
            if (a) {
                a.JiuJiJinRemainTimes = e
            }
        },
        updateFirstGift: function() {
            if (a) {
                a.FirstGift = true
            }
        },
        getFirstGift: function() {
            if (a) {
                return a.FirstGift
            }
            return false
        },
        setFcmState: function(e) {
            if (a) {
                a.FcmState = e
            }
        },
        getFcmState: function() {
            if (a) {
                return a.FcmState
            }
            return 0
        },
        setFcmTime: function(e) {
            if (a) {
                a.FcmTime = e
            }
        },
        getFcmTime: function() {
            if (a) {
                if (a.NeedFcm == 2) {
                    return 0
                } else {
                    return a.FcmTime
                }
            }
            return 0
        },
        getFcmOfflineTime: function() {
            if (a) {
                return a.FcmOfflineTime
            }
            return 0
        },
        getThisTimeScore: function() {
            if (a) {
                return a.ThisTimeScore
            }
            return 0
        },
        getOpenKF: function() {
            if (a) {
                return a.OpenKF
            }
        },
        getKFDetail: function() {
            if (a) {
                return a.KFDetail
            }
        },
        openChat: function() {
            if (a) {
                return a.OpenChat
            }
        },
        setShopCW: function(e) {
            if (a) {
                a.ShopCW = e
            }
        },
        getShopCW: function() {
            if (a) {
                return a.ShopCW
            }
            return ""
        },
        setNeedFcm: function(e) {
            if (a) {
                a.NeedFcm = e
            }
        },
        getNeedFcm: function() {
            if (a) {
                if (a.OpenFcm) {
                    return a.NeedFcm
                } else {
                    return 2
                }
            }
            return 0
        },
        getOpenFcm: function() {
            if (a) {
                return a.OpenFcm
            }
            return 0
        },
        getOpenRealName: function() {
            if (a) {
                return a.OpenRealName
            }
            return 0
        },
        getIsOpenGive: function() {
            if (a) {
                return a.IsOpenGive
            }
            return 0
        },
        getChangeNameNeedPsw: function() {
            if (a) {
                return a.ChangeNameNeedPsw
            }
            return 0
        },
        setShopCZ: function(e) {
            if (a) {
                a.ShopCZ = e
            }
        },
        getShopCZ: function() {
            if (a) {
                return a.ShopCZ
            }
            return 0
        },
        getUserVersionFun: function() {
            if (a) {
                return a.UserVersion
            }
            return false
        },
        setSex: function(e) {
            o = e
        },
        getSex: function() {
            return o
        },
        setProvince: function(e) {
            h = e
        },
        getProvince: function() {
            return h
        },
        setCity: function(e) {
            u = e
        },
        getCity: function() {
            return u
        },
        setADPrizeTimes: function(e) {
            if (a) {
                a.AdLeftTimes = e
            }
        },
        setPigShareTimes: function(e) {
            if (a) {
                a.PigShareTimes = e
            }
        },
        getPigShareTimes: function() {
            if (a) {
                return a.PigShareTimes
            }
            return 0
        },
        GetADPrizeTimes: function() {
            if (a) {
                if (a.AdLeftTimes) {
                    return a.AdLeftTimes
                } else {
                    return 0
                }
            }
            return 0
        },
        getInviteRed: function() {
            if (d) {
                return d.InviteRed
            }
            return 0
        },
        getSignRed: function() {
            if (d) {
                return d.SignRed
            }
            return null
        },
        getVipLevel: function() {
            if (a) {
                return a.VipLevel * 1
            }
            return 0
        },
        setVipLevel: function(e) {
            if (a) {
                a.VipLevel = e * 1
            }
        },
        getVipLeftTime: function() {
            if (a) {
                return a.VipSceneTime
            }
            return 0
        },
        setVipLeftTime: function(e) {
            if (a) {
                a.VipSceneTime = e
            }
        },
        getPayRmb: function() {
            if (a) {
                return Utils.fenToYuan(a.PayRmb * 1)
            }
            return 0
        },
        setShakeTimes: function(e) {
            var t = e != c ? true: false;
            c = e * 1;
            if (t) {
                Laya.stage.event(Laya.Event.def_changeShakeTimes)
            }
        },
        getShakeTimes: function() {
            return c
        },
        getSharkUserId: function() {
            if (a) {
                return a.ShowShakeUserId
            }
            return 0
        },
        IsCanShowShark: function() {
            if (a) {
                return a.UserId <= a.ShowShakeUserId
            }
            return false
        },
        setMatchDayPrize: function(e) {
            f = e
        },
        getMatchDayPrize: function(e) {
            return f
        },
        setFirstGiftOne: function(e) {
            if (a) {
                a.FirstGiftOne = e
            }
        },
        getFirstGiftOne: function() {
            if (a) {
                return a.FirstGiftOne
            }
            return false
        },
        setFirstGiftOneSG: function(e) {
            if (a) {
                a.FirstGiftOneSG = e
            }
        },
        getFirstGiftOneSG: function() {
            if (a) {
                return a.FirstGiftOneSG
            }
            return false
        },
        getFirstGiftOneBuyStatus: function() {
            if (a) {
                if (Channel && Channel.cfg.cps == Game.ChannelConstants.qtt) {
                    return a.QttFirstGiftOneSG
                } else {
                    return a.FirstGiftOneSG
                }
            }
            return false
        },
        setQttFirstGiftOneSG: function(e) {
            if (a) {
                a.QttFirstGiftOneSG = e
            }
        },
        getQttFirstGiftOneSG: function() {
            if (a) {
                return a.QttFirstGiftOneSG
            }
            return false
        },
        setQttFirstGiftOneFG: function(e) {
            if (a) {
                a.QttFirstGiftOneFG = e
            }
        },
        getQttFirstGiftOneFG: function() {
            if (a) {
                return a.QttFirstGiftOneFG
            }
            return false
        },
        getQttFirstGiftOneId: function() {
            if (a) {
                if (!a.QttFirstGiftOneSG) {
                    return 321
                }
                if (!a.QttFirstGiftOneFG) {
                    return 322
                }
            }
            return - 1
        },
        getFirstGiftOneId: function() {
            if (Channel && Channel.cfg.cps == Game.ChannelConstants.qtt) {
                return this.getQttFirstGiftOneId()
            }
            if (a) {
                if (!a.FirstGiftOneSG) {
                    return 323
                }
            }
            return - 1
        },
        setMatchScore: function(e) {
            g = e
        },
        getMatchScore: function() {
            return g
        },
        setOutSideScore: function(e) {
            p = e
        },
        getOutSideScore: function() {
            return p
        },
        getShowMatchScore: function() {
            return Player.getMatchScore() - p
        },
        getRedPackageTurn: function() {
            if (a) {
                return a.OpenRedBag
            } else {
                return 0
            }
        },
        getRedGettings: function() {
            if (d) {
                return d.RedBag_Blessing_Open
            } else {
                return 0
            }
        },
        getCreateRoomVipLevel: function() {
            if (d) {
                return d.CreateRoom_VipLevel
            } else {
                return null
            }
        },
        getHaoJiaoBuyOpen: function() {
            if (d) {
                return d.HaoJiao_IsBuy
            } else {
                return null
            }
        },
        getMPIcon_open: function() {
            if (d) {
                return d.Open_MpIcon
            } else {
                return null
            }
        },
        getUserOpenGive: function() {
            if (d) {
                return d.Open_Give
            } else {
                return null
            }
        },
        setWxLoginLCode: function(e) {
            _ = e
        },
        getWxLoginCode: function() {
            return _
        },
        BindWeChat: function() {
            if (d) {
                return d.BindWeChat
            } else {
                return m
            }
        },
        updateWeChat: function() {
            m = true;
            if (d) {
                d.BindWeChat = true
            }
        },
        getBankState: function() {
            if (d) {
                return d.BankState
            }
            return y
        },
        setBankState: function(e) {
            if (d) {
                d.BankState = e
            }
            y = e
        },
        getBankMoney: function() {
            if (d) {
                return d.BankMoney
            }
            return v
        },
        setBankMoney: function(e) {
            if (d) {
                d.BankMoney = e
            }
            v = e
        },
        getIsOpenRank: function() {
            if (d) {
                return d.IsOpenRank
            }
            return 1
        },
        getOpenRankNeedVip: function() {
            if (d) {
                return d.OpenRankNeedVip
            }
            return 0
        },
        getOpenTSGame: function() {
            if (a) {
                return a.OpenTSGame
            }
            return t
        },
        getOpenXSYD: function() {
            if (a) {
                return a.OpenXSYD
            }
            return true
        },
        getOpenGiveBtn: function() {
            if (a) {
                return a.OpenGiveBtn
            }
            return false
        },
        isShowGuild: function() {
            if (d) {
                return d.ShowGuild
            }
            return false
        },
        isShowGhCangKu: function() {
            if (d) {
                return d.ShowCangku
            }
            return false
        },
        isShowXuanYan: function() {
            if (d) {
                return d.ShowXuanYan
            }
            return false
        },
        QTTYiYuanGouOpen: function() {
            if (d) {
                return d.QTTYiYuanGouOpen
            }
            return false
        },
        QTTYiYuanFuGouOpen: function() {
            if (d) {
                return d.QTTYiYuanFuGouOpen
            }
            return false
        },
        isSpecialGiftCanBuy: function() {
            if (a) {
                if (!a.TeJiaGift) {
                    return 106
                } else if (!a.TeJiaGift2) {
                    return 107
                } else {
                    return 0
                }
            }
            return 0
        },
        setSpecialGiftBuy: function(e) {
            if (!a) {
                return
            }
            var t = this.isSpecialGiftCanBuy();
            if (!t) return;
            switch (t) {
            case 106:
                a.TeJiaGift = e ? 1 : 0;
                break;
            case 107:
                a.TeJiaGift2 = e ? 1 : 0;
                break
            }
        },
        getGoNextFirstHitTag: function() {
            if (a) {
                if (a.goNextFirstHitTag == undefined) {
                    a.goNextFirstHitTag = Laya.LocalStorage.getItem("goNextFirstHitTag")
                }
                return a.goNextFirstHitTag
            }
            return false
        },
        setGoNextFirstHitTag: function(e) {
            if (!a) {
                return
            }
            if (a.goNextFirstHitTag == e) {
                return
            } else {
                a.goNextFirstHitTag = e;
                Laya.LocalStorage.setItem("goNextFirstHitTag", e + "")
            }
        },
        getNewSevenDay: function() {
            return I
        },
        setNewSevenDay: function(e) {
            I = e
        },
        getShowNewSevenDay: function() {
            return S
        },
        setShowNewSevenDay: function(e) {
            S = e
        },
        getDaysFromReg: function() {
            if (a) {
                return a.DaysFromReg
            }
            return - 1
        },
        getOpenShareBtn: function() {
            if (a) {
                return a.OpenShareBtn == 1
            }
            return false
        },
        getFXGiftCanBuy: function() {
            var e = Player.getShopCW();
            if (e) {
                var t = e.split("|");
                if (t.length < 3) {
                    return true
                } else {
                    return false
                }
            } else {
                return true
            }
        },
        setKanJiaVisible: function(e) {
            C = e
        },
        getKanJiaVisible: function() {
            return C
        },
        getWxSubRewardNum: function() {
            if (a) {
                return a.WxSubRewardNum
            }
            return 10
        },
        getWxSubStatus: function() {
            return this.getWxSubStatusByType(Game.DyType.NEW_SEVEN_DAY)
        },
        setWxSubStatus: function(e) {
            this.setWxSubStatusByType(Game.DyType.NEW_SEVEN_DAY, e)
        },
        getWxSubStatusByType: function(e) {
            if (w[e]) {
                return w[e]
            }
            return 0
        },
        setWxSubStatusByType: function(e, t) {
            w[e] = t
        },
        getNewPlayerCanExchangeNotice: function() {
            if (a) {
                return a.NewPlayerCanExchangeNotice
            }
            return 0
        },
        OpenMatchShare: function() {
            if (a) {
                return a.OpenMatchShare
            }
            return 0
        },
        OpenRedActivity: function() {
            if (a) {
                return a.OpenRedActivity
            }
            return 0
        },
        IsAlreadyRedDraw: function() {
            if (!NoviceGuidanceOnMinGame.isGuidOver()) {
                return 1
            }
            if (a) {
                return a.IsAlreadyRedDraw
            }
            return 1
        },
        setAlreadyRedDraw: function() {
            if (a) {
                a.IsAlreadyRedDraw = 1
            }
        },
        getIsBackWithGuide: function() {
            if (a && this.OpenRedActivity()) {
                var e = myStorage.getItemWithUserId(myStorage.StorageStaticCode.Storage_FIRST_GAMEBACK);
                if (parseInt(e) == 1) {
                    myStorage.setItemWithUserId(myStorage.StorageStaticCode.Storage_FIRST_GAMEBACK, 2);
                    return 1
                } else {
                    return 0
                }
            }
            return 0
        },
        setBackWithGuide: function() {
            var e = myStorage.getItemWithUserId(myStorage.StorageStaticCode.Storage_FIRST_GAMEBACK);
            if (!e) {
                myStorage.setItemWithUserId(myStorage.StorageStaticCode.Storage_FIRST_GAMEBACK, 1)
            }
        },
        CanBuyDoubleEleven: function() {
            if (a) {
                return a.CanBuyDoubleEleven
            }
            return 0
        },
        setCanBuyDoubleEleven: function() {
            if (a) {
                a.CanBuyDoubleEleven = 0
            }
        },
        getWxSubPlaf: function(e) {
            if (!b[e]) return ["Ugkizs2FYlP5kL0IW8nel51q4F167NYFLtjDKz35YPk", "Ugkizs2FYlP5kL0IW8nel4gDnTccz2_lyH2_MvDICeg"];
            return b[e].split(",")
        },
        IsOpenRedDrawNewGuide: function() {
            if (a) {
                return a.IsOpenRedDrawNewGuide
            }
            return 0
        },
        TurntableActivitySwitch: function() {
            if (a) {
                return a.TurntableActivitySwitch
            }
            return 1
        },
        getYuBi: function() {
            return R
        },
        setYuBi: function(e) {
            R = e
        },
        getHitMonsterBindPhone: function() {
            return L
        },
        setHitMonsterBindPhone: function(e) {
            L = e
        }
    }
} ();
var Score = function() {
    var e = Laya.TimeLine,
    r = Laya.Ease,
    o = Laya.Event,
    l = Laya.Handler;
    var s = null,
    _ = 50,
    m = 1;
    function v() {
        v.super(this);
        this.timeLine = new e;
        this.completeCall = null
    }
    Laya.class(v, "Score", Laya.Sprite, "");
    var t = v.prototype;
    t.createScore = function(e, t) {
        this.width = _;
        this.height = _;
        var i = "resource/icon/110.png",
        n = "userScore";
        if (Game.state.get() == Game.sceneConfig.sceneID.scene_Dragon_DaoDan) {
            i = "resource/icon/6.png";
            n = "userScore_dragon"
        }
        this.loadImage(i);
        this.pivot(_ / 2, _ / 2);
        this.scale(.6, .6);
        this.pos(e.posXY.x, e.posXY.y);
        this.timer.once(e.delay, this,
        function() {
            if (s) {
                this.visible = true;
                s.addChild(this)
            }
            this.animate(e.posXY, e.target, e.callback, t)
        });
        this.on(Laya.Event.UNDISPLAY, this,
        function() {
            Laya.Pool.recover(n, this);
            this.timeLine.pause()
        })
    };
    t.animate = function(e, t, i, n) {
        if (this.displayedInStage) {
            var s = this.y,
            a = 200;
            this.timeLine.reset();
            this.timeLine.to(this, {
                y: s + 50
            },
            a).to(this, {
                y: s - 75
            },
            a).to(this, {
                y: s - 120
            },
            a).to(this, {
                y: s
            },
            a).to(this, {
                y: s - 75
            },
            a).to(this, {
                y: s
            },
            a);
            this.timeLine.on(o.COMPLETE, this,
            function() {
                this.timer.once(100, this, this.luoRu, [e, t, i, n])
            });
            this.once(Laya.Event.UNDISPLAY, this,
            function() {
                this.timeLine.pause()
            });
            this.timeLine.play(0, false)
        }
    };
    t.luoRu = function(e, t, i, n) {
        if (this.displayedInStage) {
            var s = Laya.Pool.getItemByClass("point", Laya.Point);
            s.x = t.x;
            s.y = t.y;
            var a = s.distance(e.x, e.y);
            Laya.Tween.to(this, {
                x: t.x,
                y: t.y
            },
            a * 2, r.linear, l.create(this, this.onComplete, [n, i]));
            Laya.Tween.to(this, {
                scaleX: .4,
                scaleY: .4
            },
            a, r.linear, null, a);
            Laya.Pool.recover("point", s)
        }
    };
    t.onComplete = function(e, t) {
        this.visible = false;
        this.removeSelf();
        try {
            if (this.timeLine) {
                this.timeLine.pause()
            }
        } catch(e) {}
        this.timer.clearAll(this);
        this.removeSelf();
        if (e) {
            t && t();
            if (this.isCurrPlayer) {
                Sound.playSound(Sound.RES.gold_drop.url, Sound.RES.gold_drop.vol)
            }
        }
        this.completeCall && this.completeCall()
    };
    return {
        init: function(e) {
            s = e;
            this.addCache()
        },
        show: function(i, n, e, t, s, a) {
            var r = 0,
            o = null,
            l = 4,
            h = Gold.countCoinNum(e);
            var u = undefined,
            c = undefined,
            f = {
                posXY: {
                    x: i,
                    y: n
                },
                num: h,
                type: t,
                target: s,
                callback: a
            };
            var d = h * _;
            var g = Game.state.get() == Game.sceneConfig.sceneID.scene_Dragon_DaoDan ? "userScore_dragon": "userScore";
            for (var p = 0; p < h; p++) {
                o = null; (function(e, t) {
                    c = 0;
                    if (t >= 1) {
                        e = e % l;
                        c = t * _ * m - _ * 3 / 2
                    }
                    u = e * _ * m - h * _ / 2;
                    f.posXY.x = i + u;
                    f.posXY.y = n + c;
                    if (i <= s.x) {
                        f.delay = d - e * _
                    } else {
                        f.delay = e * _
                    }
                    o = Laya.Pool.getItemByClass(g, v);
                    o.createScore(f, e == h - 1)
                })(p, r)
            }
            if (t) {
                Sound.playSound(Sound.RES.gold_get.url, Sound.RES.gold_get.vol)
            }
        },
        addCache: function() {
            var e = Laya.Pool.getPoolBySign("userScore");
            if (e.length < 1) {
                for (var t = 0; t < 60; t++) { (function(e) {
                        var t = new v;
                        t.pos( - 300, -5e3);
                        Laya.Pool.recover("userScore", t);
                        Game.UIRoot.addChild(t);
                        t.timer.once(300, this,
                        function() {
                            t.removeSelf()
                        })
                    })(t)
                }
            }
        }
    }
} ();
var ChangE = function() {
    var s = null,
    a = null;
    var r = {
        fishComing: function() {
            ChangeShow.fishComing(false, this.fishComeCall)
        },
        fishComeCall: function() {
            if (s && s.displayedInStage && a) {
                var e = a.fishBox;
                var t = e.getChildAt(0);
                var i = e.getChildAt(1);
                if (t && i) {
                    t.scale(0, 0);
                    i.scale(0, 0)
                }
                a.timer.loop(1, a, a.update);
                a.pos(Game.UIWidth / 2, Game.UIHeight / 2 - 10);
                s.addChild(a);
                if (t && i) {
                    r.showBg(t, i)
                }
            }
        },
        showBg: function(e, t) {
            Laya.Tween.to(e, {
                scaleX: 1.5,
                scaleY: 1.5
            },
            1600, Laya.Ease.linear, Laya.Handler.create(r,
            function() {
                r.showFishAni(t)
            }))
        },
        showFishAni: function(e) {
            Laya.Tween.to(e, {
                scaleX: 1,
                scaleY: 1
            },
            1600, Laya.Ease.linear, Laya.Handler.create(r,
            function() {}))
        },
        hide: function(e, t) {
            if (a) {
                Laya.Tween.to(a, {
                    scaleX: 0,
                    scaleY: 0
                },
                500, null, Laya.Handler.create(this,
                function() {
                    a.dead()
                }));
                Laya.timer.once(250, this,
                function() {
                    t && t.call(e, null)
                })
            }
        },
        showFailEft: function() {
            if (s) {
                Sound.playSound(Sound.RES.pirate_go.url, Sound.RES.pirate_go.vol);
                var e = Laya.Pool.getItemByClass("Ani_tiaozhan3", Laya.Animation);
                e.source = "UIRoot/FX/tiaozhan3.ani";
                e.pos(Game.UIWidth / 2, Game.UIHeight / 2);
                e.once(Laya.Event.COMPLETE, this,
                function() {
                    e.removeSelf();
                    Laya.Pool.recover("Ani_tiaozhan3", e)
                });
                e.once(Laya.Event.DISPLAY, this,
                function() {
                    s.visible = true;
                    e.play(0, false, "Henyihan")
                });
                s.addChild(e)
            }
        }
    };
    return {
        show: function(e, t, i) {
            s = e;
            a = i;
            if (i) {
                var n = i.LiveTime - i.RunTime;
                ChangeLeftTime.show(t, n);
                r.fishComing()
            }
        },
        hide: function(e) {
            if (!e) {
                r.showFailEft()
            }
            r.hide()
        }
    }
} ();
var ExileBoss = function() {
    var s = null,
    a = null;
    var r = {
        showEft: function() {
            var e = Laya.Pool.getItemByClass("ChuanSongMen", Laya.Animation);
            e.source = "UIRoot/FX/chuansongmen.ani";
            e.pos(Game.UIWidth / 2, Game.UIHeight / 2);
            a.pos(Game.UIWidth / 2, Game.UIHeight / 2 - 10);
            e.once(Laya.Event.DISPLAY, this,
            function() {
                e.play(0, true)
            });
            e.blendMode = "lighter";
            e.scale(0, 0);
            a.scale(0, 0);
            s.addChild(e);
            s.addChild(a);
            Laya.Tween.to(e, {
                scaleX: 1,
                scaleY: 1
            },
            600);
            Laya.Tween.to(a, {
                scaleX: 1,
                scaleY: 1
            },
            600, null, null, 600);
            a.timer.loop(1, a, a.update);
            a.once(Laya.Event.UNDISPLAY, null,
            function() {
                Laya.Tween.to(e, {
                    scaleX: 0,
                    scaleY: 0
                },
                600, null, Laya.Handler.create(null,
                function() {
                    e.stop();
                    e.removeSelf()
                }));
                ExileBossLeftTime.hide()
            })
        },
        showFailEft: function() {
            if (s) {
                Sound.playSound(Sound.RES.pirate_go.url, Sound.RES.pirate_go.vol);
                var e = Laya.Pool.getItemByClass("Ani_tiaozhan3", Laya.Animation);
                e.source = "UIRoot/FX/tiaozhan3.ani";
                e.pos(Game.UIWidth / 2, Game.UIHeight / 2);
                e.once(Laya.Event.COMPLETE, this,
                function() {
                    e.removeSelf();
                    Laya.Pool.recover("Ani_tiaozhan3", e)
                });
                e.once(Laya.Event.DISPLAY, this,
                function() {
                    s.visible = true;
                    e.play(0, false, "Henyihan_1")
                });
                s.addChild(e)
            }
        }
    };
    return {
        show: function(e, t, i) {
            s = e;
            a = i;
            if (i) {
                var n = i.LiveTime - i.RunTime;
                ExileBossLeftTime.show(i, t, n)
            }
            r.showEft()
        },
        hide: function() {
            if (a) {
                a.dead()
            }
            if (Game.state.get() == Game.sceneConfig.sceneID.scene_Dragon_DaoDan) {} else {
                r.showFailEft()
            }
        }
    }
} ();
var WorldBoss = function() {
    WBBloodUI.prototype.updateBoold = function(e, t) {
        if (this._bloodOld) {
            if (e != this._bloodOld) {
                this.showDelNum(e - this._bloodOld)
            }
        }
        if (t) {
            this._bloodOld = e;
            this.fc_value.value = e + "/" + t;
            this.progress.value = e / t;
            if (e == 0) {
                this.timer.once(1e3, this,
                function() {
                    this._bloodOld = -1;
                    this.visible = false
                })
            }
        } else {
            console.error("MaxHuDun:0")
        }
    };
    WBBloodUI.prototype.showDelNum = function(e) {
        var t = Laya.Pool.getItemByClass("fc_delNum", Laya.FontClip);
        t.dataSource = {
            skin: "resource/worldBoss/fontclip_shuzi6.png",
            sheet: "-0123456789",
            spaceX: -12
        };
        t.pos(710, 147);
        t.value = e + "";
        t.alpha = 1;
        this.addChild(t);
        Laya.Tween.to(t, {
            y: 100,
            alpha: .5
        },
        1e3, null, Laya.Handler.create(this,
        function() {
            t.removeSelf();
            Laya.Pool.recover("fc_delNum", t)
        }))
    };
    WBSpeakUI.prototype.init = function() {
        var e = GameConfig.clientWorldBoss();
        this.cfgArr = e
    };
    WBSpeakUI.prototype.change = function() {
        if (this.cfgArr) {
            var e = Utils.getRandomFromArr(this.cfgArr);
            if (e && e.MSG) {
                this.lb_spk.text = e.MSG
            }
            this.visible = true
        }
    };
    function s() {}
    var n = {
        hudun: "hudun",
        baodian: "baodian",
        posui: "posui"
    };
    var a = [{
        nick: "hudun_",
        max: 11,
        name: n.hudun
    },
    {
        nick: "baodian_",
        max: 5,
        name: n.baodian
    },
    {
        nick: "posui_",
        max: 5,
        name: n.posui
    }];
    var i = {
        countdown: 2,
        appear: 3,
        escape: 4,
        disEscape: 5,
        delHuDun: 6,
        over: 8
    };
    var r = 0,
    o = 0,
    e = 800,
    l = 1e4;
    var t = s.prototype;
    t.init = function() {
        this.HuDun = null;
        this.fishObj = null;
        this.RemainHuDun = 0;
        this.MaxHuDun = 0;
        this.blood = new WBBloodUI;
        this.speak = new WBSpeakUI;
        Laya.stage.on(Laya.Event.def_LeaveFishScene, this, this.over);
        for (var e = 0; e < a.length; e++) {
            var t = a[e];
            if (t) {
                var i = Laya.Animation.framesMap;
                if (!i[t.name]) {
                    var n = [];
                    for (var s = 0; s < t.max; s++) {
                        n.push("resource/worldBoss/" + t.nick + s + ".png")
                    }
                    Laya.Animation.createFrames(n, t.name)
                }
            }
        }
    };
    t.speakFn = function() {
        if (this.speak) {
            if (this.fishObj && this.fishObj.visible && this.fishObj.displayedInStage) {
                this.speak.change();
                this.speak.timer.once(3 * 1e3, this,
                function() {
                    this.speak.visible = false;
                    if (this.speak.displayedInStage) {
                        var e = Utils.getRandom(5e3, 1e4);
                        this.speak.timer.once(e, this, this.speakFn)
                    }
                })
            } else {
                this.speak.visible = false
            }
        }
    };
    t.addBoss = function() {
        if (this.fishObj) {
            if (this.BossState == i.delHuDun) {
                this.updateBoold(0);
                this.delDun()
            } else if (this.BossState == i.escape) {
                this.escape()
            } else if (this.BossState == i.appear) {
                this.showAgain()
            }
        } else {
            var e = {
                Fishs: [{
                    Delay: 0,
                    FishId: 601,
                    FishScene: 0,
                    Id: 11601,
                    LiveTime: 0,
                    OffsetX: 0,
                    OffsetY: 0,
                    PathId: 1002,
                    RunTime: 0,
                    SceneSeq: FishScene.getSceneSeq() || 1,
                    StartTime: 0,
                    TideSeq: 0
                }]
            };
            Laya.timer.once(2e3, this,
            function() {
                FishScene.ReportSendFish(e)
            })
        }
    };
    t.showBoss = function(e) {
        if (e) {
            if (this.BossState == i.appear || this.BossState == i.disEscape || this.BossState == i.delHuDun) {
                WBAni.showComeAni()
            }
            Laya.timer.once(2e3, this,
            function() {
                e.visible = true;
                WBTitle.I().show(1);
                e.pos(Game.UIWidth / 2, Game.UIHeight / 2);
                e.timer.frameLoop(1, e, e.update);
                this.fishObj = e;
                this.addDun(e)
            })
        }
    };
    t.showAniFn = function() {
        if (this.fishObj && this.HuDun) {
            if (this.fishObj.displayedInStage && !this.fishObj.destroyed) {
                this.fishObj.scale(0, 0);
                this.HuDun.scale(0, 0);
                Laya.Tween.to(this.HuDun, {
                    scaleX: 1.6,
                    scaleY: 1.6
                },
                e);
                Laya.Tween.to(this.fishObj, {
                    scaleX: 1,
                    scaleY: 1
                },
                e)
            }
        }
    };
    t.hideAniFn = function() {
        if (this.fishObj && this.HuDun) {
            Laya.Tween.to(this.HuDun, {
                scaleX: 0,
                scaleY: 0
            },
            e);
            Laya.Tween.to(this.fishObj, {
                scaleX: 0,
                scaleY: 0
            },
            e)
        }
    };
    t.showAgain = function() {
        if (this.fishObj && !this.fishObj.visible) {
            WBAni.showComeAni()
        }
        if (this.fishObj) {
            this.fishObj.timer.once(2e3, this,
            function() {
                if (this.BossState < i.delHuDun) {
                    if (this.blood) {
                        this.blood.visible = true
                    }
                    if (this.HuDun) {
                        this.HuDun.visible = true
                    }
                }
                if (this.fishObj) {
                    this.fishObj.visible = true
                }
                if (this.speak) {
                    this.speak.visible = true;
                    this.speakFn()
                }
                WBTitle.I().show(1);
                this.showAniFn()
            })
        }
    };
    t.escape = function() {
        if (this.blood) {
            this.blood.visible = false
        }
        if (this.HuDun) {
            this.HuDun.visible = false
        }
        if (this.speak) {
            this.speak.visible = false
        }
        this.hideAniFn();
        Laya.timer.once(e, this,
        function() {
            if (this.fishObj) {
                this.fishObj.visible = false;
                this.fishObj.hideLockSight()
            }
        });
        WBTitle.I().show(4, {
            RemainMilSec: s.I().RemainMilSec
        });
        if (s.I().RemainMilSec >= 1e3 * 60 * 2) {
            WBAni.showStepAni(WBAni.ani["2fenzhong"])
        }
    };
    t.addDun = function() {
        if (!this.HuDun) {
            var e = new Laya.Animation;
            e.size(256, 256);
            e.pivot(128, 128);
            e.scale(2, 2);
            e.pos(Game.UIWidth / 2, Game.UIHeight / 2);
            this.HuDun = e
        }
        if (this.fishObj) {
            var t = this.fishObj.parent;
            if (t) {
                t.addChild(this.HuDun);
                this.blood.updateBoold(this.RemainHuDun, this.MaxHuDun);
                t.addChild(this.blood);
                this.speak.init();
                t.addChild(this.speak);
                this.speakFn()
            }
            if (this.BossState == i.delHuDun) {
                this.updateBoold(0);
                this.delDun()
            } else {
                this.HuDun.play(0, true, n.hudun)
            }
            if (this.BossState == i.escape) {
                this.fishObj.visible = false;
                this.escape()
            } else {
                this.showAniFn()
            }
        }
    };
    t.delDun = function() {
        if (this.HuDun) {
            this.HuDun.stop();
            this.HuDun.once(Laya.Event.COMPLETE, this,
            function() {
                this.HuDun.removeSelf()
            });
            this.HuDun.play(0, false, n.posui)
        }
    };
    t.reset = function() {
        if (this.fishObj) {
            this.fishObj.dead();
            this.fishObj.removeSelf()
        }
        this.HuDun && this.HuDun.removeSelf();
        if (this.blood) {
            this.blood.timer.clearAll(this.blood);
            this.blood.removeSelf()
        }
        if (this.speak) {
            this.speak.timer.clearAll(this);
            this.speak.removeSelf()
        }
        this.blood = null;
        this.speak = null;
        s.inst = null;
        s._BossState = 0;
        if (WBTitle.inst) {
            WBTitle.inst.reset()
        }
    };
    t.showHitEft = function(e, t) {
        var i = Laya.Pool.getItemByClass("WBFishHitAni", Laya.Animation);
        i.size(256, 256);
        i.pivot(128, 128);
        i.pos(e, t);
        i.rotation = Utils.getRandom(0, 360);
        i.once(Laya.Event.COMPLETE, this,
        function() {
            i.removeSelf();
            Laya.Pool.recover("WBFishHitAni", i)
        });
        if (this.HuDun && this.HuDun.parent) {
            this.HuDun.parent.addChild(i)
        }
        i.play(0, false, n.baodian)
    };
    t.showPoSuiEft = function() {
        var e = Laya.Pool.getItemByClass("HuDunPoSuiAni", Laya.Animation);
        e.size(256, 256);
        e.pivot(128, 128);
        e.scale(2, 2);
        e.interval = 60;
        e.once(Laya.Event.COMPLETE, this,
        function() {
            e.removeSelf();
            Laya.Pool.recover("HuDunPoSuiAni", e)
        });
        if (this.HuDun && this.HuDun.parent) {
            e.pos(this.HuDun.x, this.HuDun.y);
            this.HuDun.parent.addChild(e)
        }
        e.play(0, false, n.posui)
    };
    t.over = function() {
        if (!this.fishObj) {
            return
        }
        if (this.BossDie) {
            WBTitle.I().show(3, {
                RemainMilSec: s.I().RemainMilSec
            });
            Laya.timer.once(3e3, this,
            function() {
                s.I().reset()
            });
            WBAni.showStepAni(WBAni.ani.jisha)
        } else {
            WBAni.showStepAni(WBAni.ani.Henyihan);
            this.reset()
        }
    };
    t.updateBoold = function(e) {
        if (this.blood) {
            this.RemainHuDun = e;
            if (!this.blood.gapNum) {
                this.blood.gapNum = 0
            }
            this.blood.gapNum++;
            if (e == 0) {
                this.blood.gapNum = 5
            }
            if (this.blood.gapNum >= 5) {
                this.blood.gapNum = 0;
                this.blood.updateBoold(this.RemainHuDun, this.MaxHuDun)
            }
        }
    };
    s.getBossState = function() {
        return s._BossState || 0
    };
    s.I = function() {
        if (!s.inst) {
            s.inst = new s;
            s.inst.init()
        }
        return s.inst
    };
    s.WorldBossStateReport = function(e) {
        if (e) {
            s.I().RemainHuDun = e.RemainHuDun;
            s.I().MaxHuDun = e.MaxHuDun;
            s.I().RemainMilSec = e.RemainMilSec;
            s.I().BossState = e.BossState;
            s.I().BossDie = e.BossDie;
            s._BossState = e.BossState;
            if (e.BossState == i.countdown) {
                WBTitle.I().show(2, e)
            } else if (e.BossState == i.over) {
                s.I().over()
            } else {
                s.I().addBoss()
            }
        }
    };
    s.WorldBossRemainHuDunReport = function(e) {
        var t = s.I();
        if (t.MaxHuDun) {
            t.updateBoold(e.RemainHuDun)
        }
    };
    s.setHitBltXy = function(e, t) {
        r = e,
        o = t;
        s.I().showHitEft(e, t)
    };
    s.setFishMul = function(e) {
        l = e
    };
    s.getFishMul = function() {
        return l
    };
    s.WorldBossCollisionRep = function(e) {
        s.I().showPoSuiEft();
        var t = FishScene.getFishScene();
        if (t) {
            var i = FishScene.getCurrentCannon();
            var n = i.dropGoldPos;
            Gold.showGoldNumFont(r, o, e.GetGold, true);
            t.addCatchFishGold([l], e.GetGold, {
                x: r,
                y: o
            },
            i, {
                x: n[0],
                y: n[1]
            },
            e.UserGold)
        }
    };
    return s
} ();
function Jewel() {
    Jewel.super(this)
}
Jewel.getIconSkin = function(e, t) {
    var i = "";
    if (e < 3) {
        switch (t) {
        case 1:
            i = "resource/JewelCity/gem_green_1.png";
            break;
        case 2:
            i = "resource/JewelCity/gem_blue_1.png";
            break;
        case 3:
            i = "resource/JewelCity/gem_yellow_1.png";
            break;
        case 4:
            i = "resource/JewelCity/gem_red_1.png";
            break;
        case 5:
            i = "resource/JewelCity/gem_purple_1.png";
            break;
        case 9:
            i = "resource/JewelCity/image_boom.png";
            break
        }
    } else if (e == 3) {
        switch (t) {
        case 1:
            i = "resource/JewelCity/gem_green_2.png";
            break;
        case 2:
            i = "resource/JewelCity/gem_blue_2.png";
            break;
        case 3:
            i = "resource/JewelCity/gem_yellow_2.png";
            break;
        case 4:
            i = "resource/JewelCity/gem_red_2.png";
            break;
        case 5:
            i = "resource/JewelCity/gem_purple_2.png";
            break;
        case 9:
            i = "resource/JewelCity/image_boom.png";
            break
        }
    }
    return i
};
Jewel.createFrames = function() {
    var e = [{
        name: "Lightning_Hong_",
        num: 6,
        color: "red"
    },
    {
        name: "Lightning_Huang_",
        num: 6,
        color: "yellow"
    },
    {
        name: "Lightning_Lan_",
        num: 6,
        color: "blue"
    },
    {
        name: "Lightning_Lv_",
        num: 6,
        color: "green"
    },
    {
        name: "Lightning_Zi_",
        num: 6,
        color: "purple"
    },
    {
        name: "stone_",
        num: 10,
        color: "stone"
    },
    {
        name: "blast_Hong_",
        num: 14,
        type: "bomb",
        color: "red"
    },
    {
        name: "blast_Huang_",
        num: 14,
        type: "bomb",
        color: "yellow"
    },
    {
        name: "blast_Lan_",
        num: 14,
        type: "bomb",
        color: "blue"
    },
    {
        name: "blast_Lv_",
        num: 14,
        type: "bomb",
        color: "green"
    },
    {
        name: "blast_Zi_",
        num: 14,
        type: "bomb",
        color: "purple"
    }];
    for (var t = 0; t < e.length; t++) {
        var i = e[t];
        var n = [];
        for (var s = 0; s < i.num; s++) {
            n.push("resource/JewelCity/" + i.name + s + ".png")
        }
        if (i.type) {
            Laya.Animation.createFrames(n, "linked_" + i.type + "_" + i.color)
        } else {
            Laya.Animation.createFrames(n, "linked_" + i.color)
        }
    }
    Laya.Animation.createFrames(["resource/JewelCity/gold_00000.png", "resource/JewelCity/gold_00001.png", "resource/JewelCity/gold_00002.png", "resource/JewelCity/gold_00003.png", "resource/JewelCity/gold_00004.png", "resource/JewelCity/gold_00005.png", "resource/JewelCity/gold_00006.png", "resource/JewelCity/gold_00007.png", "resource/JewelCity/gold_00008.png"], "winGold")
};
Laya.class(Jewel, "Jewel", JewelUI, "");
var _proto_ = Jewel.prototype;
_proto_.init = function(e) {
    this.MissionId = e;
    this.readyCall = null;
    this.rotation = 0;
    this.icon.visible = true;
    this.zOrder = 0
};
_proto_.setType = function(e) {
    this.type = e;
    this.color = JewelCityMain.JewColor[this.type];
    this.icon.skin = Jewel.getIconSkin(this.MissionId, this.type)
};
_proto_.playBombAni = function() {
    if (this.linkedBombAni) {
        this.linkedBombAni.visible = true;
        this.linkedBombAni.play(0, false, "linked_bomb_" + this.color);
        this.linkedBombAni.once(Laya.Event.COMPLETE, this,
        function() {
            this.linkedBombAni.visible = false;
            this.removeSelf();
            this.recover()
        });
        this.icon.visible = false
    }
};
_proto_.playAni = function() {
    if (this.linkedAni) {
        this.linkedAni.visible = true;
        this.linkedAni.play(0, false, "linked_" + this.color);
        this.linkedAni.once(Laya.Event.COMPLETE, this,
        function() {
            this.linkedAni.visible = false;
            this.playBombAni()
        })
    }
};
_proto_.updatePos = function(e, t) {
    var i = Math.abs(this.y - e) + 1.5;
    Laya.Tween.to(this, {
        y: e
    },
    200, null, Laya.Handler.create(this,
    function() {
        this.zOrder = 0;
        Sound.playSound(Sound.JewRes.drop.url, Sound.JewRes.drop.vol);
        this.readyCall && this.readyCall()
    }), t)
};
_proto_.recover = function() {
    Laya.Pool.recover("JewelObj", this)
};
function JewCard() {
    JewCard.super(this)
}
Laya.class(JewCard, "JewCard", JewCardUI, "");
var _proto_ = JewCard.prototype;
_proto_.init = function(e, t) {
    this.id = e.PrizeID;
    this.itemBox.dataSource = e;
    this.wrapBox = t;
    this.index = e.index;
    this.zOrder = this.index;
    this.name = "rewardCard_" + this.index;
    var i = 84 + e.index * 159;
    this.orgX = i;
    this.pos(i, 80);
    this.size(160, 224);
    this.pivot(80, 112);
    this.kuangIcon.visible = false;
    this.blackMask.visible = false;
    this.kuangAni = Laya.TimeLine.to(this.kuangIcon, {
        scaleX: .95,
        scaleY: .95,
        alpha: .9
    },
    500).to(this.kuangIcon, {
        scaleX: 1,
        scaleY: 1,
        alpha: 1
    },
    500);
    this.offAll(Laya.Event.CLICK);
    this.on(Laya.Event.CLICK, this,
    function() {});
    this.once(Laya.Event.DISPLAY, this,
    function() {
        this.showAni.visible = true;
        this.timer.once(500, this,
        function() {
            this.cardIcon.visible = true
        });
        this.showAni.play(0, false);
        Sound.playSound(Sound.JewRes.baohe_cuo_card.url, Sound.JewRes.baohe_cuo_card.vol)
    });
    this.once(Laya.Event.UNDISPLAY, this,
    function() {
        this.kuangAni.pause();
        this.blackMask.visible = false
    });
    this.showAni.once(Laya.Event.COMPLETE, this,
    function() {
        this.showAni.visible = false
    });
    this.lightAni.once(Laya.Event.COMPLETE, this,
    function() {
        this.lightAni.visible = false
    });
    this.timer.once(e.index * 200, this, this.show)
};
_proto_.show = function() {
    if (this.wrapBox) {
        this.wrapBox.visible = true;
        this.wrapBox.addChild(this)
    }
};
_proto_.turnCnt = function(e) {
    e = e != undefined ? e: this.index * 600;
    this.timer.once(e, this,
    function() {
        this.itemBox.visible = false;
        var e = Laya.TimeLine.to(this, {
            scaleX: 0
        },
        250).to(this, {
            scaleX: 1
        },
        250);
        e.play(0, false);
        this.timer.once(250, this,
        function() {
            this.cardIcon.skin = "resource/JewelCity/bg_card2.png";
            this.itemBox.visible = true
        })
    })
};
_proto_.turnBg = function() {
    var e = Laya.TimeLine.to(this, {
        scaleX: 0
    },
    250).to(this, {
        scaleX: 1
    },
    250);
    e.play(0, false);
    Sound.playSound(Sound.JewRes.baohe_fan.url, Sound.JewRes.baohe_fan.vol);
    this.timer.once(250, this,
    function() {
        this.cardIcon.skin = "resource/JewelCity/bg_card1.png";
        this.itemBox.visible = false
    })
};
_proto_.updateInfo = function(e) {
    this.itemBox.dataSource = e
};
_proto_.cardToCenter = function(e) {
    Laya.Tween.to(this, {
        x: e
    },
    500)
};
_proto_.showGreenLight = function() {
    this.lightAni.visible = true;
    this.lightAni.play(0, false)
};
_proto_.moveToOrgX = function() {
    Laya.Tween.to(this, {
        x: this.orgX
    },
    300)
};
_proto_.showReward = function(e, t) {
    this.turnCnt(e);
    if (t) {
        this.timer.once(500, this,
        function() {
            this.kuangIcon.visible = true;
            if (this.kuangAni) {
                this.kuangAni.play(0, true)
            }
        })
    } else {
        this.blackMask.visible = true
    }
};
_proto_.recover = function() {
    Laya.Pool.recover("JewCard", this)
};
function LinkedNumItem() {
    LinkedNumItem.super(this)
}
Laya.class(LinkedNumItem, "LinkedNumItem", linkedNumItemUI, "");
var _proto_ = LinkedNumItem.prototype;
_proto_.setData = function(e, t, i) {
    this.icon.skin = Jewel.getIconSkin(e, t);
    this.fc_num.value = "x" + i;
    this.once(Laya.Event.UNDISPLAY, this,
    function() {
        this.recover()
    })
};
_proto_.recover = function() {
    Laya.Pool.recover("LinkedNumItem", this)
};
var JewRule = function() {
    var e = JewRuleUI.prototype;
    e.init = function() {
        Laya.stage.on(Laya.Event.def_LeaveJewCity, this, this.reset);
        this.mulList.scrollBar.hide = true;
        this.on(Laya.Event.CLICK, this,
        function(e) {
            if (e.target.name == "btn_0") {
                this.changeTab(0)
            } else if (e.target.name == "btn_1") {
                this.changeTab(1)
            } else if (e.target.name == "btn_2") {
                this.changeTab(2)
            }
        });
        this.viewBox = [this.box_0, this.box_1, this.box_2];
        this.currViewBox = this.viewBox[0];
        this.tabState = {
            btnList: [this.btn_0, this.btn_1, this.btn_2],
            selectedIndex: 0,
            b_s_1: "resource/JewelCity/btn_help2.png",
            b_s_2: "resource/JewelCity/btn_help1.png",
            icon: [["resource/JewelCity/zi_guize1.png", "resource/JewelCity/zi_guize2.png"], ["resource/JewelCity/zi_shuoming1.png", "resource/JewelCity/zi_shuoming2.png"], ["resource/JewelCity/zi_jiangli1.png", "resource/JewelCity/zi_jiangli2.png"]]
        };
        this.changeTab(0);
        this.setMulList()
    };
    e.setMulList = function() {
        var e = [];
        var t = GameConfig.getJewMul();
        for (var i = 0; i < t.length; i++) {
            var n = t[i];
            e.push({
                title: n.RemoveNum + "连消",
                mul_green: n.Green_1 / 1e4,
                mul_blue: n.Blue_2 / 1e4,
                mul_yellow: n.Yellow_3 / 1e4,
                mul_red: n.Red_4 / 1e4,
                mul_purple: n.Purple_5 / 1e4
            })
        }
        this.mulList.array = e
    };
    e.changeTab = function(e) {
        if (e < this.tabState.btnList.length) {
            var t = this.tabState.btnList[this.tabState.selectedIndex];
            var i = t.getChildByName("icon");
            t.skin = this.tabState["b_s_1"];
            if (i) {
                i.skin = this.tabState.icon[this.tabState.selectedIndex][0]
            }
            var n = this.tabState.btnList[e];
            var s = n.getChildByName("icon");
            n.skin = this.tabState["b_s_2"];
            if (s) {
                s.skin = this.tabState.icon[e][1]
            }
            this.tabState.selectedIndex = e;
            this.changeTabView(e)
        }
    };
    e.changeTabView = function(e) {
        var t = this["box_" + e];
        this.currViewBox.visible = false;
        t.visible = true;
        this.currViewBox = t
    };
    e.onOpened = function() {
        i.opened && i.opened()
    };
    e.onClosed = function() {
        BaseDialog.prototype.onClosed.call(this);
        Laya.stage.off(Laya.Event.def_LeaveJewCity, this, this.reset);
        i.closed && i.closed();
        t = null
    };
    e.reset = function() {
        if (this.displayedInStage) {
            this.close()
        }
        t = null
    };
    var t = null;
    var i = {
        opened: null,
        closed: null,
        show: function() {
            if (!t) {
                t = new JewRuleUI;
                t.init()
            }
            t.popup()
        }
    };
    return i
} ();
var JewLog = function() {
    var e = JewLogUI.prototype;
    e.init = function() {
        Laya.stage.on(Laya.Event.def_LeaveJewCity, this, this.reset);
        this.logList.scrollBar.hide = true
    };
    e.onOpened = function() {
        i.opened && i.opened()
    };
    e.onClosed = function() {
        BaseDialog.prototype.onClosed.call(this);
        Laya.stage.off(Laya.Event.def_LeaveJewCity, this, this.reset);
        t = null;
        i.closed && i.closed()
    };
    e.reset = function() {
        if (this.displayedInStage) {
            this.close()
        }
    };
    e.update = function(e) {
        var t = e.logs,
        i = [];
        for (var n = 0; n < t.length; n++) {
            var s = t[n];
            i.push({
                time: new Date(s.prizeTimeStamp * 1e3).Format("MM-dd hh:mm:ss"),
                num: s.ComboNum,
                maxNum: s.MaxRemoveNum,
                score: {
                    value: s.Score
                },
                bg: "resource/JewelCity/tiao_record" + (n % 2 ? "2": "1") + ".png"
            })
        }
        this.logList.array = i
    };
    var t = null;
    var i = {
        opened: null,
        closed: null,
        show: function() {
            Waiting.show();
            if (!t) {
                t = new JewLogUI;
                t.init()
            }
            Request.GewCityRemoveLogReq()
        },
        GewCityRemoveLogRep: function(e) {
            if (t) {
                t.update(e);
                t.popup()
            }
            Waiting.hide()
        }
    };
    return i
} ();
var JewLoading = function() {
    var i = "JewLoadingUI";
    var e = JewLoadingUI.prototype;
    e.init = function() {
        Adapter.fitView(this, this.bg);
        this.initEvent();
        Laya.stage.on(Laya.Event.def_LeaveJewCity, this, this.reset);
        this.progress.width = 0;
        this.maxWidth = 578;
        this.y = -Game.UIHeight
    };
    e.update = function(e) {
        var t = this.maxWidth * e / 100;
        this.progress.width = t
    };
    e.show = function() {
        this.progress.width = 0;
        Game.UIRoot.addChild(this);
        var e = -(Game.UIHeight - Game.ViewHeight) / 2;
        Laya.Tween.to(this, {
            y: e
        },
        300);
        this.timer.once(300, this,
        function() {
            GameCenter.hide();
            this.zOrder = t.zOrder
        })
    };
    e.hide = function() {
        Game.UIRoot.addChild(this);
        var e = -(Game.UIHeight - Game.ViewHeight) / 2 + Game.UIHeight;
        Laya.Tween.to(this, {
            y: -e
        },
        300);
        this.timer.once(300, this,
        function() {
            this.removeSelf()
        })
    };
    e.reset = function() {
        if (this) {
            this.removeSelf()
        }
    };
    e.display = function() {
        t.display && t.display()
    };
    e.unDisplay = function() {
        this.reset();
        t.unDisplay && t.unDisplay()
    };
    var n = false;
    var t = {
        zOrder: 99,
        load: function(e) {
            Resource.checkLoaded = false;
            Resource.load(RES.loadTaskList.JewLoading,
            function() {
                if (n) {
                    return
                }
                n = true;
                var t = WinUtils.getSaveUI(i);
                if (!t) {
                    t = new JewLoadingUI;
                    t.initBase(i, RES.loadTaskList.JewLoading, {
                        isWindow: true,
                        needFitViews: [t.bg]
                    })
                }
                t.show();
                Waiting.hide();
                t.timer.once(400, t,
                function() {
                    if (Game.state.get() > Game.sceneConfig.sceneID.gameCenter) {
                        if (t) {
                            t.update(100)
                        }
                        n = false;
                        e && e()
                    } else {
                        Resource.checkLoaded = false;
                        Resource.load(RES.JewelCity,
                        function() {
                            n = false;
                            e && e()
                        },
                        function(e) {
                            if (t) {
                                t.update(e)
                            }
                        },
                        false)
                    }
                })
            })
        },
        hide: function() {
            WinUtils.getSaveUI(i) && WinUtils.getSaveUI(i).hide()
        },
        clear: function() {
            Resource.clearRes(RES.JewelCity)
        }
    };
    return t
} ();
var JewelCityMain = function() {
    var f = "JewelCityMainUI";
    var n = [35, 105, 175, 245, 315, 385],
    s = [470, 400, 330, 260, 190, 120];
    var d = {
        1 : "green",
        2 : "blue",
        3 : "yellow",
        4 : "red",
        5 : "purple",
        9 : "Bomb"
    };
    var e = JewelCityMainUI.prototype;
    e.init = function() {
        Adapter.fitView(this, this.bg_1);
        Adapter.center([this.bgBox, this.cnt]);
        this.initEvent();
        Laya.stage.on(Laya.Event.def_updateUserMoney, this, this.updateUserGold);
        Laya.stage.on(Laya.Event.def_onSocketClose, i, i.reportLeaveServer);
        this.RoundID = 0;
        this.JewRectPosList = [];
        this.JewTopPosList = [];
        this.JewTypeList = [];
        this.JewRectDataList = [];
        this.JewDropDataList = [];
        this.allFilterJewId = [];
        this.JewReadyNum = 0;
        this.allJewNum = 0;
        this.JewIndex = 0;
        this.BombData = null;
        this.currBrickUIList = null;
        this.autoBet = false;
        this.linkedNumInstList = [];
        this.winGold = 0;
        this.winMulNum = 0;
        Jewel.createFrames();
        this.canReqReward = false;
        this.cardSelectedIndex = -1;
        this.cardInstList = [];
        this.rewardPool = [];
        this.gameRestart = false;
        this.betMulList.scrollBar.hide = true;
        this.betMulList.selectHandler = new Laya.Handler(this, this.betMulListSelected);
        this.BrickListLeft.vScrollBarSkin = "resource/common/vscroll.png";
        this.BrickListRight.vScrollBarSkin = "resource/common/vscroll.png";
        this.BrickListBottom.hScrollBarSkin = "resource/common/hscroll.png";
        this.BrickListLeft.scrollBar.hide = true;
        this.BrickListRight.scrollBar.hide = true;
        this.BrickListBottom.scrollBar.hide = true;
        this.on(Laya.Event.CLICK, this,
        function(e) {
            this.heatHitTime = 0;
            var t = e.target.name;
            if (e.target.name == "btnExit") {
                this.ReqLeave()
            } else if (e.target.name == "btnLog") {
                JewLog.show()
            } else if (e.target.name == "btnHelp") {
                JewRule.show()
            } else if (e.target.name == "btnAdd") {
                if (this.gameInProgress) {
                    MsgToast.show("宝石迷城进行中，请在本回合结束后，再操作!")
                } else {
                    ShopMall.show(undefined, 7)
                }
            } else if (e.target.name == "btnStart") {
                if (this.autoBet) {
                    this.setAutoBet()
                } else {
                    this.BeginGameReq()
                }
            } else if (e.target.name == "btnAuto") {
                this.setAutoBet()
            } else if (e.target.name == "btnMul") {
                if (this.betMulList._animation_ || this.gameInProgress) {
                    return
                }
                if (this._betMulListShow) {
                    this.hideBetMulList()
                } else {
                    this.showBetMulList()
                }
            } else if (e.target.name == "btnSound") {
                this.setSound()
            } else if (e.target.name == "restartTipBox") {
                this.restartTipBox.visible = false
            }
            if (e.target.name != "btnMul") {
                this.hideBetMulList()
            }
            if (t.indexOf("rewardCard_") == 0 && this.canReqReward && this.cardSelectedIndex < 0) {
                this.reqGetReward(t)
            }
            if (this.gameRestart && this.MissionId == 4) {
                this.restartGame()
            }
        });
        this["JewelUIBox"].dataSource = {
            head: Player.getAvatarUrl(),
            nick: Utils.nickBylen(Player.getNick()),
            fc_gold: {
                value: Player.getGold()
            }
        };
        this.colorFilter = new Laya.ColorFilter([.6, 0, 0, 0, 0, 0, .6, 0, 0, 0, 0, 0, .6, 0, 0, 0, 0, 0, 1, 0]);
        this.heatHitTime = 0;
        this.timer.loop(1e3, this, this.updateHeat);
        if (Game.miniGameIOS()) {
            this.btnAdd.visible = false
        }
        this.adaptView()
    };
    e.adaptView = function() {
        if (Game.Adapter) {
            if (Adapter.fitViewW()) {
                this.mask_1.visible = true;
                this.mask_2.visible = true;
                var e = (Game.ViewWidth - Game.UIWidth) / 2;
                if (e >= this.mask_1.width) {
                    this.mask_1.width = e + 2;
                    this.mask_2.width = e + 4;
                    this.mask_1.x = 0
                } else {
                    this.mask_1.x = e - this.mask_1.width + 2
                }
                this.mask_2.x = Game.ViewWidth - e - 2;
                if (this.bg_1) {
                    this.bg_1.left = 0 - Adapter.getOffsetX()
                }
            } else if (Adapter.fitViewH()) {
                this.mask_3.visible = true;
                this.mask_4.visible = true;
                var t = (Game.ViewHeight - Game.UIHeight) / 2;
                this.mask_3.y = t - this.mask_3.height + 2;
                this.mask_4.y = Game.ViewHeight - t
            }
        }
    };
    e.updateHeat = function() {
        if (!this.gameInProgress) {
            this.heatHitTime++;
            if (this.heatHitTime == 180) {
                this.gameInProgress = false;
                this.ReqLeave()
            }
        } else {
            this.heatHitTime = 0
        }
    };
    e.updateUserGold = function() {
        var e = Player.getGold();
        Player.setGold(e);
        this.fc_gold.value = e
    };
    e.setSound = function() {
        if (this.iconMusicOff.visible) {
            this.iconMusicOff.visible = false;
            Sound.kai_SoundAndMusic();
            if (this.MissionId == 1) {
                Sound.playMusic(Sound.JewRes.bg_1.url, Sound.JewRes.bg_1.vol, true)
            } else if (this.MissionId == 2) {
                Sound.playMusic(Sound.JewRes.bg_2.url, Sound.JewRes.bg_2.vol, true)
            } else if (this.MissionId == 3) {
                Sound.playMusic(Sound.JewRes.bg_3.url, Sound.JewRes.bg_3.vol, true)
            }
        } else {
            this.iconMusicOff.visible = true;
            Sound.guan_SoundAndMusic()
        }
    };
    e.show = function() {
        Game.state.set(Game.sceneConfig.sceneID.scene_JewCity);
        Request.GewCityStartInfoReq();
        Game.UIRoot.addChild(this);
        GameCenter.hide()
    };
    e.ReqLeave = function() {
        if (this.gameInProgress) {
            MsgToast.show("宝石迷城进行中,请在本回合结束后,再退出游戏!");
            return
        }
        this.timer.clearAll(this);
        Request.LeaveGameSvrReq();
        var e = this;
        JewLoading.load(function() {
            Request.package.getListReq();
            Request.GetUserMoneyReq();
            Sound.stopAll();
            GameCenter.show();
            e.removeSelf();
            JewLoading.hide();
            Laya.Pool.clearBySign("LinkedNumItem");
            Laya.Pool.clearBySign("winGold");
            Laya.Pool.clearBySign("TaibangleUI");
            Laya.Pool.clearBySign("BombToStoneAni");
            Laya.Pool.clearBySign("Qiehuanchangjing");
            Laya.Pool.clearBySign("GongxitongguanUI");
            Laya.Pool.clearBySign("JewelObj");
            Laya.Pool.clearBySign("Qiehuanchangjing");
            Laya.Pool.clearBySign("flyIcon");
            Laya.Pool.clearBySign("JewCard")
        })
    };
    e.reset = function() {
        JewLoading.clear();
        Laya.stage.event(Laya.Event.def_LeaveJewCity)
    };
    e.display = function() {
        i.display && i.display()
    };
    e.unDisplay = function() {
        this.reset();
        i.unDisplay && i.unDisplay()
    };
    e.getRowNum = function() {
        if (this.MissionId <= 3) {
            return this.MissionId == 1 ? 4 : this.MissionId == 2 ? 5 : 6
        } else {
            return 0
        }
    };
    e.setAutoBet = function(e) {
        this.autoBet = !this.autoBet;
        if (e != undefined) {
            this.autoBet = e
        }
        if (this.autoBet) {
            this.autoIcon.skin = "resource/JewelCity/zi_zidongzhong.png";
            this.btnStartIcon.skin = "resource/JewelCity/zi_guanzidong.png";
            this.BeginGameReq();
            this.setBtnStartState(false);
            this.btnAutoBetAni.visible = true;
            this.btnAutoBetAni.play(0, true)
        } else {
            this.autoIcon.skin = "resource/JewelCity/zi_zidong.png";
            this.btnStartIcon.skin = "resource/JewelCity/zi_star.png";
            this.btnAutoBetAni.visible = false;
            this.btnAutoBetAni.stop();
            this.setBtnStartState(this.gameInProgress ? true: false)
        }
    };
    e.showLinkedWinGold = function(e) {
        this.fc_winGold.value = "+" + e;
        this.fc_winGold.scale(0, 0);
        this.fc_winGold.y = 362;
        this.fc_winGold.visible = true;
        var t = Laya.TimeLine.to(this.fc_winGold, {
            scaleX: 1,
            scaleY: 1
        },
        350).to(this.fc_winGold, {
            y: 300,
            alpha: 0
        },
        500, null, 300);
        t.play(0, false);
        t.once(Laya.Event.COMPLETE, this,
        function() {
            this.fc_winGold.alpha = 1;
            this.fc_winGold.visible = false
        })
    };
    e.updateWinGold = function(e, t) {
        var i = GameConfig.getLinkedMul(e, t);
        var n = this.fc_currBet._betNum;
        var s = n * i;
        this.winGold += s;
        this.winMulNum += i;
        this.showLinkedWinGold(s)
    };
    e.showWinGoldAni = function() {
        var e = Player.getGold();
        var t = this.winGold;
        Player.setGold(e + t);
        this.winGold = 0;
        this.winMulNum = 0;
        var o = 300;
        var l = this.width / 2;
        var h = this.height / 2;
        var u = 0,
        c = 20;
        for (var i = 0; i < c; i++) { (function(t, e) {
                var i = e % 2 ? 1 : 1.5;
                var n = Laya.Pool.getItemByClass("winGold", Laya.Animation);
                n.size(50, 50);
                n.pivot(25, 25);
                n.scale(i, i);
                var s = Utils.getRandom(l - 300, l + 300);
                var a = h;
                n.pos(s, a);
                var r = Laya.TimeLine.to(n, {
                    y: a - 160
                },
                o).to(n, {
                    y: a
                },
                o).to(n, {
                    y: a - 80
                },
                o).to(n, {
                    y: a
                },
                o).to(n, {
                    y: a - 40
                },
                o).to(n, {
                    y: a
                },
                o).to(n, {
                    y: a - 20
                },
                o).to(n, {
                    y: a
                },
                o);
                n.once(Laya.Event.DISPLAY, t,
                function() {
                    r.play(0, false);
                    n.play(0, true, "winGold");
                    var e = o * Utils.getRandom(2, 3);
                    Laya.Tween.to(n, {
                        x: t.userGoldIcon.x,
                        y: t.userGoldIcon.y,
                        scaleX: .72,
                        scaleY: .72
                    },
                    o * 1.2, null, Laya.Handler.create(t,
                    function() {
                        n.removeSelf();
                        r.destroy();
                        Laya.Pool.recover("winGold", n);
                        u++;
                        if (u == c) {
                            t.updateUserGold()
                        }
                    }), e);
                    t.timer.once(e, t,
                    function() {
                        r.pause()
                    })
                });
                n.once(Laya.Event.UNDISPLAY, t,
                function() {
                    n.stop()
                });
                t.timer.once(Utils.getRandom(100, 800), t,
                function() {
                    t.cnt.addChild(n)
                })
            })(this, i)
        }
        Sound.playSound(Sound.JewRes.money_fly.url, Sound.JewRes.money_fly.vol)
    };
    e.showResult = function(e) {
        var t = Laya.Pool.getItemByClass("TaibangleUI", TaibangleUI);
        t.fc_gold.value = this.winGold;
        var i = null;
        if (this.winMulNum < 1) {
            i = t.great
        } else if (this.winMulNum >= 1 && this.winMulNum <= 5) {
            i = t.perfect
        } else if (this.winMulNum > 5) {
            i = t.excellent
        }
        if (i) {
            i.once(Laya.Event.COMPLETE, this,
            function() {
                t.removeSelf()
            })
        }
        t.once(Laya.Event.DISPLAY, this,
        function() {
            if (i) {
                i.play(0, false);
                if (this.winMulNum < 1) {
                    Sound.playSound(Sound.JewRes.result_great.url, Sound.JewRes.result_great.vol)
                } else if (this.winMulNum >= 1 && this.winMulNum <= 5) {
                    Sound.playSound(Sound.JewRes.result_perfect.url, Sound.JewRes.result_perfect.vol)
                } else if (this.winMulNum > 5) {
                    Sound.playSound(Sound.JewRes.result_excellent.url, Sound.JewRes.result_excellent.vol)
                }
            }
            this.timer.once(200, this, this.showWinGoldAni)
        });
        t.once(Laya.Event.UNDISPLAY, this,
        function() {
            Laya.Pool.recover("TaibangleUI", t);
            e && e.call(this, "")
        });
        t.pos(0, 0);
        this.cnt.addChild(t)
    };
    e.betMulListSelected = function(e) {
        if (this.betMulList.prev_index >= 0) {
            var t = this.betMulList.array[this.betMulList.prev_index];
            t["bg"] = "resource/JewelCity/bg_multiple1.png";
            this.betMulList.setItem(this.betMulList.prev_index, t)
        }
        var i = this.betMulList.selectedItem;
        i["bg"] = "resource/JewelCity/bg_multiple2.png";
        this.betMulList.setItem(e, i);
        this.betMulList.prev_index = e;
        this.fc_currBet._betNum = i.mulNum;
        this.fc_currBet.value = i.mul.value;
        this.hideBetMulList()
    };
    e.hideBetMulList = function() {
        this.betMulList._animation_ = true;
        this._betMulListShow = false;
        Laya.Tween.to(this.betMulList, {
            y: 330
        },
        200);
        Laya.Tween.to(this.btnMulIcon, {
            rotation: 0
        },
        100);
        this.timer.once(600, this,
        function() {
            this.betMulList._animation_ = false;
            this.betMulList.visible = false
        })
    };
    e.showBetMulList = function() {
        this.betMulList._animation_ = true;
        this._betMulListShow = true;
        var e = 330 - this.betMulList.height;
        this.betMulList.visible = true;
        Laya.Tween.to(this.btnMulIcon, {
            rotation: 180
        },
        100);
        var t = Laya.TimeLine.to(this.betMulList, {
            y: e - 20
        },
        200).to(this.betMulList, {
            y: e
        },
        100).to(this.betMulList, {
            y: e + 10
        },
        100).to(this.betMulList, {
            y: e
        },
        200);
        t.play(0, false);
        t.once(Laya.Event.COMPLETE, this,
        function() {
            this.betMulList._animation_ = false
        })
    };
    e.setBetMul = function(e) {
        var t = Player.getGold();
        var i = GameConfig.getJewMulBetList();
        var n = 0;
        for (var s = i.length - 1; s >= 0; s--) {
            if (t >= i[s]) {
                n = i.length - 1 - s;
                break
            }
        }
        e.sort(function(e, t) {
            return e <= t
        });
        if (n > e.length - 1) {
            n = 0
        }
        var a = [],
        r = 1e3;
        for (var s = 0; s < e.length; s++) {
            a.push({
                bg: "resource/JewelCity/bg_multiple1.png",
                mul: {
                    value: "x" + e[s]
                },
                mulNum: e[s]
            })
        }
        r = e[n];
        if (a.length > 0 && a[n]) {
            a[n].bg = "resource/JewelCity/bg_multiple2.png";
            this.betMulList.prev_index = n
        }
        this.betMulList.array = a;
        this.betMulList.height = a.length * 38;
        this.betMulList.visible = false;
        this.fc_currBet._betNum = r;
        this.fc_currBet.value = "x" + r
    };
    e.setBtnStartState = function(e) {
        this.btnStart.filters = e ? [this.colorFilter] : [];
        this.btnMul.filters = e ? [this.colorFilter] : []
    };
    e.BeginGameReq = function() {
        if (this.gameInProgress) {
            return
        }
        this.gameInProgress = true;
        var e = this.JewRectDataList.length ? 600 : 0;
        this.clearViewJew();
        this.timer.once(e, this,
        function() {
            this.heatHitTime = 0;
            var e = Player.getGold();
            var t = this.fc_currBet._betNum;
            if (e >= t) {
                if (t) {
                    this.setBtnStartState(this.autoBet ? false: true);
                    Request.GewCityBeginGameReq(t * 1);
                    e -= t;
                    Player.setGold(e);
                    this.fc_gold.value = e
                }
            } else {
                this.gameInProgress = false;
                this.setAutoBet();
                if (Game.miniGameIOS()) {
                    return
                }
                var i = MsgToast.show("金币不足,前去补足金币!");
                i.submitCall = function() {
                    ShopMall.show(undefined, 6)
                }
            }
        })
    };
    e.GewCityBeginGameRep = function(e) {
        var t = e.GewList;
        this.RoundID = e.RoundID;
        this.JewTypeList = [];
        var i = this.getRowNum();
        var n = t.length / i;
        for (var s = 0; s < n; s++) {
            var a = t.slice(s * i, s * i + i);
            this.JewTypeList.push(a)
        }
        this.setJewelView()
    };
    e.roundOverNextStep = function() {
        if (Game.RunningInBackstage) {
            return
        }
        if (this.roundIsOver()) {
            if (this.MissionId == 3) {
                Request.GewCityFinalRewardListReq()
            } else {
                this.changeScene()
            }
        } else {
            if (this.autoBet) {
                this.BeginGameReq()
            }
        }
    };
    e.findLinkedJew = function() {
        this.allMatchJewList = [];
        for (var e = 0; e < this.JewRectDataList.length; e++) {
            var t = this.JewRectDataList[e];
            for (var i = 0; i < t.length; i++) {
                var n = t[i];
                if (this.allFilterJewId.indexOf(n.id) >= 0) {
                    continue
                }
                this.filterAllArr = [{
                    r: e,
                    c: i,
                    data: n
                }];
                this.filterLinkedJew(n, e, i, [n.id]);
                if (this.filterAllArr.length > 3) {
                    var s = this.filterAllArr.slice();
                    for (var a = 0; a < s.length; a++) {
                        var r = s[a];
                        this.allFilterJewId.push(r.data.id)
                    }
                    this.allMatchJewList.push(s)
                }
                this.filterAllArr = []
            }
        }
        if (this.allMatchJewList.length > 0) {
            this.showLinkedAni()
        } else {
            this.setBtnStartState(false);
            Request.GewCityEndGameReq(this.RoundID);
            this.allFilterJewId = [];
            this.gameInProgress = false;
            if (this.winGold) {
                this.showResult(function() {
                    this.roundOverNextStep()
                })
            } else {
                this.roundOverNextStep()
            }
        }
    };
    e.filterLinkedJew = function(e, t, i, n) {
        var s = e.type;
        var a = [];
        var r = this.getRowNum();
        if (!n) {
            n = []
        }
        if (i + 1 < r && t < r) {
            var e = this.JewRectDataList[t][i + 1];
            if (e.type == s && n.indexOf(e.id) < 0 && this.allFilterJewId.indexOf(e.id) < 0) {
                a.push({
                    r: t,
                    c: i + 1,
                    data: e
                });
                n.push(e.id)
            }
        }
        if (i < r && t + 1 < r) {
            var e = this.JewRectDataList[t + 1][i];
            if (e.type == s && n.indexOf(e.id) < 0 && this.allFilterJewId.indexOf(e.id) < 0) {
                a.push({
                    r: t + 1,
                    c: i,
                    data: e
                });
                n.push(e.id)
            }
        }
        if (i - 1 < r && t < r && i >= 1) {
            var e = this.JewRectDataList[t][i - 1];
            if (e.type == s && n.indexOf(e.id) < 0 && this.allFilterJewId.indexOf(e.id) < 0) {
                a.push({
                    r: t,
                    c: i - 1,
                    data: e
                });
                n.push(e.id)
            }
        }
        if (i < r && t - 1 < r && t >= 1) {
            var e = this.JewRectDataList[t - 1][i];
            if (e.type == s && n.indexOf(e.id) < 0 && this.allFilterJewId.indexOf(e.id) < 0) {
                a.push({
                    r: t - 1,
                    c: i,
                    data: e
                });
                n.push(e.id)
            }
        }
        this.filterAllArr = this.filterAllArr.concat(a);
        if (a.length > 0) {
            for (var o = 0; o < a.length; o++) {
                var l = a[o];
                this.filterLinkedJew(l.data, l.r, l.c, n)
            }
        }
    };
    e.JewLeaveAni = function(e) {
        var t = this.JewelBox.width;
        var i = this.JewelBox.height;
        var n = Utils.getRandom(1, 100);
        if (n % 2) {
            n = t + Utils.getRandom( - 300, 500)
        } else {
            n = 0 - Utils.getRandom( - 300, 500)
        }
        var s = {
            x: e.x,
            y: e.y
        };
        var a = {
            x: n,
            y: i + Utils.getRandom(200, 800)
        };
        var r = Utils.getRandom(300, 450);
        var o = n > e.x ? Utils.getRandom(0, 200) : 0 - Utils.getRandom(0, 200);
        var l = {
            x: e.x + o,
            y: e.y - r
        };
        this.updateReadyJewNum(false);
        var h = {
            delay: 0,
            bezier: [s, l, a],
            onComplete: function(e) {
                e.recover();
                e.removeSelf()
            },
            onCompleteParams: [e]
        };
        this.tweenMaxInst = Laya.Pool.getItemByClass("TweenLite", TweenLite, "");
        this.tweenMaxInst.target = e;
        this.tweenMaxInst.szy_init(e, 1, h)
    };
    e.removeJew = function(e) {
        var t = [];
        t = t.concat(this.JewRectDataList);
        t.push(this.JewDropDataList);
        for (var i = 0; i < t.length; i++) {
            var n = t[i];
            for (var s = 0; s < n.length; s++) {
                var a = n[s];
                if (a.inst) {
                    this.JewLeaveAni(a.inst)
                }
            }
        }
        if (t.length > 1 && !e) {
            Sound.playSound(Sound.JewRes.clean_table.url, Sound.JewRes.clean_table.vol)
        }
        this.JewRectDataList = [];
        this.JewDropDataList = []
    };
    e.clearViewJew = function() {
        this.removeJew();
        this.clearLinkedLog()
    };
    e.showFlyIconAni = function(e, t, i) {
        var n = Laya.Pool.getItemByClass("flyIcon", Laya.Image);
        n.skin = "resource/JewelCity/gem_" + d[e] + "_" + (this.MissionId == 3 ? 2 : 1) + ".png";
        n.scale(1, 1);
        n.pos(i.x, i.y);
        if (this.MissionId == 3) {
            n.size(72, 76);
            n.pivot(36, 38)
        } else {
            n.size(68, 68);
            n.pivot(34, 34)
        }
        this.JewelBox.addChild(n);
        var s = this.MissionId < 3 ? {
            x: -303,
            y: 159
        }: {
            x: -230,
            y: 164
        };
        var a = {
            delay: 0,
            bezier: [{
                x: i.x,
                y: i.y
            },
            {
                x: -184,
                y: 115
            },
            s],
            onComplete: function(e) {
                e.removeSelf();
                Laya.Pool.recover("flyIcon", e)
            },
            onCompleteParams: [n]
        };
        this.tweenMaxInst = Laya.Pool.getItemByClass("TweenLite", TweenLite, "");
        this.tweenMaxInst.target = n;
        this.tweenMaxInst.szy_init(n, 1, a);
        Laya.Tween.to(n, {
            scaleX: .55,
            scaleY: .55
        },
        1e3);
        this.timer.once(950, this, this.addLinkedLog, [e, t]);
        this.updateWinGold(t, e)
    };
    e.showLinkedAni = function() {
        var e = this.allMatchJewList.shift();
        var t = Math.ceil(e.length / 2);
        var i = 0;
        for (var n = 0; n < e.length; n++) {
            var s = e[n];
            if (s.data && s.data.inst && s.data.inst.displayedInStage) {
                i = s.data.type;
                s.data.inst.playAni();
                this.updateReadyJewNum(false)
            }
        }
        Sound.stopSoundByUrl(Sound.JewRes.bomb_1.url);
        Sound.playSound(Sound.JewRes.bomb_1.url, Sound.JewRes.bomb_1.vol);
        var a = e[t];
        if (a && a.data && a.data.inst) {
            var r = a.data.inst;
            this.showFlyIconAni(i, e.length, {
                x: r.x,
                y: r.y
            })
        }
        this.timer.once(1e3, this,
        function() {
            if (this.allMatchJewList.length) {
                this.showLinkedAni()
            } else {
                this.updateRectJew()
            }
        })
    };
    e.addLinkedLog = function(e, t) {
        var i = Laya.Pool.getItemByClass("LinkedNumItem", LinkedNumItem);
        if (i) {
            i.setData(this.MissionId, e, t);
            i.pos(0, 0);
            i.visible = true;
            this.logListBox.addChild(i);
            var n = 30,
            s = 37;
            if (this.MissionId == 3) {
                n = 28,
                s = 37
            }
            Laya.Tween.to(i, {
                y: n
            },
            200, null, Laya.Handler.create(this,
            function() {
                this.linkedNumInstList.unshift(i)
            }));
            for (var a = 0; a < this.linkedNumInstList.length; a++) {
                var r = this.linkedNumInstList[a];
                var o = (a + 1) * s + n;
                if (a < 5) {
                    var l = Laya.TimeLine.to(r, {
                        y: o + 10
                    },
                    200).to(r, {
                        y: o
                    },
                    200);
                    l.play(0, false);
                    l.once(Laya.Event.COMPLETE, this,
                    function() {
                        r.y = o
                    })
                } else {
                    r.visible = false
                }
            }
            this.fc_logNum.value = this.linkedNumInstList.length + 1;
            this.lianJiBox.visible = true
        } else {
            console.log("item is null")
        }
    };
    e.clearLinkedLog = function() {
        for (var e = 0; e < this.linkedNumInstList.length; e++) {
            var t = this.linkedNumInstList[e];
            t.removeSelf()
        }
        this.linkedNumInstList = [];
        this.lianJiBox.visible = false;
        this.fc_logNum.value = 0
    };
    e.findFilledJew = function(e, t, i) {
        var n = this.getRowNum();
        if (t + 1 < this.JewTypeList.length) {
            var s = this.JewTypeList[t + 1];
            var a = s[i];
            if (a == 0) {
                if (e > n) {} else {
                    this.findFilledJew(e, t + 1, i)
                }
            } else {
                this.JewTypeList[e][i] = a;
                this.JewTypeList[t + 1][i] = 0;
                if (t + 1 > n) {
                    var r = e >= n ? this.JewTopPosList[i] : this.JewRectPosList[e][i];
                    var o = this.addJewel(a, r, this.colAddNum * 100);
                    this.colAddNum++;
                    if (e >= n) {
                        this.JewDropDataList[i] = {
                            id: o.id,
                            type: a,
                            inst: o,
                            color: d[a]
                        }
                    } else {
                        this.JewRectDataList[e][i] = {
                            id: o.id,
                            type: a,
                            inst: o,
                            color: d[a]
                        }
                    }
                } else if (t + 1 == n) {
                    var l = this.JewDropDataList[i];
                    this.JewRectDataList[e][i] = l;
                    if (l.inst) {
                        var r = this.JewRectPosList[e][i];
                        this.updateReadyJewNum(false, false);
                        l.inst.updatePos(r.y, this.colAddNum * 100);
                        this.colAddNum++
                    }
                } else {
                    var l = this.JewRectDataList[t + 1][i];
                    this.JewRectDataList[e][i] = l;
                    if (l.inst) {
                        var r = this.JewRectPosList[e][i];
                        this.updateReadyJewNum(false, false);
                        l.inst.updatePos(r.y, this.colAddNum * 100);
                        this.colAddNum++
                    }
                }
            }
        }
    };
    e.updateRectJew = function() {
        var e = this.getRowNum();
        for (var t = 0; t < e; t++) {
            var i = this.JewRectDataList[t];
            for (var n = 0; n < e; n++) {
                var s = i[n];
                if (this.allFilterJewId.indexOf(s.id) >= 0) {
                    this.JewTypeList[t][n] = 0
                }
            }
        }
        this.dropGap = 0;
        for (var n = 0; n < e; n++) {
            this.colAddNum = 0;
            for (t = 0; t < e + 1; t++) {
                var a = this.JewTypeList[t];
                var r = a[n];
                if (r == 0) {
                    this.findFilledJew(t, t, n)
                }
            }
        }
    };
    e.updateReadyJewNum = function(e, t) {
        if (e) {
            this.JewReadyNum++
        } else {
            this.JewReadyNum--;
            if (t === false) {} else {
                this.allJewNum--
            }
        }
        var i = this.getRowNum();
        if (this.JewReadyNum == this.allJewNum && this.JewReadyNum == i * (i + 1)) {
            if (this.BombData) {
                this.throwBomb()
            } else {
                this.timer.once(500, this, this.findLinkedJew)
            }
        }
    };
    e.updateBrickNum = function() {
        var e = this.currBrickUIList.array;
        if (e.length) {
            e.pop();
            this.currBrickUIList.array = e;
            this.BombData = null;
            this.updateRectJew()
        }
    };
    e.playBombAni = function(e, t) {
        var i = Laya.Pool.getItemByClass("BombToStoneAni", Laya.Animation);
        i.pos(e, t);
        i.size(128, 128);
        i.pivot(64, 64);
        i.once(Laya.Event.COMPLETE, this,
        function() {
            i.stop();
            i.removeSelf();
            Laya.Pool.recover("BombToStoneAni", i)
        });
        i.once(Laya.Event.DISPLAY, this,
        function() {
            i.play(0, false, "linked_stone");
            Sound.playSound(Sound.JewRes.bomb_100.url, Sound.JewRes.bomb_100.vol)
        });
        this.JewelBox.addChild(i);
        this.timer.once(100, this, this.updateBrickNum)
    };
    e.updateBombRotation = function(e) {
        e.rotation += 1
    };
    e.throwBomb = function() {
        var e = this.BombData.inst;
        if (e && e.displayedInStage) {
            e.parent.addChild(e);
            this.allFilterJewId.push(this.BombData.id);
            var t = this.currBrickUIList.array;
            var i = t.length,
            n = 0,
            s = 0,
            a = 0,
            r = 0,
            o = 0;
            var l = {
                x: e.x,
                y: e.y
            };
            if (this.MissionId < 3) {
                n = this.MissionId == 1 ? 316 : -36;
                s = this.JewelBox.height - 32 * i + 8;
                a = this.MissionId == 1 ? (n - l.x) / 2 : (l.x - n) / 2;
                a = 68;
                r = this.MissionId == 1 ? n - a: n + a;
                o = s > l.y ? s - 64 : l.y - 64
            } else if (this.MissionId == 3) {
                n = this.BrickListBottom.width / 15 * i - 15;
                s = this.JewelBox.height + this.BrickListBottom.height / 2;
                a = l.x > n ? (l.x - n) / 2 : (n - l.x) / 2;
                r = l.x > n ? l.x - a: l.x + a;
                o = l.y - 64
            }
            var h = {
                x: n,
                y: s
            };
            var u = {
                x: r,
                y: o
            };
            this.updateReadyJewNum(false);
            var c = {
                delay: 0,
                bezier: [l, u, h],
                onComplete: function(e) {
                    e.recover();
                    e.removeSelf();
                    e.timer.clear(WinUtils.getSaveUI(f), WinUtils.getSaveUI(f).updateBombRotation);
                    if (WinUtils.getSaveUI(f) && WinUtils.getSaveUI(f).displayedInStage) {
                        WinUtils.getSaveUI(f).playBombAni(n, s)
                    }
                },
                onCompleteParams: [e]
            };
            this.tweenMaxInst = Laya.Pool.getItemByClass("TweenLite", TweenLite, "");
            this.tweenMaxInst.target = e;
            this.tweenMaxInst.szy_init(e, .7, c);
            e.timer.loop(1, this, this.updateBombRotation, [e])
        }
    };
    e.roundIsOver = function() {
        var e = this.currBrickUIList.array;
        return e.length == 0 ? true: false
    };
    e.changeScene = function() {
        if (this.MissionId < 4) {
            if (this.MissionId < 3) {
                var e = Laya.Pool.getItemByClass("Qiehuanchangjing", Laya.Animation);
                e.source = "UIRoot/FX/JewelCity/Qiehuanchangjing.ani";
                e.pos(this.width / 2, this.height / 2);
                e.once(Laya.Event.COMPLETE, this,
                function() {
                    e.stop();
                    e.removeSelf();
                    Laya.Pool.recover("Qiehuanchangjing", e)
                });
                e.once(Laya.Event.DISPLAY, this,
                function() {
                    e.play(0, false)
                });
                this.addChild(e);
                this.timer.frameOnce(26, this,
                function() {
                    this.MissionId += 1;
                    this.clearViewJew();
                    this.setSceneUI(this.MissionId);
                    this.setBrickNum(this.MissionId, 15);
                    if (this.autoBet) {
                        this.BeginGameReq()
                    }
                })
            } else {
                this.MissionId += 1;
                this.JewelUIBox.visible = false;
                this.setSceneUI(this.MissionId)
            }
        }
    };
    e.setJewPosRect = function() {
        this.JewRectPosList = [];
        this.JewTopPosList = [];
        if (this.MissionId <= 3) {
            var e = this.getRowNum();
            for (var t = 0; t < e; t++) {
                this.JewRectPosList[t] = [];
                for (var i = 0; i < e; i++) {
                    this.JewRectPosList[t].push({
                        x: n[i],
                        y: s[t]
                    })
                }
                this.JewTopPosList.push({
                    x: n[t],
                    y: 36
                })
            }
        }
    };
    e.addJewel = function(e, t, i) {
        var n = Laya.Pool.getItemByClass("JewelObj", Jewel);
        n.id = this.JewIndex;
        n.init(this.MissionId);
        n.setType(e);
        n.pos(t.x, -105);
        n.updatePos(t.y, i);
        n.readyCall = function() {
            if (WinUtils.getSaveUI(f)) {
                WinUtils.getSaveUI(f).updateReadyJewNum(true)
            }
        };
        this.JewelBox.addChild(n);
        this.JewIndex++;
        this.allJewNum++;
        return n
    };
    e.setJewelView = function() {
        this.JewRectDataList = [];
        this.JewDropDataList = [];
        this.allJewNum = 0;
        this.JewReadyNum = 0;
        this.BombData = null;
        this.winGold = 0;
        this.winMulNum = 0;
        var e = this.getRowNum();
        var t = 0;
        for (var i = 0; i < e + 1; i++) {
            if (i < e) {
                var n = this.JewTypeList[i];
                var s = [];
                var a = this.JewRectPosList[i];
                for (var r = 0; r < e; r++) {
                    var o = n[r],
                    l = a[r];
                    var h = Utils.getRandom(t, t + 30);
                    var u = this.addJewel(o, l, h);
                    t += 30;
                    s.push({
                        id: u.id,
                        type: o,
                        inst: u,
                        color: d[o]
                    });
                    if (o == 9) {
                        this.BombData = {
                            id: u.id,
                            type: o,
                            inst: u,
                            color: d[o]
                        }
                    }
                }
                this.JewRectDataList.push(s)
            } else {
                var n = this.JewTypeList[i];
                for (var r = 0; r < n.length; r++) {
                    var o = n[r];
                    var c = this.JewTopPosList[r];
                    var h = Utils.getRandom(t, t + 30);
                    var u = this.addJewel(o, c, h);
                    t += 30;
                    this.JewDropDataList.push({
                        id: u.id,
                        type: o,
                        inst: u,
                        color: d[o]
                    })
                }
            }
        }
    };
    e.showRound4Bg = function() {
        Laya.Tween.to(this.round3_bg_1, {
            x: -320
        },
        500);
        Laya.Tween.to(this.round3_bg_2, {
            y: -this.height
        },
        500);
        Laya.Tween.to(this.round3_bg_3, {
            x: this.width + 320
        },
        500);
        this.timer.once(500, this,
        function() {
            this.round3Box.visible = false;
            this.round3_bg_1.x = 0;
            this.round3_bg_2.y = 0;
            this.round3_bg_3.x = 832;
            this.treeBoxLeft.x = 0;
            this.treeBoxRight.x = this.width;
            this.treeBoxLeft.visible = true;
            this.treeBoxRight.visible = true;
            Laya.Tween.to(this.treeBoxLeft, {
                x: 574
            },
            500);
            Laya.Tween.to(this.treeBoxRight, {
                x: 574
            },
            500)
        });
        this.timer.once(1e3, this, this.showCard)
    };
    e.restartGame = function() {
        this.MissionId = 0;
        this.rewardMsg = null;
        this.setAutoBet(false);
        this.removeJew(true);
        this.changeScene()
    };
    e.showOtherRewardCard = function() {
        for (var e = 0; e < this.cardInstList.length; e++) {
            var t = this.cardInstList[e];
            if (t && t.index != this.cardSelectedIndex) {
                t.showReward(0, false)
            }
        }
        Sound.playSound(Sound.JewRes.baohe_show_card.url, Sound.JewRes.baohe_show_card.vol);
        this.timer.once(1500, this,
        function() {
            this.clickGoOnTip.visible = true;
            this.gameRestart = true
        });
        this.timer.once(4500, this,
        function() {
            if (this.clickGoOnTip.visible) {
                this.restartGame()
            }
        });
        Request.GetUserMoneyReq()
    };
    e.showRewardCard = function(e) {
        var t = e.PrizeID,
        i = null;
        var n = [];
        for (var s = 0; s < this.rewardPool.length; s++) {
            var a = this.rewardPool[s];
            if (a.id == t) {
                a.index = this.cardSelectedIndex;
                i = a
            } else {
                n.push(a)
            }
        }
        for (var r = 0; r < this.cardInstList.length; r++) {
            var o = this.cardInstList[r];
            if (o && o.index != this.cardSelectedIndex) {
                var l = n.pop();
                l.index = r;
                o.updateInfo(l)
            } else {
                o.updateInfo(i)
            }
        }
        this.cardInstList[this.cardSelectedIndex].showReward(0, true);
        Sound.playSound(Sound.JewRes.baohe_open_card.url, Sound.JewRes.baohe_open_card.vol);
        this.countDownBox.visible = false;
        this.timer.clear(this, this.cardCountDown);
        this.timer.once(1e3, this, this.showOtherRewardCard)
    };
    e.cardCountDown = function() {
        var e = this.fc_countDown.value;
        if (e >= 1) {
            this.fc_countDown.value = e - 1
        } else {
            this.countDownBox.visible = false;
            if (this.canReqReward && this.cardSelectedIndex < 0) {
                this.reqGetReward("rewardCard_2")
            }
        }
    };
    e.showCountDown = function() {
        this.maxCardCountDown = 9;
        this.fc_countDown.value = this.maxCardCountDown;
        this.countDownBox.visible = true;
        this.timer.loop(1e3, this, this.cardCountDown);
        this.canReqReward = true
    };
    e.moveToOrgX = function() {
        for (var e = 0; e < this.cardInstList.length; e++) { (function(e) {
                e.moveToOrgX()
            })(this.cardInstList[e])
        }
        this.timer.once(500, this, this.showCountDown)
    };
    e.showGreenLight = function() {
        var e = this.cardInstList.length;
        var t = this.cardInstList[e - 1];
        if (t && t.showGreenLight) {
            t.showGreenLight()
        }
        this.timer.once(2100, this, this.moveToOrgX)
    };
    e.cardToCenter = function() {
        var e = this.cardInstList.length;
        var t = Math.floor(e / 2);
        var i = this.cardInstList[t].x;
        for (var n = 0; n < e; n++) { (function(e) {
                e.cardToCenter(i)
            })(this.cardInstList[n])
        }
        Sound.playSound(Sound.JewRes.baohe_move.url, Sound.JewRes.baohe_move.vol);
        this.timer.once(300, this, this.showGreenLight)
    };
    e.cardTurnBg = function() {
        for (var e = 0; e < this.cardInstList.length; e++) { (function(e) {
                e.turnBg()
            })(this.cardInstList[e])
        }
        this.timer.once(1200, this, this.cardToCenter)
    };
    e.showCardCnt = function() {
        for (var e = 0; e < this.cardInstList.length; e++) { (function(e) {
                e.turnCnt()
            })(this.cardInstList[e])
        }
        this.timer.once(3500, this, this.cardTurnBg)
    };
    e.showCard = function() {
        if (!this.rewardMsg) {
            this.unDisplayPassRoundAni = true;
            Request.GewCityFinalRewardListReq();
            return
        }
        this.unDisplayPassRoundAni = false;
        var e = this.rewardMsg;
        var t = e.FinalPrizeList;
        this.cardInstList = [];
        this.rewardPool = [];
        for (var i = 0; i < t.length; i++) {
            var n = t[i];
            var s = Laya.Pool.getItemByClass("JewCard", JewCard);
            var a = GameConfig.Item.getItemInfoById(n.PrizeItem.ItemId);
            var r = {
                index: i,
                id: n.PrizeID,
                itemIcon: a.skin,
                itemName: a.ItemName,
                itemNum: {
                    value: "x" + n.PrizeItem.ItemNum
                }
            };
            s.init(r, this.cardBox);
            this.rewardPool.push(r);
            this.cardInstList.push(s)
        }
        this.timer.once(1500, this, this.showCardCnt)
    };
    e.showPassReward = function(e) {
        this.rewardMsg = e;
        if (this.unDisplayPassRoundAni) {
            this.showCard();
            return
        }
        var t = Laya.Pool.getItemByClass("GongxitongguanUI", GongxitongguanUI);
        t.update = function() {
            t.bgLight.rotation += 1
        };
        var i = GameConfig.Item.getItemInfoById(e.DisplayItemID);
        if (i) {
            t.itemIcon.skin = i.skin;
            t.itemName.text = i.ItemName;
            t.itemNum.value = "x" + e.DisplayItemNum
        } else {
            t.itemIcon.visible = false;
            t.itemName.visible = false;
            t.itemNum.visible = false
        }
        if (t.ani1) {
            t.once(Laya.Event.UNDISPLAY, this,
            function() {
                t.timer.clear(t, t.update);
                t.update = null;
                Laya.Pool.recover("GongxitongguanUI", t)
            });
            t.once(Laya.Event.DISPLAY, this,
            function() {
                t.ani1.play(0, false);
                Sound.playSound(Sound.JewRes.pass_all.url, Sound.JewRes.pass_all.vol)
            });
            t.ani1.once(Laya.Event.COMPLETE, this,
            function() {
                this.timer.once(1500, this,
                function() {
                    t.close();
                    this.changeScene()
                })
            });
            t.timer.frameLoop(1, t, t.update);
            t.popup();
            Sound.playSound(Sound.JewRes.pass_all.url, Sound.JewRes.pass_all.vol)
        }
    };
    e.reqGetReward = function(e) {
        if (e) {
            var t = e.split("_");
            if (t.length >= 2) {
                var i = t[1];
                this.cardSelectedIndex = i;
                this.canReqReward = false;
                Request.GewCityFinalRewardGetReq()
            }
        }
    };
    e.setSceneUI = function(e) {
        this.MissionId = e;
        this.JewelUIBox.visible = true;
        if (this.gameRestart) {
            this.gameRestart = false;
            this.cardBox.visible = false;
            this.canReqReward = false;
            this.cardSelectedIndex = -1;
            for (var t = 0; t < this.cardInstList.length; t++) { (function(e) {
                    e.removeSelf()
                })(this.cardInstList[t])
            }
            this.cardInstList = [];
            this.rewardPool = [];
            this.countDownBox.visible = false;
            this.clickGoOnTip.visible = false;
            this.treeBoxLeft.visible = false;
            this.treeBoxRight.visible = false;
            this.restartTipBox.visible = true
        }
        this.round1Box.visible = false;
        this.round2Box.visible = false;
        this.round3Box.visible = false;
        if (e == 1) {
            this.bg.skin = "resource/JewelCity/bg_backgroud1.jpg";
            this.round1Box.visible = true;
            if (!this.iconMusicOff.visible) {
                Sound.playMusic(Sound.JewRes.bg_1.url, Sound.JewRes.bg_1.vol, true)
            }
        } else if (e == 2) {
            this.bg.skin = "resource/JewelCity/bg_backgroud2.jpg";
            this.round2Box.visible = true;
            if (!this.iconMusicOff.visible) {
                Sound.playMusic(Sound.JewRes.bg_2.url, Sound.JewRes.bg_2.vol, true)
            }
        } else if (e == 3) {
            this.bg.skin = "resource/JewelCity/bg_backgroud3.jpg";
            this.round3Box.visible = true;
            if (!this.iconMusicOff.visible) {
                Sound.playMusic(Sound.JewRes.bg_3.url, Sound.JewRes.bg_3.vol, true)
            }
        } else if (e == 4) {
            Sound.stopAll();
            this.bg.skin = "resource/JewelCity/bg_backgroud3.jpg";
            this.JewelUIBox.visible = false;
            this.showRound4Bg()
        }
        this.setJewPosRect()
    };
    e.setCenterBrick = function(e) {
        if (e >= 4 && e <= 6) {
            this.BrickListCenter.repeatX = e;
            this.BrickListCenter.repeatY = e;
            var t = [81, 220],
            i = [280, 280];
            if (e == 4) {} else if (e == 5) {
                t = [81, 150],
                i = [350, 350]
            } else if (e == 6) {
                t = [9, 80],
                i = [420, 420]
            }
            this.JewelBox.x = t[0];
            this.JewelBox.width = i[0];
            this.BrickListCenter.pos(t[0], t[1]);
            this.BrickListCenter.size(i[0], i[1])
        }
    };
    e.setBrickNum = function(e, t) {
        if (e < 4) {
            var i = [],
            n = [],
            s = [];
            for (var a = 0; a < 15; a++) {
                i.push({
                    skin: "resource/JewelCity/image_brick1.png"
                });
                s.push({
                    skin: "resource/JewelCity/image_brick3.png"
                })
            }
            n = i;
            this.BrickListBottom.visible = true;
            this.BrickListLeft.visible = true;
            this.BrickListRight.visible = true;
            if (e == 1) {
                i = i.slice(15 - t);
                this.setCenterBrick(4);
                this.currBrickUIList = this.BrickListRight
            } else if (e == 2) {
                n = n.slice(15 - t);
                i = [];
                this.BrickListRight.visible = false;
                this.setCenterBrick(5);
                this.currBrickUIList = this.BrickListLeft;
                this.BrickListRight.visible = false
            } else if (e == 3) {
                s = s.slice(15 - t);
                i = [];
                n = [];
                this.BrickListLeft.visible = false;
                this.BrickListRight.visible = false;
                this.setCenterBrick(6);
                this.currBrickUIList = this.BrickListBottom
            }
            this.BrickListRight.array = i;
            this.BrickListLeft.array = n;
            this.BrickListBottom.array = s
        } else {
            this.BrickListBottom.visible = false;
            this.BrickListLeft.visible = false;
            this.BrickListRight.visible = false
        }
    };
    e.GewCityStartInfoRep = function(e) {
        this.setSceneUI(e.MissionID);
        this.setBrickNum(e.MissionID, e.RemainBrickNum);
        this.setBetMul(e.BetNum)
    };
    e.gameShowFromBg = function() {
        console.log(" show gameInProgress:" + this.gameInProgress);
        if (!this.gameInProgress) {
            this.roundOverNextStep()
        }
        if (this.MissionId <= 3) {
            Sound.playMusic(Sound.JewRes["bg_" + this.MissionId].url, Sound.JewRes["bg_" + this.MissionId].vol, true)
        }
    };
    var t = false;
    var i = {
        display: null,
        unDisplay: null,
        JewColor: d,
        init: function() {},
        show: function() {
            JewLoading.load(function() {
                t = false;
                var e = WinUtils.getSaveUI(f);
                if (!e) {
                    e = new JewelCityMainUI;
                    e.initBase(f, RES.JewelCity, {
                        isWindow: true,
                        needFitViews: [e.bg, e.bg_1]
                    })
                }
                e.show();
                JewLoading.hide()
            })
        },
        GewCityStartInfoRep: function(e) {
            WinUtils.getSaveUI(f) && WinUtils.getSaveUI(f).GewCityStartInfoRep(e);
            JewLoading.hide()
        },
        GewCityBeginGameRep: function(e) {
            WinUtils.getSaveUI(f) && WinUtils.getSaveUI(f).GewCityBeginGameRep(e)
        },
        GewCityRemoveLogRep: function(e) {
            WinUtils.getSaveUI(f) && WinUtils.getSaveUI(f).GewCityRemoveLogRep(e)
        },
        GewCityFinalRewardListRep: function(e) {
            WinUtils.getSaveUI(f) && WinUtils.getSaveUI(f).showPassReward(e)
        },
        GewCityFinalRewardGetRep: function(e) {
            WinUtils.getSaveUI(f) && WinUtils.getSaveUI(f).showRewardCard(e)
        },
        gameShowFromBg: function() {
            WinUtils.getSaveUI(f) && WinUtils.getSaveUI(f).gameShowFromBg()
        },
        reportLeaveServer: function() {
            if (WinUtils.getSaveUI(f)) {
                WinUtils.getSaveUI(f).gameInProgress = false;
                WinUtils.getSaveUI(f).ReqLeave()
            }
        }
    };
    return i
} ();
var BigRichFailView = function() {
    var e = BigRichFailUI.prototype;
    e.init = function(e, t) {
        Laya.stage.on(Laya.Event.def_LeaveBigRich, this, this.reset);
        Laya.Tween.to(this, {
            scaleX: 1,
            scaleY: 1
        },
        500, Laya.Ease.backInOut);
        this.on(Laya.Event.CLICK, this,
        function(e) {
            if (e.target.name == "btnSub") {
                t && t();
                this.reset()
            }
        });
        Sound.playSound(Sound.BigRichRes.end_fail.url, Sound.BigRichRes.end_fail.vol, false)
    };
    e.onOpened = function() {
        t.opened && t.opened()
    };
    e.onClosed = function() {
        t.closed && t.closed();
        Laya.stage.off(Laya.Event.def_LeaveBigRich, this, this.reset);
        BaseDialog.prototype.onClosed.call(this);
        i = null
    };
    e.reset = function() {
        if (this.displayedInStage) {
            this.close()
        }
        i = null
    };
    var i = null;
    var t = {
        opened: null,
        closed: null,
        show: function(e, t) {
            if (!i) {
                i = new BigRichFailUI;
                i.init(e, t)
            }
            i.popup()
        }
    };
    return t
} ();
var BigRichLoad = function() {
    var n = "BigRichLoadFun";
    function s() {
        s.super(this);
        this.initBase(n, [this.bg], true, true)
    }
    Laya.class(s, n, BigRichLoadingUI, "");
    var e = s.prototype;
    e.init = function() {
        Adapter.fitView(this, this.bg);
        this.initEvent();
        Laya.stage.on(Laya.Event.def_LeaveBigRich, this, this.reset);
        this.progress.width = 672;
        this.progress.value = .2;
        this.y = -Game.UIHeight
    };
    e.update = function(e) {
        this.progress.value = e / 100
    };
    e.show = function() {
        Game.UIRoot.addChild(this);
        var e = -(Game.UIHeight - Game.ViewHeight) / 2;
        Laya.Tween.to(this, {
            y: e
        },
        300);
        this.timer.once(300, this,
        function() {
            GameCenter.hide();
            this.zOrder = t.zOrder
        })
    };
    e.hide = function() {
        Game.UIRoot.addChild(this);
        var e = -(Game.UIHeight - Game.ViewHeight) / 2 + Game.UIHeight;
        Laya.Tween.to(this, {
            y: -e
        },
        300);
        this.timer.once(300, this,
        function() {
            this.removeSelf()
        })
    };
    e.reset = function() {
        if (this) {
            this.removeSelf()
        }
    };
    e.display = function() {
        t.display && t.display()
    };
    e.unDisplay = function() {
        this.reset();
        t.unDisplay && t.unDisplay()
    };
    var a = false;
    var t = {
        zOrder: 99,
        load: function(i) {
            Resource.checkLoaded = false;
            Resource.load(RES.BigRichLoading,
            function(e) {
                if (a) {
                    return
                }
                a = true;
                var t = WinUtils.getSaveUI(n);
                if (!t) {
                    t = new s;
                    t.initBase(n, RES.BigRichLoading, {
                        isWindow: true,
                        needFitViews: [t.bg]
                    })
                }
                t.show();
                Waiting.hide();
                t.timer.once(400, t,
                function() {
                    if (Game.state.get() > Game.sceneConfig.sceneID.gameCenter) {
                        if (t) {
                            t.update(100)
                        }
                        a = false;
                        i && i()
                    } else {
                        Resource.checkLoaded = false;
                        Resource.load(RES.BigRich,
                        function() {
                            a = false;
                            i && i()
                        },
                        function(e) {
                            if (t) {
                                t.update(e)
                            }
                        },
                        false)
                    }
                })
            })
        },
        show: function() {
            var e = WinUtils.getSaveUI(n);
            if (!e) {
                e = new s;
                e.initBase(n, RES.BigRichLoading, {
                    isWindow: true,
                    needFitViews: [e.bg]
                })
            }
            e.show()
        },
        hide: function() {
            var e = WinUtils.getSaveUI(n);
            e && e.hide()
        },
        clear: function() {
            Resource.clearRes(RES.BigRich)
        }
    };
    return t
} ();
var BigRichNotice = function() {
    var e = null;
    function t() {
        t.super(this)
    }
    Laya.class(t, "BigRichNoticeFun", BigRichNoticeUI, "");
    var i = t.prototype;
    i.init = function() {
        Laya.stage.on(Laya.Event.def_LeaveBigRich, this, this.reset);
        this.
        continue.clickHandler = new Laya.Handler(this,
        function() {
            this.close();
            BigRichMain.ReqLeave()
        });
        this.exit.clickHandler = new Laya.Handler(this,
        function() {
            this.close()
        })
    };
    i.onClosed = function() {
        Laya.stage.off(Laya.Event.def_LeaveBigRich, this, this.reset);
        BaseDialog.prototype.onClosed.call(this);
        e = null
    };
    i.reset = function() {
        if (this.displayedInStage) {
            this.close()
        }
        e = null
    };
    return {
        show: function() {
            if (!e) {
                e = new t;
                e.init()
            }
            e.popup()
        },
        hide: function() {
            e && e.close()
        }
    }
} ();
var BigRichRank = function() {
    var e = BigRichRankUI.prototype;
    e.init = function() {
        Laya.stage.on(Laya.Event.def_LeaveBigRich, this, this.reset);
        this.on(Laya.Event.CLICK, this,
        function(e) {
            if (e.target.name == "btnHelp") {
                BigRichRankRule.show()
            }
        });
        this.rankList.scrollBar.hide = true;
        Request.BigRichRankRewardListReq()
    };
    e.setRankList = function(e) {
        if (e && e.length > 0) {
            this.rankList.visible = true;
            this.img_nodata.visible = false;
            var t = [];
            for (var i = 0; i < e.length; i++) {
                var n = e[i];
                var s = GameConfig.getBigRichRank();
                var a = n["Rank"];
                var r = 0;
                if (s) {
                    for (var o = 0; o < s.length; o++) {
                        if (a == s[o].Rank) {
                            r = s[o].PrizeItem.split(":")[1]
                        }
                    }
                }
                t.push({
                    bg: i % 2 == 0 ? "": "resource/bigRich/rank/bar_paihanglist2.jpg",
                    userHead: n["AvatarUrl"] == "" ? "resource/head/1.png": n["AvatarUrl"],
                    vipIcon: "resource/icon/vipLevel/vip" + n["VipLevel"] + ".png",
                    uName: {
                        text: Utils.nickBylen(n["Nick"])
                    },
                    uId: {
                        text: "编号:" + n["UserId"]
                    },
                    rankImg: {
                        visible: a < 4 ? true: false,
                        skin: a < 4 ? "resource/bigRich/rank/img_paiming" + a + ".png": ""
                    },
                    fc_rank: {
                        visible: a >= 4 ? true: false,
                        value: a
                    },
                    fc_gold: {
                        value: r
                    },
                    xing: {
                        text: n["Star"]
                    }
                })
            }
            this.rankList.array = t
        } else {
            this.rankList.visible = false;
            this.img_nodata.visible = true
        }
    };
    e.onOpened = function() {
        i.opened && i.opened()
    };
    e.onClosed = function() {
        i.closed && i.closed();
        Laya.stage.off(Laya.Event.def_LeaveBigRich, this, this.reset);
        BaseDialog.prototype.onClosed.call(this);
        t = null
    };
    e.reset = function() {
        if (this.displayedInStage) {
            this.close()
        }
        t = null
    };
    var t = null;
    var i = {
        opened: null,
        closed: null,
        show: function() {
            if (!t) {
                t = new BigRichRankUI;
                t.init()
            }
            t.popup()
        },
        BigRichGameRankRep: function(e) {
            if (t) {
                t.setRankList(e.Ranks)
            }
        }
    };
    return i
} ();
var BigRichRankRule = function() {
    var e = BigRichRankRuleUI.prototype;
    e.init = function() {
        Laya.stage.on(Laya.Event.def_LeaveBigRich, this, this.reset);
        this.on(Laya.Event.CLICK, this,
        function(e) {})
    };
    e.onOpened = function() {
        i.opened && i.opened()
    };
    e.onClosed = function() {
        i.closed && i.closed();
        Laya.stage.off(Laya.Event.def_LeaveBigRich, this, this.reset);
        BaseDialog.prototype.onClosed.call(this);
        t = null
    };
    e.reset = function() {
        if (this.displayedInStage) {
            this.close()
        }
        t = null
    };
    var t = null;
    var i = {
        opened: null,
        closed: null,
        show: function() {
            if (!t) {
                t = new BigRichRankRuleUI;
                t.init()
            }
            t.popup()
        }
    };
    return i
} ();
var BigRichRule = function() {
    var e = BigRichRuleUI.prototype;
    e.init = function() {
        Laya.stage.on(Laya.Event.def_LeaveBigRich, this, this.reset);
        this.on(Laya.Event.CLICK, this,
        function(e) {})
    };
    e.onOpened = function() {
        i.opened && i.opened()
    };
    e.onClosed = function() {
        i.closed && i.closed();
        Laya.stage.off(Laya.Event.def_LeaveBigRich, this, this.reset);
        BaseDialog.prototype.onClosed.call(this);
        t = null
    };
    e.reset = function() {
        if (this.displayedInStage) {
            this.close()
        }
        t = null
    };
    var t = null;
    var i = {
        opened: null,
        closed: null,
        show: function() {
            if (!t) {
                t = new BigRichRuleUI;
                t.init()
            }
            t.popup()
        }
    };
    return i
} ();
var BigRichStart = function() {
    var n = "BigRichStartUI";
    var e = BigRichStartUI.prototype;
    e.initData = function(e, t) {
        this.initEvent();
        Laya.stage.on(Laya.Event.def_LeaveBigRich, this, this.reset);
        var i = e.LeaveCount ? e.LeaveCount: 0;
        this.on(Laya.Event.CLICK, this,
        function(e) {
            if (e.target.name != "btnChangeBet") {
                this.btnChangeBet.selected = false;
                this.BetClick()
            }
            if (e.target.name == "btnGameStart") {
                if (i > 0) {
                    Laya.LocalStorage.setItem("bigRich_bet", this.fc_currBet.text);
                    t && t(this.fc_currBet.text);
                    this.hide()
                } else {
                    MsgToast.show("今日次数已用完,无法进行游戏！")
                }
            } else if (e.target.name == "btnExt") {
                this.hide();
                BigRichMain.ReqLeave()
            } else if (e.target.name == "btnChangeBet") {
                this.BetClick()
            } else if (e.target.name == "btnHelp") {
                BigRichRule.show()
            } else if (e.target.name == "btnRank") {
                BigRichRank.show()
            }
        });
        this.btn_share.on(Laya.Event.MOUSE_DOWN, this,
        function() {
            this.share_notice.visible = true
        });
        this.btn_share.on(Laya.Event.MOUSE_UP, this,
        function() {
            this.share_notice.visible = false
        });
        this.cur_num_game.text = "(" + i + "/10)";
        this.betMulList.scrollBar.hide = true;
        this.betMulList.selectHandler = new Laya.Handler(this, this.betMulListSelected);
        var n = [1e3, 1e4, 1e5, 1e6, 1e7];
        var s = GameConfig.getZillionaire();
        if (s && s[0]) {
            var a = s[0]["BetNumList"];
            n = a.split("|")
        }
        this.setBetMul(n)
    };
    e.betMulListSelected = function(e) {
        if (this.betMulList.prev_index >= 0) {
            var t = this.betMulList.array[this.betMulList.prev_index];
            t["bg"] = "resource/bigRich/game/btn_gold.png";
            this.betMulList.setItem(this.betMulList.prev_index, t)
        }
        var i = this.betMulList.selectedItem;
        i["bg"] = "resource/bigRich/game/btn_gold_sel.png";
        this.betMulList.setItem(e, i);
        this.betMulList.prev_index = e;
        this.btnChangeBet.selected = false;
        this.BetClick();
        this.fc_currBet.text = i.mulNum
    };
    e.BetClick = function() {
        if (this.btnChangeBet.selected) {
            if (this.betMulList.array.length > 0) {
                Laya.Tween.to(this.arrow, {
                    rotation: 180
                },
                100);
                this.betMulList.visible = true;
                var e = 266 - this.betMulList.height;
                var t = Laya.TimeLine.to(this.betMulList, {
                    y: e - 20
                },
                200).to(this.betMulList, {
                    y: e
                },
                100).to(this.betMulList, {
                    y: e + 10
                },
                100).to(this.betMulList, {
                    y: e
                },
                200);
                t.play(0, false);
                var i = 262 - this.listBg.height;
                var n = Laya.TimeLine.to(this.listBg, {
                    y: i - 20
                },
                200).to(this.listBg, {
                    y: i
                },
                100).to(this.listBg, {
                    y: i + 10
                },
                100).to(this.listBg, {
                    y: i
                },
                200);
                n.play(0, false);
                this.listBg.visible = true
            }
        } else {
            Laya.Tween.to(this.arrow, {
                rotation: 0
            },
            100);
            Laya.Tween.to(this.betMulList, {
                y: 266
            },
            200);
            Laya.Tween.to(this.listBg, {
                y: 263
            },
            200);
            this.timer.once(200, this,
            function() {
                if (this.displayedInStage) {
                    this.listBg.visible = false;
                    this.betMulList.visible = false
                }
            })
        }
    };
    e.setBetMul = function(e) {
        var t = Player.getGold();
        var i = e;
        var n = Laya.LocalStorage.getItem("bigRich_bet");
        var s = 0;
        for (var a = 0; a < e.length; a++) {
            if (n && n < t) {
                if (e[a] == n) {
                    s = a
                }
            }
            if (n && n > t) {
                if (t > e[a] && t < e[a + 1]) {
                    s = a
                }
            }
        }
        var r = [],
        o = 1e3;
        for (var a = 0; a < e.length; a++) {
            if (t > e[a]) {
                r.push({
                    bg: "resource/bigRich/game/btn_gold.png",
                    mul: {
                        text: e[a]
                    },
                    mulNum: e[a]
                })
            }
        }
        o = e[s];
        if (r.length > 0 && r[s]) {
            r[s].bg = "resource/bigRich/game/btn_gold_sel.png";
            this.betMulList.prev_index = s
        }
        this.betMulList.array = r;
        this.betMulList.height = r.length * 55;
        this.betMulList.visible = false;
        this.listBg.height = r.length * 55;
        this.listBg.visible = false;
        this.fc_currBet.text = o
    };
    e.show = function(e) {
        e.view.addChild(this)
    };
    e.hide = function() {
        this.removeSelf()
    };
    e.reset = function() {};
    var t = {
        opened: null,
        closed: null,
        show: function(e, t) {
            var i = WinUtils.getSaveUI(n);
            if (!i) {
                i = new BigRichStartUI;
                i.initData(e, t)
            }
            i.show(e)
        }
    };
    return t
} ();
var BigRichSuccView = function() {
    var e = BigRichSuccUI.prototype;
    e.init = function(e, t) {
        Laya.stage.on(Laya.Event.def_LeaveBigRich, this, this.reset);
        Laya.Tween.to(this, {
            scaleX: 1,
            scaleY: 1
        },
        500, Laya.Ease.backInOut);
        this.on(Laya.Event.CLICK, this,
        function(e) {
            if (e.target.name == "btnSub") {
                t && t();
                this.reset()
            } else if (e.target.name == "btnShare") {
                if (Channel && Channel.forward) {
                    Channel.forward(Game.ShareType.BIGRICH,
                    function() {
                        Request.BigRichShareSuccessReq()
                    });
                    ActionReport.addLog(ActionReport.actionIndex.invit_WXP)
                }
            }
        });
        if (e.LastRank != null && e.LastRank != 0) {
            if (e.Rank < e.LastRank) {
                this.rankTrend.visible = true;
                this.rankTrend.skin = "resource/bigRich/result/img_up.png"
            } else if (e.Rank > e.LastRank) {
                this.rankTrend.visible = true;
                this.rankTrend.skin = "resource/bigRich/result/img_down.png"
            } else {
                this.rankTrend.visible = false
            }
        }
        if (e.LastRank != null && e.LastRank == 0) {
            this.rankTrend.visible = true;
            this.rankTrend.skin = "resource/bigRich/result/img_up.png"
        }
        if (e.Rank * 1 > 10) {
            this.rankTrend.visible = false
        }
        this.dataSource = {
            fc_gold: {
                value: "x" + e.Gold
            },
            fc_xing: {
                value: "x" + e.Star
            },
            labelRank: e.Rank * 1 > 10 ? "未上榜": e.Rank
        };
        Sound.playSound(Sound.BigRichRes.end_success.url, Sound.BigRichRes.end_success.vol, false)
    };
    e.onOpened = function() {
        t.opened && t.opened()
    };
    e.onClosed = function() {
        t.closed && t.closed();
        Laya.stage.off(Laya.Event.def_LeaveBigRich, this, this.reset);
        BaseDialog.prototype.onClosed.call(this);
        i = null
    };
    e.reset = function() {
        if (this.displayedInStage) {
            this.close()
        }
        i = null
    };
    var i = null;
    var t = {
        opened: null,
        closed: null,
        show: function(e, t) {
            if (!i) {
                i = new BigRichSuccUI;
                i.init(e, t)
            }
            i.popup()
        }
    };
    return t
} ();
var BigRichMain = function() {
    var s = "BigRichMainUI";
    var p = {
        1 : "GridType_Forward3",
        2 : "GridType_Forward6",
        3 : "GridType_Back4",
        4 : "GridType_Double",
        5 : "Grid5To",
        6 : "Grid6To",
        7 : "Grid7To",
        8 : "Grid8To",
        9 : "Grid9To"
    };
    var a = {
        0 : {
            emjoy: "resource/chatSystem/emjoy_10.png",
            image: ""
        },
        1 : {
            emjoy: "resource/chatSystem/emjoy_6.png",
            image: ""
        },
        2 : {
            emjoy: "resource/chatSystem/emjoy_6.png",
            image: "resource/bigRich/game/zi_fanbei2.png"
        },
        3 : {
            emjoy: "resource/chatSystem/emjoy_2.png",
            image: "resource/bigRich/game/zi_tui4.png"
        },
        4 : {
            emjoy: "resource/chatSystem/emjoy_4.png",
            image: "resource/bigRich/game/zi_qianjin3.png"
        },
        5 : {
            emjoy: "resource/chatSystem/emjoy_4.png",
            image: "resource/bigRich/game/zi_qianjin6.png"
        }
    };
    var e = BigRichMainUI.prototype;
    e.init = function() {
        Adapter.fitView(this);
        if (Adapter.fitViewH()) {
            Adapter.middle(this)
        } else if (Adapter.fitViewW()) {
            Adapter.center(this)
        }
        this.PrizeSprite.visible = false;
        this.initEvent();
        Laya.stage.on(Laya.Event.def_updateUserMoney, this, this.updateUserGold);
        Laya.stage.on(Laya.Event.def_onSocketClose, i, i.reportLeaveServer);
        this.tiledMap = null;
        this.mapView = null;
        this.mLastMouseX = 0;
        this.mLastMouseY = 0;
        this.mX = 0;
        this.mY = 0;
        this._headMoveSpeed = 300;
        this._headSpeMoveSpeed = 100;
        this.chip = 0;
        this.mapPathPointA = [];
        this.selfMoveIndex = 0;
        this.npcMoveIndex = 0;
        this.hall_loadIn = true;
        this.triggerForward = false;
        this.triggerBack = false;
        this.triggerDouble = false;
        this.inRound = false;
        this.betNumArr = [];
        var e = GameConfig.getZillionaire();
        if (e && e[0]) {
            if (e[0]["BetNumList"]) {
                this.betNumArr = e[0]["BetNumList"].split("|")
            }
            this.specialEventMove = e[0]
        }
        var t = this.getChildByName("btnShare");
        if (t) {
            t.visible = Channel && Channel.forward ? true: false
        }
        this.on(Laya.Event.CLICK, this,
        function(e) {
            if (e.target.name == "btnStart") {
                if (this.PrizeSprite.visible) {
                    return
                }
                console.log("btnStart...");
                this.inRound = true;
                this.updateSelfMapPoint(this._headMoveSpeed);
                Request.BigRichThrowSieveReq(this.chip)
            } else if (e.target.name == "btnRank") {
                BigRichRank.show()
            } else if (e.target.name == "btnExit") {
                if (this.inRound) {
                    MsgToast.show("大富豪进行中，请在本回合结束后，再退出游戏");
                    return false
                }
                BigRichNotice.show()
            } else if (e.target.name == "btnAdd") {
                if (this.inRound) {
                    MsgToast.show("大富豪进行中，请在本回合结束后，再操作!")
                } else {
                    ShopMall.show(undefined, 7)
                }
            } else if (e.target.name == "btnSound") {
                this.setSound()
            } else if (e.target.name == "btnHelp") {
                BigRichRule.show()
            } else if (e.target.name == "btnShare") {
                if (Channel && Channel.forward) {
                    Channel.forward(Game.ShareType.BIGRICH,
                    function() {
                        Request.BigRichShareSuccessReq()
                    });
                    ActionReport.addLog(ActionReport.actionIndex.invit_WX)
                }
            } else if (e.target.name == "gamecontinue") {
                Laya.Tween.to(this.PrizeSprite, {
                    x: 0,
                    y: -640
                },
                600, Laya.Ease.bounceOut, Laya.Handler.create(this,
                function() {
                    if (this.hall_loadIn && this.selfMoveIndex == 0 && this.npcMoveIndex == 0) {
                        var e = Laya.LocalStorage.getItem("playNum");
                        if (e) {
                            if (e <= 3) {
                                e += 1;
                                Laya.LocalStorage.setItem("playNum", e);
                                this.SlowMovingMapAni()
                            } else {
                                this.GuidePlayerOperate(false)
                            }
                        } else {
                            Laya.LocalStorage.setItem("playNum", "1");
                            this.SlowMovingMapAni()
                        }
                    } else {
                        this.GuidePlayerOperate(false)
                    }
                    this.PrizeSprite.visible = false
                }))
            }
        });
        this["BigRichUIBox"].dataSource = {
            visible: true,
            head: Player.getAvatarUrl(),
            fc_gold: {
                value: Player.getGold()
            },
            vipIcon: "resource/icon/vipLevel/vip" + Player.getVipLevel() + ".png"
        };
        this.heatHitTime = 0;
        this.timer.loop(1e3, this, this.updateHeat);
        if (Game.onMiniGame && Game.isIOS) {
            this.btnAdd.visible = false
        }
    };
    e.updateHeat = function() {
        if (!this.inRound) {
            this.heatHitTime++;
            if (this.heatHitTime == 180) {
                this.inRound = false;
                this.ReqLeave()
            }
        } else {
            this.heatHitTime = 0
        }
    };
    e.clearLinkedLog = function() {
        this.chip = 0;
        this.starNum = 0;
        this.PrizeMul = 1;
        this.mapPathPointA = [];
        this.selfMoveIndex = 0;
        this.npcMoveIndex = 0;
        this.hall_loadIn = false;
        this.inRound = false;
        this.triggerDouble = false;
        this.btnStartBox.disabled = false;
        this.jackpotBox.visible = false;
        this.selfBox.visible = false;
        this.NPC.visible = false;
        this.specialSprite.destroyChildren();
        var e = (Game.UIWidth - Game.ViewWidth) / 2;
        Laya.Tween.to(this.mapView, {
            x: e,
            y: 0
        },
        this._headMoveSpeed);
        Laya.Tween.to(this.specialSprite, {
            x: e,
            y: 0
        },
        this._headMoveSpeed);
        Laya.Tween.to(this.userSprite, {
            x: e,
            y: 0
        },
        this._headMoveSpeed)
    };
    e.selfSieveAnimation = function() {
        this.sieve_img.skin = "resource/bigRich/sieve/02.png";
        var e = Laya.TimeLine.to(this.sieve_img, {
            x: 485,
            y: 175,
            scaleX: 3,
            scaleY: 3
        },
        100).to(this.sieve_img, {
            x: 440,
            y: 180,
            scaleX: 2,
            scaleY: 2
        },
        100);
        e.play(0, false);
        e.once(Laya.Event.COMPLETE, this,
        function() {
            this.sieveAni.visible = true;
            this.sieve_img.visible = false;
            this.sieveAni.play();
            Sound.playSound(Sound.BigRichRes.shake_sieve.url, Sound.BigRichRes.shake_sieve.vol, false);
            Laya.timer.once(1e3, this,
            function() {
                this.sieveAni.stop();
                this.sieveAni.index = this.PNum + 7;
                Laya.timer.once(600, this,
                function() {
                    Laya.Tween.to(this.sieveAni, {
                        x: 980,
                        y: 500,
                        scaleX: 1,
                        scaleY: 1
                    },
                    200, null, Laya.Handler.create(this,
                    function() {
                        this.sieveAni.pos(410, 165);
                        this.sieveAni.scaleX = 2;
                        this.sieveAni.scaleY = 2;
                        this.sieveAni.visible = false;
                        this.sieve_img.pos(980, 500);
                        this.sieve_img.scaleX = 1;
                        this.sieve_img.scaleY = 1;
                        this.sieve_img.visible = true;
                        this.sieve_img.skin = "resource/bigRich/sieve/" + (this.PNum + 8 < 10 ? "0" + (this.PNum + 8) : this.PNum + 8) + ".png";
                        Laya.timer.once(this._headMoveSpeed, this,
                        function() {
                            this.HeroMove(this.selfMoveIndex + this.PNum, this._headMoveSpeed, true)
                        })
                    }))
                })
            })
        })
    };
    e.npcSieveAnimation = function() {
        this.npc_sieve_img.skin = "resource/bigRich/sieve/02.png";
        this.npc_sieve_img.visible = true;
        var e = Laya.TimeLine.to(this.npc_sieve_img, {
            x: 555,
            y: 50,
            scaleX: 4,
            scaleY: 4
        },
        100).to(this.npc_sieve_img, {
            x: 440,
            y: 180,
            scaleX: 3,
            scaleY: 3
        },
        100);
        e.play(0, false);
        e.once(Laya.Event.COMPLETE, this,
        function() {
            this.sieveAni.visible = true;
            this.npc_sieve_img.visible = false;
            this.sieveAni.play();
            Sound.playSound(Sound.BigRichRes.shake_sieve.url, Sound.BigRichRes.shake_sieve.vol, false);
            Laya.timer.once(1e3, this,
            function() {
                this.sieveAni.stop();
                this.sieveAni.index = this.RNum + 7;
                Laya.timer.once(600, this,
                function() {
                    Laya.Tween.to(this.sieveAni, {
                        x: 680,
                        y: 0,
                        scaleX: 1,
                        scaleY: 1
                    },
                    200, null, Laya.Handler.create(this,
                    function() {
                        this.sieveAni.pos(410, 165);
                        this.sieveAni.scaleX = 2;
                        this.sieveAni.scaleY = 2;
                        this.sieveAni.visible = false;
                        this.npc_sieve_img.pos(745, 20);
                        this.npc_sieve_img.scaleX = 1;
                        this.npc_sieve_img.scaleY = 1;
                        this.npc_sieve_img.visible = true;
                        this.npc_sieve_img.skin = "resource/bigRich/sieve/" + (this.RNum + 8 < 10 ? "0" + (this.RNum + 8) : this.RNum + 8) + ".png";
                        Laya.timer.once(this._headMoveSpeed, this,
                        function() {
                            this.NPCMove(this.RNum + this.npcMoveIndex, this._headMoveSpeed, true)
                        })
                    }))
                })
            })
        })
    };
    e.createMap = function() {
        this.tiledMap = new Laya.TiledMap;
        this.tiledMap.createMap("res/TiledMap/bigrichmap.json", new Laya.Rectangle(0, 0, Game.UIWidth * 2, Game.UIHeight), Laya.Handler.create(this,
        function() {
            this.mapView = this.tiledMap.mapSprite();
            this.addChildAt(this.mapView, 0);
            this.passPath = this.tiledMap.getLayerByIndex(1);
            this.show();
            Request.BigRichStartInfoReq();
            var e = (Game.UIWidth - Game.ViewWidth) / 2;
            this.mapView.pos(e, 0);
            this.specialSprite.pos(e, 0);
            this.userSprite.pos(e, 0)
        }))
    };
    e.updateMapPath = function(e) {
        var t = this.passPath._childs;
        var i = this.passPath._dataDic;
        var n = e.Grid;
        this.chip = e.BetNum;
        this.selfMoveIndex = e.PPos < 0 ? 0 : e.PPos - 1;
        this.npcMoveIndex = e.RPos < 0 ? 0 : e.RPos - 1;
        this.PrizeMul = e.PrizeMul;
        if (n) {
            for (var s = 0; s < n.length; s++) {
                if (t && t[s]) {
                    var a = t[s].relativeX;
                    var r = t[s].relativeY;
                    var o = t[s]._width;
                    var l = t[s]._height;
                    var h = a - o / 2;
                    var u = r + l / 2;
                    var c = "";
                    var f = n[s];
                    if (f > 0) {
                        c = p[f];
                        if (f <= 4) {
                            var d = new Laya.Image;
                            d.skin = "resource/bigRich/game/" + c + ".png";
                            d.pos(a, r);
                            d.anchorX = .5;
                            d.anchorY = 1;
                            this.specialSprite.addChild(d)
                        }
                    }
                    var g = {
                        x: a,
                        y: r,
                        name: c
                    };
                    this.mapPathPointA.push(g)
                }
            }
        }
        this.updatePlayerInfo()
    };
    e.updateStarPrize = function() {
        this.starNum = this.chip < 1e4 ? 1 : this.chip < 1e5 ? 2 : this.chip < 1e6 ? 3 : this.chip < 1e7 ? 4 : 5;
        var e = this.starNum == 1 ? 65 : this.starNum == 2 ? 50 : this.starNum == 3 ? 35 : this.starNum == 4 ? 25 : 10;
        this["jackpotBox"].dataSource = {
            prize_gold: {
                value: this.chip * 2 * this.PrizeMul
            },
            startList: {
                x: e,
                repeatX: this.starNum
            }
        }
    };
    e.updatePlayerInfo = function() {
        var e = null;
        this.updateStarPrize();
        if (this.selfMoveIndex == 0 && this.npcMoveIndex == 0) {
            e = "resource/head/" + this.RandomAvatar() + ".png";
            Laya.LocalStorage.setItem("NPCRandomHead", e);
            this["prizeBox"].dataSource = {
                prize_gold: {
                    value: this.chip * 2 * this.PrizeMul
                },
                prize_star: {
                    value: this.starNum
                }
            };
            this.PrizeSprite.visible = true;
            Laya.Tween.to(this.PrizeSprite, {
                x: 0,
                y: 0
            },
            600, Laya.Ease.bounceOut, Laya.Handler.create(this,
            function() {
                this.jackpotBox.visible = true
            }))
        } else {
            e = Laya.LocalStorage.getItem("NPCRandomHead");
            if (!e) {
                e = "resource/head/" + this.RandomAvatar() + ".png"
            }
            this.jackpotBox.visible = true;
            this.GuidePlayerOperate(false)
        }
        this["NPCUIBox"].dataSource = {
            head: e,
            visible: true
        };
        if (this.mapPathPointA) {
            this.selfBox.visible = true;
            this.NPC.visible = true;
            var t = 0;
            if (this.selfMoveIndex == this.npcMoveIndex) {
                t = 10
            }
            if (this.mapPathPointA[this.selfMoveIndex] && this.mapPathPointA[this.npcMoveIndex]) {
                this.selfBox.pos(this.mapPathPointA[this.selfMoveIndex].x + t, this.mapPathPointA[this.selfMoveIndex].y);
                this.NPC.pos(this.mapPathPointA[this.npcMoveIndex].x - t, this.mapPathPointA[this.npcMoveIndex].y)
            }
            this.ani_self.visible = true;
            this.ani_npc.visible = false;
            this.move_self.visible = true;
            this.move_npc.visible = false;
            this.updateSelfMapPoint(this._headMoveSpeed);
            this.btnStartBox.on(Laya.Event.MOUSE_DOWN, this, this.mouseDown);
            this.btnStartBox.on(Laya.Event.MOUSE_UP, this, this.mouseUp);
            this["selfBox"].dataSource = {
                Head_self: Player.getAvatarUrl()
            };
            this["NPC"].dataSource = {
                Head_npc: e
            }
        }
    };
    e.mouseDown = function() {
        this.mLastMouseX = Laya.stage.mouseX;
        Laya.stage.on(Laya.Event.MOUSE_MOVE, this, this.mouseMove)
    };
    e.mouseMove = function() {
        var e = this.mX + (Laya.stage.mouseX - this.mLastMouseX);
        var t = (Game.UIWidth - Game.ViewWidth) / 2;
        if (e <= -(Game.UIWidth + t)) {
            e = -(Game.UIWidth + t)
        }
        if (e >= t) {
            e = t
        }
        this.mapView.pos(e, 0);
        this.specialSprite.pos(e, 0);
        this.userSprite.pos(e, 0)
    };
    e.mouseUp = function() {
        this.mX += Laya.stage.mouseX - this.mLastMouseX;
        var e = (Game.UIWidth - Game.ViewWidth) / 2;
        var t = e + Game.UIWidth;
        if (this.mX <= -t) {
            this.mX = -t
        }
        if (this.mX >= 0) {
            this.mX = e
        }
        Laya.stage.off(Laya.Event.MOUSE_MOVE, this, this.mouseMove)
    };
    e.RandomAvatar = function() {
        var e = Math.ceil(Math.random() * 10);
        if (e == 0) {
            e = 1
        }
        return e
    };
    e.SlowMovingMapAni = function() {
        var e = (Game.UIWidth - Game.ViewWidth) / 2;
        var t = Game.UIWidth + e;
        var i = Laya.TimeLine.to(this.userSprite, {
            x: -t,
            y: 0
        },
        1500).to(this.userSprite, {
            x: -t,
            y: 0
        },
        600).to(this.userSprite, {
            x: e,
            y: 0
        },
        1500);
        i.play(0, false);
        i.once(Laya.Event.COMPLETE, this,
        function() {
            i.destroy()
        });
        this.userSprite.once(Laya.Event.UNDISPLAY, this,
        function() {
            i.destroy()
        });
        var n = Laya.TimeLine.to(this.specialSprite, {
            x: -t,
            y: 0
        },
        1500).to(this.specialSprite, {
            x: -t,
            y: 0
        },
        600).to(this.specialSprite, {
            x: e,
            y: 0
        },
        1500);
        n.play(0, false);
        n.once(Laya.Event.COMPLETE, this,
        function() {
            n.destroy()
        });
        this.specialSprite.once(Laya.Event.UNDISPLAY, this,
        function() {
            n.destroy()
        });
        var s = Laya.TimeLine.to(this.mapView, {
            x: -t,
            y: 0
        },
        1500).to(this.mapView, {
            x: -t,
            y: 0
        },
        600).to(this.mapView, {
            x: e,
            y: 0
        },
        1500);
        s.play(0, false);
        s.once(Laya.Event.COMPLETE, this,
        function() {
            s.destroy();
            this.GuidePlayerOperate(true)
        });
        this.mapView.once(Laya.Event.UNDISPLAY, this,
        function() {
            s.destroy()
        })
    };
    e.GuidePlayerOperate = function(e) {
        this.btnStartBox.disabled = false;
        this.OperatingHints.visible = true;
        if (e) {
            this.shoushi_start.visible = true;
            this.cur_operation_img.skin = "resource/bigRich/game/zi_benlunshoufa.png"
        } else {
            this.shoushi_start.visible = false;
            this.cur_operation_img.skin = "resource/bigRich/game/zi_benlunxingdong.png"
        }
    };
    e.HeroMove = function(e, t, i) {
        var n = 0;
        var s = 0;
        var a = 0;
        var r = 0;
        if (i) {
            this.selfMoveIndex += 1;
            if (this.selfMoveIndex >= this.mapPathPointA.length) {
                this.btnStartBox.disabled = true;
                Request.BigRichEndGameReq();
                return
            }
            n = this.mapPathPointA[this.selfMoveIndex - 1].x;
            s = this.mapPathPointA[this.selfMoveIndex - 1].y
        } else {
            this.selfMoveIndex -= 1;
            if (this.selfMoveIndex < 0) {
                this.selfMoveIndex = 0;
                Laya.timer.once(this._headMoveSpeed * 2, this,
                function() {
                    this.npcShowState()
                });
                return
            }
            n = this.mapPathPointA[this.selfMoveIndex + 1].x;
            s = this.mapPathPointA[this.selfMoveIndex + 1].y
        }
        var o = this.mapPathPointA[this.selfMoveIndex].x;
        var l = this.mapPathPointA[this.selfMoveIndex].y;
        if (n - o > 50) {
            a = n + (o - n) * .5
        } else {
            a = o
        }
        if (s - l > 50) {
            r = s + (l - s) * .5
        } else {
            r = l - 50
        }
        this.updateSelfMapPoint(t);
        if (this.selfMoveIndex <= e && i) {
            Sound.playSound(Sound.BigRichRes.load_walking.url, Sound.BigRichRes.load_walking.vol, false);
            var h = Laya.TimeLine.to(this.selfBox, {
                x: n,
                y: s,
                scaleX: 1.05,
                scaleY: 1.05
            },
            100).to(this.selfBox, {
                x: a,
                y: r,
                scaleX: 1.2,
                scaleY: 1.2
            },
            200).to(this.selfBox, {
                x: o,
                y: l,
                scaleX: 1,
                scaleY: 1
            },
            200);
            h.play(0, false);
            h.on(Laya.Event.COMPLETE, this,
            function() {
                this.HeroMove(e, t, true)
            })
        } else if (this.selfMoveIndex >= e && !i) {
            Sound.playSound(Sound.BigRichRes.load_walking.url, Sound.BigRichRes.load_walking.vol, false);
            var h = Laya.TimeLine.to(this.selfBox, {
                x: n,
                y: s,
                scaleX: 1.05,
                scaleY: 1.05
            },
            100).to(this.selfBox, {
                x: a,
                y: r,
                scaleX: 1.2,
                scaleY: 1.2
            },
            200).to(this.selfBox, {
                x: o,
                y: l,
                scaleX: 1,
                scaleY: 1
            },
            200);
            h.play(0, false);
            h.on(Laya.Event.COMPLETE, this,
            function() {
                this.HeroMove(e, t, false)
            })
        } else {
            this.selfMoveIndex = e;
            var u = this.specialEventDeal(e);
            if (u[0] != null) {
                this.showSelfEffectAni(u)
            } else {
                Laya.timer.once(this._headMoveSpeed * 2, this,
                function() {
                    this.npcShowState()
                })
            }
        }
    };
    e.showSelfEffectAni = function(t) {
        var i = t[1];
        this.chat_img_self.skin = a[i]["emjoy"];
        Sound.playSound(Sound.BigRichRes.event_walkingType_5.url, Sound.BigRichRes.event_chuansong.vol, false);
        if (t[1] <= 1) {
            this.ani_fly_self.visible = true;
            this.chat_self.visible = true;
            var e = Laya.TimeLine.to(this.chat_self, {
                scaleX: 1,
                scaleY: 1
            },
            500).to(this.chat_self, {
                scaleX: 1,
                scaleY: 1
            },
            1e3).to(this.chat_self, {
                scaleX: 0,
                scaleY: 0
            },
            500);
            e.play(0, false);
            e.on(Laya.Event.COMPLETE, this,
            function() {
                this.chat_self.visible = false;
                this.selfHandlingSpecialEvents(t[0])
            })
        } else {
            if (t[1] == 2) {
                if (this.triggerDouble) {
                    Laya.timer.once(800, this,
                    function() {
                        this.updateSelfMapPoint(this._headMoveSpeed);
                        Laya.timer.once(this._headMoveSpeed * 2, this,
                        function() {
                            this.npcShowState()
                        })
                    });
                    return
                }
            }
            this.SayWord_self.skin = a[i]["image"];
            this.SayWord_self.visible = true;
            var n = Laya.TimeLine.to(this.SayWord_self, {
                x: 97,
                y: -23,
                scaleX: 1.5,
                scaleY: 1.5
            },
            500).to(this.SayWord_self, {
                x: 97,
                y: -23,
                scaleX: 1,
                scaleY: 1
            },
            500).to(this.SayWord_self, {
                x: 97,
                y: -23,
                scaleX: 0,
                scaleY: 0
            },
            500).to(this.SayWord_self, {
                x: 97,
                y: 50,
                scaleX: 0,
                scaleY: 0
            },
            50);
            n.play(0, false);
            n.on(Laya.Event.COMPLETE, this,
            function() {
                this.SayWord_self.visible = false;
                this.chat_self.visible = true;
                Sound.playSound(Sound.BigRichRes["event_walkingType_" + i].url, Sound.BigRichRes.event_chuansong.vol, false);
                var e = Laya.TimeLine.to(this.chat_self, {
                    scaleX: 1,
                    scaleY: 1
                },
                500).to(this.chat_self, {
                    scaleX: 1,
                    scaleY: 1
                },
                1e3).to(this.chat_self, {
                    scaleX: 0,
                    scaleY: 0
                },
                500);
                e.play(0, false);
                e.on(Laya.Event.COMPLETE, this,
                function() {
                    this.chat_self.visible = false;
                    switch (t[1]) {
                    case 2:
                        this.triggerDouble = true;
                        var e = (Game.UIWidth - Game.ViewWidth) / 2 + Game.UIWidth;
                        Laya.Tween.to(this.mapView, {
                            x: -e * .5,
                            y: 0
                        },
                        this._headMoveSpeed);
                        Laya.Tween.to(this.specialSprite, {
                            x: -e * .5,
                            y: 0
                        },
                        this._headMoveSpeed);
                        Laya.Tween.to(this.userSprite, {
                            x: -e * .5,
                            y: 0
                        },
                        this._headMoveSpeed);
                        this.PrizeMul = this.PrizeMul * 2;
                        this.updateStarPrize();
                        Laya.timer.once(800, this,
                        function() {
                            this.updateSelfMapPoint(this._headMoveSpeed);
                            Laya.timer.once(this._headMoveSpeed * 2, this,
                            function() {
                                this.npcShowState()
                            })
                        });
                        break;
                    case 3:
                        this.HeroMove(t[0], this._headSpeMoveSpeed, false);
                        this.triggerBack = true;
                        break;
                    case 4:
                    case 5:
                        this.triggerForward = true;
                        this.HeroMove(t[0], this._headSpeMoveSpeed, true);
                        break
                    }
                })
            })
        }
    };
    e.selfHandlingSpecialEvents = function(t) {
        Sound.playSound(Sound.BigRichRes.event_chuansong.url, Sound.BigRichRes.event_chuansong.vol, false);
        var e = this.mapPathPointA[this.selfMoveIndex].x;
        var i = this.mapPathPointA[this.selfMoveIndex].y;
        var n = this.mapPathPointA[t].x;
        var s = this.mapPathPointA[t].y;
        var a = e + (n - e) * .5;
        var r = i + (s - i) * .5;
        this.selfMoveIndex = t;
        this.updateSelfMapPoint(this._headMoveSpeed * 2);
        var o = Laya.TimeLine.to(this.selfBox, {
            x: e,
            y: i,
            scaleX: 1.05,
            scaleY: 1.05
        },
        100).to(this.selfBox, {
            x: a,
            y: r,
            scaleX: 1.2,
            scaleY: 1.2
        },
        500).to(this.selfBox, {
            x: n,
            y: s,
            scaleX: 1,
            scaleY: 1
        },
        500);
        o.play(0, false);
        o.on(Laya.Event.COMPLETE, this,
        function() {
            this.ani_fly_self.visible = false;
            var e = this.specialEventDeal(t);
            if (e[0] != null) {
                this.showSelfEffectAni(e)
            } else {
                Laya.timer.once(this._headMoveSpeed * 2, this,
                function() {
                    this.npcShowState()
                })
            }
        })
    };
    e.updateSelfMapPoint = function(e) {
        var t = this.mapPathPointA[this.selfMoveIndex].x;
        var i = 0;
        var n = -((Game.UIWidth - Game.ViewWidth) / 2);
        var s = Game.UIWidth - n;
        if (t > s * .5) {
            i = t - s * .5;
            if (i > s) {
                i = s
            }
        } else {
            i = n
        }
        this.mX = -i;
        if (i < n) {
            i = n
        }
        Laya.Tween.to(this.mapView, {
            x: -i,
            y: 0
        },
        e);
        Laya.Tween.to(this.specialSprite, {
            x: -i,
            y: 0
        },
        e);
        Laya.Tween.to(this.userSprite, {
            x: -i,
            y: 0
        },
        e)
    };
    e.selfShowState = function() {
        this.inRound = false;
        this.updateSelfMapPoint(this._headMoveSpeed);
        this.btnStartBox.disabled = false;
        this.shoushi_start.visible = false;
        this.OperatingHints.visible = true;
        this.cur_operation_img.skin = "resource/bigRich/game/zi_benlunxingdong.png";
        this.ani_self.visible = true;
        this.move_self.visible = true;
        this.ani_npc.visible = false;
        this.move_npc.visible = false
    };
    e.NPCMove = function(e, t, i) {
        var n = 0;
        var s = 0;
        var a = 0;
        var r = 0;
        if (i) {
            this.npcMoveIndex += 1;
            if (this.npcMoveIndex >= this.mapPathPointA.length) {
                Request.BigRichEndGameReq();
                return
            }
            n = this.mapPathPointA[this.npcMoveIndex - 1].x;
            s = this.mapPathPointA[this.npcMoveIndex - 1].y
        } else {
            this.npcMoveIndex -= 1;
            if (this.npcMoveIndex < 0) {
                this.npcMoveIndex = 0;
                Laya.timer.once(600, this,
                function() {
                    this.selfShowState()
                });
                return
            }
            n = this.mapPathPointA[this.npcMoveIndex + 1].x;
            s = this.mapPathPointA[this.npcMoveIndex + 1].y
        }
        var o = this.mapPathPointA[this.npcMoveIndex].x;
        var l = this.mapPathPointA[this.npcMoveIndex].y;
        if (o - n > 50) {
            a = n + (o - n) * .5
        } else {
            a = o
        }
        if (l - s > 50) {
            r = s + (l - s) * .5
        } else {
            r = l - 50
        }
        this.updateNpcMapPoint(t);
        if (this.npcMoveIndex <= e && i) {
            Sound.playSound(Sound.BigRichRes.load_walking.url, Sound.BigRichRes.load_walking.vol, false);
            var h = Laya.TimeLine.to(this.NPC, {
                x: n,
                y: s,
                scaleX: 1.05,
                scaleY: 1.05
            },
            100).to(this.NPC, {
                x: a,
                y: r,
                scaleX: 1.2,
                scaleY: 1.2
            },
            200).to(this.NPC, {
                x: o,
                y: l,
                scaleX: 1,
                scaleY: 1
            },
            200);
            h.play(0, false);
            h.on(Laya.Event.COMPLETE, this,
            function() {
                this.NPCMove(e, t, true)
            })
        } else if (this.npcMoveIndex >= e && !i) {
            Sound.playSound(Sound.BigRichRes.load_walking.url, Sound.BigRichRes.load_walking.vol, false);
            var h = Laya.TimeLine.to(this.NPC, {
                x: n,
                y: s,
                scaleX: 1.05,
                scaleY: 1.05
            },
            100).to(this.NPC, {
                x: a,
                y: r,
                scaleX: 1.2,
                scaleY: 1.2
            },
            200).to(this.NPC, {
                x: o,
                y: l,
                scaleX: 1,
                scaleY: 1
            },
            200);
            h.play(0, false);
            h.on(Laya.Event.COMPLETE, this,
            function() {
                this.NPCMove(e, t, false)
            })
        } else {
            this.npcMoveIndex = e;
            var u = this.specialEventDeal(e);
            if (u[0] != null) {
                this.showNpcEffectAni(u)
            } else {
                Laya.timer.once(600, this,
                function() {
                    this.selfShowState()
                })
            }
        }
    };
    e.showNpcEffectAni = function(t) {
        var i = t[1];
        this.chat_img_npc.skin = a[i]["emjoy"];
        Sound.playSound(Sound.BigRichRes.event_walkingType_5.url, Sound.BigRichRes.event_chuansong.vol, false);
        if (t[1] <= 1) {
            this.ani_fly_npc.visible = true;
            this.chat_npc.visible = true;
            var e = Laya.TimeLine.to(this.chat_npc, {
                scaleX: 1,
                scaleY: 1
            },
            500).to(this.chat_npc, {
                scaleX: 1,
                scaleY: 1
            },
            1e3).to(this.chat_npc, {
                scaleX: 0,
                scaleY: 0
            },
            500);
            e.play(0, false);
            e.on(Laya.Event.COMPLETE, this,
            function() {
                this.chat_npc.visible = false;
                this.npcHandlingSpecialEvents(t[0])
            })
        } else {
            this.SayWord_npc.skin = a[i]["image"];
            this.SayWord_npc.visible = true;
            var n = Laya.TimeLine.to(this.SayWord_npc, {
                x: 97,
                y: -23,
                scaleX: 1.5,
                scaleY: 1.5
            },
            500).to(this.SayWord_npc, {
                x: 97,
                y: -23,
                scaleX: 1,
                scaleY: 1
            },
            500).to(this.SayWord_npc, {
                x: 97,
                y: -23,
                scaleX: 0,
                scaleY: 0
            },
            500).to(this.SayWord_npc, {
                x: 97,
                y: 50,
                scaleX: 0,
                scaleY: 0
            },
            50);
            n.play(0, false);
            n.on(Laya.Event.COMPLETE, this,
            function() {
                this.SayWord_npc.visible = false;
                this.chat_npc.visible = true;
                Sound.playSound(Sound.BigRichRes["event_walkingType_" + i].url, Sound.BigRichRes.event_chuansong.vol, false);
                var e = Laya.TimeLine.to(this.chat_npc, {
                    scaleX: 1,
                    scaleY: 1
                },
                500).to(this.chat_npc, {
                    scaleX: 1,
                    scaleY: 1
                },
                1e3).to(this.chat_npc, {
                    scaleX: 0,
                    scaleY: 0
                },
                500);
                e.play(0, false);
                e.on(Laya.Event.COMPLETE, this,
                function() {
                    this.chat_npc.visible = false;
                    switch (t[1]) {
                    case 2:
                        Laya.timer.once(600, this,
                        function() {
                            this.selfShowState()
                        });
                        break;
                    case 3:
                        this.NPCMove(t[0], this._headSpeMoveSpeed, false);
                        break;
                    case 4:
                    case 5:
                        this.NPCMove(t[0], this._headSpeMoveSpeed, true);
                        break
                    }
                })
            })
        }
    };
    e.npcShowState = function() {
        this.updateNpcMapPoint(this._headMoveSpeed);
        this.OperatingHints.visible = false;
        this.ani_self.visible = false;
        this.move_self.visible = false;
        this.ani_npc.visible = true;
        this.move_npc.visible = true;
        Laya.timer.once(this._headMoveSpeed, this,
        function() {
            this.npcSieveAnimation()
        })
    };
    e.npcHandlingSpecialEvents = function(t) {
        Sound.playSound(Sound.BigRichRes.event_chuansong.url, Sound.BigRichRes.event_chuansong.vol, false);
        var e = this.mapPathPointA[this.npcMoveIndex].x;
        var i = this.mapPathPointA[this.npcMoveIndex].y;
        var n = this.mapPathPointA[t].x;
        var s = this.mapPathPointA[t].y;
        var a = e + (n - e) * .5;
        var r = i + (s - i) * .5;
        this.npcMoveIndex = t;
        this.updateNpcMapPoint(this._headMoveSpeed * 2);
        var o = Laya.TimeLine.to(this.NPC, {
            x: e,
            y: i,
            scaleX: 1.05,
            scaleY: 1.05
        },
        100).to(this.NPC, {
            x: a,
            y: r,
            scaleX: 1.2,
            scaleY: 1.2
        },
        500).to(this.NPC, {
            x: n,
            y: s,
            scaleX: 1,
            scaleY: 1
        },
        500);
        o.play(0, false);
        o.on(Laya.Event.COMPLETE, this,
        function() {
            this.ani_fly_npc.visible = false;
            var e = this.specialEventDeal(t);
            if (e[0] != null) {
                this.showNpcEffectAni(e)
            } else {
                Laya.timer.once(600, this,
                function() {
                    this.selfShowState()
                })
            }
        })
    };
    e.updateNpcMapPoint = function(e) {
        var t = -(Game.UIWidth - Game.ViewWidth) / 2;
        var i = Game.UIWidth - t;
        var n = this.mapPathPointA[this.npcMoveIndex].x;
        var s = 0;
        if (n > i * .5) {
            s = n - i * .5;
            if (s > i) {
                s = i
            }
        } else {
            s = t
        }
        if (s < t) {
            s = t
        }
        Laya.Tween.to(this.mapView, {
            x: -s,
            y: 0
        },
        e);
        Laya.Tween.to(this.specialSprite, {
            x: -s,
            y: 0
        },
        e);
        Laya.Tween.to(this.userSprite, {
            x: -s,
            y: 0
        },
        e)
    };
    e.specialEventDeal = function(e) {
        var t = null;
        var i = null;
        switch (this.mapPathPointA[e].name) {
        case "GridType_Forward6":
            t = e + 6;
            i = 5;
            break;
        case "GridType_Forward3":
            t = e + 3;
            i = 4;
            break;
        case "GridType_Back4":
            t = e - 4;
            i = 3;
            break;
        case "GridType_Double":
            t = e;
            i = 2;
            break;
        case "Grid5To":
            t = this.specialEventMove[this.mapPathPointA[e].name] - 1;
            i = 1;
            break;
        case "Grid6To":
            t = this.specialEventMove[this.mapPathPointA[e].name] - 1;
            i = 1;
            break;
        case "Grid7To":
            t = this.specialEventMove[this.mapPathPointA[e].name] - 1;
            i = 1;
            break;
        case "Grid8To":
            t = this.specialEventMove[this.mapPathPointA[e].name] - 1;
            i = 1;
            break;
        case "Grid9To":
            t = this.specialEventMove[this.mapPathPointA[e].name] - 1;
            i = 0;
            break;
        default:
            break
        }
        return [t, i]
    };
    e.updateObjectIsChangePoint = function(e) {
        var t = 0;
        var i = false;
        if (e < 19) {
            i = true;
            t = 0
        } else if (e >= 19 && e < 25) {
            i = true;
            t = Game.UIWidth / 2
        } else if (e >= 25 && e < this.mapPathPointA.length) {
            i = true;
            t = Game.UIWidth
        } else {
            i = false;
            t = Game.UIWidth / 2
        }
        return [t, i]
    };
    e.updateUserGold = function() {
        var e = Player.getGold();
        Player.setGold(e);
        this.fc_gold.value = e
    };
    e.setSound = function() {
        if (this.iconMusicOff.visible) {
            this.iconMusicOff.visible = false;
            Sound.kai_SoundAndMusic();
            Sound.playMusic(Sound.BigRichRes.bgm_scene.url, Sound.BigRichRes.bgm_scene.vol, true)
        } else {
            this.iconMusicOff.visible = true;
            Sound.guan_SoundAndMusic()
        }
    };
    e.show = function() {
        Game.state.set(Game.sceneConfig.sceneID.scene_BigRich);
        Game.UIRoot.addChild(this);
        GameCenter.hide()
    };
    e.ReqLeave = function() {
        Request.LeaveGameSvrReq();
        var e = this;
        Laya.timer.clearAll(this);
        Laya.Tween.clearAll(this);
        Laya.Tween.clearAll(this.mapView);
        Laya.Tween.clearAll(this.specialSprite);
        Laya.Tween.clearAll(this.userSprite);
        Laya.Tween.clearAll(this.PrizeSprite);
        Laya.Tween.clearAll(this.sieveAni);
        BigRichLoad.load(function() {
            Request.package.getListReq();
            Request.GetUserMoneyReq();
            Sound.stopAll();
            GameCenter.show();
            e.removeSelf();
            BigRichLoad.hide();
            e.reset()
        })
    };
    e.reset = function() {
        Laya.stage.event(Laya.Event.def_LeaveBigRich)
    };
    e.display = function() {
        BigRichLoad.hide();
        Sound.stopBgMusic();
        Sound.playMusic(Sound.BigRichRes.bgm_scene.url, Sound.BigRichRes.bgm_scene.vol, true);
        i.display && i.display()
    };
    e.unDisplay = function() {
        this.reset();
        i.unDisplay && i.unDisplay();
        this.tiledMap && this.tiledMap.destroy()
    };
    e.gameShowFromBg = function() {
        if (this.iconMusicOff.visible) {
            return
        }
        Sound.stopBgMusic();
        Sound.playMusic(Sound.BigRichRes.bgm_scene.url, Sound.BigRichRes.bgm_scene.vol, true)
    };
    var t = false;
    var i = {
        display: null,
        unDisplay: null,
        init: function() {},
        show: function() {
            BigRichLoad.load(function() {
                t = false;
                var e = WinUtils.getSaveUI(s);
                if (!e) {
                    e = new BigRichMainUI;
                    e.initBase(s, RES.BigRich, {
                        isWindow: true,
                        isFullScene: false
                    })
                }
                e.createMap()
            })
        },
        ReqLeave: function() {
            var e = WinUtils.getSaveUI(s);
            if (e) {
                e.ReqLeave()
            }
        },
        BigRichStartInfoRep: function(a) {
            var r = WinUtils.getSaveUI(s);
            if (r) {
                if (a.BetNum > 0) {
                    if (a.PPos >= a.Grid.length || a.RPos >= a.Grid.length) {
                        Request.BigRichEndGameReq();
                        r.btnStartBox.disabled = true;
                        return
                    }
                    r.updateMapPath(a)
                } else {
                    var e = {
                        view: r,
                        LeaveCount: a.LeaveCount
                    };
                    BigRichStart.show(e,
                    function(e) {
                        a.BetNum = e * 1;
                        var t = e * 1;
                        if (r && r.betNumArr.length) {
                            var i = Player.getGold();
                            if (i >= r.betNumArr[0]) {
                                if (t) {
                                    var n = r.fc_gold.value;
                                    Player.setGold(n * 1 - t);
                                    r.fc_gold.value = n * 1 - t
                                }
                                r.updateMapPath(a)
                            } else {
                                var s = MessageBox.show(GameConfig.ErrorMsg.getMsgById(124, r.betNumArr[0]));
                                s.submitCall = s.closeCall = function() {
                                    if (r) {
                                        r.ReqLeave()
                                    }
                                }
                            }
                        }
                    })
                }
            } else if (a.MsgID) {
                MsgToast.show(GameConfig.ErrorMsg.getMsgById(a.MsgID))
            }
        },
        BigRichThrowSieveRep: function(e) {
            var t = WinUtils.getSaveUI(s);
            if (t && e.Tag) {
                t.PNum = e.Num;
                t.RNum = e.RNum;
                t.btnStartBox.disabled = true;
                t.OperatingHints.visible = true;
                t.shoushi_start.visible = false;
                Laya.timer.once(t._headMoveSpeed, t,
                function() {
                    t.selfSieveAnimation()
                })
            } else if (e.MsgId) {
                MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgId))
            }
        },
        BigRichGameEndRep: function(e) {
            var t = WinUtils.getSaveUI(s);
            t.inRound = false;
            if (t) {
                if (e.Gold) {
                    var i = e.Gold;
                    if (i) {
                        var n = t.fc_gold.value;
                        Player.setGold(n * 1 + i);
                        t.fc_gold.value = n * 1 + i
                    }
                    BigRichSuccView.show(e,
                    function() {
                        t.timer.once(t._headMoveSpeed, t, Request.BigRichStartInfoReq)
                    })
                } else {
                    BigRichFailView.show(e,
                    function() {
                        t.timer.once(t._headMoveSpeed, t, Request.BigRichStartInfoReq)
                    })
                }
                t.clearLinkedLog()
            }
        },
        BigRichShareSucceRep: function(e) {},
        gameShowFromBg: function() {
            var e = WinUtils.getSaveUI(s);
            if (e) {
                e.gameShowFromBg()
            }
        },
        reportLeaveServer: function() {
            var e = WinUtils.getSaveUI(s);
            if (e) {
                e.ReqLeave()
            }
        }
    };
    return i
} ();
var DragonLoading = function() {
    var i = "DragonLoadingFun";
    function e() {
        e.super(this);
        this.initBase(i, RES.loadTaskList.attackDragonLoading, {
            isWindow: true,
            needFitViews: [this.bg]
        })
    }
    Laya.class(e, i, dragonLoadingUI, "");
    var t = e.prototype;
    t.init = function() {
        Adapter.fitView(this, this.bg);
        this.initEvent();
        Laya.stage.on(Laya.Event.def_LeaveDragon, this, this.reset);
        this.progress.width = 0;
        this.maxWidth = 800
    };
    t.show = function() {
        Game.UIRoot.addChild(this);
        var e = -(Game.UIHeight - Game.ViewHeight) / 2;
        Laya.Tween.to(this, {
            y: e
        },
        300);
        this.timer.once(300, this,
        function() {
            GameCenter.hide();
            this.zOrder = n.zOrder
        })
    };
    t.update = function(e) {
        this.progress.width = this.maxWidth * e / 100
    };
    t.hide = function() {
        Game.UIRoot.addChild(this);
        var e = -(Game.UIHeight - Game.ViewHeight) / 2 + Game.UIHeight;
        Laya.Tween.to(this, {
            y: -e
        },
        300);
        this.timer.once(300, this,
        function() {
            this.removeSelf()
        })
    };
    t.unDisplay = function() {
        Laya.stage.off(Laya.Event.def_LeaveDragon, this, this.reset);
        n.unDisplay && n.unDisplay()
    };
    t.display = function() {
        n.display && n.display()
    };
    t.reset = function() {
        if (this) {
            this.removeSelf()
        }
    };
    var n = null,
    s = false;
    n = {
        display: null,
        unDisplay: null,
        zOrder: 99,
        load: function(t) {
            Resource.checkLoaded = false;
            Resource.load(RES.loadTaskList.attackDragonLoading,
            function() {
                if (s) {
                    return
                }
                s = true;
                if (!WinUtils.getSaveUI(i)) {
                    new e
                }
                WinUtils.getSaveUI(i).show();
                Waiting.hide();
                WinUtils.getSaveUI(i).timer.once(300, WinUtils.getSaveUI(i),
                function() {
                    if (Game.state.get() > Game.sceneConfig.sceneID.gameCenter) {
                        s = false;
                        t && t()
                    } else {
                        var e = RES.AttackDragon.slice();
                        e.push("resource/attackDragonPlace/1613_0.png");
                        Resource.checkLoaded = false;
                        Resource.load(e,
                        function() {
                            s = false;
                            t && t()
                        },
                        function(e) {
                            if (WinUtils.getSaveUI(i)) {
                                WinUtils.getSaveUI(i).update(e)
                            }
                        },
                        false)
                    }
                })
            })
        },
        show: function() {
            if (!WinUtils.getSaveUI(i)) {
                new e
            }
            WinUtils.getSaveUI(i).show()
        },
        hide: function() {
            WinUtils.getSaveUI(i) && WinUtils.getSaveUI(i).hide()
        },
        clear: function() {
            Resource.clearRes(RES.AttackDragon)
        }
    };
    return n
} ();
function DragonLinkRole() {
    DragonLinkRole.super(this)
}
DragonLinkRole.getIconSkin = function(e) {
    var t = "";
    var i = "";
    var n = false;
    switch (e) {
    case 1:
        t = "resource/attackDragonPlace/skill_4_1.png";
        i = "resource/attackDragonPlace/huang_0.png";
        n = false;
        break;
    case 2:
        t = "resource/attackDragonPlace/skill_4_2.png";
        i = "resource/attackDragonPlace/huang_circle_0.png";
        n = true;
        break;
    case 3:
        t = "resource/attackDragonPlace/skill_1_1.png";
        i = "resource/attackDragonPlace/hong_0.png";
        n = false;
        break;
    case 4:
        t = "resource/attackDragonPlace/skill_1_2.png";
        i = "resource/attackDragonPlace/hong_circle_0.png";
        n = true;
        break;
    case 5:
        t = "resource/attackDragonPlace/skill_3_1.png";
        i = "resource/attackDragonPlace/lan_0.png";
        n = false;
        break;
    case 6:
        t = "resource/attackDragonPlace/skill_3_2.png";
        i = "resource/attackDragonPlace/lan_circle_0.png";
        n = true;
        break
    }
    return {
        roleIcon: t,
        roleBg: i,
        circle: n
    }
};
Laya.class(DragonLinkRole, "DragonLinkRole", dragonLinkRoleUI, "");
var _proto_ = DragonLinkRole.prototype;
_proto_.init = function(e) {
    this.index = e;
    this.readyCall = null;
    this.positionReady = false
};
_proto_.playAni = function(e) {
    var t = this.linkAni;
    if (t) {
        t.visible = true;
        var i = this.type;
        if (i === 1 || i === 2) {
            t.play(0, false, "nezha_xiao")
        } else if (i === 3 || i === 4) {
            t.play(0, false, "dasheng_xiao")
        } else if (i === 5 || i === 6) {
            t.play(0, false, "lijing_xiao")
        }
        t.once(Laya.Event.COMPLETE, this,
        function() {
            t.visible = false;
            this.removeSelf();
            this.timer.clear(this, this.bgRotationFun);
            this.recover();
            e && e()
        })
    }
};
_proto_.setType = function(e) {
    var t = DragonLinkRole.getIconSkin(e);
    this.type = e;
    var i = this.roleBg;
    if (t.circle) {
        i.skin = t.roleBg;
        i.visible = true;
        this.timer.frameLoop(1, this, this.bgRotationFun)
    } else {
        i.visible = false
    }
    this.roleIcon.skin = t.roleIcon
};
_proto_.bgRotationFun = function() {
    this.roleBg.rotation += 1
};
_proto_.updatePos = function(e, t) {
    if (this.x == e) {
        return false
    }
    Laya.Tween.to(this, {
        x: e
    },
    400, Laya.Ease.cubicIn, Laya.Handler.create(this,
    function() {
        this.zOrder = 0;
        Sound.playSound(Sound.JewRes.drop.url, Sound.JewRes.drop.vol);
        this.readyCall && this.readyCall();
        this.positionReady = true
    }), t)
};
_proto_.recover = function() {
    Laya.Pool.recover("linkRole", this)
};
var DragonMain = function() {
    var a = "DragonMainFun";
    var c = [];
    var n = {
        dasheng: {
            x: 378,
            y: 332
        },
        jiutoushe: {
            x: 520,
            y: 82
        },
        lijing: {
            x: 6,
            y: 156
        },
        nezha: {
            x: 610,
            y: 288
        }
    };
    var f = {
        0 : {
            x: 686,
            y: 50
        },
        1 : {
            x: 595,
            y: 50
        },
        2 : {
            x: 503,
            y: 50
        },
        3 : {
            x: 414,
            y: 50
        },
        4 : {
            x: 322,
            y: 50
        },
        5 : {
            x: 234,
            y: 50
        },
        6 : {
            x: 140,
            y: 50
        },
        7 : {
            x: 50,
            y: 50
        }
    };
    function e() {
        var e = "resource/attackDragonPlace/dragonAnimates/";
        var t = [{
            num: 15,
            aniName: "daSheng_idle",
            name: "dasheng_idle_"
        },
        {
            num: 15,
            aniName: "dasheng_attack",
            name: "dasheng_attack_"
        },
        {
            num: 17,
            aniName: "dasheng_skill",
            name: "dasheng_skill_"
        },
        {
            num: 16,
            aniName: "dasheng_dead",
            name: "dasheng_dead_"
        },
        {
            num: 20,
            aniName: "jiutoushe_idle",
            name: "jiutoushe_idle_"
        },
        {
            num: 21,
            aniName: "jiutoushe_attack",
            name: "jiutoushe_attack_"
        },
        {
            num: 11,
            aniName: "jiutoushe_suffer",
            name: "jiutoushe_suffer_"
        },
        {
            num: 23,
            aniName: "jiutoushe_dead",
            name: "jiutoushe_dead_"
        },
        {
            num: 17,
            aniName: "lijing_idle",
            name: "lijing_idle_"
        },
        {
            num: 16,
            aniName: "lijing_attack",
            name: "lijing_attack_"
        },
        {
            num: 18,
            aniName: "lijing_skill",
            name: "lijing_skill_"
        },
        {
            num: 19,
            aniName: "lijing_dead",
            name: "lijing_dead_"
        },
        {
            num: 15,
            aniName: "nezha_idle",
            name: "nezha_idle_"
        },
        {
            num: 12,
            aniName: "nezha_attack",
            name: "nezha_attack_"
        },
        {
            num: 15,
            aniName: "nezha_skill",
            name: "nezha_skill_"
        },
        {
            num: 17,
            aniName: "nezha_dead",
            name: "nezha_dead_"
        },
        {
            num: 11,
            aniName: "dasheng_xiao",
            name: "jnsfH_"
        },
        {
            num: 11,
            aniName: "nezha_xiao",
            name: "jnsf_"
        },
        {
            num: 11,
            aniName: "lijing_xiao",
            name: "jnsfL_"
        }];
        for (var i = 0,
        n = t.length; i < n; i++) {
            var s = t[i];
            var a = [];
            for (var r = 0; r < s.num; r++) {
                var o = e + s.name + r + ".png";
                a.push(o)
            }
            Laya.Animation.createFrames(a, s.aniName)
        }
        Laya.Animation.createFrames(["resource/attackDragonPlace/gold_00000.png", "resource/attackDragonPlace/gold_00001.png", "resource/attackDragonPlace/gold_00002.png", "resource/attackDragonPlace/gold_00003.png", "resource/attackDragonPlace/gold_00004.png", "resource/attackDragonPlace/gold_00005.png", "resource/attackDragonPlace/gold_00006.png", "resource/attackDragonPlace/gold_00007.png", "resource/attackDragonPlace/gold_00008.png"], "winGold")
    }
    function t() {
        t.super(this);
        var e = RES.AttackDragon.slice();
        e.push("resource/attackDragonPlace/1613_0.png");
        this.initBase("DragonMainFun", e, {
            isWindow: true,
            needFitViews: [this.bg, this.maskBox_1]
        });
        this.isNeedDestroy = false
    }
    Laya.class(t, a, dragonMainUI, "");
    var i = t.prototype;
    i.init = function() {
        Adapter.fitView(this, this.nextGameBox);
        this.initEvent();
        Laya.stage.on(Laya.Event.def_updateUserMoney, this, this.updateUserGold);
        Laya.stage.on(Laya.Event.def_onSocketClose, s, s.reportLeaveServer);
        this.listMultiple.selectHandler = new Laya.Handler(this, this.betMulListSelected);
        this.listMultiple.scrollBar.hide = true;
        e();
        this.autoExecute = false;
        this.listArg = [];
        this.headImgDomList = [];
        this.linkedList = [];
        this.linkedNumInstList = [];
        this.roundGetGold = [];
        this.totalRound = 99;
        this.currentRound = 0;
        this.inRound = false;
        this.on(Laya.Event.CLICK, this,
        function(e) {
            var t = e.target.name;
            switch (t) {
            case "btnOpenMall":
                if (!Game.miniGameIOS()) {
                    if (this.autoExecute || this.inRound) {
                        MsgToast.show(GameConfig.ErrorMsg.clientErrorMsg(10080));
                        return
                    }
                    ShopMall.show(undefined, 7)
                }
                break;
            case "btnHelp":
                DragonGameRule.show();
                break;
            case "btnMusic":
                this.musiceBtnFun();
                break;
            case "btnExit":
                this.exitDragonFun();
                break;
            case "btnStartGame":
                this.startGameFun(true);
                break;
            case "btnAuto":
                this.atuoGameFun();
                break;
            case "btnSwitchMultiple":
                this.btnSwitchMultipleFun();
                break;
            case "btnPriceLog":
                DragonPriceLog.show();
                break
            }
            if (t != "btnSwitchMultiple") {
                this.hideMultipleBox()
            }
        });
        this.heatHitTime = 0;
        this.timer.loop(1e3, this, this.updateHeat);
        this.adaptView()
    };
    i.adaptView = function() {
        if (Game.Adapter) {
            if (Adapter.fitViewW()) {
                this.mask_1.visible = true;
                this.mask_2.visible = true;
                var e = (Game.ViewWidth - Game.UIWidth) / 2;
                if (e >= this.mask_1.width) {
                    this.mask_1.width = e + 2;
                    this.mask_2.width = e + 4;
                    this.mask_1.x = 0
                } else {
                    this.mask_1.x = e - this.mask_1.width + 2
                }
                this.mask_2.x = Game.ViewWidth - e - 2;
                var t = this.nextGameBox.getChildAt(0);
                if (t) {
                    t.graphics.drawRect(0, 0, this.width, this.height, "#000000")
                }
                if (this.maskBox_1) {
                    this.maskBox_1.left = 0 - Adapter.getOffsetX()
                }
            } else if (Adapter.fitViewH()) {
                this.mask_3.visible = true;
                this.mask_4.visible = true;
                var i = (Game.ViewHeight - Game.UIHeight) / 2;
                this.mask_3.y = i - this.mask_3.height + 2;
                this.mask_4.y = Game.ViewHeight - i
            }
        }
    };
    i.musiceBtnFun = function(e) {
        var t = this.btnMusic;
        if (t) {
            if (e) {
                Sound.kai_SoundAndMusic();
                t._turnOff = false;
                t.getChildByName("musiceTurn").skin = "resource/attackDragonPlace/img_music.png";
                Sound.playMusic(Sound.dragonMusic.yzzj_bg_1.url, Sound.dragonMusic.yzzj_bg_1.vol, true)
            } else {
                if (t._turnOff) {
                    Sound.kai_SoundAndMusic();
                    t._turnOff = false;
                    t.getChildByName("musiceTurn").skin = "resource/attackDragonPlace/img_music.png";
                    Sound.playMusic(Sound.dragonMusic.yzzj_bg_1.url, Sound.dragonMusic.yzzj_bg_1.vol, true)
                } else {
                    Sound.guan_SoundAndMusic();
                    t._turnOff = true;
                    t.getChildByName("musiceTurn").skin = "resource/attackDragonPlace/img_helpClose.png"
                }
            }
        }
    };
    i.updateHeat = function() {
        if (!this.inRound) {
            this.heatHitTime++;
            if (this.heatHitTime == 180) {
                this.atuoGameFun(true);
                this.inRound = false;
                this.ReqLeave()
            }
        } else {
            this.heatHitTime = 0
        }
    };
    i.exitDragonFun = function() {
        if (this.autoExecute || this.inRound) {
            MsgToast.show(GameConfig.ErrorMsg.clientErrorMsg(10079));
            return false
        }
        DragonNotice.show()
    };
    i.atuoGameFun = function(e) {
        var t = this.btnAuto;
        if (this.autoExecute) {
            this.autoExecute = false;
            t.skin = "resource/attackDragonPlace/btn_guajizhong.png";
            this.autoAni.visible = false;
            this.autoAni.stop();
            if (this.inRound) {
                this.updateStartBtnUi(3)
            } else {
                this.updateStartBtnUi(1)
            }
        } else if (!e) {
            this.autoExecute = true;
            t.skin = "resource/attackDragonPlace/btn_guajizhong1.png";
            this.autoAni.play(0, true);
            this.autoAni.visible = true;
            this.updateStartBtnUi(3);
            if (!this.inRound) {
                this.startGameFun()
            }
        }
    };
    i.startGameFun = function(e) {
        var t = this;
        if (this.autoExecute && e) {
            this.atuoGameFun();
            return false
        }
        if (this.inRound) {
            return false
        }
        if (t.btnSwitchMultiple._betNum) {
            Request.DaNaoLongGongBeginGameReq(t.btnSwitchMultiple._betNum)
        }
    };
    i.updateStartBtnUi = function(e) {
        var t = this.btnStartGame;
        switch (e) {
        case 1:
            t.skin = "resource/attackDragonPlace/btn_Start.png";
            break;
        case 2:
            t.skin = "resource/attackDragonPlace/btn_StartHui.png";
            break;
        case 3:
            t.skin = "resource/attackDragonPlace/btn_quxiaozd.png";
            break
        }
    };
    i.updateUserGold = function() {
        var e = Player.getGold();
        Player.setGold(e);
        this.fc_gold.value = e
    };
    i.show = function() {
        Game.state.set(Game.sceneConfig.sceneID.scene_AttAckDragon);
        Game.UIRoot.addChild(this);
        GameCenter.hide()
    };
    i.addRoles = function(e) {
        if (e && e.length) {
            for (var t = 0,
            i = e.length; t < i; t++) {
                switch (e[t]) {
                case 1:
                    DragonRole1.show(this.rolesBox, n.dasheng);
                    break;
                case 2:
                    DragonRole2.show(this.rolesBox, n.jiutoushe);
                    break;
                case 3:
                    DragonRole3.show(this.rolesBox, n.lijing);
                    break;
                case 4:
                    DragonRole4.show(this.rolesBox, n.nezha);
                    break
                }
            }
        } else {
            DragonRole4.show(this.rolesBox, n.nezha);
            DragonRole3.show(this.rolesBox, n.lijing);
            DragonRole2.show(this.rolesBox, n.jiutoushe);
            DragonRole1.show(this.rolesBox, n.dasheng)
        }
    };
    i.checkLinkSkill = function() {
        var n = this;
        var e = this.headImgDomList;
        var t = undefined;
        var i = undefined;
        var s = undefined;
        var a = true;
        for (var r = 0,
        o = e.length - 1; r < o; r++) {
            var l = e[r];
            if (l.type === e[r + 1].type && a) {
                t = l.type;
                i = r;
                a = false
            } else if (l.type !== e[r + 1].type && !a) {
                s = r;
                a = true;
                break
            }
            if (r === o - 1 && e[r].type === e[r + 1].type && !a) {
                s = r + 1;
                break
            }
        }
        if (t) {
            var h = s - i + 1;
            this.listArg.splice(i, h);
            this.linkedList = this.headImgDomList.splice(i, h);
            var u = 0,
            c = 0;
            for (var r = i; r < i + h; r++) {
                u += f[r].x
            }
            c = Math.floor(u / h);
            this.showLinkedAni(t,
            function() {
                n.removeGetGoldFun(t, h);
                n.showFlyIconAni(t, h, {
                    x: c,
                    y: -50
                });
                n.hasLinkedFun()
            })
        } else {
            this.inRound = false;
            if (!this.autoExecute) {
                this.updateStartBtnUi(1)
            }
            this.roundSettle(function() {
                if (DragonRole2.getBossBlood() <= 0) {
                    Request.DaNaoLongGongEndGameReq(n.currentRound);
                    DragonRole2.playDeadAni(function() {
                        Request.DaNaoLongGongEndGameReq(n.currentRound);
                        Request.DaNaoLongGongGameFinishReq()
                    })
                } else if (n.currentRound >= n.totalRound) {
                    Request.DaNaoLongGongEndGameReq(n.currentRound);
                    DragonRole2.playAttackAni(function() {
                        var e = false,
                        t = false,
                        i = false;
                        DragonRole1.switchAni("dasheng_dead", null,
                        function() {
                            e = true;
                            if (e && t && i) {
                                Request.DaNaoLongGongEndGameReq(n.currentRound);
                                Request.DaNaoLongGongGameFinishReq()
                            }
                        });
                        DragonRole3.switchAni("lijing_dead", null,
                        function() {
                            t = true;
                            if (e && t && i) {
                                Request.DaNaoLongGongEndGameReq(n.currentRound);
                                Request.DaNaoLongGongGameFinishReq()
                            }
                        });
                        DragonRole4.switchAni("nezha_dead", null,
                        function() {
                            i = true;
                            if (e && t && i) {
                                Request.DaNaoLongGongEndGameReq(n.currentRound);
                                Request.DaNaoLongGongGameFinishReq()
                            }
                        })
                    })
                } else {
                    Request.DaNaoLongGongEndGameReq(n.currentRound);
                    if (n.autoExecute) {
                        n.startGameFun()
                    } else {
                        n.updateStartBtnUi(1)
                    }
                }
            })
        }
    };
    i.roundSettle = function(e) {
        var t = 0;
        var i = this.btnSwitchMultiple._betNum;
        if (!this.roundGetGold || this.roundGetGold.length <= 0) {
            e && e();
            return false
        }
        for (var n = 0,
        s = this.roundGetGold.length; n < s; n++) {
            t += this.roundGetGold[n]
        }
        this.roundGetGold = [];
        var a = t / 1e4;
        var r = Math.floor(t * i / 1e4);
        var o = this.playExChAni(a, r, e);
        this.addChild(o)
    };
    i.playExChAni = function(e, t, i) {
        var n = this;
        var s = Laya.Pool.getItemByClass("tanchuangANIUi", tanchuangANIUI);
        s.fc_gold.value = t || 0;
        if (e < 1) {
            s.title_img.skin = "resource/attackDragonPlace/word_pl.png"
        } else if (e >= 1 && e < 5) {
            s.title_img.skin = "resource/attackDragonPlace/word_wao.png"
        } else if (e >= 5) {
            s.title_img.skin = "resource/attackDragonPlace/word_tbl.png"
        }
        if (s.ani1) {
            s.ani1.once(Laya.Event.COMPLETE, this,
            function() {
                s.removeSelf()
            })
        }
        s.once(Laya.Event.DISPLAY, this,
        function() {
            this.playGoldEft(s);
            if (s.ani1) {
                s.ani1.play(0, false);
                if (e < 1) {
                    Sound.playSound(Sound.dragonMusic.yzzj_result_great.url, Sound.dragonMusic.yzzj_result_great.vol)
                } else if (e >= 1 && e < 5) {
                    Sound.playSound(Sound.dragonMusic.yzzj_result_perfect.url, Sound.dragonMusic.yzzj_result_perfect.vol)
                } else if (e >= 5) {
                    Sound.playSound(Sound.dragonMusic.yzzj_result_excellent.url, Sound.dragonMusic.yzzj_result_excellent.vol)
                }
            }
            this.timer.once(200, this, this.showWinGoldAni, [t])
        });
        s.once(Laya.Event.UNDISPLAY, this,
        function() {
            Laya.Pool.recover("tanchuangANIUi", s);
            i && i()
        });
        return s
    };
    i.playGoldEft = function(e) {
        Laya.loader.load("UIRoot/FX/hongbaojinbi.part", Laya.Handler.create(e,
        function() {
            if (e.goldFx) {
                e.goldFx.alpha = 1;
                e.goldFx.visile = true;
                e.goldFx.autoPlay = true;
                if (e.goldFx.emitter && e.goldFx.emitter.start) {
                    e.goldFx.emitter.start()
                }
                e.goldFx.play();
                e.goldFx.timer.once(1600, e,
                function() {
                    e.goldFx.alpha = 0
                })
            }
        }));
        if (e.fireAni) {
            e.fireAni.visible = true;
            e.fireAni.once(Laya.Event.COMPLETE, e,
            function() {
                e.fireAni.visible = false
            });
            e.fireAni.play(0, false)
        }
    };
    i.showWinGoldAni = function(e) {
        var t = Player.getGold();
        Player.setGold(t + e);
        var o = 300;
        var l = this.width / 2;
        var h = this.height / 2;
        var u = 0,
        c = 20;
        for (var i = 0; i < c; i++) { (function(t, e) {
                var i = e % 2 ? 1 : 1.5;
                var n = Laya.Pool.getItemByClass("winGold", Laya.Animation);
                n.size(50, 50);
                n.pivot(25, 25);
                n.scale(i, i);
                var s = Utils.getRandom(l - 300, l + 300);
                var a = h;
                n.pos(s, a);
                var r = Laya.TimeLine.to(n, {
                    y: a - 160
                },
                o).to(n, {
                    y: a
                },
                o).to(n, {
                    y: a - 80
                },
                o).to(n, {
                    y: a
                },
                o).to(n, {
                    y: a - 40
                },
                o).to(n, {
                    y: a
                },
                o).to(n, {
                    y: a - 20
                },
                o).to(n, {
                    y: a
                },
                o);
                n.once(Laya.Event.DISPLAY, t,
                function() {
                    r.play(0, false);
                    n.play(0, true, "winGold");
                    var e = o * Utils.getRandom(2, 3);
                    Laya.Tween.to(n, {
                        x: t.userGoldIcon.x,
                        y: t.userGoldIcon.y,
                        scaleX: .72,
                        scaleY: .72
                    },
                    o * 1.2, null, Laya.Handler.create(t,
                    function() {
                        n.removeSelf();
                        r.destroy();
                        Laya.Pool.recover("winGold", n);
                        u++;
                        if (u == c) {
                            t.updateUserGold()
                        }
                    }), e);
                    t.timer.once(e, t,
                    function() {
                        r.pause()
                    })
                });
                n.once(Laya.Event.UNDISPLAY, t,
                function() {
                    n.stop()
                });
                t.timer.once(Utils.getRandom(100, 800), t,
                function() {
                    t.addChild(n)
                })
            })(this, i)
        }
        Sound.playSound(Sound.dragonMusic.yzzj_fly_money.url, Sound.dragonMusic.yzzj_fly_money.vol)
    };
    i.updateRoundFun = function() {
        this.roundFont.value = this.currentRound + "/" + this.totalRound;
        var e = Math.floor(219 * this.currentRound / this.totalRound);
        this.dragonRoundMask.width = e
    };
    i.hasLinkedFun = function() {
        this.linkedList = [];
        var e = this.listArg.length;
        if (e >= 8) {
            return false
        }
        var t = 0;
        for (var i = 0,
        n = this.headImgDomList.length; i < n; i++) {
            var s = this.headImgDomList[i];
            var a = f[i];
            s.inst.updatePos(a.x, t);
            t += 60
        }
        var r = 8 - e;
        var o = c.splice(0, r);
        for (var i = 0,
        n = o.length; i < n; i++) {
            var l = o[i];
            var h = this.listArg.length;
            this.listArg.push(l);
            var a = f[h];
            var u = this.addNewRole(l, a, t, h);
            t += 60;
            this.headImgDomList.push({
                type: l,
                inst: u
            })
        }
        Laya.timer.once(2e3, this,
        function() {
            this.checkLinkSkill()
        })
    };
    i.noLinkedFun = function() {
        this.listArg = [];
        c = [];
        this.headImgDomList = [];
        this.linkedList = [];
        this.headImgBox.destroyChildren()
    };
    i.addNewRole = function(e, t, i, n) {
        var s = Laya.Pool.getItemByClass("linkRole", DragonLinkRole);
        s.init(n);
        s.pos( - 98, t.y);
        s.setType(e);
        s.updatePos(t.x, i);
        s.readyCall = function() {
            if (WinUtils.getSaveUI(a)) {}
        };
        this.headImgBox.addChild(s);
        return s
    };
    i.setHeadRoleView = function() {
        if (!c || c.length <= 0) {
            return false
        }
        this.listArg = c.splice(0, 8);
        var e = 0;
        for (var t = 0,
        i = this.listArg.length; t < i; t++) {
            var n = this.listArg[t];
            var s = f[t];
            var a = this.addNewRole(n, s, e, t);
            e += 60;
            this.headImgDomList.push({
                type: n,
                inst: a
            })
        }
        if (this.inRound) {
            Laya.timer.once(2e3, this,
            function() {
                this.checkLinkSkill()
            })
        }
    };
    i.showLinkedAni = function(e, t) {
        var i = this.linkedList;
        var n = 0;
        for (var s = 0,
        a = i.length; s < a; s++) {
            var r = i[s];
            if (r.inst) {
                r.inst.roleIcon.visible = true;
                Sound.playSound(Sound.dragonMusic.yzzj_crush_normal.url, Sound.dragonMusic.yzzj_crush_normal.vol);
                r.inst.playAni(function() {
                    n++;
                    if (n >= i.length) {
                        t && t()
                    }
                })
            }
        }
        this.useSkill(e)
    };
    i.useSkill = function(e) {
        var t = GameConfig.getCfgDNLGSkill(e);
        var i = 0;
        if (t && t.DecBossHP) {
            i = t.DecBossHP
        }
        switch (e) {
        case 1:
            DragonRole4.switchAni("nezha_attack", i, null);
            break;
        case 2:
            DragonRole4.switchAni("nezha_skill", i, null);
            break;
        case 3:
            DragonRole1.switchAni("dasheng_attack", i, null);
            break;
        case 4:
            DragonRole1.switchAni("dasheng_skill", i, null);
            break;
        case 5:
            DragonRole3.switchAni("lijing_attack", i, null);
            break;
        case 6:
            DragonRole3.switchAni("lijing_skill", i, null);
            break
        }
    };
    i.btnSwitchMultipleFun = function() {
        if (this.currentRound > 0) {
            MsgToast.show(GameConfig.ErrorMsg.clientErrorMsg(10078));
            return false
        }
        if (this.listMultiple._animation_) {
            return false
        }
        if (this._listMultipleBox) {
            this.hideMultipleBox()
        } else {
            this.showMultipleBox()
        }
    };
    i.hideMultipleBox = function() {
        var e = this;
        this.listMultiple._animation_ = true;
        this._listMultipleBox = false;
        Laya.Tween.to(this.listMultiple, {
            y: 352
        },
        200);
        var t = this.btnSwitchMultiple.getChildByName("img_arrow");
        Laya.Tween.to(t, {
            rotation: 0
        },
        100);
        this.timer.once(600, this,
        function() {
            e.listMultiple._animation_ = false;
            e.listMultiple.visible = false
        })
    };
    i.showMultipleBox = function() {
        var e = this.listMultiple;
        e._animation_ = true;
        this._listMultipleBox = true;
        var t = 352 - e.height;
        e.visible = true;
        var i = this.btnSwitchMultiple.getChildByName("img_arrow");
        Laya.Tween.to(i, {
            rotation: 180
        },
        100);
        var n = Laya.TimeLine.to(e, {
            y: t - 20
        },
        200).to(e, {
            y: t
        },
        100).to(e, {
            y: t + 10
        },
        100).to(e, {
            y: t
        },
        200);
        n.play(0, false);
        n.once(Laya.Event.COMPLETE, this,
        function() {
            e._animation_ = false
        })
    };
    i.setListMultipleData = function(e, t) {
        var i = Player.getGold();
        e.sort(function(e, t) {
            return t - e
        });
        var n = [],
        s = [],
        a = 0,
        r = 0;
        for (var o = 0,
        l = e.length; o < l; o++) {
            var h = e[o];
            n.push({
                bg: "resource/attackDragonPlace/img_gold2.png",
                multiple: {
                    text: h,
                    color: "#9a3300"
                },
                mulNum: h
            });
            var u = Math.abs(i - h);
            if (u <= s || s == 0) {
                s = u;
                a = h;
                r = o
            }
        }
        var c = this.listMultiple;
        if (t) {
            a = t;
            var f = e.indexOf(t * 1);
            if (f) {
                r = f
            }
        }
        if (n.length > 0 && n[r]) {
            n[r].bg = "resource/attackDragonPlace/img_gold_sel1.png";
            n[r].multiple.color = "#ffffff";
            c.prev_index = r
        }
        c.array = n;
        c.height = n.length * (40 + 4);
        c.visible = false;
        var d = this.btnSwitchMultiple.getChildByName("labelCurMultiple");
        this.btnSwitchMultiple._betNum = a;
        d.text = a
    };
    i.betMulListSelected = function(e) {
        var t = this.listMultiple;
        var i = t.prev_index;
        if (i >= 0) {
            var n = t.array[i];
            n["bg"] = "resource/attackDragonPlace/img_gold2.png";
            n["multiple"].color = "#9a3300";
            t.setItem(i, n)
        }
        var s = t.selectedItem;
        s["bg"] = "resource/attackDragonPlace/img_gold_sel1.png";
        s["multiple"].color = "#ffffff";
        t.setItem(e, s);
        t.prev_index = e;
        var a = this.btnSwitchMultiple.getChildByName("labelCurMultiple");
        this.btnSwitchMultiple._betNum = s.mulNum;
        a.text = s.mulNum;
        this.hideMultipleBox()
    };
    i.addLinkedLog = function(e, t) {
        var a = Laya.Pool.getItemByClass("dragonLinkedNumItem", DragonLogItem);
        a.setData(e, t);
        a.pos(0, 0);
        a.name = "dragonItem";
        a.visible = true;
        this.logListBox.addChild(a);
        var r = 6,
        o = 50;
        var l = this.linkedNumInstList;
        Laya.Tween.to(a, {
            y: r
        },
        200, null, Laya.Handler.create(this,
        function() {
            l.unshift(a);
            for (var e = 0; e < l.length; e++) {
                var t = l[e];
                var i = e * (o + r);
                if (e < 5) {
                    var n = Laya.TimeLine.to(t, {
                        y: i + 10
                    },
                    200).to(t, {
                        y: i
                    },
                    200);
                    n.play(0, false);
                    n.once(Laya.Event.COMPLETE, this,
                    function() {
                        t.y = i
                    })
                } else {
                    t.visible = false;
                    var s = l.length - 5;
                    l.splice(5, s)
                }
            }
        }))
    };
    i.showFlyIconAni = function(e, t, i) {
        try {
            var n = Laya.Pool.getItemByClass("dragonLinkedNumItem", DragonLogItem);
            if (n) {
                n.setData(e, t);
                n.pos(i.x, i.y);
                n.scale(.4, .4);
                n.visible = true;
                this.headImgFlyBox.addChild(n);
                var s = {
                    delay: 0,
                    bezier: [{
                        x: i.x,
                        y: i.y
                    },
                    {
                        x: 55,
                        y: -457
                    }],
                    onComplete: function(e) {
                        e.removeSelf()
                    },
                    onCompleteParams: [n]
                };
                this.tweenMaxInst = Laya.Pool.getItemByClass("TweenLite", TweenLite, "");
                this.tweenMaxInst.target = n;
                this.tweenMaxInst.szy_init(n, 1, s);
                Laya.Tween.to(n, {
                    scaleX: 1,
                    scaleY: 1
                },
                1e3)
            }
            this.timer.once(950, this, this.addLinkedLog, [e, t])
        } catch(e) {
            console.log(e)
        }
    };
    i.removeGetGoldFun = function(e, t) {
        var i = GameConfig.getCfgDNLGMul(t);
        var n = this.btnSwitchMultiple._betNum;
        if (i) {
            var s = "Skill_" + e;
            var a = i[s];
            if (a) {
                var r = Math.floor(a * n / 1e4);
                this.roundGetGold.push(a);
                this.removeGetGoldAni(r)
            }
        }
    };
    i.removeGetGoldAni = function(e) {
        var t = "";
        if (e) {
            t = "+" + e
        } else {
            t = "+0"
        }
        var i = this.fontXiaoChu;
        i.value = t;
        i.alpha = 1;
        i.visible = true;
        i.pos(178, -36);
        Laya.Tween.to(i, {
            y: -100,
            alpha: 0
        },
        400, Laya.Ease.linearNone, new Laya.Handler(this,
        function() {
            i.visible = false;
            i.pos(178, -36);
            i.alpha = 1
        }), 400)
    };
    i.DaNaoLongGongGameFinishRep = function(t) {
        var i = this;
        this.atuoGameFun(true);
        if (t.bossIsDead) {
            var n = t.bossMul;
            if (n) {
                DragonJishabeilvANI.show(t.bossMul, this,
                function() {
                    console.log("倍率完成");
                    var e = i.playExChAni(n, t.rewardGold,
                    function() {
                        i.showNextGameFun(function() {
                            i.noLinkedFun();
                            Request.DaNaoLongGongStartInfoReq();
                            i.addRoles([2]);
                            i.currentRound = 0;
                            i.updateRoundFun();
                            i.logListBox.removeChildByName("dragonItem")
                        })
                    });
                    i.addChild(e)
                })
            }
        } else {
            this.showNextGameFun(function() {
                i.noLinkedFun();
                Request.DaNaoLongGongStartInfoReq();
                i.addRoles([4, 3, 1]);
                DragonRole2.bossResetBlood();
                i.currentRound = 0;
                i.updateRoundFun()
            })
        }
    };
    i.showNextGameFun = function(e) {
        var t = this.nextGameBox;
        t.visible = true;
        t.once(Laya.Event.CLICK, this,
        function() {
            t.visible = false;
            e && e()
        })
    };
    i.updateWinGold = function(e, t) {};
    i.clearLinkedLog = function() {
        var e = this.linkedNumInstList;
        for (var t = 0; t < e.length; t++) {
            var i = e[t];
            i.removeSelf()
        }
        this.linkedNumInstList = []
    };
    i.ReqLeave = function() {
        if (this.autoExecute || this.inRound) {
            MsgToast.show(GameConfig.ErrorMsg.clientErrorMsg(10079));
            return
        }
        this.timer.clearAll(this);
        Request.LeaveGameSvrReq();
        var e = this;
        DragonLoading.load(function() {
            Request.package.getListReq();
            Request.GetUserMoneyReq();
            Sound.stopAll();
            GameCenter.show();
            DragonLoading.hide();
            DragonMain.hide();
            Laya.Pool.clearBySign("dragonLinkedNumItem");
            Laya.Pool.clearBySign("linkRole");
            Laya.Pool.clearBySign("tanchuangANIUi");
            Laya.Pool.clearBySign("winGold")
        })
    };
    i.gameShowFromBg = function() {
        if (!this.inRound) {
            Request.DaNaoLongGongEndGameReq(this.currentRound);
            if (this.autoExecute) {
                this.startGameFun()
            } else {
                this.updateStartBtnUi(1)
            }
        }
        Sound.playMusic(Sound.dragonMusic.yzzj_bg_1.url, Sound.dragonMusic.yzzj_bg_1.vol, true)
    };
    i.hide = function() {
        this.removeSelf()
    };
    i.unDisplay = function() {
        s.unDisplay && s.unDisplay()
    };
    i.display = function() {
        Sound.stopAll();
        this.musiceBtnFun(true);
        if (Game.miniGameIOS()) {
            this.btnOpenMall.visible = false
        } else {
            this.btnOpenMall.visible = true
        }
        this.userNick.text = Utils.nickBylen(Player.getNick()) || "";
        this.fc_gold.value = Player.getGold() || 0;
        var e = GameConfig.getCfgDNLG();
        if (e && e.length) {
            var t = e[0];
            if (t && t.MaxRound) {
                this.totalRound = t.MaxRound
            }
        }
        Request.DaNaoLongGongStartInfoReq();
        this.addRoles();
        s.display && s.display()
    };
    i.reset = function() {
        Laya.stage.event(Laya.Event.def_LeaveDragon)
    };
    var s = {
        display: null,
        unDisplay: null,
        show: function() {
            DragonLoading.load(function() {
                if (!WinUtils.getSaveUI(a)) {
                    new t
                }
                WinUtils.getSaveUI(a).show();
                DragonLoading.hide()
            })
        },
        hide: function() {
            WinUtils.getSaveUI(a) && WinUtils.getSaveUI(a).hide()
        },
        checkLinkSkill: function() {
            if (WinUtils.getSaveUI(a)) {
                WinUtils.getSaveUI(a).checkLinkSkill()
            }
        },
        DaNaoLongGongBeginGameRep: function(e) {
            if (WinUtils.getSaveUI(a) && e.Tag) {
                WinUtils.getSaveUI(a).noLinkedFun();
                WinUtils.getSaveUI(a).inRound = true;
                if (WinUtils.getSaveUI(a).autoExecute) {
                    WinUtils.getSaveUI(a).updateStartBtnUi(3)
                } else {
                    WinUtils.getSaveUI(a).updateStartBtnUi(2)
                }
                var t = WinUtils.getSaveUI(a).btnSwitchMultiple._betNum;
                if (t) {
                    var i = WinUtils.getSaveUI(a).fc_gold.value;
                    Player.setGold(i * 1 - t);
                    WinUtils.getSaveUI(a).fc_gold.value = i * 1 - t
                }
                WinUtils.getSaveUI(a).linkedList = [];
                WinUtils.getSaveUI(a).currentRound = e.RoundID;
                WinUtils.getSaveUI(a).updateRoundFun();
                c = e.SkillList.slice();
                WinUtils.getSaveUI(a).setHeadRoleView()
            } else if (e.MsgID) {
                MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgID))
            }
        },
        DaNaoLongGongStartInfoRep: function(e) {
            if (WinUtils.getSaveUI(a)) {
                if (e.BossRemainHP <= 0 || e.RoundID >= 99) {
                    Request.DaNaoLongGongGameFinishReq();
                    return
                }
                c = c = e.SkillList.slice();
                WinUtils.getSaveUI(a).setHeadRoleView();
                WinUtils.getSaveUI(a).setListMultipleData(e.BetNumList, e.CurBetNum);
                WinUtils.getSaveUI(a).currentRound = e.RoundID;
                WinUtils.getSaveUI(a).updateRoundFun();
                DragonRole2.updateBlood(e.BossRemainHP)
            }
        },
        DaNaoLongGongGameFinishRep: function(e) {
            if (e.Tag && WinUtils.getSaveUI(a)) {
                WinUtils.getSaveUI(a).DaNaoLongGongGameFinishRep(e)
            } else if (e.MsgID) {
                MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgID))
            }
        },
        ReqLeave: function() {
            if (WinUtils.getSaveUI(a)) {
                WinUtils.getSaveUI(a).atuoGameFun(true);
                WinUtils.getSaveUI(a).ReqLeave()
            }
        },
        playExChAni: function(e, t, i) {
            if (WinUtils.getSaveUI(a)) {
                WinUtils.getSaveUI(a).playExChAni(e, t, i)
            }
        },
        gameShowFromBg: function() {
            if (WinUtils.getSaveUI(a)) {
                WinUtils.getSaveUI(a).gameShowFromBg()
            }
        },
        reportLeaveServer: function() {
            if (WinUtils.getSaveUI(a)) {
                WinUtils.getSaveUI(a).atuoGameFun(true);
                WinUtils.getSaveUI(a).inRound = false;
                WinUtils.getSaveUI(a).ReqLeave()
            }
        }
    };
    return s
} ();
var DragonRole1 = function() {
    var n = null;
    function i() {
        i.super(this)
    }
    Laya.class(i, "DragonRole1Fun", dragonRole1UI, "");
    var e = i.prototype;
    e.init = function() {
        this.initEvent()
    };
    e.show = function(e, t) {
        this.x = t.x;
        this.y = t.y;
        this.zOrder = 4;
        e.addChild(this)
    };
    e.switchAni = function(e, t, i) {
        if (!e) {
            return false
        }
        var n = this;
        var s = this.role1Ani;
        s.stop();
        if (e === "dasheng_attack") {
            s.addLabel("attack", 8);
            s.play(0, false, e);
            s.once(Laya.Event.LABEL, this,
            function(e) {
                if (e && e === "attack") {
                    this.attackSprite.visible = true;
                    this.attack.play(0, false);
                    Sound.playSound(Sound.dragonMusic.Dasheng_attack.url, Sound.dragonMusic.Dasheng_attack.vol);
                    this.attack.once(Laya.Event.COMPLETE, this,
                    function() {
                        n.attackSprite.visible = false
                    });
                    if (t) {
                        DragonRole2.beAttacked(t)
                    }
                }
            });
            s.once(Laya.Event.COMPLETE, this,
            function() {
                s.play(0, true, "daSheng_idle");
                s.removeLabel("attack")
            })
        } else if (e === "dasheng_skill") {
            s.addLabel("skill", 11);
            s.play(0, false, e);
            Sound.playSound(Sound.dragonMusic.Dasheng_skill.url, Sound.dragonMusic.Dasheng_skill.vol);
            s.once(Laya.Event.LABEL, this,
            function(e) {
                if (e && e === "skill") {
                    this.skillSprite.visible = true;
                    this.skill.play(0, false);
                    this.skill.once(Laya.Event.COMPLETE, this,
                    function() {
                        n.skillSprite.visible = false
                    });
                    if (t) {
                        DragonRole2.beAttacked(t)
                    }
                }
            });
            s.once(Laya.Event.COMPLETE, this,
            function() {
                s.play(0, true, "daSheng_idle");
                s.removeLabel("skill")
            })
        } else if (e === "dasheng_dead") {
            s.play(0, false, e);
            s.once(Laya.Event.COMPLETE, this,
            function() {
                n.visible = false;
                i && i();
                n.removeSelf()
            })
        }
    };
    e.hide = function() {
        this.removeSelf()
    };
    e.unDisplay = function() {
        this.reset()
    };
    e.display = function() {
        this.role1Ani.interval = 70;
        this.role1Ani.play(0, true, "daSheng_idle")
    };
    e.reset = function() {
        n = null
    };
    return {
        show: function(e, t) {
            if (!n) {
                n = new i;
                n.init()
            }
            n.show(e, t)
        },
        hide: function() {
            n && n.hide()
        },
        switchAni: function(e, t, i) {
            if (n) {
                n.switchAni(e, t, i)
            }
        }
    }
} ();
var DragonRole2 = function() {
    var i = null;
    function n() {
        n.super(this)
    }
    Laya.class(n, "DragonRole2Fun", dragonRole2UI, "");
    var e = n.prototype;
    e.init = function() {
        this.initEvent();
        var e = GameConfig.getCfgDNLG();
        if (e && e.length) {
            var t = e[0];
            if (t && t.BossMaxHP) {
                this.totalBlood = t.BossMaxHP || 4680;
                this.currentBlood = t.BossMaxHP || 4680
            }
        }
    };
    e.show = function(e, t) {
        this.x = t.x;
        this.y = t.y;
        this.zOrder = 2;
        e.addChild(this)
    };
    e.beAttacked = function(t) {
        var i = this.role1Ani;
        var n = this;
        if (!i) {
            return false
        }
        i.stop();
        i.play(0, false, "jiutoushe_suffer");
        i.once(Laya.Event.COMPLETE, this,
        function() {
            var e = n.bloodReduceNum;
            e.value = "-" + t || 0;
            e.y = 11;
            e.visible = true;
            Laya.Tween.to(e, {
                y: -26
            },
            1e3, Laya.Ease.linearNone, new Laya.Handler(e,
            function() {
                this.visible = false;
                this.y = 11;
                this.value = 0;
                var e = n.currentBlood;
                n.currentBlood = e - t;
                if (n.currentBlood < 0) {
                    n.currentBlood = 0
                }
                n.updateBlood()
            }));
            i.play(0, true, "jiutoushe_idle")
        })
    };
    e.updateBlood = function(e) {
        if (e >= 0) {
            this.currentBlood = e
        }
        this.bloodTotal.text = this.currentBlood + "/" + this.totalBlood;
        var t = Math.floor(256 * this.currentBlood / this.totalBlood);
        this.spriteBlood.width = t
    };
    e.playDeadAni = function(e) {
        this.role1Ani.stop();
        this.role1Ani.play(0, false, "jiutoushe_dead");
        Sound.playSound(Sound.dragonMusic.Boss_dead.url, Sound.dragonMusic.Boss_dead.vol);
        this.role1Ani.once(Laya.Event.COMPLETE, this,
        function() {
            this.visible = false;
            this.removeSelf();
            e && e()
        })
    };
    e.playAttackAni = function(t) {
        var i = this;
        var e = this.role1Ani;
        e.stop();
        e.addLabel("attack", 10);
        e.play(0, false, "jiutoushe_attack");
        e.once(Laya.Event.LABEL, this,
        function(e) {
            if (e && e === "attack") {
                this.skillSprite.visible = true;
                this.skill.play(0, false);
                Sound.playSound(Sound.dragonMusic.Boss_attack.url, Sound.dragonMusic.Boss_attack.vol);
                this.skill.once(Laya.Event.COMPLETE, this,
                function() {
                    i.skillSprite.visible = false;
                    t && t()
                })
            }
        });
        e.once(Laya.Event.COMPLETE, this,
        function() {
            e.play(0, true, "jiutoushe_idle");
            e.removeLabel("attack")
        })
    };
    e.hide = function() {
        this.removeSelf()
    };
    e.unDisplay = function() {
        this.reset()
    };
    e.display = function() {
        this.updateBlood();
        this.role1Ani.interval = 80;
        this.role1Ani.play(0, true, "jiutoushe_idle")
    };
    e.reset = function() {
        i = null
    };
    return {
        show: function(e, t) {
            if (!i) {
                i = new n;
                i.init()
            }
            i.show(e, t)
        },
        hide: function() {
            i && i.hide()
        },
        beAttacked: function(e) {
            if (i) {
                i.beAttacked(e)
            }
        },
        updateBlood: function(e) {
            if (i) {
                i.updateBlood(e)
            }
        },
        getBossBlood: function() {
            if (i) {
                return i.currentBlood
            }
        },
        playDeadAni: function(e) {
            if (i) {
                i.playDeadAni(e)
            }
        },
        playAttackAni: function(e) {
            if (i) {
                i.playAttackAni(e)
            }
        },
        bossResetBlood: function() {
            if (i) {
                i.updateBlood(i.totalBlood)
            }
        }
    }
} ();
var DragonRole3 = function() {
    var n = null;
    function i() {
        i.super(this)
    }
    Laya.class(i, "DragonRole3Fun", dragonRole3UI, "");
    var e = i.prototype;
    e.init = function() {
        this.initEvent()
    };
    e.show = function(e, t) {
        this.x = t.x;
        this.y = t.y;
        this.zOrder = 3;
        e.addChild(this)
    };
    e.switchAni = function(e, t, i) {
        if (!e) {
            return false
        }
        var n = this;
        var s = this.role1Ani;
        s.stop();
        if (e === "lijing_attack") {
            s.addLabel("attack", 6);
            s.play(0, false, e);
            s.once(Laya.Event.LABEL, this,
            function(e) {
                if (e && e === "attack") {
                    this.attackSprite.visible = true;
                    this.attack.play(0, false);
                    Sound.playSound(Sound.dragonMusic.Lijing_attack.url, Sound.dragonMusic.Lijing_attack.vol);
                    this.attack.once(Laya.Event.COMPLETE, this,
                    function() {
                        n.attackSprite.visible = false
                    });
                    if (t) {
                        DragonRole2.beAttacked(t)
                    }
                }
            });
            s.once(Laya.Event.COMPLETE, this,
            function() {
                s.play(0, true, "lijing_idle");
                s.removeLabel("attack")
            })
        } else if (e === "lijing_skill") {
            s.addLabel("skill", 13);
            s.play(0, false, e);
            Sound.playSound(Sound.dragonMusic.Lijing_skill.url, Sound.dragonMusic.Lijing_skill.vol);
            s.once(Laya.Event.LABEL, this,
            function(e) {
                if (e && e === "skill") {
                    this.skillSprite.visible = true;
                    this.skill.play(0, false);
                    this.skill.once(Laya.Event.COMPLETE, this,
                    function() {
                        n.skillSprite.visible = false
                    });
                    if (t) {
                        DragonRole2.beAttacked(t)
                    }
                }
            });
            s.once(Laya.Event.COMPLETE, this,
            function() {
                s.play(0, true, "lijing_idle");
                s.removeLabel("skill")
            })
        } else if (e === "lijing_dead") {
            s.play(0, false, e);
            s.once(Laya.Event.COMPLETE, this,
            function() {
                n.visible = false;
                i && i();
                n.removeSelf()
            })
        }
    };
    e.hide = function() {
        this.removeSelf()
    };
    e.unDisplay = function() {
        this.reset()
    };
    e.display = function() {
        this.role1Ani.interval = 70;
        this.role1Ani.play(0, true, "lijing_idle")
    };
    e.reset = function() {
        n = null
    };
    return {
        show: function(e, t) {
            if (!n) {
                n = new i;
                n.init()
            }
            n.show(e, t)
        },
        hide: function() {
            n && n.hide()
        },
        switchAni: function(e, t, i) {
            if (n) {
                n.switchAni(e, t, i)
            }
        }
    }
} ();
var DragonRole4 = function() {
    var n = null;
    function i() {
        i.super(this)
    }
    Laya.class(i, "DragonRole4Fun", dragonRole4UI, "");
    var e = i.prototype;
    e.init = function() {
        this.initEvent()
    };
    e.show = function(e, t) {
        this.x = t.x;
        this.y = t.y;
        this.zOrder = 1;
        e.addChild(this)
    };
    e.switchAni = function(e, t, i) {
        if (!e) {
            return false
        }
        var n = this;
        var s = this.role1Ani;
        s.stop();
        if (e === "nezha_attack") {
            s.addLabel("attack", 5);
            s.play(0, false, e);
            s.once(Laya.Event.LABEL, this,
            function(e) {
                if (e && e === "attack") {
                    this.attackSprite.visible = true;
                    this.attack.play(0, false);
                    Sound.playSound(Sound.dragonMusic.Nezha_attack.url, Sound.dragonMusic.Nezha_attack.vol);
                    this.attack.once(Laya.Event.COMPLETE, this,
                    function() {
                        n.attackSprite.visible = false
                    });
                    if (t) {
                        DragonRole2.beAttacked(t)
                    }
                }
            });
            s.once(Laya.Event.COMPLETE, this,
            function() {
                s.play(0, true, "nezha_idle");
                s.removeLabel("attack")
            })
        } else if (e === "nezha_skill") {
            s.addLabel("skill", 6);
            s.play(0, false, e);
            Sound.playSound(Sound.dragonMusic.Nezha_skill.url, Sound.dragonMusic.Nezha_skill.vol);
            s.once(Laya.Event.LABEL, this,
            function(e) {
                if (e && e === "skill") {
                    this.skillSprite.visible = true;
                    this.skill.play(0, false);
                    this.skill.once(Laya.Event.COMPLETE, this,
                    function() {
                        n.skillSprite.visible = false
                    });
                    if (t) {
                        DragonRole2.beAttacked(t)
                    }
                }
            });
            s.once(Laya.Event.COMPLETE, this,
            function() {
                s.play(0, true, "nezha_idle");
                s.removeLabel("skill")
            })
        } else if (e === "nezha_dead") {
            s.play(0, false, e);
            s.once(Laya.Event.COMPLETE, this,
            function() {
                n.visible = false;
                i && i();
                n.removeSelf()
            })
        }
    };
    e.hide = function() {
        this.removeSelf()
    };
    e.unDisplay = function() {
        this.reset()
    };
    e.display = function() {
        this.role1Ani.interval = 70;
        this.role1Ani.play(0, true, "nezha_idle")
    };
    e.reset = function() {
        n = null
    };
    return {
        show: function(e, t) {
            if (!n) {
                n = new i;
                n.init()
            }
            n.show(e, t)
        },
        hide: function() {
            n && n.hide()
        },
        switchAni: function(e, t, i) {
            if (n) {
                n.switchAni(e, t, i)
            }
        }
    }
} ();
function DragonLogItem() {
    DragonLogItem.super(this)
}
Laya.class(DragonLogItem, "DragonLogItem", dragonLogItemUI, "");
var _proto_ = DragonLogItem.prototype;
_proto_.setData = function(e, t) {
    var i = DragonLinkRole.getIconSkin(e);
    this.itemRoleIcon.skin = i.roleIcon;
    this.itemRoleNum.value = "x" + t;
    this.once(Laya.Event.UNDISPLAY, this,
    function() {
        this.recover()
    })
};
_proto_.recover = function() {
    Laya.Pool.recover("dragonLinkedNumItem", this)
};
var DragonJishabeilvANI = function() {
    var n = null;
    function s() {
        s.super(this)
    }
    Laya.class(s, "DragonJishabeilvANIFun", jishabeilvANIUI, "");
    var e = s.prototype;
    e.init = function(e, t) {
        var i = this;
        this.initEvent();
        if (e < 10) {
            this.value1.value = 0;
            this.value2.value = e
        } else if (e >= 10 && e <= 99) {
            this.value1.value = Math.floor(e / 10);
            this.value2.value = e % 10
        }
        this.callback = t;
        this.completedIndex = 0;
        this.increment = [26, 25, 23, 20];
        this.font_img_list = [i.cell_1, i.cell_2]
    };
    e.update = function() {
        var e = this.font_img_list;
        for (var t = 0,
        i = e.length; t < i; t++) {
            var n = e[t];
            if (n && n.visible) {
                n.y -= this.increment[t];
                if (n.y <= -660) {
                    n.y = 0
                }
            }
        }
    };
    e.stop = function(e) {
        var t = this["value" + (e + 1)];
        if (this["cell_" + (e + 1)]) {
            this["cell_" + (e + 1)].visible = false
        }
        if (t) {
            t.visible = true;
            var i = Laya.TimeLine.to(t, {
                scaleX: 6,
                scaleY: 6
            },
            100).to(t, {
                scaleX: 1,
                scaleY: 1
            },
            80);
            i.on(Laya.Event.COMPLETE, this,
            function() {
                this.completedIndex += 1;
                if (this.completedIndex >= 2) {
                    this.completed && this.completed();
                    this.timer.once(500, this,
                    function() {
                        this.removeSelf()
                    })
                }
            });
            Sound.playSound(Sound.dragonMusic.yzzj_kill_boss.url, Sound.dragonMusic.yzzj_kill_boss.vol, false);
            i.play(0, false)
        }
    };
    e.show = function(e) {
        if (e) {
            e.addChild(this)
        }
    };
    e.hide = function() {
        this.removeSelf()
    };
    e.unDisplay = function() {
        this.callback && this.callback();
        this.callback = null;
        this.timer.clear(this, this.update);
        this.reset()
    };
    e.display = function() {
        if (this.fireAni) {
            this.fireAni.visible = true;
            this.fireAni.once(Laya.Event.COMPLETE, this,
            function() {
                this.fireAni.visible = false
            });
            this.fireAni.play(0, false)
        }
        this.ani1.play(0, false);
        Sound.playSound(Sound.RES.jubaopen_continue.url, Sound.RES.jubaopen_continue.vol, true);
        this.timer.frameLoop(1, this, this.update);
        this.timer.once(1e3, this,
        function() {
            this.stop(1)
        });
        this.timer.once(1e3 * 2, this,
        function() {
            this.stop(0);
            Sound.stopSoundByUrl(Sound.RES.jubaopen_continue.url)
        })
    };
    e.reset = function() {
        n = null
    };
    return {
        show: function(e, t, i) {
            if (!n) {
                n = new s;
                n.init(e, i)
            }
            n.show(t)
        },
        hide: function() {
            n && n.hide()
        }
    }
} ();
var DragonNotice = function() {
    var e = null;
    function t() {
        t.super(this)
    }
    Laya.class(t, "DragonNoticeFun", dragonNoticeUI, "");
    var i = t.prototype;
    i.init = function() {
        Laya.stage.on(Laya.Event.def_LeaveDragon, this, this.reset);
        this.
        continue.clickHandler = new Laya.Handler(this,
        function() {
            this.close()
        });
        this.exit.clickHandler = new Laya.Handler(this,
        function() {
            this.close();
            DragonMain.ReqLeave()
        })
    };
    i.onClosed = function() {
        Laya.stage.off(Laya.Event.def_LeaveDragon, this, this.reset);
        BaseDialog.prototype.onClosed.call(this);
        e = null
    };
    i.reset = function() {
        if (this.displayedInStage) {
            this.close()
        }
        e = null
    };
    return {
        show: function() {
            if (!e) {
                e = new t;
                e.init()
            }
            e.popup()
        },
        hide: function() {
            e && e.close()
        }
    }
} ();
var DragonPriceLog = function() {
    var t = null;
    function e() {
        e.super(this)
    }
    Laya.class(e, "DragonPriceLogFun", dragonPriceLogUI, "");
    var i = e.prototype;
    i.init = function() {
        Laya.stage.on(Laya.Event.def_LeaveDragon, this, this.reset);
        this.logList.scrollBar.hide = true
    };
    i.DaNaoLongGongRemoveLogRep = function(e) {
        if (!e.logList) {
            return
        }
        var t = e.logList;
        var i = [];
        for (var n = 0,
        s = t.length; n < s; n++) {
            var a = t[n];
            var r = {};
            var o = true;
            if (n % 2 === 0) {
                o = true
            } else {
                o = false
            }
            r.bg = {
                visible: o
            };
            var l = this.formatUnixtimestamp(a.prizeTimeStamp);
            r.time = {
                value: l
            };
            r.lianji = {
                value: a.ComboNum
            };
            r.points = {
                value: a.Score
            };
            i.push(r)
        }
        this.logList.array = i
    };
    i.formatUnixtimestamp = function(e) {
        var t = new Date(e * 1e3);
        var i = t.getFullYear();
        var n = "0" + (t.getMonth() + 1);
        var s = "0" + t.getDate();
        var a = "0" + t.getHours();
        var r = "0" + t.getMinutes();
        var o = "0" + t.getSeconds();
        return n.substring(n.length - 2, n.length) + "-" + s.substring(s.length - 2, s.length) + " " + a.substring(a.length - 2, a.length) + ":" + r.substring(r.length - 2, r.length)
    };
    i.onClosed = function() {
        Laya.stage.off(Laya.Event.def_LeaveDragon, this, this.reset);
        BaseDialog.prototype.onClosed.call(this);
        t = null
    };
    i.reset = function() {
        if (this.displayedInStage) {
            this.close()
        }
        t = null
    };
    return {
        show: function() {
            Request.DaNaoLongGongRemoveLogReq();
            if (!t) {
                t = new e;
                t.init()
            }
            t.popup()
        },
        hide: function() {
            t && t.close()
        },
        DaNaoLongGongRemoveLogRep: function(e) {
            console.log(e);
            if (e && t) {
                t.DaNaoLongGongRemoveLogRep(e)
            }
        }
    }
} ();
var DragonGameRule = function() {
    var e = null;
    function t() {
        t.super(this)
    }
    Laya.class(t, "DragonGameRuleFun", dragonGameRuleUI, "");
    var i = t.prototype;
    i.init = function() {
        var e = this;
        Laya.stage.on(Laya.Event.def_LeaveDragon, this, this.reset);
        this.skillMsgList.scrollBar.hide = true;
        this.on(Laya.Event.CLICK, this,
        function(e) {
            var t = e.target.name;
            switch (t) {
            case "btn_0":
                this.changeTab(0);
                break;
            case "btn_1":
                this.changeTab(1);
                break;
            case "btn_2":
                this.changeTab(2);
                break
            }
        });
        this.viewBox = [this.box_0, this.box_1, this.box_2];
        this.currViewBox = this.viewBox[0];
        this.tabState = {
            btnList: [e.btn_0, e.btn_1, e.btn_2],
            selectedIndex: 0,
            b_s_1: "resource/attackDragonPlace/btn_title.png",
            b_s_2: "resource/attackDragonPlace/btn_title_sel.png",
            icon: [["resource/attackDragonPlace/word_guizeGray.png", "resource/attackDragonPlace/word_guizeOrang.png"], ["resource/attackDragonPlace/word_jinengGray.png", "resource/attackDragonPlace/word_jinengOrang.png"], ["resource/attackDragonPlace/word_tongguanGray.png", "resource/attackDragonPlace/word_tongguanOrang.png"]]
        };
        this.changeTab(0);
        this.setMulList()
    };
    i.setMulList = function() {
        var e = [];
        var t = GameConfig.getCfgDNLGMulArg();
        for (var i = 0; i < t.length; i++) {
            var n = t[i];
            e.push({
                title: n.RemoveNum + "连消",
                skill_1: n.Skill_1 / 1e4,
                skill_2: n.Skill_2 / 1e4,
                skill_3: n.Skill_3 / 1e4,
                skill_4: n.Skill_4 / 1e4,
                skill_5: n.Skill_5 / 1e4,
                skill_6: n.Skill_6 / 1e4
            })
        }
        this.skillMsgList.array = e
    };
    i.changeTab = function(e) {
        if (e < this.tabState.btnList.length) {
            var t = this.tabState.btnList[this.tabState.selectedIndex];
            var i = t.getChildByName("icon");
            t.skin = this.tabState["b_s_1"];
            if (i) {
                i.skin = this.tabState.icon[this.tabState.selectedIndex][0]
            }
            var n = this.tabState.btnList[e];
            var s = n.getChildByName("icon");
            n.skin = this.tabState["b_s_2"];
            if (s) {
                s.skin = this.tabState.icon[e][1]
            }
            this.tabState.selectedIndex = e;
            this.changeTabView(e)
        }
    };
    i.changeTabView = function(e) {
        var t = this["box_" + e];
        this.currViewBox.visible = false;
        t.visible = true;
        this.currViewBox = t
    };
    i.onClosed = function() {
        Laya.stage.off(Laya.Event.def_LeaveDragon, this, this.reset);
        BaseDialog.prototype.onClosed.call(this);
        e = null
    };
    i.reset = function() {
        if (this.displayedInStage) {
            this.close()
        }
        e = null
    };
    return {
        show: function() {
            if (!e) {
                e = new t;
                e.init()
            }
            e.popup()
        },
        hide: function() {
            e && e.close()
        }
    }
} ();
var Task = function() {
    var f = {
        Day: 1,
        Week: 2
    };
    var r = {
        Day: 1,
        Week: 2,
        HitFish: 3,
        UseDanTou: 4,
        UseHaoJiao: 5,
        UseBaoXiang: 6,
        HitBoss: 7
    };
    function o(n, s) {
        this.init = function() {
            for (var e = 0; e < n.length; e++) { (function(e, t) {
                    if (n[e]) {
                        n[e].clickHandler = new Laya.Handler(t, t.updateState, [e])
                    }
                })(e, this)
            }
        };
        this.updateState = function(e) {
            for (var t = 0; t < n.length; t++) {
                if (n[t]) {
                    n[t].skin = s.btnState[e == t ? 1 : 0];
                    var i = n[t].getChildByName("icon");
                    if (i) {
                        i.skin = s.iconState[t] + (e == t ? "huang.png": "lan.png")
                    }
                    n[t].zOrder = e == t ? 2 : 0
                }
            }
            if (this.clickCall) {
                this.clickCall(e)
            }
        };
        this.init();
        this.updateState(0)
    }
    function _(e) {
        var t = [],
        i = [],
        n = [];
        for (var s = 0; s < e.length; s++) {
            var a = e[s];
            if (a._state_ == 0) {
                t.push(a)
            } else if (a._state_ == 1) {
                i.push(a)
            } else if (a._state_ == 2) {
                n.push(a)
            }
        }
        t = t.concat(i).concat(n);
        return t
    }
    var a = [1, 2, 3, 4, 8, 10, 11, 12];
    var e = TaskUI.prototype;
    e.init = function() {
        this.taskList.scrollBar.hide = true;
        this.tabList.disScrollBar();
        this.activeList.disScrollBar();
        var e = {
            btnState: ["resource/common/btn_fenlei_sel.png", "resource/common/btn_fenlei_nor.png"],
            iconState: ["resource/task/zi_meiri_", "resource/task/zi_meizhou_", "resource/task/zi_chengjiu_"]
        };
        var t = this;
        this.tabIndex = 0;
        this.taskGIndex = 0;
        this.finishTaskId = -1;
        var i = new o([this.btn_m_0, this.btn_m_1, this.btn_m_2], e);
        i.clickCall = function(e) {
            t.taskList.scrollTo(0);
            if (e == 0) {
                t.changeView(r.Day)
            } else if (e == 1) {
                t.changeView(r.Week)
            } else if (e == 2) {
                t.changeView(r.HitFish)
            }
            t.tabIndex = e
        };
        this.tabInst = i;
        this.tabList.selectEnable = true;
        this.tabList._index = 0;
        this.activeList.renderHandler = new Laya.Handler(this, this.activeRender);
        this.taskList.renderHandler = new Laya.Handler(this, this.taskRender);
        this.tabList.selectHandler = new Laya.Handler(this, this.tabSelectedHandler);
        this.tabList.renderHandler = new Laya.Handler(this, this.tabRenderHlr);
        this.btnGet.clickHandler = new Laya.Handler(this,
        function() {
            Request.AchTaskGetPrizeReq(0)
        });
        this.activeData = {};
        this.taskGroupData = {};
        var n = [];
        for (var s in r) {
            var a = r[s];
            if (a >= r.HitFish) {
                n.push({
                    id: a,
                    zi_0: "resource/task/zi_" + a + "_0.png",
                    zi: "resource/task/zi_" + a + "_1.png",
                    _nor: "resource/task/zi_" + a + "_0.png",
                    _sel: "resource/task/zi_" + a + "_1.png",
                    sel: {
                        visible: a == r.HitFish ? true: false
                    },
                    nor: {
                        visible: a == r.HitFish ? false: true
                    }
                })
            }
        }
        this.tabList.array = n
    };
    e.activeRender = function(n, e) {
        if (!n._bindClick) {
            n._bindClick = true;
            n.on(Laya.Event.CLICK, this,
            function() {
                var e = n.dataSource;
                var t = this.fc_activeVal.value * 1;
                var i = e.fc_n.value;
                if (t >= i && e.s_1.visible) {
                    Waiting.show();
                    Request.AchTaskActivePrizeReq(e.type)
                }
            })
        }
    };
    e.taskRender = function(e, t) {
        var i = e.dataSource;
        var n = e.getChildByName("btnGo");
        var s = n.getChildByName("icon");
        if (s && i && i.btnGo && i.btnGo.icon) {
            s.skin = i.btnGo.icon.skin
        }
        n.clickHandler = new Laya.Handler(this,
        function() {
            if (i.canGet) {
                Waiting.show();
                Request.AchTaskGetPrizeReq(i.id)
            } else {
                if (a.indexOf(i.type) >= 0) {
                    Waiting.show();
                    GameCenter.quickStart()
                } else if (i.type == 5) {
                    var t = this;
                    RewardedVideoAd.show(null,
                    function(e) {
                        t.finishTaskId = i.id;
                        Request.AchTaskFinishReq(5)
                    })
                } else if (i.type == 6) {
                    if (Channel && Channel.forward) {
                        Channel.forward();
                        this.finishTaskId = i.id;
                        Request.AchTaskFinishReq(6)
                    }
                } else if (i.type == 7) {
                    Waiting.show();
                    GameCenter.selectSceneFn(Game.sceneConfig.sceneID.scene_SuperMatch)
                } else if (i.type == 9 || i.type == 15) {
                    ShopMall.show()
                } else if (i.type == 13) {
                    this.close();
                    PigBank.show()
                } else if (i.type == 14) {} else if (i.type == 16) {
                    this.close();
                    Package.popup()
                } else if (i.type == 17) {
                    this.close();
                    Activity.show()
                } else if (i.type == 18) {
                    this.close();
                    GameCenter.selectScene(Game.sceneConfig.sceneID.scene_YouYiSai)
                }
            }
        })
    };
    e.tabRenderHlr = function(e, t) {
        var i = e.dataSource;
        var n = e.getChildByName("sel");
        var s = e.getChildByName("nor");
        var a = e.getChildByName("zi");
        n.visible = t == this.tabList.selectedIndex ? true: false;
        if (i) {
            a.skin = t == this.tabList.selectedIndex ? i.zi_0: i.zi
        }
        s.visible = !n.visible
    };
    e.tabSelectedHandler = function(e) {
        var t = this.tabList.selectedItem;
        this.changeView(t.id)
    };
    e.updateActData = function(e, t, i) {
        var n = i,
        s = t;
        var a = {
            maxV: 0,
            type: e,
            value: i,
            state: t,
            list: []
        };
        var r = GameConfig.getAchTaskActive();
        if (r && r.length) {
            for (var o = 0; o < r.length; o++) {
                if (r[o]) {
                    var l = r[o];
                    if (a.maxV <= l.ActiveValue) {
                        a.maxV = l.ActiveValue
                    }
                    var h = e == f.Week ? l.WeekPrize: l.Prize;
                    if (h) {
                        var u = h.split(":");
                        if (u && u.length == 2) {
                            var c = {
                                id: l.ID,
                                type: e,
                                fc_g: {
                                    value: u[1]
                                },
                                av: l.ActiveValue,
                                s_2: {
                                    visible: o < s ? true: false
                                },
                                s_1: {
                                    skin: "resource/task/" + (e == f.Week ? "8_1": "7_1") + ".png",
                                    visible: o >= s && n >= l.ActiveValue ? true: false
                                },
                                s_0: {
                                    skin: "resource/task/" + (e == f.Week ? 8 : 7) + ".png",
                                    visible: o >= s && n < l.ActiveValue ? true: false
                                },
                                fc_n: {
                                    value: l.ActiveValue,
                                    visible: o < s ? false: true
                                },
                                icon: "resource/icon/" + u[0] + ".png"
                            };
                            a.list.push(c)
                        }
                    }
                }
            }
        }
        this.activeData[e] = a
    };
    e.initTaskData = function(e) {
        var t = GameConfig.getAchTask();
        if (!t || t && t.length < 1) {
            MsgToast.show("缺少任务配置");
            return
        }
        var i = {};
        for (var n = 0; n < t.length; n++) {
            var s = t[n];
            if (s) {
                if (Game.onMiniGame) {
                    if (s.Platform > 1) {
                        continue
                    }
                    if (Game.onQQ()) {
                        if (s.Type == 5) {
                            continue
                        }
                    }
                } else {
                    if (s.Platform == 1) {
                        continue
                    }
                }
                i[s.ID] = s
            }
        }
        if (e) {
            e.sort(function(e, t) {
                if (e.TaskId < t.TaskId) {
                    return - 1
                }
                if (e.TaskId > t.TaskId) {
                    return 1
                }
                return 0
            });
            for (var a = 0; a < e.length; a++) {
                var r = e[a];
                if (r) {
                    var o = i[r.TaskId];
                    if (o) {
                        if (Game.onMiniGame && Game.isIOS) {
                            if (r.TaskId == 8 || r.TaskId == 113) {
                                continue
                            }
                        }
                        var l = 1;
                        if (o.Condition) {
                            var h = o.Condition.split(":");
                            if (h.length == 2) {
                                l = h[1]
                            }
                            if (o.Type == 15) {
                                l = Utils.fenToYuan(l);
                                r.TaskNum = Utils.fenToYuan(r.TaskNum)
                            }
                        }
                        var u = {
                            id: o.ID,
                            desc: o.Desc,
                            type: o.Type,
                            needNum: l * 1,
                            taskNum: r.TaskNum,
                            percent: {
                                text: (r.TaskNum < 0 ? l: r.TaskNum) + "/" + l
                            },
                            progress: {
                                value: r.TaskNum == -1 ? 1 : r.TaskNum / l
                            },
                            canGet: r.TaskNum < l ? false: true,
                            hadGet: {
                                visible: r.TaskNum == -1 ? true: false
                            },
                            btnGo: {
                                visible: r.TaskNum == -1 ? false: true,
                                skin: r.TaskNum >= 0 && r.TaskNum < l ? "resource/task/btn_lv.png": "resource/task/btn_get.png",
                                icon: {
                                    skin: r.TaskNum >= 0 && r.TaskNum < l ? "resource/task/zi_quwancheng.png": "resource/task/zi_lingqu2.png"
                                }
                            },
                            _state_: r.TaskNum == -1 ? 2 : r.TaskNum < l ? 1 : 0,
                            itemList: {
                                array: [],
                                scrollBar: {
                                    hide: true
                                }
                            }
                        };
                        if (o.Prize) {
                            var c = Utils.itemCfgToData(o.Prize);
                            var f = [];
                            for (var d = 0; d < c.length; d++) {
                                if (c[d]) {
                                    f.push({
                                        kuang: c[d].kuang,
                                        num: {
                                            value: Utils.numberFormat(c[d].num)
                                        },
                                        icon: c[d].icon
                                    })
                                }
                            }
                            u.itemList.array = f
                        }
                        if (o.Sort) {
                            if (!this.taskGroupData[o.Sort]) {
                                this.taskGroupData[o.Sort] = []
                            }
                            this.taskGroupData[o.Sort].push(u)
                        } else {
                            if (o.Group) {
                                if (!this.taskGroupData[o.Group]) {
                                    this.taskGroupData[o.Group] = []
                                }
                                this.taskGroupData[o.Group].push(u)
                            }
                        }
                    }
                }
            }
            for (var g in this.taskGroupData) {
                var p = this.taskGroupData[g];
                p = _(p);
                this.taskGroupData[g] = p
            }
        }
    };
    e.updateActUI = function(e) {
        if (e) {
            this.fc_activeVal.value = e.value;
            if (e.list) {
                this.activeList.array = e.list
            }
            var t = e.value * 1 / e.maxV * 1;
            t = t >= 1 ? 1 : t;
            var i = 65 + t * 620;
            this.activeBar.width = i
        }
    };
    e.updateTaskUI = function(e, t) {
        if (e && e.length) {
            e = _(e);
            this.taskList.scrollTo(0);
            this.taskList.array = e;
            this.taskGIndex = t
        }
    };
    e.changeView = function(e) {
        this.taskList.y = 300;
        this.taskList.height = 244;
        if (e == r.Day) {
            this.updateActUI(this.activeData[f.Day], f.Day);
            this.activeBox.visible = true
        } else if (e == r.Week) {
            this.updateActUI(this.activeData[f.Week], f.Week);
            this.activeBox.visible = true
        } else {
            if (this.activeBox.visible) {
                this.tabList.selectedIndex = 0
            }
            this.activeBox.visible = false;
            this.taskList.y = 220;
            this.taskList.height = 320
        }
        this.tabList.visible = !this.activeBox.visible;
        if (this.taskGroupData[e]) {
            this.updateTaskUI(this.taskGroupData[e], e)
        }
    };
    e.updateData = function(e) {
        var t = GameConfig.getAchTask();
        if (!t || t && t.length < 1) {
            MsgToast.show("缺少任务配置");
            return
        }
        this.activeData = {};
        this.taskGroupData = {};
        this.updateActData(f.Day, e.ActiveState, e.ActiveValue);
        this.updateActData(f.Week, e.WeekActiveState, e.WeekActiveValue);
        if (e && e.Data) {
            this.initTaskData(e.Data)
        }
        this.updateActUI(this.activeData[f.Day]);
        this.updateTaskUI(this.taskGroupData[r.Day], r.Day);
        if (this.tabInst) {
            this.tabInst.updateState(0)
        }
        this.updateBtnGet();
        Waiting.hide()
    };
    e.updateBtnGet = function() {
        var e = false;
        for (var t in this.taskGroupData) {
            var i = this.taskGroupData[t];
            if (i) {
                for (var n = 0; n < i.length; n++) {
                    var s = i[n];
                    if (s) {
                        if (s._state_ == 0) {
                            e = true;
                            break
                        }
                    }
                }
            }
        }
        this.btnGet.visible = e
    };
    e.taskFinishById = function(e) {
        var t = GameConfig.getAchTaskById(e);
        var i = t.Sort,
        n = t.Group;
        var s = i ? i: n;
        if (this.taskGroupData[s]) {
            var a = this.taskGroupData[s];
            for (var r = 0; r < a.length; r++) {
                var o = a[r];
                if (o && o.id == e) {
                    o.taskNum += 1;
                    o.progress = {
                        value: o.taskNum >= o.needNum ? 1 : o.taskNum / o.needNum
                    };
                    o.btnGo = {
                        visible: true,
                        skin: o.taskNum >= 0 && o.taskNum < o.needNum ? "resource/task/btn_lv.png": "resource/task/btn_get.png",
                        icon: {
                            skin: o.taskNum >= 0 && o.taskNum < o.needNum ? "resource/task/zi_quwancheng.png": "resource/task/zi_lingqu2.png"
                        }
                    };
                    o.percent = {
                        text: (o.taskNum >= o.needNum ? o.needNum: o.taskNum) + "/" + o.needNum
                    };
                    o._state_ = o.taskNum < o.needNum ? 1 : 0;
                    o.canGet = o.taskNum < o.needNum ? false: true
                }
            }
        }
        if (s == this.taskGIndex) {
            var a = this.taskGroupData[s];
            this.updateTaskUI(a, s)
        }
        this.updateBtnGet()
    };
    e.updateTaskStateById = function(e) {
        var t = GameConfig.getAchTaskById(e);
        var i = t.Sort,
        n = t.Group;
        var s = i ? i: n;
        if (this.taskGroupData[s]) {
            var a = this.taskGroupData[s];
            for (var r = 0; r < a.length; r++) {
                var o = a[r];
                if (o && o.id == e) {
                    o.hadGet.visible = true;
                    o.btnGo.visible = false;
                    o.canGet.visible = false;
                    o._state_ = 2
                }
            }
        }
        if (s == this.taskGIndex) {
            var a = this.taskGroupData[s];
            this.updateTaskUI(a, s)
        }
        this.updateBtnGet()
    };
    e.updateActiveProgress = function(e, t) {
        var i = t == Game.item.ActiveWeekVal ? f.Week: f.Day;
        var n = this.activeData[i];
        if (n && e) {
            n.value += e * 1
        }
        this.updateActState(n)
    };
    e.updateActState = function(e) {
        if (e) {
            var t = e.value * 1,
            i = e.state;
            for (var n = 0; n < e.list.length; n++) {
                var s = e.list[n];
                if (s) {
                    s["s_2"].visible = n < i ? true: false;
                    s["s_1"].visible = n >= i && t >= s.av ? true: false;
                    s["s_0"].visible = n >= i && t < s.av ? true: false;
                    s["fc_n"].visible = !s["s_2"].visible
                }
            }
            this.activeData[e.type] = e;
            if (this.taskGIndex == e.type) {
                this.updateActUI(e)
            }
        }
    };
    e.onOpened = function() {
        t.opened && t.opened()
    };
    e.onClosed = function() {
        Request.GetRedPointReq();
        BaseDialog.prototype.onClosed.call(this);
        l = null;
        t.closed && t.closed()
    };
    e.reset = function() {
        l = null
    };
    var l = null;
    var t = {
        opened: null,
        closed: null,
        show: function(e) {
            WinUtils.showDialog(RES.loadTaskList.task, TaskUI,
            function(e) {
                l = e;
                Request.AchTaskListReq();
                l.popup()
            });
            ActionEventReport.report(ActionEventReport.actionIndex.ID1072, {
                t: e ? 0 : 1
            })
        },
        hide: function() {
            if (l) {
                l.close()
            }
        },
        AchTaskListRep: function(e) {
            if (l) {
                l.updateData(e)
            }
        },
        AchTaskFinishRep: function() {
            if (l) {
                if (l.finishTaskId) {
                    l.taskFinishById(l.finishTaskId)
                }
            }
        },
        AchTaskGetPrizeRep: function(e, t) {
            Waiting.hide();
            if (e && e.length) {
                GetReward.show("", e)
            }
            if (t == 0) {
                Request.AchTaskListReq()
            } else {
                if (l) {
                    l.updateTaskStateById(t);
                    var i = 0,
                    n = 0;
                    for (var s = 0; s < e.length; s++) {
                        var a = e[s];
                        if (a && a.ItemId == Game.item.ActiveVal) {
                            i += a.ItemNum
                        }
                        if (a && a.ItemId == Game.item.ActiveWeekVal) {
                            n += a.ItemNum
                        }
                    }
                    if (i) {
                        l.updateActiveProgress(i, Game.item.ActiveVal)
                    }
                    if (n) {
                        l.updateActiveProgress(n, Game.item.ActiveWeekVal)
                    }
                }
            }
        },
        AchTaskActivePrizeRep: function(e, t, i) {
            Waiting.hide();
            if (l) {
                if (l.activeData && l.activeData[i]) {
                    var n = l.activeData[i];
                    n.state = t;
                    l.activeData[i] = n;
                    l.updateActData(i, t, n.value);
                    l.updateActUI(l.activeData[i], i);
                    if (i == r.Day) {
                        if (t >= n.list.length) {
                            Request.AchTaskListReq()
                        }
                    }
                }
            }
            if (e && e.length) {
                GetReward.show("", e)
            }
        }
    };
    return t
} ();
var Dtdb = function() {
    var i = {
        21 : 104,
        22 : 105,
        23 : 106,
        24 : 107
    };
    var f = {
        104 : "青铜弹头",
        105 : "白银弹头",
        106 : "黄金弹头",
        107 : "白金弹头"
    };
    var e = DtdbUI.prototype;
    e.init = function() {
        this.ruleList.scrollBar.hide = true;
        this.dtList.scrollBar.hide = true;
        this.tipList.scrollBar.hide = true;
        this.noticeList.scrollBar.hide = true;
        var e = {
            btnState: ["resource/dtdb/btn_lan.png", "resource/dtdb/btn_huang.png"],
            iconState: ["resource/dtdb/zi_qingtong_", "resource/dtdb/zi_baiyin_", "resource/dtdb/zi_huangjin_", "resource/dtdb/zi_baijin_"]
        };
        var t = new Tab([this.btn_104, this.btn_105, this.btn_106, this.btn_107], e);
        this.selectedSid = 0;
        var i = [Game.sceneConfig.sceneID.scene_DT_qt, Game.sceneConfig.sceneID.scene_DT_by, Game.sceneConfig.sceneID.scene_DT_hj, Game.sceneConfig.sceneID.scene_DT_bj];
        var n = this;
        t.clickCall = function(e) {
            if (i[e] && n) {
                n.selectedSid = i[e];
                n.updateRuleData(i[e])
            }
        };
        t.updateState(0);
        this.updateUserDT();
        this.geneTipData();
        this.btnGet.on(Laya.Event.MOUSE_OVER, this, this.showDTTip);
        this.btnGet.on(Laya.Event.MOUSE_OUT, this, this.hideDTTip);
        this.btnGet.on(Laya.Event.CLICK, this,
        function() {
            if (this.tipBox.visible) {
                this.hideDTTip()
            } else {
                this.showDTTip();
                ActionEventReport.report(ActionEventReport.actionIndex.ID1101)
            }
        });
        this.ReqDTDataing = false;
        this.btnStart.clickHandler = new Laya.Handler(this,
        function() {
            if (this.selectedSid) {
                var e = Player.getVipLevel();
                if (e * 1 < 2) {
                    var t = GameConfig.ErrorMsg.getMsgById(141);
                    if (t) {
                        MessageBox.show(t);
                        return
                    }
                }
                if (this.ReqDTDataing) {
                    return
                }
                this.ReqDTDataing = true;
                Request.GetDTDBDataReq(this.selectedSid)
            }
        });
        this.on(Laya.Event.CLICK, this,
        function(e) {
            if (!e.target) {
                return
            }
            var t = e.target.name;
            if (t == "t_0") {
                this.titView(0)
            } else if (t == "t_1") {
                this.titView(1)
            }
            if (t != "btnGet") {
                this.hideDTTip()
            }
        })
    };
    e.titView = function(e) {
        this.t_0.skin = "resource/dtdb/tt_jiangli" + (e ? ".png": "_nor.png");
        this.t_1.skin = "resource/dtdb/tt_gonggao" + (e ? "_nor.png": ".png");
        this.t_0.height = e ? 52 : 44;
        this.t_1.height = e ? 44 : 52;
        this.rewardBox.visible = e ? false: true;
        this.noticeList.visible = e ? true: false
    };
    e.hideDTTip = function() {
        this.tipBox.visible = false
    };
    e.showDTTip = function() {
        var e = i[this.selectedSid];
        if (e) {
            var t = this.tipData[e];
            if (t) {
                this.tipTitle.text = f[e];
                this.tipGold.text = "使用后可获得约" + t.gold + "金币";
                this.tipList.array = t.list;
                this.tipBox.visible = true
            }
        }
    };
    e.geneTipData = function() {
        var e = GameConfig.getDTDBTip();
        var t = {};
        for (var i = 0; i < e.length; i++) {
            var n = e[i];
            if (n) {
                var s = n.DescStr;
                var a = s.split("|");
                var r = [];
                for (var o = 0; o < a.length; o++) {
                    var l = a[o];
                    if (Game.onMiniGame && Game.isIOS && l * 1 == 4) {
                        continue
                    }
                    var h = GameConfig.getDTDBDescById(l);
                    r.push({
                        txt: h.Desc
                    })
                }
                t[n.Id] = {
                    gold: n.Gold,
                    list: r
                }
            }
        }
        this.tipData = t
    };
    e.updateUserDT = function() {
        var e = 0,
        t = 0,
        i = 0,
        n = 0;
        if (Package.getDataById(Game.item.QinTongDaoDan)) {
            e = Package.getDataById(Game.item.QinTongDaoDan).num
        }
        if (Package.getDataById(Game.item.BaiYinDaoDan)) {
            t = Package.getDataById(Game.item.BaiYinDaoDan).num
        }
        if (Package.getDataById(Game.item.HuangJinDaoDan)) {
            i = Package.getDataById(Game.item.HuangJinDaoDan).num
        }
        if (Package.getDataById(Game.item.BaiJinDaoDan)) {
            n = Package.getDataById(Game.item.BaiJinDaoDan).num
        }
        this.fc_104.value = "x" + e;
        this.fc_105.value = "x" + t;
        this.fc_106.value = "x" + i;
        this.fc_107.value = "x" + n
    };
    e.getReward = function(e) {
        var t = e.split("|");
        var i = [];
        if (t) {
            for (var n = 0; n < t.length; n++) {
                if (t[n]) {
                    var s = t[n].split(":");
                    if (s && s.length == 3) {
                        i.push({
                            txt: "积分达到",
                            score: s[0],
                            result: f[s[1]] + "x" + s[2],
                            icon: "resource/dtdb/" + s[1] + ".png",
                            num: {
                                value: "x" + s[2]
                            }
                        })
                    }
                }
            }
        }
        return i
    };
    e.getSctData = function(e) {
        if (e) {
            var t = GameConfig.getDTDBRuleById(e);
            if (t) {
                var i = t.SignCost;
                if (typeof i == "string") {
                    var n = i.split(":");
                    t["SignCost"] = n
                }
            }
            return t
        }
        return null
    };
    e.updateRuleData = function(e) {
        if (e) {
            var t = this.getSctData(e);
            if (t && t.SignCost) {
                var i = t.SignCost;
                if (i.length >= 2) {
                    this.selIcon.skin = "resource/dtdb/" + i[0] + ".png";
                    this.fc_0.value = "x" + i[1]
                }
                var n = this.getReward(t.Reward);
                this.ruleList.array = n;
                this.dtList.array = n
            }
        }
    };
    e.geneNoticeData = function(e) {
        var t = [];
        for (var i = 0; i < e.length; i++) {
            var n = e[i];
            if (n) {
                var s = n.nick,
                a = n.itemID,
                r = n.itemNum,
                o = n.sceneId;
                if (s.length > 16) {
                    s = s.substr(0, 16)
                }
                var l = "青铜夺宝";
                if (o == Game.sceneConfig.sceneID.scene_DT_hj) {
                    l = "黄金夺宝"
                } else if (o == Game.sceneConfig.sceneID.scene_DT_by) {
                    l = "白银夺宝"
                } else if (o == Game.sceneConfig.sceneID.scene_DT_bj) {
                    l = "白金夺宝"
                }
                var h = f[a];
                var u = s + "在" + l + "中获得" + h + "x" + r;
                var c = {
                    labNT: {
                        text: u
                    }
                };
                t.push(c)
            }
        }
        this.noticeList.array = t
    };
    e.GetDTDBDataRep = function(e) {
        var i = this;
        this.ReqDTDataing = false;
        var t = e.bullet;
        var n = this.getSctData(this.selectedSid);
        if (n && n.SignCost) {
            var s = n.SignCost;
            var a = s[0],
            r = s[1];
            if (t == 0) {
                var o = Package.getDataById(a);
                if (o) {
                    var l = o.num;
                    if (l >= r) {
                        var h = MessageBox.show("确定要消耗" + r + "个" + f[a] + "夺宝吗?");
                        h.submitCall = function() {
                            var e = Package.getDataById(a);
                            if (e) {
                                var t = e.num;
                                Package.updateNumById(a, t * 1 - r * 1)
                            }
                            if (i) {
                                GameCenter.selectSceneFn(i.selectedSid);
                                i.close();
                                Request.package.getListReq()
                            }
                        }
                    } else {
                        MessageBox.show("您的弹头数量不足!")
                    }
                } else {
                    MessageBox.show("您的弹头数量不足!")
                }
            } else {
                if (i) {
                    GameCenter.selectSceneFn(i.selectedSid);
                    i.close()
                }
            }
        }
    };
    e.onOpened = function() {
        Request.GetDTDBNoticeReq();
        n.opened && n.opened()
    };
    e.onClosed = function() {
        BaseDialog.prototype.onClosed.call(this);
        t = null;
        n.closed && n.closed()
    };
    e.reset = function() {
        if (t) {
            t = null
        }
    };
    var t = null;
    var n = {
        opened: null,
        closed: null,
        show: function() {
            Waiting.show();
            WinUtils.showDialog(RES.loadTaskList.Dtdb, DtdbUI,
            function(e) {
                t = e;
                t.popup();
                Waiting.hide()
            });
            ActionEventReport.report(ActionEventReport.actionIndex.ID1094, {
                t: 0
            })
        },
        NoticeReq: function(e) {
            if (t && e && e.noctice) {
                t.geneNoticeData(e.noctice)
            }
        },
        GetDTDBDataRep: function(e) {
            if (t) {
                t.GetDTDBDataRep(e)
            }
        }
    };
    return n
} ();
var HitEgg = function() {
    var e = HitEggUI.prototype;
    e.init = function() {
        this.leftT = 0;
        this.eggList.scrollBar.hide = true;
        this.mulList.scrollBar.hide = true;
        this.eggList.scrollBar.destroy();
        this.eggList.selectHandler = new Laya.Handler(this, this.eggSelect);
        this.eggList.renderHandler = new Laya.Handler(this, this.eggRenderHdr);
        this.mulList.renderHandler = new Laya.Handler(this, this.buffRHR);
        this.buffMulList = [];
        this.buffType = -1;
        this.buffMul = -1;
        this.buffResult = [];
        this.eggSelectIndex = [];
        this.selectedType = [];
        this.orgEggData = [];
        this.lighterArr = [];
        this.hitEgging = false;
        this.timer.frameLoop(1, this, this.update);
        this.setBuff();
        this.setCost();
        this.initEggList();
        this.setLeftTimes(HitEggUI.leftTime);
        this.lab_score.text = a;
        this.lab_blt.text = s;
        this.btnSmt.clickHandler = new Laya.Handler(this,
        function() {
            if (this.hitEgging) {
                MsgToast.show("本局还未结束!")
            } else {
                this.close()
            }
        });
        this.btnPlay.clickHandler = new Laya.Handler(this, this.resetEggData)
    };
    e.setCost = function() {
        var e = GameConfig.getCfgDTDB();
        if (e && e[0]) {
            var t = e[0]["BuffPayCost"];
            if (t) {
                var i = t.split(":");
                if (i && i.length >= 2) {
                    this.costIcon.skin = "resource/icon/" + i[0] + ".png";
                    this.costNum.text = "x" + i[1]
                }
            }
        }
    };
    e.update = function() {
        for (var e = 0; e < this.lighterArr.length; e++) {
            var t = this.lighterArr[e];
            if (t && t.visible) {
                this.lighter(t)
            }
        }
    };
    e.setBuffResult = function(e) {
        this.selectedType = [];
        if (e <= this.buffMulList.length) {
            var t = [1, 2, 3, 4, 5];
            this.buffType = e;
            this.buffMul = this.buffMulList[e];
            if (e > 0) {
                t.removeByValue(e);
                var i = Utils.getRandomNum(t, 2);
                i = i.concat([e, e, e]);
                this.buffResult = Utils.getRandomNum(i, 5)
            } else if (e == 0) {
                var n = Utils.getRandomNum([1, 2, 3, 4, 5], 5);
                this.buffResult = n
            }
        }
    };
    e.updateEggData = function(e) {
        if (!e) {
            return
        }
        if (this.buffMul >= 0) {
            var t = this.buffResult.pop();
            this.selectedType.push(t);
            if (t) {
                e.icon.skin = "resource/dtdb/egg/td_icon" + t + ".png";
                e.icon.visible = true;
                e.egg.visible = false
            }
            this.showBuffG(t);
            this.eggList.refresh();
            this.waiting.visible = false
        } else {
            Laya.timer.frameOnce(10, this,
            function() {
                this.updateEggData(e)
            })
        }
    };
    e.resetEggData = function() {
        if (this.hitEgging) {
            MsgToast.show("游戏进行中...");
            return
        }
        if (this.eggSelectIndex.length < 1) {
            MsgToast.show("请开始砸金蛋");
            return
        }
        var e = GameConfig.getCfgDTDB();
        if (e && e[0]) {
            var t = e[0]["BuffPayCost"];
            if (t) {
                var i = t.split(":");
                if (i && i.length >= 2) {
                    this.costIcon.skin = "resource/icon/" + i[0] + ".png";
                    this.costNum.text = "x" + i[1]
                }
            }
        }
        if (HitEggUI.leftTime > 0) {
            var e = GameConfig.getCfgDTDB();
            if (e && e[0]) {
                var t = e[0]["BuffPayCost"];
                if (t) {
                    var i = t.split(":");
                    if (i && i.length >= 2) {
                        var n = Package.getDataById(i[0]);
                        if (i[0] * 1 == 1) {
                            if (!n) {
                                n = {}
                            }
                            n.num = Player.getGold()
                        }
                        if (n && n.num >= i[1]) {
                            for (var s = 0; s < this.eggSelectIndex.length; s++) {
                                var a = this.eggSelectIndex[s];
                                var n = this.orgEggData[a];
                                if (n) {
                                    n.egg.visible = true;
                                    n.icon.visible = false;
                                    n.icon.skin = "resource/dtdb/egg/td_icon1.png"
                                }
                            }
                            this.eggList.array = this.orgEggData;
                            this.buffMul = -1;
                            this.resetBuff();
                            this.eggList.selectedIndex = -1;
                            this.eggSelectIndex = [];
                            this.lighterArr = [];
                            this.selectedType = []
                        } else {
                            MsgToast.show("道具数量不足!")
                        }
                    }
                }
            }
        } else {
            MsgToast.show("次数已达到最大上限")
        }
    };
    e.lighter = function(e) {
        if (e && e.visible) {
            e.rotation += 2
        }
    };
    e.eggRenderHdr = function(e, t) {
        var i = e.dataSource;
        var n = e.getChildByName("guang");
        n.visible = i.icon.visible;
        if (n.visible) {
            if (this.lighterArr.indexOf(n) < 0) {
                this.lighterArr.push(n)
            }
        }
    };
    e.isOver = function() {
        var e = false;
        if (this.buffType == 0) {
            if (this.eggSelectIndex.length == 5) {
                e = true
            }
        } else {
            if (this.selectedType.length >= 3) {
                for (var t = 0; t < this.selectedType.length; t++) {
                    var i = this.selectedType[t];
                    var n = [i];
                    for (var s = 0; s < this.selectedType.length; s++) {
                        var a = this.selectedType[s];
                        if (i == a && t != s) {
                            n.push(a)
                        }
                    }
                    if (n.length == 3) {
                        n = null;
                        e = true;
                        break
                    }
                }
            }
        }
        return e
    };
    e.showResultTip = function() {
        this.resultLab.text = this.buffType == 0 ? "很遗憾,下次再努力!": "恭喜您,集齐了3个加成元素";
        this.resultTip.y = 272;
        this.resultTip.visible = true;
        this.timer.once(2e3, this,
        function() {
            Laya.Tween.to(this.resultTip, {
                y: 90,
                alpha: 0
            },
            1e3, null, Laya.Handler.create(this,
            function() {
                this.resultTip.visible = false;
                this.resultTip.alpha = 1
            }))
        });
        Request.GetUserMoneyReq()
    };
    e.eggSelect = function() {
        var e = this.eggList.selectedIndex;
        var t = this.eggList.selectedItem;
        if (this.isOver() || this.eggSelectIndex.indexOf(e) >= 0) {
            return
        }
        if (this.buffMul < 0) {
            this.lighterArr = [];
            this.eggSelectIndex = [];
            this.hitEgging = true;
            Request.GetDTDBBuffProReq();
            if (this.leftT >= 1) {
                this.setLeftTimes(this.leftT - 1)
            }
        }
        this.eggSelectIndex.push(e);
        this.waiting.visible = true;
        var i = this.eggList.selection;
        var n = Utils.localToGlobal(i);
        n = this.globalToLocal(n, true);
        this.hammer.visible = true;
        this.hammer.play(0, false);
        if (n.x && n.y) {
            this.hammer.pos(n.x + 100, n.y)
        }
        this.hammer.once(Laya.Event.COMPLETE, this,
        function() {
            this.hammer.visible = false;
            this.updateEggData(t);
            if (this.isOver()) {
                this.hitEgging = false;
                Request.SendDTDBBuffOver();
                this.showResultTip()
            }
        })
    };
    e.initEggList = function() {
        var e = [];
        this.orgEggData = [];
        for (var t = 0; t < 10; t++) {
            var i = {
                index: t,
                guang: {
                    visible: false
                },
                egg: {
                    visible: true
                },
                icon: {
                    visible: false
                }
            };
            e.push(i)
        }
        this.orgEggData = e;
        this.eggList.array = e
    };
    e.setLeftTimes = function(e) {
        if (e >= 0) {
            this.leftT = e;
            this.lab_t.text = "剩余砸蛋次数:" + e
        }
        HitEggUI.leftTime = e
    };
    e.setBuff = function() {
        var e = GameConfig.getCfgDTDB();
        this.buffMulList = [0];
        var t = [];
        if (e && e[0]) {
            var i = e[0];
            for (var n = 1; n < 6; n++) {
                var s = "resource/dtdb/egg/td_icon" + n + "s.png";
                var a = i["Buff" + n];
                if (a) {
                    t.push({
                        type: n,
                        g_0: {
                            visible: false
                        },
                        g_1: {
                            visible: false
                        },
                        g_2: {
                            visible: false
                        },
                        icon_0: s,
                        icon_1: s,
                        icon_2: s,
                        num: "额外加成" + a / 100 + "%",
                        aniG: {
                            visible: false
                        }
                    });
                    this.buffMulList.push(a / 1e4)
                }
            }
        }
        this.mulList.array = t
    };
    e.showBuffG = function(e) {
        var t = this.mulList.array;
        if (e <= t.length && e > 0) {
            var i = t[e - 1];
            if (i) {
                if (i.g_0 && !i.g_0.visible) {
                    i.g_0.visible = true
                } else if (i.g_1 && !i.g_1.visible) {
                    i.g_1.visible = true
                } else if (i.g_2 && !i.g_2.visible) {
                    i.g_2.visible = true
                }
            }
        }
        this.mulList.refresh()
    };
    e.buffRHR = function(e, t) {
        var i = e.getChildByName("g_0"),
        n = e.getChildByName("g_1"),
        s = e.getChildByName("g_2"),
        a = e.getChildByName("aniG");
        if (i.visible && this.lighterArr.indexOf(i) < 0) {
            this.lighterArr.push(i)
        }
        if (n.visible && this.lighterArr.indexOf(n) < 0) {
            this.lighterArr.push(n)
        }
        if (s.visible && this.lighterArr.indexOf(s) < 0) {
            this.lighterArr.push(s);
            a.visible = true;
            a.play(0, true)
        } else {
            a.visible = false;
            a.stop()
        }
        if (!a.visible) {
            a.stop()
        }
    };
    e.resetBuff = function() {
        var e = this.mulList.array;
        for (var t = 0; t < e.length; t++) {
            var i = e[t];
            if (i && i.g_0 && i.g_1 && i.g_2) {
                i.g_0.visible = false;
                i.g_1.visible = false;
                i.g_2.visible = false;
                i.aniG.visible = false
            }
        }
        this.mulList.refresh()
    };
    e.onOpened = function() {
        t.opened && t.opened()
    };
    e.onClosed = function() {
        this.timer.clearAll(this);
        HitEggUI.leftTime = 0;
        BaseDialog.prototype.onClosed.call(this);
        n = null;
        t.closed && t.closed()
    };
    e.reset = function() {};
    var n = null,
    s = 0,
    a = 0;
    var t = {
        opened: null,
        closed: null,
        show: function() {
            Waiting.show();
            WinUtils.showDialog(RES.loadTaskList.HitEgg, HitEggUI,
            function(e) {
                n = e;
                Waiting.hide();
                n.popup()
            })
        },
        hide: function() {
            if (n) {
                n.close()
            }
        },
        setBuffResult: function(e) {
            if (n && e >= 0) {
                n.setBuffResult(e)
            }
        },
        setLeftTimes: function(e) {
            HitEggUI.leftTime = e;
            if (n) n.setLeftTimes(e)
        },
        setBltAndScore: function(e, t) {
            s = e;
            a = t;
            if (n) {
                n.lab_score.text = t;
                n.lab_blt.text = e
            }
            var i = FishScene.getCurrentCannon();
            if (i) {
                Player.setMatchScore(t);
                i.updateMatchScore(t);
                i.updateMatchBltNum(e)
            }
        }
    };
    return t
} ();
var DTResult = function() {
    var e = DTResultUI.prototype;
    e.initData = function(e, t) {
        this.box_1.visible = e ? true: false;
        this.box_0.visible = !this.box_1.visible;
        this.btn_1.clickHandler = new Laya.Handler(this,
        function() {
            this.close();
            t && t()
        })
    };
    e.onClosed = function() {
        BaseDialog.prototype.onClosed.call(this);
        n = null
    };
    var n = null;
    var t = {
        show: function(t, i) {
            WinUtils.showDialog(RES.loadTaskList.Dtdb, DTResultUI,
            function(e) {
                n = e;
                n.initData(t, i);
                n.popup()
            })
        }
    };
    return t
} ();
var NewPlayerTaskItem = function(e) {
    function t() {
        t.super(this);
        this.init()
    }
    Laya.class(t, "newPlayer.NewPlayerTaskItem", e, "");
    var i = t.prototype;
    i.init = function() {
        this.btnGet.on(Laya.Event.CLICK, this, this.onClick)
    };
    i.onClick = function(e) {
        switch (e.target) {
        case this.btnGet:
            if (this._progress.Status == 1) {
                Request.ReportNewPlayerTaskGetRewardReq(this._progress.TaskId);
                ActionReport.addLog(this.maidian)
            }
            break
        }
    };
    i.initData = function(e) {
        this._progress = e._progress;
        var t = e.Condition.split(":");
        var i = "resource/newPlayerTask/img_yu.png";
        this.taskIcon.scale(1, 1);
        if (e.Type == 1) {
            i = GameConfig.Item.getItemInfoById(t[0]).skin;
            this.taskIcon.scale(.7, .7)
        } else if (e.Type == 5) {
            i = "resource/sceneEmjoys/emjoy_" + 1 + ".png"
        } else {
            if (t[0] > 0) {
                if (t[0] == 490) {
                    this.taskIcon.scale(.4, .4)
                }
                i = "resource/pokedex/" + t[0] + ".png"
            } else {
                i = "resource/newPlayerTask/img_yu.png"
            }
        }
        var n = e.Prize.split(":");
        var s = "(话费" + Utils.getHuaFei(n[1]) + "元)";
        this.infoDes.text = s;
        this.infoDes.visible = e.TypeLabel == 1;
        this.num.text = t[1] + "次";
        this.taskName.text = e.Desc;
        var a = (16 - e.Desc.charLength()) / 4 * 20;
        this.taskName.x = 323 - a;
        this.num.x = 323 - a;
        this.progressLabel.text = e._progress.Num + "/" + t[1];
        var r = GameConfig.Item.getItemInfoById(n[0]);
        this.icon.skin = r.skin;
        this.iconNum.value = "x" + n[1];
        this.btnGet.gray = e._progress.Status == 0;
        this.btnGet.visible = e._progress.Status != 2;
        this.redayGet.visible = e._progress.Status == 2;
        Resource.load(i,
        function() {
            this.taskIcon.skin = i
        }.bind(this));
        this.progress.value = e._progress.Num / t[1];
        this.maidian = ActionReport.actionIndex.NEW_PLAYER_TASK_GET1;
        switch (e.TypeLabel) {
        case 1:
            this.maidian = ActionReport.actionIndex.NEW_PLAYER_TASK_GET1;
            break;
        case 2:
            this.maidian = ActionReport.actionIndex.NEW_PLAYER_TASK_GET2;
            break;
        case 3:
            this.maidian = ActionReport.actionIndex.NEW_PLAYER_TASK_GET3;
            break
        }
    };
    return t
} (newPlayerTaskItemUI);
var NewPlayerTaskTip = function() {
    var t = null;
    var i = 0;
    var e = newPlayerTaskTipUI.prototype;
    e.show = function(e) {
        if (this.displayedInStage) {
            this.initViewData(e);
            return
        }
        this.PrizeId = 0;
        this.PrizeNum = 0;
        this.taskMaxNum = 0;
        this.y = -121;
        this.x = 568;
        this.initViewData(e);
        this.once(Laya.Event.DISPLAY, this,
        function() {
            Laya.Tween.to(this, {
                y: 0
            },
            300)
        });
        this.zOrder = 100;
        if (t) {
            t.visible = true;
            Sound.playSound(Sound.RES.pirate_go.url, Sound.RES.pirate_go.vol);
            t.addChild(this)
        }
        this.on(Laya.Event.CLICK, this, this.clickView)
    };
    e.clickView = function() {
        NewPlayTaskD.show();
        ActionReport.addLog(ActionReport.actionIndex.NEW_PLAYER_TASK_DIGLOG)
    };
    e.unDisplay = function() {
        n = undefined
    };
    e.initViewData = function(e) {
        this.completeState = false;
        this.imgTaskComplete.visible = false;
        var t = e.Datas,
        i = 0;
        if (e.TaskId == 0) {
            var n = Object.keys(GameConfig.getNewNewTask());
            n.sort(function(e, t) {
                return t - e
            });
            e.TaskId = n[0];
            i = GameConfig.getNewNewTaskById(e.TaskId).Condition.split(":")[1]
        } else {
            if (t && t.length > 0) {
                for (var s = 0; s < t.length; s++) {
                    if (t[s].TaskId == e.TaskId) {
                        i = t[s].Num;
                        break
                    }
                }
            }
        }
        var a = GameConfig.getNewNewTaskById(e.TaskId);
        if (a) {
            var r = a.Prize.split(":");
            if (r.length >= 1) {
                this.PrizeId = r[0];
                var o = GameConfig.Item.getItemInfoById(r[0]);
                this.reward0.visible = this.PrizeId == Game.item.Juan;
                this.reward1.visible = !this.reward0.visible;
                var l = this.PrizeId == Game.item.Juan ? this.reward0: this.reward1;
                this.PrizeNum = r[1];
                var h = this.PrizeId == Game.item.Juan ? Utils.getHuaFei(this.PrizeNum) : "x" + this.PrizeNum;
                l.getChildByName("num").text = h;
                if (l.getChildByName("icon")) {
                    console.log(o.skin);
                    l.getChildByName("icon").skin = o.skin
                }
            }
            this.labelDesc.text = a.Desc;
            var u = a.Condition.split(":");
            if (u.length >= 1) {
                this.fc_task.text = "(" + i + "/" + u[1] + ")";
                this.taskMaxNum = u[1] * 1
            }
            var c = a.Desc.charLength() / 2 * 18;
            var f = this.fc_task.text.charLength() / 2 * 18;
            var d = (180 - (c + f)) / 2;
            this.labelDesc.x = c + d + 3;
            this.fc_task.x = c + d + 3
        }
    };
    e.updateViewData = function(e) {
        NewPlayTaskD.updateList(e);
        var t = GameConfig.getNewNewTaskById(i);
        if (t && t._progress) {
            this.fc_task.text = "(" + t._progress.Num + "/" + this.taskMaxNum + ")"
        }
    };
    e.complete = function() {
        this.imgTaskComplete.scale(3, 3);
        this.imgTaskComplete.visible = true;
        var e = Laya.TimeLine.to(this.imgTaskComplete, {
            scaleX: 1,
            scaleY: 1
        },
        200);
        e.play(0, false);
        GetReward.show("任务奖励", [{
            ItemId: this.PrizeId,
            ItemNum: this.PrizeNum
        }])
    };
    e.hide = function() {
        Laya.Tween.to(this, {
            y: -121
        },
        300, null, Laya.Handler.create(this,
        function() {
            if (this.displayedInStage) {
                this.removeSelf()
            }
        }))
    };
    e.reset = function() {
        n = undefined
    };
    e.moveUp = function() {};
    e.moveDown = function() {};
    var n = undefined;
    var s = {
        init: function(e) {
            t = e
        },
        show: function(e) {
            if (!n) {
                Resource.load(RES.newPlayTask,
                function() {
                    n = new newPlayerTaskTipUI;
                    n.show(e);
                    NewPlayTaskD.initList(e.Datas, e.CanGetAll)
                })
            } else {
                n.show(e);
                NewPlayTaskD.initList(e.Datas, e.CanGetAll)
            }
            if (e && e.TaskId != undefined) {
                i = e.TaskId
            }
        },
        updateNum: function(e) {
            if (n && e) {
                if (e.Datas && e.Datas.length > 0) {
                    if (i != e.TaskId) {
                        n.show(e)
                    }
                    i = e.TaskId;
                    n.updateViewData(e.Datas)
                }
            }
        },
        taskResult: function(e) {},
        hide: function() {
            if (n) {
                n.hide()
            }
        },
        reShow: function() {
            if (n && t) {
                t.addChild(n)
            }
        },
        isShow: function() {
            if (n) {
                return n.displayedInStage
            }
            return false
        },
        getTaskId: function() {
            return i
        },
        showRedPoint: function(e) {
            if (n) {
                n.redPoint.visible = e;
                if (e) {
                    if (!n.tipPop.visible) n.ani1.play()
                } else {
                    n.ani1.stop();
                    n.tipPop.y = 137
                }
                n.tipPop.visible = e
            }
        }
    };
    return s
} ();
var NewPlayTaskD = function() {
    var o = null;
    var u = undefined;
    var c = false;
    function e() {
        e.super(this);
        this.allCompleteBtn.on(Laya.Event.CLICK, this, this.clickAllComplete);
        this.allCompleteBtn.visible = !(Game.isIOS && (Game.onMiniGame || Game.onBaiDuGame));
        this.buyText.visible = !(Game.isIOS && (Game.onMiniGame || Game.onBaiDuGame))
    }
    Laya.class(e, "NewPlayTaskD", newPlayerTaskDUI, "");
    var t = e.prototype;
    t.clickAllComplete = function() {
        if (this.allCompleteBtn.gray) return;
        if (!c) {
            FirstRecharge.show();
            ActionReport.addLog(ActionReport.actionIndex.NEW_PLAYER_TASK_ALL_COM)
        } else {
            Request.ReportNewPlayerTaskGetRewardReq(0);
            ActionReport.addLog(ActionReport.actionIndex.NEW_PLAYER_TASK_ALL_GET)
        }
    };
    t.renderList = function(e, t) {
        e.initData(u[this.selectedLabel][t])
    };
    t.init = function() {
        this.taskList.vScrollBarSkin = "";
        this.taskList.renderHandler = new Laya.Handler(this, this.renderList);
        this.selectedLabel = 1;
        this.menus = [];
        for (var e = 0; e < 3; e++) {
            var t = this.menuBox.getChildAt(e);
            this.menus.push(t);
            t.getChildByName("selected").visible = false;
            t.on(Laya.Event.CLICK, this, this.changeList, [e + 1])
        }
    };
    t.onClosed = function() {
        BaseDialog.prototype.onClosed.call(this);
        o = null
    };
    t.changeList = function(e) {
        if (this.selectedLabel != e) this.taskList.scrollTo(0);
        this.selectedLabel = e;
        var t = u[e + ""];
        t.sort(function(e, t) {
            var i = e._progress.Status == 0 ? 1 : e._progress.Status == 1 ? 0 : 2;
            var n = t._progress.Status == 0 ? 1 : t._progress.Status == 1 ? 0 : 2;
            if (i == n) {
                return e._progress.TaskId - t._progress.TaskId
            }
            return i - n
        });
        this.taskList.array = t;
        for (var i = 0; i < this.menus.length; i++) {
            this.menus[i].getChildByName("selected").visible = i + 1 == e
        }
    };
    t.changeRedPoint = function(e) {
        for (var t = 0; t < this.menus.length; t++) {
            this.menus[t].getChildByName("redPoint").visible = e[t + 1]
        }
        var i = true;
        for (var t = 1; t < e.length; t++) {
            if (e[t]) {
                i = false;
                break
            }
        }
        NewPlayerTaskTip.showRedPoint(!i)
    };
    t.showList = function(e) {
        this.unComplete.visible = c == 0;
        this.complete.visible = c == 1;
        var t = -1;
        var i = [false, false, false, false];
        var n = [false, true, true, true];
        for (var s = 1; s < 4; s++) {
            var a = u[s + ""];
            var r = a.length;
            for (var o = 0; o < r; o++) {
                var l = a[o];
                if (l._progress.Status != 2) {
                    n[s] = false
                }
                if (l._progress.Status == 1) {
                    if (t == -1) {
                        t = s;
                        if (e) {
                            this.changeList(t)
                        } else {
                            this.changeList(this.selectedLabel)
                        }
                    }
                    i[s] = true
                }
            }
        }
        if (t == -1) {
            for (var o = 1; o < n.length; o++) {
                var h = n[o];
                if (!h) {
                    t = o;
                    break
                }
            }
            if (t == -1) t = 1;
            if (e) {
                this.changeList(t)
            } else {
                this.changeList(this.selectedLabel)
            }
        }
        this.changeRedPoint(i)
    };
    e.show = function() {
        WinUtils.showDialog(RES.newPlayTaskDialog.concat(["res/atlas/resource/pokedex.atlas"]), e,
        function(e) {
            o = e;
            e.popup();
            o.showList(true)
        })
    };
    e.initList = function(e, t) {
        c = t;
        u = {};
        var i = GameConfig.getNewNewTask();
        var n = Object.keys(i);
        for (var s = 0; s < e.length; s++) {
            var a = e[s];
            if (a.Status == 1) {
                NewPlayerTaskTip.showRedPoint(true)
            }
            i[a.TaskId]["_progress"] = a
        }
        for (var s = 0; s < n.length; s++) {
            var r = i[n[s]];
            if (!u[r.TypeLabel]) {
                u[r.TypeLabel] = []
            }
            u[r.TypeLabel].push(r)
        }
        if (o) {
            o.showList(false)
        }
    };
    e.changeListStatus = function(e) {
        var t = true;
        if (e > 0) {
            GameConfig.getNewNewTask()[e]._progress.Status = 2;
            var i = GameConfig.getNewNewTask();
            var n = Object.keys(i);
            for (var s = 0; s < n.length; s++) {
                var a = n[s];
                if (i[a]._progress.Status != 2) {
                    t = false;
                    break
                }
            }
        } else {
            var i = GameConfig.getNewNewTask();
            var n = Object.keys(i);
            for (var s = 0; s < n.length; s++) {
                var a = n[s];
                i[a]._progress.Status = 2
            }
        }
        if (t) {
            NewPlayerTaskTip.hide();
            if (o) {
                o.allCompleteBtn.gray = true
            }
        }
        if (o) {
            o.showList(false)
        }
    };
    e.updateList = function(e) {
        for (var t = 0; t < e.length; t++) {
            var i = e[t];
            if (i.Status == 1) {
                NewPlayerTaskTip.showRedPoint(true)
            }
            GameConfig.getNewNewTask()[i.TaskId]._progress = i
        }
        if (o) {
            o.showList(false)
        }
    };
    return e
} ();
var RoomBean = function() {
    var t = 1;
    var i = 600;
    return {
        setMaxTime: function(e) {
            t = e
        },
        getMaxTime: function() {
            return t
        },
        setTScore: function(e) {
            i = e
        },
        getTScore: function() {
            return i
        }
    }
} ();
var dCreateRoom = function() {
    var i = null;
    var n = 106;
    var s = 2;
    var a = 1;
    var r = 600;
    var e = Laya.Handler;
    var o = null;
    function t() {
        t.super(this)
    }
    Laya.class(t, "dCreateRoomFn", yysCreateRoomUI);
    var l = t.prototype;
    l.init = function() {
        this.on(Laya.Event.CLICK, this,
        function(e) {
            if (!e.target) {
                return
            }
            var t = e.target.name;
            if (t == "closeBtn") {
                i.close()
            } else if (t == "createRoom") {
                if (this.check()) {
                    o = this.tp_1.text + "|" + this.tp_2.text;
                    if (s == 3) {
                        o = this.tp_1.text + "|" + this.tp_2.text + "|" + this.tp_3.text
                    } else if (s == 4) {
                        o = this.tp_1.text + "|" + this.tp_2.text + "|" + this.tp_3.text + "|" + this.tp_4.text
                    }
                    Request.YouYiSaiCreateRoomReq(n, s, a, r, o)
                }
            } else if (t == "goldBtn") {
                n = 106;
                this.goldBtn.skin = "resource/youYiSai/bar_bisaileixing_1.png";
                this.whiteGoldBtn.skin = "resource/youYiSai/bar_bisaileixing_0.png";
                this.goldName.skin = "resource/youYiSai/zi_huangjinsai_1.png";
                this.whiteGoldName.skin = "resource/youYiSai/zi_baijinsai_0.png";
                this.goldSlect.visible = true;
                this.whiteGoldSlect.visible = false;
                this.prizeIcon_1.skin = "resource/youYiSai/106.png";
                this.prizeIcon_2.skin = "resource/youYiSai/106.png";
                this.prizeIcon_3.skin = "resource/youYiSai/106.png";
                this.prizeIcon_4.skin = "resource/youYiSai/106.png"
            } else if (t == "whiteGoldBtn") {
                n = 107;
                this.goldBtn.skin = "resource/youYiSai/bar_bisaileixing_0.png";
                this.whiteGoldBtn.skin = "resource/youYiSai/bar_bisaileixing_1.png";
                this.goldName.skin = "resource/youYiSai/zi_huangjinsai_0.png";
                this.whiteGoldName.skin = "resource/youYiSai/zi_baijinsai_1.png";
                this.goldSlect.visible = false;
                this.whiteGoldSlect.visible = true;
                this.prizeIcon_1.skin = "resource/youYiSai/107.png";
                this.prizeIcon_2.skin = "resource/youYiSai/107.png";
                this.prizeIcon_3.skin = "resource/youYiSai/107.png";
                this.prizeIcon_4.skin = "resource/youYiSai/107.png"
            }
        });
        this.on(Laya.Event.UNDISPLAY, this,
        function() {
            i.hide()
        });
        this.slectNumRG.selectHandler = new e(this, h);
        this.slectTimeRG.selectHandler = new e(this, u);
        this.slectScoreRG.selectHandler = new e(this, c)
    };
    l.check = function() {
        if (s == 2) {
            if (this.tp_1.text.length > 0 && this.tp_2.text.length > 0) {
                if (this.tp_1.text > 0 && this.tp_2.text > 0) {
                    return true
                } else {
                    MsgToast.show("输入奖励均需大于0！");
                    return false
                }
            } else {
                MsgToast.show("请输入奖励！");
                return false
            }
        }
        if (s == 3) {
            if (this.tp_1.text.length > 0 && this.tp_2.text.length > 0 && this.tp_3.text.length > 0) {
                if (this.tp_1.text > 0 && this.tp_2.text > 0 && this.tp_3.text > 0) {
                    return true
                } else {
                    MsgToast.show("输入奖励均需大于0！");
                    return false
                }
            } else {
                MsgToast.show("请输入奖励！");
                return false
            }
        }
        if (s == 4) {
            if (this.tp_1.text.length > 0 && this.tp_2.text.length > 0 && this.tp_3.text.length > 0 && this.tp_4.text.length > 0) {
                if (this.tp_1.text > 0 && this.tp_2.text > 0 && this.tp_3.text > 0 && this.tp_4.text > 0) {
                    return true
                } else {
                    MsgToast.show("输入奖励均需大于0！");
                    return false
                }
            } else {
                MsgToast.show("请输入奖励！");
                return false
            }
        }
    };
    function h(e) {
        if (e == 0) {
            s = 2;
            this.num_3_box.visible = false;
            this.num_4_box.visible = false
        } else if (e == 1) {
            s = 3;
            this.num_3_box.visible = true;
            this.num_4_box.visible = false
        } else if (e == 2) {
            s = 4;
            this.num_3_box.visible = true;
            this.num_4_box.visible = true
        }
    }
    function u(e) {
        if (e == 0) {
            a = 1
        } else if (e == 1) {
            a = 2
        } else if (e == 2) {
            a = 3
        }
    }
    function c(e) {
        if (e == 0) {
            r = 600
        } else if (e == 1) {
            r = 1200
        } else if (e == 2) {
            r = 1800
        }
    }
    l.hide = function() {
        n = 106;
        s = 2;
        a = 1;
        r = 600;
        if (i) {
            i.destroy();
            i = null
        }
    };
    var f = {
        show: function() {
            if (!i) {
                i = new t;
                i.init()
            }
            i.popup()
        },
        toCreateReq: function() {
            Request.YouYiSaiCreateRoomReq(n, s, a, r, o)
        },
        hide: function() {
            if (i && i.visible == true) {
                i.close()
            }
        }
    };
    return f
} ();
var dGameOver = function() {
    var n = null;
    var e = yysGameOverUI.prototype;
    e.init = function(e) {
        this.go_rankList.scrollBar.hide = true;
        this.go_rankList.scrollBar.elasticBackTime = 200;
        this.go_rankList.scrollBar.elasticDistance = 50;
        var t = [];
        for (var i = 0; i < e.info.length; i++) {
            t.push({
                userId: "编号:" + e.info[i].UserID,
                userhead: {
                    skin: e.info[i].AvatarUrl ? e.info[i].AvatarUrl: "resource/head/" + e.info[i].AvatarID + ".png"
                },
                vipLevel: {
                    skin: "resource/youYiSai/vip" + e.info[i].VipLevel + ".png"
                },
                userName: e.info[i].Nick,
                rank_img: {
                    skin: i == 3 ? "": "resource/youYiSai/rank_" + (i + 1) + ".png"
                },
                danTou_img: {
                    skin: e.info[i].RewardItemId == 106 ? "resource/youYiSai/106.png": "resource/youYiSai/107.png"
                },
                danTou_num: {
                    value: e.info[i].RewardItemNum
                },
                userScore: {
                    text: e.info[i].Score
                }
            })
        }
        this.go_rankList.array = t;
        this.ok_btn.on(Laya.Event.CLICK, this,
        function() {
            FishScene.LeaveGameSvrReq();
            n.close();
            yysFish.hide()
        });
        this.on(Laya.Event.UNDISPLAY, this,
        function() {
            this.reset()
        });
        this.on(Laya.Event.CLOSE, this,
        function() {});
        Laya.timer.once(1e4, this,
        function() {
            FishScene.LeaveGameSvrReq();
            n.close();
            yysFish.hide()
        })
    };
    e.onClosed = function() {
        BaseDialog.prototype.onClosed.call(this);
        Request.package.getListReq()
    };
    e.reset = function() {
        if (n) {
            Laya.timer.once(1e3, this,
            function() {
                n.destroy();
                n = null
            })
        }
    };
    e.show = function() {};
    var t = {
        show: function(e) {
            if (!n) {
                n = new yysGameOverUI;
                n.init(e)
            }
            FishScene.stopAutoFire();
            yysFish.stopCDown(e.info[0].Score);
            yysFish.stopAddScore(e);
            n.popup()
        },
        hide: function() {
            if (n) {
                n.close()
            }
        }
    };
    return t
} ();
var dGameRule = function() {
    var e = null;
    function t() {
        t.super(this)
    }
    Laya.class(t, "dGameRuleFn", yysGameRuleUI);
    var i = t.prototype;
    i.init = function() {
        this.closeBtn.on(Laya.Event.CLICK, this,
        function() {
            if (e) {
                e.close()
            }
        })
    };
    i.reset = function() {};
    i.show = function() {};
    var n = {
        show: function() {
            if (!e) {
                e = new t;
                e.init()
            }
            e.popup()
        },
        hide: function() {}
    };
    return n
} ();
var dJoinTip = function() {
    var e = null;
    function t() {
        t.super(this)
    }
    Laya.class(t, "dJoinTipFn", yysCreateRoomUI);
    var i = t.prototype;
    i.init = function() {
        this.on(Laya.Event.CLICK, this,
        function(e) {
            if (!e.target) {
                return
            }
            var t = e.target.name;
            if (t == "checkVipBtn") {} else if (t == "startGame") {}
        })
    };
    i.reset = function() {};
    i.show = function() {};
    var n = {
        show: function() {
            if (!e) {
                e = new t;
                e.init()
            }
            e.popup()
        },
        hide: function() {}
    };
    return n
} ();
var dRoomInfo = function() {
    var i = null;
    var n = null;
    function t() {
        t.super(this)
    }
    Laya.class(t, "dRoomInfoFn", yysRoomInfoUI);
    var e = t.prototype;
    e.init = function(e) {
        this.on(Laya.Event.CLICK, this,
        function(e) {
            if (!e.target) {
                return
            }
            var t = e.target.name;
            if (t == "cancleBtn") {
                i.close()
            } else if (t == "joinGameBtn") {
                Request.YouYiSaiEnterRoomReq(n)
            }
        })
    };
    e.onClosed = function() {
        BaseDialog.prototype.onClosed.call(this);
        yysRoom.resetNum();
        i = null
    };
    e.reset = function() {};
    e.initData = function(e) {
        n = e.RoomID;
        this.roomNum.text = "房间号: " + e.RoomID;
        this.num_label.text = e.PlayerNum + "人";
        this.time_label.text = e.PlayMinute + "分钟";
        this.score_label.text = e.TargetScore;
        this.prizeIcon_1.skin = "resource/youYiSai/10" + (e.RewardItemID == 106 ? 6 : 7) + ".png";
        this.prizeIcon_2.skin = "resource/youYiSai/10" + (e.RewardItemID == 106 ? 6 : 7) + ".png";
        this.prizeIcon_3.skin = "resource/youYiSai/10" + (e.RewardItemID == 106 ? 6 : 7) + ".png";
        this.prizeIcon_4.skin = "resource/youYiSai/10" + (e.RewardItemID == 106 ? 6 : 7) + ".png";
        var t = e.RewardNum.split("|");
        this.DDNum_1.value = t[0];
        this.DDNum_2.value = t[1];
        if (e.PlayerNum == 2) {
            this.box_p_3.visible = false;
            this.box_p_4.visible = false
        } else if (e.PlayerNum == 3) {
            this.box_p_3.visible = true;
            this.box_p_4.visible = false;
            this.DDNum_3.value = t[2]
        } else {
            this.box_p_3.visible = true;
            this.box_p_4.visible = true;
            this.DDNum_3.value = t[2];
            this.DDNum_4.value = t[3]
        }
    };
    var s = {
        show: function(e) {
            if (!i) {
                i = new t;
                i.init()
            }
            i.initData(e);
            i.popup()
        },
        hide: function() {
            if (i && i.visible == true) {
                i.close()
            }
        }
    };
    return s
} ();
var yysFish = function() {
    var o = null;
    var a = Laya.Tween;
    var r = Laya.Handler;
    var l = null;
    var h = [];
    var u = null;
    var c = 0;
    var f = false;
    var d = false;
    function t() {
        t.super(this)
    }
    Laya.class(t, "yysFishFn", YYSFishUI);
    var e = t.prototype;
    e.init = function() {
        u = this;
        var n = true;
        f = false;
        d = false;
        var e = Adapter.getOffsetX();
        var s = 238;
        s = s + e;
        this.rank_list.x = 0 - e;
        this.on(Laya.Event.CLICK, this,
        function(e) {
            if (!e.target) {
                return
            }
            var t = e.target.name;
            if (t == "setting_btn") {
                Seting.show()
            } else if (t == "exit_btn") {
                dGameRule.show()
            } else if (t == "hand_btn") {
                var i = Adapter.getOffsetX();
                if (n) {
                    a.to(this.rank_list, {
                        x: 0 - s
                    },
                    150, null, r.create(this.rank_list,
                    function() {
                        n = false
                    }))
                } else {
                    a.to(this.rank_list, {
                        x: 0 - i
                    },
                    150, null, r.create(this.rank_list,
                    function() {
                        n = true;
                        u.showRankList()
                    }))
                }
            }
        })
    };
    e.updateRankList = function(e, t, i, n) {
        for (var s = 0; s < h.length; s++) {
            var a = h[s];
            if (a.get("uid") == e) {
                a.set("score", n)
            }
        }
        this.showRankList()
    };
    e.showRankList = function() {
        h.sort(function(e, t) {
            return t.get("score") - e.get("score")
        });
        if (h.length > 0) {
            this.rank_name_1.text = h[0].get("name");
            this.curScore_1.text = h[0].get("score");
            this.rank_name_2.text = h[1].get("name");
            this.curScore_2.text = h[1].get("score");
            if (h.length == 3) {
                this.rank_name_3.text = h[2].get("name");
                this.curScore_3.text = h[2].get("score")
            }
            if (h.length == 4) {
                this.rank_name_3.text = h[2].get("name");
                this.curScore_3.text = h[2].get("score");
                this.rank_name_4.text = h[3].get("name");
                this.curScore_4.text = h[3].get("score")
            }
        }
    };
    e.updateScore = function(e, t, i, n) {
        if (!f) {
            switch (i) {
            case 1:
                this.cur_score_1.text = "分数" + n;
                break;
            case 2:
                this.cur_score_2.text = "分数" + n;
                break;
            case 3:
                this.cur_score_3.text = "分数" + n;
                break;
            case 4:
                this.cur_score_4.text = "分数" + n;
                break
            }
            this.updateRankList(e, t, i, n);
            this.showRankList()
        }
    };
    e.updateName = function(e) {
        this.totalScore.text = RoomBean.getTScore();
        c = RoomBean.getMaxTime() * 60;
        var t = Math.floor(c / 60);
        var i = Math.floor(c % 60);
        this.countDown.text = "剩余时间 " + t + "分" + i + "秒";
        if (!d) {
            d = true;
            Laya.timer.once(1e3, o,
            function() {
                c = c - 1;
                o.MatchStartFx()
            })
        }
        if (e.length == 2) {
            this.nameInfo_3.visible = false;
            this.nameInfo_4.visible = false;
            this.rankBox3.visible = false;
            this.rankBox4.visible = false
        }
        if (e.length == 3) {
            this.nameInfo_3.visible = true;
            this.nameInfo_4.visible = false;
            this.rankBox3.visible = true;
            this.rankBox4.visible = false
        }
        if (e.length == 4) {
            this.nameInfo_3.visible = true;
            this.nameInfo_4.visible = true;
            this.rankBox3.visible = true;
            this.rankBox4.visible = true
        }
        var n = 1;
        var s = 0;
        h = [];
        for (var a = 0; a < e.length; a++) {
            var r = e[a];
            l = new Map;
            l.set("uid", r.UserId);
            l.set("name", r.Nick);
            l.set("score", 0);
            h.push(l);
            if (Player.getUserId() == r.UserId) {
                this.name_1.text = r.Nick;
                l.set("pos", 1);
                s = a + 1
            } else {
                n++;
                if (s == 2) {
                    switch (n) {
                    case 2:
                        l.set("pos", 2);
                        this.name_2.text = r.Nick;
                        break;
                    case 3:
                        l.set("pos", 4);
                        this.name_4.text = r.Nick;
                        break;
                    case 4:
                        l.set("pos", 3);
                        this.name_3.text = r.Nick;
                        break
                    }
                } else if (s == 3) {
                    switch (n) {
                    case 2:
                        l.set("pos", 3);
                        this.name_3.text = r.Nick;
                        break;
                    case 3:
                        l.set("pos", 4);
                        this.name_4.text = r.Nick;
                        break;
                    case 4:
                        l.set("pos", 2);
                        this.name_2.text = r.Nick;
                        break
                    }
                } else {
                    switch (n) {
                    case 2:
                        l.set("pos", 2);
                        this.name_2.text = r.Nick;
                        break;
                    case 3:
                        l.set("pos", 3);
                        this.name_3.text = r.Nick;
                        break;
                    case 4:
                        l.set("pos", 4);
                        this.name_4.text = r.Nick;
                        break
                    }
                }
            }
        }
        this.showRankList()
    };
    function i() {
        var e = 0;
        var t = 0;
        if (c > 0) {
            e = Math.floor(c / 60);
            t = Math.floor(c % 60); --c;
            this.countDown.text = "剩余时间 " + e + "分" + t + "秒"
        } else {
            this.countDown.text = "剩余时间 0分0秒";
            Laya.timer.clearAll(u)
        }
    }
    e.hide = function() {
        o.destroy();
        o = null
    };
    e.stopCDown = function(e) {
        Laya.timer.clearAll(o);
        if (RoomBean.getTScore() > e) {
            this.countDown.text = "剩余时间 0分0秒"
        }
    };
    e.MatchStartFx = function() {
        var e = Laya.Pool.getItemByClass("Ani_tianzhan2", Laya.Animation);
        e.source = "UIRoot/FX/tianzhan2.ani";
        e.pos(Game.UIWidth / 2, Game.UIHeight / 2);
        e.once(Laya.Event.COMPLETE, this,
        function() {
            e.removeSelf();
            Laya.Pool.recover("Ani_tianzhan2", e);
            Laya.timer.loop(1e3, u, i)
        });
        e.once(Laya.Event.DISPLAY, this,
        function() {
            e.play(0, false, "Tianzhankaishi")
        });
        this.addChild(e)
    };
    e.stopAddScore = function(e) {
        f = true;
        for (var t = 0; t < e.info.length; t++) {
            this.updateRankList(e.info[t].UserID, "", "", e.info[t].Score)
        }
        this.showRankList();
        this.stopAddScore2()
    };
    e.stopAddScore2 = function() {
        for (var e = 0; e < h.length; e++) {
            var t = h[e];
            switch (t.get("pos")) {
            case 1:
                this.cur_score_1.text = "分数" + t.get("score");
                break;
            case 2:
                this.cur_score_2.text = "分数" + t.get("score");
                break;
            case 3:
                this.cur_score_3.text = "分数" + t.get("score");
                break;
            case 4:
                this.cur_score_4.text = "分数" + t.get("score");
                break
            }
        }
    };
    var n = {
        show: function(e) {
            if (!o) {
                o = new t
            }
            o.init();
            e.addChild(o)
        },
        initName: function(e) {
            if (o) {
                o.updateName(e)
            }
        },
        updateScore: function(e, t, i, n) {
            if (o) {
                o.updateScore(e, t, i, n)
            }
        },
        hide: function() {
            if (o) {
                o.destroy();
                o = null
            }
        },
        stopCDown: function(e) {
            o.stopCDown()
        },
        stopAddScore: function(e) {
            if (o) {
                o.stopAddScore(e)
            }
        }
    };
    return n
} ();
var yysRoom = function() {
    var i = "RoomFn";
    var t = 0;
    var c = Laya.Sprite;
    var f = 0;
    var n = false;
    var d = null;
    var g = 1;
    var p = 1e3;
    function s() {
        s.super(this)
    }
    Laya.class(s, i, YYSRoomUI);
    var e = s.prototype;
    e.init = function() {
        Adapter.fitView(this, this.bg);
        this.on(Laya.Event.CLICK, this,
        function(e) {
            if (!e.target) {
                return
            }
            var t = e.target.name;
            if (t == "back") {
                Request.LeaveGameSvrReq();
                this.exit()
            } else if (t == "createRoomBtn") {
                if (Player.getVipLevel() < 3) {
                    MessageBox.show("贵族3以上才可以创建房间")
                } else {
                    n = false;
                    dCreateRoom.show()
                }
            } else if (t == "num_1") {
                this.inputNum(1)
            } else if (t == "num_2") {
                this.inputNum(2)
            } else if (t == "num_3") {
                this.inputNum(3)
            } else if (t == "num_4") {
                this.inputNum(4)
            } else if (t == "num_5") {
                this.inputNum(5)
            } else if (t == "num_6") {
                this.inputNum(6)
            } else if (t == "num_7") {
                this.inputNum(7)
            } else if (t == "num_8") {
                this.inputNum(8)
            } else if (t == "num_9") {
                this.inputNum(9)
            } else if (t == "num_0") {
                this.inputNum(0)
            } else if (t == "num_reset") {
                this.inputNum(10)
            } else if (t == "num_delete") {
                this.inputNum(11)
            } else if (t == "quitRoom") {
                Request.YouYiSaiExitRoomReq(f)
            } else if (t == "startGame") {
                Request.YouYiSaiStartGameReq(f)
            } else if (t == "dissolveRoom") {
                Request.YouYiSaiExitRoomReq(f)
            }
        });
        this.on(Laya.Event.UNDISPLAY, this,
        function() {
            if (WinUtils.getSaveUI(i)) {
                WinUtils.getSaveUI(i).exit()
            }
        });
        Laya.stage.on(Laya.Event.VISIBILITY_CHANGE, this,
        function() {
            if (WinUtils.getSaveUI(i)) {
                WinUtils.getSaveUI(i).exit()
            }
        });
        this.initDT()
    };
    e.initDT = function() {
        if (Package.getDataById(106)) {
            this.g_dantou_num.value = Package.getDataById(106).num
        } else {
            this.g_dantou_num.value = 0
        }
        if (Package.getDataById(107)) {
            this.w_dantou_num.value = Package.getDataById(107).num
        } else {
            this.w_dantou_num.value = 0
        }
    };
    e.inputNum = function(e) {
        if (e == 10) {
            this.resetNum()
        } else if (e == 11) {
            switch (t) {
            case 1:
                this.roomNum_1.text = "";
                break;
            case 2:
                this.roomNum_2.text = "";
                break;
            case 3:
                this.roomNum_3.text = "";
                break;
            case 4:
                this.roomNum_4.text = "";
                break;
            case 5:
                this.roomNum_5.text = "";
                break;
            case 6:
                this.roomNum_6.text = "";
                break
            }
            if (t > 0) {
                t--
            }
        } else {
            if (t < 6) {
                t++;
                e += "";
                switch (t) {
                case 1:
                    this.roomNum_1.text = e;
                    break;
                case 2:
                    this.roomNum_2.text = e;
                    break;
                case 3:
                    this.roomNum_3.text = e;
                    break;
                case 4:
                    this.roomNum_4.text = e;
                    break;
                case 5:
                    this.roomNum_5.text = e;
                    break;
                case 6:
                    this.roomNum_6.text = e;
                    f = this.roomNum_1.text + this.roomNum_2.text + this.roomNum_3.text + this.roomNum_4.text + this.roomNum_5.text + this.roomNum_6.text;
                    n = true;
                    Request.YouYiSaiSearchRoomReq(parseInt(f));
                    break
                }
            }
        }
    };
    e.resetNum = function() {
        t = 0;
        this.roomNum_1.text = "";
        this.roomNum_2.text = "";
        this.roomNum_3.text = "";
        this.roomNum_4.text = "";
        this.roomNum_5.text = "";
        this.roomNum_6.text = ""
    };
    e.resetPage2 = function() {
        n = false;
        d = null;
        WinUtils.getSaveUI(i).page_create.visible = true;
        WinUtils.getSaveUI(i).page_waiting.visible = false;
        this.name_box_2.visible = false;
        this.name_box_3.visible = false;
        this.name_box_4.visible = false;
        this.face_mask_2.visible = false;
        this.face_mask_3.visible = false;
        this.face_mask_4.visible = false;
        this.wName_2.text = "";
        this.wName_3.text = "";
        this.wName_4.text = ""
    };
    e.init2 = function(e) {
        d = new Map;
        var t = this.face_mask_1.width;
        var i = parseInt(t / 2);
        var n = e.PlayerInfos;
        f = e.RoomID;
        this.wRoomNum.value = e.RoomID;
        this.wTime_label.text = e.PlayMinute + "分钟";
        this.wScore_label.text = e.TargetScore;
        g = e.PlayMinute;
        p = e.TargetScore;
        RoomBean.setMaxTime(g);
        RoomBean.setTScore(p);
        this.wDDIcon_1.skin = "resource/youYiSai/10" + (e.RewardItemID == 106 ? 6 : 7) + ".png";
        this.wDDIcon_2.skin = "resource/youYiSai/10" + (e.RewardItemID == 106 ? 6 : 7) + ".png";
        this.wDDIcon_3.skin = "resource/youYiSai/10" + (e.RewardItemID == 106 ? 6 : 7) + ".png";
        this.wDDIcon_4.skin = "resource/youYiSai/10" + (e.RewardItemID == 106 ? 6 : 7) + ".png";
        var s = e.RewardNum.split("|");
        this.wDDNum_1.value = s[0];
        this.wDDNum_2.value = s[1];
        this.wait_2.visible = true;
        if (e.PlayerNum == 2) {
            this.wBox_3.visible = false;
            this.wBox_4.visible = false;
            this.lock_3.visible = true;
            this.lock_4.visible = true;
            this.wait_3.visible = false;
            this.wait_4.visible = false
        } else if (e.PlayerNum == 3) {
            this.wBox_3.visible = true;
            this.wBox_4.visible = false;
            this.wDDNum_3.value = s[2];
            this.lock_3.visible = false;
            this.wait_3.visible = true
        } else {
            this.wBox_3.visible = true;
            this.wBox_4.visible = true;
            this.wDDNum_3.value = s[2];
            this.wDDNum_4.value = s[3];
            this.lock_3.visible = false;
            this.wait_3.visible = true;
            this.lock_4.visible = false;
            this.wait_4.visible = true
        }
        var a = new c;
        a.graphics.drawCircle(i, i, i, "#ff0000");
        this.face_mask_1.mask = a;
        var r = new c;
        r.graphics.drawCircle(i, i, i, "#ff0000");
        this.face_mask_2.mask = r;
        var o = new c;
        o.graphics.drawCircle(i, i, i, "#ff0000");
        this.face_mask_3.mask = o;
        var l = new c;
        l.graphics.drawCircle(i, i, i, "#ff0000");
        this.face_mask_4.mask = l;
        if (n[0].IsOwner && n[0].UserID == Player.getUserId()) {
            this.startGame.visible = true;
            this.dissolveRoom.visible = true;
            this.quitRoom.visible = false
        } else {
            this.startGame.visible = false;
            this.dissolveRoom.visible = false;
            this.quitRoom.visible = true
        }
        for (var h = 0; h < n.length; h++) {
            var s = n[h];
            d.set(s.UserID, h + 1);
            if (h == 0) {
                this.wName_1.text = s.Nick;
                this.face_mask_1.visible = true;
                var u = null;
                if (s.AvatarUrl) {
                    this.face_mask_1.loadImage(s.AvatarUrl, 0, 0, 107, 107)
                } else {
                    this.face_mask_1.loadImage("resource/head/" + s.AvatarID + ".png", 0, 0, 107, 107)
                }
            }
            if (h == 1) {
                this.name_box_2.visible = true;
                this.wait_2.visible = false;
                this.wName_2.text = s.Nick;
                this.face_mask_2.visible = true;
                if (s.AvatarUrl) {
                    this.face_mask_2.loadImage(s.AvatarUrl, 0, 0, 107, 107)
                } else {
                    this.face_mask_2.loadImage("resource/head/" + s.AvatarID + ".png", 0, 0, 107, 107)
                }
            }
            if (h == 2) {
                this.name_box_3.visible = true;
                this.wait_3.visible = false;
                this.wName_3.text = s.Nick;
                this.face_mask_3.visible = true;
                if (s.AvatarUrl) {
                    this.face_mask_3.loadImage(s.AvatarUrl, 0, 0, 107, 107)
                } else {
                    this.face_mask_3.loadImage("resource/head/" + s.AvatarID + ".png", 0, 0, 107, 107)
                }
            }
            if (h == 3) {
                this.name_box_4.visible = true;
                this.wait_4.visible = false;
                this.wName_4.text = s.Nick;
                this.face_mask_4.visible = true;
                if (s.AvatarUrl) {
                    this.face_mask_4.loadImage(s.AvatarUrl, 0, 0, 107, 107)
                } else {
                    this.face_mask_4.loadImage("resource/head/" + s.AvatarID + ".png", 0, 0, 107, 107)
                }
            }
        }
    };
    e.update = function(e) {
        if (e.UpdType == 1) {
            if (this.wait_2.visible && !d.has(e.UserID)) {
                this.name_box_2.visible = true;
                this.wait_2.visible = false;
                this.wName_2.text = e.Nick;
                this.face_mask_2.visible = true;
                if (e.AvatarUrl) {
                    this.face_mask_2.loadImage(e.AvatarUrl, 0, 0, 107, 107)
                } else {
                    this.face_mask_2.loadImage("resource/head/" + e.AvatarID + ".png", 0, 0, 107, 107)
                }
                d.set(e.UserID, 2)
            } else if (this.wait_3.visible && !d.has(e.UserID)) {
                this.name_box_3.visible = true;
                this.wait_3.visible = false;
                this.wName_3.text = e.Nick;
                this.face_mask_3.visible = true;
                if (e.AvatarUrl) {
                    this.face_mask_3.loadImage(e.AvatarUrl, 0, 0, 107, 107)
                } else {
                    this.face_mask_3.loadImage("resource/head/" + e.AvatarID + ".png", 0, 0, 107, 107)
                }
                d.set(e.UserID, 3)
            } else if (this.wait_4.visible && !d.has(e.UserID)) {
                this.name_box_4.visible = true;
                this.wait_4.visible = false;
                this.wName_4.text = e.Nick;
                this.face_mask_4.visible = true;
                if (e.AvatarUrl) {
                    this.face_mask_4.loadImage(e.AvatarUrl, 0, 0, 107, 107)
                } else {
                    this.face_mask_4.loadImage("resource/head/" + e.AvatarID + ".png", 0, 0, 107, 107)
                }
                d.set(e.UserID, 4)
            }
        }
        if (e.UpdType == 2) {
            if (d.has(e.UserID)) {
                var t = d.get(e.UserID);
                d.delete(e.UserID);
                if (t == 1) {
                    MsgToast.show("房主解散了房间！");
                    WinUtils.getSaveUI(i).exit()
                }
                if (t == 2) {
                    this.name_box_2.visible = false;
                    this.wait_2.visible = true;
                    this.wName_2.text = " ";
                    this.face_mask_2.visible = false;
                    this.face_mask_2.skin = ""
                }
                if (t == 3) {
                    this.name_box_3.visible = false;
                    this.wait_3.visible = true;
                    this.wName_3.text = " ";
                    this.face_mask_3.visible = false;
                    this.face_mask_3.skin = ""
                }
                if (t == 4) {
                    this.name_box_4.visible = false;
                    this.wait_4.visible = true;
                    this.wName_4.text = " ";
                    this.face_mask_4.visible = false;
                    this.face_mask_4.skin = ""
                }
            }
        }
    };
    e.hide = function() {
        if (WinUtils.getSaveUI(i)) {
            WinUtils.getSaveUI(i).removeSelf()
        }
    };
    e.exit = function() {
        if (WinUtils.getSaveUI(i)) {
            WinUtils.getSaveUI(i).resetNum();
            WinUtils.getSaveUI(i).resetPage2();
            GameCenter.show();
            WinUtils.getSaveUI(i).hide()
        }
    };
    var a = {
        show: function(e) {
            Waiting.show();
            WinUtils.showView(RES.youYiSai, i, Game.UIRoot, s,
            function(e) {
                e.page_create.visible = true;
                e.page_waiting.visible = false;
                Request.package.getListReq();
                GameCenter.hide();
                Waiting.hide()
            },
            {
                isWindow: true,
                needFitViews: ["bg"],
                isFullScene: true
            });
            ActionEventReport.report(ActionEventReport.actionIndex.ID1071, {
                t: e ? 0 : 1
            })
        },
        showWaitPage: function(e) {
            WinUtils.getSaveUI(i).resetPage2();
            WinUtils.getSaveUI(i).page_create.visible = false;
            WinUtils.getSaveUI(i).page_waiting.visible = true;
            WinUtils.getSaveUI(i).init2(e)
        },
        resetNum: function() {
            if (WinUtils.getSaveUI(i)) {
                WinUtils.getSaveUI(i).resetNum()
            }
        },
        exit: function() {
            if (WinUtils.getSaveUI(i)) {
                WinUtils.getSaveUI(i).exit()
            }
        },
        isJoinRoom: n,
        seachRoomReq: function() {
            if (n) {
                Request.YouYiSaiSearchRoomReq(parseInt(f))
            } else {
                dCreateRoom.toCreateReq()
            }
        },
        update: function(e) {
            if (WinUtils.getSaveUI(i)) {
                WinUtils.getSaveUI(i).update(e)
            }
        },
        time: g,
        score: p,
        refreshDT: function() {
            if (WinUtils.getSaveUI(i)) {
                WinUtils.getSaveUI(i).initDT()
            }
        }
    };
    return a
} ();
var AwardList = function() {
    var s = null;
    var e = WBAwardListUI.prototype;
    e.init = function(e) {
        this.award_list.scrollBar.hide = true;
        if (e) {
            this.Award_title.skin = e.IsCurrent && e.IsCurrent == 0 ? "resource/worldBoss/zi_shangqi.png": "resource/worldBoss/zi_benqi.png";
            var t = e.LstInfo;
            var i = [];
            for (var n = 0; n < t.length; n++) {
                if (t[n] && t[n].Reward && t[n].Reward.split(":").length >= 2) {
                    i.push({
                        userHeadImg: {
                            skin: t[n].AvatarUrl ? t[n].AvatarUrl: "resource/head/" + t[n].AvartarID + ".png"
                        },
                        user_id: "编号:" + t[n].UserID,
                        img_vipLevel: {
                            skin: "resource/worldBoss/vip" + t[n].Vip + ".png"
                        },
                        user_name: t[n].Nick,
                        num123: {
                            skin: n < 3 ? "resource/worldBoss/r_" + n + ".png": "",
                            visible: n < 3 ? true: false
                        },
                        user_gold: {
                            value: t[n].Reward.split(":")[1]
                        },
                        fontNum: {
                            value: n >= 3 ? n + 1 : "",
                            visible: n >= 3 ? true: false
                        },
                        img_type: {
                            skin: "resource/icon/" + t[n].Reward.split(":")[0] + ".png"
                        }
                    })
                }
            }
            this.award_list.array = i
        }
        this.cur_close.on(Laya.Event.CLICK, this,
        function() {
            if (s) {
                s.close()
            }
        });
        this.on(Laya.Event.def_LeaveFishScene, this,
        function() {
            console.log("-----def_LeaveFishScene----------");
            if (s) {
                s.close()
            }
        })
    };
    e.unDisplay = function() {
        this.reset()
    };
    e.reset = function() {
        if (s) {
            s.destroy();
            s = null
        }
    };
    e.reset = function() {
        if (s) {
            s.destroy();
            s = null
        }
    };
    e.show = function() {};
    var t = {
        show: function(e) {
            if (!s) {
                s = new WBAwardListUI;
                s.init(e)
            }
            s.popup()
        },
        hide: function() {
            if (s) {
                s.close()
            }
        }
    };
    return t
} ();
var worldBossMain = function() {
    var a = null;
    var r = null;
    function e() {
        e.super(this)
    }
    Laya.class(e, "worldBossMainFn", WBMainUI);
    var t = e.prototype;
    t.init = function() {
        if (r) {
            this.maxGold.text = r.MaxGold;
            this.baseAward.text = "“" + r.BossMul + "x炮台倍数”";
            this.paoBei.value = r.BossMul;
            var e = r.BossTime.split("|");
            var t = [];
            var i = Math.floor(e.length / 2);
            var n = 0;
            for (var s = 0; s < i; s++) {
                t.push({
                    upTime: {
                        value: e[n]
                    },
                    downTime: {
                        value: n + 1 < e.length ? e[n + 1] : ""
                    }
                });
                n += 2
            }
            this.invadeTimeList.array = t
        }
        this.wbMain_close.on(Laya.Event.CLICK, this,
        function() {
            a.close()
        });
        this.preAwardBtn.on(Laya.Event.CLICK, this,
        function() {
            Waiting.show();
            Request.WorldBossResultReq()
        });
        this.on(Laya.Event.def_LeaveFishScene, this,
        function() {
            a.close()
        })
    };
    t.unDisplay = function() {
        this.reset()
    };
    t.reset = function() {
        if (a) {
            a.destroy();
            a = null
        }
    };
    t.show = function() {};
    var i = {
        show: function() {
            Waiting.show();
            WinUtils.showDialog(RES.loadTaskList.WorldBoss, e,
            function(e) {
                e.isClearRes = false;
                a = e;
                Waiting.hide();
                a.popup()
            })
        },
        hide: function() {
            if (a) {
                a.close()
            }
        },
        saveData: function(e) {
            r = e
        }
    };
    return i
} ();
var GuildNet = function() {
    var n = {
        EventKey: {
            GuildCangkuRep: "GuildCangkuRep",
            UpdateUserPkg: "UpdateUserPkg",
            GuildInfoRep: "GuildInfoRep",
            GuildMemberRep: "GuildMemberRep",
            GuildNewApplyReport: "GuildNewApplyReport"
        },
        GuildRankReq: function() {
            PB.encode("GuildRankReq_ID", "msg.GuildRankReq", {})
        },
        GuildRankRep: function(e) {
            GhJoinDialog.initList(e.List)
        },
        GuildSearchReq: function(e) {
            PB.encode("GuildSearchReq_ID", "msg.GuildSearchReq", e)
        },
        GuildSearchRep: function(e) {
            if (e.Tag) {
                GhApplyDialog.show(e)
            } else {
                MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgId))
            }
        },
        GuildApplyReq: function(e) {
            PB.encode("GuildApplyReq_ID", "msg.GuildApplyReq", e)
        },
        GuildApplyRep: function(e) {
            GhApplyDialog.hide();
            MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgId, e.MsgParam))
        },
        GuildCreateReq: function(e) {
            PB.encode("GuildCreateReq_ID", "msg.GuildCreateReq", {
                guildIcon: 1,
                flagId: 2,
                allowApply: true,
                guildName: e,
                xuanyan: ""
            })
        },
        GuildCreateRep: function(e) {
            if (e.Tag == 1) {
                GhJoinDialog.hide(false);
                GhCreateDialog.hide();
                GhDialog.show();
                Request.GetUserMoneyReq()
            } else {
                GhCreateDialog.showError(GameConfig.ErrorMsg.getMsgById(e.MsgId, e.MsgParam))
            }
        },
        GuildCangkuReq: function() {
            PB.encode("GuildCangkuReq_ID", "", {})
        },
        GuildCangkuRep: function(e) {
            var t = e.GuildCangkuList;
            if (EventBus.hasListener(n.EventKey.GuildCangkuRep)) {
                EventBus.send(n.EventKey.GuildCangkuRep, [t])
            }
        },
        GuildCangkuItemSaveReq: function(e, t) {
            PB.encode("GuildCangkuItemSaveReq_ID", "", {
                ItemId: e * 1,
                ItemNum: t * 1
            })
        },
        GuildCangkuItemSaveRep: function(e) {
            if (e.Tag == 1) {
                GuildNet.GuildCangkuReq();
                Request.package.getListReq()
            } else {
                MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgId))
            }
        },
        GuildCangkuItemGetReq: function(e, t) {
            PB.encode("GuildCangkuItemGetReq_ID", "", {
                ItemId: e * 1,
                ItemNum: t * 1
            })
        },
        GuildCangkuItemGetRep: function(e) {
            if (e.Tag == 1) {
                GhPutAndGet.getInst().close();
                GuildNet.GuildCangkuReq();
                Request.package.getListReq()
            }
            MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgId))
        },
        UpdateUserPkg: function(e) {
            if (EventBus.hasListener(n.EventKey.UpdateUserPkg)) {
                EventBus.send(n.EventKey.UpdateUserPkg, e)
            }
        },
        GuildInfoReq: function() {
            PB.encode("GuildInfoReq_ID", "", {})
        },
        GuildInfoRep: function(e) {
            if (e.GuildId == 0) {
                Player.isHasGh = false
            } else {
                Player.isHasGh = true
            }
            if (EventBus.hasListener(n.EventKey.GuildInfoRep)) {
                EventBus.send(n.EventKey.GuildInfoRep, e)
            }
        },
        GuildXuanyanUpdReq: function(e) {
            PB.encode("GuildXuanyanUpdReq_ID", "", {
                Xuanyan: e
            })
        },
        GuildXuanyanUpdRep: function(e) {
            MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgId))
        },
        GuildAllowApplyUpdReq: function(e) {
            PB.encode("GuildAllowApplyUpdReq_ID", "", e)
        },
        GuildAllowApplyUpdRep: function(e) {
            MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgId))
        },
        GuildApplyVipUpdReq: function(e) {
            PB.encode("GuildApplyVipUpdReq_ID", "", {
                ApplyVip: e
            })
        },
        GuildApplyVipUpdRep: function(e) {
            console.log(e);
            MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgId))
        },
        GuildInviteReq: function(e) {
            PB.encode("GuildInviteReq_ID", "", {
                UserID: e * 1
            })
        },
        GuildInviteRep: function(e) {
            if (e.MsgId) {
                MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgId))
            }
            if (e.Tag == 1) {
                GhInvite.getInst().close()
            }
        },
        GuildInviteResultReport: function(e) {
            if (e.MsgId) {
                MessageBox.show(GameConfig.ErrorMsg.getMsgById(e.MsgId, e.MsgParam), null, MessageBox.model.submit)
            }
            GuildNet.GuildApplyListReq()
        },
        GuildApplyListReq: function() {
            PB.encode("GuildApplyListReq_ID", "msg.GuildApplyListReq", {})
        },
        GuildApplyListRep: function(e) {
            GhJoinListDialog.initList(e.List);
            EventBus.send(GuildNet.EventKey.GuildNewApplyReport, [e.List.length > 0])
        },
        GuildProcessApplyReq: function(e) {
            PB.encode("GuildProcessApplyReq_ID", "msg.GuildProcessApplyReq", e)
        },
        GuildProcessApplyRep: function(e) {
            GhJoinListDialog.removeItem(e.ApplyId);
            MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgId))
        },
        GuildExitReq: function() {
            console.log("GuildExitReq");
            PB.encode("GuildExitReq_ID", "", {})
        },
        GuildExitRep: function(e) {
            console.log("GuildExitRep");
            console.log(e);
            if (e.Tag == 1) {
                GhDialog.hide();
                GuildNet.GuildInfoReq()
            }
            MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgId, e.MsgParam))
        },
        GuildGoToHellReq: function(e) {
            PB.encode("GuildGoToHellReq_ID", "", {
                UserId: e
            })
        },
        GuildGoToHellRep: function(e) {
            if (e.Tag) {
                GuildNet.GuildMemberReq()
            }
            if (e.MsgId) {
                MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgId))
            }
        },
        GuildAllEndReq: function() {
            PB.encode("GuildAllEndReq_ID", "", {})
        },
        GuildAllEndRep: function(e) {
            if (e.Tag == 1) {
                GhDialog.hide();
                GuildNet.GuildInfoReq();
                EventBus.send(GuildNet.EventKey.GuildNewApplyReport, [false])
            }
            MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgId, e.MsgParam))
        },
        GuildNewApplyReport: function() {
            if (EventBus.hasListener(n.EventKey.GuildNewApplyReport)) {
                EventBus.send(n.EventKey.GuildNewApplyReport, [true])
            }
        },
        GuildJoinReport: function(e) {
            console.log("GuildJoinReport");
            if (e.GuildId) {
                Player.isHasGh = true
            }
            if (Game.state.get() == Game.sceneConfig.sceneID.gameCenter) {
                GhDialog.show()
            }
            GhJoinDialog.hide(false)
        },
        GuildMemberReq: function() {
            PB.encode("GuildMemberReq_ID", "", {})
        },
        GuildMemberRep: function(e) {
            if (EventBus.hasListener(n.EventKey.GuildMemberRep)) {
                EventBus.send(n.EventKey.GuildMemberRep, e)
            }
        },
        GuildInviteReport: function(t) {
            if (t) {
                var i = "<font style='fontSize:24' color='#c34a00'>会长: </font>";
                i += "<font style='fontSize:24' color='#d06d2b'>" + t.InviteUserNick + "<br/></font>";
                i += "<font style='fontSize:24' color='#c34a00'>邀您加入</font>";
                i += "<font style='fontSize:24' color='#d06d2b'> " + t.GuildName + " <br/></font>";
                i += "<font style='fontSize:24' color='#c34a00'>公会,是否加入</font>";
                GhMsgBox.load(function(e) {
                    e.setMsg(i, false, false, true, true);
                    e.submitCall = function() {
                        n.GuildInviteReplyReq(t.InviteId, true)
                    };
                    e.closeCall = function() {
                        n.GuildInviteReplyReq(t.InviteId, false)
                    };
                    e.popup()
                })
            }
        },
        GuildInviteReplyReq: function(e, t) {
            PB.encode("GuildInviteReplyReq_ID", "", {
                InviteId: e,
                Agree: t
            })
        },
        GuildInviteReplyRep: function(e) {
            if (e && e.MsgId) {
                if (e.Tag) {
                    Player.isHasGh = true;
                    if (Game.state.get() == Game.sceneConfig.sceneID.gameCenter) {
                        GhDialog.show()
                    }
                    GhJoinDialog.hide(false)
                }
                MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgId, e.MsgParam))
            }
        },
        GuildKickOutReport: function(e) {
            if (e && e.MsgId) {
                if (GhDialog.isShow()) {
                    GhDialog.hide()
                }
                MessageBox.show(GameConfig.ErrorMsg.getMsgById(e.MsgId, e.MsgParam), null, MessageBox.model.submit)
            }
        }
    };
    return n
} ();
var GuildStorage = function() {
    var e = "GuildStorage";
    function t() {
        t.super(this);
        this.init()
    }
    Laya.class(t, "guild.GuildStorage", ghStorageUI, "");
    var i = t.prototype;
    i.init = function() {
        this.on(Laya.Event.CLICK, this,
        function(e) {
            if (e.target && e.target.name) {
                var t = e.target.name;
                if (t == "btnFreshen") {
                    if (this.btnFreshen.disabled) {
                        return
                    }
                    this.btnFreshen.disabled = true;
                    this.timer.once(1e3, this,
                    function() {
                        this.btnFreshen.disabled = false
                    });
                    this.storeList.array = i;
                    GuildNet.GuildCangkuReq()
                }
            }
        });
        var i = [];
        this.addExtData(i, 9);
        this.storeList.array = i;
        this.pkgList.array = i;
        this.storeList.scrollBar.hide = true;
        this.pkgList.scrollBar.hide = true;
        this.storeList.selectHandler = new Laya.Handler(this, this.storeSelectedHdr);
        this.pkgList.selectHandler = new Laya.Handler(this, this.pkgSelectedHdr);
        EventBus.on(GuildNet.EventKey.GuildCangkuRep, this, this.updateStore);
        EventBus.on(GuildNet.EventKey.UpdateUserPkg, this, this.updatePkg);
        GuildNet.GuildCangkuReq();
        this.updatePkg(Package.getPkgData())
    };
    i.storeSelectedHdr = function() {
        var e = this.storeList.selectedItem;
        if (e) {
            var t = e.id;
            var i = this.storeList.selection.getChildByName("selected");
            i.visible = true;
            if (t) {
                GhPutAndGet.getInst().updateData(e, "get").popup()
            }
            this.timer.once(500, this,
            function() {
                i.visible = false;
                this.storeList.selectedIndex = -1
            })
        }
    };
    i.pkgSelectedHdr = function() {
        var e = this.pkgList.selectedItem;
        if (e) {
            var t = e.id;
            var i = this.pkgList.selection.getChildByName("selected");
            i.visible = true;
            if (t) {
                GhPutAndGet.getInst().updateData(e, "put").popup()
            }
            this.timer.once(500, this,
            function() {
                i.visible = false;
                this.pkgList.selectedIndex = -1
            })
        }
    };
    i.addExtData = function(e, t) {
        for (var i = 0; i < t; i++) {
            e.push({
                id: 0,
                bg: Utils.getItemIconBgSkin(0),
                icon: {
                    skin: "resource/icon/1.png",
                    visible: false
                },
                num: {
                    value: 0,
                    visible: false
                },
                groupNum: 1,
                name: "金币"
            })
        }
        return e
    };
    i.getListArray = function(e) {
        var t = [];
        if (e && e.length) {
            for (var i = 0,
            n = e.length; i < n; i++) {
                var s = e[i];
                if (s && s.ItemId) {
                    var a = GameConfig.Item.getItemInfoById(s.ItemId);
                    if (a && a.AllowGive) {
                        t.push({
                            id: s.ItemId,
                            bg: Utils.getItemIconBgSkin(a.FrameLevel),
                            icon: {
                                skin: "resource/icon/" + s.ItemId + ".png",
                                visible: true
                            },
                            num: {
                                value: s.ItemNum,
                                visible: true
                            },
                            groupNum: a.GroupNum || 1,
                            name: a.ItemName
                        })
                    }
                }
            }
        }
        if (t.length < 9) {
            this.addExtData(t, 9 - t.length)
        } else {
            var r = t.length % 3;
            if (r) {
                this.addExtData(t, 3 - r)
            }
        }
        return t
    };
    i.updateStore = function(e) {
        var t = this.getListArray(e);
        this.storeList.array = t
    };
    i.updatePkg = function(e) {
        var t = e.BagList;
        var i = this.getListArray(t);
        this.pkgList.array = i
    };
    i.reset = function() {
        EventBus.off(GuildNet.EventKey.GuildCangkuRep, this, this.updateStore)
    };
    return {
        getInst: function() {
            if (!WinUtils.getSaveUI(e)) {
                return new t
            } else {
                return WinUtils.getSaveUI(e)
            }
        }
    }
} ();
var GhApplyDialog = function() {
    function t() {
        t.super(this);
        this.setBtClick(this.applyBt)
    }
    Laya.class(t, "GhApplyDialogFun", ghApplyUI);
    t.prototype.onClick = function(e) {
        console.log("onClick");
        if (e.target == this.applyBt) {
            GuildNet.GuildApplyReq({
                GuildId: this.GuildId
            })
        }
    };
    t.prototype.initData = function(e) {
        this.GuildId = e.GuildId;
        this.ghName.text = e.GuildName;
        this.ghBoss.text = "公会会长:" + e.LeaderNick;
        this.ghDes.text = e.Xuanyan;
        if (this.ghDes.text.length == 0) {
            this.ghDes.text = GameConfig.ErrorMsg.clientErrorMsg(10135)
        }
        this.xuanYanBox.visible = Player.isShowXuanYan();
        this.applyBt.disabled = !e.AllowApply
    };
    t.prototype.onClosed = function() {
        BaseDialog.prototype.onClosed.call(this);
        i = undefined
    };
    var i = undefined;
    var e = {};
    e.show = function(e) {
        if (!i) {
            i = new t
        }
        i.popup();
        i.initData(e)
    };
    e.hide = function() {
        if (i) {
            i.close()
        }
    };
    return e
} ();
var GhCreateDialog = function() {
    var t = undefined;
    function e() {
        e.super(this);
        this.setBtClick(this.createBt);
        this.needNum.value = GameConfig.getCreateGuildCost()
    }
    Laya.class(e, "GhCreateDialogFun", ghCreateDUI);
    e.prototype.onClick = function(e) {
        if (e.target == this.createBt) {
            if (this.ghName.text.length > 0) {
                GuildNet.GuildCreateReq(this.ghName.text)
            } else {
                this.showError(GameConfig.ErrorMsg.clientErrorMsg(10133))
            }
        }
    };
    e.prototype.showError = function(e) {
        this.errorHitImg.visible = true;
        this.errorHit.text = e
    };
    e.prototype.onClosed = function() {
        BaseDialog.prototype.onClosed.call(this);
        t = undefined
    };
    var i = {};
    i.show = function() {
        if (!t) {
            t = new e
        }
        t.popup()
    };
    i.hide = function() {
        if (t) {
            t.close()
        }
    };
    i.showError = function(e) {
        if (t) {
            t.showError(e)
        }
    };
    return i
} ();
var GhDialog = function() {
    function e() {
        e.super(this)
    }
    Laya.class(e, "GhDialogFun", ghDialogUI, "");
    e.prototype.init = function() {
        this.menus = [];
        for (var e = 0; e < 3; e++) {
            var t = this.menuBox.getChildAt(e);
            this.menus.push(t);
            t.getChildByName("selected").visible = false;
            t.on(Laya.Event.CLICK, this, this.clickMenu, [e]);
            if ((!Player.isShowGuild() || !Player.isShowGhCangKu()) && e == 2) {
                t.gray = true
            }
        }
        this.clickMenu(0);
        EventBus.on(GuildNet.EventKey.GuildNewApplyReport, this, this.showGHRedPoint)
    };
    e.prototype.showGHRedPoint = function(e) {
        this.ghRP.visible = e
    };
    e.prototype.clickMenu = function(e, t) {
        if (e == 2) {
            if (!Player.isShowGuild() || !Player.isShowGhCangKu()) {
                MsgToast.show(GameConfig.ErrorMsg.clientErrorMsg(10109));
                return
            }
        }
        if (this.lastIndex != undefined) this.menus[this.lastIndex].getChildByName("selected").visible = false;
        this.lastIndex = e;
        this.menus[this.lastIndex].getChildByName("selected").visible = true;
        this.viewStack.selectedIndex = e;
        if (e == 0) {
            GuildNet.GuildInfoReq()
        } else if (e == 1) {
            GuildNet.GuildMemberReq()
        } else if (e == 2) {
            GuildNet.GuildCangkuReq()
        }
    };
    e.prototype.onClosed = function() {
        BaseDialog.prototype.onClosed.call(this);
        EventBus.off(GuildNet.EventKey.GuildNewApplyReport, this, this.showGHRedPoint);
        t = null
    };
    var t = undefined;
    var i = {},
    n = false;
    i.show = function() {
        WinUtils.showDialog(RES.guild, e,
        function(e) {
            t = e;
            t.popup()
        })
    };
    i.hide = function() {
        if (t) {
            t.close()
        }
    };
    i.isShow = function() {
        return t && t.displayedInStage
    };
    return i
} ();
var guild; (function(e) {
    var t = function(e) {
        function t() {
            t.super(this);
            this.init()
        }
        Laya.class(t, "guild.GhInfo", e);
        var i = t.prototype;
        i.init = function() {
            console.log("GhInfo.init");
            EventBus.on(GuildNet.EventKey.GuildInfoRep, this, this.updateGuildInfo);
            GuildNet.GuildInfoReq();
            this.ApplyMul = true;
            this.ApplyVip = 0;
            this.xuanYan = "";
            this.leaderId = 0;
            this.on(Laya.Event.CLICK, this,
            function(e) {
                if (!e.target) {
                    return
                }
                var t = e.target.name;
                if (t == "btnJoinList") {
                    GhJoinListDialog.show()
                } else if (t == "btnGhList") {
                    GhJoinDialog.show(true)
                } else if (t == "btnSwitch") {
                    if (this.isLeader()) {
                        this.applySwitch(!this.ApplyMul, true)
                    }
                } else if (t == "sctVip" || t == "sctBar") {
                    if (this.isLeader()) {
                        this.showVipList()
                    }
                } else if (t == "btnSave") {
                    if (this.isLeader()) {
                        this.updateXuanYan()
                    }
                } else if (t == "btnInvite") {
                    GhInvite.getInst().popup()
                } else if (t == "btnDismiss") {
                    var i = MessageBox.show(GameConfig.ErrorMsg.clientErrorMsg(10131));
                    i.submitCall = function() {
                        GuildNet.GuildAllEndReq()
                    }
                } else if (t == "btnExit") {
                    var i = MessageBox.show("确认退出公会?");
                    i.submitCall = function() {
                        GuildNet.GuildExitReq()
                    }
                }
            });
            this.setVipList();
            this.xuanYanBox.visible = Player.isShowXuanYan();
            EventBus.on(GuildNet.EventKey.GuildNewApplyReport, this, this.showGHRedPoint)
        };
        i.showGHRedPoint = function(e) {
            this.ghRP.visible = e
        };
        i.showVipList = function() {
            Laya.Tween.to(this.sctBar, {
                rotation: this.sctVipBox.visible ? 0 : 180
            },
            200);
            this.sctVipBox.visible = !this.sctVipBox.visible
        };
        i.setVipList = function() {
            var e = [];
            for (var t = 0; t < 11; t++) {
                e.push({
                    vip: t,
                    icon: "resource/login/vipLevel/vip" + t + ".png"
                })
            }
            this.vipList.scrollBar.hide = true;
            this.vipList.array = e;
            this.vipList.selectHandler = new Laya.Handler(this, this.selectedHandler)
        };
        i.selectedHandler = function() {
            var e = this.vipList.selectedItem;
            if (e) {
                this.currVip.skin = e.icon;
                GuildNet.GuildApplyVipUpdReq(e.vip)
            }
            this.showVipList()
        };
        i.updateGuildInfo = function(e) {
            this.ghName.text = e.GuildName;
            this.ghLeader.text = Utils.nickBylen(e.LeaderNick);
            this.ghNum.text = e.PlayerNum + "/" + e.MaxPlayerNum;
            this.textArea.text = e.Xuanyan || GameConfig.getDefXuanyan();
            this.currVip.skin = "resource/login/vipLevel/vip" + e.ApplyVip + ".png";
            this.ApplyVip = e.ApplyVip;
            this.xuanYan = e.Xuanyan;
            this.leaderId = e.LeaderUserId;
            this.applySwitch(e.AllowApply);
            if (this.isLeader()) {
                this.btnSave.visible = true;
                this.btnJoinList.visible = true;
                this.btnInvite.visible = true;
                this.btnDismiss.visible = true;
                this.textArea.editable = true;
                this.textArea.disabled = false
            } else {
                this.textArea.disabled = true;
                this.textArea.editable = false;
                this.btnSave.visible = false;
                this.btnJoinList.visible = false;
                this.btnInvite.visible = false;
                this.btnDismiss.visible = false;
                this.btnExit.visible = true
            }
        };
        i.applySwitch = function(e, t) {
            this.btnSwitch.x = e ? 7 : 52;
            this.switchBg.visible = e ? true: false;
            this.ApplyMul = e;
            if (t) {
                GuildNet.GuildAllowApplyUpdReq({
                    AllowApply: e
                })
            }
        };
        i.updateXuanYan = function() {
            if (this.textArea.text != this.xuanYan) {
                GuildNet.GuildXuanyanUpdReq(this.textArea.text)
            }
        };
        i.isLeader = function() {
            return this.leaderId && Player.getUserId() == this.leaderId
        };
        i.unDisplay = function() {
            console.log("this.ghInfo unDisplay");
            EventBus.off(GuildNet.EventKey.GuildInfoRep, this, this.updateGuildInfo);
            EventBus.off(GuildNet.EventKey.GuildNewApplyReport, this, this.showGHRedPoint)
        };
        return t
    } (ghInfoUI)
})(guild || (guild = {}));
var GhJoinDialog = function() {
    var i = null;
    var e = "GhJoinDialog";
    function n() {
        n.super(this)
    }
    Laya.class(n, e, ghJoinDialogUI, "");
    n.prototype.init = function() {
        this.ghList.vScrollBarSkin = "";
        this.ghList.selectEnable = true;
        this.ghList.selectHandler = new Laya.Handler(this, this.onSelect);
        this.ghList.renderHandler = new Laya.Handler(this, this.renderList);
        this.ghList.array = [];
        this.ghList.repeatY = 0;
        this.tip.visible = true;
        this.infoContain.visible = false;
        this.listSelectedIndex = 0;
        this.setBtClick([this.searchBt, this.createBt, this.joinBt]);
        this.xuanYanBox.visible = Player.isShowXuanYan()
    };
    n.prototype.onSelect = function(e) {
        this.selectedMark(this.listSelectedIndex, false);
        this.selectedMark(e, true);
        this.listSelectedIndex = e;
        this.updateGhInfo(e)
    };
    n.prototype.selectedMark = function(e, t) {
        if (this.ghList.array && this.ghList.array[e]) {
            if (!this.ghList.array[e]["selected"]) {
                this.ghList.array[e]["selected"] = {
                    visible: t
                }
            } else {
                this.ghList.array[e]["selected"]["visible"] = t
            }
        }
    };
    n.prototype.onClick = function(e) {
        switch (e.target) {
        case this.searchBt:
            if (this.searchInput.text.length > 0) {
                GuildNet.GuildSearchReq({
                    GuildName: this.searchInput.text
                })
            } else {
                MsgToast.show(GameConfig.ErrorMsg.clientErrorMsg(10116))
            }
            break;
        case this.joinBt:
            GhApplyDialog.show(this.listData[this.ghList.selectedIndex]);
            break;
        case this.createBt:
            GhCreateDialog.show();
            break
        }
    };
    n.prototype.initList = function(e) {
        this.tip.visible = e.length == 0;
        this.listTitle.visible = e.length ? true: false;
        this.infoContain.visible = e.length > 0;
        this.listData = e;
        this.ghList.array = e;
        this.ghList.repeatY = e.length;
        if (e.length > 0) {
            this.updateGhInfo(0);
            this.ghList.selectedIndex = 0
        }
    };
    n.prototype.updateGhInfo = function(e) {
        var t = this.listData[e];
        this.ghName.text = t.GuildName;
        this.ghBoss.text = t.LeaderNick;
        this.ghDes.text = t.Xuanyan;
        if (this.ghDes.text.length == 0) {
            this.ghDes.text = GameConfig.ErrorMsg.clientErrorMsg(10135)
        }
        this.joinBt.disabled = !t.AllowApply;
        this.ghMember.text = t.PlayerNum + "/" + t.MaxPlayerNum
    };
    n.prototype.renderList = function(e, t) {
        var i = this.listData[t];
        e.getChildByName("name").text = "公会:" + i.GuildName;
        e.getChildByName("boss").text = "会长:" + i.LeaderNick;
        e.getChildByName("member").text = i.PlayerNum + "/" + i.MaxPlayerNum
    };
    n.prototype.hideBt = function(e) {
        this.joinBt.visible = !e;
        this.createBt.visible = !e
    };
    n.prototype.onClosed = function() {
        BaseDialog.prototype.onClosed.call(this);
        i = null
    };
    var t = {};
    t.show = function(t) {
        WinUtils.showDialog(RES.guild, n,
        function(e) {
            e.isNeedDestroy = true;
            e.isClearRes = !t;
            i = e;
            i.hideBt(t);
            i.popup();
            GuildNet.GuildRankReq()
        })
    };
    t.initList = function(e) {
        if (i) i.initList(e)
    };
    t.hide = function(e) {
        if (e == undefined) {
            e = true
        }
        if (i) {
            i.isClearRes = e;
            i.close()
        }
    };
    t.isShow = function() {
        return i && i.displayedInStage
    };
    return t
} ();
var GhJoinListDialog = function() {
    function e() {
        e.super(this);
        this.joinList.vScrollBarSkin = "";
        this.joinList.selectEnable = true;
        this.joinList.renderHandler = new Laya.Handler(this, this.renderList);
        this.joinList.array = [];
        this.joinList.repeatY = 0;
        this.tip.visible = true
    }
    Laya.class(e, "JoinListDialogFun", ghJoinListDialogUI);
    var t = e.prototype;
    t.renderList = function(e, t) {
        e.initData(this.listData[t])
    };
    t.initList = function(e) {
        this.listData = e;
        this.tip.visible = e.length == 0;
        this.updateApplayNum(e.length);
        this.timer.frameOnce(2, this,
        function() {
            this.joinList.array = e;
            this.joinList.repeatY = e.length
        })
    };
    t.updateApplayNum = function(e) {
        this.applayNum = e;
        this.labNum.text = this.applayNum + "/" + GameConfig.getGHApplyMaxNum();
        this.labNum.visible = e ? true: false
    };
    t.onClosed = function() {
        BaseDialog.prototype.onClosed.call(this);
        n = null
    };
    var i = function(e) {
        function t() {
            t.super(this);
            this.init()
        }
        Laya.class(t, "guild.GhJoinListItem", e, "");
        var i = t.prototype;
        i.init = function() {
            this.agreeBt.on(Laya.Event.CLICK, this, this.onClick);
            this.refuseBt.on(Laya.Event.CLICK, this, this.onClick)
        };
        i.onClick = function(e) {
            switch (e.target) {
            case this.agreeBt:
                GuildNet.GuildProcessApplyReq({
                    OptType:
                    1,
                    ApplyId: this.applyId
                });
                break;
            case this.refuseBt:
                GuildNet.GuildProcessApplyReq({
                    OptType:
                    2,
                    ApplyId: this.applyId
                });
                break
            }
        };
        i.initData = function(e) {
            this.applyId = e.ApplyId;
            this.nickName.text = e.Nick;
            this.vipImg.skin = "resource/icon/vipLevel/vip" + e.VipLevel + ".png";
            this.headImg.skin = e.AvatarUrl ? e.AvatarUrl: "resource/head/" + e.AvatarID + ".png"
        };
        return t
    } (ghMemberJoinItemUI);
    var n = undefined;
    var s = {};
    s.show = function() {
        if (!n) n = new e;
        n.popup();
        GuildNet.GuildApplyListReq()
    };
    s.hide = function() {
        if (n) {
            n.close()
        }
    };
    s.initList = function(e) {
        if (n) {
            n.initList(e)
        }
    };
    s.removeItem = function(e) {
        if (n) {
            for (var t = 0; t < n.listData.length; t++) {
                if (n.listData[t].ApplyId == e) {
                    n.joinList.deleteItem(t);
                    GuildNet.GuildApplyListReq();
                    break
                }
            }
            if (n.joinList.array.length == 0) {
                n.tip.visible = true;
                EventBus.send(GuildNet.EventKey.GuildNewApplyReport, [false])
            }
        }
    };
    return s
} ();
var GhPutAndGet = function() {
    function e() {
        e.super(this)
    }
    Laya.class(e, "GhPutAndGet", ghPutAndGetDUI, "");
    var t = e.prototype;
    t.init = function() {
        this.type = "";
        this.targetId = 0;
        this.groupNum = 1;
        this.maxNum = 1;
        var a = this;
        this.on(Laya.Event.CLICK, this,
        function(e) {
            if (e.target && e.target.name) {
                var t = e.target.name;
                if (t == "btnOk") {
                    if (this.type == "put") {
                        var i = this.labNum.text * 1;
                        if (i) {
                            var n = "<font style='fontSize:20' color='#884f34'>本次存入数量:" + i + "<br></font>";
                            n += "<font style='fontSize:20' color='#884f34'>道具一旦存入，公会其他任意成员都可提取，确定要存入吗?</font>";
                            var s = GhMsgBox.getInst().setMsg(n, true, true);
                            s.submitCall = function() {
                                GuildNet.GuildCangkuItemSaveReq(a.targetId, a.labNum.text);
                                a.close()
                            };
                            s.popup()
                        } else {
                            MsgToast.show("数量不足!")
                        }
                    } else {
                        GuildNet.GuildCangkuItemGetReq(a.targetId, a.labNum.text)
                    }
                } else if (t == "btnDel") {
                    this.updateNum(0)
                } else if (t == "btnAdd") {
                    this.updateNum(1)
                }
            }
        });
        EventBus.on(GuildNet.EventKey.GuildCangkuRep, this, this.updateStore);
        GuildNet.GuildCangkuReq()
    };
    t.updateNum = function(e) {
        var t = this.labNum.text * 1;
        if (e) {
            t += this.groupNum;
            if (t > this.maxNum) {
                t -= this.groupNum;
                if (t >= this.groupNum) {
                    MsgToast.show("已达到最大数量")
                } else {
                    MsgToast.show(GameConfig.ErrorMsg.clientErrorMsg(10132))
                }
            }
        } else {
            t -= this.groupNum;
            t = Math.min(t, this.maxNum);
            if (t < 1) {
                t = 0;
                MsgToast.show("已达到最小数量")
            }
        }
        this.labNum.text = t
    };
    t.updateData = function(e, t) {
        this.type = t;
        var i = t == "get" ? false: true;
        this.zi_2.visible = i;
        this.zi_1.visible = !i;
        this.labTT.text = "本次" + (i ? "存入": "取出") + "数量";
        this.labNum.text = 0;
        if (e) {
            this.targetId = e.id;
            this.itemBg.skin = e.bg;
            this.itemIcon.skin = e.icon.skin;
            this.itemName.text = e.name;
            this.groupNum = e.groupNum;
            this.maxNum = e.num.value
        }
        return this
    };
    t.onClosed = function() {
        BaseDialog.prototype.onClosed.call(this);
        i = null
    };
    var i = null;
    e.getInst = function() {
        if (!i) {
            i = new e;
            i.init()
        }
        return i
    };
    return e
} ();
var GhMsgBox = function() {
    function e() {
        e.super(this);
        this.submitCall = null;
        this.closeCall = null;
        this.htmlDiv.style.lineHeight = 25;
        this.htmlDiv.style.width = 342;
        this.htmlDiv.style.textAlign = "center"
    }
    Laya.class(e, "GhMsgBox", ghMsgBoxUI, "");
    var t = e.prototype;
    t.init = function() {
        this.width = Game.UIWidth;
        this.height = Game.UIHeight;
        this.htmlDiv.style.lineHeight = 30;
        this.htmlDiv.style.width = 342
    };
    t.setMsg = function(e, t, i, n, s) {
        this.htmlDiv.innerHTML = e;
        this.btnSure.visible = t ? true: false;
        this.btnCancel.visible = i ? true: false;
        this.btnOk.visible = n ? true: false;
        this.btnNo.visible = s ? true: false;
        return this
    };
    t.onClosed = function(e) {
        if (e == "ok" || e == "sure") {
            this.submitCall && this.submitCall()
        } else if (e == "no" || e == "cancel") {
            this.closeCall && this.closeCall(e)
        }
        BaseDialog.prototype.onClosed.call(this);
        i = null
    };
    var i = null;
    e.getInst = function() {
        if (!i) {
            i = new e
        }
        return i
    };
    e.load = function(t) {
        WinUtils.showDialog(RES.guild, e,
        function(e) {
            e.isClearRes = false;
            t && t.call(this, e)
        })
    };
    return e
} ();
var GhInvite = function() {
    function e() {
        e.super(this);
        this.init()
    }
    Laya.class(e, "GhInvite", ghInviteUI, "");
    var t = e.prototype;
    t.init = function() {
        this.on(Laya.Event.CLICK, this,
        function(e) {
            if (!e.target) {
                return
            }
            var t = e.target.name;
            if (t == "btnInvite") {
                var i = this.ipt.text;
                if (i) {
                    GuildNet.GuildInviteReq(i);
                    this.close()
                } else {
                    MsgToast.show("请输入您要邀请玩家的编号")
                }
            }
        })
    };
    t.onClosed = function() {
        BaseDialog.prototype.onClosed.call(this);
        i = null
    };
    t.reset = function() {
        i = null
    };
    var i = null;
    e.getInst = function() {
        if (!i) {
            i = new e
        }
        return i
    };
    return e
} ();
var GhUserView = function() {
    function e() {
        e.super(this);
        this.init()
    }
    Laya.class(e, "guild.GhUserView", ghUserViewUI, "");
    var t = e.prototype;
    t.init = function() {
        this.userList.scrollBar.hide = true;
        this.userList.array = [];
        EventBus.on(GuildNet.EventKey.GuildMemberRep, this, this.updateList);
        this.userList.renderHandler = new Laya.Handler(this, this.listRender);
        GuildNet.GuildMemberReq()
    };
    t.updateList = function(e) {
        if (e && e.GuildMemberList) {
            var t = [],
            i = [],
            n = [];
            var s = e.GuildMemberList;
            this.tip.visible = s.length ? false: true;
            this.isLeader = false;
            for (var a = 0; a < s.length; a++) {
                var r = s[a];
                if (r && r.Honor) {
                    this.isLeader = Player.getUserId() == r.UserId ? true: false;
                    break
                }
            }
            for (var a = 0; a < s.length; a++) {
                var r = s[a];
                if (r) {
                    var o = {
                        uid: r.UserId,
                        head: r.AvatarUrl ? r.AvatarUrl: "resource/head/" + r.AvatarID + ".png",
                        vip: "resource/icon/vipLevel/vip" + r.VipLevel + ".png",
                        nick: r.Nick,
                        id: "编号:" + r.UserId,
                        status: r.Honor ? "会长": "会员",
                        state: r.IsOnline ? "在线": "离线",
                        btnOut: {
                            visible: r.Honor || !this.isLeader ? false: true
                        }
                    };
                    if (r.Honor) {
                        t.push(o)
                    } else if (r.IsOnline) {
                        i.push(o)
                    } else {
                        n.push(o)
                    }
                }
            }
            t = t.concat(i).concat(n);
            this.userList.array = t
        }
    };
    t.outUser = function(e) {
        if (e) {
            var t = MessageBox.show("确定要踢出该成员?");
            t.submitCall = function() {
                GuildNet.GuildGoToHellReq(e.uid)
            }
        }
    };
    t.listRender = function(e, t) {
        var i = e.getChildByName("btnOut");
        i.off(Laya.Event.CLICK, this, this.outUser);
        i.on(Laya.Event.CLICK, this, this.outUser, [e.dataSource])
    };
    t.reset = function() {
        EventBus.off(GuildNet.EventKey.GuildMemberRep, this, this.updateList)
    }
} ();
var HornInput = function() {
    function e() {
        e.super(this)
    }
    Laya.class(e, "HornInput", HornInputUI, "");
    var t = e.prototype;
    t.init = function() {
        this.isClearRes = false;
        this.btnSend.clickHandler = new Laya.Handler(this,
        function() {
            var e = this.ipt.text;
            if (e.length > 30) {
                MsgToast.show("最长可输入30个汉字奥~")
            } else if (e.length == 0) {
                MsgToast.show("请输入信息再发送")
            } else {
                if (e.trim) {
                    e = e.trim()
                }
                Request.worldChatReq(1, e);
                this.close()
            }
        })
    };
    t.reset = function() {
        i = null
    };
    var i = null;
    e.show = function() {
        WinUtils.showDialog(RES.loadTaskList.chatSystem, e,
        function(e) {
            e.isClearRes = false;
            e.popup();
            i = e
        })
    };
    e.ChatRep = function(e) {
        if (e.Tag) {
            Request.package.getListReq()
        }
    };
    return e
} ();
function incomeRemind(e) {
    var t = null;
    if (Player.getOpenFcm()) {
        if (Player.getFcmTime() >= 180 && Player.getFcmTime() < 300) {
            t = MessageBox.show(GameConfig.ErrorMsg.clientErrorMsg(10047));
            t.submitCall = function() {
                e && e()
            };
            t.closeCall = function() {
                PreventIndulge.show(1)
            }
        } else if (Player.getFcmTime() >= 300) {
            t = MessageBox.show(GameConfig.ErrorMsg.clientErrorMsg(10048));
            t.submitCall = function() {
                e && e()
            };
            t.closeCall = function() {
                PreventIndulge.show(1)
            }
        } else {
            e && e()
        }
    } else {
        e && e()
    }
    t = null
}
function Page_push(e) {
    if (SendUserShop.isShow) return;
    if (Player.getGold() < 10) {
        if (Player.getAlms() > 0) {
            Alms.show(e, 0, 90)
        } else {
            PoChanHandler()
        }
    }
    if (Game.interFacePush.signInCenterWay > 0) {
        if (Game.disablePagePush || Game.state.get() > Game.sceneConfig.sceneID.gameCenter) {
            return
        }
        if (Game.onMiniGame && !Game.onByteBeat && !Game.onBaiDuGame && !Game.onQQ()) {
            var t = Laya.LocalStorage.getItem("entranceGuidance");
            if (t) {
                isHasG()
            } else {
                Laya.LocalStorage.setItem("entranceGuidance", "true");
                EntranceGuidance.show(true);
                EntranceGuidance.closed = function() {
                    isHasG()
                }
            }
        } else {
            isHasG()
        }
        if (Player.getIsBackWithGuide()) GameCenter.showExchangeTip(Game.TipExchange.redPackage)
    } else {
        var i = (Game.bigVersion / 1e3).toFixed(1) + "." + Game.smallVersion + "." + Game.channel.cfg.cps;
        if (Player.getUserVersionFun() !== i) {
            Announcement.show();
            Announcement.closedCall = function() {
                openRealFun();
                openRealFunSecond();
                openActivity();
                Announcement.closedCall = null
            }
        } else {
            openRealFun();
            openRealFunSecond();
            openActivity()
        }
    }
}
function isHasG() {
    firstGiftAndPlay()
}
function firstGiftAndPlay() {
    var e = parseInt(Laya.LocalStorage.getItem("OncePush")),
    t = true;
    var i = (new Date).getFullYear(),
    n = (new Date).getMonth() + 1,
    s = (new Date).getDate(),
    a = new Date(i, n, s).getTime();
    if (e) {
        if (a === e) {
            t = false
        } else {
            t = true;
            Laya.LocalStorage.setItem("OncePush", a.toString())
        }
    } else {
        t = true;
        Laya.LocalStorage.setItem("OncePush", a.toString())
    }
    console.log("firstGiftAndPlay");
    if (t) {
        console.log("firstGiftAndPlay_tan");
        if (!Player.getFirstGift()) {
            FirstRecharge.show()
        } else {
            var r = Player.getShopCW(),
            o = null;
            if (r !== null) {
                o = r.split("|");
                if (o.length !== 3) {
                    var l = Package.getDataById(Game.item.SuoDing),
                    h = Package.getDataById(Game.item.BinDong),
                    u = Package.getDataById(Game.item.KuangBao);
                    if (l.num < 20 || h.num < 20 || u.num < 10) {
                        PlayPackage.show()
                    }
                }
            }
        }
    }
}
function openRealFun() {
    if (Game.onMiniGame) {
        if (DayLoginShare.isShowDayLoginShare()) {
            DayLoginShare.show();
            DayLoginShare.closed = function() {
                DayLoginShare.closed = null
            }
        } else {}
    } else {
        if (Player.OpenRedActivity() && DayLoginShare.isShowDayLoginShare()) {
            RedPackageGet.show(function() {})
        } else {}
    }
}
var LuckyTurntableDefFn = {
    CloseCall: function(e) {
        if (e === "bg_close") {}
    },
    GetWardCall: function() {}
};
function LuckyTurntableShowFn() {
    LuckyTurntable.show(LuckyTurntableDefFn.CloseCall, LuckyTurntableDefFn.GetWardCall)
}
function openActivity(t) {
    if (Player.getActRed() == 1) {
        var e = Laya.LocalStorage.getItem("yxl_actDayLogin");
        if (Game.onMiniGame) {
            if (e == Utils.getDateStr()) {
                if (Activity.unShowDayLogin()) {
                    if (t) t();
                    return
                }
            }
        }
        Activity.show(function(e) {
            if (t) t(e)
        },
        true)
    } else {
        if (t) t()
    }
    openDingyue()
}
function openDingyue() {
    if (Game.interFacePush.signInCenterWay <= 0) {
        if (Player.getWxSubStatus() == 1 && Game.channel.sceneId == 1014) {
            if (Player.getShowNewSevenDay()) {
                NewPlayerGift.show()
            } else {
                LoginGift.show()
            }
        }
    }
}
function openRealFunSecond() {
    if (Player.getOpenRealName()) {
        if (Player.getSMRZ()) {
            if (Player.getDrawTimes() > 0 && Player.TurntableActivitySwitch()) {
                LuckyTurntableShowFn()
            } else {}
        } else {
            var e = Certificate.popup();
            e.zOrder = 10;
            e.closeCall = function() {
                if (e) {
                    e.reset()
                }
                e = null
            };
            if (Player.getDrawTimes() > 0) {
                LuckyTurntableShowFn()
            } else {}
        }
    } else {
        if (Player.getDrawTimes() > 0 && Player.TurntableActivitySwitch()) {
            LuckyTurntableShowFn()
        } else {}
        openActivity()
    }
}
function BuyGoodsChain(t, i) {
    if (!Player.getFirstGift()) {
        FirstRecharge.show(function(e) {
            if (e == "side" || e == "close") {
                t && t(true, i)
            }
        })
    } else if (Player.isSpecialGiftCanBuy()) {
        SpecialGiftDialog.show(function(e) {
            if (e == "side" || e == "close") {
                t && t(true, i)
            }
        })
    } else {
        var e = Player.getShopCW();
        if (e) {
            var n = e.split("|");
            if (n.length < 3) {
                PlayPackage.show(function(e) {
                    if (e == "side" || e == "close") {
                        t && t(true, i)
                    }
                })
            } else {
                t && t(true, i)
            }
        } else {
            PlayPackage.show(function(e) {
                if (e == "side" || e == "close") {
                    t && t(true, i)
                }
            })
        }
    }
}
var PoChanFn = {
    show: function() {
        if (Game.showShare()) {
            AlmsShare2.show()
        } else {
            AlmsShare.show()
        }
    }
};
function PoChanDialogShow() {
    if (Game.miniGameIOS()) {
        return
    }
    if (!Player.getFirstGiftOneSG() && !Player.getFirstGift() && Player.getPayRmb() == 0 && Player.getFirstGiftOne()) {
        BankruptGift.show()
    } else {
        if (!Player.getFirstGiftOneSG() && Player.getFirstGiftOne()) {
            FirstBuyToOneNew.show(function(e) {
                if (e == "side" || e == "close") {
                    ShopMall.show(true)
                }
            },
            true)
        } else {
            ShopMall.show()
        }
    }
}
function PoChanHandler() {
    if (Player.getAlms() > 0) {
        PoChanFn.show()
    } else {
        PoChanDialogShow()
    }
}
var StartView = function() {
    var i = "StartViewUI";
    var t = false,
    n = false;
    function s() {
        s.super(this)
    }
    Laya.class(s, "StartView", StartViewUI, "");
    s.prototype.onClickFn = function() {
        this._onClickFnFlag_ = true;
        var e = Laya.TimeLine.to(WinUtils.getSaveUI(i).startBtn, {
            scaleX: .8,
            scaleY: .8
        },
        100).to(WinUtils.getSaveUI(i).startBtn, {
            scaleX: 1,
            scaleY: 1
        },
        100);
        e.play(0, false);
        if (!WinUtils.getSaveUI(i).startBtn._cd_) {
            WinUtils.getSaveUI(i).startBtn._cd_ = true;
            Main.wxAuth = true;
            Waiting.show();
            Main.login();
            WinUtils.getSaveUI(i).timer.once(300, WinUtils.getSaveUI(i),
            function() {
                WinUtils.getSaveUI(i).startBtn._cd_ = false
            })
        }
    };
    s.prototype.init = function() {
        this.bg.size(this.width, this.height);
        if (Game.onMiniGame && !Game.onQQ()) {
            this.kefu.visible = true;
            this.startBtn.visible = false;
            this.btnLight.visible = false;
            this.on(Laya.Event.CLICK, this,
            function(e) {
                if (e.target && e.target.name) {
                    var t = e.target.name;
                    if (t == "kefu") {
                        if (wx && wx.openCustomerServiceConversation) {
                            wx.openCustomerServiceConversation()
                        }
                    } else if (t == "refresh") {}
                }
            })
        }
        if (Channel && Channel.cfg.cps == Game.ChannelConstants.qiTian) {
            this.logo.visible = false;
            this.logo.skin = "resource/startView/logo_56.png";
            if (this.bg) {
                this.bg.skin = "resource/startView/bg_56.jpg"
            }
            this.timer.once(1e3, this,
            function() {
                this.logo.visible = true
            })
        }
    };
    var a = {
        show: function() {
            t = false,
            n = false;
            var e = ["resource/startView/stars.png", "resource/startView/bg.jpg", "resource/startView/shuaxin.png", "resource/startView/logo.png", "resource/startView/fx-xxsg_00000.png", "resource/startView/kefu.png"];
            WinUtils.showView(e, i, Game.UIRoot, s,
            function() {
                if (Game.isApp) {
                    WinUtils.getSaveUI(i).timer.once(600, WinUtils.getSaveUI(i),
                    function() {
                        if (window.hideAppCover) {
                            window.hideAppCover()
                        }
                        n = true;
                        if (t) {
                            a.hide()
                        }
                    })
                }
                if (Channel && Channel.showStartGameBtn && Channel.login) {
                    if (!Game.onMiniGame) {
                        WinUtils.getSaveUI(i).startBtn._cd_ = false;
                        WinUtils.getSaveUI(i).startBtn.on(Laya.Event.CLICK, WinUtils.getSaveUI(i),
                        function() {
                            WinUtils.getSaveUI(i).onClickFn()
                        })
                    }
                }
            },
            {
                isWindow: true,
                isFullScene: true
            })
        },
        showBtn: function() {
            if (WinUtils.getSaveUI(i)) {
                WinUtils.getSaveUI(i).startBtn.visible = true;
                WinUtils.getSaveUI(i).btnLight.visible = true;
                n = true;
                if (Game.onMiniGame) {
                    Channel.yxl_wx_AuthUserInfo(function(e) {
                        if (e) {
                            Main.wxAuth = true;
                            Main.login()
                        } else {
                            if (Game.onQQ()) {
                                Main.login()
                            } else {
                                WinUtils.getSaveUI(i).startBtn.visible = true;
                                WinUtils.getSaveUI(i).btnLight.visible = true;
                                if (!Game.AuthSwitch) {
                                    if (WinUtils.getSaveUI(i) && !WinUtils.getSaveUI(i)._onClickFnFlag_) {
                                        WinUtils.getSaveUI(i).onClickFn()
                                    }
                                }
                            }
                        }
                    })
                } else {
                    WinUtils.getSaveUI(i).startBtn._cd_ = false;
                    WinUtils.getSaveUI(i).startBtn.on(Laya.Event.CLICK, WinUtils.getSaveUI(i),
                    function() {
                        WinUtils.getSaveUI(i).onClickFn()
                    });
                    WinUtils.getSaveUI(i).timer.once(2e3, this,
                    function() {
                        if (WinUtils.getSaveUI(i) && !WinUtils.getSaveUI(i)._onClickFnFlag_) {
                            WinUtils.getSaveUI(i).onClickFn()
                        }
                    })
                }
            }
        },
        hide: function() {
            t = true;
            if (!n) {
                return
            }
            if (WinUtils.getSaveUI(i)) {
                Laya.Tween.to(WinUtils.getSaveUI(i), {
                    alpha: 0
                },
                300, null, Laya.Handler.create(this,
                function() {
                    if (WinUtils.getSaveUI(i).ani1) {
                        WinUtils.getSaveUI(i).ani1.stop();
                        WinUtils.getSaveUI(i).ani1.index = 0
                    }
                    WinUtils.getSaveUI(i).removeSelf()
                }))
            }
            Waiting.hide()
        },
        hideStartBtn: function() {
            if (WinUtils.getSaveUI(i) && WinUtils.getSaveUI(i).startBtn) {
                WinUtils.getSaveUI(i).startBtn.visible = false;
                WinUtils.getSaveUI(i).btnLight.visible = false;
                if (WinUtils.getSaveUI(i).ani1) {
                    WinUtils.getSaveUI(i).ani1.stop();
                    WinUtils.getSaveUI(i).ani1.index = 0
                }
            }
        },
        showTapAni: function(e) {
            if (WinUtils.getSaveUI(i) && WinUtils.getSaveUI(i).startBtn) {
                var t = Laya.TimeLine.to(WinUtils.getSaveUI(i).startBtn, {
                    scaleX: .8,
                    scaleY: .8
                },
                100).to(WinUtils.getSaveUI(i).startBtn, {
                    scaleX: 1,
                    scaleY: 1
                },
                100);
                t.on(Laya.Event.COMPLETE, this,
                function() {
                    e && e()
                });
                t.play(0, false)
            }
        }
    };
    return a
} ();
var NoviceGuidanceOnMinGame = function() {
    var s = true;
    var t = false;
    var i = null;
    var n = 180;
    var a = "NoviceGuidanceOnMinGameUI",
    r = null,
    o = null,
    l = null;
    var h = 0;
    var u = -1;
    var c = {
        Delay: 0,
        FishId: 99,
        FishScene: 0,
        Id: -2,
        PathId: 0,
        RunTime: 0,
        SceneSeq: 28,
        StartTime: 52,
        TideSeq: 29
    };
    var f = {
        Delay: 0,
        FishId: 203,
        FishScene: 0,
        Id: -1,
        PathId: 0,
        RunTime: 0,
        SceneSeq: 28,
        StartTime: 52,
        TideSeq: 29
    };
    var e = {
        Delay: 0,
        FishId: 400,
        FishScene: 0,
        Id: -2,
        PathId: 0,
        RunTime: 0,
        SceneSeq: 28,
        StartTime: 52,
        TideSeq: 29
    };
    var d = null,
    g = null;
    function p() {
        p.super(this)
    }
    Laya.class(p, a, NoviceGuidanceOnMinGameUI, "");
    var _ = null;
    var m = p.prototype;
    m.initData = function(e) {
        i = this;
        this.bg.graphics.clear();
        this.bg.graphics.drawRect((Game.UIWidth - Game.ViewWidth) / 2, (Game.UIHeight - Game.ViewHeight) / 2, Game.ViewWidth, Game.ViewHeight, "#000000");
        this.initEvent();
        this.off(Laya.Event.def_LeaveFishScene, this, this.exit);
        this.on(Laya.Event.def_LeaveFishScene, this, this.exit);
        this.interactionArea.blendMode = "destination-out";
        if (!this.hitArea) {
            g = new Laya.HitArea;
            g.hit.drawRect((Game.UIWidth - Game.ViewWidth) / 2, (Game.UIHeight - Game.ViewHeight) / 2, Game.ViewWidth, Game.ViewHeight, "#ffffff");
            this.hitArea = g;
            this.warpBox.hitArea = g
        }
        if (S.stepNum() == 0) {
            t = true;
            this.welcomeAnim(e)
        } else {
            if (S.stepNum() < 5) {
                this.showLockish(e)
            }
        }
        UIConfig.closeDialogOnSide = false
    };
    m.windowResize = function() {
        BaseView.prototype.windowResize.call(this);
        this.bg.graphics.clear();
        this.bg.graphics.drawRect((Game.UIWidth - Game.ViewWidth) / 2, (Game.UIHeight - Game.ViewHeight) / 2, Game.ViewWidth, Game.ViewHeight, "#000000")
    };
    m.welcomeAnim = function(e) {
        this.timer.once(600, this,
        function() {
            this.welcomeBox.visible = false;
            this.bg.visible = false;
            this.timer.once(800, this,
            function() {
                this.bg.visible = true;
                this.fontBox.visible = true;
                this.showLockish(e,
                function() {
                    S.setStep(1);
                    ActionEventReport.report(ActionEventReport.actionIndex.ID1040);
                    ActionReport.addLog(ActionReport.actionIndex["XSYD_step_1"])
                })
            })
        })
    };
    m.createText = function(e, t) {
        var i = new Laya.Text;
        i.text = e;
        i.bold = true;
        i.color = "#0463AD";
        i.font = "Microsoft YaHei";
        i.fontSize = 30;
        this.welcomeTxtBox.addChild(i);
        var n = t * i.width + t * 2;
        i.x = n;
        return i
    };
    m.display = function() {};
    m.unDisplay = function() {
        this.timer.clear(this, this.fishUpdate);
        this.timer.clearAll(this);
        this.reset();
        ChangeMulTip.showTip();
        if (_) {
            _.removeSelf();
            _ = null
        }
    };
    m.reset = function() {
        Player.setNewPlayer(0);
        s = true;
        d = null;
        g = null;
        if (l && l[e.Id]) {
            delete l[e.Id]
        }
        if (o && o[e.Id]) {
            delete o[e.Id]
        }
        n = 180;
        NoviceGuidanceOnMinGame.msg.AddGold = n;
        UIConfig.closeDialogOnSide = true
    };
    m.showLockish = function(e, t) {
        if (f == e) {
            this.fontBox.visible = false
        } else {
            this.fontBox.visible = true
        }
        this.createFish(e,
        function() {
            y();
            t && t()
        }.bind(this))
    };
    m.createFish = function(e, t) {
        var i = this;
        if (e) {
            Resource.checkLoaded = false;
            var n = FishModelCfg[e.FishId];
            if (n) {
                var s = n.atlas;
                Resource.load(["res/atlas/resource/newFish/type_" + s + ".atlas"],
                function() {
                    Fish.createFramesByType(e.FishId);
                    d = Fish.getFishByType(e);
                    d.TideSeq = false;
                    d.x = Game.UIWidth / 2 + 35;
                    d.y = Game.UIHeight / 2 - 35;
                    d.sockLightBox = i.sockLightBox;
                    if (d.ableLock) {
                        d.addLockSight();
                        l[e.Id] = d;
                        d.showLockSight();
                        d.lockLight.pos(d.x, d.y)
                    }
                    o[e.Id] = d;
                    d.isLocked = true;
                    i.showFish();
                    t && t()
                })
            }
        }
    };
    m.showFish = function() {
        this.mouseEnabled = true;
        if (h != 5 && r) {
            r.addChild(d);
            r.visible = true;
            this.timer.clear(this, this.fishUpdate);
            this.timer.frameLoop(1, this, this.fishUpdate)
        }
        if (h != 3 && h != 4) {
            this.drawHitCircle(Game.UIWidth / 2 + 35, Game.UIHeight / 2 - 45, 80);
            NoviceGuidanceOnMinGame.showMask()
        }
    };
    m.drawHitRect = function(e, t, i, n) {
        this.interactionArea.graphics.clear();
        this.hitArea.unHit.clear();
        this.hitArea.unHit.drawRect(e, t, i, n, "#000000");
        this.interactionArea.graphics.drawRect((Game.UIWidth - Game.ViewWidth) / 2, (Game.UIHeight - Game.ViewHeight) / 2, Game.ViewWidth, Game.ViewHeight, "#000000");
        this.showFinger(e - i / 2, t - n / 2)
    };
    m.drawHitCircle = function(e, t, i) {
        this.warpBox.hitArea.unHit.clear();
        this.warpBox.hitArea.unHit.drawCircle(e, t, i, "#000000");
        this.interactionArea.graphics.clear();
        this.interactionArea.graphics.drawCircle(e, t, i, "#000000");
        this.showFinger(e, t)
    };
    m.fishUpdate = function() {
        if (d) {
            d.update()
        }
    };
    m.fishDead = function(e, t) {
        if (u >= 0) {
            u++;
            if (u < 6) return
        }
        this.timer.clear(this, this.fishUpdate);
        this.bg.visible = false;
        var i = {
            AddGold: n,
            CritMul: 0,
            Drops: [],
            FishId: t,
            FishMul: 0,
            Fishids: [],
            MoreType: 0,
            Gold: Player.getGold(),
            UserId: e
        };
        FishScene.ReportCatchFish(i);
        FishScene.delFishMap(t);
        if (l[t]) {
            delete l[t]
        }
        if (o[t]) {
            delete o[t]
        }
        this.hitArea = g;
        this.fontBox.visible = false;
        this.removeMask();
        switch (S.stepNum()) {
        case 1:
            this.timer.once(1e4, this,
            function() {
                this.fontBox.visible = true;
                this.showAddMulTip()
            });
            break;
        case 2:
            ActionEventReport.report(ActionEventReport.actionIndex.ID1041);
            if (Player.OpenRedActivity() && !Player.IsAlreadyRedDraw() && Player.IsOpenRedDrawNewGuide()) {
                WinUtils.getSaveUI(a).visible = false;
                NoviceGuidanceOnMinGame.hideMask();
                y();
                GuidanceRedActivity.show(function() {
                    WinUtils.getSaveUI(a).visible = true;
                    NoviceGuidanceOnMinGame.showMask();
                    Laya.timer.once(2500, this,
                    function() {
                        WinUtils.getSaveUI(a).skillGuid()
                    })
                }.bind(this))
            } else {
                Laya.timer.once(2500, this,
                function() {
                    WinUtils.getSaveUI(a).skillGuid()
                })
            }
            break;
        case 3:
            FishScene.cancleLock();
            u = -1;
            NoviceGuidanceOnMinGame.hideMask();
            Request.GetNewPlayerMissileGoldReq();
            break
        }
    };
    m.showDaoDan = function(i) {
        S.setStep(4);
        ActionEventReport.report(ActionEventReport.actionIndex.ID1048);
        GetNewDaoDan.show(function() {
            var t = this;
            this.showLockish(f,
            function() {
                var e = {
                    AddGold: i,
                    CritMul: 1,
                    FishId: -1,
                    Gold: Player.getGold() + i,
                    ItemId: "000",
                    UserId: Player.getUserId()
                };
                FishScene.ReportUseDantouItem(e);
                S.setStep(0);
                t.over();
                t.timer.clear(t, t.fishUpdate);
                FishScene.showPaoDanTip();
                ActionEventReport.report(ActionEventReport.actionIndex.ID1049)
            })
        }.bind(this))
    };
    m.showAddMulTip = function() {
        y();
        this.drawHitCircle(Game.UIWidth - 256, Game.UIHeight - 20, 40);
        if (this.txt_first1) {
            this.txt_first1.removeSelf()
        }
        if (this.txt_second1) {
            this.txt_second1.visible = true
        }
        S.setStep(2);
        ActionEventReport.report(ActionEventReport.actionIndex.ID1041);
        NoviceGuidanceOnMinGame.hideMask()
    };
    m.showExchangeBtnTip = function() {
        y();
        s = false;
        if (this.txt_first) {
            this.txt_first.removeSelf()
        }
        if (this.txt_second) {
            this.txt_second.visible = true
        }
        this.txt_four.visible = false;
        this.txt_four1.visible = false;
        this.txt_first1.visible = false;
        this.fontBox.visible = true;
        var e = WinUtils.getSaveUI(FishScene.SKIN_NAME);
        var t = (Game.UIWidth - e.width) / 2;
        var i = 204;
        var n = 45 + t;
        this.drawHitCircle(n, i, 50);
        NoviceGuidanceOnMinGame.hideMask()
    };
    m.showFinger = function(e, t) {
        this.bg.visible = true;
        if (this.fingerFx) {
            this.fingerFx.pos(e, t);
            this.fingerFx.visible = true;
            this.fingerFx.play(0, true)
        }
    };
    m.hideFinger = function() {
        if (this.fingerFx) {
            this.fingerFx.visible = false;
            this.fingerFx.stop()
        }
    };
    m.showExchangeJuanTip = function() {
        this.fontBox.visible = false;
        if (this.sockLightBox) {
            this.sockLightBox.removeSelf()
        }
        this.drawHitRect(178, 187, 194, 262)
    };
    m.showSubmitExchange = function() {
        this.drawHitRect(Game.UIWidth / 2 - 240, 140, 480, 350);
        s = true
    };
    m.removeMask = function() {
        this.bg.visible = false;
        this.drawHitRect(0, 0, Game.UIWidth, Game.UIHeight);
        this.hideFinger()
    };
    m.over = function() {
        this.bg.visible = false;
        this.fontBox.visible = false;
        if (this) {
            this.removeSelf()
        }
    };
    m.exit = function() {
        this.removeSelf()
    };
    function v(e) {
        if (Game.state.get() >= Game.sceneConfig.sceneID.gameCenter) {
            var t = FishScene.getCurrentCannon();
            if (t) {
                t.MouseEventTarget = "fishBox";
                t.fire(e);
                if (i) {
                    i.hideFinger()
                }
            }
        }
    }
    function y() {
        if (Game.state.get() >= Game.sceneConfig.sceneID.gameCenter) {
            var e = FishScene.getCurrentCannon();
            if (e) {
                e.stop()
            }
        }
    }
    m.skillGuid = function() {
        Laya.timer.once(1e3, this,
        function() {
            if (S.stepNum() == 2) {
                y();
                this.fontBox.visible = true;
                this.txt_third.visible = false;
                this.txt_four.visible = true;
                this.txt_four1.visible = false;
                this.drawHitCircle(Game.UIWidth / 2 - 80, Game.UIHeight - 50, 50);
                this.initData(c);
                S.setStep(3);
                NoviceGuidanceOnMinGame.hideMask()
            }
        })
    };
    function I() {
        var e = FishScene.getCurrentCannon();
        var t = FishScene.getFishScene();
        if (e && d && d._displayedInStage && WinUtils.getSaveUI(a) && t) {
            e.setLockedTarget(d, t.sockLightBox);
            if (d.id == c.Id && h == 3) {
                ActionEventReport.report(ActionEventReport.actionIndex.ID1047)
            }
        }
    }
    var S = {
        msg: {
            AddGold: n,
            CritMul: 0,
            Drops: [],
            FishId: -1,
            FishMul: 0,
            Fishids: [],
            MoreType: 0,
            UserId: 0
        },
        showMask: function() {
            if (!_) {
                _ = new Laya.Sprite;
                _.size(Game.ViewWidth, Game.ViewHeight);
                _.pos(0, 0);
                _.name = "YDMask";
                _.mouseEnabled = true;
                _.mouseThrough = false;
                _.on(Laya.Event.CLICK, this, I);
                _.on(Laya.Event.MOUSE_DOWN, this, v, [false]);
                _.on(Laya.Event.MOUSE_UP, this, y)
            }
            _.visible = true;
            Game.TipRoot.addChild(_)
        },
        hideMask: function() {
            if (_) {
                _.visible = false
            }
        },
        hideClickArea: function(e) {
            if (WinUtils.getSaveUI(a)) {
                if (e) {
                    WinUtils.getSaveUI(a).removeMask()
                } else {
                    if (WinUtils.getSaveUI(a) && WinUtils.getSaveUI(a).hitArea && WinUtils.getSaveUI(a).interactionArea) {
                        WinUtils.getSaveUI(a).hitArea.unHit.clear();
                        WinUtils.getSaveUI(a).interactionArea.graphics.clear()
                    }
                }
            }
        },
        show: function(t, i, n) {
            Waiting.show();
            WinUtils.showView(RES.loadTaskList.newPlayerGuid, a, Game.TipRoot, p,
            function(e) {
                r = t;
                o = i;
                l = n;
                e.initData(f);
                Waiting.hide()
            },
            {
                isWindow: true
            })
        },
        hide: function() {
            if (WinUtils.getSaveUI(a)) {
                WinUtils.getSaveUI(a).removeSelf()
            }
        },
        fishDead: function(e, t) {
            if (S.stepNum() == 2) {
                ActionReport.addLog(ActionReport.actionIndex["XSYD_step_3"])
            } else if (S.stepNum() == 3) {
                ActionReport.addLog(ActionReport.actionIndex["XSYD_step_5"])
            }
            if (WinUtils.getSaveUI(a)) {
                WinUtils.getSaveUI(a).fishDead(e, t)
            }
        },
        firstFun: function() {
            ActionReport.addLog(ActionReport.actionIndex["XSYD_step_2"]);
            if (WinUtils.getSaveUI(a) && S.stepNum() == 2) {
                n = 360;
                var e = WinUtils.getSaveUI(a).txt_second1;
                var t = WinUtils.getSaveUI(a).txt_third;
                if (t && e && !t.visible) {
                    WinUtils.getSaveUI(a).initData(f);
                    if (e) {
                        e.removeSelf()
                    }
                    t.visible = true
                }
            }
        },
        fourthStep: function() {
            if (WinUtils.getSaveUI(a)) {
                WinUtils.getSaveUI(a).showSubmitExchange()
            }
        },
        skillStep: function() {
            ActionReport.addLog(ActionReport.actionIndex["XSYD_step_4"]);
            var e = WinUtils.getSaveUI(a);
            if (e && h && S.stepNum() == 3 && !e.hasCreateFish) {
                e.drawHitCircle(Game.UIWidth / 2 + 40, Game.UIHeight / 2 - 38, 100);
                e.txt_four.visible = false;
                e.txt_four1.visible = true;
                NoviceGuidanceOnMinGame.showMask();
                e.hasCreateFish = true;
                return true
            }
            return false
        },
        showDaoDan: function(e) {
            if (WinUtils.getSaveUI(a)) {
                WinUtils.getSaveUI(a).showDaoDan(e)
            }
        },
        stepNum: function() {
            return h
        },
        setStep: function(e) {
            h = e;
            if (e == 3) u = 0;
            else u = -1
        },
        isCanPopup: function() {
            return s
        },
        isGuidOver: function() {
            return t
        },
        setGuidOver: function(e) {
            t = e
        },
        exit: function() {
            if (WinUtils.getSaveUI(a)) {
                WinUtils.getSaveUI(a).exit()
            }
        }
    };
    return S
} ();
var LoadingView = function() {
    var e = ["锁定和冰冻技能组合，可以让您捕鱼更有效率", "使用导弹可以获得大量金币噢", "幸运抽奖 免费拿奖券"];
    function i() {
        i.super(this);
        this.initBase("LoadingViewFn", undefined, {
            isFullScene: true,
            isWindow: true,
            needFitViews: [this.bg, this.bgColorBox]
        });
        this.isNeedDestroy = false
    }
    Laya.class(i, "LoadingViewFn", loadingViewUI, "");
    var t = i.prototype;
    t.init = function() {
        this.initEvent();
        Adapter.fitView(this, this.bg);
        this.zOrder = 999;
        this.timer.loop(2e3, this, this.onLoop);
        this.versionNumberTxt.text = "当前版本:" + (Game.bigVersion / 1e3).toFixed(1) + "." + Game.smallVersion + "." + Game.channel.cfg.cps;
        this.progress.value = 0;
        this.on(Laya.Event.CLICK, this,
        function(e) {
            if (e.target && e.target.name) {
                var t = e.target.name;
                if (t == "kefu") {
                    if (Game.onMiniGame) {
                        if (wx && wx.openCustomerServiceConversation) {
                            wx.openCustomerServiceConversation()
                        }
                    }
                } else if (t == "refresh") {}
            }
        });
        if (Channel) {
            if (this.logo) {
                if (Channel.cfg.cps == Game.ChannelConstants.taiWanHaiMeng) {
                    this.logo.skin = "resource/loading/logo_2.png"
                } else if (Channel.cfg.cps == Game.ChannelConstants.qiTian) {
                    this.logo.visible = false;
                    this.logo.skin = "resource/loading/logo_56.png";
                    if (this.bg) {
                        this.bg.skin = "resource/bg_main_56.jpg"
                    }
                    this.timer.once(1e3, this,
                    function() {
                        this.logo.visible = true
                    })
                }
            }
        }
        if (Game.onMiniGame && !Game.onQQ()) {
            this.kefu.visible = true
        }
    };
    t.onLoop = function() {
        this.tipsTxt.text = e[Math.floor(Math.random() * e.length)]
    };
    t.reset = function() {
        this.removeSelf();
        n = null
    };
    t.display = function() {
        this.progress.value = 0;
        this.loadClip.value = "0%";
        s.display && s.display()
    };
    t.unDisplay = function() {
        s.unDisplay && s.unDisplay()
    };
    var n = null;
    var s = {
        display: null,
        unDisplay: null,
        init: function() {},
        show: function(e, t) {
            if (!n) {
                n = new i
            } else {
                n.windowResize()
            }
            n.progress.value = 0;
            Game.TipRoot.addChild(n);
            if (e) {
                var e = Laya.Tween.to(n.progress, {
                    value: 1
                },
                e, null, Laya.Handler.create(this,
                function() {
                    t && t()
                }));
                e.update = new Laya.Handler(this,
                function(e) {
                    var e = n.progress.value;
                    e = Math.floor(e * 100);
                    n.loadClip.value = e + "%"
                })
            }
        },
        remove: function() {
            if (n) {
                n.timer.clear(n, n.onLoop);
                n.timer.once(400, n, n.removeSelf)
            }
        },
        updateValue: function(e) {
            if (n) {
                if (!n.progress.visible) {
                    n.progress.visible = true
                }
                n.loadClip.value = e + "%";
                n.progress.value = e / 100
            }
        }
    };
    return s
} ();
var GuidanceRedActivity = function() {
    var n = 0;
    function i() {
        i.super(this)
    }
    Laya.class(i, "GuidanceRedActivity", GuidanceRedActivityUI);
    var e = i.prototype;
    e.init = function() {
        this.contain.on(Laya.Event.CLICK, this, this.clickEvent);
        this.contain.size(Game.ViewWidth, Game.ViewHeight);
        this.contain.pos(0, 0);
        this.maskArea = new Laya.Sprite;
        this.maskArea.alpha = .7;
        this.maskArea.graphics.drawRect(0, 0, Game.ViewWidth, Game.ViewHeight, "#000000");
        this.contain.addChild(this.maskArea);
        this.interactionArea = new Laya.Sprite;
        this.interactionArea.blendMode = "destination-out";
        this.contain.addChild(this.interactionArea);
        this.hitArea = new Laya.HitArea;
        this.hitArea.hit.drawRect(0, 0, Game.ViewWidth, Game.ViewHeight, "#000000");
        this.contain.hitArea = this.hitArea;
        this.contain.mouseEnabled = true;
        this.needText1.text = "只需" + QTTRedPkgT.getFcmul() + "发即可抽取红包了";
        var e = GameConfig.getCfgRedPositionById(3);
        this.needText3.text = "土豪红包最多可抽取" + Utils.fenToYuan(e.Reward[e.Reward.length - 1].itemNum) + "元红包哦";
        var t = GameConfig.getCfgRedPositionById(1);
        this.needText5.text = "抽中了普通红包中最大的" + Utils.fenToYuan(t.Reward[t.Reward.length - 1].itemNum, true) + "元红包";
        this.timer.frameOnce(1, this, this.nextStep);
        EventBus.on(EventConfig.GuidanceRedActivity.GO_NEXT_STEP, this, this.goNext)
    };
    e.goNext = function(e) {
        if (n > e) return;
        n = e;
        this.nextStep()
    };
    e.clickEvent = function() {
        var e = Game.UIWidth;
        if (Game.ViewWidth <= Game.UIMaxWidth) e = Game.ViewWidth;
        else e = Game.UIMaxWidth;
        e -= 160;
        var t = (Game.ViewWidth - e) / 2;
        var i = (Game.ViewHeight - Game.UIHeight) / 2;
        switch (n) {
        case 1:
            this.fontBox.visible = false;
            this.maskArea.visible = false;
            this.fingerFx.visible = false;
            this.hitArea.unHit.clear();
            this.hitArea.unHit.drawRect(t, i, e, Game.UIHeight, "#000000");
            ActionEventReport.report(ActionEventReport.actionIndex.ID1042);
            break;
        case 3:
            this.fontBox.visible = false;
            this.maskArea.visible = false;
            this.fingerFx.visible = false;
            this.nextStep();
            break;
        case 5:
            this.fontBox.visible = false;
            this.maskArea.visible = false;
            this.fingerFx.visible = false;
            this.nextStep();
            QTTRedPkgGet.hide();
            break;
        case 6:
            break
        }
    };
    e.initStep = function() {
        var e = QTTRedPkgT.getGuidePos("fc_mul");
        e = this.contain.globalToLocal(e, true);
        var t = QTTRedPkgT.getGuidePos("btnOpen");
        t = this.contain.globalToLocal(t, true);
        var i = QTTRedPkg.getGuidePos("btnGo");
        i = this.contain.globalToLocal(i, true);
        var n = QTTRedPkgGet.getGuidePos("bg");
        n = this.contain.globalToLocal(n, true);
        var s = Utils.localToGlobal(FishScene.getFishScene().btnDuihuan);
        s = this.contain.globalToLocal(s, true);
        this.guideSteps = [{},
        {
            x: e.x,
            y: e.y,
            radius: 40,
            tipx: 248,
            tipy: 266
        },
        {
            x: t.x,
            y: t.y,
            radius: 50,
            tipx: 248,
            tipy: 266,
            unHit: true
        },
        {
            tipx: 248,
            tipy: 400
        },
        {
            x: i.x,
            y: i.y,
            radius: 115,
            tipx: 248,
            tipy: 266,
            unHit: true
        },
        {
            x: n.x,
            y: n.y,
            radius: 150,
            tipx: 248,
            tipy: 400
        },
        {
            x: s.x,
            y: s.y,
            radius: 35,
            tipx: 248,
            tipy: 266,
            unHit: true
        }]
    };
    e.nextStep = function() {
        this.initStep();
        var e = FishScene.getCurrentCannon();
        if (e) {
            e.stop()
        }
        if (n >= this.guideSteps.length - 1) {
            this.maskArea.visible = false;
            this.fontBox.visible = false;
            this.fingerFx.visible = false;
            this.hitArea.unHit.drawRect(0, 0, Game.ViewWidth, Game.ViewHeight, "#000000")
        } else {
            var t = this.guideSteps[++n];
            this.updateCircle(t);
            this.maskArea.visible = true;
            this.fontBox.visible = true;
            this.fontBox.pos(t.tipx, t.tipy);
            for (var i = 0; i < this.guideSteps.length - 1; i++) {
                this["txt" + (i + 1)].visible = n == i + 1
            }
        }
    };
    e.updateCircle = function(e) {
        if (!e || Object.keys(e).length == 0) return;
        if (this.hitArea) {
            this.hitArea.unHit.clear();
            if (e.x && e.y && e.radius && e.unHit) {
                this.hitArea.unHit.drawCircle(e.x, e.y, e.radius, "#000000");
                this.fingerFx.pos(e.x, e.y);
                this.fingerFx.visible = true
            } else {
                this.fingerFx.visible = false
            }
        }
        if (this.interactionArea) {
            this.interactionArea.graphics.clear();
            if (e.x && e.y && e.radius) {
                this.interactionArea.graphics.drawCircle(e.x, e.y, e.radius, "#000000")
            }
        }
    };
    e.windowResize = function() {
        BaseView.prototype.windowResize.call(this);
        this.size(Game.ViewWidth, Game.ViewHeight);
        this.pos(0, 0);
        this.contain.size(Game.ViewWidth, Game.ViewHeight);
        this.contain.pos(0, 0);
        if (this.hitArea) {
            this.hitArea.hit.clear();
            this.hitArea.hit.drawRect(0, 0, Game.ViewWidth, Game.ViewHeight, "#000000")
        }
        if (this.maskArea) {
            this.maskArea.graphics.clear();
            this.maskArea.graphics.drawRect(0, 0, Game.ViewWidth, Game.ViewHeight, "#000000");
            this.maskArea.pos(0, 0)
        }
        if (this.interactionArea) {
            this.interactionArea.pos(0, 0);
            this.contain.addChild(this.interactionArea)
        }
        Laya.timer.frameOnce(1, this, this.reset)
    };
    e.reset = function() {
        this.initStep();
        this.updateCircle(this.guideSteps[n])
    };
    e.closeView = function(e) {
        EventBus.off(EventConfig.GuidanceRedActivity.GO_NEXT_STEP, this, this.goNext);
        this.removeSelf();
        if (this.closeCall && e) this.closeCall();
        s = undefined;
        i.guide = false
    };
    var s = undefined;
    i.show = function(t) {
        WinUtils.showView(["UIRoot/GuidanceRedActivity.json"], "GuidanceRedActivity", Game.TipRoot, i,
        function(e) {
            s = e;
            e.closeCall = t;
            i.guide = true
        },
        {
            isWindow: true
        })
    };
    i.closeView = function(e) {
        if (s) {
            s.closeView(e)
        }
    };
    return i
} ();
var GameCenter = window.GameCenter = function() {
    var r = "GameCenterPanel";
    var i = false;
    function e() {
        e.super(this);
        this.initBase(r, undefined, {
            isWindow: true,
            needFitViews: [this.bg]
        });
        this.isClearRes = false;
        this.isNeedDestroy = false
    }
    Laya.class(e, "GameCenterPanel", gameCenterUI, "");
    var n = {
        SvrId: 0,
        ServerName: "",
        TableId: 0
    };
    var t = e.prototype;
    t.init = function() {
        this.speedStartSceneId = Game.sceneConfig.sceneID.scene_10;
        this.selectedSceneCfg = null;
        this.activityRedMark.zOrder = 9;
        this._LoginReadyReq_ = false;
        this.speedStartSceneFlag = false;
        this.poolGoldObj = [this.baibei_poolNum, this.qianbei_poolNum, this.jingdian_poolNum, this.guizu_poolNum];
        this.initEvent();
        this.setHeadTip();
        Laya.stage.on(Laya.Event.def_updateUserInfo, this, this.updateUserInfo);
        Laya.stage.on(Laya.Event.def_updateWxInfo, this, this.updateWxInfo);
        Laya.stage.on(Laya.Event.def_updateUserOtherInfo, this, this.updateUserOtherInfo);
        Laya.stage.on(Laya.Event.def_updateUserMoney, this, this.updateUi);
        if (FreeLottery && FreeLottery.init) {
            FreeLottery.init(this.lockyDrawTimeWrap, this.luckyDrawTimeTxt, this.btnLuckyDrawRedPoint)
        }
        Laya.stage.off(Laya.Event.def_changeShakeTimes, this, this.changeShakeTimes);
        Laya.stage.on(Laya.Event.def_changeShakeTimes, this, this.changeShakeTimes);
        Laya.stage.on(Laya.Event.def_LeaveFishScene, this, this.reportLeaveFishScene);
        this.useSceneSk = true;
        this.timer.once(1e3, this,
        function() {
            this.btnGiftFX.play(0, true)
        });
        this.btnDavyJonesGift.visible = false;
        if (Game.miniGameIOS()) {
            if (this.btnChong) {
                this.btnChong.visible = Game.onWX()
            }
            this.btnGift.visible = false;
            this.btnVipInfo.visible = Game.onWX();
            this.btnFirstChongBox.visible = false;
            this.btnFirstChongBox.scale(0, 0);
            this.boxBtnLuckyShake.visible = false;
            this.shakeRedPointImg.visible = false;
            this.shakeRedPointImg.alpha = 0;
            this.btnShopBox.visible = Game.onWX();
            this.btn7Recharge.visible = false
        }
        if (Game.isIphoneApp) {
            this.btnInvitat.visible = false;
            this.invitationRedMark.visible = false;
            this.invitationRedMark.alpha = 0;
            this.activityRedMark.visible = false;
            this.activityRedMark.alpha = 0
        }
        this.on(Laya.Event.CLICK, this,
        function(e) {
            if (!e.target) {
                return
            }
            var t = e.target.name;
            if (t == "userHead") {
                if (Game.onMiniGame) {
                    Channel.yxl_wx_AuthUserInfo(function(e) {
                        if (!Game.AuthSwitch && !e) {
                            WXAuthorize.show()
                        } else {
                            PersonalCenter.show();
                            ActionReport.addLog(ActionReport.actionIndex.gameHall_Personal)
                        }
                    })
                } else {
                    PersonalCenter.show();
                    ActionReport.addLog(ActionReport.actionIndex.gameHall_Personal)
                }
            } else if (t == "shop") {
                if (Game.miniGameIOS() && !Game.onWX()) {} else {
                    ShopMall.show(undefined, 1)
                }
                ActionReport.addLog(ActionReport.actionIndex.gameHall_Recharge)
            } else if (t == "lottery") {
                var i = GameConfig.exchange.getLotteryList();
                if (i && i.length > 0) {
                    ExChangeJuan.show(0, true)
                } else {
                    MsgToast.show(GameConfig.ErrorMsg.clientErrorMsg(10039))
                }
                ActionReport.addLog(ActionReport.actionIndex.gameHall_JiangQuan)
            } else if (t == "btnIntegral") {
                var i = GameConfig.exchange.getScoreList();
                if (i && i.length > 0) {
                    ExChangeJiFen.show()
                } else {
                    MsgToast.show(GameConfig.ErrorMsg.clientErrorMsg(10039))
                }
                ActionReport.addLog(ActionReport.actionIndex.gameHall_jiFen)
            } else if (t == "btnExit") {
                if (Game.channel.cfg.cps === Game.ChannelConstants.vivo) {
                    if (Channel && Channel.exit) {
                        Channel.exit()
                    }
                } else {
                    var n = GameConfig.exchange.getLotteryCfg(),
                    s = Player.getJiangJuan(),
                    a = undefined;
                    if (n) {
                        n.sort(function(e, t) {
                            return e.Money2Num - t.Money2Num
                        });
                        a = n[0].Money2Num
                    }
                    if (Player.getActRed() === 1) {
                        var r = MessageBox.show("您还有活动奖励可以领取，真的打算要走么?", true);
                        r.submitCall = function() {
                            ActionReport.addLog(ActionReport.actionIndex.gameHall_Exit);
                            Main.exit()
                        };
                        r.closeCall = function(e) {
                            if (e !== "ok") {
                                Activity.show()
                            }
                        }
                    } else if (n && s >= a) {
                        var o = MessageBox.show("您的奖券还可以兑换金币，真的打算要走么?", true);
                        o.submitCall = function() {
                            ActionReport.addLog(ActionReport.actionIndex.gameHall_Exit);
                            Main.exit()
                        };
                        o.closeCall = function(e) {
                            if (e !== "ok") {
                                ExChangeJuan.show()
                            }
                        }
                    } else if (Player.getGold() < 10 && Player.getAlms() > 0) {
                        var l = MessageBox.show("您还有救济金可以领取，是否要领取?", true);
                        l.submitCall = function() {
                            ActionReport.addLog(ActionReport.actionIndex.gameHall_Exit);
                            Main.exit()
                        };
                        l.closeCall = function(e) {
                            if (e === "no") {
                                PoChanHandler()
                            }
                        }
                    } else {
                        var h = MessageBox.show("您真的打算要走么?");
                        h.submitCall = function() {
                            ActionReport.addLog(ActionReport.actionIndex.gameHall_Exit);
                            Main.exit()
                        }
                    }
                }
            } else if (t == "btnDaoDanEntry") {
                this.selectScene(Game.sceneConfig.sceneID.scene_DaoDan);
                ActionReport.addLog(ActionReport.actionIndex.gameHall_DaoDan);
                ActionEventReport.report(ActionEventReport.actionIndex.ID1076)
            } else if (t == "btn10Entry") {
                this.JingdianClick();
                ActionEventReport.report(ActionEventReport.actionIndex.ID1081)
            } else if (t == "btn100Entry") {
                this.selectScene(Game.sceneConfig.sceneID.scene_Dragon_DaoDan);
                ActionEventReport.report(ActionEventReport.actionIndex.ID1075)
            } else if (t == "btn1000Entry") {
                SuperMatchDoor.show();
                ActionEventReport.report(ActionEventReport.actionIndex.ID1082)
            } else if (t == "btnGZ") {
                this.enterToVipScene()
            } else if (t == "btnActIcon") {
                Activity.show(undefined, true, true);
                ActionReport.addLog(ActionReport.actionIndex.gameHall_Activity)
            } else if (t == "btnLuckyIcon") {
                LuckyTurntable.show(undefined, undefined, true);
                ActionReport.addLog(ActionReport.actionIndex.gameHall_Turntable)
            } else if (t == "btnBackIcon") {
                Package.popup(true);
                ActionReport.addLog(ActionReport.actionIndex.gameHall_Knapsack)
            } else if (t == "btnEmailIcon") {
                Email.popup(true);
                ActionReport.addLog(ActionReport.actionIndex.gameHall_Email)
            } else if (t == "btnRanking") {
                RankList.show(true);
                ActionReport.addLog(ActionReport.actionIndex.gameHall_Ranking)
            } else if (t == "btnExchange") {
                var i = GameConfig.exchange.getLotteryList();
                if (i && i.length > 0) {
                    if (this.tipExchange.visible) {
                        ExChangeJuan.show(this.tipExchange.exchangeType, true)
                    } else ExChangeJuan.show(0, true)
                } else {
                    MsgToast.show(GameConfig.ErrorMsg.clientErrorMsg(10039))
                }
                this.tipExchange.visible = false;
                myStorage.setItemWithUserId(myStorage.StorageStaticCode.STORAGE_GAMECENTER_TIPECHANGE, true);
                ActionReport.addLog(ActionReport.actionIndex.gameHall_Exchange)
            } else if (t == "btnNoticeIcon") {
                Announcement.show();
                ActionReport.addLog(ActionReport.actionIndex.gameHall_Notice)
            } else if (t == "btnShopBox" || t == "shangcheng1" || t == "btnSC") {
                ShopMall.show(undefined, 0);
                ActionReport.addLog(ActionReport.actionIndex.gameHall_Shop)
            } else if (t == "shouchong1" || t == "shouchong2" || t == "btnFirstChongBox") {
                FirstRecharge.show(undefined, true);
                ActionReport.addLog(ActionReport.actionIndex.gameHall_FirstCharge)
            } else if (t == "btnGift") {
                TeHuiGiftDialog.show(0)
            } else if (t == "btnStart") {
                this.selectScene();
                ActionEventReport.report(ActionEventReport.actionIndex.ID1074, {
                    t: this.page_1.visible ? 0 : this.page_2.visible ? 1 : this.page_3.visible ? 2 : 3
                });
                ActionReport.addLog(ActionReport.actionIndex.gameHall_FastStart)
            } else if (t == "btnInvitat") {
                if (Game.onMiniGame || Channel && Channel.shareType == 1) {
                    InvitationWX.show()
                }
                ActionReport.addLog(ActionReport.actionIndex.gameHall_Intive)
            } else if (t == "btnEntrance") {
                ActionReport.addLog(ActionReport.actionIndex.gameHall_Entrance);
                EntranceGuidance.show()
            } else if (t == "btnLuckyDraw") {
                ActionReport.addLog(ActionReport.actionIndex.gameHall_LuckyDraw);
                FreeLottery.show()
            } else if (t == "login_gift") {
                LoginGift.show(true)
            } else if (t == "btnPaoTai") {
                CannonSkins.show(true)
            } else if (t == "vipInfo") {
                VipInfo.show(true)
            } else if (t == "backTo") {
                this.backToClick()
            } else if (t == "jingdian_10") {
                this.selectScene(Game.sceneConfig.sceneID.scene_10);
                ActionReport.addLog(ActionReport.actionIndex.gameHall_10Bei)
            } else if (t == "jingdian_100") {
                this.selectScene(Game.sceneConfig.sceneID.scene_100);
                ActionReport.addLog(ActionReport.actionIndex.gameHall_100Bei)
            } else if (t == "jingdian_1000") {
                this.selectScene(Game.sceneConfig.sceneID.scene_1000);
                ActionReport.addLog(ActionReport.actionIndex.gameHall_1000Bei)
            } else if (t == "btnmpGift") {
                MpGiftBag.show()
            } else if (t == "boxBtnLuckyShake") {
                LuckyShake.show(false)
            } else if (t == "btnShortcut") {
                if (Game.onMiniGame || Game.onBaiDuGame) {
                    if (Game.isIOS) {
                        EntranceGuidanceIOS.show()
                    } else {
                        EntranceGuidanceAndroid.show()
                    }
                }
            } else if (t == "btnKeFu") {
                if (Game.onMiniGame) {
                    if (wx) {
                        wx.openCustomerServiceConversation()
                    } else if (qq) {
                        qq.openCustomerServiceConversation()
                    }
                } else {
                    ChatSystem.show()
                }
            } else if (t == "btnShareIcon") {
                if (Channel && Channel.forward) {
                    Channel.forward(Game.ShareType.LOBBY_SHARE)
                }
            } else if (t == "hitMonster") {
                this.pauseSk(false);
                HitMonster.show();
                ActionEventReport.report(ActionEventReport.actionIndex.ID1102)
            } else if (t == "btnXiFromSky") {
                Activity.show()
            } else if (t == "btnSendRedPackage") {
                SendRedPackage.show()
            } else if (t == "btnXyx") {
                this.showOtherGames();
                ActionEventReport.report(ActionEventReport.actionIndex.ID1083)
            } else if (t == "btnJewCity") {
                this.selectScene(Game.sceneConfig.sceneID.scene_JewCity)
            } else if (t == "btnDNLG") {
                this.selectScene(Game.sceneConfig.sceneID.scene_AttAckDragon)
            } else if (e.target.name == "btnDFH") {
                this.selectScene(Game.sceneConfig.sceneID.scene_BigRich)
            } else if (e.target.name == "btnMenu") {
                if (Game.isApp) {
                    this.hideBtnMenu()
                }
                if (Channel && Channel.hideGuide) {
                    this.hideBtnMenu()
                }
                this.menuBox.visible = !this.menuBox.visible;
                this.freeGoldTip2.alpha = this.menuBox.visible ? 0 : 1
            } else if (e.target.name == "btnMianFel") {
                this.mainFeiList.visible = !this.mainFeiList.visible;
                this.mainFeiList.y = this.globalToLocal(Utils.localToGlobal(this.btnMianFel), true).y;
                if (this.mainFeiList.visible) this.mainFeiList.width = this.mianFeiBox.width - 35
            } else if (t == "task") {
                Task.show(true)
            } else if (t == "pigBank") {
                PigBank.show(true)
            } else if (t == "btnDb") {
                Dtdb.show()
            } else if (t == "youYiSaiBtn") {
                this.selectScene(Game.sceneConfig.sceneID.scene_YouYiSai)
            } else if (t == "btnGuild") {
                GuildNet.GuildInfoReq();
                EventBus.on(GuildNet.EventKey.GuildInfoRep, this, this.showGuild)
            } else if (t == "qrDownload") {
                QRDownload.show()
            } else if (t == "seven_day") {
                ActionReport.addLog(ActionReport.actionIndex.newPlayerGift);
                NewPlayerGift.show(true)
            } else if (t == "btnQuIcon") {
                FirstBuyToOneNew.show()
            } else if (t == "btnWeek") {
                WeekCard.show()
            } else if (t == "btn7Recharge") {
                SevenDayRecharge.show()
            } else if (t == "btnDavyJonesGift") {
                DavyJonesGift.show(undefined, true)
            }
        });
        if (Channel && Channel.cfg.name == "mp") {
            this.btnExit.visible = false
        }
        if (Channel && Channel.hideGuide) {
            this.hideBtnMenu()
        }
        if (Channel && Channel.hideKeFu && this.btnKeFu) {
            this.btnKeFu.visible = false
        }
        if (Channel && Channel.showAndroidDownload) {
            if (!Game.isIOS && !Game.isApp) {
                this.qrDownload.visible = true
            }
        }
        this.btnWeek.visible = !Game.miniGameIOS();
        HitMonster.init(this.hitMonster);
        this.adaptView();
        Laya.Dialog.manager.on(Laya.Event.OPEN, this, this.pauseSk);
        Laya.Dialog.manager.on(Laya.Event.CLOSE, this, this.resumeSk);
        GuildNet.GuildInfoReq();
        EventBus.on(GuildNet.EventKey.GuildNewApplyReport, this, this.showGHRedPoint);
        EventBus.on(EventConfig.GAME_CENTER.KEFU_GIFT, this, this.kefuFreeGoldStatus);
        EventBus.on(EventConfig.FirstBuyToOne.FirstBuyToOne_BUY_SUCCESS, this, this.showQTTGoldIcon);
        this.shuang11qipaoText.text = GameConfig.ErrorMsg.clientErrorMsg(10185);
        EventBus.on(EventConfig.Shuang11.Shuang11_BUY_SUCCESS, this, this.showShuang11Tip);
        Request.SevenDayChargeGetInfoReq();
        EventBus.on(EventConfig.SevenDayRecharge.SevenDayRecharge_REFRESHDATA, this, this.showSevenDayRecharge);
        EventBus.on(EventConfig.GAME_CENTER.GAME_CENTER_WEEK_CARD_INFO, this, this.showWeekCardRedPoint);
        this.btnMianFel.visible = true;
        if (Channel && Channel.benchmarkLevel != undefined && Channel.benchmarkLevel >= 0 && Channel.benchmarkLevel <= 8) {
            this.isNotUseSpine = true
        } else {
            this.isNotUseSpine = false
        }
    };
    t.hideBtnMenu = function() {
        this.btnmpGift.visible = false;
        this.btnEntrance.visible = false;
        this.btnShortcut.visible = false;
        this.btnSendRedPackage.visible = false
    };
    t.showWeekCardRedPoint = function(e) {
        this.btnWeek.getChildByName("redPoint").visible = e.days < 0
    };
    t.showSevenDayRecharge = function(e) {
        if (!e) return;
        this.btn7Recharge.visible = !Game.miniGameIOS() && e.Display && this.page_1.visible;
        this.btn7Recharge.getChildByName("redPoint").visible = e.AlreadyBuyNum > 0 && !e.ChargedToday;
        this.fnt7RechargeMoney.value = e.RewardHuaFei
    };
    t.showShuang11Tip = function() {
        this.shuang11qipao.visible = Player.CanBuyDoubleEleven == 1
    };
    t.checkSevenDay = function() {
        var e = Player.getNewSevenDay();
        if (e.indexOf("1") >= 0 || e.indexOf("0") >= 0) {
            Player.setShowNewSevenDay(true);
            this.seven_day.visible = true;
            this.login_gift.visible = false;
            this.checkRedPoint()
        } else {
            this.login_gift.visible = true;
            Player.setShowNewSevenDay(false);
            this.seven_day.visible = false
        }
    };
    t.checkRedPoint = function() {
        var e = Player.getNewSevenDay();
        if (Player.getShowNewSevenDay) {
            if (e.indexOf("1") >= 0) {
                this.seven_day_redPoint.visible = true
            } else {
                this.seven_day_redPoint.visible = false
            }
        }
    };
    t.kefuFreeGoldStatus = function(e) {
        if (!this.btnKeFu.visible) return;
        this.freeGoldTip.visible = e;
        this.freeGoldTip2.visible = e;
        this.btnKeFu.getChildByName("redPoint").visible = e;
        var t = GameConfig.ErrorMsg.clientErrorMsg(10152);
        var i = this.freeGoldTip.getChildByName("text");
        i.text = t;
        var n = i.fontSize * t.charLength() / 2;
        i.width = n;
        var s = this.freeGoldTip2.getChildByName("text");
        s.text = t;
        i.width = n;
        this.freeGoldTip.width = n + 30;
        this.freeGoldTip2.width = n + 30;
        if (e) this.timer.once(1e4, this,
        function() {
            this.freeGoldTip.visible = false;
            this.freeGoldTip2.visible = false
        })
    };
    t.reportLeaveFishScene = function(e) {
        this.timer.frameOnce(1, this,
        function() {
            if (e.sid == Game.sceneConfig.sceneID.scene_DaoDan || e.sid == Game.sceneConfig.sceneID.scene_Dragon_DaoDan) {
                this.selectScene(e.sid, true);
                ActionReport.addLog(ActionReport.actionIndex.gameHall_DaoDan)
            } else if (e.sid >= Game.sceneConfig.sceneID.scene_SuperMatch && e.sid <= Game.sceneConfig.sceneID.scene_SuperMatchSkill) {
                if (SuperMatchResult.MatchAgain) {
                    SuperMatch.MatchAgain();
                    return
                }
                if (SuperMatchDoor.getMatchAgain()) {
                    SuperMatchDoor.MatchAgain();
                    return
                }
                SuperMatchDoor.show(e.sid)
            }
        })
    };
    t.showGHRedPoint = function(e) {
        this.ghRP.visible = e
    };
    t.showGuild = function() {
        EventBus.off(GuildNet.EventKey.GuildInfoRep, this, this.showGuild);
        if (Player.isHasGh) {
            GhDialog.show()
        } else {
            GhJoinDialog.show()
        }
    };
    t.adaptView = function() {
        if (Game.Adapter && Adapter.fitViewW()) {
            this.leftBtnBox.x = 40;
            this.rightBtnBox.right = 114;
            this.rightBtnBox2.right = 40
        }
    };
    t.setHeadTip = function() {
        this.headTip.visible = false;
        if (Game.onMiniGame) {
            Channel.yxl_wx_AuthUserInfo(function(e) {
                if (!Game.AuthSwitch && !e) {
                    this.headTip.visible = true
                } else {
                    this.headTip.visible = false
                }
            }.bind(this))
        }
    };
    t.showExchangeTip = function(e) {
        this.tipExchange.visible = true;
        if (e == Game.TipExchange.NEW) {
            this.tipExchange.visible = HitMonster.isIconShow()
        }
        this.tipExchange.exchangeType = e;
        this.tipExchange.getChildByName("text").text = e == Game.TipExchange.NEW ? "兑换商城上新啦~": "红包这里兑换哦~"
    };
    t.showCertificate = function() {
        if (i) {
            Certificate.popup(true,
            function() {
                this.showNewUserGuide()
            }.bind(this));
            i = false;
            return true
        }
        return false
    };
    t.showNewUserGuide = function() {
        if (Player.getNewPlayer()) {
            NoviceGuidanceOnMinGame.showMask();
            GameCenter.updateQiHang()
        } else {
            if (!Game.minGameShareGame.roomParam.serverId) Page_push(this)
        }
    };
    t.show = function() {
        this.visible = true;
        FishScene.destroy();
        this.updateSceneEntrance();
        Game.interFacePush.signInCenterWay = Game.state.get();
        Sound.stopAll();
        Sound.playGameCenterBgMusic();
        if (Game.state.get() > Game.sceneConfig.sceneID.gameCenter) {
            var e = Player.getGold();
            this.FC_Gold.value = e;
            if (Activity.pigAct()) {
                this.ActGoldPigSwitch(true)
            }
        } else if (Game.onMiniGame && Channel !== null) {}
        Game.state.set(Game.sceneConfig.sceneID.gameCenter);
        Notice.updatePosY();
        Request.GetRedPointReq();
        if (Channel && Channel.disableShare) {
            this.btnInvitat.visible = false;
            this.invitationRedMark.visible = false;
            this.invitationRedMark.alpha = 0
        }
        this.timer.once(1e3, this,
        function() {
            StarRankNet.GetUserStarRankReq()
        });
        Game.UIRoot.addChild(this);
        LoadingView.remove();
        Request.KanJiaLiBaoInfoReq();
        NoviceGuidanceOnMinGame.exit();
        this.setHeadTip();
        GuidanceRedActivity.closeView()
    };
    t.loadSpine = function() {
        if (this.useSceneSk) {
            if (!this.addSk && !Player.getNewPlayer()) {
                this.addSk = true;
                this.allSk = [];
                var t = this;
                if (!this.isNotUseSpine) {
                    Utils.getTempletByUrl("res/spine/jingdianchang/buyu_2jingdian.sk",
                    function(e) {
                        if (t) {
                            e.pos(t.btn10Entry.pivotX + 10, t.btn10Entry.pivotY + 5);
                            t.btn10Entry.addChildAt(e, 0);
                            e._parent_ = e.parent;
                            t.allSk.push(e);
                            t.sc_0.visible = false
                        }
                    });
                    Utils.getTempletByUrl("res/spine/vipScene/buyu_3longjing.sk",
                    function(e) {
                        if (t) {
                            e.pos(t.btn100Entry.pivotX - 224, t.btn100Entry.pivotY - 85);
                            t.btn100Entry.addChildAt(e, 0);
                            e._parent_ = e.parent;
                            t.allSk.push(e);
                            t.sc_6.visible = false
                        }
                    });
                    Utils.getTempletByUrl("res/spine/quanmingdajiangsai/buyu_4dajiang.sk",
                    function(e) {
                        if (t) {
                            e.pos(t.btn1000Entry.pivotX - 485, t.btn1000Entry.pivotY + 77);
                            t.btn1000Entry.addChildAt(e, 0);
                            e._parent_ = e.parent;
                            t.allSk.push(e);
                            t.sc_7.visible = false
                        }
                    });
                    Utils.getTempletByUrl("res/spine/daodanchang/buyu_1daodan.sk",
                    function(e) {
                        if (t) {
                            e.pos(t.btnDaoDanEntry.pivotX + 25, t.btnDaoDanEntry.pivotY + 1);
                            t.btnDaoDanEntry.addChildAt(e, 0);
                            e._parent_ = e.parent;
                            t.allSk.push(e);
                            t.sc_4.visible = false
                        }
                    });
                    Utils.getTempletByUrl("res/spine/jingdianmoshi/scene10/Shibeichang.sk",
                    function(e) {
                        if (t) {
                            e.pos(150, t.jingdian_10.pivotY);
                            t.jingdian_10.addChildAt(e, 0);
                            e._parent_ = e.parent;
                            t.allSk.push(e);
                            t.sc_1.visible = false
                        }
                    });
                    Utils.getTempletByUrl("res/spine/jingdianmoshi/scene100/Baibeichang.sk",
                    function(e) {
                        if (t) {
                            e.pos(180, t.jingdian_100.pivotY - 10);
                            t.jingdian_100.addChildAt(e, 0);
                            e._parent_ = e.parent;
                            t.allSk.push(e);
                            t.sc_2.visible = false
                        }
                    });
                    Utils.getTempletByUrl("res/spine/jingdianmoshi/scene1000/Qianbeichang.sk",
                    function(e) {
                        if (t) {
                            e.pos(172, t.jingdian_1000.pivotY + 5);
                            t.jingdian_1000.addChildAt(e, 0);
                            e._parent_ = e.parent;
                            t.allSk.push(e);
                            t.sc_3.visible = false
                        }
                    });
                    this.loadScTsSpine()
                }
                Utils.getTempletByUrl("res/spine/xinchangjing1/xinchangjing1.sk",
                function(e) {
                    if (t) {
                        t.hallBg = e;
                        t.hallBgScale();
                        t.bg.addChildAt(e, 0);
                        e._parent_ = e.parent
                    }
                })
            } else {}
        } else {
            this.showSceneCover()
        }
    };
    t.loadScTsSpine = function() {
        var t = this;
        var e = Player.getOpenTSGame() ? true: false;
        if (e) {
            if (t.sc_8SpineLoad) {
                return
            }
            t.sc_8SpineLoad = true;
            Utils.getTempletByUrl("res/spine/xiaoyouxi/buyu_5tese.sk",
            function(e) {
                if (t) {
                    e.pos(t.btnXyx.pivotX - 475, t.btnXyx.pivotY - 108);
                    t.btnXyx.addChildAt(e, 0);
                    e._parent_ = e.parent;
                    t.allSk.push(e);
                    t.sc_8.visible = false
                }
            })
        } else {
            if (t.sc_9SpineLoad) {
                return
            }
            t.sc_9SpineLoad = true;
            Utils.getTempletByUrl("res/spine/buyu_5shangcheng/buyu_5shangcheng.sk",
            function(e) {
                if (t) {
                    e.pos(t.btnSC.pivotX + 5, t.btnSC.pivotY);
                    t.btnSC.addChildAt(e, 0);
                    e._parent_ = e.parent;
                    t.allSk.push(e);
                    t.sc_9.visible = false
                }
            })
        }
    };
    t.hide = function(e) {
        this.timer.clearAll(this);
        this.visible = false;
        this._loopUpdatePool = false;
        this.pauseSk();
        if (this.hallBg) {
            this.hallBg.removeSelf();
            this.hallBg.paused()
        }
        if (e) {
            this.reset();
            EventBus.off(EventConfig.GAME_CENTER.KEFU_GIFT, this, this.kefuFreeGoldStatus);
            EventBus.off(EventConfig.FirstBuyToOne.FirstBuyToOne_BUY_SUCCESS, this, this.showQTTGoldIcon);
            EventBus.off(EventConfig.Shuang11.Shuang11_BUY_SUCCESS, this, this.showShuang11Tip);
            EventBus.off(EventConfig.SevenDayRecharge.SevenDayRecharge_REFRESHDATA, this, this.showSevenDayRecharge);
            EventBus.off(EventConfig.GAME_CENTER.GAME_CENTER_WEEK_CARD_INFO, this, this.showWeekCardRedPoint)
        }
    };
    t.reset = function() {
        this.removeSelf();
        Laya.stage.off(Laya.Event.def_updateUserInfo, this, this.updateUserInfo);
        Laya.stage.off(Laya.Event.def_updateWxInfo, this, this.updateWxInfo);
        Laya.stage.off(Laya.Event.def_updateUserOtherInfo, this, this.updateUserOtherInfo);
        Laya.stage.off(Laya.Event.def_updateUserMoney, this, this.updateUi);
        Laya.stage.off(Laya.Event.def_changeShakeTimes, this, this.changeShakeTimes);
        n = {
            SvrId: 0,
            ServerName: "",
            TableId: 0
        };
        ChatSystem.clearAllChatData();
        EventBus.off(GuildNet.EventKey.GuildNewApplyReport, this, this.showGHRedPoint)
    };
    t.display = function() {
        this.isDisPlaying = true;
        StartView.hide();
        Request.GetUserInfoReq();
        Request.GetUserOtherInfoReq();
        Request.package.getListReq();
        Request.getExchangeListReq();
        Request.GetFishExchangeListReq();
        Request.ApplyFriendsListReq();
        ActionReport.report(ActionReport.actionIndex.gameCenter_Show);
        if (Channel && Channel.startFloat) {
            Channel.startFloat()
        }
        this.btnShortcut.visible = Game.onMiniGame || Game.onBaiDuGame ? true: false;
        if (Game.onMiniGame || Game.onBaiDuGame) {
            this.btnExit.visible = false;
            this.btnLuckyDraw.visible = Game.onByteBeat ? false: true;
            this.btnLuckyDrawRedPoint.visible = Game.onByteBeat ? false: true
        } else {
            this.btnExit.visible = Channel && Channel.disableExit ? false: true;
            this.btnLuckyDraw.visible = false;
            this.btnLuckyDrawRedPoint.visible = false;
            this.btnInvitat.visible = false;
            this.invitationRedMark.visible = false;
            this.invitationRedMark.alpha = 0
        }
        if (Game.onBaiDuGame) {
            this.btnInvitat.visible = false;
            this.btnLuckyDraw.visible = false
        }
        this.btnEntrance.visible = Game.onMiniGame && !Game.onQQ();
        if (Game.onQQ()) {
            this.hideBtnMenu();
            this.btnKeFu.visible = false
        }
        if (Game.showShare()) {} else if (Channel && Channel.showVideo) {
            this.btnLuckyDraw.visible = true
        }
        LoginViewApp.hide(true);
        if (Game.minGameShareGame.roomParam.serverId) {
            if (Player.getNewPlayer()) {
                LoadingView.remove()
            } else {}
        } else {
            LoadingView.remove()
        }
        s.display && s.display();
        this.timer.once(2e3, this,
        function() {
            OrderCenter.check()
        });
        AutoPos.add(this.topBtnBox);
        AutoPos.add(this.leftBoxBtn);
        AutoPos.add(this.mianFeiBox);
        AutoPos.addNew(new AutoPosNew(this.bottomBtnBox, 97));
        AutoPos.addNew(new AutoPosNew(this.rightBtnBox2, undefined, 0, AutoPosNew.View_Dir.V));
        AutoPos.addNew(new AutoPosNew(this.rightBtnBox, undefined, 10, AutoPosNew.View_Dir.V));
        AutoPos.addNew(new AutoPosNew(this.menuBtnBox, undefined, 0, AutoPosNew.View_Dir.H).setFitBg(this.menuBoxBg));
        StarRankBar.init(this)
    };
    t.unDisplay = function() {
        s.unDisplay && s.unDisplay()
    };
    t.showSceneCover = function() {
        this.pauseSk()
    };
    t.pauseSk = function(e) {
        if (this.allSk && this.visible && this.displayedInStage) {
            if (!this.sk_Index) {
                this.sk_Index = 0
            }
            this.sk_Index++;
            for (var t = 0; t < this.allSk.length; t++) {
                var i = this.allSk[t];
                if (e || e == undefined) {
                    i.removeSelf()
                }
                i.paused()
            }
            if (this.hallBg) this.hallBg.paused()
        }
        this.sc_0.visible = true;
        this.sc_1.visible = true;
        this.sc_2.visible = true;
        this.sc_3.visible = true;
        this.sc_4.visible = true;
        this.sc_6.visible = true;
        this.sc_7.visible = true;
        this.sc_8.visible = true;
        this.sc_9.visible = true
    };
    t.resumeSk = function() {
        if (!this.useSceneSk) {
            return
        }
        if (this.allSk && this.visible && this.displayedInStage) {
            for (var e = 0; e < this.allSk.length; e++) {
                var t = this.allSk[e];
                if (t._parent_) {
                    t._parent_.addChildAt(t, 0)
                }
                t.resume()
            }
            if (this.hallBg) {
                if (this.hallBg._parent_) {
                    this.hallBg._parent_.addChildAt(this.hallBg, 0)
                }
                this.hallBg.resume()
            }
        }
        var i = this.isNotUseSpine ? true: false;
        this.sc_0.visible = i;
        this.sc_1.visible = i;
        this.sc_2.visible = i;
        this.sc_3.visible = i;
        this.sc_4.visible = i;
        this.sc_6.visible = i;
        this.sc_7.visible = i;
        this.sc_8.visible = i;
        this.sc_9.visible = i
    };
    t.windowResize = function() {
        if (Game.ViewWidth <= Game.UIMaxWidth) this.size(Game.ViewWidth, Game.ViewHeight);
        else this.size(Game.UIMaxWidth, Game.ViewHeight);
        this.pos((Game.ViewWidth - this.width) / 2, (Game.ViewHeight - this.height) / 2);
        this.bg.size(Game.ViewWidth, Game.ViewHeight);
        this.bg.x = -this.x;
        this.hallBgScale();
        if (this.bottomBg) {
            this.bottomBg.width = Game.ViewWidth;
            this.bottomBg.x = (this.width - Game.ViewWidth) / 2
        }
    };
    t.bottomScale = function() {
        var e = Game.ViewWidth / Game.UIWidth;
        if (e > 1) {
            this.bottomBtnBox.scaleX = this.bottomBtnBox.scaleY = e
        } else {
            this.bottomBtnBox.scaleX = this.bottomBtnBox.scaleY = e
        }
    };
    t.hallBgScale = function() {
        if (this.hallBg) {
            this.hallBg.scaleX = this.hallBg.scaleY = Game.ViewWidth / Game.UIWidth;
            this.hallBg.y = Game.ViewHeight - Game.UIHeight * this.hallBg.scaleY * .5;
            this.hallBg.x = Game.ViewWidth / 2
        }
    };
    t.changeShakeTimes = function() {
        if (Player.IsCanShowShark()) var e = Player.getShakeTimes();
        else e = 0;
        this.shakeRedPointImg.visible = e > 0 ? true: false;
        var t = myStorage.getItemWithUserId(myStorage.StorageStaticCode.Storage_TEHUI_ShowRedPoint);
        this.btnGift.getChildByName("redPoint").visible = e > 0 || !t ? true: false
    };
    t.updateUi = function() {
        if (!Player.IsCanShowShark()) {
            this.boxBtnLuckyShake.visible = false
        }
        this.FC_Gold.value = Player.getGold();
        this.FC_JiangJuan.value = Player.getJiangJuan();
        this.userHeadImg.skin = !Player.getAvatarUrl() ? "resource/head/1.png": Player.getAvatarUrl();
        this.updateSceneEntrance()
    };
    t.updateWxInfo = function() {
        this.userHeadImg.skin = Player.getAvatarUrl()
    };
    t.updateUserInfo = function() {
        if (this.isDisPlaying) {
            console.log("getActListReq");
            Request.getActListReq();
            this.isDisPlaying = false;
            LaunchUtils.dealEvent();
            if (SendUserShop.isShow) {
                SendUserShop.closeCall = function() {
                    if (!this.showCertificate()) {
                        this.showNewUserGuide()
                    }
                }.bind(this)
            } else {
                this.showCertificate()
            }
            if (Player.getNewPlayer() && !Certificate.isShow && !SendUserShop.isShow) {
                NoviceGuidanceOnMinGame.showMask();
                GameCenter.updateQiHang()
            }
        }
        this.loadSpine();
        this.btnLuckyIcon.visible = Player.TurntableActivitySwitch() == 1;
        if (JSON.stringify(Game.sceneConfig.serCfg) == "{}") {
            Request.GetSceneCfgReq()
        }
        this.updateUi();
        if (!this.isShow && Player.getFcmState() && Player.getOpenFcm()) {
            this.isShow = true;
            PreventIndulge.show(1)
        }
        if (!Player.getFirstGift()) {
            if (Game.miniGameIOS()) {} else {
                this.btnFirstChongBox.visible = true
            }
        } else {
            if (!Game.miniGameIOS()) {
                this.btnFirstChongBox.visible = false
            }
        }
        var e = Player.getVipLevel();
        if (Player.getRedPackageTurn()) {
            var t = GameConfig.getVipInfoByLevel(e);
            this.btnSendRedPackage.visible = t && t.OpenRedBag ? true: false
        } else {
            this.btnSendRedPackage.visible = false
        }
        this.changeVipLevelIcon(e);
        this.btnTask.visible = e * 1 >= 3 ? true: false;
        if (!this._LoginReadyReq_) {
            this._LoginReadyReq_ = true;
            Request.LoginReadyReq();
            Request.package.getListReq()
        }
        if (!Player.getNewPlayer()) {
            this.timer.frameOnce(16, this,
            function() {
                if (Game.minGameShareGame.roomParam.serverId || Certificate.isShow || SendUserShop.isShow) {} else {
                    Page_push(this)
                }
            })
        }
        if (this.btnXyx) {
            this.btnXyx.visible = Player.getOpenTSGame() ? true: false;
            if (this.btnSC) {
                this.btnSC.visible = !this.btnXyx.visible
            }
        }
        this.checkSevenDay();
        this.showQTTGoldIcon();
        Game.state.set(Game.sceneConfig.sceneID.gameCenter);
        this.exchangeImg.skin = Player.OpenRedActivity() ? "resource/gameCenter/btn_hhongbaoduihuan.png": "resource/gameCenter/btn_duihuan.png";
        console.log("Player.CanBuyDoubleEleven");
        this.shuang11qipao.visible = Player.CanBuyDoubleEleven() == 1
    };
    t.updateUserOtherInfo = function() {
        var e = Player.getInviteRed();
        if (Game.interFacePush.signInCenterWay <= 0) {
            e = 1
        }
        this.btnmpGift.visible = Player.getMPIcon_open() ? true: false;
        this.setRedPoint(Player.getActRed(), Player.getBagRed(), Player.getMailRed(), e, Player.getSignRed());
        if (Player.getIsOpenRank()) {
            if (Player.getVipLevel() >= Player.getOpenRankNeedVip()) {
                this.btnRanking.visible = true
            } else {
                this.btnRanking.visible = false
            }
        } else {
            this.btnRanking.visible = false
        }
        this.btnGuild.visible = Player.isShowGuild() ? true: false;
        this.showQTTGoldIcon()
    };
    t.showQTTGoldIcon = function(e) {
        if (Channel && Channel.cfg.cps == Game.ChannelConstants.qtt) {} else {
            return
        }
        if (e && this.visible) {
            var t = MessageBox.show(GameConfig.ErrorMsg.clientErrorMsg(10184));
            t.submitCall = function() {
                this.selectScene()
            }.bind(this);
            if (qttGame && qttGame.openDialogMission) {
                qttGame.openDialogMission()
            }
        }
        this.btnQuIcon.visible = Channel && Channel.cfg.cps == Game.ChannelConstants.qtt && (Player.QTTYiYuanGouOpen() && !Player.getQttFirstGiftOneSG() || Player.QTTYiYuanGouOpen() && Player.QTTYiYuanFuGouOpen() && !Player.getQttFirstGiftOneFG()) ? true: false;
        if (this.page_1 && !this.page_1.visible) {
            this.btnQuIcon.visible = false
        }
    };
    t.updateSceneEntrance = function() {
        var e = Player.getGold(),
        t = Player.getVipLevel(),
        i = 1;
        for (var n in Game.sceneConfig.serCfg) {
            var s = Game.sceneConfig.serCfg[n];
            if (s.SceneId > Game.sceneConfig.sceneID.scene_DaoDan) {
                continue
            }
            s.MinGold = s.MinGold ? s.MinGold: 0;
            if (e >= s.MinGold && t >= s.VipLevel) {
                i = n
            }
        }
        this.speedStartSceneId = i;
        this.DTSceneSwitch()
    };
    t.selectNormalScene = function() {
        if (Game.sceneConfig.serCfg) {
            var e = [Game.sceneConfig.sceneID.scene_1000, Game.sceneConfig.sceneID.scene_100, Game.sceneConfig.sceneID.scene_10];
            for (var t = 0; t < e.length; t++) {
                var i = e[t];
                var n = Game.sceneConfig.serCfg[i];
                if (n && n.IsOpen) {
                    n.MinGold = n.MinGold ? n.MinGold: 0;
                    if (Player.getGold() >= n.MinGold) {
                        this.selectedSceneCfg = n;
                        Request.SelectGameSvrReq(i, Game.minGameShareGame.roomParam.serverName);
                        break
                    }
                }
            }
        }
    };
    t.selectScene = function(e, t) {
        if (this.speedClickFlag) {
            Laya.timer.once(1e3, this,
            function() {
                this.speedClickFlag = false
            });
            Waiting.hide();
            return
        }
        if (e == undefined) {
            this.updateSceneEntrance();
            e = this.speedStartSceneId;
            this.speedStartSceneFlag = true
        } else {
            this.speedStartSceneFlag = false
        }
        this.speedClickFlag = true;
        if (Game.sceneConfig.serCfg) {
            var i = Game.sceneConfig.serCfg[e];
            if (i && i.IsOpen) {
                i.MinGold = i.MinGold ? i.MinGold: 0;
                if (Player.getGold() >= i.MinGold) {
                    if (i.MaxGold) {
                        if (Player.getGold() <= i.MaxGold) {
                            this.selectedSceneCfg = i;
                            this.enterSceneAgain = t;
                            Request.SelectGameSvrReq(e, Game.minGameShareGame.roomParam.serverName)
                        } else {
                            this.speedClickFlag = false;
                            Game.minGameShareGame.roomParam = {};
                            LoadingView.remove();
                            MsgToast.show("您的金币太多了，请去更高级的房间吧")
                        }
                    } else {
                        this.selectedSceneCfg = i;
                        this.enterSceneAgain = t;
                        Request.SelectGameSvrReq(e, Game.minGameShareGame.roomParam.serverName)
                    }
                } else {
                    if (i.MinGold > 0) {
                        this.selectedSceneCfg = i;
                        this.enterSceneAgain = t;
                        Request.SelectGameSvrReq(e, Game.minGameShareGame.roomParam.serverName)
                    } else {
                        this.speedClickFlag = false;
                        var n = MessageBox.show("您的金币不足,是否前去购买？");
                        n.submitCall = function() {
                            ShopMall.show(undefined, 6)
                        }
                    }
                }
            } else {
                Game.minGameShareGame.roomParam = {};
                LoadingView.remove();
                MsgToast.show("暂不开放,敬请期待!");
                this.speedClickFlag = false
            }
        }
    };
    t.SelectGameSvrRep = function(e) {
        this.speedClickFlag = false;
        if (e.Tag) {
            n.SvrId = e.SvrId;
            n.ServerName = e.ServerName;
            if (Game.minGameShareGame.roomParam.tableId >= 0) {
                Request.EnterTableReq(Game.minGameShareGame.roomParam.tableId)
            } else {
                if (this.selectedSceneCfg) {
                    var t = this.selectedSceneCfg.SceneId;
                    if (t == Game.sceneConfig.sceneID.scene_DaoDan || t == Game.sceneConfig.sceneID.scene_Dragon_DaoDan) {
                        if (this.speedStartSceneFlag) {
                            this.speedStartSceneFlag = false;
                            DaoDanSpecial.autoEnter(e.TableNum, t)
                        } else {
                            DaoDanSpecial.show(e.TableNum, t, this.enterSceneAgain ? false: true);
                            this.enterSceneAgain = false
                        }
                    } else if (e.SvrId == Game.sceneConfig.sceneID.scene_JewCity) {
                        JewelCityMain.show();
                        ActionEventReport.report(ActionEventReport.actionIndex.ID1092, {
                            t: 0
                        })
                    } else if (e.SvrId == Game.sceneConfig.sceneID.scene_AttAckDragon) {
                        DragonMain.show();
                        ActionEventReport.report(ActionEventReport.actionIndex.ID1093, {
                            t: 0
                        })
                    } else if (e.SvrId == Game.sceneConfig.sceneID.scene_BigRich) {
                        BigRichMain.show();
                        ActionEventReport.report(ActionEventReport.actionIndex.ID1095, {
                            t: 0
                        })
                    } else if (e.SvrId == Game.sceneConfig.sceneID.scene_YouYiSai) {
                        WinUtils.getSaveUI(r).youYiSaiClick()
                    } else {
                        Request.EnterTableReq(0);
                        if (e.SvrId == Game.sceneConfig.sceneID.scene_Vip) {
                            ActionEventReport.report(ActionEventReport.actionIndex.ID1096, {
                                t: 0
                            })
                        }
                        if (e.SvrId == Game.sceneConfig.sceneID.scene_DT_qt) {
                            ActionEventReport.report(ActionEventReport.actionIndex.ID1097, {
                                t: 0
                            })
                        }
                        if (e.SvrId == Game.sceneConfig.sceneID.scene_DT_bj) {
                            ActionEventReport.report(ActionEventReport.actionIndex.ID1100, {
                                t: 0
                            })
                        }
                        if (e.SvrId == Game.sceneConfig.sceneID.scene_DT_by) {
                            ActionEventReport.report(ActionEventReport.actionIndex.ID1098, {
                                t: 0
                            })
                        }
                        if (e.SvrId == Game.sceneConfig.sceneID.scene_DT_hj) {
                            ActionEventReport.report(ActionEventReport.actionIndex.ID1099, {
                                t: 0
                            })
                        }
                    }
                    this.enterSceneAgain = false
                }
            }
        } else if (e.MsgId) {
            var t = undefined;
            if (this.selectedSceneCfg) {
                t = this.selectedSceneCfg.SceneId
            }
            if (WinUtils.getSaveUI(r)) {
                WinUtils.getSaveUI(r).selectedSceneCfg = null
            }
            Game.minGameShareGame.roomParam = {};
            this.enterSceneAgain = false;
            Waiting.hide();
            LoadingView.remove();
            GameCenter.show();
            var i = MessageBox.show(GameConfig.ErrorMsg.getMsgById(e.MsgId, e.MsgParam));
            if (e.MsgId == 124 && !(Game.miniGameIOS() && !Game.onWX())) {
                i.onImg.skin = "resource/common/zi_qcz.png";
                i.submitCall = function() {
                    ShopMall.show()
                }
            } else if (e.MsgId == 136 && !(Game.miniGameIOS() && !Game.onWX())) {
                i.onImg.skin = "resource/common/zi_qsj.png";
                i.submitCall = function() {
                    VipInfo.show()
                }
            } else {
                i.submitCall = false
            }
            if (t != undefined) {
                if (t == Game.sceneConfig.sceneID.scene_Vip) {
                    ActionEventReport.report(ActionEventReport.actionIndex.ID1096, {
                        t: 1
                    })
                }
                if (t == Game.sceneConfig.sceneID.scene_DT_qt) {
                    ActionEventReport.report(ActionEventReport.actionIndex.ID1097, {
                        t: 1
                    })
                }
                if (t == Game.sceneConfig.sceneID.scene_DT_bj) {
                    ActionEventReport.report(ActionEventReport.actionIndex.ID1100, {
                        t: 1
                    })
                }
                if (t == Game.sceneConfig.sceneID.scene_DT_by) {
                    ActionEventReport.report(ActionEventReport.actionIndex.ID1098, {
                        t: 1
                    })
                }
                if (t == Game.sceneConfig.sceneID.scene_DT_hj) {
                    ActionEventReport.report(ActionEventReport.actionIndex.ID1099, {
                        t: 1
                    })
                }
                if (e.SvrId == Game.sceneConfig.sceneID.scene_JewCity) {
                    ActionEventReport.report(ActionEventReport.actionIndex.ID1092, {
                        t: 1
                    })
                }
                if (e.SvrId == Game.sceneConfig.sceneID.scene_AttAckDragon) {
                    ActionEventReport.report(ActionEventReport.actionIndex.ID1093, {
                        t: 1
                    })
                }
                if (e.SvrId == Game.sceneConfig.sceneID.scene_BigRich) {
                    ActionEventReport.report(ActionEventReport.actionIndex.ID1095, {
                        t: 1
                    })
                }
            }
        }
    };
    t.GetTableInfoListRep = function(e) {
        DaoDanSpecial.update(e.TableList)
    };
    t.EnterTableRep = function(t) {
        Waiting.hide();
        if (t.Tag) {
            LoadingView.show();
            if (Task && Task.hide) {
                Task.hide()
            }
            n.TableId = t.TableId;
            ActionReport.report(ActionReport.actionIndex.loadSceneResStart);
            DaoDanSpecial.close();
            CreateRoom.hide();
            EnterRoom.hide();
            var e = WinUtils.getSaveUI(r).selectedSceneCfg;
            if (e) {
                if (!FishScene.SceneBossCfg) {
                    FishScene.SceneBossCfg = GameConfig.getBossRefresh()
                }
                e["SecretTable"] = t.IsPswTable == 1 ? true: false;
                var i = RES.fishScene(e.SceneId);
                Game.SceneStartLoadTime = Date.now();
                Resource.checkLoaded = false;
                Resource.load(i,
                function(e) {
                    if (e) {
                        Player.setPos(t.Pos);
                        if (Game.minGameShareGame.roomParam.tableId >= 0 && Game.minGameShareGame.roomParam.serverId) {
                            FishScene.show(Game.sceneConfig.serCfg[Game.minGameShareGame.roomParam.serverId])
                        } else {
                            FishScene.show(WinUtils.getSaveUI(r).selectedSceneCfg)
                        }
                        ActionReport.report(ActionReport.actionIndex.loadSceneResEnd)
                    } else {
                        LoadingView.remove()
                    }
                },
                function(e) {
                    LoadingView.updateValue(e)
                });
                if (e.SceneId == Game.sceneConfig.sceneID.scene_DaoDan || e.SceneId == Game.sceneConfig.sceneID.scene_Dragon_DaoDan) {
                    ActionEventReport.report(e.SceneId == Game.sceneConfig.sceneID.scene_DaoDan ? ActionEventReport.actionIndex.ID1080: ActionEventReport.actionIndex.ID1078, {
                        t: 0
                    })
                }
            } else {
                n = {
                    SvrId: 0,
                    ServerName: "",
                    TableId: 0
                };
                LoadingView.remove();
                GameCenter.show();
                Game.minGameShareGame.roomParam = {};
                if (t.MsgId) {
                    MessageBox.show(GameConfig.ErrorMsg.getMsgById(t.MsgId, t.MsgParam))
                }
            }
        } else {
            if (t.MsgId) {
                MessageBox.show(GameConfig.ErrorMsg.getMsgById(t.MsgId, t.MsgParam))
            }
            var e = WinUtils.getSaveUI(r).selectedSceneCfg;
            if (e) {
                if (e.SceneId == Game.sceneConfig.sceneID.scene_DaoDan || e.SceneId == Game.sceneConfig.sceneID.scene_Dragon_DaoDan) {
                    ActionEventReport.report(e.SceneId == Game.sceneConfig.sceneID.scene_DaoDan ? ActionEventReport.actionIndex.ID1080: ActionEventReport.actionIndex.ID1078, {
                        t: 1
                    })
                }
            }
        }
    };
    t.setRedPoint = function(e, t, i, n, s, a) {
        if (a != undefined) {
            this.taskRedP.visible = a ? true: false
        }
        this.backIconRedMark.visible = t ? true: false;
        this.emailRedMark.visible = i ? true: false;
        this.activityRedMark.visible = e ? true: false;
        this.invitationRedMark.visible = n ? true: false;
        this.loginGiftRedMark.visible = s ? true: false
    };
    t.isShowRedMarks = function(e, t) {
        if (e === Game.redPoint.package) {
            this.backIconRedMark.visible = t
        } else if (e === Game.redPoint.email) {
            this.emailRedMark.visible = t
        } else if (e === Game.redPoint.activity) {
            this.activityRedMark.visible = t
        } else if (e === Game.redPoint.invitation) {
            this.invitationRedMark.visible = t;
            this.btnMianFel.getChildByName("redPoint").visible = t
        }
    };
    t.changeVipLevelIcon = function(e) {
        if (this.vipLevel_icon) {
            this.vipLevel_icon.value = e
        }
    };
    t.JingdianClick = function() {
        if (this.page_2.visible) {
            return false
        }
        this.backTo.visible = true;
        this.hidePage1();
        this.page_2.scale(0, 0);
        this.page_2.visible = true;
        this.timer.once(200, this,
        function() {
            Laya.Tween.to(this.page_2, {
                scaleX: 1,
                scaleY: 1
            },
            200)
        })
    };
    t.youYiSaiClick = function() {
        yysRoom.show(true)
    };
    t.DTSceneSwitch = function() {
        var e = Game.sceneConfig.serCfg[Game.sceneConfig.sceneID.scene_DT_qt];
        if (e && e.IsOpen == 0) {
            this.btnDb.visible = false
        } else {
            this.btnDb.visible = true;
            this.DTVipTip.visible = Player.getVipLevel() >= 2 ? false: true
        }
    };
    t.showOtherGames = function() {
        if (this.page_3.visible) {
            return false
        }
        this.DTSceneSwitch();
        this.backTo.visible = true;
        this.hidePage1();
        this.page_3.scale(0, 0);
        this.page_3.visible = true;
        this.timer.once(200, this,
        function() {
            Laya.Tween.to(this.page_3, {
                scaleX: 1,
                scaleY: 1
            },
            200)
        })
    };
    t.hidePage1 = function() {
        this.bottomBox.visible = false;
        this.topBtnBox.visible = false;
        this.leftBtnBox.visible = false;
        this.rightBtnBox.visible = false;
        this.rightBtnBox2.visible = false;
        this.btn7Recharge.visible = false;
        this.mainFeiList.visible = false;
        Laya.Tween.to(this.page_1, {
            scaleX: 0,
            scaleY: 0
        },
        200, null, Laya.Handler.create(this,
        function() {
            if (WinUtils.getSaveUI(r)) {
                WinUtils.getSaveUI(r).page_1.visible = false
            }
            if (this.btnQuIcon) this.btnQuIcon.visible = false
        }))
    };
    t.hidePage = function() {
        var e = this.page_2.visible ? this.page_2: this.page_3;
        Laya.Tween.to(e, {
            scaleX: 0,
            scaleY: 0
        },
        200, null, Laya.Handler.create(this,
        function() {
            e.visible = false
        }))
    };
    t.backToClick = function() {
        if (this.page_1.visible) {
            return false
        }
        this.backTo.visible = false;
        this.hidePage();
        this.page_1.scale(0, 0);
        this.page_1.visible = true;
        this.timer.once(200, this,
        function() {
            Laya.Tween.to(this.page_1, {
                scaleX: 1,
                scaleY: 1
            },
            200)
        });
        this.bottomBox.visible = true;
        this.topBtnBox.visible = true;
        this.leftBtnBox.visible = true;
        this.rightBtnBox.visible = true;
        this.rightBtnBox2.visible = true;
        this.btnMianFel.visible = true;
        this.showSevenDayRecharge(SevenDayRecharge.msgData);
        this.btnStart.visible = true;
        this.userHead.visible = true;
        this.vipLevel_icon.visible = true;
        this.showQTTGoldIcon()
    };
    t.enterToVipScene = function() {
        var e = Player.getVipLevel(),
        t = Player.getVipLeftTime();
        if (e <= 0 || t <= 0) {
            var i = Game.miniGameIOS() ? "您的贵族等级不够": "您的贵族等级不够，前往提升贵族等级";
            var n = MessageBox.show(i);
            n.submitCall = function() {
                n.submitCall = null;
                VipInfo.show()
            }
        } else if (e > 0 && t > 0) {
            this.selectScene(Game.sceneConfig.sceneID.scene_Vip)
        }
    };
    t.poolGoldFloat = function() {
        this._loopUpdatePool = true;
        for (var e = 0; e < this.poolGoldArr.length; e++) {
            var t = this.poolGoldArr[e];
            var i = this.poolGoldObj[e];
            var n = t >= 1e6 ? 1e5: 5e4;
            var s = Utils.getRandom(0, n);
            var a = Utils.getRandom(3, 15);
            if (i) {
                var r = i.value * 1;
                i.value = r - t >= n * a ? r - s: r + s
            }
        }
    };
    t.updatePoolGold = function(e) {
        var t = e.Gold1,
        i = e.Gold2,
        n = e.Gold3;
        this.poolGoldArr = [t, i, t + i, n];
        if (!this._loopUpdatePool) {
            for (var s = 0; s < this.poolGoldArr.length; s++) {
                var a = this.poolGoldArr[s];
                var r = this.poolGoldObj[s];
                if (r) {
                    r.value = a
                }
            }
            this.timer.frameLoop(5, this, this.poolGoldFloat)
        }
    };
    t.GoldPigPoolReq = function() {
        if (Game.server.socket && Game.server.socket.connected()) {
            Request.getGoldPigPrizeReq()
        } else {
            this.timer.clear(this, this.GoldPigPoolReq)
        }
    };
    t.ActGoldPigSwitch = function(e, t) {
        var i = e ? true: false;
        this.baibei_pool_bg.visible = i;
        this.qianbei_pool_bg.visible = i;
        this.jingdian_pool_bg.visible = i;
        this.guizu_pool_bg.visible = i;
        this.jingdian_logo.x = i ? 101 : 20;
        this.jingdian_logo.skin = i ? "resource/gameCenter/JD_jingdianchang.png": "resource/gameCenter/zi_zjm_jingdianchang.png";
        this.jingdian_logo.y = i ? 90 : 145;
        if (i) {
            this.timer.clear(this, this.GoldPigPoolReq);
            Request.getGoldPigPrizeReq();
            var n = 5;
            var s = GameConfig.getSysCfgByKey("GoldPigLoopReqTime");
            if (s) {
                n = s
            }
            this.timer.loop(1e3 * n, this, this.GoldPigPoolReq);
            this.jinbi1.play(0, true);
            this.jinbi2.play(0, true);
            this.shanshuo.play(0, true);
            this.shanshuo2.play(0, true)
        } else {
            this.timer.clear(this, this.GoldPigPoolReq);
            this.jinbi1.stop();
            this.jinbi2.stop();
            this.shanshuo.stop();
            this.shanshuo2.stop()
        }
    };
    var s = {
        display: null,
        unDisplay: null,
        SKIN_NAME: r,
        init: function() {},
        exit: function() {
            if (Game.channel.cfg.cps === Game.ChannelConstants.vivo || Game.channel.cfg.cps === Game.ChannelConstants.keJin) {
                Main.exit()
            } else {
                var e = MessageBox.show("你真的打算要走么?");
                e.submitCall = function() {
                    Main.exit()
                }
            }
        },
        show: function() {
            n = {
                SvrId: 0,
                ServerName: "",
                TableId: 0
            };
            Waiting.hide();
            if (!WinUtils.getSaveUI(r)) {
                new e;
                Request.getMallListReq();
                Game.isLoadHallPic = true
            }
            Game.DialogRoot.visible = true;
            WinUtils.getSaveUI(r).show();
            if (! (Game.onBaiDuGame || Game.onMiniGame)) Request.CustomerServiceChatListReq();
            ActionReport.report(ActionReport.actionIndex.enterGameCenter);
            WinUtils.getSaveUI(r).resumeSk()
        },
        hide: function(e) {
            if (WinUtils.getSaveUI(r)) {
                WinUtils.getSaveUI(r).hide(e)
            }
        },
        GetSceneCfgRep: function(e) {
            if (e instanceof Array) {
                for (var t = 0; t < e.length; t++) {
                    var i = e[t];
                    Game.sceneConfig.serCfg[i.SceneId] = i
                }
                if (WinUtils.getSaveUI(r)) {
                    WinUtils.getSaveUI(r).updateSceneEntrance();
                    if (Game.minGameShareGame.roomParam.serverId) {
                        if (Player.getNewPlayer()) {
                            Game.minGameShareGame.roomParam = {
                                serverId: 0,
                                serverName: "",
                                tableId: -1
                            }
                        } else {
                            GameCenter.selectSceneFn(Game.minGameShareGame.roomParam.serverId)
                        }
                    }
                }
            }
        },
        SelectGameSvrRep: function(e) {
            WinUtils.getSaveUI(r) && WinUtils.getSaveUI(r).SelectGameSvrRep(e)
        },
        EnterTableRep: function(e) {
            WinUtils.getSaveUI(r) && WinUtils.getSaveUI(r).EnterTableRep(e)
        },
        GetTableInfoListRep: function(e) {
            WinUtils.getSaveUI(r) && WinUtils.getSaveUI(r).GetTableInfoListRep(e)
        },
        isShowRedMark: function(e, t) {
            WinUtils.getSaveUI(r) && WinUtils.getSaveUI(r).isShowRedMarks(e, t)
        },
        quan_Entry: function() {
            WinUtils.getSaveUI(r) && WinUtils.getSaveUI(r).selectScene(Game.sceneConfig.sceneID.scene_10)
        },
        selectScene: function(e) {
            GameCenter.selectSceneFn(e)
        },
        selectSceneFn: function(e) {
            if (WinUtils.getSaveUI(r)) {
                WinUtils.getSaveUI(r).selectScene(e)
            }
        },
        updateQiHang: function() {
            if (Player.getNewPlayer()) {
                GetFirstReward.loadShow()
            }
        },
        quickStart: function() {
            WinUtils.getSaveUI(r) && WinUtils.getSaveUI(r).selectScene()
        },
        updateUi: function() {
            WinUtils.getSaveUI(r) && WinUtils.getSaveUI(r).updateUi()
        },
        updateRedPoint: function(e, t, i, n, s, a) {
            if (WinUtils.getSaveUI(r)) {
                WinUtils.getSaveUI(r).setRedPoint(e, t, i, n, s, a)
            }
        },
        hideFirstBuy: function() {
            if (WinUtils.getSaveUI(r) && WinUtils.getSaveUI(r).btnFirstChongBox) {
                WinUtils.getSaveUI(r).btnFirstChongBox.visible = false
            }
        },
        isHide: function() {
            return WinUtils.getSaveUI(r) && WinUtils.getSaveUI(r).visible
        },
        updateFreeLotteryRedPoint: function() {
            if (Game.onMiniGame || Game.onBaiDuGame) {
                if (WinUtils.getSaveUI(r)) {
                    if (WinUtils.getSaveUI(r).btnLuckyDrawRedPoint) {
                        var e = Player.GetADPrizeTimes();
                        WinUtils.getSaveUI(r).btnLuckyDrawRedPoint.visible = e ? true: false
                    }
                }
            }
        },
        getSceneInfo: function() {
            if (n) {
                return n
            }
            return null
        },
        setSceneInfo: function(e) {
            n = e
        },
        ReportVipLoginGift: function(e) {
            if (e) {
                var t = GameConfig.getVipInfoByLevel(e.VipLevel);
                if (WinUtils.getSaveUI(r)) {
                    WinUtils.getSaveUI(r).changeVipLevelIcon(e.VipLevel)
                }
                if (t) {
                    GetReward.show("贵族每日礼包", t.LoginGift, false);
                    if (e.GoldRepair > 0) {
                        VipNoticeBox.show(e.VipLevel, t.GoldRepair)
                    }
                }
            }
        },
        ReportVipUp: function(e) {
            if (WinUtils.getSaveUI(r)) {
                WinUtils.getSaveUI(r).changeVipLevelIcon(e)
            }
        },
        loginRep: function(e) {
            ChoiceAccount.hide();
            LoginViewApp.hide();
            LoadingView.show();
            EstablishAccount.hide();
            ActionReport.report(ActionReport.actionIndex.loadGameCenterResStart);
            Resource.checkLoaded = false;
            Resource.load(RES.gameCenter(),
            function(e) {
                if (e) {
                    ActionReport.report(ActionReport.actionIndex.loadGameCenterResEnd);
                    GameCenter.show()
                } else {
                    Main.exit()
                }
            },
            function(e) {
                LoadingView.updateValue(e)
            });
            var t = document.getElementById("qttLoadingDiv");
            if (t) {
                t.style.display = "none"
            }
            if (e && e.Tag == 1 && e.MsgId == 410) {
                i = true
            }
        },
        showHideMonster: function(e) {
            if (WinUtils.getSaveUI(r) && WinUtils.getSaveUI(r).hitMonster) {
                WinUtils.getSaveUI(r).hitMonster.visible = e
            }
        },
        showHideBtnXiFromSky: function(e) {
            if (WinUtils.getSaveUI(r) && WinUtils.getSaveUI(r).btnXiFromSky) {
                WinUtils.getSaveUI(r).btnXiFromSky.visible = e;
                if (e) {
                    if (!WinUtils.getSaveUI(r).btnXiFromSky._animation) {
                        WinUtils.getSaveUI(r).btnXiFromSky._animation = true;
                        WinUtils.getSaveUI(r).btnXiFromSky.scale(1, 1);
                        var t = Laya.TimeLine.to(WinUtils.getSaveUI(r).btnXiFromSky, {
                            scaleX: .8,
                            scaleY: .8
                        },
                        1400).to(WinUtils.getSaveUI(r).btnXiFromSky, {
                            scaleX: 1,
                            scaleY: 1
                        },
                        1400);
                        t.play(1, true)
                    }
                }
            }
        },
        ActSwitch: function(e, t, i) {
            if (WinUtils.getSaveUI(r)) {
                if (e == Game.actType.GoldPig) {
                    WinUtils.getSaveUI(r).ActGoldPigSwitch(t, i)
                }
            }
        },
        GetGoldPigPoolRep: function(e) {
            if (WinUtils.getSaveUI(r)) {
                WinUtils.getSaveUI(r).updatePoolGold(e)
            }
        },
        checkSevenDayRedpoint: function(e) {
            if (WinUtils.getSaveUI(r)) {
                WinUtils.getSaveUI(r).checkRedPoint()
            }
        },
        setHeadTip: function(e) {
            if (WinUtils.getSaveUI(r)) {
                WinUtils.getSaveUI(r).setHeadTip()
            }
        },
        showExchangeTip: function(e) {
            if (WinUtils.getSaveUI(r)) {
                WinUtils.getSaveUI(r).showExchangeTip(e)
            }
        },
        selectNormalScene: function() {
            if (WinUtils.getSaveUI(r)) {
                WinUtils.getSaveUI(r).selectNormalScene()
            }
        }
    };
    return s
} ();
var FishScene = window.FishScene = function() {
    var x;
    var e = "FishSceneFn";
    var t = 6e5;
    var i = false;
    var o = ["resource/fishScene/changjing01.jpg", "resource/fishScene/changjing02.jpg"];
    var n = 1e3;
    var a = [],
    h = false;
    var s = [[1, 2, 3, 4], [2, 1, 4, 3], [3, 4, 1, 2], [4, 3, 2, 1]];
    var l = Laya.Pool.getItemByClass("rect", Laya.Rectangle);
    l.setTo(100, 100, Game.UIWidth - 100, Game.UIHeight - 100);
    function r() {
        r.super(this);
        this.initBase(e, undefined, {
            isWindow: true
        });
        this.isNeedDestroy = false
    }
    Laya.class(r, e, fishSceneUI, "");
    var u = r.prototype;
    u.init = function() {
        x = this;
        this.fishDataList = [];
        this.fishMap = {};
        this.ableLockFishMap = {};
        this.selectedUnLockedFishMap = {};
        this.playerCannon = null;
        this.seatList = [];
        this.tableUserMap = {};
        this.sceneCfg = null;
        this.cannonMulList = [];
        this.showingLockLight = false;
        this.freezing = false;
        this.copyOtherUserId = 0;
        this.readyDanTouList = [];
        this.danTouTargetIdMap = {};
        this.danTouTargetIdArr = [];
        this.sceneBgIndex = 0;
        this.reconnectionNum = 0;
        this.SecretTable = false;
        this.fishGroupBoxMoving = false;
        this.fishGroupFishInstList = [];
        this.fishGroupFromLeft = false;
        this.fishGroupUpdateIndex = 0;
        this.bulletInstList = [];
        this.needDelBltList = [];
        h = false;
        var o = true;
        this.initEvent();
        Laya.stage.on(Laya.Event.def_updateWxInfo, this, this.updateWxInfo);
        this.on(Laya.Event.MOUSE_DOWN, this,
        function(e) {
            if (e.target && e.target.name == "fishBox" && this.playerCannon && !this.playerCannon.isHarmonics) {
                if (this.readyDanTouList.length > 0) {
                    return
                }
                if (this.playerCannon) {
                    this.playerCannon.MouseEventTarget = "fishBox";
                    o = true;
                    this.playerCannon.fire(false)
                }
            }
        });
        this.on(Laya.Event.MOUSE_UP, this,
        function(e) {
            if (this.playerCannon && !this.playerCannon.autoFire && !this.playerCannon.isHarmonics) {
                if (this.playerCannon.locked && this.playerCannon.lockedFish) {
                    return
                }
                o = false;
                this.playerCannon.stop()
            }
        });
        var l = ["pao", "paoTai", "emjoys_view", "btnGift", "useBox", "btnCopy"];
        this.on(Laya.Event.CLICK, this,
        function(e) {
            if (e.target && this.playerCannon) {
                var t = false;
                this.playerCannon.MouseEventTarget = e.target.name;
                if (ChangeMulTip && ChangeMulTip.stageClick) {
                    ChangeMulTip.stageClick()
                }
                if (l.indexOf(e.target.name) < 0) {
                    this.hideUserIdUI()
                }
                if (this.readyDanTouList.length > 0) {
                    this.updateLockTarget()
                }
                this.btnHanHua.visible = false;
                this.paotaiContrl.visible = false;
                this.btnRedPackge.visible = false;
                switch (e.target.name) {
                case "btnTeHui":
                    TeHuiGiftDialog.show(1);
                    break;
                case "btnDuihuan":
                    ExChangeJuan.show(GuidanceRedActivity.guide ? 1 : 0);
                    EventBus.send(EventConfig.GuidanceRedActivity.GO_NEXT_STEP, 6);
                    if (GuidanceRedActivity.guide) {
                        ActionEventReport.report(ActionEventReport.actionIndex.ID1045)
                    }
                    break;
                case "btnShopCity":
                    ShopMall.show(undefined, 2);
                    ActionReport.addLog(ActionReport.actionIndex.gameHall_Shop);
                    break;
                case "btnHanHua":
                    ChatSystem.show();
                    var i = e.target;
                    var n = i.getChildByName("redMark");
                    if (i && n && n.visible) {
                        n.visible = false
                    }
                    ActionReport.addLog(ActionReport.actionIndex.gameHall_Chat);
                    break;
                case "btn_dt_baiJin":
                    t = true;
                    incomeRemind(function() {
                        x.UseDanTouReq(Game.item.BaiJinDaoDan);
                        ActionReport.addLog(ActionReport.actionIndex.UseSkillDanTou_baiJin)
                    });
                    break;
                case "btn_dt_huangJin":
                    t = true;
                    incomeRemind(function() {
                        x.UseDanTouReq(Game.item.HuangJinDaoDan);
                        ActionReport.addLog(ActionReport.actionIndex.UseSkillDanTou_huangJin)
                    });
                    break;
                case "btn_dt_baiYin":
                    t = true;
                    incomeRemind(function() {
                        x.UseDanTouReq(Game.item.BaiYinDaoDan);
                        ActionReport.addLog(ActionReport.actionIndex.UseSkillDanTou_baiYin)
                    });
                    break;
                case "btn_dt_qinTong":
                    t = true;
                    incomeRemind(function() {
                        x.UseDanTouReq(Game.item.QinTongDaoDan);
                        ActionReport.addLog(ActionReport.actionIndex.UseSkillDanTou_qinTong)
                    });
                    break;
                case "cannon1Click":
                    x.paotaiContrl.visible = !x.paotaiContrl.visible;
                    if (x.playerCannon && x.playerCannon.isHarmonics) {
                        x.paotaiContrl.visible = false
                    }
                    x.btnHanHua.visible = !x.btnHanHua.visible;
                    if (Player.getRedPackageTurn()) {
                        var s = GameConfig.getVipInfoByLevel(Player.getVipLevel());
                        if (s.OpenRedBag) {
                            x.btnRedPackge.visible = !x.btnRedPackge.visible
                        } else {
                            x.btnRedPackge.visible = false
                        }
                    } else {
                        x.btnRedPackge.visible = false
                    }
                    break;
                case "paotaiContrl":
                    CannonSkins.show();
                    x.paotaiContrl.visible = false;
                    break;
                case "userHead":
                    var a = e.target.parent.name;
                    if (a == "userInfoBox_2" || a == "userMatchBox_2") {
                        this.showUserIdUI(2)
                    } else if (a == "userInfoBox_3" || a == "userMatchBox_3") {
                        this.showUserIdUI(3)
                    } else if (a == "userInfoBox_4" || a == "userMatchBox_4") {
                        this.showUserIdUI(4)
                    }
                    break;
                case "skill_sd_icon":
                    if (NoviceGuidanceOnMinGame.stepNum() == 3) {
                        this.playerCannon.lockedCacheFishId = null;
                        this.findLockedFish();
                        ActionEventReport.report(ActionEventReport.actionIndex.ID1046);
                        return
                    }
                    this.UseSkillReq(Game.item.SuoDing);
                    ActionReport.addLog(ActionReport.actionIndex.UseSkillSuoDing);
                    ActionEventReport.report(ActionEventReport.actionIndex.ID1084, 1);
                    break;
                case "skill_bd_icon":
                    this.UseSkillReq(Game.item.BinDong);
                    ActionReport.addLog(ActionReport.actionIndex.UseSkillBingDong);
                    ActionEventReport.report(ActionEventReport.actionIndex.ID1084, 2);
                    break;
                case "skill_kb_icon":
                    this.UseSkillReq(Game.item.KuangBao);
                    ActionReport.addLog(ActionReport.actionIndex.UseSkillKuangBao);
                    ActionEventReport.report(ActionEventReport.actionIndex.ID1084, 3);
                    break;
                case "skill_fs_icon":
                    this.UseSkillReq(Game.item.Harmonics);
                    ActionEventReport.report(ActionEventReport.actionIndex.ID1084, 4);
                    break;
                case "skill_js_icon":
                    this.UseSkillReq(Game.item.AddSpeed);
                    ActionEventReport.report(ActionEventReport.actionIndex.ID1084, 5);
                    break;
                case "haoJiao":
                    this.UseSkillReq(Game.item.HaoJiao);
                    break;
                case "zhaDan":
                    incomeRemind(function() {
                        x.UseSkillReq(Game.item.ZhaDan);
                        ActionReport.addLog(ActionReport.actionIndex.UseSkillZhaDan)
                    });
                    break;
                case "daoDanBox":
                    t = true;
                    break;
                case "daoDanBar":
                    t = true;
                    this.showDaoDanBox();
                    break;
                case "btnAutoFire":
                    ActionReport.addLog(ActionReport.actionIndex.Click_AutoFire);
                    this.updateAutoFire();
                    break;
                case "btnDel":
                    this.updateCannonMul(false);
                    ActionReport.addLog(ActionReport.actionIndex.CannonMulDel);
                    break;
                case "btnAdd":
                    this.updateCannonMul(true);
                    if (Player.getOpenXSYD() && Player.getNewPlayer()) {
                        NoviceGuidanceOnMinGame.firstFun()
                    }
                    ActionReport.addLog(ActionReport.actionIndex.CannonMulAdd);
                    break;
                case "waitJoin":
                    if (Channel && Channel.forward) {
                        Channel.forward("sceneShare");
                        ActionReport.addLog(ActionReport.actionIndex.sceneInvite)
                    }
                    break;
                case "menuBar":
                    this.showMenu();
                    break;
                case "btnSetting":
                    Seting.show();
                    break;
                case "btnAtlas":
                    Pokedex.show();
                    break;
                case "btnExit":
                    this.exit();
                    ActionReport.addLog(ActionReport.actionIndex.sceneExitBtn);
                    break;
                case "smallJinPig":
                    SmallGoldPig.show();
                    break;
                case "boxBtnLuckyShake":
                    LuckyShake.show(false);
                    break;
                case "btnRedPackge":
                    SendRedPackage.show();
                    break;
                case "btnRedPkg":
                    this.hideRedPkgTip();
                    SendRedPackage.show();
                    break;
                case "BlackDiaImg":
                    this.showItemDesc(Game.item.BlackDia);
                    break;
                case "ForcePushImg":
                    this.showItemDesc(Game.item.ForcePush);
                    break;
                case "btnWB":
                    worldBossMain.show();
                    break;
                case "DTEnd":
                    var r = MessageBox.show("确定要离开吗?");
                    r.submitCall = function() {
                        if (R.playerCannon) {
                            R.playerCannon.stop(true)
                        }
                        Request.GetDTDBResultReq()
                    };
                    break;
                case "seven_day":
                    ActionReport.addLog(ActionReport.actionIndex.newPlayerGift);
                    NewPlayerGift.show();
                    break;
                case "btnShare":
                    BossShareDialog.show();
                    break;
                case "btnOnlineGift":
                    ActionEventReport.report(ActionEventReport.actionIndex.ID1019);
                    OnlineGift.show();
                    break;
                case "btnSkillOpen":
                    this.skillBox2.visible = !this.skillBox2.visible;
                    this.btnSkillOpen.skin = this.skillBox2.visible ? "resource/fishScene/btn_shouqi.png": "resource/fishScene/btn_shenzhan.png";
                    ActionEventReport.report(ActionEventReport.actionIndex.ID1085);
                    break
                }
                if (e.target.name != "menuBar") {
                    this.hideMenu()
                }
                if (!t) {
                    this.hideDaoDanBox()
                }
                if (e.target && e.target.name == "fishBox" && o && this.playerCannon && !this.playerCannon.isHarmonics) {
                    if (this.readyDanTouList.length > 0) {
                        return
                    }
                    if (this.playerCannon) {
                        this.playerCannon.MouseEventTarget = "fishBox";
                        this.playerCannon.fire(true)
                    }
                }
            }
            if (this.playerCannon && (this.playerCannon.locked || this.playerCannon.isHarmonics)) {
                if (e.target && e.target.name != "fishBox") {
                    return
                }
                this.updateLockTarget()
            }
        });
        Gold.init(this.goldBox);
        Score.init(this.goldBox);
        FishDeadSpine.init(this.spineFishDead);
        BingDongSpine.init(this.bossComeBox);
        ZhuanPan.init(this.zhuanPanBox);
        SkillZhaDan.init(this.zhuanPanBox);
        ShanDianLian.init(this.shanDianLianBox);
        DanTou.init(this.shanDianLianBox);
        JuBaoPen.init(this.zhuanPanBox);
        StrikeMultiple.init(this.zhuanPanBox);
        BigWin.init(this.zhuanPanBox);
        BaoFuLa.init(this.zhuanPanBox);
        DaoDanBaoJi.init(this.zhuanPanBox);
        SmallGoldPig.init(this.smallJinPig, this.smallJinPigTip);
        ChatSystem.init([this.chatModel_0, this.chatModel_1, this.chatModel_2, this.chatModel_3]);
        SkillSuoDingCD.init(this.skill_sd_cd_bg, this.skill_sd_cd_time, Game.config.cdTime.SuoDing, this.checkTargetFish);
        SkillBinDongCD.init(this.skill_bd_cd_bg, this.skill_bd_cd_time, Game.config.cdTime.BinDong);
        SkillKuangBaoCD.init(this.skill_kb_cd_bg, this.skill_kb_cd_time, Game.config.cdTime.KuangBao, this.checkTargetFish);
        SkillHarmonicsCD.init(this.skill_fs_cd_bg, this.skill_fs_cd_time, Game.config.cdTime.Harmonics);
        SkillAddSpeedCD.init(this.skill_js_cd_bg, this.skill_js_cd_time, Game.config.cdTime.AddSpeed);
        this.weiZhiTiShiAni = new weizhitishiUI;
        this.weiZhiTiShiAni.visible = !Player.getNewPlayer();
        if (!Player.getNewPlayer()) {
            this.weiZhiTiShiAni.ani1.index = 1
        }
        this.weiZhiTiShiAni.zOrder = 99;
        if (this.addMulTip) {
            ChangeMulTip.init(this.addMulTip)
        }
        var e = (this.width - Game.UIWidth) / 2;
        var t = (this.height - Game.UIHeight) / 2;
        this.weiZhiTiShiAni.pos(e, t);
        this.addChild(this.weiZhiTiShiAni);
        if (!this.quanEftInst) {
            this.quanEftInst = new jiangquanzhuanpanUI;
            this.quanEftInst.size(960, 540);
            this.quanEftInst.pivot(960 / 2, 540 / 2);
            this.quanEftInst.visible = false;
            this.quanEftInst.ani1.on(Laya.Event.COMPLETE, this,
            function() {
                this.zhuanPanBox.visible = false;
                this.quanEftInst.visible = false
            });
            this.zhuanPanBox.addChild(this.quanEftInst)
        }
        if (!this.bossComeAniInst) {
            this.bossComeAniInst = new bosslaixi2UI;
            this.bossComeAniInst.size(1136, 640);
            this.bossComeAniInst.pivot(568, 320);
            this.bossComeAniInst.pos(Game.UIWidth / 2, Game.UIHeight / 2 - 50);
            this.bossComeAniInst.ani1.on(Laya.Event.COMPLETE, this,
            function() {
                this.bossComeAniInst.visible = false;
                this.bossComeBox.visible = false
            });
            this.bossComeAniInst.once(Laya.Event.UNDISPLAY, this,
            function() {
                this.bossComeAniInst.ani1.stop()
            });
            this.bossComeBox.addChild(this.bossComeAniInst);
            this.bossComeBox.visible = false
        }
        this.fishGroupComing = new yuchaolailinUI;
        this.fishGroupComing.size(Game.UIWidth, Game.UIHeight);
        this.fishGroupComing.pivot(Game.UIWidth / 2, Game.UIHeight / 2);
        this.fishGroupComing.pos(Game.UIWidth / 2, Game.UIHeight / 2);
        this.fishGroupComing.visible = false;
        this.fishGroupComingBox.addChild(this.fishGroupComing);
        this.shakeRedPoint.visible = Player.getShakeTimes() > 0 && Player.IsCanShowShark() ? true: false;
        this.btnTeHui.getChildByName("redPoint").visible = this.shakeRedPoint.visible;
        LuckyShake.closed = null;
        LuckyShake.closed = function() {
            if (R && R.displayedInStage) {
                if (R.isMatchScene()) {
                    return
                }
                R.shakeRedPoint.visible = Player.getShakeTimes() > 0 ? true: false
            }
        };
        Laya.stage.off(Laya.Event.def_changeShakeTimes, this, this.updateShakeRedPoint);
        Laya.stage.on(Laya.Event.def_changeShakeTimes, this, this.updateShakeRedPoint);
        if (Channel && Channel.cfg.cps == Game.ChannelConstants.wyxq) {
            if (this.BlackDiaImg) {
                this.BlackDiaImg.visible = true
            }
            if (this.ForcePushImg) {
                this.ForcePushImg.visible = true
            }
        }
        if (Channel && Channel.cfg.cps == Game.ChannelConstants.ziJie) {
            if (RecorderMgr) {
                RecorderMgr.init(this.btnRecorder)
            }
            this.btnRecorder.visible = true
        }
        if (Channel && Channel.hideKeFu && this.btnHanHua) {
            this.btnHanHua.size(0, 0);
            this.btnHanHua.alpha = 0
        }
        this.changeSceceTime = (new Date).getTime();
        if (Player.getShowNewSevenDay()) {
            this.seven_day.visible = true;
            this.checkRedPoint()
        } else {
            this.seven_day.visible = false
        }
    };
    u.checkRedPoint = function() {
        var e = Player.getNewSevenDay();
        if (Player.getShowNewSevenDay) {
            if (e.indexOf("1") >= 0) {
                this.seven_day_redPoint.visible = true
            } else {
                this.seven_day_redPoint.visible = false
            }
        }
    };
    u.showItemDesc = function(e) {
        this.hideItemDesc();
        var t = GameConfig.Item.getItemInfoById(e);
        if (t) {
            var i = t.Description;
            if (this.descBox) {
                this.itemDescLab.text = i;
                var n = [0, 0];
                if (e == Game.item.BlackDia) {
                    n = [778, 65]
                } else if (e == Game.item.ForcePush) {
                    n = [778, 130]
                }
                this.descBox.pos(n[0], n[1]);
                this.descBox.visible = true;
                this.timer.once(3e3, this, this.hideItemDesc)
            }
        }
    };
    u.hideItemDesc = function() {
        if (this.descBox) {
            this.descBox.visible = false;
            this.itemDescLab.text = ""
        }
    };
    u.updateWxInfo = function() {
        if (this.playerCannon) {
            this.playerCannon.updateWxInfo()
        }
    };
    u.ceShiYuZhen = function() {
        c = [];
        this.fishDataList = [];
        for (var e in this.fishMap) {
            var t = this.fishMap[e];
            if (t) {
                if (t.displayedInStage && !t.destroyed) {
                    t.speedLeave()
                } else {
                    t.dead()
                }
            }
        }
        var i = new yuZhen_1UI;
        i.pivot(0, Game.UIHeight / 2);
        i.pos(Game.UIWidth, Game.UIHeight / 2);
        this.fishBox.addChild(i);
        var n = {
            delay: 0,
            bezier: [{
                x: Game.UIWidth,
                y: Game.UIHeight / 2
            },
            {
                x: -Game.UIWidth * 1.5,
                y: Game.UIHeight / 2
            }],
            ease: Linear.easeNone,
            persist: true,
            onStart: function(e) {},
            onStartParams: [i],
            onUpdate: function(e) {},
            onUpdateParams: [i],
            onComplete: function(e) {},
            onCompleteParams: [i]
        };
        this.tweenMaxInst = Laya.Pool.getItemByClass("TweenLite", TweenLite, "");
        this.tweenMaxInst.target = i;
        this.tweenMaxInst.szy_init(i, 37, n)
    };
    u.show = function(e) {
        var t = this;
        this.goldBox.removeChildren();
        this.spineFishDead.removeChildren();
        this.zhuanPanBox.removeChildren();
        this.shanDianLianBox.removeChildren();
        if (e) {
            this.sceneCfg = e;
            this.SecretTable = e.SecretTable;
            this.cannonMulList = e.CannonsMul;
            Game.state.set(e.SceneId)
        } else {
            console.error("szyLog file FishScene: SceneCfg is null")
        }
        var i = R.sceneCfg.SceneId;
        this.dragonBall.visible = false;
        if (i == Game.sceneConfig.sceneID.scene_YouYiSai) {
            yysFish.show(this.coreBox);
            this.userInfoBox_1.visible = false;
            this.userInfoBox_2.visible = false;
            this.userInfoBox_3.visible = false;
            this.userInfoBox_4.visible = false;
            this.btnMenuBack.visible = false;
            this.menuBar.visible = false;
            this.btnDuihuan.visible = false;
            this.btnTeHui.visible = false;
            this.btnShopCity.visible = false;
            this.daoDanBar.visible = false
        } else if (i == Game.sceneConfig.sceneID.scene_Dragon_DaoDan) {
            this.zhaDan.visible = false;
            this.dragonBall.visible = true
        } else if (i == Game.sceneConfig.sceneID.scene_SuperMatch) {
            this.shopTip.visible = true
        }
        this.updateItemNum();
        if (this.isMatchScene()) {
            this.MatchViewInit();
            if (this.isSuperMatchScene()) {
                MatchTask.init(this.taskBox, this.matchIconBox)
            }
        } else if (this.sceneCfg.SceneId == Game.sceneConfig.sceneID.scene_DaoDan) {
            if (this.SecretTable) {
                this.haoJiao.visible = true;
                if (this.haoJiaoIconAni) {
                    this.haoJiaoIconAni.visible = true;
                    this.haoJiaoIconAni.play()
                }
            }
        } else if (this.isDTScene()) {
            this.DTDBTit.visible = true;
            this.zhaDan.visible = false;
            this.daoDanBar.visible = false;
            this.shakeRedPoint.visible = false;
            this.boxBtnLuckyShake.visible = false
        }
        if (!Player.IsCanShowShark()) {
            this.boxBtnLuckyShake.visible = false
        }
        Sound.stopAll();
        this.lastTime = (new Date).getTime();
        this.timer.frameLoop(1, this, this.update);
        this.timer.frameOnce(10, this,
        function() {
            this.randomBgMusic()
        });
        NewPlayerTaskTip.init(this.taskBox);
        OnlineGift.iconInit(this.btnOnlineGift);
        if (Activity.pigAct()) {
            if (this.sceneCfg.SceneId == Game.sceneConfig.sceneID.scene_100 || this.sceneCfg.SceneId == Game.sceneConfig.sceneID.scene_1000 || this.sceneCfg.SceneId == Game.sceneConfig.sceneID.scene_Vip) {
                this.goldPigBox.visible = true;
                Request.getGoldPigPrizeReq();
                var n = 5;
                var s = GameConfig.getSysCfgByKey("GoldPigLoopReqTime");
                if (s) {
                    n = s
                }
                this.timer.loop(1e3 * n, this,
                function() {
                    Request.getGoldPigPrizeReq()
                })
            } else {
                this.goldPigBox.visible = false
            }
        } else {
            this.goldPigBox.visible = false
        }
        LoadingView.remove();
        Game.UIRoot.addChild(this);
        this.showHere(function() {
            if (Player.getNewPlayer() && !NoviceGuidanceOnMinGame.isGuidOver() && Player.getOpenXSYD()) {
                NoviceGuidanceOnMinGame.show(t.fishBox, t.fishMap, t.ableLockFishMap)
            }
        });
        c = [];
        Request.SceneReadyReq();
        Game.disablePagePush = false;
        if (!Player.getNewPlayer() || !Player.getOpenXSYD()) {
            NoviceGuidanceOnMinGame.hide()
        }
        Player.setBackWithGuide()
    };
    u.poolGoldFloat = function() {
        this._loopUpdatePool = true;
        var e = this.fish_goldpig_num["s_v"];
        var t = e >= 1e6 ? 1e5: 5e4;
        var i = Utils.getRandom(0, t);
        var n = Utils.getRandom(3, 15);
        var s = this.fish_goldpig_num.value * 1;
        this.fish_goldpig_num.value = s - e >= t * n ? s - i: s + i
    };
    u.windowResize = function() {
        if (Game.ViewWidth <= Game.UIMaxWidth) this.size(Game.ViewWidth, Game.UIHeight);
        else this.size(Game.UIMaxWidth, Game.UIHeight);
        this.pos((Game.ViewWidth - this.width) / 2, (Game.ViewHeight - this.height) / 2, true);
        Laya.timer.frameOnce(1, this, this.windowChangeSize);
        if (Game.ViewWidth > Game.UIWidth) {
            this.maskLeft.visible = true;
            this.maskRight.visible = true
        } else {
            this.maskLeft.visible = false;
            this.maskRight.visible = false
        }
        if (Game.ViewHeight > Game.UIHeight) {
            this.maskTop.visible = true;
            this.maskBottom.visible = true
        } else {
            this.maskTop.visible = false;
            this.maskBottom.visible = false
        }
    };
    u.windowChangeSize = function() {
        if (this.tableUserMap) {
            for (var e in this.tableUserMap) {
                var t = this.tableUserMap[e];
                if (t) {
                    t.resetPoint()
                }
            }
        }
    };
    u.showPoolNum = function(e) {
        var t = 0;
        switch (Game.state.get()) {
        case Game.sceneConfig.sceneID.scene_100:
            t = e.Gold1;
            break;
        case Game.sceneConfig.sceneID.scene_1000:
            t = e.Gold2;
            break;
        case Game.sceneConfig.sceneID.scene_Vip:
            t = e.Gold3;
            break;
        default:
        }
        this.fish_goldpig_num["s_v"] = t * 1;
        this.fish_goldpig_num.value = t;
        if (!this._loopUpdatePool) {
            this.timer.frameLoop(5, this, this.poolGoldFloat)
        }
    };
    u.reset = function() {
        Laya.stage.off(Laya.Event.def_gameExit, this, this.reset);
        Laya.stage.off(Laya.Event.def_updateWxInfo, this, this.updateWxInfo);
        if (R) {
            R.destroy()
        }
    };
    u.display = function() {
        if (Game.SceneStartLoadTime) {
            Game.SceneEndLoadTime = Date.now();
            console.log("进入场景用时:" + (Game.SceneEndLoadTime - Game.SceneStartLoadTime))
        }
        var e = Game.onMiniGame;
        if (e && this.SecretTable) {
            e = false
        }
        this.waitJoin_2_deng.visible = !e;
        this.waitJoin_3_deng.visible = !e;
        this.waitJoin_4_deng.visible = !e;
        this.waitJoin_2.visible = e;
        this.waitJoin_3.visible = e;
        this.waitJoin_4.visible = e;
        if (Game.miniGameIOS()) {
            this.btnTeHui.visible = false;
            this.btnShopCity.visible = false;
            this.boxBtnLuckyShake.visible = false;
            this.shakeRedPoint.visible = false
        }
        if (this.sceneCfg) {
            if (this.sceneCfg.SceneId === Game.sceneConfig.sceneID.scene_Vip && !Activity.pigAct()) {
                Request.GetVipSceneTimeReq()
            }
        }
        Resource.hideLoadingView();
        GameCenter.hide();
        I.display && I.display();
        if (c && c.length) {
            this.ReportSendFish(c);
            c = []
        }
        Notice.updatePosY();
        var t = Game.state.get();
        if (t >= Game.sceneConfig.sceneID.scene_100 && t <= Game.sceneConfig.sceneID.scene_DaoDan) {
            WBTitle.init({
                wrap: this.taskBox
            });
            WBAni.init(this.taskBox);
            this.btnWB.visible = true;
            Request.WorldBossCfgReq()
        } else {
            this.btnWB.visible = false
        }
        this.showSkillTip()
    };
    u.unDisplay = function() {
        this.timer.clearAll(this);
        this.reset();
        I.unDisplay && I.unDisplay()
    };
    u.isMatchScene = function() {
        if (this.sceneCfg && this.sceneCfg.SceneId >= Game.sceneConfig.sceneID.scene_SuperMatch && this.sceneCfg.SceneId <= Game.sceneConfig.sceneID.scene_SuperMatchSkill) {
            return true
        } else {
            return false
        }
    };
    u.isDTScene = function() {
        if (this.sceneCfg && this.sceneCfg.SceneId >= Game.sceneConfig.sceneID.scene_DT_qt && this.sceneCfg.SceneId <= Game.sceneConfig.sceneID.scene_DT_bj) {
            return true
        } else {
            return false
        }
    };
    u.isSuperMatchScene = function() {
        if (this.sceneCfg && this.sceneCfg.SceneId == Game.sceneConfig.sceneID.scene_SuperMatch) {
            return true
        } else {
            return false
        }
    };
    u.MatchViewInit = function() {
        if (this.sceneCfg.SceneId == Game.sceneConfig.sceneID.scene_SuperMatch) {
            this.matchSceneIcon.skin = "resource/fishScene/biaoti_dajiangsai.png"
        } else if (this.sceneCfg.SceneId == Game.sceneConfig.sceneID.scene_SuperMatchJuan) {
            this.matchSceneIcon.skin = "resource/fishScene/biaoti_huafeisai.png"
        } else if (this.sceneCfg.SceneId == Game.sceneConfig.sceneID.scene_SuperMatchDaoDan) {
            this.matchSceneIcon.skin = "resource/fishScene/biaoti_daodansai.png"
        } else if (this.sceneCfg.SceneId == Game.sceneConfig.sceneID.scene_SuperMatchSkill) {
            this.matchSceneIcon.skin = "resource/fishScene/biaoti_jinengsai.png"
        }
        var e = [this.shakeRedPoint, this.boxBtnLuckyShake, this.daoDanBar, this.zhaDan, this.skill_bd_bg];
        var t = [this.matchIconBox, this.matchInfoBox];
        for (var i = 0; i < e.length; i++) {
            var n = e[i];
            if (n) {
                n.visible = false
            }
        }
        if (this.isSuperMatchScene()) {
            for (var i = 0; i < t.length; i++) {
                var n = t[i];
                if (n) {
                    n.visible = true
                }
            }
            this.matchBltIcon.y = 200
        } else {
            this.matchIconBox.visible = true
        }
        this.skill_sd_bg.left = 39;
        this.skill_kb_bg.right = 39;
        this.skill_sd_get_ani.x = 81;
        this.skill_kb_get_ani.x = 170
    };
    u.MatchUpdate = function() {
        if (!this.matchIconBox.visible) {
            return
        }
        this.matchBltIcon.y += 5;
        if (this.matchBltIcon.y >= 200) {
            this.matchBltIcon.y = -10
        }
    };
    u.MatchStartFx = function() {
        var e = Laya.Pool.getItemByClass("Ani_tianzhan2", Laya.Animation);
        e.source = "UIRoot/FX/tianzhan2.ani";
        e.pos(Game.UIWidth / 2, Game.UIHeight / 2);
        e.once(Laya.Event.COMPLETE, this,
        function() {
            e.removeSelf();
            Laya.Pool.recover("Ani_tianzhan2", e)
        });
        e.once(Laya.Event.DISPLAY, this,
        function() {
            e.play(0, false, "Tianzhankaishi")
        });
        this.addChild(e)
    };
    u.MatchUpdateBuoy = function(e) {
        if (!this.isSuperMatchScene()) {
            return
        }
        var t = 43,
        i = 190,
        n = 2400;
        if (Player.getMatchDayPrize()) {
            this.matchScoreUpBox.visible = false
        } else {
            if (e < n) {
                var s = (i - t) * (e / n);
                var a = t + s;
                this.matchScoreUpBox.y = a;
                this.matchScoreUpBox.visible = true
            } else if (e >= n) {
                this.matchScoreUpBox.visible = false
            }
        }
    };
    u.showTipIcon = function() {
        var e = null;
        if (Player.getRedPackageTurn()) {
            var t = GameConfig.getVipInfoByLevel(Player.getVipLevel());
            if (t && t.OpenRedBag) {
                e = [this.paotaiContrl, this.btnHanHua, this.btnRedPackge]
            } else {
                e = [this.paotaiContrl, this.btnHanHua]
            }
        } else {
            e = [this.paotaiContrl, this.btnHanHua]
        }
        for (var i = 0; i < e.length; i++) {
            var n = e[i]; (function(e) {
                if (e && e.displayedInStage) {
                    e.scale(0, 0);
                    e.visible = true;
                    Laya.Tween.to(e, {
                        scaleX: 1,
                        scaleY: 1
                    },
                    300);
                    Laya.Tween.to(e, {
                        scaleX: 0,
                        scaleY: 0
                    },
                    300, null, Laya.Handler.create(this,
                    function() {
                        if (e && e.displayedInStage) {
                            e.visible = false;
                            e.scale(1, 1)
                        }
                    }), 2e3)
                }
            })(n)
        }
    };
    u.showHere = function(e) {
        if (this.weiZhiTiShiAni) {
            e && e();
            this.weiZhiTiShiAni.visible = true;
            this.weiZhiTiShiAni.ani1.play(1, false);
            this.weiZhiTiShiAni.ani1.once(Laya.Event.COMPLETE, this,
            function() {
                if (!Player.getNewPlayer()) {
                    this.showTipIcon();
                    this.timer.once(2e3, this,
                    function() {
                        ChangeMulTip.showTip()
                    })
                }
                if (this.weiZhiTiShiAni) {
                    this.weiZhiTiShiAni.removeSelf();
                    this.weiZhiTiShiAni = null
                }
            });
            if (!Player.getNewPlayer()) {
                if (this.isMatchScene()) {
                    this.MatchStartFx()
                }
            }
        }
    };
    u.FishGroupBoxEnd = function() {
        this.fishGroupBoxMoving = false;
        this.fishGroupBox.visible = false;
        this.fishGroupBoxPathPointArray = [];
        if (this.fishGroupFishInstList.length > 0) {
            for (var e = 0; e < this.fishGroupFishInstList.length; e++) {
                var t = this.fishGroupFishInstList[e];
                if (t.alive && t.displayedInStage) {
                    t.dead()
                }
            }
        }
        this.fishGroupFishInstList = [];
        if (this.fishGroupBoxTweenInst) {
            TweenLite.killTweensOf(this.fishGroupBoxTweenInst.target, false, null);
            this.fishGroupBoxTweenInst.prevNode = null;
            this.fishGroupBoxTweenInst.nextNode = null;
            this.fishGroupBoxTweenInst.target = null;
            this.fishGroupBoxTweenInst.vars = null;
            this.fishGroupBoxTweenInst.data = null;
            this.fishGroupBoxTweenInst = null
        }
    };
    u.FishGroupBoxPause = function() {
        if (this.fishGroupBoxTweenInst) {
            this.fishGroupBoxTweenInst.pause()
        }
    };
    u.FishGroupBoxResume = function() {
        if (this.fishGroupBoxTweenInst) {
            this.fishGroupBoxTweenInst.resume()
        }
    };
    u.FishGroupSpeedLeave = function() {
        this.fishGroupBoxTweenInst && this.fishGroupBoxTweenInst.timeScale(60)
    };
    u.addFishToScene = function() {
        var i = this;
        var n = this.fishDataList.shift();
        if (n) {
            if (!f) {
                f = n.SceneSeq
            }
            if (this.fishMap[n.Id]) {
                if (Game.debug) {
                    console.log("重复的鱼...." + n.Id)
                }
            } else {
                var e = FishModelCfg[n.FishId];
                if (e) {
                    var t = e.atlas;
                    Resource.checkLoaded = false;
                    Resource.load(["res/atlas/resource/newFish/type_" + t + ".atlas"],
                    function() {
                        var e = Fish.getFishByType(n);
                        if (!e || !e.modelCfg) {
                            e.dead(true);
                            if (Game.debug) {
                                console.log("没有找到鱼模型配置")
                            }
                        } else {
                            var t = e.modelCfg.boxIndex || e.modelCfg.atlas;
                            if (i["group_" + t]) {
                                i["group_" + t].visible = true;
                                e.pos( - Game.UIWidth, 0);
                                if (n.TideSeq) {} else {}
                                e.sockLightBox = i.sockLightBox;
                                if (e.ableLock) {
                                    e.addLockSight();
                                    i.ableLockFishMap[n.Id] = e;
                                    if (i.playerCannon && i.playerCannon.locked && !i.playerCannon.lockedFish && e.isSuoDingSight) {
                                        e.showLockSight()
                                    } else if (i.readyDanTouList.length > 0) {
                                        e.showLockSight(true)
                                    } else {
                                        e.hideLockSight()
                                    }
                                }
                                if (e.type === Game.FishID.Fish_changE) {
                                    ChangE.show(i["group_" + t], i.leftTimeBox, e)
                                } else if (e.type === Game.FishID.Fish_bossXiaoYao || e.type === Game.FishID.Fish_bossJiangJun || e.type === Game.FishID.Fish_bossQueen) {
                                    if (i.haoJiaoIconAni) {
                                        i.haoJiaoIconAni.visible = false;
                                        i.haoJiaoIconAni.stop()
                                    }
                                    ExileBoss.show(i["group_" + t], i.leftTimeBox, e);
                                    i.BossComeAni(e.type)
                                } else if (e.type === Game.FishID.Fish_bossDragon) {
                                    ExileBoss.show(i["group_" + t], i.leftTimeBox, e);
                                    i.BossComeAni(e.type)
                                } else if (e.type === Game.FishID.Fish_worldBoss) {
                                    e.visible = false;
                                    i["group_" + t].addChild(e);
                                    WorldBoss.I().showBoss(e)
                                } else {
                                    i["group_" + t].addChild(e);
                                    e.move()
                                }
                                i.fishMap[n.Id] = e;
                                e.showMess();
                                if (n.TideSeq && e.pathPointArray.length > 3) {
                                    if (e.pathPointArray[0].x <= e.pathPointArray[2].x) {
                                        i.fishGroupFromLeft = true
                                    } else {
                                        i.fishGroupFromLeft = false
                                    }
                                }
                            } else {
                                console.log("没有找到父级容器" + n.FishId)
                            }
                        }
                    })
                } else {
                    if (Game.debug) {
                        console.log("FishConfg 缺少配置:FishId" + n.FishId)
                    }
                }
            }
        }
    };
    u.update = function() {
        var e = (new Date).getTime();
        var t = e - this.lastTime;
        this.lastTime = e;
        if (this.bd_bg && this.bd_bg.visible) {
            this.bd_bg.rotation += 4
        }
        if (this.fp_bg && this.fp_bg.visible) {
            this.fp_bg.rotation += 4
        }
        d += t;
        this.updateFishRunTime(t);
        var i = Object.keys(this.fishMap);
        for (var n = 0; n < i.length; n++) {
            this.fishMap[i[n]].updateSwim(t)
        }
        this.bulletBox.visible = this.bulletBox.numChildren ? true: false;
        this.netBox.visible = this.netBox.numChildren ? true: false;
        this.goldBox.visible = this.goldBox.numChildren ? true: false;
        this.zhuanPanBox.visible = this.zhuanPanBox.numChildren ? true: false;
        this.taskBox.visible = this.taskBox.numChildren ? true: false;
        if (this.playerCannon) {
            var s = this.timer.currTimer;
            var a = this.playerCannon.getLastFireTime();
            if (s - a >= Game.config.bullet.MaxFireInterval) {
                this.playerCannon.setLastFireTime(s);
                this.showLeaveSceneTimeTip()
            }
            this.autoFireLight.rotation += 4;
            if (this.playerCannon.locked && !this.playerCannon.lockedFish && !this.showingLockLight) {
                this.showLockSight()
            }
            if (this.readyDanTouList.length > 0) {
                this.showLockSight(true)
            }
        }
        if (this.fishDataList && this.fishDataList.length > 0) {
            this.addFishToScene()
        }
        if (this.fishGroupFishInstList.length > 0) {
            for (var r = 0; r < this.fishGroupFishInstList.length; r++) {
                var o = this.fishGroupFishInstList[r];
                if (o && o.alive && o.displayedInStage) {
                    o.update();
                    if (Fish.moveKeepAngleFishList && Fish.moveKeepAngleFishList.indexOf(o.type) >= 0) {
                        o.rotation = 0
                    } else {
                        o.rotation = -90
                    }
                    o.pathPointArray = this.fishGroupBoxPathPointArray
                } else {
                    this.fishGroupFishInstList.removeByValue(o)
                }
            }
        }
        if (this.bulletInstList.length > 0) {
            for (var r = 0; r < this.bulletInstList.length; r++) {
                var l = this.bulletInstList[r];
                if (l && l.update && l._InScene) {
                    l.update()
                } else {
                    this.needDelBltList.push(l)
                }
            }
        }
        if (this.needDelBltList.length > 0) {
            for (var r = 0; r < this.needDelBltList.length; r++) {
                var l = this.needDelBltList[r];
                if (l && !l._InScene) {
                    this.bulletInstList.removeByValue(l)
                }
            }
            this.needDelBltList = []
        }
        if (this.isMatchScene()) {
            this.MatchUpdate()
        }
        this.checkGoToNext()
    };
    u.checkGoToNext = function() {
        if (this.sceneCfg.SceneId == Game.sceneConfig.sceneID.scene_10 && !this.gotoNextMsgBox && Player.getGold() >= 5e4 && ((new Date).getTime() - this.changeSceceTime >= t || !Player.getGoNextFirstHitTag())) {
            this.changeSceceTime = (new Date).getTime();
            Player.setGoNextFirstHitTag(true);
            this.gotoNextMsgBox = MessageBox.show(GameConfig.ErrorMsg.clientErrorMsg(10161));
            this.gotoNextMsgBox.submitCall = function() {
                i = true;
                Request.LeaveGameSvrReq();
                this.gotoNextMsgBox = undefined;
                ActionReport.addLog(ActionReport.actionIndex.CHANGE_SCENE_TO_100_CONFIRM)
            }.bind(this);
            this.gotoNextMsgBox.closeCall = this.gotoNextMsgBox.closeEmptyCall = function() {
                this.gotoNextMsgBox = undefined;
                ActionReport.addLog(ActionReport.actionIndex.CHANGE_SCENE_TO_100_CANCEL)
            }.bind(this);
            ActionReport.addLog(ActionReport.actionIndex.CHANGE_SCENE_TO_100)
        }
    };
    u.updateItemNum = function() {
        var e = undefined,
        t = undefined,
        i = undefined,
        n = undefined,
        s = undefined,
        a = 0;
        if (Package.getDataById(Game.item.SuoDing)) {
            this.fc_sd_num.value = Package.getDataById(Game.item.SuoDing).num
        } else {
            this.fc_sd_num.value = 0
        }
        if (Package.getDataById(Game.item.BinDong)) {
            this.fc_bd_num.value = Package.getDataById(Game.item.BinDong).num
        } else {
            this.fc_bd_num.value = 0
        }
        if (Package.getDataById(Game.item.KuangBao)) {
            this.fc_kb_num.value = Package.getDataById(Game.item.KuangBao).num
        } else {
            this.fc_kb_num.value = 0
        }
        if (Package.getDataById(Game.item.QinTongDaoDan)) {
            e = Package.getDataById(Game.item.QinTongDaoDan).num
        } else {
            e = 0
        }
        if (Package.getDataById(Game.item.BaiYinDaoDan)) {
            t = Package.getDataById(Game.item.BaiYinDaoDan).num
        } else {
            t = 0
        }
        if (Package.getDataById(Game.item.HuangJinDaoDan)) {
            i = Package.getDataById(Game.item.HuangJinDaoDan).num
        } else {
            i = 0
        }
        if (Package.getDataById(Game.item.BaiJinDaoDan)) {
            n = Package.getDataById(Game.item.BaiJinDaoDan).num
        } else {
            n = 0
        }
        if (Package.getDataById(Game.item.ZhaDan)) {
            s = Package.getDataById(Game.item.ZhaDan).num
        } else {
            s = 0
        }
        if (Package.getDataById(Game.item.HaoJiao)) {
            a = Package.getDataById(Game.item.HaoJiao).num
        }
        if (Package.getDataById(Game.item.DragonBall)) {
            this.dragonBall.dragonBallNum.value = Package.getDataById(Game.item.DragonBall).num
        } else {
            this.dragonBall.dragonBallNum.value = 0
        }
        if (Package.getDataById(Game.item.AddSpeed)) {
            this.skill_js_num.value = Package.getDataById(Game.item.AddSpeed).num
        } else {
            this.skill_js_num.value = 0
        }
        if (Package.getDataById(Game.item.Harmonics)) {
            this.skill_fs_num.value = Package.getDataById(Game.item.Harmonics).num
        } else {
            this.skill_fs_num.value = 0
        }
        this.fc_dt_qinTong.value = e;
        this.fc_dt_baiYin.value = t;
        this.fc_dt_huangJin.value = i;
        this.fc_dt_baiJin.value = n;
        this.dantou_tol_num.value = e + t + i + n;
        this.zhaDan_tol_num.value = s;
        this.fc_haoJiaoNum.value = a;
        if (Game.state.get() == Game.sceneConfig.sceneID.scene_Dragon_DaoDan) {
            this.dantou_tol_num.value = n
        }
        if (Channel && Channel.cfg.cps == Game.ChannelConstants.wyxq) {
            var r = Package.getDataById(Game.item.BlackDia);
            var o = Package.getDataById(Game.item.ForcePush);
            if (r) {
                this.fc_125_num.value = r.num
            }
            if (o) {
                this.fc_126_num.value = o.num
            }
        }
    };
    u.randomBgMusic = function() {
        Sound.playFishSceneBgMusic()
    };
    u.setCopyUserId = function() {
        Utils.setCopyValue(this.copyOtherUserId)
    };
    u.showUserIdUI = function(e) {
        var t = this;
        var i, n;
        var s = null;
        for (var a in this.tableUserMap) {
            var r = this.tableUserMap[a];
            if (r && r.localPos == e) {
                i = r.userInfo.Nick;
                n = r.userInfo.UserId;
                s = r
            }
        }
        this.copyOtherUserId = n;
        if (s) {
            var o = Utils.localToGlobal(s.paoImage);
            o = this.emjoyBox.globalToLocal(o);
            var l, h;
            l = o.x;
            switch (e) {
            case 2:
                h = o.y + 120;
                break;
            case 3:
                h = o.y + 120;
                break;
            case 4:
                h = o.y - 120 - 263;
                break
            }
            this.emjoyBox.visible = true;
            var u = {
                x: l,
                y: h,
                userInfo: s.userInfo,
                localPos: e
            };
            EmjoyView.show(u, t.emjoyBox)
        }
    };
    u.hideUserIdUI = function() {
        EmjoyView.hide()
    };
    u.showMenu = function() {
        this.menuBox.visible = true;
        Laya.Tween.to(this.btnShopCity, {
            scaleX: 0,
            scaleY: 0
        },
        300);
        Laya.Tween.to(this.btnTeHui, {
            scaleX: 0,
            scaleY: 0
        },
        300);
        Laya.Tween.to(this.btnDuihuan, {
            scaleX: 0,
            scaleY: 0
        },
        300);
        Laya.Tween.to(this.seven_day, {
            scaleX: 0,
            scaleY: 0
        },
        300);
        Laya.Tween.to(this.btnOnlineGift, {
            scaleX: 0,
            scaleY: 0
        },
        300);
        Laya.Tween.to(this.btnWB, {
            scaleX: 0,
            scaleY: 0
        },
        300);
        Laya.Tween.to(this.menuBox, {
            x: Game.ViewHeight == Game.UIHeight && Math.abs(Game.UIWidth - Game.ViewWidth) > 15 ? 0 : -15
        },
        300);
        this.timer.once(300, this,
        function() {
            this.btnShopCity.visible = false;
            this.btnTeHui.visible = false;
            this.btnWB.visible = false;
            this.btnDuihuan.visible = false
        });
        this.menuBar.visible = false;
        this.btnMenuBack.once(Laya.Event.CLICK, this, this.hideMenu)
    };
    u.hideMenu = function() {
        if (Game.state.get() == Game.sceneConfig.sceneID.scene_YouYiSai) {
            return
        }
        Laya.Tween.to(this.menuBox, {
            x: -145
        },
        300, null, Laya.Handler.create(this,
        function() {
            this.menuBar.visible = true;
            this.menuBox.visible = false;
            var e = Game.state.get();
            if (Game.miniGameIOS()) {
                if (e >= Game.sceneConfig.sceneID.scene_100 && e <= Game.sceneConfig.sceneID.scene_DaoDan) {
                    this.btnWB.visible = true
                }
                this.btnDuihuan.visible = true
            } else {
                this.btnShopCity.visible = true;
                this.btnTeHui.visible = true;
                if (e >= Game.sceneConfig.sceneID.scene_100 && e <= Game.sceneConfig.sceneID.scene_DaoDan) {
                    this.btnWB.visible = true
                }
                this.btnDuihuan.visible = true
            }
            Laya.Tween.to(this.btnShopCity, {
                scaleX: 1,
                scaleY: 1
            },
            300, Laya.Ease.backInOut);
            Laya.Tween.to(this.btnTeHui, {
                scaleX: 1,
                scaleY: 1
            },
            300, Laya.Ease.backInOut);
            Laya.Tween.to(this.btnWB, {
                scaleX: 1,
                scaleY: 1
            },
            300, Laya.Ease.backInOut);
            Laya.Tween.to(this.btnDuihuan, {
                scaleX: 1,
                scaleY: 1
            },
            300, Laya.Ease.backInOut);
            Laya.Tween.to(this.seven_day, {
                scaleX: 1,
                scaleY: 1
            },
            300, Laya.Ease.backInOut);
            Laya.Tween.to(this.btnOnlineGift, {
                scaleX: 1,
                scaleY: 1
            },
            300, Laya.Ease.backInOut)
        }))
    };
    u.showDaoDanBox = function() {
        if (Game.state.get() == Game.sceneConfig.sceneID.scene_Dragon_DaoDan) {
            this.UseDanTouReq(Game.item.BaiJinDaoDan);
            return
        }
        if (this.daoDanBox.visible) {
            this.hideDaoDanBox();
            return
        }
        this.daoDanBox.visible = true;
        var e = this.width - 440;
        if (Game.Adapter && Adapter.fitViewW()) {
            e -= 40
        }
        Laya.Tween.to(this.daoDanBox, {
            x: e
        },
        150);
        this.timer.frameOnce(1, this,
        function() {
            if (this.ani1) {
                this.ani1.play(0, false)
            }
        })
    };
    u.hideDaoDanBox = function() {
        Laya.Tween.to(this.daoDanBox, {
            x: Game.ViewWidth + 440
        },
        300, null, Laya.Handler.create(this,
        function() {
            this.daoDanBox.visible = false
        }))
    };
    u.leaveTimeLoop = function() {
        this.leaveTipTime--;
        if (this.leaveTipTime == 0 && this.leaveSceneTimeTip.visible) {
            Request.LeaveGameSvrReq();
            this.hideLeaveSceneTimeTip();
            return
        }
        this.leaveTimeLabel.text = "由于您长时间未开炮，将在" + this.leaveTipTime + "秒后退出房间"
    };
    u.hideLeaveSceneTimeTip = function() {
        if (!this.leaveSceneTimeTip.visible) {
            return
        }
        this.timer.clear(this, this.leaveTimeLoop);
        this.leaveSceneTimeTip.visible = false;
        this.leaveTimeLabel.text = "由于您长时间未开炮，将在10秒后退出房间";
        this.leaveTipTime = 10
    };
    u.showLeaveSceneTimeTip = function() {
        if (!this.leaveSceneTimeTip.visible) {
            this.leaveTimeLabel.text = "由于您长时间未开炮，将在10秒后退出房间";
            this.leaveSceneTimeTip.visible = true;
            this.leaveTipTime = 10;
            this.timer.loop(1e3, this, this.leaveTimeLoop)
        }
    };
    u.updateAutoFire = function() {
        if (this.playerCannon) {
            if (!this.playerCannon.autoFire) {
                if (Player.getFirstGiftOne() && Player.getPayRmb() == 0) {
                    if (!Game.miniGameIOS()) {
                        FirstBuyToOneNew.show(null, true);
                        return
                    }
                }
            }
            this.playerCannon.updateAutoFire();
            this.updateAutoFireUI(this.playerCannon.autoFire)
        }
    };
    u.updateAutoFireUI = function(e) {
        if (e) {
            this.btnAutoFire.skin = "resource/fishScene/btn_zidong_sel.png";
            this.autoFireLight.skin = "resource/fishScene/img_zidongguang.png";
            this.autoFireZi.skin = "resource/fishScene/zi_zidong_sel.png"
        } else {
            this.btnAutoFire.skin = "resource/fishScene/btn_zidong.png";
            this.autoFireLight.skin = "resource/fishScene/img_zidongguang_blue.png";
            this.autoFireZi.skin = "resource/fishScene/zi_zidong.png"
        }
    };
    u.exit = function() {
        var e = null;
        if (Player.getAlms() > 0 && Player.getGold() < 10) {
            e = MessageBox.show("您还有救济金可以领取，是否要领取");
            e.submitCall = function() {
                PoChanHandler()
            };
            e.closeCall = function(e) {
                if (e === "no") {
                    Request.LeaveGameSvrReq()
                }
            }
        } else {
            if (Player.OpenRedActivity() && QTTRedPkgT.isShow()) {
                QTTMessageBox.show();
                return
            }
            var t = this.sceneCfg.SceneId + "";
            var i = GameConfig.getModuleSceneCfg("OnlineGift");
            if (i.indexOf(t) >= 0) {
                OnlineGiftTip.show();
                return
            }
            e = MessageBox.show("真的不想再多玩一会了么？", true);
            e.submitCall = function() {
                Request.LeaveGameSvrReq()
            }
        }
    };
    u.getFishWrapByType = function(e) {
        var t = null;
        for (var i in fishAtlatsGroup) {
            if (fishAtlatsGroup[i].indexOf(e) >= 0) {
                t = i;
                break
            }
        }
        return t
    };
    u.setSeat = function() {
        Game.transformX = false;
        Game.transformY = false;
        for (var e = 0; e < a.length; e++) {
            var t = a[e],
            i = t.Pos;
            if (t.UserId == Player.getUserId()) {
                this.seatList = s[i - 1];
                if (i) {
                    if (i == 2) {
                        Game.transformY = true
                    } else if (i == 3) {
                        Game.transformX = true;
                        Game.transformY = true
                    } else if (i == 4) {
                        Game.transformX = true
                    }
                    break
                }
            }
        }
    };
    u.addUserCannon = function(e, t) {
        if (this["cannon" + e]) {
            var i = null;
            if (this.isSuperMatchScene()) {
                if (t.UserId == Player.getUserId()) {
                    i = Cannon.createCannon(this["cannon" + e], this["userInfoBox_" + e], t)
                } else {
                    i = Cannon.createCannon(this["cannon" + e], this["userMatchBox_" + e], t)
                }
            } else {
                if (this.isMatchScene() || this.isDTScene()) {
                    i = Cannon.createCannon(this["cannon" + e], this["userMatchBox_" + e], t)
                } else {
                    i = Cannon.createCannon(this["cannon" + e], this["userInfoBox_" + e], t)
                }
            }
            if (i) {
                i.setLocalPos(e);
                this.tableUserMap[t.UserId] = i;
                if (e != 1) {
                    this["waitJoin_" + e].visible = false;
                    this["waitJoin_" + e + "_deng"].visible = false
                }
                this["cannon" + e].visible = true;
                if (t.UserId == Player.getUserId()) {
                    i.setLastFireTime(this.timer.currTimer);
                    this.playerCannon = i;
                    if (this.isDTScene()) {
                        var n = GameConfig.getCfgDTDB();
                        if (n && n[0]) {
                            var s = n[0];
                            if (HitEggUI.leftTime == s.BuffFreeCount + s.BuffPayCount) {
                                HitEgg.show();
                                HitEgg.setBltAndScore(t.SM_Bullet, t.SM_Score)
                            }
                        }
                    }
                }
            }
        }
    };
    u.addUser = function() {
        var i = this;
        if (this.seatList.length < 1) {
            this.setSeat()
        }
        for (var e = 0; e < a.length; e++) {
            var t = a[e],
            n = t.Pos;
            if (this.tableUserMap[t.UserId]) {
                continue
            }
            var s = this.seatList[n - 1]; (function(e, t) {
                Cannon.createFramesById(t.CannonId,
                function() {
                    if (i.displayedInStage) i.addUserCannon(e, t)
                })
            })(s, t)
        }
    };
    u.removeUser = function(e) {
        var t = this;
        if (this.tableUserMap[e]) {
            SeaGodGift.removeIcon(t, e);
            if (Game.onMiniGame) {
                var i = this["waitJoin_" + this.tableUserMap[e].localPos];
                if (i) {
                    i.visible = true
                }
            } else {
                var n = this["waitJoin_" + this.tableUserMap[e].localPos + "_deng"];
                if (n) {
                    n.visible = true
                }
            }
            this.tableUserMap[e].leave();
            delete this.tableUserMap[e];
            if (this.copyOtherUserId == e) {
                this.hideUserIdUI()
            }
        }
    };
    u.addBulletToView = function(e) {
        this.bulletBox.addChild(e);
        this.bulletInstList.push(e);
        if (e.isCurrPlayer) {
            this.playerCannon.setLastFireTime(this.timer.currTimer);
            this.hideLeaveSceneTimeTip()
        }
    };
    u.updateCannonMul = function(e) {
        if (this.isDTScene()) {
            MsgToast.show("该场景不支持切换炮倍!");
            return
        }
        var t = Player.getGold();
        if (Game.state.get() == Game.sceneConfig.sceneID.scene_Dragon_DaoDan) {
            t = Player.getDragon()
        }
        var i = this.playerCannon.cannonMul;
        var n = this.cannonMulList.indexOf(i);
        n = e ? n + 1 : n - 1;
        n = n > this.cannonMulList.length - 1 ? 0 : n;
        n = n < 0 ? this.cannonMulList.length - 1 : n;
        var s = this.cannonMulList[n];
        if (t >= s) {
            this.playerCannon.updateCannonMul(this.cannonMulList[n]);
            Sound.playSound(Sound.RES.shengjipaobei.url, Sound.RES.shengjipaobei.vol)
        } else {
            var a = 0,
            r = 0;
            for (var o = 0; o < this.cannonMulList.length; o++) {
                var l = Math.abs(this.cannonMulList[o] - t);
                if (l <= r || r == 0) {
                    r = l;
                    a = o
                }
            }
            this.playerCannon.updateCannonMul(this.cannonMulList[a]);
            Sound.playSound(Sound.RES.shengjipaobei.url, Sound.RES.shengjipaobei.vol)
        }
    };
    u.ReportSendFish = function(e) {
        if (e instanceof Array) {
            this.fishDataList = this.fishDataList.concat(e)
        }
    };
    u.ReportFire = function(e, t, i, n, s, a, r) {
        if (e != Player.getUserId()) {
            if (this.tableUserMap[e]) {
                this.tableUserMap[e].bulletDataList.push({
                    angle: t,
                    mul: i,
                    LockFishId: n,
                    lockFishInst: this.fishMap[n],
                    lockLightWrap: this.sockLightBox,
                    IsFrenzy: s,
                    LongZhuMul: a,
                    IsAccelerate: r.IsAccelerate,
                    IsPhantom: r.IsPhantom,
                    BatteryId: r.BatteryId
                });
                this.tableUserMap[e].fire()
            }
        }
    };
    u.ReportUserCannonMul = function(e, t) {
        if (this.tableUserMap[e] && e != Player.getUserId()) {
            this.tableUserMap[e].updateCannonMul(t)
        }
    };
    u.showSkillTip = function() {
        this.timer.frameOnce(1, this,
        function() {
            var e = [];
            if (this.skill_sd_bg.visible) {
                e.push({
                    width: 144,
                    height: 65,
                    text: "使用锁定可以更容易捕捉鱼儿哦",
                    x: this.skill_sd_bg.x,
                    y: -100,
                    delay: 2e3
                })
            }
            if (this.skill_bd_bg.visible) {
                e.push({
                    width: 144,
                    height: 65,
                    text: "使用冰冻可以阻止鱼儿的逃跑哦",
                    x: this.skill_bd_bg.x,
                    y: -100
                })
            }
            if (this.skill_kb_bg.visible) {
                e.push({
                    width: 144,
                    height: 65,
                    text: "使用狂暴，双倍的捕鱼效率哦",
                    x: this.skill_kb_bg.x,
                    y: -100
                })
            }
            e.push({
                width: 144,
                height: 65,
                text: "点击查看更多精彩哦~",
                x: this.btnSkillOpen.x,
                y: -60
            });
            BlueTip.show(e, this.skillBox)
        })
    };
    u.showPaoDanTip = function() {
        var e = (this.width - Game.UIWidth) / 2;
        var t = (this.height - Game.UIHeight) / 2;
        BlueTip.show([{
            width: 260,
            height: 50,
            text: "用导弹炸鱼可以获得海量金币!",
            x: 800 + e,
            y: 450 + t,
            delay: 4e3
        },
        {
            width: 290,
            height: 50,
            text: "打鱼掉落的导弹都储存在这里哦!",
            x: 1010 + e + e,
            y: 326 + t,
            p: "r"
        },
        {
            width: 260,
            height: 70,
            text: "进入千倍场掉落导弹的概率激增，快去努力提升炮倍吧!",
            x: 800 + e,
            y: 430 + t,
            delay: 2e3
        }], this);
        this.timer.once(25e3, this,
        function() {
            NoviceGuidanceOnMinGame.setGuidOver(false);
            OneMoneyGiftD.show()
        })
    };
    u.updateLockTarget = function() {
        var e = Utils.getMouseXY();
        var t = e.x;
        var i = e.y;
        var n = null,
        s = null;
        var a = Laya.Pool.getItemByClass("rectA", Laya.Rectangle);
        a.width = 1;
        a.height = 1;
        a.x = t;
        a.y = i;
        var r = QuadTree.getAddIndexList(a, true);
        if (r && r.length == 0) {
            Laya.Pool.recover("rectA", a);
            return
        }
        var o = r[0];
        var l = Fish.getQuadTreeFishByIndex(o);
        var h = [];
        for (var u = 0; u < l.length; u++) {
            s = l[u];
            var c = s.getXY();
            if (!s || s.destroyed || !s.visible || !s.displayedInStage) {
                continue
            }
            if (c.x > 0 && c.y > 0 && c.x < Game.UIWidth && c.y < Game.UIHeight) {
                var a = Laya.Pool.getItemByClass("rect", Laya.Rectangle);
                a.x = c.x;
                a.y = c.y;
                a.width = s.width;
                a.height = s.height;
                if (a.contains(t, i)) {
                    h.push(s)
                }
                Laya.Pool.recover("rect", a)
            }
        }
        if (h.length > 0) {
            h.sort(function(e, t) {
                if (e && t) {
                    return e.type <= t.type
                }
                return 0
            });
            n = h[0]
        } else {
            var f = Laya.Pool.getItemByClass("pointA", Laya.Point),
            d = -1,
            g = -1;
            f.x = t;
            f.y = i;
            for (var u = 0; u < l.length; u++) {
                s = l[u];
                var c = s.getXY();
                if (!s || s.destroyed || !s.visible || !s.displayedInStage) {
                    continue
                }
                if (c.x > 0 && c.y > 0 && c.x < Game.UIWidth && c.y < Game.UIHeight) {
                    g = f.distance(c.x, c.y);
                    if (g < d || d < 0) {
                        d = g;
                        n = s
                    }
                }
            }
            Laya.Pool.recover("pointA", f)
        }
        Laya.Pool.recover("rectA", a);
        if (this.playerCannon && this.playerCannon.isHarmonics) {
            this.playerCannon.updateLockFishs(n)
        } else {
            this.lockFish(n)
        }
    };
    u.lockFish = function(e) {
        if (e && e.visible && e.displayedInStage) {
            if (this.playerCannon && this.playerCannon.locked) {
                if (!e.ableLock) {
                    e.addLockSight(this.sockLightBox);
                    this.selectedUnLockedFishMap[e.id] = e
                }
                this.playerCannon.setLockedTarget(e, this.sockLightBox);
                this.hideLockSight()
            }
            if (this.readyDanTouList.length > 0) {}
        }
    };
    u.autoHitLockSight = function() {
        var e = this.getMaxFish();
        this.lockFish(e)
    };
    u.getMaxFish = function() {
        var e;
        if (!this.fishPoolRect) {
            this.fishPoolRect = new Laya.Rectangle(0, 0, this.fishBox.width, this.fishBox.height)
        }
        for (var t in this.fishMap) {
            var i = this.fishMap[t];
            var n = i.getXY();
            if (this.fishPoolRect.contains(n.x, n.y) && i.alive && i.visible) {
                if (!e) e = i;
                else if (i.FishMultipleNum > e.FishMultipleNum) {
                    e = i
                }
            }
        }
        return e
    };
    u.checkTargetFish = function() {};
    u.findLockedFish = function() {
        if (this.playerCannon.lockedCacheFishId) {
            var e = this.fishMap[this.playerCannon.lockedCacheFishId];
            if (e && e.displayedInStage) {
                this.playerCannon.setLockedTarget(e, this.sockLightBox);
                this.hideLockSight()
            } else {
                if (Player.getNewPlayer() && NoviceGuidanceOnMinGame.skillStep()) {} else {
                    this.autoHitLockSight()
                }
            }
        } else {
            if (Player.getNewPlayer() && NoviceGuidanceOnMinGame.skillStep()) {} else {
                this.autoHitLockSight()
            }
        }
    };
    u.findHarmonicsFish = function(e, t, i) {
        if (!e) e = {};
        if (!this.fishPoolRect) {
            this.fishPoolRect = new Laya.Rectangle(0, 0, this.fishBox.width, this.fishBox.height)
        }
        var n = 0;
        var s = 2;
        if (!t) {
            t = []
        } else {
            n = i * 1;
            s = n + 1
        }
        for (var a = n; a < s; a++) {
            for (var r in this.fishMap) {
                var o = this.fishMap[r];
                var l = o.getXY();
                if (this.fishPoolRect.contains(l.x, l.y) && o.alive && o.visible) {
                    if (t.indexOf(o) > -1) continue;
                    if (!e[a]) {
                        e[a] = o
                    } else {
                        if (o.FishMultipleNum > e[a].FishMultipleNum) {
                            e[a] = o
                        }
                    }
                }
            }
            t.push(e[a])
        }
        return e
    };
    u.refreshHarmonicsFish = function(e) {
        if (!this.playerCannon || !this.playerCannon.isHarmonics) {
            return
        }
        if (!this.fishPoolRect) {
            this.fishPoolRect = new Laya.Rectangle(0, 0, this.fishBox.width, this.fishBox.height)
        }
        var t = this.playerCannon.lockFishs;
        if (e) {
            var i = Object.keys(t);
            var n = undefined;
            var s = [];
            for (var a = 0; a < i.length; a++) {
                var r = i[a];
                if (t[r] == e) {
                    n = r
                } else {
                    s.push(t[r])
                }
            }
            if (n != undefined) {
                delete this.playerCannon.lockFishs[n];
                this.playerCannon.setLockFishs(this.findHarmonicsFish(t, s, n))
            }
        }
    };
    u.showLockSight = function(e) {
        this.showingLockLight = true;
        for (var t in this.ableLockFishMap) {
            var i = this.ableLockFishMap[t];
            if (e) {
                if (i.isDaoDanSight && i.displayedInStage && i.alive) {
                    i.showLockSight()
                }
            } else if (i.isSuoDingSight && i.displayedInStage && i.alive) {
                i.showLockSight()
            }
        }
        this.sockLightBox.visible = true
    };
    u.hideLockSight = function() {
        this.showingLockLight = false;
        for (var e in this.ableLockFishMap) {
            var t = this.ableLockFishMap[e];
            if (!t.isLocked) {
                t.hideLockSight()
            }
        }
        for (var e in this.selectedUnLockedFishMap) {
            var t = this.selectedUnLockedFishMap[e];
            if (t && !t.isLocked && t.displayedInStage) {
                t.hideLockSight()
            }
        }
        this.sockLightBox.visible = true
    };
    u.freeze = function() {
        for (var e in this.fishMap) {
            var t = this.fishMap[e];
            if (t.IsFrozen) {
                t.pause()
            }
        }
        this.FishGroupBoxPause()
    };
    u.unfreeze = function() {
        if (this.freezing) {
            if (this.iceIcon) {
                Laya.Tween.to(this.iceIcon, {
                    alpha: 0,
                    scaleX: 1,
                    scaleY: 1
                },
                800)
            }
            for (var e in this.fishMap) {
                var t = this.fishMap[e];
                if (!t.IsFrozen) {
                    continue
                }
                if (t.displayedInStage) {
                    t.resume()
                }
            }
            this.freezing = false;
            SkillBinDongCD.stop();
            this.FishGroupBoxResume()
        }
    };
    u.ReportFrozen = function(e) {
        if (e == 1) {
            if (!this.iceIcon) {
                this.iceIcon = new Laya.Image("resource/fishScene/fx-bingdong.png")
            }
            this.iceIcon.alpha = 0;
            this.iceIcon.size(Game.ViewWidth, Game.ViewHeight);
            this.iceIcon.pos((this.width - this.iceIcon.width) / 2, (this.height - this.iceIcon.height) / 2);
            this.bingDongBox.visible = true;
            this.bingDongBox.addChild(this.iceIcon);
            Sound.playSound(Sound.RES.skill_ice.url, Sound.RES.skill_ice.vol);
            Laya.Tween.to(this.iceIcon, {
                alpha: 1
            },
            800);
            this.freeze();
            this.freezing = true
        } else if (e == 2) {
            this.unfreeze()
        }
    };
    u.UseHaoJiao = function() {
        if (this.SecretTable) {
            if (WorldBoss.getBossState()) {
                MsgToast.show("鲨鱼捕手入侵时间不能使用该技能!");
                return false
            }
            var e = Player.getVipLevel();
            if (e >= 5) {
                return true
            } else {
                MsgToast.show(GameConfig.ErrorMsg.getMsgById(2302));
                return false
            }
        } else {
            return false
        }
    };
    u.UseSkillReq = function(e) {
        console.log("UseSkillReq" + e);
        if (e == Game.item.HaoJiao) {
            if (!this.UseHaoJiao()) {
                return
            }
        }
        var t = Package.getDataById(e);
        if (t && t.num > 0) {
            Request.UseSkillReq(e)
        } else {
            if (e == Game.item.HaoJiao) {
                if (Player.getHaoJiaoBuyOpen()) {
                    BuyQuick.show(e)
                } else {
                    MsgToast.show("技能数量不足!")
                }
            } else {
                BuyQuick.show(e)
            }
        }
    };
    u.UseSkillRep = function(e) {
        if (e.Tag) {
            var t = e.ItemId,
            i = e.ItemNum;
            if (t == Game.item.SuoDing) {
                Sound.playSound(Sound.RES.kuangbao.url, Sound.RES.kuangbao.vol);
                this.fc_sd_num.value = i;
                SkillSuoDingCD.show(this,
                function() {
                    if (this.playerCannon) {
                        this.playerCannon.setLocked(false);
                        this.playerCannon.setLockedTarget(null);
                        this.hideLockSight()
                    }
                    this.timer.frameOnce(1, this, Request.ReportSkillEndReq, [Game.item.SuoDing])
                });
                this.showLockSight();
                this.playerCannon.setLocked(true);
                this.findLockedFish()
            } else if (t == Game.item.BinDong) {
                this.fc_bd_num.value = i;
                SkillBinDongCD.show(this)
            } else if (t == Game.item.AddSpeed) {
                this.skill_js_num.value = i;
                SkillAddSpeedCD.show(this,
                function() {
                    if (this.playerCannon) {
                        this.playerCannon.setAddBulletSpeed(false)
                    }
                    this.timer.frameOnce(1, this, Request.ReportSkillEndReq, [Game.item.AddSpeed])
                });
                this.playerCannon.setAddBulletSpeed(true)
            } else if (t == Game.item.Harmonics) {
                this.skill_fs_num.value = i;
                SkillHarmonicsCD.show(this,
                function() {
                    if (this.playerCannon) {
                        this.playerCannon.setHarmonics(false);
                        this.playerCannon.stop()
                    }
                    this.timer.frameOnce(1, this, Request.ReportSkillEndReq, [Game.item.Harmonics])
                });
                this.playerCannon.setHarmonics(true);
                this.playerCannon.setLockFishs(this.findHarmonicsFish())
            } else if (t == Game.item.KuangBao) {
                this.fc_kb_num.value = i;
                Sound.playSound(Sound.RES.kuangbao.url, Sound.RES.kuangbao.vol);
                SkillKuangBaoCD.show(this,
                function() {
                    if (this.playerCannon) {
                        this.playerCannon.setLocked(false);
                        this.playerCannon.setFrenzy(false);
                        this.playerCannon.setLockedTarget(null);
                        this.hideLockSight()
                    }
                    this.timer.frameOnce(1, this, Request.ReportSkillEndReq, [Game.item.KuangBao])
                });
                this.showLockSight();
                this.playerCannon.setFrenzy(true);
                this.playerCannon.setLocked(true);
                this.findLockedFish()
            } else if (t == Game.item.ZhaDan) {
                this.zhaDan_tol_num.value = i;
                var n = e.Fishids;
                var s = this.playerCannon.dropGoldPos;
                Sound.playSound(Sound.RES.zhadan.url, Sound.RES.zhadan.vol);
                if (n) {
                    this.timer.once(1e3, this,
                    function() {
                        if (this.displayedInStage) {
                            for (var e = 0; e < n.length; e++) {
                                var t = n[e],
                                i = this.fishMap[t];
                                if (i && i.displayedInStage) { (function(e) {
                                        Gold.show(e.getXY().x, e.getXY().y, [3, 10], true, {
                                            x: s[0],
                                            y: s[1]
                                        });
                                        e.playDeadAct(this,
                                        function() {
                                            e.dead(true)
                                        })
                                    })(i)
                                }
                            }
                        }
                    })
                }
            } else if (t == Game.item.HaoJiao) {
                this.fc_haoJiaoNum.value = i
            } else if (t == Game.item.DragonBall) {
                this.dragonBall.updateNum(false, i);
                this.dragonBall.doTimeAnim();
                this.playerCannon.longZhuMul = this.dragonBall.getNowUseMu();
                ActionEventReport.report(ActionEventReport.actionIndex.ID1091, {
                    t: this.playerCannon.longZhuMul
                });
                this.playerCannon.updateCannonMul(this.playerCannon.cannonMul)
            }
            Package.updateNumById(t, i)
        } else if (e.MsgId) {
            MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgId))
        }
    };
    u.ReportUseSkillItem = function(e, t, n, i) {
        var s = this.tableUserMap[e];
        if (t == Game.item.ZhaDan) {
            SkillZhaDan.show();
            if (s) {
                var a = i;
                var r = s.dropGoldPos;
                if (a && a.length > 0) {
                    this.timer.once(1e3, this,
                    function() {
                        if (this.displayedInStage) {
                            for (var e = 0; e < a.length; e++) {
                                var t = a[e],
                                i = this.fishMap[t];
                                if (i && i.displayedInStage) { (function(e) {
                                        Gold.show(e.getXY().x, e.getXY().y, [3, 10], true, {
                                            x: r[0],
                                            y: r[1]
                                        });
                                        e.playDeadAct(this,
                                        function() {
                                            e.dead(true)
                                        })
                                    })(i)
                                }
                            }
                        }
                    })
                }
                this.timer.once(3e3, this,
                function() {
                    var e = {
                        x: Game.UIWidth / 2,
                        y: Game.UIHeight / 2
                    },
                    t = 1;
                    if (!s.isCurrPlayer) {
                        var i = s.zhuanPanPos;
                        e = {
                            x: i[0],
                            y: i[1]
                        },
                        t = .6
                    }
                    BaoFuLa.show(n, e, t)
                })
            }
        }
    };
    u.getDanTouTarget = function() {
        var e = [];
        var t = Laya.Pool.getItemByClass("rect", Laya.Rectangle);
        for (var i in this.fishMap) {
            var n = this.fishMap[i];
            if (n) {
                if (this.danTouTargetIdArr.indexOf(n.id) >= 0) {
                    continue
                }
                if (n.isDaoDanSight) {
                    var s = n.getXY();
                    t.setTo(s.x, s.y, n.width, n.height);
                    if (l.intersects(t) && n.displayedInStage && n.alive) {
                        e.push(n)
                    }
                }
            }
        }
        Laya.Pool.recover("rect", t);
        var a = Utils.arrayRandomIndex(e);
        var r = e[a];
        if (r) {
            this.danTouTargetId = r.id;
            this.danTouTargetIdArr.push(r.id)
        }
        e = []
    };
    u.UseDanTouReq = function(e, t) {
        var i = Package.getDataById(e);
        if (i && i.num > 0) {
            this.getDanTouTarget();
            if (this.danTouTargetId > 0) {
                Request.UseDantouItemReq(e, this.danTouTargetId)
            } else {
                MsgToast.show("请稍等，渔场内暂时没有轰炸的鱼~")
            }
        } else {
            MsgToast.show("技能数量不足!");
            switch (e) {
            case Game.item.QinTongDaoDan:
                ActionEventReport.report(ActionEventReport.actionIndex.ID1089);
                break;
            case Game.item.BaiJinDaoDan:
                if (Game.state.get() == Game.sceneConfig.sceneID.scene_Dragon_DaoDan) {
                    ActionEventReport.report(ActionEventReport.actionIndex.ID1086, {
                        t: 0
                    })
                } else {
                    ActionEventReport.report(ActionEventReport.actionIndex.ID1086)
                }
                break;
            case Game.item.HuangJinDaoDan:
                ActionEventReport.report(ActionEventReport.actionIndex.ID1087);
                break;
            case Game.item.BaiYinDaoDan:
                ActionEventReport.report(ActionEventReport.actionIndex.ID1088);
                break
            }
        }
    };
    u.UseDantouItemRep = function(e) {
        if (e.Tag) {
            var t = Package.getDataById(e.ItemId);
            var i = t.num - 1 < 0 ? 0 : t.num - 1;
            Package.updateNumById(e.ItemId, i);
            this.updateItemNum();
            this.danTouTargetIdArr.shift()
        } else if (e.MsgId) {
            MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgId))
        }
        this.danTouTargetId = -1
    };
    u.ReportUseDantouItem = function(t) {
        var e = t.UserId;
        var i = t.FishId;
        var n = this.tableUserMap[e];
        var s = this.fishMap[i];
        if (n && s && s.displayedInStage) {
            var a = n.paoGloblePos;
            DanTou.show({
                x: a[0],
                y: a[1]
            },
            s, t.ItemId, e,
            function(e) {
                if (R) {
                    R.ReportCatchFish(t, true)
                }
            })
        }
    };
    u.showSmallFishDeadEft = function(e, t) {
        var i = Laya.Pool.getItemByClass("SmallFishDeadAni", Laya.Animation);
        i.source = "UIRoot/FX/xiaoyusiwang.ani";
        i.pos(e, t);
        i.rotation = Math.random() * 360;
        i.visible = true;
        i.once(Laya.Event.COMPLETE, this,
        function() {
            i.stop();
            i.removeSelf();
            Laya.Pool.recover("SmallFishDeadAni", i)
        });
        i.once(Laya.Event.DISPLAY, this,
        function() {
            i.play(0, false)
        });
        this.spineFishDead.addChild(i)
    };
    u.showGoldFishDeadSpine = function(e, t) {
        var i = Laya.Pool.getItemByClass("GoldFishDeadAni", Laya.Animation);
        i.source = "UIRoot/FX/jinsesiwang1.ani";
        i.pos(e, t);
        i.rotation = Math.random() * 360;
        i.visible = true;
        i.once(Laya.Event.COMPLETE, this,
        function() {
            i.stop();
            i.removeSelf();
            Laya.Pool.recover("GoldFishDeadAni", i)
        });
        i.once(Laya.Event.DISPLAY, this,
        function() {
            i.play(0, false)
        });
        this.spineFishDead.addChild(i)
    };
    u.showBlueFishDeadSpine = function(e, t) {
        var i = Laya.Pool.getItemByClass("blueFishDeadAni", Laya.Animation);
        i.source = "UIRoot/FX/lansesiwang.ani";
        i.pos(e, t);
        i.visible = true;
        i.rotation = Math.random() * 360;
        i.once(Laya.Event.COMPLETE, this,
        function() {
            i.stop();
            i.removeSelf();
            Laya.Pool.recover("blueFishDeadAni", i)
        });
        i.once(Laya.Event.DISPLAY, this,
        function() {
            i.play(0, false)
        });
        this.spineFishDead.addChild(i)
    };
    u.JiangQuanEft = function(e, t, i) {
        this.quanEftInst.pos(t.x, t.y);
        this.quanEftInst.scale(i, i);
        this.quanEftInst.fc_num.value = e;
        this.zhuanPanBox.visible = true;
        this.quanEftInst.visible = true;
        this.quanEftInst.ani1.play(0, false)
    };
    u.fishDeadSound = function(e, t, i) {
        var n = t["deadSound"];
        if (n.length < 1) {
            return
        }
        var s = t["SoundProbability"];
        var a = t["IsBoss"];
        s = s ? s / 100 : s;
        var r = t.FishMultiple;
        if (parseInt(r[0]) >= 15) {
            Sound.playSound(Sound.RES.cycle_bomb.url, Sound.RES.cycle_bomb.vol)
        }
        if (i == Player.getUserId()) {
            if (Utils.probability(s)) {
                var o = Utils.arrayRandomIndex(n);
                if (h === false) {
                    h = true;
                    var l = Sound.RES[n[o]];
                    if (l) {
                        Sound.playSound(l.url, l.vol, false,
                        function() {
                            h = false
                        })
                    } else {
                        h = false
                    }
                }
            }
            if (a) {
                Sound.stopSoundByUrl(Sound.RES.boss_laixi02.url);
                Sound.stopSoundByUrl(Sound.RES.boss_warning.url);
                this.timer.frameOnce(1, this,
                function() {
                    Sound.playSound(Sound.RES.BOSS_scene_bomb.url, Sound.RES.BOSS_scene_bomb.vol)
                })
            }
        }
    };
    u.showJiangQuanTip = function() {
        if (this.playerCannon) {
            var e = this.playerCannon.getJuan();
            if (e < 1200) {
                this.fc_diff_quan.value = 1200 - e;
                this.JiangQuanTip.visible = true;
                this.timer.once(4e3, this,
                function() {
                    this.JiangQuanTip.visible = false
                })
            }
        }
    };
    u.dropItemToTarget = function(s, a, r, o) {
        if (!a.displayedInStage) {
            return
        }
        var e = Math.random() * 1e3 + 2500,
        t = .5;
        var i = Laya.Pool.getItemByClass("pointA", Laya.Point);
        i.x = a.x;
        i.y = a.y;
        if (s.ItemId == Game.item.Juan) {
            a.pivot(53.5, 52.5);
            var n = 0,
            l = 0,
            h = 0;
            if (r.isCurrPlayer) {
                if (this.btnDuihuan) {
                    l = this.btnDuihuan.x;
                    h = this.btnDuihuan.y
                }
            } else {
                l = r.dropQuanPos[0];
                h = r.dropQuanPos[1]
            }
            n = i.distance(l, h);
            var u = n / t;
            Laya.Tween.to(a, {
                x: l,
                y: h
            },
            u, null, Laya.Handler.create(this,
            function() {
                Sound.playSound(Sound.RES.DiamondIn.url, Sound.RES.DiamondIn.vol);
                if (o) {
                    if (r.isCurrPlayer) {
                        var e = Player.getJiangJuan();
                        e += s.ItemNum;
                        Player.setJiangJuan(e);
                        r.updateJuan(e)
                    } else {
                        var e = s.ItemNum;
                        var t = r.getJuan();
                        r.updateJuan(e + t)
                    }
                }
                a.removeSelf()
            }), e);
            Laya.Tween.to(a, {
                scaleX: .38,
                scaleY: .38
            },
            u / 3, null, null, u / 3 * 2 + e)
        } else if (s.ItemId == Game.item.Gold) {
            var n = i.distance(r.paoGloblePos[0], r.paoGloblePos[1]);
            Laya.Tween.to(a, {
                x: r.paoGloblePos[0],
                y: r.paoGloblePos[1]
            },
            n / t, null, Laya.Handler.create(this,
            function() {
                Sound.playSound(Sound.RES.DiamondIn.url, Sound.RES.DiamondIn.vol);
                if (o) {
                    var e = s.ItemNum;
                    if (r.isCurrPlayer) {
                        var e = Player.getGold();
                        e += s.ItemNum;
                        Player.setGold(e)
                    }
                    r.updateGold(e)
                }
                a.removeSelf()
            }), e)
        } else if (s.ItemId == Game.item.BinDong || s.ItemId == Game.item.SuoDing || s.ItemId == Game.item.KuangBao) {
            var c = this.skill_bd_get_ani;
            var f = this.skill_bd_icon;
            if (s.ItemId == Game.item.SuoDing) {
                f = this.skill_sd_icon;
                c = this.skill_sd_get_ani
            } else if (s.ItemId == Game.item.KuangBao) {
                f = this.skill_kb_icon;
                c = this.skill_kb_get_ani
            }
            var d = r.isCurrPlayer ? Utils.localToGlobal(f) : {
                x: r.paoGloblePos[0],
                y: r.paoGloblePos[1]
            };
            var n = i.distance(d.x, d.y);
            Laya.Tween.to(a, {
                x: d.x,
                y: d.y
            },
            n / t, null, Laya.Handler.create(this,
            function() {
                Sound.playSound(Sound.RES.DiamondIn.url, Sound.RES.DiamondIn.vol);
                var e = s.ItemNum;
                if (r.isCurrPlayer && o) {
                    var t = Package.getDataById(s.ItemId);
                    e = t ? t.num + s.ItemNum: s.ItemNum;
                    Package.updateNumById(s.ItemId, e);
                    this.updateItemNum();
                    var i = Laya.Pool.getItemByClass("fc_baoJin", Laya.FontClip);
                    i.skin = "resource/fishScene/FontClip_baojinziji.png";
                    i.sheet = "+0123456789";
                    i.value = "+" + s.ItemNum;
                    i.pos(d.x, d.y);
                    i.width = 200;
                    i.pivotX = 100;
                    i.align = "center";
                    if (a.parent) {
                        a.parent.addChild(i);
                        Laya.Tween.to(i, {
                            y: i.y - 50
                        },
                        600, null, Laya.Handler.create(this,
                        function() {
                            i.removeSelf();
                            Laya.Pool.recover("fc_baoJin", i)
                        }));
                        if (c) {
                            c.visible = true;
                            c.once(Laya.Event.COMPLETE, this,
                            function() {
                                c.visible = false
                            });
                            c.play(0, false)
                        }
                        var n = Laya.TimeLine.to(f, {
                            scaleX: 1.2,
                            scaleY: 1.2
                        },
                        150).to(f, {
                            scaleX: 1,
                            scaleY: 1
                        },
                        350);
                        n.play(0, false)
                    }
                }
                a.removeSelf()
            }), e)
        } else if (s.ItemId == Game.item.QinTongDaoDan || s.ItemId == Game.item.BaiYinDaoDan || s.ItemId == Game.item.HuangJinDaoDan || s.ItemId == Game.item.BaiJinDaoDan) {
            var d = r.isCurrPlayer ? Utils.localToGlobal(this.daoDanBar) : {
                x: r.paoGloblePos[0],
                y: r.paoGloblePos[1]
            };
            var n = i.distance(d.x, d.y);
            Laya.Tween.to(a, {
                x: d.x,
                y: d.y
            },
            n / t, null, Laya.Handler.create(this,
            function() {
                Sound.playSound(Sound.RES.DiamondIn.url, Sound.RES.DiamondIn.vol);
                var e = s.ItemNum;
                if (r.isCurrPlayer && o) {
                    var t = Package.getDataById(s.ItemId);
                    e = t ? t.num + s.ItemNum: s.ItemNum;
                    Package.updateNumById(s.ItemId, e);
                    this.updateItemNum();
                    var i = Laya.Pool.getItemByClass("fc_baoJin", Laya.FontClip);
                    i.skin = "resource/fishScene/FontClip_baojinziji.png";
                    i.sheet = "+0123456789";
                    i.value = "+" + s.ItemNum;
                    i.pos(d.x - this.daoDanBar.width / 2, d.y);
                    i.width = 200;
                    i.pivotX = 200;
                    i.align = "right";
                    if (a.parent) {
                        a.parent.addChild(i);
                        Laya.Tween.to(i, {
                            y: i.y - 50
                        },
                        600, null, Laya.Handler.create(this,
                        function() {
                            i.removeSelf();
                            Laya.Pool.recover("fc_baoJin", i)
                        }));
                        var n = Laya.TimeLine.to(this.daoDanBar, {
                            scaleX: 1.2,
                            scaleY: 1.2
                        },
                        150).to(this.daoDanBar, {
                            scaleX: 1,
                            scaleY: 1
                        },
                        350);
                        n.play(0, false)
                    }
                }
                a.removeSelf()
            }), e)
        } else if (s.ItemId == Game.item.Score) {
            var d = {
                x: r.dropGoldPos[0],
                y: r.dropGoldPos[1]
            };
            var n = i.distance(d.x, d.y);
            Laya.Tween.to(a, {
                x: d.x,
                y: d.y
            },
            n / t, null, Laya.Handler.create(this,
            function() {
                Sound.playSound(Sound.RES.DiamondIn.url, Sound.RES.DiamondIn.vol);
                a.removeSelf()
            }), e)
        } else if (s.ItemId == Game.item.BlackDia || s.ItemId == Game.item.ForcePush) {
            var d = {
                x: r.paoGloblePos[0],
                y: r.paoGloblePos[1]
            };
            if (r.isCurrPlayer) {
                d = {
                    x: this.ForcePushImg.x,
                    y: this.ForcePushImg.y
                };
                if (s.ItemId == Game.item.BlackDia) {
                    d = {
                        x: this.BlackDiaImg.x,
                        y: this.BlackDiaImg.y
                    }
                }
            }
            var n = i.distance(d.x, d.y);
            Laya.Tween.to(a, {
                x: d.x,
                y: d.y,
                scaleX: .75,
                scaleY: .75
            },
            n / t, null, Laya.Handler.create(this,
            function() {
                Sound.playSound(Sound.RES.DiamondIn.url, Sound.RES.DiamondIn.vol);
                if (r.isCurrPlayer) {
                    var e = Package.getDataById(s.ItemId);
                    var t = e ? e.num + s.ItemNum: s.ItemNum;
                    Package.updateNumById(s.ItemId, t);
                    this.updateItemNum();
                    a.removeSelf()
                }
            }), e)
        } else {
            a.pivot(53.5, 52.5);
            var n = i.distance(r.dropQuanPos[0], r.dropQuanPos[1]);
            var u = n / t;
            Laya.Tween.to(a, {
                x: r.globalPoint.x,
                y: r.globalPoint.y
            },
            u, null, Laya.Handler.create(this,
            function() {
                Sound.playSound(Sound.RES.DiamondIn.url, Sound.RES.DiamondIn.vol);
                a.removeSelf()
            }), e);
            Laya.Tween.to(a, {
                scaleX: .38,
                scaleY: .38
            },
            u / 3, null, null, u / 3 * 2 + e)
        }
    };
    u.dropItems = function(o, e, t, i) {
        var n = null,
        l = [e, t],
        h = 20;
        for (var s = 0; s < i.length; s++) {
            n = i[s];
            if (!GameConfig.Item.getItemInfoById(n.ItemId)) {
                continue
            }
            if ((n.ItemId == Game.item.BlackDia || n.ItemId == Game.item.ForcePush) && (!Channel || Channel && Channel.cfg.cps != 11002)) {
                continue
            }
            var a = n.ItemNum;
            if (n.ItemNum >= 40) {
                l = [Game.UIWidth / 2, Game.UIHeight / 2];
                h = Game.UIHeight / 3;
                a = 40
            } else if (n.ItemNum >= 5 && n.ItemNum < 40) {
                l = [Game.UIWidth / 2, Game.UIHeight / 2];
                h = 300
            } else if (n.ItemNum == 1) {
                l = [e, t];
                h = 1
            }
            for (var u = 0; u < a; u++) { (function(e, t, i, n) {
                    var s = Laya.Pool.getItemByClass("dropItem", Laya.Image);
                    var a = "resource/icon/" + t.ItemId + ".png";
                    if (t.ItemId == Game.item.Juan) {
                        a = "resource/fishScene/" + t.ItemId + ".png"
                    } else if (t.ItemId == Game.item.QinTongDaoDan || t.ItemId == Game.item.BaiYinDaoDan || t.ItemId == Game.item.HuangJinDaoDan || t.ItemId == Game.item.BaiJinDaoDan) {
                        a = "resource/fishScene/" + t.ItemId + ".png"
                    } else if (t.ItemId == Game.item.BinDong) {
                        a = "resource/fishScene/skill_bingdong.png"
                    } else if (t.ItemId == Game.item.SuoDing) {
                        a = "resource/fishScene/skill_miaozhun.png"
                    } else if (t.ItemId == Game.item.KuangBao) {
                        a = "resource/fishScene/skill_kuangbao.png"
                    }
                    s.skin = a;
                    s.scale(1, 1);
                    if (t.ItemId == Game.item.Score) {
                        s.scale(.6, .6)
                    }
                    var r = Utils.circularRandomPoint({
                        x: l[0],
                        y: l[1]
                    },
                    h);
                    s.pos(r.x, r.y);
                    s.once(Laya.Event.UNDISPLAY, e,
                    function() {
                        Laya.Pool.recover("dropItem", s)
                    });
                    s.once(Laya.Event.DISPLAY, e,
                    function() {
                        s.pivot(s.width / 2, s.height / 2)
                    });
                    e.dropItemBox.addChild(s);
                    e.dropItemBox.visible = true;
                    e.dropItemToTarget(t, s, o, u == n - 1)
                })(this, n, u, a)
            }
        }
        this.timer.frameOnce(3, this,
        function() {
            Sound.playSound(Sound.RES.DiamondIn.url, Sound.RES.DiamondIn.vol)
        })
    };
    u.delayDead = function(e) {
        e.dead(true)
    };
    u.BossComeAni = function(e) {
        if (this.bossComeBg) {
            this.bossComeBg.visible = true
        }
        var t = GameConfig.fish.getCfgById(e);
        if (t && t.FishMultiple) {
            this.bossComeAniInst.fc_beishu.value = t.FishMultiple
        }
        this.bossComeAniInst.zuigao.visible = false;
        this.bossComeAniInst.bossWrap.y = 286;
        this.bossComeAniInst.beijinbi.visible = true;
        if (e == Game.FishID.Fish_zhuangyu) {
            this.bossComeAniInst.bossIcon.skin = "resource/fishScene/bslx-zi_zhangyu.png"
        } else if (e == Game.FishID.Fish_meirenyu) {
            this.bossComeAniInst.bossIcon.skin = "resource/fishScene/bslx-zi_meirenyu.png"
        } else if (e == Game.FishID.Fish_huolong) {
            this.bossComeAniInst.bossIcon.skin = "resource/fishScene/bslx-zi_huolong.png"
        } else if (e == Game.FishID.Fish_baogui) {
            this.bossComeAniInst.bossIcon.skin = "resource/fishScene/bslx-zi_baogui.png"
        } else if (e == Game.FishID.Fish_bossXiaoYao) {
            this.bossComeAniInst.bossIcon.skin = "resource/fishScene/bslx_zi_xiaoyao.png"
        } else if (e == Game.FishID.Fish_bossJiangJun) {
            this.bossComeAniInst.bossIcon.skin = "resource/fishScene/bslx_zi_jiangjun.png"
        } else if (e == Game.FishID.Fish_bossQueen) {
            this.bossComeAniInst.bossIcon.skin = "resource/fishScene/bslx_zi_nvwang.png"
        } else if (e == Game.FishID.Fish_longXia) {
            this.bossComeAniInst.bossIcon.skin = "resource/fishScene/bslx_zi_longxiawang.png"
        } else if (e == Game.FishID.Fish_xiongmao) {
            this.bossComeAniInst.bossIcon.skin = "resource/fishScene/bslx_zi_sancaixiongmao.png"
        } else if (e == Game.FishID.Fish_bossDragon) {
            this.bossComeAniInst.bossIcon.skin = "resource/fishScene/bslx_zi_molong.png";
            this.bossComeAniInst.beijinbi.visible = false;
            this.bossComeAniInst.bossWrap.y = 324
        } else if (e == Game.FishID.Fish_kun) {
            this.bossComeAniInst.bossIcon.skin = "resource/fishScene/bslx_zi_huangjinjukun.png";
            this.bossComeAniInst.fc_beishu.value = t.FishMultiple[t.FishMultiple.length - 1];
            this.bossComeAniInst.zuigao.visible = true
        }
        this.bossComeAniInst.visible = true;
        this.bossComeBox.visible = true;
        this.bossComeAniInst.ani1.play(0, false);
        this.timer.frameOnce(3, this,
        function() {
            if (R && R.displayedInStage) {
                Sound.setMusicVolume(0);
                Sound.playSound(Sound.RES.boss_warning.url, Sound.RES.boss_warning.vol, false,
                function() {
                    Sound.playSound(Sound.RES.boss_laixi02.url, Sound.RES.boss_laixi02.vol, true)
                })
            }
        })
    };
    u.BossComeOver = function() {
        Sound.stopSoundByUrl(Sound.RES.boss_laixi02.url);
        Sound.stopSoundByUrl(Sound.RES.boss_warning.url);
        Sound.setMusicVolume(.4);
        if (this.bossComeBg) {
            this.bossComeBg.visible = false
        }
    };
    u.showZhuanPan = function(e, t, i, n, s) {
        var a = e.AddGold;
        var r = t.type;
        var o = i.getTurntableId();
        var l = t.showMaxZhuanPan ? "zhuanPanMax": "zhuanPanMin";
        l = ZhuanPan.TurntableID[o] || "zhuanPanMin";
        if (t.showMaxZhuanPan) {
            if (e.FishMul >= 2 || e.CritMul >= 2) {
                if (s || n) {
                    ZhuanPan.show({
                        x: i.zhuanPanPos[0],
                        y: i.zhuanPanPos[1]
                    },
                    r, a, e.Drops, l)
                }
            } else {
                ZhuanPan.show({
                    x: i.zhuanPanPos[0],
                    y: i.zhuanPanPos[1]
                },
                r, a, e.Drops, l)
            }
        }
        if (t.showMinZhuanPan) {
            if (e.FishMul >= 2 || e.CritMul >= 2) {
                if (s || n) {
                    ZhuanPan.show({
                        x: i.zhuanPanPos[0],
                        y: i.zhuanPanPos[1]
                    },
                    r, a, e.Drops, l)
                }
            } else {
                ZhuanPan.show({
                    x: i.zhuanPanPos[0],
                    y: i.zhuanPanPos[1]
                },
                r, a, e.Drops, l)
            }
        }
    };
    u.updateShakeRedPoint = function() {
        if (this.isMatchScene()) {
            return
        }
        var e = Player.getShakeTimes();
        this.shakeRedPoint.visible = e > 0 && Player.IsCanShowShark() ? true: false;
        this.btnTeHui.getChildByName("redPoint").visible = this.shakeRedPoint.visible
    };
    u.addMatchScore = function(e, t, i, n, s, a) {
        if (n.isCurrPlayer) {
            if (Game.state.get() == Game.sceneConfig.sceneID.scene_Dragon_DaoDan) {
                Player.setDragon(a)
            } else {
                Player.setMatchScore(a)
            }
            var r = Player.getOutSideScore();
            r += t;
            Player.setOutSideScore(r)
        }
        Score.show(i.x, i.y, e, n.isCurrPlayer, {
            x: s.x,
            y: s.y
        },
        function() {
            if (n.isCurrPlayer) {
                var e = Player.getOutSideScore();
                e -= t;
                Player.setOutSideScore(e);
                if (Game.state.get() == Game.sceneConfig.sceneID.scene_Dragon_DaoDan) {
                    n.updateGold(Player.showDragon())
                } else {
                    n.updateMatchScore(Player.getShowMatchScore())
                }
            } else {
                if (Game.state.get() == Game.sceneConfig.sceneID.scene_Dragon_DaoDan) {
                    n.updateGold(a)
                } else {
                    n.updateMatchScore(a)
                }
            }
        })
    };
    u.addCatchFishGold = function(e, t, i, n, s, a) {
        if (this.isMatchScene() && !this.isSuperMatchScene() || Game.state.get() == Game.sceneConfig.sceneID.scene_Dragon_DaoDan || this.isDTScene()) {
            this.addMatchScore(e, t, i, n, s, a);
            return
        }
        if (n.isCurrPlayer) {
            Player.setGold(a);
            var r = Player.getOutSideGold();
            r += t;
            Player.setOutSideGold(r)
        }
        Gold.show(i.x, i.y, e, n.isCurrPlayer, {
            x: s.x,
            y: s.y
        },
        function() {
            if (n.isCurrPlayer) {
                var e = Player.getOutSideGold();
                e -= t;
                Player.setOutSideGold(e);
                n.updateGold(Player.showGold())
            } else {
                n.updateGold(a)
            }
        })
    };
    u.ReportCatchFish = function(o, l) {
        var h = this.fishMap[o.FishId];
        var u = this.tableUserMap[o.UserId];
        var e = o.Fishids;
        if (h && u) {
            var i = u.dropGoldPos;
            var t = u.paoGloblePos;
            var n = h.fishConfigData;
            var s = n.BlueFishEft;
            var a = n.GoldFishEft;
            var r = n.ChangeFishEft;
            var c = n.IsBoss;
            var f = n.FishType;
            var d = h.type;
            var g = h.getXY();
            if (this.sceneCfg.SceneId == Game.sceneConfig.sceneID.scene_YouYiSai && o.SM_Score && o.SM_Score > 0) {
                yysFish.updateScore(u.userInfo.UserId, u.userInfo.Nick, u.localPos, o.SM_Score)
            }
            if (d == Game.FishID.Fish_JinZhu && u.isCurrPlayer) {
                this.timer.once(800, this,
                function() {
                    GoldPig.show(o.GoldPig, o.AddGold)
                });
                GoldPig.addGold(function(e) {
                    if (R) {
                        x.timer.once(e ? 2500 : 0, x,
                        function() {
                            if (R) {
                                R.showZhuanPan(o, h, u, l, true);
                                Gold.showGoldNumFont(g.x, g.y, o.AddGold, u.isCurrPlayer);
                                x.addCatchFishGold(h.FishMultiple, o.AddGold, {
                                    x: g.x,
                                    y: g.y
                                },
                                u, {
                                    x: i[0],
                                    y: i[1]
                                },
                                o.Gold)
                            }
                        })
                    }
                })
            }
            if (!u.isCurrPlayer && R.goldPigBox.visible && d == Game.FishID.Fish_JinZhu) {
                R.goldpig_other.visible = true;
                R.goldpig_other.pos(u.zhuanPanPos[0], u.zhuanPanPos[1]);
                this.timer.once(3e3, R,
                function() {
                    R.goldpig_other.visible = false;
                    R.showZhuanPan(o, h, u, l, true);
                    Gold.showGoldNumFont(g.x, g.y, o.AddGold, u.isCurrPlayer);
                    x.addCatchFishGold(h.FishMultiple, o.AddGold, {
                        x: g.x,
                        y: g.y
                    },
                    u, {
                        x: i[0],
                        y: i[1]
                    },
                    o.Gold)
                })
            }
            if (h.type === Game.FishID.Fish_changE) {
                ChangeLeftTime.hide()
            }
            if (this.isMatchScene()) {
                if (this.isSuperMatchScene()) {
                    u.updateMatchScore(o.SM_Score)
                } else {
                    o.Gold = o.SM_Score
                }
                u.updateMatchBltNum(o.SM_Bullet, true)
            }
            if (this.isDTScene()) {
                o.Gold = o.SM_Score;
                u.updateMatchBltNum(o.SM_Bullet, true)
            }
            if (f == 1) {
                this.showSmallFishDeadEft(g.x, g.y)
            }
            if (a || c) {
                this.showGoldFishDeadSpine(g.x, g.y);
                this.timer.frameOnce(10, this,
                function() {
                    if (this.displayedInStage && u && u.isCurrPlayer) {
                        SmallGoldPig.showGoldPigIcon();
                        var e = Player.getShakeTimes();
                        if (e < 5) {
                            Request.GetUserOtherInfoReq()
                        }
                    }
                });
                if (Game.state.get() != Game.sceneConfig.sceneID.scene_Dragon_DaoDan && u && u.isCurrPlayer) {
                    var p = GameConfig.getSysCfgByKey("RedPkgTipNeedGold");
                    if (p) {
                        if (c && Player.getGold() >= p * 1) {
                            this.showRedPkgTip()
                        }
                    }
                }
            }
            if (s) {
                this.showBlueFishDeadSpine(g.x, g.y)
            }
            if (r) {
                ChangE.hide(true)
            }
            if (l && o.CritMul && o.CritMul > 1) {
                var _ = u.localPos == 2 || u.localPos == 3 ? -10 : 10;
                DaoDanBaoJi.show(o.CritMul, {
                    x: t[0],
                    y: t[1] + _
                })
            }
            this.timer.frameOnce(3, this,
            function() {
                if (R) {
                    if (d != Game.FishID.Fish_JinZhu) {
                        this.showZhuanPan(o, h, u, l, d == Game.FishID.Fish_bossDragon || d == Game.FishID.Fish_kun)
                    }
                    if ((d == Game.FishID.Fish_changE || d == Game.FishID.Fish_jubaopen) && o.FishMul && o.FishMul > 1) {
                        var e = u.isCurrPlayer ? {
                            x: Game.UIWidth / 2,
                            y: Game.UIHeight / 2
                        }: {
                            x: u.zhuanPanPos[0],
                            y: u.zhuanPanPos[1]
                        };
                        var t = d == Game.FishID.Fish_changE ? ChangEEft: JuBaoPen;
                        t.show(o.FishMul, e, u.isCurrPlayer ? 1 : .5,
                        function() {
                            if (R) {
                                if (u.isCurrPlayer) {
                                    if (d == Game.FishID.Fish_jubaopen && o.FishMul >= 1e3 || d == Game.FishID.Fish_changE && o.FishMul >= 5e3) {
                                        BigWin.show(o.AddGold, e, u.isCurrPlayer ? 1 : .3)
                                    } else {
                                        BaoFuLa.show(o.AddGold, e, u.isCurrPlayer ? 1 : .6)
                                    }
                                } else {
                                    R.showZhuanPan(o, h, u, l, true)
                                }
                            }
                        })
                    }
                    if (d == Game.FishID.Fish_jinLongYu && o.CritMul && o.CritMul > 1) {
                        var e = {
                            x: Game.UIWidth / 2,
                            y: Game.UIHeight / 2
                        };
                        if (!u.isCurrPlayer) {
                            e = {
                                x: u.zhuanPanPos[0],
                                y: u.zhuanPanPos[1]
                            }
                        }
                        StrikeMultiple.show(o.CritMul, e, u.isCurrPlayer ? 1 : .6,
                        function() {
                            if (R) {
                                if (u.isCurrPlayer) {
                                    if (o.CritMul >= 10) {
                                        BigWin.show(o.AddGold, e, u.isCurrPlayer ? 1 : .3)
                                    } else {
                                        BaoFuLa.show(o.AddGold, e, u.isCurrPlayer ? 1 : .6)
                                    }
                                } else {
                                    R.showZhuanPan(o, h, u, l, true)
                                }
                            }
                        })
                    }
                    if (f == 4) {
                        if (o.Drops && o.Drops.length > 0) {
                            var i = 0;
                            for (var n = 0; n < o.Drops.length; n++) {
                                var s = o.Drops[n];
                                if (s.ItemId == Game.item.Juan) {
                                    i += s.ItemNum
                                }
                            }
                            var a = u.zhuanPanPos;
                            var e = {
                                x: a[0],
                                y: a[1]
                            },
                            r = 1;
                            this.timer.frameOnce(3, this,
                            function() {
                                if (R) {
                                    this.JiangQuanEft(i, e, r)
                                }
                            })
                        }
                    }
                }
            });
            if (n) {
                this.fishDeadSound(h.id, n, o.UserId)
            }
            h.playDeadAct(this,
            function() {
                if (o.MoreType != 3) {
                    h.dead()
                }
                if (o.Drops && o.Drops.length > 0) {
                    this.dropItems(u, g.x, g.y, o.Drops)
                }
                if (h.IsTreasure === 1) {
                    SeaGodGift.dropDomToTarget(this, u, g.x, g.y)
                }
                if (o.AddGold && o.MoreType != 3 && d != Game.FishID.Fish_JinZhu) {
                    var e = u.dropGoldPos;
                    if (e && e.length >= 2) {
                        Gold.showGoldNumFont(g.x, g.y, o.AddGold, u.isCurrPlayer);
                        this.addCatchFishGold(h.FishMultiple, o.AddGold, {
                            x: g.x,
                            y: g.y
                        },
                        u, {
                            x: e[0],
                            y: e[1]
                        },
                        o.Gold)
                    }
                }
            });
            if (e) {
                var m = [];
                for (var v = 0; v < e.length; v++) {
                    var y = e[v],
                    I = this.fishMap[y];
                    if (I && I.displayedInStage) {
                        if (I.getXY().x < 0 || I.getXY().x > Game.UIWidth || I.getXY().y < 0 || I.getXY().y > Game.UIHeight) {
                            I.dead();
                            continue
                        }
                        m.push(I)
                    }
                }
            }
            if (o.MoreType == 1 || o.MoreType == 2) {
                ShanDianLian.show(h, m);
                Sound.playSound(Sound.RES.lightingchain.url, Sound.RES.lightingchain.vol);
                var i = {
                    x: Game.UIWidth / 2,
                    y: Game.UIHeight / 2
                },
                S = 1;
                if (!u.isCurrPlayer) {
                    var C = u.zhuanPanPos;
                    i = {
                        x: C[0],
                        y: C[1]
                    },
                    S = .6
                }
                this.timer.once(1800, this,
                function() {
                    BaoFuLa.show(o.AddGold, i, S)
                });
                this.timer.once(350, this,
                function() {
                    var t = u.dropGoldPos;
                    for (var e = 0; e < m.length; e++) {
                        var i = m[e];
                        if (i) { (function(e) {
                                Gold.show(e.getXY().x, e.getXY().y, [3, 10], u.isCurrPlayer, {
                                    x: t[0],
                                    y: t[1]
                                });
                                e.playDeadAct(this,
                                function() {
                                    e.dead(true)
                                })
                            })(i)
                        }
                    }
                })
            } else if (o.MoreType == 3) {
                var i = u.dropGoldPos;
                this.timer.once(350, this,
                function() {
                    h.dead(true);
                    for (var e = 0; e < m.length; e++) {
                        var t = m[e];
                        if (t) { (function(e) {
                                Gold.show(e.getXY().x, e.getXY().y, [3, 10], u.isCurrPlayer, {
                                    x: i[0],
                                    y: i[1]
                                });
                                e.playDeadAct(this,
                                function() {
                                    e.dead(true)
                                })
                            })(t)
                        }
                    }
                    this.timer.once(200, this,
                    function() {
                        this.addCatchFishGold(h.FishMultiple, o.AddGold, {
                            x: g.x,
                            y: g.y
                        },
                        u, {
                            x: i[0],
                            y: i[1]
                        },
                        o.Gold)
                    })
                });
                var b = Laya.Pool.getItemByClass("shuiLeiAni", shuileibaozhaUI);
                b.ani1.once(Laya.Event.COMPLETE, this,
                function() {
                    b.removeSelf();
                    Laya.Pool.recover("shuiLeiAni", b);
                    this.bossComeBox.visible = false
                });
                b.size(Game.UIWidth, Game.UIHeight);
                b.pivot(Game.UIWidth / 2, Game.UIHeight / 2);
                b.ani1.play(0, false);
                b.pos(Game.UIWidth / 2, Game.UIHeight / 2);
                this.bossComeBox.addChild(b);
                this.bossComeBox.visible = true;
                Sound.playSound(Sound.RES.zhadan.url, Sound.RES.zhadan.vol)
            }
            if (u.isCurrPlayer && h.IsBoss && !BossShareDialog.isIngore && Game.showShare()) {
                this.btnShare.visible = true;
                var w = o.FishMul > 0 ? o.FishMul: h.FishMultipleNum;
                BossShareDialog.shareInfo = {
                    FishMultipleNum: w,
                    type: h.type,
                    paoMu: this.playerCannon.cannonMul
                };
                this.timer.once(1e4, this, this.hideBossShareBtn)
            }
            this.refreshHarmonicsFish(h)
        }
    };
    u.hideBossShareBtn = function() {
        this.btnShare.visible = false
    };
    u.hideRedPkgTip = function() {
        this.btnRedPkg.visible = false;
        this.redPkgTip.visible = false;
        this.timer.clear(this, this.hideRedPkgTip)
    };
    u.showRedPkgTip = function() {
        if (!this.btnRedPkg.visible) {
            this.btnRedPkg.visible = true;
            this.redPkgTip.visible = true;
            this.timer.clear(this, this.hideRedPkgTip);
            this.timer.once(7e3, this, this.hideRedPkgTip)
        }
    };
    u.ReportChangeScene = function(e) {
        f = e.SceneSeq;
        var t = false;
        if (this.playerCannon && this.playerCannon.autoFire) {
            t = true;
            this.playerCannon.stop(true)
        }
        c = [];
        this.fishDataList = [];
        for (var i in this.fishMap) {
            var n = this.fishMap[i];
            if (n) {
                if (n.displayedInStage && !n.destroyed) {
                    if (n.type == Game.FishID.Fish_worldBoss || n.type == Game.FishID.Fish_bossDragon || n.id < 0) {} else {
                        n.speedLeave()
                    }
                } else {
                    n.dead()
                }
            }
        }
        this.FishGroupSpeedLeave();
        ChangeLeftTime.hide();
        this.sockLightBox.removeChildren(0, this.sockLightBox.numChildren - 1);
        this.timer.once(1500, this,
        function() {
            this.fishGroupComingBox.visible = true;
            this.fishGroupComing.ani1.on(Laya.Event.COMPLETE, this,
            function() {
                this.fishGroupComing.visible = false;
                this.fishGroupComing.ani1.gotoAndStop(0);
                this.fishGroupComingBox.visible = false
            });
            this.fishGroupComing.visible = true;
            this.fishGroupComing.ani1.play(0, false);
            Sound.playSound(Sound.RES.yuchaolailin.url, Sound.RES.yuchaolailin.vol)
        });
        this.timer.once(1600, this, this.playGroupComeAni);
        this.timer.once(6e3, this,
        function() {
            if (this.playerCannon && !this.playerCannon.firing && t) {
                this.updateAutoFire()
            }
        });
        this.unfreeze()
    };
    u.playGroupComeAni = function() {
        {
            this.sceneBgIndex += 1;
            this.sceneBgIndex = this.sceneBgIndex > o.length - 1 ? 0 : this.sceneBgIndex;
            var e = o[this.sceneBgIndex];
            this.newBg.skin = e;
            this.newBg.size(this.bg.width, this.bg.height);
            var t = 1;
            if (this.fishGroupFromLeft) t = -1;
            var i = (this.bg.parent.width - this.bg.width) / 2;
            var n = this.bg.width * t + i;
            var s = -72 * t;
            var a = -320 * t;
            if (t == -1) {
                s += this.bg.width;
                a += this.bg.width
            }
            this.newBg.visible = true;
            this.newBg.centerY = 0;
            this.fishGroupComeAni.y = -this.newBg.y;
            this.fishGroupComeAni.play(0, true);
            var r = 5e3;
            this.newBg.x = n;
            this.fishGroupComeAni.x = s;
            this.fishGroupComeAni.scaleX = t * 1.68;
            Laya.Tween.to(this.newBg, {
                x: i
            },
            r, null, Laya.Handler.create(this,
            function() {
                if (this.bg.displayedInStage) {
                    this.bg.skin = e
                }
            }));
            Laya.Tween.to(this.fishGroupComeAni, {
                x: a
            },
            r / n * (s - a), null, Laya.Handler.create(this,
            function() {
                if (this.fishGroupComeAni.displayedInStage) {
                    this.fishGroupComeAni.stop();
                    this.newBg.visible = false
                }
            }), r)
        }
    };
    u.updateFishPos = function() {
        for (var e in this.fishMap) {
            var t = this.fishMap[e];
            if (t && t.displayedInStage && !t.destroyed && t.id > 0) {
                t.updateFishPos()
            }
        }
    };
    u.release = function() {
        Fish.release()
    };
    u.updateFishRunTime = function(e) {
        for (var t = 0; t < this.fishDataList.length; t++) {
            if (!this.freezing) {
                if (this.fishDataList[t]) {
                    this.fishDataList[t].RunTime += e
                }
            }
        }
    };
    u.onSocketClose = function(e) {
        if (!e) {
            if (this.playerCannon) {
                this.playerCannon.stop(false)
            }
            I.showSocketCloseTipBox()
        }
    };
    u.ReportTreasureFun = function(e) {
        if (e) {
            var t = this.tableUserMap[e.UserId],
            i = this.fishBox.getChildByName("haishenyu_" + e.UserId);
            if (t && !t.isCurrPlayer && i) {
                if (e.State === 2) {
                    Resource.checkLoaded = false;
                    Resource.load(RES.loadTaskList.seaGoldGift,
                    function() {
                        i.bg.visible = false;
                        i.ani1.stop();
                        var e = new Laya.Animation;
                        e.source = "UIRoot/FX/haishenbaozangsousuo.ani";
                        e.pos(64, 64);
                        e.play(0, true);
                        i.addChild(e)
                    })
                } else if (e.State === 3) {
                    if (e.FishType) {
                        this.timer.once(4e3, this,
                        function() {
                            i.removeSelf();
                            ZhuanPan.show({
                                x: t.zhuanPanPos[0],
                                y: t.zhuanPanPos[1]
                            },
                            e.FishType, e.AddGold, [], "ZhuanPanMax")
                        })
                    }
                }
            }
        }
    };
    u.changeCannonSkin = function(e) {
        if (e) {
            var t = this.tableUserMap[e.UserId];
            if (t) {
                t.changeSkinFun(e.CannonId);
                t.nowUseSkin = e.CannonId
            }
        }
    };
    u.ReportWingSuccess = function(e) {
        if (e) {
            var t = this.tableUserMap[e.UserId];
            if (t) {
                t.addWing(e.WingId)
            }
        }
    };
    u.showRedPackage = function(e) {
        var t = this;
        if (this.leftTimeBox && e) {
            RedPackageIcon.show(t.leftTimeBox, e)
        }
    };
    u.SceneFaceReport = function(i) {
        var n = this,
        e = null,
        t = null;
        if (!i.SendUserID || !i.ReceiveID || !i.FaceID) {
            return false
        }
        e = this.tableUserMap[i.SendUserID];
        t = this.tableUserMap[i.ReceiveID];
        this.emjoyBox.visible = true;
        var s = Utils.localToGlobal(e.paoImage);
        var a = Utils.localToGlobal(t.paoImage);
        s = this.emjoyBox.globalToLocal(s, true);
        a = this.emjoyBox.globalToLocal(a, true);
        var r = 0;
        var o = 0;
        if (e.localPos == 2 || e.localPos == 3) {
            r = s.y + 100
        } else {
            r = s.y - 100
        }
        if (t.localPos == 2 || t.localPos == 3) {
            o = a.y + 150
        } else {
            o = a.y - 150
        }
        var l = new Laya.Image;
        l.skin = "resource/sceneEmjoys/emjoy_" + i.FaceID + ".png";
        l.anchorX = .5;
        l.name = "emjoy_icon";
        l.anchorY = .5;
        l.pos(s.x, r);
        this.emjoyBox.addChild(l);
        var h = 150,
        u, c = 0;
        if (a.x - s.x < 100) {
            u = a.x < this.width / 2 ? a.x + h: a.x - h
        } else {
            u = a.x > s.x ? a.x - h: a.x + h
        }
        if (Math.abs(o - r) < 100) {
            c = o < this.height / 2 ? o + h: o - h
        } else {
            c = o > r ? o - h: o + h
        }
        var f = [{
            x: s.x,
            y: r
        },
        {
            x: u,
            y: c
        },
        {
            x: a.x,
            y: o
        }];
        var d = {
            delay: 0,
            orientToBezier: ["x", "y"],
            bezier: f,
            ease: "linearNone",
            onStart: function() {},
            onComplete: function(e) {
                l.removeSelf();
                var t = new Laya.Templet;
                t.loadAni("res/spine/emjoy_" + i.FaceID + "/emjoy_" + i.FaceID + ".sk");
                t.on(Laya.Event.COMPLETE, this,
                function() {
                    var e = t.buildArmature(0);
                    if (i.ReceiveID == Player.getUserId()) {
                        e.pos(n.emjoyBox.width / 2, n.emjoyBox.height / 2);
                        e.scale(2.8, 2.8)
                    } else {
                        e.pos(a.x, o);
                        e.scale(1, 1)
                    }
                    e.play(0, false);
                    n.emjoyBox.addChild(e);
                    e.once(Laya.Event.STOPPED, e,
                    function() {
                        e.removeSelf()
                    })
                })
            },
            onCompleteParams: [l]
        };
        TweenLite.to(l, 1.2, d)
    };
    u.ReportGoldChange = function(e) {
        if (e && e.UserId) {
            var t = this.tableUserMap[e.UserId];
            if (t) {
                t.updateGold(e.Money1)
            }
        }
    };
    u.demo_UpdateFishPos = function(e) {
        for (var t = 0; t < e.length; t++) {
            var i = this.fishMap[e[t].FishId];
            var n = e[t];
            if (i) {
                i.demo_UpdateFishPos(n.X, n.Y)
            }
        }
    };
    u.destroy = function() {
        Laya.timer.clearAll(this);
        ChangeLeftTime.hide();
        this.removeSelf();
        a = [];
        c = [];
        R = null
    };
    u.stopUserSkill = function(e) {
        if (e.UserId != undefined && e.SkillId != undefined) {
            var t = this.tableUserMap[e.UserId];
            if (t && !t.isCurrPlayer) {
                switch (e.SkillId) {
                case Game.item.SuoDing:
                    t.setLocked(false);
                    t.setLockedTarget(null);
                    break;
                case Game.item.Harmonics:
                    t.setHarmonics(false);
                    break;
                case Game.item.KuangBao:
                    t.setLocked(false);
                    t.setFrenzy(false);
                    t.setLockedTarget(null);
                    break;
                case Game.item.AddSpeed:
                    t.setAddBulletSpeed(false);
                    break
                }
            }
        }
    };
    r.exitToGameCenter = function() {
        ChatSystem.clearRoomData();
        Player.setOutSideGold(0);
        Request.GetUserInfoReq();
        Request.GetUserOtherInfoReq();
        Request.getActListReq();
        Pokedex.close();
        ShopMall.close();
        PlayPackage.close();
        ChatSystem.hide();
        Sound.stopFire();
        Sound.stopAll();
        NoviceGuidanceOnMinGame.hide();
        HitEgg.hide();
        ExchangePrompt.hide(true);
        ExChangeJuan.hide();
        AwardList.hide();
        worldBossMain.hide();
        SeaGodGift.hide();
        GoldPig.hide();
        f = 0;
        WinUtils.closeAllDialog();
        Game.minGameShareGame.roomParam = {};
        Laya.stage.event(Laya.Event.def_LeaveFishScene, {
            sid: Game.state.get()
        });
        LoadingView.show(300);
        if (i) {
            i = false;
            FishScene.destroy();
            GameCenter.setSceneInfo({
                SvrId: 0,
                ServerName: "",
                TableId: 0
            });
            GameCenter.selectScene(Game.sceneConfig.sceneID.scene_100, true)
        } else if (FishScene.isUpgrade) {
            FishScene.isUpgrade = false;
            FishScene.destroy();
            GameCenter.setSceneInfo({
                SvrId: 0,
                ServerName: "",
                TableId: 0
            });
            GameCenter.selectNormalScene()
        } else {
            Game.DialogRoot.visible = false;
            GameCenter.show()
        }
        NoviceGuidanceOnMinGame.setGuidOver(false)
    };
    var R = null,
    c = [],
    f = 0,
    d = 0,
    g = false;
    var p = {};
    var _ = false;
    this.SceneBossCfg = null;
    var m = 0,
    v = 0;
    function y() {
        var e = Laya.timer.currFrame;
        if (e % 5 && m < 5) {
            m++; (function() {
                var e = new Laya.Animation;
                e.source = "UIRoot/FX/xiaoyusiwang.ani";
                e.pos(0 - Game.UIWidth, 0);
                e.rotation = Math.random() * 360;
                e.once(Laya.Event.COMPLETE, this,
                function() {
                    e.stop();
                    e.removeSelf();
                    Laya.Pool.recover("SmallFishDeadAni", e)
                });
                e.once(Laya.Event.DISPLAY, this,
                function() {
                    e.play(0, false)
                });
                Game.UIRoot.addChild(e)
            })(); (function() {
                var e = new Laya.Animation;
                e.source = "UIRoot/FX/jinsesiwang1.ani";
                e.pos(0 - Game.UIWidth, 0);
                e.rotation = Math.random() * 360;
                e.once(Laya.Event.COMPLETE, this,
                function() {
                    e.stop();
                    e.removeSelf();
                    Laya.Pool.recover("GoldFishDeadAni", e)
                });
                e.once(Laya.Event.DISPLAY, this,
                function() {
                    e.play(0, false)
                });
                Game.UIRoot.addChild(e)
            })(); (function() {
                var e = new Laya.Animation;
                e.source = "UIRoot/FX/lansesiwang.ani";
                e.pos(0 - Game.UIWidth, 0);
                e.rotation = Math.random() * 360;
                e.once(Laya.Event.COMPLETE, this,
                function() {
                    e.stop();
                    e.removeSelf();
                    Laya.Pool.recover("blueFishDeadAni", e)
                });
                e.once(Laya.Event.DISPLAY, this,
                function() {
                    e.play(0, false)
                });
                Game.UIRoot.addChild(e)
            })()
        }
        if (e % 4) {
            v++;
            var t = new Laya.Image;
            Laya.Pool.recover("dropItem", t);
            if (v == 40) {
                Laya.timer.clear(null, y)
            }
        }
    }
    var I = {
        display: null,
        unDisplay: null,
        SKIN_NAME: e,
        init: function() {
            Cannon.createFrames();
            Bullet.addCache();
            Gold.addCache();
            Laya.timer.frameLoop(1, null, y);
            ZhuanPan.addCache();
            JuBaoPen.fishComing(true);
            ChangeShow.fishComing(true);
            BigWin.addCache();
            BaoFuLa.addCache();
            StrikeMultiple.addCache()
        },
        exit: function() {
            R && R.exit()
        },
        destroy: function() {
            if (R) {
                Laya.timer.clearAll(this);
                R.destroy()
            }
        },
        show: function(e) {
            if (e) {
                WinUtils.closeAllDialog();
                console.log(e);
                g = false;
                if (!Game.fishPathData) {
                    Game.fishPathData = Resource.getResByUrl("fishPath/pathFile.json");
                    I.init()
                }
                Fish.addCache(e.SceneId);
                if (!R) {
                    R = new r
                }
                R.show(e);
                ActionReport.addLog(ActionReport.actionIndex.ClientEnterScene);
                Resource.clearRes("fishPath/pathFile.json")
            }
        },
        showHere: function() {
            if (R) {
                R.showHere()
            }
        },
        getSceneTimer: function() {
            if (R) {
                return R.timer
            }
            return null
        },
        getSceneId: function() {
            if (R && R.sceneCfg) {
                return R.sceneCfg.SceneId
            }
            return 0
        },
        getSceneRunTime: function() {
            return d
        },
        getSceneSeq: function() {
            return f
        },
        isMatchScene: function() {
            if (R) {
                return R.isMatchScene()
            }
            return false
        },
        isSuperMatchScene: function() {
            if (R) {
                return R.isSuperMatchScene()
            }
            return false
        },
        isDTScene: function() {
            return R && R.isDTScene() ? true: false
        },
        reStartGame: function() {
            if (R && R.sceneCfg) {
                try {
                    LoadingView.show()
                } catch(e) {
                    console.log("reStartGame try");
                    console.log(e)
                }
                var e = 0;
                Laya.timer.once(0, R,
                function() {
                    e += Utils.getRandom(10, 40);
                    LoadingView.updateValue(e);
                    R.removeSelf()
                });
                Laya.timer.once(500, R,
                function() {
                    e += Utils.getRandom(10, 40);
                    LoadingView.updateValue(e)
                });
                Laya.timer.once(1e3, R,
                function() {
                    LoadingView.updateValue(100)
                });
                Laya.timer.once(1200, R,
                function() {
                    if (R) {
                        if (R.sceneCfg) {
                            if (R.sceneCfg.SceneId <= Game.sceneConfig.sceneID.scene_1000) {
                                if (Game.server.socket && Game.server.socket.connected()) {
                                    R.show(R.sceneCfg)
                                } else {
                                    console.log("socket断开  exitToGameCenter");
                                    I.exitToGameCenter()
                                }
                            } else {
                                console.log("场景<=scene_1000 exitToGameCenter");
                                I.exitToGameCenter()
                            }
                        } else {
                            console.log("找不到场景sceneCfg  跳转到大厅 exitToGameCenter");
                            I.exitToGameCenter()
                        }
                    } else {
                        console.log("找不到场景对象 跳转到大厅");
                        I.LeaveGameSvrReq();
                        I.exitToGameCenter()
                    }
                    LoadingView.remove()
                })
            }
        },
        updateItemNum: function() {
            R && R.updateItemNum()
        },
        getCurrentCannon: function() {
            if (R) {
                return R.playerCannon
            }
            return null
        },
        getCannonMulList: function() {
            if (R) {
                return R.cannonMulList
            }
            return []
        },
        showUserIdUI: function(e) {
            R && R.showUserIdUI(e)
        },
        updateAutoFireUI: function(e) {
            R && R.updateAutoFireUI(e)
        },
        addBulletToView: function(e) {
            R && R.addBulletToView(e)
        },
        addNetToView: function(e) {
            R && R.netBox.addChild(e)
        },
        updateTableUser: function(e) {
            if (e.tablelist instanceof Array) {
                a = e.tablelist
            } else {
                a.push(e)
            }
            if (R) {
                R.addUser()
            }
            yysFish.initName(e.tablelist)
        },
        updateCurrentJiangQuan: function(e) {
            if (R && R.playerCannon) {
                R.playerCannon.updateJuan(e)
            }
        },
        ReportUserLeaveTable: function(e) {
            if (R) {
                R.removeUser(e.UserId)
            }
        },
        ReportSendFish: function(e) {
            if (R) {
                c = c.concat(e.Fishs);
                R.ReportSendFish(c);
                c = []
            } else {
                c = c.concat(e.Fishs)
            }
        },
        FireRep: function(e) {
            if (!e.Tag) {
                if (e.MsgId) {
                    MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgId))
                }
                if (R && R.playerCannon) {
                    if (R.playerCannon.locked) {
                        R.playerCannon.setLockedTarget(null)
                    }
                    R.playerCannon.stop()
                }
                Request.GetUserMoneyReq(Game.item.Gold);
                if (e.BulletId && R && R.playerCannon) {
                    R.playerCannon.removeBltById(e.BulletId)
                }
            } else {
                if (R) {
                    if (R.isMatchScene() && !R.isSuperMatchScene()) {
                        return
                    }
                }
                var t = e.Money1;
                if (R && R.playerCannon && t >= 0 && R.displayedInStage) {
                    Player.setGold(t);
                    R.playerCannon.updateGold(t)
                }
            }
        },
        ReportFire: function(e) {
            if (R) {
                R.ReportFire(e.UserId, e.Angle, e.Mul, e.LockFishId, e.IsFrenzy, e.LongZhuMul, e)
            }
        },
        ReportUserCannonMul: function(e) {
            if (R) {
                R.ReportUserCannonMul(e.UserId, e.CannonMul)
            }
        },
        updateCannonMul: function(e) {
            R && R.updateCannonMul(e)
        },
        BossComeAni: function(e) {
            R && R.BossComeAni(e)
        },
        BossComeOver: function() {
            R && R.BossComeOver()
        },
        ReportCatchFish: function(e) {
            R && R.ReportCatchFish(e)
        },
        LeaveGameSvrReq: function(e) {
            if (e) {
                _ = e
            }
            Request.LeaveGameSvrReq()
        },
        LeaveGameSvrRep: function(e) {
            if (_) {
                Game.disablePagePush = true
            }
            if (e.Tag) {
                if (I.exitToGameCenter) {
                    I.exitToGameCenter()
                }
                Game.minGameShareGame.roomParam = {}
            }
            if (_) {
                _ = false;
                if (Game.state.get() == Game.sceneConfig.sceneID.gameCenter) {
                    LoadingView.show();
                    GameCenter.quickStart()
                }
            }
        },
        exitToGameCenter: function() {
            if (r.exitToGameCenter && Game.state.get() > Game.sceneConfig.sceneID.gameCenter) {
                r.exitToGameCenter()
            }
        },
        UseSkillRep: function(e) {
            R && R.UseSkillRep(e)
        },
        ReportUseSkillItem: function(e, t, i, n) {
            R && R.ReportUseSkillItem(e, t, i, n)
        },
        ReportFrozen: function(e) {
            R && R.ReportFrozen(e)
        },
        UseDantouItemRep: function(e) {
            R && R.UseDantouItemRep(e)
        },
        ReportUseDantouItem: function(e) {
            R && R.ReportUseDantouItem(e)
        },
        ReportChangeScene: function(e) {
            R && R.ReportChangeScene(e)
        },
        ReportRoomRunTime: function(e) {
            d = e.RunTime
        },
        getMaxFish: function() {
            return R && R.getMaxFish()
        },
        updateFishPos: function() {
            R && R.updateFishPos()
        },
        onSocketClose: function(e, t) {
            if (Game.RunningInBackstage) {
                if (R) {
                    if (R.reconnectionNum >= 60) {
                        R.reconnectionNum = 0
                    } else {
                        R.reconnectionNum++;
                        R.timer.once(1e3, this,
                        function() {
                            PB.contactServer(function() {
                                if (R) {
                                    R.reconnectionNum = 0
                                }
                            })
                        })
                    }
                } else if (Game.state.get() <= Game.sceneConfig.sceneID.gameCenter) {}
            } else {
                if (R) {
                    if (R.reconnectionNum >= 10) {
                        r.exitToGameCenter()
                    } else {
                        R.reconnectionNum++;
                        R.onSocketClose(e, t);
                        R.timer.once(1e3, this,
                        function() {
                            PB.contactServer(function() {
                                I.hideSocketCloseTipBox();
                                if (R) {
                                    R.reconnectionNum = 0
                                }
                            })
                        })
                    }
                }
            }
        },
        setParticle: function(e, t) {
            p[e] = t
        },
        ReportTreasureState: function(e) {
            if (!R) {
                return false
            }
            R.ReportTreasureFun(e)
        },
        showSocketCloseTipBox: function() {
            if (R && R.socketCloseTipBox) {
                R.socketCloseTipBox.visible = true
            }
        },
        hideSocketCloseTipBox: function() {
            if (R && R.socketCloseTipBox) {
                R.socketCloseTipBox.visible = false
            }
        },
        updatePoChanBg: function(e) {
            if (R) {
                R.jiuJiJinBg.visible = e ? true: false
            }
        },
        delFishMap: function(e) {
            if (R) {
                if (R.fishMap[e]) {
                    delete R.fishMap[e]
                }
                if (R.ableLockFishMap[e]) {
                    delete R.ableLockFishMap[e]
                }
                if (R.selectedUnLockedFishMap[e]) {
                    delete R.selectedUnLockedFishMap[e]
                }
            }
        },
        getFishScene: function() {
            if (R) {
                return R
            }
            return null
        },
        demo_UpdateFishPos: function(e) {},
        changeCannonSkin: function(e) {
            R && R.changeCannonSkin(e)
        },
        ReportWingSuccess: function(e) {
            R && R.ReportWingSuccess(e)
        },
        stopAutoFire: function() {
            if (R && R.playerCannon) {
                R.playerCannon.stop(true)
            }
        },
        showVipLeftTime: function() {
            if (R && R.leftTimeBox) {
                VipSceneLeftTime.show(R.leftTimeBox)
            }
        },
        getUserCannonByUid: function(e) {
            if (R) {
                return R.tableUserMap[e]
            }
            return null
        },
        ReportVipUp: function(e) {
            if (R) {
                if (R.playerCannon) {
                    R.playerCannon.ReportVipUp(e)
                }
            }
        },
        updateMatchScore: function(e) {
            if (R && R.displayedInStage) {
                R.fc_score.value = e;
                R.MatchUpdateBuoy(e);
                if (R.isDTScene()) {
                    this.updateDTDiff(e)
                }
            }
        },
        updateMatchBltNum: function(e) {
            if (R && R.displayedInStage) {
                R.fc_bltLeftNum.value = e
            }
        },
        ReportSuperMatchScorePrize: function(e) {
            if (R && R.displayedInStage) {
                if (R.playerCannon) {
                    R.dropItems(R.playerCannon, Game.UIWidth / 2, Game.UIHeight / 2, [{
                        ItemId: e.PrizeId,
                        ItemNum: e.PrizeNum
                    }])
                }
            }
        },
        ReportNewRedBag: function(e) {
            if (Game.debug) {
                console.log("红包id:" + e)
            }
            if (!R || !e) {
                return false
            }
            var t = Utils.redPackageStock.add(e);
            R.showRedPackage(t[0])
        },
        showRedPackage: function(e) {
            if (!R || !e) {
                return false
            }
            R.showRedPackage(e)
        },
        setCopyUserId: function() {
            if (R) {
                R.setCopyUserId()
            }
        },
        SceneFaceReport: function(e) {
            if (e.Tag && R) {
                R.SceneFaceReport(e)
            }
        },
        chatRedPointFun: function(e) {
            if (R) {
                R.btnHanHua.getChildByName("redMark").visible = e
            }
        },
        noticeFriendChatMsg: function(e) {
            if (R && e) {
                if (e == Player.getUserId()) {
                    var t = R.emjoyBox;
                    var i = R.tableUserMap[e];
                    if (i.globalPoint) {
                        var n = i.globalPoint;
                        FriendsChatMsg.show(n.x, n.y - 80, t)
                    }
                }
            }
        },
        showHaoJiaoIconAni: function() {
            if (R && R.haoJiaoIconAni && R.haoJiao.visible) {
                R.haoJiaoIconAni.play();
                R.haoJiaoIconAni.visible = true
            }
        },
        ReportGoldChange: function(e) {
            if (R) {
                R.ReportGoldChange(e)
            }
        },
        getFreezing: function() {
            if (R) {
                return R.freezing
            }
            return false
        },
        setGoldPigNum: function(e) {
            if (R) {
                R.showPoolNum(e)
            }
        },
        checkSevenDayRedpoint: function() {
            if (R) {
                R.checkRedPoint()
            }
        },
        updateDTDiff: function(e) {
            if (!R) {
                return
            }
            if (!R.DTRuleCfg) {
                var t = GameConfig.getDTDBRuleById(Game.state.get());
                if (t) {
                    var i = t.Reward,
                    n = i.split("|"),
                    s = [];
                    if (n) {
                        for (var a = 0; a < n.length; a++) {
                            if (n[a]) {
                                var r = n[a].split(":");
                                if (r && r.length == 3) {
                                    s.push([r[0], r[1], r[2]])
                                }
                            }
                        }
                    }
                    R.DTRuleCfg = s
                }
            }
            var o = 0,
            l = 0,
            h = 0,
            u = 0;
            for (var a = 0; a < R.DTRuleCfg.length; a++) {
                var n = R.DTRuleCfg[a];
                if (n && n.length >= 3) {
                    var c = Math.abs(n[0] - e);
                    if (n[0] >= h) {
                        h = n[0] * 1;
                        u = a
                    }
                    if (n[0] <= e) {
                        continue
                    } else if (o == 0 || c < o) {
                        o = c;
                        l = a
                    }
                }
            }
            var r = R.DTRuleCfg[e >= h ? u: l];
            if (r && r.length >= 3) {
                R.DTIcon.skin = "resource/fishScene/" + r[1] + ".png";
                R.DtNum.text = "x" + r[2];
                R.DtGold.text = r[0] > e ? r[0] - e: 0
            }
        },
        cancleLock: function() {
            if (R && R.playerCannon) {
                R.playerCannon.setLocked(false);
                R.playerCannon.setLockedTarget(null);
                R.hideLockSight()
            }
        },
        showPaoDanTip: function() {
            R && R.showPaoDanTip()
        },
        refreshHarmonicsFish: function(e) {
            R && R.refreshHarmonicsFish(e)
        },
        stopUserSkill: function(e) {
            R && R.stopUserSkill(e)
        }
    };
    return I
} ();
var LoginViewApp = function() {
    var t = "LoginViewAppFun";
    var s = undefined,
    a = undefined;
    var r = null;
    var e = {
        WeChat: 0,
        Phone: 1,
        Account: 2,
        Guest: 3
    };
    var o = [[], [283], [86, 486], [86, 283, 486], [0, 189, 377, 566], [ - 82, 100, 282, 463, 645]];
    var l = {
        NICK: 0,
        VISITOR: 1,
        PHONE: 2,
        THIRD: 3
    };
    var h = "",
    u = "",
    c = "",
    f = "",
    i = false,
    n = false;
    function d() {
        d.super(this);
        this.initBase(t, ["res/atlas/resource/login.atlas"], {
            isFullScene: true,
            isWindow: true,
            needFitViews: [this.bg]
        });
        this.isClearRes = true;
        Laya.stage.off(Laya.Event.def_gameExit, this, this.resetFun)
    }
    Laya.class(d, "LoginViewAppFun", loginViewAppUI, "");
    var g = d.prototype;
    g.init = function() {
        Adapter.fitView(this, this.bg);
        this.weChat.visible = false;
        this.btnPhone.visible = false;
        this.account_login.visible = false;
        this.try_game.visible = false;
        this.showLoginBtnMap = {
            NoCache: [this.weChat, this.btnQQ, this.btnPhone, this.account_login, this.try_game],
            HasCache: [this.weChat, this.btnPhone]
        };
        this.VersionNumberLabel.text = "当前版本:" + (Game.bigVersion / 1e3).toFixed(1) + "." + Game.smallVersion + "." + Game.channel.cfg.cps;
        this.on(Laya.Event.CLICK, this,
        function(e) {
            var t = e.target.name;
            switch (t) {
            case "start_game":
                if (this.account_info_box.visible) {
                    this.clickStartGameFun()
                } else {
                    if (Channel.loginBtn) {
                        Channel.loginBtn()
                    }
                }
                break;
            case "weChat":
                if (Channel) {
                    if (Channel.loginBtn) {
                        Channel.loginBtn(1)
                    } else if (Channel.wxQRCodeLogin) {
                        this.wxQRCodeLogin()
                    }
                }
                ActionReport.addLog(ActionReport.actionIndex.login_WX);
                break;
            case "account_login":
                ChoiceAccount.show();
                break;
            case "try_game":
                if (Channel && Channel.autoLogin) {
                    Channel.autoLogin()
                } else {
                    p.experimenterTry();
                    ActionReport.addLog(ActionReport.actionIndex.login_Tourist)
                }
                break;
            case "btn_loginPhone":
                LoginPhone.show();
                break;
            case "btnQQ":
                if (Channel && Channel.loginBtn) {
                    Channel.loginBtn(2)
                }
                ActionReport.addLog(ActionReport.actionIndex.login_WX);
                break;
            case "notice":
                Announcement.show();
                ActionReport.addLog(ActionReport.actionIndex.login_Notice);
                break;
            case "user_agreement":
                UserAgreement.show();
                ActionReport.addLog(ActionReport.actionIndex.login_XieYi);
                break;
            case "switch_account":
                ChoiceAccount.show();
                break
            }
        });
        this.btnMap = {
            weChat: this.weChat,
            phone: this.btnPhone,
            qq: this.btnQQ,
            account: this.account_login,
            speedStart: this.try_game
        };
        if (Channel) {
            if (this.logoImg) {
                if (Channel.cfg.cps == Game.ChannelConstants.taiWanHaiMeng) {
                    this.logoImg.skin = "resource/loading/logo_2.png"
                }
            }
        }
        if (window.QC) {
            this.setQQBtnPos()
        }
    };
    g.windowResize = function() {
        BaseView.prototype.windowResize.call(this);
        this.setQQBtnPos()
    };
    g.setQQBtnPos = function() {
        if (this.btnQQ) {
            var e = Utils.localToGlobal(this.btnQQ);
            var t = Laya.Browser.clientWidth;
            var i = Laya.Browser.clientHeight;
            var n = Game.UIHeight / i;
            var s = Game.UIWidth / t;
            var a = e.y / Game.UIHeight * i;
            var r = parseInt(e.x / Game.UIWidth * 100) / 100 * t;
            var o = document.getElementById("qqLoginBtn");
            if (o) {
                o.style.left = r * .93 + "px";
                o.style.top = a + "px";
                o.style.width = (s > 1 ? 158 * (s - .9) : 158 / s) + "px";
                o.style.height = (n > 1 ? 75 * (n - 1) : 75 / n * .75) + "px"
            }
        }
    };
    g.showLoginBtn = function() {
        this.loginBtnBox.visible = true;
        var e = Laya.LocalStorage.getItem("userHistory");
        var t = [];
        if (e) {
            t = this.showLoginBtnMap.HasCache;
            if (t.length) {
                this.account_info_box.visible = true;
                this.start_game.visible = true;
                this.tx_light.visible = true;
                this.handleStorageInfo(e)
            }
        } else {
            t = this.showLoginBtnMap.NoCache
        }
        if (t.length > 0) {
            var i = o[t.length];
            for (var n = 0; n < t.length; n++) {
                t[n].x = i[n];
                t[n].visible = true
            }
        }
        this.btn_loginPhone.visible = t.indexOf(this.btnPhone) >= 0 ? true: false
    };
    g.wxQRCodeLogin = function() {
        if (WxLogin) {
            document.getElementById("login_container_box").style.display = "block";
            var e = new WxLogin({
                self_redirect: false,
                id: "login_container",
                appid: "wx3e3031eb8006f010",
                scope: "snsapi_login",
                redirect_uri: encodeURIComponent(Utils.delParam(["code", "state"])),
                state: "",
                style: "white",
                href: ""
            })
        }
    };
    g.getParams = function() {
        Utils.getUrlParam()
    };
    g.changeView = function() {
        if (Channel) {
            var e = Channel.cfg.cps;
            if (e == 1) {
                this.showLoginBtnMap = {
                    NoCache: [this.btnPhone, this.account_login, this.try_game],
                    HasCache: [this.btnPhone, this.account_login]
                }
            } else if (e === Game.ChannelConstants.vivo || e === 10 || e === 24) {
                this.account_info_box.visible = false;
                this.loginBtnBox.visible = false;
                this.start_game.visible = true;
                this.tx_light.visible = true;
                this.getChildByName("btn_loginPhone").visible = false;
                this.showLoginBtnMap = {
                    NoCache: [],
                    HasCache: []
                }
            } else if (e === Game.ChannelConstants.yiXuan) {
                this.showLoginBtnMap = {
                    NoCache: [this.btnPhone, this.account_login, this.try_game],
                    HasCache: [this.btnPhone, this.account_login]
                }
            }
        }
        this.showLoginBtn()
    };
    g.handleStorageInfo = function(e) {
        r = ChoiceAccount.handleHistoryFun(e);
        if (r.length > 0) {
            this.user_name.text = r[0].name;
            LoginViewApp.userInfo = {
                name: r[0].name,
                pwd: r[0].psw,
                type: r[0].type
            }
        } else {
            this.user_name.text = "";
            LoginViewApp.userInfo = {
                name: "",
                pwd: "",
                type: ""
            }
        }
    };
    g.clickStartGameFun = function() {
        if (!LoginViewApp.userInfo.name) {
            return false
        }
        var e = LoginViewApp.userInfo.name,
        t = LoginViewApp.userInfo.pwd,
        i = LoginViewApp.userInfo.type;
        if (e === "") {
            MsgToast.show(GameConfig.ErrorMsg.clientErrorMsg(10036));
            return false
        }
        if (t === "") {
            MsgToast.show(GameConfig.ErrorMsg.clientErrorMsg(10037));
            return false
        }
        var n = LoginViewApp.getParam({
            UserName: e,
            Password: t,
            Type: i
        });
        Waiting.show();
        switch (i) {
        case 0:
            n.Type = 0;
            Game.loginPosition.positon = Game.loginPosition.loginApp1;
            Request.login(n);
            break;
        case 2:
            s = e;
            a = t;
            n.Type = 1;
            Game.loginPosition.positon = Game.loginPosition.loginApp2;
            Request.login(n);
            break
        }
    };
    g.show = function() {
        if (Channel && Channel.loginBtnArr) {
            if (Channel.loginBtnArr.NoCache && Channel.loginBtnArr.NoCache.length) {
                var e = Channel.loginBtnArr.NoCache;
                this.showLoginBtnMap.NoCache = [];
                for (var t = 0; t < e.length; t++) {
                    var i = this.btnMap[e[t]];
                    if (i) {
                        this.showLoginBtnMap.NoCache.push(i)
                    }
                }
            }
            if (Channel.loginBtnArr.HasCache && Channel.loginBtnArr.HasCache.length) {
                var n = Channel.loginBtnArr.HasCache;
                this.showLoginBtnMap.HasCache = [];
                for (var t = 0; t < n.length; t++) {
                    var i = this.btnMap[n[t]];
                    if (i) {
                        this.showLoginBtnMap.HasCache.push(i)
                    }
                }
            }
        }
        this.changeView();
        if (window.QC) {
            this.setQQBtnPos()
        }
        this.visible = true;
        Game.UIRoot.addChild(this);
        ActionReport.addLog(ActionReport.actionIndex.loginView_Show)
    };
    g.hide = function() {
        this.removeSelf()
    };
    g.display = function() {
        if (window.hideAppCover) {
            window.hideAppCover()
        }
        StartView.hide();
        this.timer.once(300, this,
        function() {
            Sound.playGameCenterBgMusic()
        })
    };
    var p = {
        userInfo: {
            name: "",
            pwd: "",
            type: ""
        },
        getParam: function(e) {
            var t = {
                CpsId: Game.channel.cfg.cps,
                SPName: Game.channel.cfg.name,
                SubCpsId: 0,
                Imei: Game.device.id || "",
                SysVer: Game.device.systemVersion || "",
                PhoneModel: Game.device.model || "",
                LoginVer: Game.loginVer,
                ClientOnly: "",
                Ext: Game.device.Ext || "",
                ChannelId: Game.channel.cfg.LoginChannel,
                InviteParam: Game.channel.FromUserID || "",
                ThirdToken: "",
                ThirdUID: "",
                ThindNick: "",
                HeadImg: ""
            };
            if (Channel && Channel.cfg.name && Channel.cfg.name == "4399") {
                t.SPName = "applogin"
            }
            var i = JSON.parse(JSON.stringify(t));
            for (var n in e) {
                i[n] = e[n]
            }
            return i
        },
        show: function() {
            Resource.load(RES.login,
            function() {
                if (!WinUtils.getSaveUI(t)) {
                    new d
                }
                WinUtils.getSaveUI(t).show()
            })
        },
        hide: function(e) {
            if (WinUtils.getSaveUI(t)) {
                WinUtils.getSaveUI(t).visible = false;
                if (e) {
                    if (WinUtils.getSaveUI(t).displayedInStage) WinUtils.getSaveUI(t).hide()
                }
            }
        },
        experimenterTry: function() {
            if (r && r.length > 0) {
                var e = false;
                for (var t = 0,
                i = r.length; t < i; t++) {
                    if (r[t].type === 2) {
                        e = true;
                        s = r[t].name;
                        a = r[t].psw;
                        break
                    }
                }
                Waiting.show();
                if (e) {
                    var n = LoginViewApp.getParam({
                        UserName: s,
                        Password: a,
                        Type: 1
                    });
                    Game.loginPosition.positon = Game.loginPosition.loginApp2;
                    Request.login(n)
                } else {
                    Request.experimenterGetAccountReq()
                }
            } else {
                Waiting.show();
                Request.experimenterGetAccountReq()
            }
        },
        handleStorageInfo: function(e) {
            WinUtils.getSaveUI(t) && WinUtils.getSaveUI(t).handleStorageInfo(e)
        },
        accountLoginRep: function(e) {
            var t = LoginViewApp.userInfo.name,
            i = LoginViewApp.userInfo.pwd;
            if (t && i) {
                Utils.setLocalStorageFun(t, i, 0)
            }
            ChoiceAccount.hide();
            Waiting.hide();
            StartView.hide();
            GameCenter.loginRep(e)
        },
        experimenterGetAccRes: function(e) {
            s = e.Name;
            a = (new Date).getTime().toString();
            var t = LoginViewApp.getParam({
                UserName: s,
                Password: a,
                Type: 1
            });
            t.ChannelId = 0;
            Game.loginPosition.positon = Game.loginPosition.loginApp2;
            Request.login(t)
        },
        experimenterLoginRep: function(e) {
            ChoiceAccount.hide();
            Waiting.hide();
            LoadingView.show();
            if (s && a) {
                Utils.setLocalStorageFun(s, a, 2)
            }
            GameCenter.loginRep(e)
        },
        webQQLoginSucc: function(e, t, i, n, s) {
            h = e;
            u = t;
            c = i;
            f = n;
            var a = p.getParam({
                SPName: "applogin",
                ThirdUID: h,
                ThirdToken: "qq|" + u,
                ChannelId: 101,
                ThindNick: c,
                HeadImg: f,
                Type: l.THIRD
            });
            Player.setSex(s == "男" ? 1 : 2);
            Request.login(a);
            document.getElementById("qqLoginBtn").style.display = "none"
        }
    };
    return p
} ();
var DragonBall = function() {
    function e() {
        e.super(this);
        this.maxMenuHeight = 400;
        this.listMaxHeight = this.maxMenuHeight - 28;
        this.on(Laya.Event.CLICK, this, this.clickFun);
        this.initList();
        EventBus.on(EventConfig.FISH_SCENE.BUY_DRAGONBALL, this, this.updateNum);
        this.priceShow();
        this.dragonEffMap = {}
    }
    Laya.class(e, "fish.dragonBall", DragonBallUI);
    e.prototype.unDisplay = function() {
        EventBus.off(EventConfig.FISH_SCENE.BUY_DRAGONBALL, this, this.updateNum);
        this.timer.clearAll(this)
    };
    e.prototype.clickFun = function() {
        if (this.isUse) {
            if (this.selectMenu.visible) return;
            this.selectMenu.visible = true;
            this.timer.clear(this, this.hideMenu);
            this.timer.once(5e3, this, this.hideMenu)
        } else {
            if (Package.getDataById(Game.item.DragonBall)) {
                Request.UseSkillReq(Game.item.DragonBall)
            } else {
                if (!Game.dragonBallBuyNotAgain) {
                    this.showBuyDragonDialog()
                } else {
                    Request.DuiHuanLongZhuReq()
                }
            }
        }
    };
    e.prototype.priceShow = function() {
        this.dragonBallNum.visible = Package.getDataById(Game.item.DragonBall);
        this.iconBuy.visible = !this.dragonBallNum.visible
    };
    e.prototype.updateNum = function(e, t) {
        if (e) {
            Request.UseSkillReq(Game.item.DragonBall)
        }
        this.dragonBallNum.value = t;
        Package.updateNumById(Game.item.DragonBall, t);
        this.priceShow()
    };
    e.prototype.initList = function() {
        this.selectList.vScrollBarSkin = "";
        this.selectList.selectEnable = true;
        this.selectList.renderHandler = new Laya.Handler(this, this.renderList);
        var e = GameConfig.Item.getItemInfoById(Game.item.DragonBall);
        var t = e.SkillParamClient3.split(":");
        this.buyNum.value = t[1];
        this.priceHint = GameConfig.ErrorMsg.clientErrorMsg(10180, t[1]);
        var i = e.SkillParamClient1.split("|");
        if (Laya.LocalStorage.getItem("dragonBallDefaultMu")) {
            this.defaultMu = new Number(Laya.LocalStorage.getItem("dragonBallDefaultMu"))
        } else {
            this.defaultMu = e.SkillParamClient2
        }
        this.selectListData = i;
        this.selectList.array = this.selectListData;
        this.selectList.repeatY = this.selectListData.length;
        this.selectList.repeatX = 1;
        if (this.selectListData.length > 5) {
            this.selectList.height = this.listMaxHeight;
            this.selectMenu.height = this.maxMenuHeight
        } else {
            this.selectMenu.height = this.selectListData.length * 80;
            this.selectList.height = this.selectMenu.height - 28
        }
    };
    e.prototype.hideMenu = function() {
        this.selectMenu.visible = false
    };
    e.prototype.getNowUseMu = function() {
        return this.isUse ? this.defaultMu: 1
    };
    e.prototype.onSelect = function(e, t) {
        this.defaultMu = this.selectListData[e];
        Laya.LocalStorage.setItem("dragonBallDefaultMu", this.defaultMu + "");
        this.selectList.refresh();
        var i = FishScene.getCurrentCannon();
        i.updateCannonMul(i.cannonMul);
        this.timer.clear(this, this.hideMenu);
        this.timer.frameOnce(1, this, this.hideMenu);
        ActionEventReport.report(ActionEventReport.actionIndex.ID1091, {
            t: this.defaultMu
        })
    };
    e.prototype.renderList = function(e, t) {
        var i = this.selectListData[t];
        e.getChildByName("mu").text = "x" + i + "倍";
        e.getChildByName("select").visible = i == this.defaultMu;
        e.on(Laya.Event.CLICK, this, this.onSelect, [t])
    };
    e.prototype.update = function() {
        var e = (new Date).getTime();
        var t = this.speed * (e - this.lastTime);
        this.lastTime = e;
        this.maskBg.graphics.clear();
        this.startAngle += t;
        this.startAngle = this.startAngle > 630 ? 630 : this.startAngle;
        this.maskBg.graphics.drawPie(36.5, 36, 33.5, this.startAngle, 630, "#000000");
        if (this.startAngle >= 630) {
            this.timer.clear(this, this.update);
            this.timer.clear(this, this.hideMenu);
            this.isUse = false;
            this.selectMenu.visible = false;
            this.clearDragonBallAnim(Player.getUserId());
            var i = FishScene.getCurrentCannon();
            if (i) i.updateCannonMul(i.cannonMul)
        }
    };
    e.prototype.doTimeAnim = function() {
        this.isUse = true;
        this.clickFun();
        this.startAngle = 270;
        this.maskBg.graphics.drawPie(36.5, 36, 33.5, 270, 630, "#000000");
        this.timer.clear(this, this.update);
        this.speed = 360 / 15 / 1e3;
        this.lastTime = (new Date).getTime();
        this.timer.frameLoop(1, this, this.update);
        this.showDragonBallAnim(FishScene.getCurrentCannon().paoBox, Player.getUserId(), true)
    };
    e.prototype.showDragonBallAnim = function(e, t, i) {
        if (this.dragonEffMap[t]) return;
        var n = Laya.Pool.getItemByClass("dragonBallEff", DragonBallEffUI);
        n.pos(100, 172);
        e.addChildAt(n, 0);
        n.zOrder = 0;
        n.name = "dragonBallEff";
        this.dragonEffMap[t] = n
    };
    e.prototype.clearDragonBallAnim = function(e) {
        if (!this.dragonEffMap[e]) return;
        this.dragonEffMap[e].removeSelf();
        Laya.Pool.recover("dragonBallEff", this.dragonEffMap[e]);
        delete this.dragonEffMap[e]
    };
    e.prototype.showBuyDragonDialog = function() {
        BuyDragonBall.show(this.priceHint)
    };
    return e
} ();
var BuyDragonBall = function() {
    var i = undefined;
    function e() {
        e.super(this);
        this.notAgain.on(Laya.Event.CLICK, this, this.clickNotAgain);
        this.setBtClick(this.btnSubmit);
        EventBus.on(EventConfig.FISH_SCENE.BUY_DRAGONBALL, this, this.buySuccess)
    }
    Laya.class(e, "BuyDragonBall", BuyDragonBallUI, "");
    var t = e.prototype;
    t.buySuccess = function() {
        Game.dragonBallBuyNotAgain = this.notAgain.selected;
        this.close()
    };
    t.onClick = function(e) {
        Request.DuiHuanLongZhuReq()
    };
    t.clickNotAgain = function() {
        this.notAgain.selected = !this.notAgain.selected
    };
    t.initData = function(e) {
        this.msgLabel.text = e
    };
    t.onClosed = function(e) {
        BaseDialog.prototype.onClosed.call(this, e);
        EventBus.off(EventConfig.FISH_SCENE.BUY_DRAGONBALL, this, this.buySuccess);
        i = undefined
    };
    e.isShow = function() {
        return i ? true: false
    };
    e.show = function(t) {
        WinUtils.showDialog(["UIRoot/dragonBall/BuyDragonBall.json"], e,
        function(e) {
            i = e;
            e.initData(t);
            e.popup()
        })
    };
    return e
} ();
var OnlineGift = function() {
    function c() {
        c.super(this)
    }
    Laya.class(c, "OnlineGift", OnlineGiftUI, "");
    var e = c.prototype;
    e.init = function() {
        this.giftList.disScrollBar();
        this.btnVip.clickHandler = new Laya.Handler(this, VipInfo.show);
        this.updateLeftTime(a.getLeftTimeStr());
        EventBus.on(EventConfig.OnlineGift.GetOnlineInfoRep, this, this.updateState);
        EventBus.on(EventConfig.OnlineGift.UpdateGetGiftLeftTime, this, this.updateLeftTime);
        this.giftList.renderHandler = new Laya.Handler(this, this.randerHdr);
        this.btnVip.visible = !Game.miniGameIOS()
    };
    e.updateLeftTime = function(e) {
        this.fc_leftTime.value = e
    };
    e.randerHdr = function(e, t) {
        var i = e.dataSource;
        var n = e.getChildByName("btnGet");
        var s = e.getChildByName("aniGuang");
        if (i.aniGuang.visible) {
            s.visible = true;
            s.play(0, true)
        } else {
            s.visible = false;
            s.stop()
        }
        if (i.aniGuang.visible) {
            n.clickHandler = null;
            n.clickHandler = new Laya.Handler(this,
            function() {
                if (i.aniGuang.visible) {
                    ActionEventReport.report(ActionEventReport.actionIndex.ID1020, {
                        t: i._reportId,
                        v: Player.getVipLevel()
                    });
                    Request.GetOnlineRewardReq(i.id)
                }
                i.aniGuang.visible = false
            })
        }
    };
    e.updateState = function(e) {
        var t = e.info;
        if (!t || !t.length || !c.dataMap) {
            return
        }
        this.timeBox.visible = !f;
        this.hadGetAllTip.visible = f;
        var i = 0,
        n = Player.getVipLevel();
        var s = GameConfig.getVipInfoByLevel(n);
        if (s) {
            i = s.OnlineBuff / 1e4
        }
        var a = [];
        for (var r = 0; r < t.length; r++) {
            var o = t[r];
            if (o) {
                var l = c.dataMap[o.ID];
                l.status = o.Status;
                var h = o.Status == 2 ? true: false;
                var u = o.Status == Game.activityStatus.Can ? true: false;
                l.btnGet = {
                    skin: "resource/common/" + (u ? "btn_huang": "btn_lan") + ".png",
                    gray: u || h ? false: true
                };
                l.zi = {
                    skin: "resource/onlineGift/zi_" + (h ? "yilingqu": u ? "lingqu": "lingqulan") + ".png",
                    gray: u || h ? false: true
                };
                l.aniGuang = {
                    visible: u ? true: false,
                    autoPlay: u ? true: false
                };
                l.mark = {
                    visible: u ? true: false
                };
                l["_add"] = l._num * i;
                l["mul"] = "(+" + l._num * i + ")";
                a.push(l)
            }
        }
        a.sort(function(e, t) {
            if (e.id < t.id) {
                return - 1
            } else if (e.id > t.id) {
                return 1
            } else {
                return 0
            }
        });
        this.giftList.array = a
    };
    e.display = function() {
        Request.GetOnlineInfoReq();
        var e = 0,
        t = Player.getVipLevel();
        var i = GameConfig.getVipInfoByLevel(t);
        if (i) {
            this.fc_add.value = "+" + i.OnlineBuff / 100 + "%";
            this.vipIcon.skin = "resource/icon/vipLevel/vip" + t + ".png"
        }
        var n = [];
        for (var s in c.dataMap) {
            n.push(c.dataMap[s])
        }
        this.giftList.array = n
    };
    e.onClick = function(e) {};
    e.onClosed = function() {
        EventBus.off(EventConfig.OnlineGift.GetOnlineInfoRep, this, this.updateState);
        EventBus.off(EventConfig.OnlineGift.UpdateGetGiftLeftTime, this, this.updateLeftTime)
    };
    var a = function() {
        var t = {
            _leftTime: 0,
            _leftTimeStr: "00:00",
            start: function(e) {
                Laya.timer.clear(t, t.update);
                t._leftTime = e;
                Laya.timer.loop(1e3, t, t.update)
            },
            update: function() {
                var e = Utils.secondToCountDownTime(t._leftTime);
                t._leftTimeStr = e;
                EventBus.send(EventConfig.OnlineGift.UpdateGetGiftLeftTime, [e, t._leftTime]);
                if (t._leftTime <= 0) {
                    Laya.timer.clear(t, t.update);
                    Request.GetOnlineInfoReq();
                    return
                }
                t._leftTime--
            }
        };
        return {
            start: t.start,
            stop: function() {
                Laya.timer.clear(t, t.update);
                t._leftTime = 0
            },
            getLeftTimeStr: function() {
                return t._leftTimeStr
            }
        }
    } ();
    var t = function() {
        var a = null,
        r = null;
        var o = {
            updateLeftTime: function(e, t) {
                if (a) {
                    a.value = e;
                    r.visible = t <= 0 ? true: false;
                    a.visible = !r.visible;
                    if (c.hadGetAllGift()) {
                        r.visible = false;
                        a.visible = false
                    }
                }
                c.leftTime = t
            }
        };
        return {
            init: function(e) {
                var t = GameConfig.getModuleSceneCfg("OnlineGift");
                var i = FishScene.getFishScene().sceneCfg;
                if (e && i && t && t.indexOf(i.SceneId + "") >= 0) {} else {
                    return
                }
                e.visible = true;
                e.once(Laya.Event.UNDISPLAY, this,
                function() {
                    a = null;
                    r = null;
                    e = null;
                    c.leftTime = 0;
                    EventBus.off(EventConfig.OnlineGift.UpdateGetGiftLeftTime, o, o.updateLeftTime)
                });
                a = e.getChildByName("fc_og_LeftTime");
                r = e.getChildByName("og_Box");
                var n = r.y;
                var s = new Laya.TimeLine;
                s.to(r, {
                    y: n + 10
                },
                300, null, 30);
                s.to(r, {
                    y: n
                },
                300, null, 30);
                s.to(r, {
                    y: n - 10
                },
                300, null, 30);
                s.to(r, {
                    y: n
                },
                300, null, 30);
                s.play(0, true);
                r.once(Laya.Event.UNDISPLAY, this,
                function() {
                    s.pause();
                    s.destroy()
                });
                EventBus.on(EventConfig.OnlineGift.UpdateGetGiftLeftTime, o, o.updateLeftTime);
                Request.GetOnlineInfoReq()
            }
        }
    } ();
    var r = {
        _nextGift: 0,
        updateNextGift: function(e) {
            e.sort(function(e, t) {
                if (e.ID < t.ID) {
                    return - 1
                } else if (e.ID > t.ID) {
                    return 1
                } else {
                    return 0
                }
            });
            var t = 1;
            for (var i = 0; i < e.length; i++) {
                var n = e[i];
                if (n.Status == 0 || n.Status == 1) {
                    t = n.ID;
                    break
                }
            }
            r._nextGift = r.getAllGiftById(t)
        },
        initGiftBaseData: function() {
            if (!c.dataMap) {
                var e = 0,
                t = Player.getVipLevel();
                var i = GameConfig.getVipInfoByLevel(t);
                if (i) {
                    e = i.OnlineBuff / 1e4
                }
                var n = {};
                var s = GameConfig.getOnlineCfg();
                for (var a = 0; a < s.length; a++) {
                    var r = s[a];
                    if (r) {
                        var o = r.Reward.split(":");
                        if (o && o.length >= 2) {
                            var l = GameConfig.Item.getItemInfoById(o[0]);
                            var h = Utils.getItemIconBgSkin(l ? l.FrameLevel: 0);
                            var u = {
                                _num: o[1],
                                _add: o[1] * e,
                                _giftId: o[0],
                                _reportId: a + 1,
                                _addMul: e,
                                id: r.ID,
                                kuang: h,
                                allTime: r.OnlineTime,
                                icon: "resource/icon/" + o[0] + ".png",
                                num: {
                                    value: "x" + o[1]
                                },
                                minute: r.OnlineTime / 60 + "分钟",
                                mul: "(+" + o[1] * e + ")",
                                btnGet: {
                                    skin: "resource/common/btn_lan.png",
                                    gray: true
                                },
                                zi: {
                                    skin: "resource/onlineGift/zi_lingqulan.png",
                                    gray: true
                                },
                                aniGuang: {
                                    visible: false
                                },
                                status: 0,
                                mark: {
                                    visible: false
                                }
                            };
                            n[r.ID] = u
                        }
                    }
                }
                c.dataMap = n
            }
            return c.dataMap
        },
        getAllGiftById: function(e) {
            var t = null;
            if (c.dataMap) {
                var i = c.dataMap[e] || c.dataMap[1];
                if (i) {
                    t = i._giftId + ":" + (i._num * 1 + i._add * 1)
                } else {
                    console.error("getAllGiftById id:" + e)
                }
            }
            return t
        }
    };
    var f = false;
    c.show = function() {
        WinUtils.showDialog(RES.onlineGift, c,
        function(e) {
            e.popup()
        })
    };
    c.iconInit = t.init;
    c.GetOnlineRewardRep = function(e) {
        if (e.Tag) {
            var t = r.getAllGiftById(e.Id);
            GetReward.show("恭喜获得", t);
            Request.GetOnlineInfoReq()
        } else {
            MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgId, e.MsgParam))
        }
    };
    c.GetOnlineInfoRep = function(e) {
        if (e.Tag) {
            var t = e.info;
            if (t) {
                var i = 0;
                for (var n = 0; n < t.length; n++) {
                    var s = t[n];
                    if (s) {
                        if (s.Status == 2) {
                            i++
                        }
                    }
                }
                f = t.length == i ? true: false
            }
            EventBus.send(EventConfig.OnlineGift.GetOnlineInfoRep, e);
            r.initGiftBaseData();
            r.updateNextGift(t);
            if (e.LeaveTime > 0) {
                a.start(e.LeaveTime)
            } else {
                a.stop();
                EventBus.send(EventConfig.OnlineGift.UpdateGetGiftLeftTime, ["00:00", 0])
            }
        } else {
            MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgId))
        }
    };
    c.hadGetAllGift = function() {
        return f
    };
    c.getNextGift = function() {
        return r._nextGift
    };
    return c
} ();
var OnlineGiftTip = function() {
    function e() {
        e.super(this)
    }
    Laya.class(e, "OnlineGiftTip", GiftTipUI, "");
    var t = e.prototype;
    t.init = function() {
        EventBus.on(EventConfig.OnlineGift.UpdateGetGiftLeftTime, this, this.updateLeftTime);
        this.btnExit.clickHandler = new Laya.Handler(this,
        function() {
            this.close("exit");
            Request.LeaveGameSvrReq()
        });
        this.updateLeftTime("00:00", OnlineGift.leftTime);
        var e = OnlineGift.getNextGift();
        if (e && e.split(":").length > 0) {
            var t = e.split(":");
            this.fc_num_1.value = "x" + t[1];
            this.gift_icon_1.skin = "resource/icon/" + t[0] + ".png"
        }
        var i = Player.getShowNewSevenDay() && NewPlayerGift.getTomorrowGift().length ? true: false;
        var n = i ? NewPlayerGift.getTomorrowGift() : LoginGift.getTomorrowGift();
        if (n && n.split(":").length > 1) {
            var t = n.split(":");
            this.fc_num_2.value = "x" + t[1];
            this.gift_icon_2.skin = "resource/icon/" + t[0] + ".png"
        }
        this.icon_2.skin = "resource/onlineGift/" + (i ? "img_7rile": "btn_7ri") + ".png"
    };
    t.onClosed = function(e) {
        EventBus.off(EventConfig.OnlineGift.UpdateGetGiftLeftTime, this, this.updateLeftTime);
        if (e == "close") {
            ActionEventReport.report(ActionEventReport.actionIndex.ID1022)
        } else if (e == "exit") {
            ActionEventReport.report(ActionEventReport.actionIndex.ID1023)
        }
    };
    t.updateLeftTime = function(e, t) {
        this.lb_leftTime.text = OnlineGift.hadGetAllGift() ? "明日可领": e + "后领取"
    };
    e.show = function() {
        WinUtils.showDialog(RES.onlineGift, e,
        function(e) {
            ActionEventReport.report(ActionEventReport.actionIndex.ID1021);
            e.popup()
        })
    };
    return e
} ();
var QTTRedPkg = function() {
    var t = null;
    function e() {
        e.super(this)
    }
    Laya.class(e, "QTTRedPkg", QTTRedPkgUI, "");
    var i = e.prototype;
    i.init = function() {
        this.htmlDiv.style.lineHeight = 22;
        this.htmlDiv.style.width = 581;
        this.htmlDiv.style.align = "center";
        var e = false;
        this.selectedIndex = 0;
        this.isClearRes = false;
        this.on(Laya.Event.CLICK, this,
        function(e) {
            if (e.target && e.target.name) {
                var t = e.target.name;
                if (t == "btn_0" || t == "btn_1" || t == "btn_2") {
                    this.changeView(t.split("_")[1])
                } else if (t == "btnGo") {
                    if (this.btnGo.gray) {
                        return
                    }
                    if (!Player.IsAlreadyRedDraw()) {
                        Request.GetInsideRedDrawReq(0, 1);
                        ActionEventReport.report(ActionEventReport.actionIndex.ID1044)
                    } else {
                        Request.GetInsideRedDrawReq(this.currTid, 0)
                    }
                } else if (t == "btnGoMask") {} else if (t == "closeBg") {
                    this.close()
                }
            }
        });
        this.currTid = 1;
        this.btn_0.tid = 1;
        this.btn_1.tid = 2;
        this.btn_2.tid = 3;
        var t = GameConfig.getQTTRedPkgCfg();
        var i = QTTRedPkgT.getCostGold() * 1;
        this.HadGetDataMap = {};
        this.UnGetDataArr = [];
        for (var n = 0; n < t.length; n++) {
            var s = t[n];
            if (s.RedPosID > 0) {
                if (!Player.IsAlreadyRedDraw() && s.RedPosID == 1) {
                    s = t[0]
                }
                if (i * 1 >= s.CostGold * 1) {
                    this.HadGetDataMap[s.RedPosID] = s;
                    e = true
                } else {
                    this.UnGetDataArr.push(s)
                }
            } else {
                if (!Player.IsAlreadyRedDraw()) {
                    if (i * 1 >= s.CostGold * 1) {
                        this.HadGetDataMap[s.RedPosID] = s;
                        e = true
                    }
                }
            }
        }
        this.btnGo.gray = e ? false: true;
        this.changeView(0)
    };
    i.getFitData = function(e) {
        return GameConfig.getCfgRedPositionById(e);
        if (e >= 1 && e <= 3) {
            if (this.HadGetDataMap[e]) {
                return this.HadGetDataMap[e]
            } else {
                return this.getFitData(e - 1)
            }
        } else if (e == 0) {
            return QTTRedPkgT.getCfgDataById(1)
        }
    };
    i.getUnGetData = function(e) {
        var t = GameConfig.getQTTRedPkgCfg();
        var i = QTTRedPkgT.getCfgDataById(3);
        var n = QTTRedPkgT.getCostGold() * 1;
        for (var s = 0; s < t.length; s++) {
            var a = t[s];
            var r = 0;
            if (!Player.IsAlreadyRedDraw()) r = 1;
            if (a.RedPosID > r) {
                if (n * 1 >= a.CostGold * 1) {} else {
                    i = a;
                    break
                }
            }
        }
        return i
    };
    i.changeView = function(e) {
        var t = this["btn_" + this.selectedIndex];
        t.skin = "resource/common/btn_nor.png";
        t.labelColors = "#ffffff";
        var i = this["btn_" + e];
        i.skin = "resource/common/btn_sel.png";
        i.labelColors = "#9e5232";
        this.currTid = i.tid;
        var n = i.tid;
        if (!Player.IsAlreadyRedDraw()) {
            n = 0
        }
        var s = QTTRedPkgT.getCfgDataById(n);
        if (s) {
            var a = s.Reward;
            if (a.length >= 3) {
                for (var r = 0; r < 3; r++) {
                    var o = Utils.fenToYuan(a[r].itemNum, true);
                    this["bg_" + r].skin = "resource/qttRedPkg/img_r_0" + e + ".png";
                    this["lab_" + r].text = o + "元"
                }
            }
        }
        var l = this.getFitData(n);
        var h = this.getUnGetData();
        var u = QTTRedPkgT.getCostGold() * 1;
        this.btnGo.gray = l.CostGold * 1 > u * 1;
        if (l && h) {
            var c = h.CostGold * 1 - u * 1;
            c = c > 0 ? c: 0;
            var f = l.CostGold * 1 - u * 1;
            f = f > 0 ? f: 0;
            this.htmlDiv.visible = n != 3;
            if (this.btnGo.gray) {
                this.btnGo.label = "还需" + Math.ceil(f / FishScene.getCurrentCannon().cannonMul) + "发";
                if (this.htmlDiv.visible) {
                    var d = QTTRedPkgT.getCfgDataById(n + 1);
                    var g = d.CostGold * 1 - u * 1;
                    g = g > 0 ? g: 0;
                    this.htmlDiv.innerHTML = "<font style='fontSize:20' color='#ffffff'>距离</font> <font style='fontSize:20' color='#ff4642'>" + d.Dsc + "</font> <font style='fontSize:20' color='#ffffff'>仅差</font> <font style='fontSize:20' color='#ffe237'>" + Math.ceil(g / FishScene.getCurrentCannon().cannonMul) + "发</font> <font style='fontSize:20' color='#ffffff'>啦!</font>"
                }
            } else {
                this.btnGo.label = "立即抽奖";
                if (h.RedPosID == 3 && c == 0) {
                    if (h.RedPosID == l.RedPosID) {
                        this.htmlDiv.visible = false
                    } else {
                        this.htmlDiv.innerHTML = "<font style='fontSize:20' color='#ffffff'>已达到</font> <font style='fontSize:20' color='#ff4642'>" + h.Dsc + "</font>  <font style='fontSize:20' color='#ffffff'>，要继续抽取</font> <font style='fontSize:20' color='#ff4642'>" + l.Dsc + "</font> <font style='fontSize:20' color='#ffffff'>吗?</font>"
                    }
                } else {
                    this.htmlDiv.innerHTML = "<font style='fontSize:20' color='#ffffff'>距离</font> <font style='fontSize:20' color='#ff4642'>" + h.Dsc + "</font> <font style='fontSize:20' color='#ffffff'>仅差</font> <font style='fontSize:20' color='#ffe237'>" + Math.ceil(c / FishScene.getCurrentCannon().cannonMul) + "发</font> <font style='fontSize:20' color='#ffffff'>啦!要继续抽取</font> <font style='fontSize:20' color='#ff4642'>" + l.Dsc + "</font> <font style='fontSize:20' color='#ffffff'>吗?</font>"
                }
            }
        }
        this.selectedIndex = e
    };
    i.show = function() {};
    i.unDisplay = function() {
        t = null
    };
    return {
        show: function() {
            NewPlayerTaskTip.hide();
            WinUtils.showDialog(RES.qttRedPkg, e,
            function(e) {
                t = e;
                t.popup();
                Waiting.hide()
            })
        },
        hide: function() {
            if (t) {
                t.close()
            }
        },
        getGuidePos: function(e) {
            if (t) {
                return Utils.localToGlobal(t[e])
            } else {
                return false
            }
        }
    }
} ();
var QTTRedPkgT = function() {
    var n = null;
    function e() {
        e.super(this);
        this.isClearRes = false
    }
    var f = [43 / 265, 100 / 265, 122 / 265];
    var d = [43 / 265, 143 / 265, 1];
    Laya.class(e, "QTTRedPkgT", QTTRedPkgTUI, "");
    var t = e.prototype;
    t.init = function() {
        this.btnOpen.clickHandler = new Laya.Handler(this,
        function() {
            if (this.btnOpen.gray && GuidanceRedActivity.guide) {
                return
            }
            QTTRedPkg.show();
            if (!Player.IsAlreadyRedDraw() && !this.btnOpen.gray) {
                EventBus.send(EventConfig.GuidanceRedActivity.GO_NEXT_STEP, 2);
                ActionEventReport.report(ActionEventReport.actionIndex.ID1043)
            }
        });
        this.btnRule.clickHandler = new Laya.Handler(this,
        function() {
            QTTRedPkgRule.show()
        });
        this.CostGold = 0;
        this.RedpackNum = 0;
        this.updateDataSource()
    };
    t.display = function() {
        Laya.stage.on(Laya.Event.def_updateUserMoney, this, this.updateRedpackNum)
    };
    t.unDisplay = function() {
        Laya.stage.off(Laya.Event.def_updateUserMoney, this, this.updateRedpackNum)
    };
    t.updateRedpackNum = function() {
        this.RedpackNum = Player.getHongBaoMoney();
        this.lab_money.text = Utils.fenToYuan(this.RedpackNum, true) + "元"
    };
    t.updateDataSource = function() {
        var e = GameConfig.getQTTRedPkgCfg();
        this.CfgDataMap = {};
        this.maxR = 0;
        for (var t = 0; t < e.length; t++) {
            var i = e[t];
            if (i.RedPosID > 0) {
                var n = t - 1;
                var s = i.Reward[i.Reward.length - 1];
                if (this["lab_" + n]) {
                    var a = Utils.fenToYuan(s.itemNum, true);
                    this["lab_" + n].text = a + "元";
                    this["lab_" + n].pg = a;
                    if (a >= this.maxR) {
                        this.maxR = a
                    }
                }
                this.CfgDataMap[i.RedPosID] = i;
                if (!Player.IsAlreadyRedDraw() && i.RedPosID == 1) {
                    this.CfgDataMap[i.RedPosID] = e[0];
                    this.CfgDataMap[0] = e[0]
                }
            }
        }
    };
    t.updateView = function(e) {
        if (e.CostGold != undefined) {
            var t = 0,
            i = -1,
            n = false;
            var s = this.CfgDataMap[3].CostGold;
            for (var a in this.CfgDataMap) {
                if (a == 0) continue;
                var r = this.CfgDataMap[a];
                if (a * 1 > i) {
                    i = a
                }
                if (e.CostGold * 1 < r.CostGold) {
                    t = r.CostGold - e.CostGold;
                    i = a * 1;
                    break
                } else {
                    n = true;
                    if (!Player.IsAlreadyRedDraw()) {
                        EventBus.send(EventConfig.GuidanceRedActivity.GO_NEXT_STEP, 1)
                    }
                }
            }
            this.btnOpen.gray = n ? false: true;
            this.CostGold = e.CostGold;
            if (i >= 1 && i <= 3) {
                this.img_zi.skin = "resource/qttRedPkg/zi_t_" + (i - 1) + ".png"
            }
            var o = FishScene.getCurrentCannon();
            if (o) {
                var l = o.cannonMul,
                h = Math.ceil(t / l);
                this.fc_mul.value = h
            }
            if (i == 1) {
                var u = f[i - 1] / (this.CfgDataMap[i].CostGold / s);
                this.progress.value = this.CostGold / s * u
            } else {
                var c = this.CfgDataMap[i].CostGold - this.CfgDataMap[i - 1].CostGold;
                this.progress.value = (this.CostGold - this.CfgDataMap[i - 1].CostGold) / c * f[i - 1] + d[i - 2]
            }
        }
        if (e.RedpackNum) {
            this.RedpackNum = e.RedpackNum;
            this.lab_money.text = Utils.fenToYuan(e.RedpackNum, true) + "元"
        }
        for (var a in this.CfgDataMap) {
            if (a == 0) continue;
            var r = this.CfgDataMap[a];
            if (e.CostGold * 1 >= r.CostGold) {
                this["guang" + a].visible = true;
                this["ani" + a].play(0, true)
            } else {
                this["guang" + a].visible = false;
                this["ani" + a].stop();
                this["r_" + (a - 1)].rotation = 0
            }
        }
    };
    t.show = function() {
        this.y = -130;
        var e = FishScene.getFishScene();
        if (e) {
            e.addChild(this);
            Laya.Tween.to(this, {
                y: 0
            },
            200)
        }
    };
    return {
        show: function(t) {
            console.log(t);
            NewPlayerTaskTip.hide();
            WinUtils.showDialog(RES.qttRedPkg, e,
            function(e) {
                n = e;
                n.updateView(t);
                n.show();
                Waiting.hide()
            })
        },
        updateCost: function(e, t) {
            if (n && n.CostGold >= 0) {
                var i = n.CostGold + (t ? e * 2 : e);
                n.updateView({
                    CostGold: i
                })
            }
        },
        getCfgDataById: function(e) {
            if (n && n.CfgDataMap) {
                return n.CfgDataMap[e]
            }
            return 0
        },
        getCostGold: function() {
            if (n && n.CostGold) {
                return n.CostGold
            }
            return 0
        },
        hide: function() {
            if (n) {
                n.close()
            }
        },
        updateData: function(e, t) {
            if (n) {
                if (t) n.updateDataSource();
                if (e.RedCostGold != undefined) e.CostGold = e.RedCostGold;
                n.updateView(e)
            }
        },
        getGuidePos: function(e) {
            if (n) {
                return Utils.localToGlobal(n[e])
            } else {
                return false
            }
        },
        getFcmul: function() {
            if (n) {
                return n.fc_mul.value
            }
        },
        isShow: function() {
            return n && n.displayedInStage
        }
    }
} ();
var QTTRedPkgGet = function() {
    var t = null;
    function i() {
        i.super(this)
    }
    Laya.class(i, "QTTRedPkgGet", QTTRedPkgGetUI, "");
    var e = i.prototype;
    e.init = function(e) {
        this.on(Laya.Event.CLICK, this,
        function(e) {
            if (e.target && e.target.name) {
                var t = e.target.name;
                if (t == "btnGet") {
                    this.close()
                }
            }
        });
        this.updateView(e)
    };
    e.updateView = function(e) {
        var t = e.RedDrawPosId;
        if (t >= 1 && t <= 3) {
            var i = t - 1;
            this.img_t.skin = "resource/qttRedPkg/zi_tt_" + i + ".png";
            this.bg.skin = "resource/qttRedPkg/img_r_0" + i + ".png"
        }
        if (e.Reward.indexOf(":") > 0) {
            var n = e.Reward.split(":");
            var s = Utils.fenToYuan(n[1], true);
            this.lab_money.text = s + "元"
        }
    };
    e.unDisplay = function() {
        t = null
    };
    return {
        show: function(e) {
            NewPlayerTaskTip.hide();
            t = new i;
            t.init(e);
            t.popup();
            if (!Player.IsAlreadyRedDraw()) {
                EventBus.send(EventConfig.GuidanceRedActivity.GO_NEXT_STEP, 4);
                Player.setAlreadyRedDraw()
            }
        },
        hide: function() {
            if (t) {
                t.close()
            }
        },
        getGuidePos: function(e) {
            if (t) {
                return Utils.localToGlobal(t[e])
            } else {
                return false
            }
        }
    }
} ();
var QTTRedPkgRule = function() {
    var e = undefined;
    function t() {
        t.super(this)
    }
    Laya.class(t, "QTTRedPkgRule", QTTRedPkgRuleUI, "");
    var i = t.prototype;
    i.init = function() {
        this.list.vScrollBarSkin = "";
        this.list.selectEnable = true;
        this.list.renderHandler = new Laya.Handler(this, this.renderList);
        var e = [];
        for (var t = 1; t < 4; t++) {
            var i = GameConfig.getCfgRedPositionById(t);
            e.push(i)
        }
        this.list.array = e
    };
    i.renderList = function(e, t) {
        var i = this.list.array[t];
        e.getChildByName("des").text = i.Desc;
        e.getChildByName("nameIcon").skin = "resource/qttRedPkg/zi_sm_" + i.RedPosID + ".png";
        e.getChildByName("redIcon").skin = "resource/qttRedPkg/img_r_" + (i.RedPosID - 1) + ".png"
    };
    i.onClosed = function() {
        BaseDialog.prototype.onClosed.call(this);
        e = undefined
    };
    return {
        show: function() {
            NewPlayerTaskTip.hide();
            e = new t;
            e.init();
            e.popup()
        }
    }
} ();
var QTTMessageBox = function() {
    function e() {
        e.super(this);
        this.setBtClick([this.btnCancel])
    }
    Laya.class(e, "QTTMessageBox", QTTMessageBoxUI);
    var t = e.prototype;
    t.onClick = function(e) {
        Request.LeaveGameSvrReq({
            RedCostClearTag: 0
        })
    };
    var i = {};
    i.show = function() {
        WinUtils.showDialog(RES.qttMessageBox, e,
        function(e) {
            e.isClearRes = false;
            e.popup()
        })
    };
    return i
} ();
var QTTRedPkgAct = function() {
    function e() {
        e.super(this);
        this.setBtClick([this.btnCopy])
    }
    Laya.class(e, "QTTRedPkgAct", QTTRedPkgActUI);
    e.prototype.onClick = function() {
        Utils.setCopyValue("捕鱼大奖赛")
    };
    return e
} ();
var QTTBackHint = function() {
    function e() {
        e.super(this)
    }
    Laya.class(e, "QTTBackHint", QTTBackHintUI);
    var t = {};
    t.show = function() {
        WinUtils.showDialog(["UIRoot/qttRedPkg/QTTBackHint.json"], e,
        function(e) {
            e.popup()
        })
    };
    return t
} ();
var Shuang11yr = function() {
    function e() {
        e.super(this);
        this.setBtClick([this.btnBuy])
    }
    Laya.class(e, "Shuang11yr", QttShuang11yureUI);
    var t = e.prototype;
    t.onClick = function() {
        if (this.btnBuy.gray) return;
        if (this.isDoingPlay) return;
        if (this.data) {
            this.isDoingPlay = true;
            var e = {
                GoodsID: this.data.GoodsId,
                goodsName: this.data.GoodsName,
                price: Utils.fenToYuan(this.data.CostNum)
            };
            ShopMall.buyRecharge(e);
            this.timer.once(6e3, this, this.buyCall)
        }
    };
    t.buyCall = function(e) {
        this.isDoingPlay = e
    };
    t.getDate = function(e) {
        e = e.toString();
        var t = (e + "").substring(4, 6);
        var i = (e + "").substring(6, 8);
        return t + "月" + i + "日"
    };
    t.initData = function(e) {
        this.btnBuy.gray = e.ActType == Game.actType.ActShuang11yr;
        var t = GameConfig.shopCity.getCfgById(324);
        this.data = t;
        var i = t.Detail.split("|");
        for (var n = 0; n < i.length; n++) {
            var s = i[n].split(":");
            var a = GameConfig.Item.getItemInfoById(s[0]);
            console.log(a);
            this["icon" + n].skin = a.skin;
            if (this["label" + n]) this["label" + n].text = a.ItemName + "x" + Utils.numberFormat(s[1]);
            if (this["tianLabel" + n] && s[2]) {
                this["tianLabel" + n].text = s[2] == -1 ? "永久": Math.floor(s[2] / (86400 / 60))
            }
            this["icon" + n].on(Laya.Event.MOUSE_DOWN, this, this.showIconTip, [true, s[0], n]);
            this["icon" + n].on(Laya.Event.MOUSE_UP, this, this.showIconTip, [false, s[0], n]);
            this["icon" + n].on(Laya.Event.MOUSE_OUT, this, this.showIconTip, [false, s[0], n])
        }
        var r = e.Param.split("|");
        this.timeLabel.text = this.getDate(r[0]) + "0点 -" + this.getDate(r[1]) + "23:59:59";
        this.pirceLabel.text = "仅需" + Utils.fenToYuan(t.CostNum) + "元"
    };
    t.showIconTip = function(e, t, i) {
        var n = GameConfig.Item.getItemInfoById(t);
        if (n.Description.length == 0) {
            this.tipImg.visible = false;
            return
        }
        this.tipImg.visible = e;
        if (!e) {
            return
        }
        this.tipImg.x = this["icon" + i].x;
        this.tipImg.y = this["icon" + i].y - this["icon" + i].width / 2;
        this.tipLabel.text = n.Description;
        this.tipImg.height = this.tipLabel.height + 32
    };
    t.unDisplay = function() {
        for (var e = 0; e < 4; e++) {
            this["icon" + e].off(Laya.Event.MOUSE_DOWN, this, this.showIconTip);
            this["icon" + e].off(Laya.Event.MOUSE_UP, this, this.showIconTip);
            this["icon" + e].off(Laya.Event.MOUSE_OUT, this, this.showIconTip)
        }
    };
    return e
} ();
var Shuang11 = function() {
    function i() {
        i.super(this);
        this.setBtClick([this.btnBuy])
    }
    Laya.class(i, "Shuang11", QttShuang11UI);
    var e = i.prototype;
    e.onClick = function() {
        if (this.isDoingPlay) return;
        if (this.data) {
            this.isDoingPlay = true;
            var e = {
                GoodsID: this.data.GoodsId,
                goodsName: this.data.GoodsName,
                price: Utils.fenToYuan(this.data.CostNum)
            };
            ShopMall.buyRecharge(e);
            this.timer.once(6e3, this, this.buyCall)
        }
    };
    e.getDate = function(e) {
        e = e.toString();
        var t = (e + "").substring(4, 6);
        var i = (e + "").substring(6, 8);
        return t + "月" + i + "日"
    };
    e.buyCall = function(e) {
        this.isDoingPlay = e
    };
    e.initData = function(e) {
        var t = GameConfig.shopCity.getCfgById(324);
        this.data = t;
        var i = t.Detail.split("|");
        for (var n = 0; n < i.length; n++) {
            var s = i[n].split(":");
            var a = GameConfig.Item.getItemInfoById(s[0]);
            this["icon" + n].skin = a.skin;
            if (this["label" + n]) this["label" + n].text = a.ItemName + "x" + Utils.numberFormat(s[1]);
            if (this["tianLabel" + n] && s[2]) {
                this["tianLabel" + n].text = s[2] == -1 ? "永久": Math.floor(s[2] / (86400 / 60))
            }
            this["icon" + n].on(Laya.Event.MOUSE_DOWN, this, this.showIconTip, [true, s[0], n]);
            this["icon" + n].on(Laya.Event.MOUSE_UP, this, this.showIconTip, [false, s[0], n]);
            this["icon" + n].on(Laya.Event.MOUSE_OUT, this, this.showIconTip, [false, s[0], n])
        }
        var r = e.Param.split("|");
        this.timeLabel.text = this.getDate(r[0]) + "0点 -" + this.getDate(r[1]) + "23:59:59";
        if (this.pirceLabel) this.pirceLabel.value = Utils.fenToYuan(t.CostNum)
    };
    e.showIconTip = function(e, t, i) {
        var n = GameConfig.Item.getItemInfoById(t);
        if (n.Description.length == 0) {
            this.tipImg.visible = false;
            return
        }
        this.tipImg.visible = e;
        if (!e) {
            return
        }
        this.tipImg.x = this["icon" + i].x;
        this.tipImg.y = this["icon" + i].y - this["icon" + i].width / 2;
        this.tipLabel.text = n.Description;
        this.tipImg.height = this.tipLabel.height + 32
    };
    e.unDisplay = function() {
        for (var e = 0; e < 4; e++) {
            this["icon" + e].off(Laya.Event.MOUSE_DOWN, this, this.showIconTip);
            this["icon" + e].off(Laya.Event.MOUSE_UP, this, this.showIconTip);
            this["icon" + e].off(Laya.Event.MOUSE_OUT, this, this.showIconTip)
        }
    };
    i.show = function(e, t) {
        Request.getActListReq();
        i.contentBox = e;
        i.scaleCall = t
    };
    i.setData = function(t) {
        WinUtils.showView(RES.QTTShuang11, "Shuang11", i.contentBox, i,
        function(e) {
            e.initData(t);
            if (i.scaleCall) i.scaleCall(e)
        }.bind(this))
    };
    return i
} ();
var QTTPhoneCard = function() {
    function e() {
        e.super(this);
        this.setBtClick([this.submit_btn])
    }
    Laya.class(e, "QTTPhoneCard", QTTPhoneCardUI);
    e.prototype.onClick = function() {
        var e = this.phone.text,
        t = this.id_num.text,
        i = this.realName.text,
        n = /(^\d{15}$)|(^\d{18}$)|(^\d{17}(\d|X|x)$)/;
        if (e === "") {
            MsgToast.show(GameConfig.ErrorMsg.clientErrorMsg(10025));
            return false
        }
        if (!Utils.getPhoneReg().test(e)) {
            MsgToast.show(GameConfig.ErrorMsg.clientErrorMsg(10024));
            return false
        }
        if (t === "") {
            MsgToast.show(GameConfig.ErrorMsg.clientErrorMsg(10016));
            return false
        }
        if (!n.test(t)) {
            MsgToast.show(GameConfig.ErrorMsg.clientErrorMsg(10017));
            return false
        }
        if (i === "") {
            MsgToast.show(GameConfig.ErrorMsg.clientErrorMsg(10015));
            return false
        }
        if (this.closeCall) {
            this.closeCall(e, t, i);
            this.close()
        }
    };
    var t = {};
    t.show = function(t) {
        WinUtils.showDialog(["UIRoot/qttRedPkg/QTTPhoneCard.json"], e,
        function(e) {
            e.closeCall = t;
            e.popup()
        })
    };
    return t
} ();
var webSocket = function() {
    var t = Laya.Event;
    var i = Laya.Socket;
    var e = 0;
    var n = new Laya.Byte;
    n.endian = "littleEndian";
    var s = new Laya.Byte;
    s.endian = "littleEndian";
    var a = new Laya.Byte;
    a.endian = "littleEndian";
    function r(e) {
        return e >= 0 && e < 31 ? 1 << e: r[e] || (r[e] = Math.pow(2, e))
    }
    var o = null;
    return function() {
        this._outputByte = null;
        this._dataView = null;
        this.socket = null;
        this._connected = false;
        this.connectedCall = null;
        this.closeCall = null;
        this.sendDataNum = 0;
        this.connected = function() {
            return this._connected
        };
        this.connect = function() {
            this.socket = new i;
            if (Game.server.ip && Game.server.port) {
                var e = Game.server.type + "://" + Game.server.ip + ":" + Game.server.port;
                console.log(e);
                this.socket.binaryType = "arraybuffer";
                this.socket.connectByUrl(e);
                this.socket.on(t.OPEN, this, this.onSocketOpen);
                this.socket.on(t.CLOSE, this, this.onSocketClose);
                this.socket.on(t.MESSAGE, this, this.onMessageReceived);
                this.socket.on(t.ERROR, this, this.onConnectError)
            } else {
                console.log("登录信息拉取失败")
            }
        };
        this.onSocketOpen = function() {
            this._connected = true;
            var e = new Date;
            console.log("已连接   " + e.toLocaleTimeString());
            Game.server.socket = this;
            this.connectedCall && this.connectedCall();
            if (o) {
                o.visible = false
            }
            if (window.FishScene) {
                FishScene.hideSocketCloseTipBox()
            }
        };
        this.writeInt64 = function(e) {
            if (this._outputByte) {
                var t = Math.floor(e / r(32)),
                i = e - t * r(32);
                this._outputByte.writeUint32(i);
                this._outputByte.writeUint32(t)
            }
        };
        this.addHead = function(e) {
            if (this._outputByte) {
                this.sendDataNum++;
                this._outputByte.writeUint32(Player.getUserId());
                if (Player.getSessionId().length > 1) {
                    this._outputByte.writeUint32(Player.getSessionId()[0]);
                    this._outputByte.writeUint32(Player.getSessionId()[1])
                } else {
                    this._outputByte.writeUint32(0);
                    this._outputByte.writeUint32(0)
                }
                this._outputByte.writeUint32(this.sendDataNum);
                this._outputByte.writeUint32(0);
                this._outputByte.writeUint32(0);
                this._outputByte.writeUint32(e)
            }
        };
        this.request = function(e, t) {
            if (this.socket && this.socket.connected && this._connected) {
                if (t instanceof ArrayBuffer) {
                    this._outputByte = null;
                    this._outputByte = this.socket.output;
                    this.addHead(e);
                    this._outputByte.writeArrayBuffer(t);
                    this.socket.flush()
                } else if (typeof t == "object") {
                    this.sendDataNum++;
                    var i = {
                        h: {
                            u: Player.getUserId(),
                            s: Player.getSessionId(),
                            q: this.sendDataNum,
                            c: e
                        },
                        b: t
                    };
                    this.socket.send(JSON.stringify(i))
                }
            } else {
                console.log("socket connected:" + this._connected);
                console.log("request data:" + JSON.stringify(t))
            }
        };
        this.onMessageReceived = function(e) {
            if (typeof e == "string") {
                PB.decodeToJson(JSON.parse(e))
            } else if (e instanceof ArrayBuffer) {
                PB.decode(e)
            }
        };
        this.close = function(e, t) {
            this._connected = false;
            if (e) {
                console.log("主动断开 socket 链接")
            }
            this.onSocketClose(null, e, t)
        };
        this.onSocketClose = function(e, t, i) {
            console.log("active:" + t);
            console.log("onSocketClose");
            Waiting.hide();
            if (Game.server.ip == "192.168.22.203") {
                MsgToast.show("socket Close!")
            }
            Game.server.connecting = false;
            if (this.socket) {
                this.socket.close();
                this.socket = null;
                this.sendDataNum = 0;
                Game.server.socket = null;
                if (o) {
                    o.visible = false
                }
                if (Game.DuplicateLoginSys) {
                    Game.DuplicateLoginSys = false;
                    return
                }
                if (t == undefined) {
                    this.closeCall && this.closeCall()
                }
                FishScene.onSocketClose(t, i);
                Laya.stage.event(Laya.Event.def_onSocketClose)
            }
        };
        this.onConnectError = function(e) {
            console.log("连接服务器失败,重新链接中...");
            LoadingView.remove();
            this.onSocketClose()
        }
    }
} ();
var PB = function() {
    var i = {
        _beat_: false,
        Req_to_Rep: 0,
        reContactCount: 0,
        reContactMaxCount: 5,
        reContact: function() {
            if (Game.state.get() > Game.sceneConfig.sceneID.gameCenter) {
                if (Game.server.socket && Game.server.socket.connected()) {
                    Game.server.socket.close(true, true)
                }
            }
        },
        request: function(e) {
            if (this.Req_to_Rep > 3) {
                this.reContact()
            } else {
                if (Game.server.socket && Game.server.socket.connected()) {
                    Request.HeartBeatReq();
                    this.Req_to_Rep += 1;
                    Laya.timer.once(3e3, this,
                    function() {
                        i.request(2)
                    })
                } else {
                    this.reContact()
                }
            }
        },
        response: function() {
            this.Req_to_Rep = 0
        },
        contactServer: function(e) {
            if (i.reContactCount > i.reContactMaxCount) {
                if (Game.onMiniGame || Game.onBaiDuGame) {
                    var t = MessageBox.show("连接服务器失败,重新进入!");
                    t.closeCall = function() {
                        FishScene.exitToGameCenter()
                    };
                    t.submitCall = function() {
                        FishScene.exitToGameCenter()
                    }
                } else {
                    FishScene.exitToGameCenter()
                }
            } else {
                console.log((new Date).toLocaleTimeString());
                console.log("reContactCount:" + i.reContactCount);
                if (i.reContactCount > 0) {
                    Laya.timer.once(2e3, this,
                    function() {
                        n.contactServer(function() {
                            i.reContactCount = 0;
                            OrderCenter.check();
                            i.request(3);
                            e && e()
                        });
                        i.reContactCount += 1
                    })
                } else {
                    n.contactServer(function() {
                        i.reContactCount = 0;
                        OrderCenter.check();
                        i.request(4);
                        e && e()
                    });
                    i.reContactCount += 1
                }
            }
        }
    };
    var n = {
        heartbeat: i,
        contactServer: function(e) {
            if (Game.server.connecting) {
                return
            }
            Game.server.connecting = true;
            Game.server.socketInNull = true;
            var t = new webSocket;
            t.connectedCall = function() {
                Game.server.socketInNull = false;
                Game.server.socket = t;
                i.reContactCount = 0;
                i.Req_to_Rep = 0;
                e && e()
            };
            t.closeCall = function() {
                if (Game.state.get() == Game.sceneConfig.sceneID.gameCenter) {
                    if (Game.server.socketInNull) {
                        var e = MessageBox.show("请检查网络,请重新链接[2]");
                        e.submitCall = function() {
                            PB.contactServer(function() {})
                        }
                    }
                } else if (Game.state.get() < Game.sceneConfig.sceneID.gameCenter) {
                    if (Game.onMiniGame && wx && wx.showModal) {
                        wx.showModal({
                            title: "提示",
                            content: "链接失败，重新链接[3]",
                            success: function(e) {
                                if (e.confirm) {
                                    if (PB && PB.contactServer) PB.contactServer(function() {
                                        if (Channel && Channel.login) {
                                            Channel.login()
                                        }
                                    })
                                } else if (e.cancel) {
                                    console.log("用户点击取消")
                                }
                            }
                        });
                        return
                    }
                    var e = MessageBox.show("链接失败，重新链接[3]");
                    e.submitCall = function() {
                        PB.contactServer(function() {
                            if (Channel && Channel.login) {
                                Channel.login()
                            }
                        })
                    }
                }
            };
            t.connect()
        },
        encode: function(e, t, i) {
            if (!Game.server.socket) {
                var n = Game.state.get();
                if (n <= Game.sceneConfig.sceneID.gameCenter || n >= Game.sceneConfig.sceneID.scene_JewCity) {
                    PB.contactServer(function() {
                        Game.server.socket.request(PBF.PCK[e], i)
                    })
                }
            } else {
                Game.server.socket.request(PBF.PCK[e], i)
            }
        },
        decodeToJson: function(e) {
            var t = e.h;
            var i = e.b;
            Player.setSessionId(t.s);
            if (t && t.c) {
                var n = PBF.PCK[t.c];
                if (n) {
                    n = n.replace("_ID", "");
                    i = PBF.toObj(n, i);
                    if (Response[n]) {
                        Response[n](i)
                    }
                } else {
                    console.log("没有找到对应的协议体")
                }
            }
        }
    };
    return n
} ();
var Request = function() {
    var t = function() {
        var e = {};
        if (Game.channel.adId) {
            e.adId = Game.channel.adId
        }
        if (Game.channel.sceneId) {
            e.sceneId = Game.channel.sceneId
        }
        return JSON.stringify(e)
    };
    return {
        HeartBeatReq: function() {
            PB.encode("HeartBeatReq_ID", "msg.HeartBeatReq", {})
        },
        registerReq: function(e) {
            e.AdParam = t();
            e.Ip = Game.loginIp;
            if (Channel && Channel.cfg.cps == Game.ChannelConstants.qtt) {}
            PB.encode("RegReq_ID", "msg.RegReq", e)
        },
        BindWeChatReq: function(e) {
            PB.encode("BindWeChatReq_ID", "msg.BindWeChatReq", e)
        },
        BindBaiduReq: function(e) {
            PB.encode("BindBaiduReq_ID", "msg.BindBaiduReq", e)
        },
        BindThirdReq: function(e) {
            PB.encode("BindThirdReq_ID", "msg.BindThirdReq", e)
        },
        login: function(e) {
            if (Game.channel.adId) {
                e.AdParam = Game.channel.adId
            }
            var t = Utils.getUrlParam("InviteParam");
            if (t) {
                e.InviteParam = t
            }
            if (e.InviteParam) {
                e.InviteParam += ""
            }
            if (Game.onMiniGame) {
                e.EnterId = Game.EnterId.MiniGame
            } else if (Game.isApp) {
                e.EnterId = Game.EnterId.Android
            }
            if (Game.channel.sceneId) {
                e.SceneId = Game.channel.sceneId;
                if (Game.onBaiDuGame) {
                    e.SceneId = 0
                }
            }
            e.Ip = Game.loginIp;
            if (Channel && Channel.cfg.cps == Game.ChannelConstants.qtt) {}
            PB.encode("LoginReq_ID", "msg.LoginReq", e)
        },
        experimenterGetAccountReq: function() {
            PB.encode("GetNewNameReq_ID", "msg.GetNewNameReq", {})
        },
        GetUserInfoReq: function() {
            PB.encode("GetUserInfoReq_ID", "msg.GetUserInfoReq", {})
        },
        GetUserOtherInfoReq: function() {
            PB.encode("GetUserOtherInfoReq_ID", "msg.GetUserOtherInfoReq", {})
        },
        GetUserMoneyReq: function() {
            PB.encode("GetUserMoneyReq_ID", "msg.GetUserMoneyReq", {})
        },
        GetRedPointReq: function() {
            PB.encode("GetRedPointInfoReq_ID", "msg.GetRedPointInfoReq", {})
        },
        getUserNickReq: function(e) {
            PB.encode("GetUserNickReq_ID", "msg.GetUserNickReq", {
                UserId: e
            })
        },
        sendPhoneCodeReq: function(e) {
            PB.encode("GetBindPhoneCodeReq_ID", "msg.GetBindPhoneCodeReq", {
                Phone: e
            })
        },
        phoneLoginGetCodeReq: function(e, t) {
            PB.encode("SendPhoneCodeReq_ID", "msg.SendPhoneCodeReq", {
                Phone: e,
                Type: t
            })
        },
        bindPhoneReq: function(e, t) {
            PB.encode("BindPhoneReq_ID", "msg.BindPhoneReq", {
                Phone: e,
                PhoneCode: t
            })
        },
        realNameReq: function(e, t) {
            PB.encode("RealNameReq_ID", "msg.RealNameReq", {
                RealName: e,
                IdCard: t
            })
        },
        getNoticeListReq: function() {
            PB.encode("GetNoticeListReq_ID", "msg.GetNoticeListReq", {})
        },
        getNoticeDetailReq: function(e) {
            PB.encode("GetNoticeDetailReq_ID", "msg.GetNoticeDetailReq", {
                ID: e
            })
        },
        JiuJiJinStatusReq: function() {
            PB.encode("JiuJiJinStatusReq_ID", "msg.JiuJiJinStatusReq", {})
        },
        getAlmsReq: function(e) {
            PB.encode("JiuJiJinGetReq_ID", "msg.JiuJiJinGetReq", {
                IsShared: e
            })
        },
        getUserGoldRankReq: function(e, t, i) {
            PB.encode("GetUserGoldRankReq_ID", "msg.GetUserGoldRankReq", {
                Page: e,
                PageSize: t,
                Type: i
            })
        },
        getMallListReq: function() {
            PB.encode("GetMallListReq_ID", "msg.GetMallListReq", {})
        },
        package: {
            getListReq: function() {
                PB.encode("GetUserBagReq_ID", "msg.GetUserBagReq", {})
            },
            useGoodsReq: function(e, t) {
                PB.encode("OpenItmeReq_ID", "msg.OpenItmeReq", {
                    ItemId: e,
                    ItemNum: t
                })
            },
            giveGoodsReq: function(e, t, i) {
                PB.encode("GiveReq_ID", "msg.GiveReq", {
                    GiveUserId: e,
                    ItemId: t,
                    ItemNum: i
                })
            },
            delPointReq: function(e) {
                PB.encode("DelBagRedPointReq_ID", "msg.DelBagRedPointReq", {
                    ItemId: e
                })
            }
        },
        email: {
            getListReq: function() {
                PB.encode("GetMailListReq_ID", "msg.GetMailListReq", {})
            },
            getDetailReq: function(e) {
                PB.encode("GetMailDetailReq_ID", "msg.GetMailDetailReq", {
                    MailId: e
                })
            },
            receiveReq: function(e) {
                PB.encode("GetMailAttachmentReq_ID", "msg.GetMailAttachmentReq", {
                    MailId: e
                })
            },
            deleteReq: function(e) {
                PB.encode("DelMailReq_ID", "msg.DelMailReq", {
                    MailId: e
                })
            }
        },
        getPrize: {
            getPrizesReq: function() {
                PB.encode("GetDrawCfgReq_ID", "msg.GetDrawCfgReq", {})
            },
            startGetPrizeReq: function() {
                PB.encode("DrawReq_ID", "msg.DrawReq", {})
            },
            receivePrizeReq: function(e) {
                PB.encode("GetDrawReq_ID", "msg.GetDrawReq", {
                    Num: e
                })
            }
        },
        getUserGmkReq: function() {
            PB.encode("GetUserGmkReq_ID", "msg.GetUserGmkReq", {})
        },
        editNameReq: function(e, t, i) {
            PB.encode("EditNameReq_ID", "msg.EditNameReq", {
                Name: e,
                PSW: t,
                RePSW: i
            })
        },
        editNameNoPswReq: function(e) {
            PB.encode("EditNameNoPswReq_ID", "msg.EditNameNoPswReq", {
                Name: e
            })
        },
        ReviseAvatarReq: function(e) {
            console.log("选择头像ID::" + e);
            PB.encode("ChangeAvaterReq_ID", "msg.ChangeAvaterReq", {
                AvaterId: e
            })
        },
        GetShopCityInfoReq: function(e) {
            PB.encode("GetShopCityInfoReq_ID", "msg.GetShopCityInfoReq", {
                CpsId: e
            })
        },
        GetAddressInfoReq: function() {
            PB.encode("GetAddressInfoReq_ID", "msg.GetAddressInfoReq", {})
        },
        getExchangeListReq: function() {
            PB.encode("GetExchangeListReq_ID", "msg.GetExchangeListReq", {})
        },
        exchangeReq: function(e, t, i, n, s, a, r, o, l, h) {
            var u = {
                ExchagneId: e,
                ExchagneType: t,
                Name: i,
                PhoneNum: n,
                Province: s,
                City: a,
                Zone: r,
                Address: o,
                a: l,
                IDCard: h
            };
            console.log(u);
            PB.encode("ExchagneReq_ID", "msg.ExchagneReq", u)
        },
        exchangeRecordReq: function(e, t) {
            PB.encode("GetExchangeLogReq_ID", "msg.GetExchangeLogReq", {
                Page: e,
                ExchangeType: t
            })
        },
        diamondExchageGoodReq: function(e) {
            PB.encode("DiamondExchageGoodReq_ID", "msg.DiamondExchageGoodReq", {
                GoodsId: e
            })
        },
        worldChatReq: function(e, t) {
            PB.encode("ChatReq_ID", "msg.ChatReq", {
                ChatType: e,
                ChatContent: t
            })
        },
        RoomChatReq: function(e, t) {
            PB.encode("RoomChatReq_ID", "msg.RoomChatReq", {
                ChatType: e,
                ChatContent: t
            })
        },
        CustomerServiceChatReq: function(e) {
            PB.encode("CustomerServiceChatReq_ID", "msg.CustomerServiceChatReq", {
                ChatMsg: e
            })
        },
        CustomerServiceChatListReq: function() {
            PB.encode("CustomerServiceChatListReq_ID", "msg.CustomerServiceChatListReq", {})
        },
        UpdateCustomerServiveChatReq: function() {
            PB.encode("UpdateCustomerServiveChatReq_ID", "msg.UpdateCustomerServiveChatReq", {})
        },
        getUserInviteCode: function() {
            PB.encode("GetUserInviteCodeReq_ID", "msg.GetUserInviteCodeReq", {})
        },
        setUserInviteCodeReq: function(e) {
            PB.encode("SetUserInviteCodeReq_ID", "msg.SetUserInviteCodeReq", {
                InviteCode: e * 1
            })
        },
        getWechatInviteInformationReq: function(e) {
            PB.encode("GetWechatInviteInformationReq_ID", "msg.GetWechatInviteInformationReq", {
                Param: e
            })
        },
        getWechatInvitePrizeReq: function(e) {
            PB.encode("GetWechatInvitePrizeReq_ID", "msg.GetWechatInvitePrizeReq", {
                TaskId: e
            })
        },
        GetShopCWReq: function() {
            PB.encode("GetShopCWReq_ID", "msg.GetShopCWReq", {})
        },
        getActListReq: function() {
            PB.encode("GetActListReq_ID", "msg.GetActListReq", {})
        },
        getActInfoReq: function(e) {
            PB.encode("GetActInfoReq_ID", "msg.GetActInfoReq", {
                ActId: e
            })
        },
        getActPrizeReq: function(e, t, i, n) {
            PB.encode("GetActPrizeReq_ID", "msg.GetActPrizeReq", {
                ActId: e,
                Idx: t,
                Param: i,
                Param1: n
            })
        },
        getHYDTInfoReq: function(e) {
            PB.encode("GetHYDTInfoReq_ID", "msg.GetHYDTInfoRep", {
                ActId: e
            })
        },
        getActGoldPigReq: function() {
            PB.encode("GetGoldPigLogReq_ID", "msg.GetGoldPigLogReq", {})
        },
        getGoldPigPrizeReq: function() {
            PB.encode("GetGoldPigPoolReq_ID", "msg.GetGoldPigPoolReq", {})
        },
        getShopCZReq: function() {
            PB.encode("GetShopCZReq_ID", "msg.GetShopCZReq", {})
        },
        GetDrawReq: function(e) {
            PB.encode("GetDrawReq_ID", "msg.GetDrawReq", {
                Num: e
            })
        },
        CreatePayOrderReq: function(e) {
            PB.encode("CreatePayOrderReq_ID", "msg.CreatePayOrderReq", e)
        },
        HttpReq: function(e, t) {
            PB.encode("HttpReq_ID", "msg.HttpReq", {
                ReqId: e * 1,
                ReqUrl: t
            })
        },
        SaveUserExtDataReq: function(e, t, i) {
            PB.encode("SaveUserExtDataReq_ID", "msg.SaveUserExtDataReq", {
                UserSex: e,
                Province: t,
                City: i
            })
        },
        GetAdDrawPrizeReq: function() {
            PB.encode("GetAdDrawPrizeReq_ID", "msg.GetAdDrawPrizeReq", {})
        },
        AddDrawShareTimesReq: function() {
            PB.encode("AddDrawShareTimesReq_ID", "msg.AddDrawShareTimesReq", {})
        },
        getPigShareCfgReq: function() {
            PB.encode("GetPigShareCfgReq_ID", "msg.GetPigShareCfgReq", {})
        },
        getPigSharePrizeReq: function(e) {
            PB.encode("GetPigSharePrizeReq_ID", "msg.GetPigSharePrizeReq", {
                Num: e
            })
        },
        ShakeReq: function() {
            PB.encode("ShakeReq_ID", "msg.ShakeReq", {})
        },
        GetGameSvrCfgReq: function(e) {},
        GetSceneCfgReq: function() {
            PB.encode("GetSceneCfgReq_ID", "msg.GetSceneCfgReq", {})
        },
        SceneReadyReq: function() {
            PB.encode("SceneReadyReq_ID", "msg.SceneReadyReq", {})
        },
        GetTableInfoListReq: function() {
            PB.encode("GetTableInfoListReq_ID", "msg.GetTableInfoListReq", {})
        },
        SelectGameSvrReq: function(e, t) {
            PB.encode("SelectGameSvrReq_ID", "msg.SelectGameSvrReq", {
                SvrId: e * 1,
                ServerName: t || ""
            })
        },
        EnterTableReq: function(e, t, i) {
            ActionReport.addLog(ActionReport.actionIndex.EnterTableReq);
            PB.encode("EnterTableReq_ID", "msg.EnterTableReq", {
                TableId: e * 1 || 0,
                Name: t || "",
                PWS: i || 0
            })
        },
        LeaveGameSvrReq: function(e) {
            if (!e) {
                e = {
                    RedCostClearTag: 1
                }
            }
            PB.encode("LeaveGameSvrReq_ID", "msg.LeaveGameSvrReq", e)
        },
        ChangeCannonMulReq: function(e) {
            PB.encode("ChangeCannonMulReq_ID", "msg.ChangeCannonMulReq", {
                Mul: e
            })
        },
        FireReq: function(e, t, i, n, s, a, r, o, l) {
            var h = {
                Id: e,
                Angle: t,
                Mul: i,
                LockFishId: n,
                IsFrenzy: s ? 1 : 0,
                LongZhuMul: a ? new Number(a) : 1,
                BatteryId: r ? new Number(r) : 0,
                IsAccelerate: o ? 1 : 0,
                IsPhantom: l ? 1 : 0
            };
            PB.encode("FireReq_ID", "msg.FireReq", h)
        },
        CatchFishReq: function(e, t) {
            PB.encode("CatchFishReq_ID", "msg.CatchFishReq", {
                FishId: e,
                BulletId: t
            })
        },
        UseSkillReq: function(e) {
            PB.encode("UseSkillReq_ID", "msg.UseSkillReq", {
                ItemId: e
            })
        },
        UseDantouItemReq: function(e, t) {
            PB.encode("UseDantouItemReq_ID", "msg.UseDantouItemReq", {
                ItemId: e,
                FishId: t
            })
        },
        GetTreasureInfoReq: function() {
            PB.encode("GetTreasureInfoReq_ID", "msg.GetTreasureInfoReq", {})
        },
        GetTreasurePrizeReq: function() {
            PB.encode("GetTreasurePrizeReq_ID", "msg.GetTreasurePrizeReq", {})
        },
        TreasureCancleReq: function() {
            PB.encode("TreasureCancleReq_ID", "msg.TreasureCancleReq", {})
        },
        saveUserVersionReq: function(e) {
            PB.encode("SaveUserVersionReq_ID", "msg.SaveUserVersionReq", {
                UserVersion: e
            })
        },
        GetNewLotteryReq: function() {
            PB.encode("GetNewLotteryReq_ID", "msg.GetNewLotteryReq", {})
        },
        GetSignDataReq: function() {
            PB.encode("GetSignDataReq_ID", "msg.GetSignDataReq", {})
        },
        GetSignPrizeReq: function(e, t) {
            PB.encode("GetSignPrizeReq_ID", "msg.GetSignPrizeReq", {
                PrizeId: e,
                Num: t
            })
        },
        GetUserCannonReq: function() {
            PB.encode("GetUserCannonReq_ID", "msg.GetUserCannonReq", {})
        },
        GetUserWingReq: function() {
            PB.encode("GetUserWingReq_ID", "msg.GetUserWingReq", {})
        },
        UseCannonReq: function(e) {
            PB.encode("UseCannonReq_ID", "msg.UseCannonReq", {
                CannonId: e
            })
        },
        UseWingReq: function(e) {
            PB.encode("UseWingReq_ID", "msg.UseWingReq", {
                WingId: e
            })
        },
        UseCannonSuccessReq: function(e) {
            PB.encode("UseCannonSuccessReq_ID", "msg.UseCannonSuccessReq", {
                CannonId: e
            })
        },
        UseWingSuccessReq: function(e) {
            PB.encode("UseWingSuccessReq_ID", "msg.UseWingSuccessReq", {
                WingId: e
            })
        },
        LoginReadyReq: function() {
            PB.encode("LoginReadyReq_ID", "msg.LoginReadyReq", {})
        },
        GetGiveUserInfoReq: function(e) {
            PB.encode("GetGiveUserInfoReq_ID", "msg.GetGiveUserInfoReq", {
                SearchValue: e
            })
        },
        GetAccountListReq: function(e, t) {
            PB.encode("GetAccountListReq_ID", "msg.GetAccountListReq", {
                Phone: e,
                PhoneCode: t
            })
        },
        GetUserPropReq: function(e) {
            PB.encode("GetUserPropReq_ID", "msg.GetUserPropReq", {
                Key: e
            })
        },
        GetVipSceneTimeReq: function() {
            PB.encode("GetVipSceneTimeReq_ID", "msg.GetVipSceneTimeReq", {})
        },
        GetSuperMatchRankReq: function() {
            PB.encode("GetSuperMatchRankReq_ID", "msg.GetSuperMatchRankReq", {})
        },
        ShareReq: function() {
            PB.encode("ShareReq_ID", "msg.ShareReq", {})
        },
        GetCashRedReq: function() {
            PB.encode("GetCashRedReq_ID", "msg.GetCashRedReq", {})
        },
        GetCashRedPrizeReq: function(e) {
            PB.encode("GetCashRedPrizeReq_ID", "msg.GetCashRedPrizeReq", {
                Id: e * 1
            })
        },
        GetCarveUpDataReq: function() {
            PB.encode("GetCarveUpDataReq_ID", "msg.GetCarveUpDataReq", {})
        },
        RedeemCodeReq: function(e, t) {
            PB.encode("RedeemCodeReq_ID", "msg.RedeemCodeReq", {
                cdkey: e,
                activityId: t || 0
            })
        },
        GetMatchRankReq: function(e) {
            PB.encode("GetMatchRankReq_ID", "msg.GetMatchRankReq", {
                MatchType: e
            })
        },
        GetFishExchangeListReq: function() {
            PB.encode("GetFishExchangeListReq_ID", "msg.GetFishExchangeListReq", {})
        },
        SetAddressInfoReq: function(e) {
            PB.encode("SetAddressInfoReq_ID", "msg.SetAddressInfoReq", {
                Name: e.Name,
                PhoneNum: e.PhoneNum,
                Province: e.Province,
                City: e.City,
                Zone: e.Zone,
                Address: e.Address
            })
        },
        FishExchangeReq: function(e, t) {
            PB.encode("FishExchangeReq_ID", "msg.FishExchangeReq", {
                ExchagneId: e,
                Phone: t + ""
            })
        },
        GetFishExchangeLogReq: function(e, t) {
            PB.encode("GetFishExchangeLogReq_ID", "msg.GetFishExchangeLogReq", {
                Page: e,
                PageSize: t
            })
        },
        GetTreasureBoxLogReq: function() {
            PB.encode("GetTreasureBoxLogReq_ID", "msg.GetTreasureBoxLogReq", {})
        },
        GewCityStartInfoReq: function() {
            PB.encode("GewCityStartInfoReq_ID", "msg.GewCityStartInfoReq", {})
        },
        GewCityBeginGameReq: function(e) {
            PB.encode("GewCityBeginGameReq_ID", "msg.GewCityBeginGameReq", {
                BetNum: e * 1
            })
        },
        GewCityRemoveLogReq: function() {
            PB.encode("GewCityRemoveLogReq_ID", "msg.GewCityRemoveLogReq", {})
        },
        GewCityFinalRewardListReq: function() {
            PB.encode("GewCityFinalRewardListReq_ID", "msg.GewCityFinalRewardListReq", {})
        },
        GewCityFinalRewardGetReq: function() {
            PB.encode("GewCityFinalRewardGetReq_ID", "msg.GewCityFinalRewardGetReq", {})
        },
        GewCityEndGameReq: function(e) {
            PB.encode("GewCityEndGameReq_ID", "msg.GewCityEndGameReq", {
                RoundID: e
            })
        },
        SendRedBagReq: function(e, t, i) {
            PB.encode("SendRedBagReq_ID", "msg.SendRedBagReq", {
                Total: e,
                BagNum: t,
                Slogan: i
            })
        },
        GetRedBagReq: function(e) {
            PB.encode("GetRedBagReq_ID", "msg.GetRedBagReq", {
                RedBagID: e
            })
        },
        FriendsListReq: function() {
            PB.encode("FriendsListReq_ID", "msg.FriendsListReq", {})
        },
        ApplyFriendsListReq: function() {
            PB.encode("ApplyFriendsListReq_ID", "msg.ApplyFriendsListReq", {})
        },
        BlackFriendsListReq: function() {
            PB.encode("BlackFriendsListReq_ID", "msg.BlackFriendsListReq", {})
        },
        FriendsActionReq: function(e, t) {
            PB.encode("FriendsActionReq_ID", "msg.FriendsActionReq", {
                Type: e,
                TargetUserID: t * 1
            })
        },
        ChatPersonalReq: function(e, t) {
            PB.encode("ChatPersonalReq_ID", "msg.ChatPersonalReq", {
                userID: e,
                ChatMsg: t
            })
        },
        SceneFaceReq: function(e, t) {
            PB.encode("SceneFaceReq_ID", "msg.SceneFaceReq", {
                FaceID: e,
                ReceiveID: t
            })
        },
        CheckFriendReq: function(e) {
            PB.encode("CheckFriendReq_ID", "msg.CheckFriendReq", {
                TargetUserID: e
            })
        },
        DaNaoLongGongBeginGameReq: function(e) {
            PB.encode("DaNaoLongGongBeginGameReq_ID", "msg.DaNaoLongGongBeginGameReq", {
                BetNum: e
            })
        },
        DaNaoLongGongStartInfoReq: function() {
            PB.encode("DaNaoLongGongStartInfoReq_ID", "msg.DaNaoLongGongStartInfoReq", {})
        },
        DaNaoLongGongEndGameReq: function(e) {
            PB.encode("DaNaoLongGongEndGameReq_ID", "msg.DaNaoLongGongEndGameReq", {
                RoundID: e
            })
        },
        DaNaoLongGongGameFinishReq: function() {
            PB.encode("DaNaoLongGongGameFinishReq_ID", "msg.DaNaoLongGongGameFinishReq", {})
        },
        DaNaoLongGongRemoveLogReq: function() {
            PB.encode("DaNaoLongGongRemoveLogReq_ID", "msg.DaNaoLongGongRemoveLogReq", {})
        },
        BigRichStartInfoReq: function() {
            PB.encode("GetZillionaireStartInfoReq_ID", "msg.GetZillionaireStartInfoReq", {})
        },
        BigRichThrowSieveReq: function(e) {
            PB.encode("ZillionaireThrowReq_ID", "msg.ZillionaireThrowReq", {
                BetNum: e * 1
            })
        },
        BigRichRankRewardListReq: function() {
            PB.encode("GetZillionaireRankReq_ID", "msg.GetZillionaireRankReq", {})
        },
        BigRichEndGameReq: function() {
            PB.encode("GetZillionairePrizeReq_ID", "msg.GetZillionairePrizeReq", {})
        },
        BigRichShareSuccessReq: function() {
            PB.encode("ZillionaireShareSuccessReq_ID", "msg.ZillionaireShareSuccessReq", {})
        },
        GoldChangeReq: function() {
            PB.encode("GoldChangeReq_ID", "msg.GoldChangeReq", {})
        },
        AchTaskListReq: function() {
            PB.encode("AchTaskListReq_ID", "", {})
        },
        AchTaskFinishReq: function(e) {
            PB.encode("AchTaskFinishReq_ID", "", {
                Type: e
            })
        },
        AchTaskGetPrizeReq: function(e) {
            PB.encode("AchTaskGetPrizeReq_ID", "", {
                TaskId: e
            })
        },
        AchTaskActivePrizeReq: function(e) {
            PB.encode("AchTaskActivePrizeReq_ID", "", {
                Type: e
            })
        },
        BankViewVideoReq: function() {
            PB.encode("BankViewVideoReq_ID", "", {})
        },
        GetBankPrizeReq: function() {
            PB.encode("GetBankPrizeReq_ID", "", {})
        },
        GetDTDBBuffProReq: function() {
            PB.encode("GetDTDBBuffProReq_ID", "", {})
        },
        SendDTDBBuffOver: function() {
            PB.encode("SendDTDBBuffOver_ID", "", {})
        },
        GetDTDBNoticeReq: function() {
            PB.encode("GetDTDBNoticeReq_ID", "", {})
        },
        GetDTDBResultReq: function() {
            PB.encode("GetDTDBResultReq_ID", "", {})
        },
        GetDTDBDataReq: function(e) {
            PB.encode("GetDTDBDataReq_ID", "", {
                sceneId: e * 1
            })
        },
        YouYiSaiCreateRoomReq: function(e, t, i, n, s) {
            console.log("创建房间");
            PB.encode("YouYiSaiCreateRoomReq_ID", "msg.YouYiSaiCreateRoomReq", {
                RewardItemID: e,
                PlayerNum: t,
                PlayMinute: i,
                TargetScore: n,
                RewardNum: s
            })
        },
        YouYiSaiSearchRoomReq: function(e) {
            console.log("搜索房间:" + e);
            PB.encode("YouYiSaiSearchRoomReq_ID", "msg.YouYiSaiSearchRoomReq", {
                RoomID: e
            })
        },
        YouYiSaiEnterRoomReq: function(e) {
            PB.encode("YouYiSaiEnterRoomReq_ID", "msg.YouYiSaiEnterRoomReq", {
                RoomID: e
            })
        },
        YouYiSaiExitRoomReq: function(e) {
            PB.encode("YouYiSaiExitRoomReq_ID", "msg.YouYiSaiExitRoomReq", {
                RoomID: e
            })
        },
        YouYiSaiStartGameReq: function(e) {
            PB.encode("YouYiSaiStartGameReq_ID", "msg.YouYiSaiStartGameReq", {
                RoomID: e
            })
        },
        BindMeizhuReq: function(e, t) {
            PB.encode("BindMeizhuReq_ID", "msg.BindMeizhuReq", {
                Uid: e,
                ChannelId: t
            })
        },
        WorldBossCollisionReq: function(e) {
            PB.encode("WorldBossCollisionReq_ID", "msg.WorldBossCollisionReq", {
                BulletId: e
            })
        },
        WorldBossResultReq: function() {
            PB.encode("WorldBossResultReq_ID", "msg.WorldBossResultReq", {})
        },
        WorldBossCfgReq: function() {
            PB.encode("WorldBossCfgReq_ID", "msg.WorldBossCfgReq", {})
        },
        GetMyFishFieldReq: function() {
            PB.encode("GetMyFishFieldReq_ID", "msg.GetMyFishFieldReq", {})
        },
        GetUserStarRankReq: function(e) {
            PB.encode("GetUserStarRankReq_ID", "msg.GetUserStarRankReq", e)
        },
        GetFishGoldRankReq: function(e) {
            PB.encode("GetFishGoldRankReq_ID", "msg.GetFishGoldRankReq", e)
        },
        DuiHuanLongZhuReq: function() {
            PB.encode("DuiHuanLongZhuReq_ID", "msg.DuiHuanLongZhuReq", {
                Num: 1
            })
        },
        ReportNewPlayerTaskGetRewardReq: function(e) {
            console.log("ReportNewPlayerTaskGetRewardReq" + e);
            PB.encode("ReportNewPlayerTaskGetRewardReq_ID", "msg.ReportNewPlayerTaskGetRewardReq", {
                TaskId: e
            })
        },
        GetNewSevenDayRewardReq: function(e) {
            PB.encode("GetNewSevenDayRewardReq_ID", "msg.GetNewSevenDayRewardReq", {
                Day: e
            })
        },
        KanJiaLiBaoInfoReq: function() {
            PB.encode("KanJiaLiBaoInfoReq_ID", "msg.KanJiaLiBaoInfoReq", {})
        },
        InviteInfoReq: function(e) {
            PB.encode("InviteInfoReq_ID", "msg.InviteInfoReq", e)
        },
        JinBiBaoXiangGetReq: function(e) {
            PB.encode("JinBiBaoXiangGetReq_ID", "msg.JinBiBaoXiangGetReq", e)
        },
        WXSubscribeReq: function(e, t, i) {
            if (!t) {
                t = 1
            }
            var n = {
                Sub: e,
                SubType: t
            };
            if (!i) {
                n.SubTmpId = i
            }
            PB.encode("WXSubscribeReq_ID", "msg.WXSubscribeReq", n)
        },
        GetOnlineInfoReq: function() {
            PB.encode("GetOnlineInfoReq_ID", "msg.GetOnlineInfoReq", {})
        },
        GetOnlineRewardReq: function(e) {
            PB.encode("GetOnlineRewardReq_ID", "msg.GetOnlineRewardReq", {
                ID: e
            })
        },
        MatchChallengeShareReq: function(e, t) {
            PB.encode("MatchChallengeShareReq_ID", "msg.MatchChallengeShareReq", {
                SceneId: e,
                ShareType: t
            })
        },
        SendMatchShareReq: function(e) {
            PB.encode("SendMatchShareReq_ID", "msg.SendMatchShareReq", e)
        },
        GetMatchSettlementReq: function() {
            PB.encode("GetMatchSettlementReq_ID", "msg.GetMatchSettlementReq", {})
        },
        GetInsideRedDrawReq: function(e, t) {
            PB.encode("GetInsideRedDrawReq_ID", "msg.GetInsideRedDrawReq", {
                RedDrawPosId: e,
                IsNewPlayerLead: t
            })
        },
        WeekCardInfoReq: function() {
            PB.encode("WeekCardInfoReq_ID", "msg.WeekCardInfoReq", {})
        },
        WeekCardReceiveReq: function() {
            PB.encode("WeekCardReceiveReq_ID", "msg.WeekCardReceiveReq", {})
        },
        SevenDayChargeGetInfoReq: function() {
            PB.encode("SevenDayChargeGetInfoReq_ID", "msg.SevenDayChargeGetInfoReq", {})
        },
        GetNewPlayerMissileGoldReq: function(e) {
            PB.encode("GetNewPlayerMissileGoldReq_ID", "msg.GetNewPlayerMissileGoldReq", {})
        },
        GetLoginConfigReq: function() {
            PB.encode("GetLoginConfigReq_ID", "msg.GetLoginConfigReq_ID", {
                CpsID: Game.channel.cfg.cps
            })
        },
        ReportSkillEndReq: function(e) {
            PB.encode("ReportSkillEndReq_ID", "msg.ReportSkillEndReq_ID", {
                SkillId: e
            })
        }
    }
} ();
var Response = function() {
    Game.temp_payRespToGetUserInfo = false;
    return {
        HeartBeatRep: function(e) {
            PB.heartbeat.response(e)
        },
        RegRep: function(e) {
            EstablishAccount.registerRepSuccess(e)
        },
        LoginRep: function(e) {
            Waiting.hide();
            if (e.Tag && e.Tag === 1) {
                if (e.RegCpsId) {
                    Game.channel.regCPSId = e.RegCpsId * 1
                }
                if (e.ShareCpsId) {
                    Game.channel.ShareCpsId = e.ShareCpsId
                }
                if (e.WechatSessionID) {
                    myStorage.setItem("wx_session_key", e.WechatSessionID)
                }
                if (e.UserId) {
                    Player.setUserId(e.UserId);
                    Request.HttpReq(1e5, "/share/bianfeng/config?user_id=" + e.UserId + "&os=mini")
                }
                if (e.Nick) {
                    Player.setNick(e.Nick)
                }
                if (Game.channel.sharescene) {
                    Game.shareClick();
                    Game.channel.sharescene = undefined
                }
                if (e.isNew) {
                    ActionReport.report(ActionReport.actionIndex.loginGameSvr);
                    if (Game.channel.adId) {
                        Game.shareNew()
                    }
                }
                Player.setNewPlayer(e.isNew);
                if (Channel && Channel.updateRole) {
                    Channel.updateRole()
                }
                if (Channel && Channel.cfg.cps == Game.ChannelConstants.qtt) {}
                switch (e.LoginType) {
                case 0:
                    if (Game.loginPosition.positon === Game.loginPosition.loginApp1) {
                        LoginViewApp.accountLoginRep(e)
                    } else if (Game.loginPosition.positon === Game.loginPosition.loginApp3) {
                        ChoiceAccount.accountLoginRep(e)
                    }
                    break;
                case 1:
                    Game.minGameShareGame.roomParam = {};
                    if (Game.loginPosition.positon === Game.loginPosition.loginApp2) {
                        LoginViewApp.experimenterLoginRep(e, true)
                    } else if (Game.loginPosition.positon === Game.loginPosition.loginApp4) {
                        ChoiceAccount.experimenterLogin(e)
                    } else {
                        LoginViewApp.experimenterLoginRep(e)
                    }
                    break;
                case 2:
                    Game.minGameShareGame.roomParam = {};
                    LoginPhone.loginRes(e, true);
                case 4:
                    Game.minGameShareGame.roomParam = {};
                    RoleChoice.loginRes(e);
                    break;
                default:
                    LoginPhone.hide();
                    RoleChoice.hide();
                    GameCenter.loginRep(e);
                    break
                }
                if (Channel && Channel.loginSuccess) {
                    Channel.loginSuccess(e)
                }
                PB.heartbeat.request(1);
                if (window.QC && QC.Login) {
                    var t = document.getElementById("qqLoginBtn");
                    if (t) {
                        t.style.display = "none"
                    }
                }
            } else if (e.MsgId) {
                if (e.MsgId == 40) {
                    if (Channel && Channel.login) {
                        myStorage.removeItem("wx_session_key");
                        if (Game.server.socket && Game.server.socket.connected()) {
                            Game.server.socket.close(true)
                        }
                        Laya.timer.once(1e3, this,
                        function() {
                            Channel.login()
                        })
                    }
                } else {
                    if (Game.onMiniGame) {
                        if (wx && wx.showModal) {
                            wx.showModal({
                                title: "提示",
                                content: GameConfig.ErrorMsg.getMsgById(e.MsgId, e.MsgParam)
                            })
                        }
                    } else {
                        var i = MessageBox.show(GameConfig.ErrorMsg.getMsgById(e.MsgId, e.MsgParam));
                        i.submitCall = function() {
                            window.location.href = Utils.delParam(["code", "state"])
                        };
                        i.closeCall = i.submitCall
                    }
                    if (Game.server.socket && Game.server.socket.connected()) {
                        Game.server.socket.close(true)
                    }
                    Waiting.hide()
                }
            }
        },
        GetUserInfoRep: function(e) {
            if (Game.debug) {
                console.log("------------GetUserInfoRep--------------");
                console.log(e)
            }
            if (e) {
                Player.setUserInfo(e);
                if (Game.temp_payRespToGetUserInfo) {
                    Game.temp_payRespToGetUserInfo = false;
                    return
                }
                if (Game.channel.cfg.cps === 13 && Channel && Channel.reportRoleInfo) {
                    Channel.reportRoleInfo(e.UserId)
                }
            } else {}
            GameCenter.updateFreeLotteryRedPoint()
        },
        GetUserOtherInfoRep: function(e) {
            if (e) {
                Player.setUserOtherInfo(e)
            }
            if (e.ShakeTimes) {
                Player.setShakeTimes(e.ShakeTimes)
            } else {
                Player.setShakeTimes(0)
            }
        },
        GetUserMoneyRep: function(e) {
            if (e.Money1 > 10) {
                Alms.hide()
            }
            Player.setGold(e.Money1);
            Player.setJiangJuan(e.Money2);
            Player.setJiFen(e.Money3);
            Player.setDragon(e.Money6);
            Player.setHongBao(e.Money10);
            if (Game.state.get() > Game.sceneConfig.sceneID.gameCenter) {
                FishScene && FishScene.updateCurrentJiangQuan(e.Money2)
            }
            Laya.stage.event(Laya.Event.def_updateUserMoney)
        },
        GetRedPointInfoRep: function(e) {
            if (e) {
                Player.setActRed(e.actRed);
                GameCenter.updateRedPoint(e.actRed, e.bagRed, e.mailRed, e.inviteRed, e.SignRed, e.AchTask)
            }
        },
        GetUserNickRep: function(e) {},
        GetNewNameRep: function(e) {
            if (e.Name !== "") {
                LoginViewApp.experimenterGetAccRes(e)
            } else if (e.MsgId) {
                MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgId))
            }
        },
        GetBindPhoneCodeRep: function(e) {
            if (e) {
                PhoneBinding.getCodeRes(e)
            }
        },
        BindPhoneRep: function(e) {
            if (e) {
                PhoneBinding.bindingPhoneRes(e)
            }
        },
        SendPhoneCodeRep: function(e) {
            LoginPhone.getCodeRes(e)
        },
        RealNameRep: function(e) {
            Certificate.realNameRep(e)
        },
        GetNoticeListRep: function(e) {
            Announcement.getListRes(e)
        },
        GetNoticeDetailRep: function(e) {
            Announcement.getDetailRes(e)
        },
        JiuJiJinStatusRep: function(e) {
            Player.setAlms(e.RemainTimes);
            AlmsShare.JiuJiJinStatusRep(e);
            AlmsShare2.JiuJiJinStatusRep(e)
        },
        JiuJiJinGetRep: function(e) {
            Alms.receiveRes(e)
        },
        GetUserGoldRankRep: function(e) {},
        GetUserBagRep: function(e) {
            Package.setPkgData(e);
            PackageGift2.getListRep(e);
            yysRoom.refreshDT();
            GuildNet.UpdateUserPkg(e)
        },
        GiveRep: function(e) {
            PackageGift.giveGoodsRes(e)
        },
        OpenItmeRep: function(e) {
            Package.useGoodsRes(e)
        },
        DelBagRedPointRep: function(e) {
            Package.delPointFun(e)
        },
        GetMailListRep: function(e) {
            Email.getItemFun(e)
        },
        GetMailDetailRep: function(e) {
            Email.getEmailDetailFun(e)
        },
        DelMailRep: function(e) {
            Email.deleteRes(e)
        },
        GetMailAttachmentRep: function(e) {
            Email.receiveRes(e)
        },
        GetDrawCfgRep: function(e) {
            LuckyTurntable.getPrizeFun(e)
        },
        DrawRep: function(e) {
            LuckyTurntable.startGetPrizeFun(e)
        },
        GetDrawRep: function(e) {
            if (e.Tag === 1) {
                Player.setDrawShareTimes(e.ShareTimes);
                Player.setDrawTimes(e.DrawTimes);
                LuckyTurntable.updateDrawTimes()
            } else {
                MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgId))
            }
        },
        EditNameRep: function(e) {
            SetNick.editNickRes(e)
        },
        EditNameNoPswRep: function(e) {
            SetNick.editNickRes(e)
        },
        GetUserGmkRep: function(e) {
            if (e.Num) {
                SetNick.show()
            } else {
                MsgToast.show(GameConfig.ErrorMsg.clientErrorMsg(10013))
            }
        },
        ChangeAvaterRep: function(e) {
            if (e.Tag) {
                SetAvatar.hide();
                Player.setAvatarUrl(e.AvaterId);
                GameCenter.updateUi();
                PersonalCenter.updateUserInfo()
            }
            if (e.MsgId) {
                MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgId))
            }
        },
        GetMallListRep: function(e) {
            GameConfig.shopMall(e.List);
            GetFirstReward.GetMallListRep()
        },
        GetShopCityInfoRep: function(e) {
            ShopMall.GetShopCityInfoRep(e)
        },
        GetAddressInfoRep: function(e) {
            MonsterAdress.GetAddressInfoRep(e)
        },
        GetExchangeListRep: function(e) {
            if (e) {
                if (Game.debug) console.log(e);
                GameConfig.exchange.setLotteryList(e.LotteryList);
                GameConfig.exchange.setScoreList(e.ScoreList);
                GameConfig.exchange.setRedList(e.RedDrawList);
                ExChangeJuan.updateDataList();
                ExChangeJuan.setIsRedDrawNeedCheck(e.IsRedDrawNeedCheck)
            }
        },
        ExchagneRep: function(e) {
            if (e.Tag) {
                Address.hide();
                PhoneRecharge.hide();
                Request.package.getListReq();
                Request.GetUserMoneyReq();
                Request.getExchangeListReq();
                if (SevenDayRecharge.isShow) {
                    if (e.Item) {
                        GetReward.show("恭喜获得", [e.Item])
                    }
                    var t = GameConfig.Item.getItemInfoById(e.Item.ItemId);
                    if (t && t.ItemName.indexOf("京东卡") > -1) {
                        ActionEventReport.report(ActionEventReport.actionIndex.ID1032, {})
                    }
                    if (t && t.ItemName.indexOf("万金币") > -1) {
                        ActionEventReport.report(ActionEventReport.actionIndex.ID1034, {})
                    }
                    Request.SevenDayChargeGetInfoReq()
                }
            } else {
                NoviceGuidanceOnMinGame.hide()
            }
            if (e.MsgId) {
                MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgId, e.MsgParam))
            }
        },
        GetExchangeLogRep: function(e) {
            if (e.List) {
                ExchangeRecord.updateList(e)
            }
        },
        DiamondExchageGoodRep: function(e) {
            if (e.Tag) {
                Request.package.getListReq();
                Request.GetUserMoneyReq()
            }
            if (e.MsgId) {
                MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgId))
            }
        },
        ChatRep: function(e) {
            if (e.Tag) {
                ChatNotice.show(e)
            } else if (e.MsgId) {
                MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgId))
            }
            HornInput.ChatRep(e)
        },
        RoomChatRep: function(e) {
            if (e.Tag) {
                ChatSystem.RoomChatRep(e)
            } else if (e.MsgId) {
                MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgId))
            }
        },
        CustomerServiceChatRep: function(e) {
            ChatSystem.CustomerServiceChatRep(e)
        },
        UpdateCustomerServiveChatRep: function(e) {},
        BrowserSendMessageToClientRep: function(e) {
            ChatSystem.BrowserSendMessageToClientRep(e)
        },
        CustomerServiceChatListRep: function(e) {
            ChatSystem.CustomerServiceChatListRep(e);
            EventBus.send(EventConfig.GAME_CENTER.KEFU_GIFT, e.FirstChatRewardStatus == 0)
        },
        ReportNormalNotice: function(e) {
            if (e.MsgId) {
                Notice.show(e)
            }
        },
        GetUserInviteCodeRep: function(e) {
            if (e.MsgId) {
                MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgId))
            }
        },
        SetUserInviteCodeRep: function(e) {
            if (e.Tag) {
                Request.package.getListReq();
                Request.GetUserMoneyReq()
            }
            if (e.MsgId) {
                MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgId))
            }
        },
        GetWechatInviteInformationRep: function(e) {
            if (e.Tag) {
                if (e.Param === "invitation") {
                    InvitationWX.upDateList(e)
                }
            }
        },
        GetWechatInvitePrizeRep: function(e) {
            if (e.Tag) {
                GetReward.show("邀请奖励", e.PrizeItem);
                Request.getWechatInviteInformationReq("invitation")
            }
        },
        ReportFcmMsg: function(e) {
            if (e) {
                if (Player.getOpenFcm()) {
                    Player.setFcmState(e.fcmCode);
                    Player.setFcmTime(e.fcmOnlineTime);
                    PreventIndulge.show(2, e)
                }
            }
        },
        GetShopCWRep: function(e) {
            Player.setShopCW(e.Param);
            PlayPackage.update();
            PlayPackageView.update()
        },
        GetActListRep: function(e) {
            if (Game.debug) {
                console.log("==============活动================");
                console.log(e)
            }
            if (e) {
                if (TeHuiGiftDialog.isShow) {
                    for (var t = 0; t < e.Lists.length; t++) {
                        var i = e.Lists[t],
                        n = i.ActType;
                        if (n == Game.actType.ActShuang11) {
                            Request.getActInfoReq(i.ActId);
                            break
                        }
                    }
                } else {
                    Activity.updateList(e)
                }
            }
        },
        GetActInfoRep: function(e) {
            if (e) {
                if (e.ActType === Game.actType.hitMonster) {
                    HitMonster.updateViewData(e)
                } else if (e.ActType === Game.actType.ActDavyJonesGift) {
                    if (DavyJonesGift.isShow) {
                        EventBus.send(EventConfig.DavyJonesGift.DavyJonesGift_REFRESH, [e])
                    } else {
                        DavyJonesGift.show(e)
                    }
                } else {
                    if (TeHuiGiftDialog.isShow && e.ActType == Game.actType.ActShuang11) {
                        Shuang11.setData(e)
                    } else {
                        Activity.updateContents(e)
                    }
                }
                Laya.stage.event(Laya.Event.def_updateActInfo, e)
            }
        },
        GetActPrizeRep: function(e) {
            if (Game.debug) {
                console.log("==============打印活动获取奖励回包================");
                console.log(e)
            }
            ActMysticalStore.updateExchagneEnd();
            if (e.ActType == 18) {
                ActCards.getPrize(e)
            } else if (e.ActType === Game.actType.ActShipment) {
                ShipmentPrize.ShipmentActPrizeRep(e)
            } else if (e.ActType == Game.actType.ActSuperPkg) {
                EventBus.send(EventConfig.EVENT_ACTRELICGIFT_GETAWARD, e)
            } else if (e.Tag) {
                Request.getActListReq();
                var t = e.Item;
                if (e.IsReal) {
                    MsgToast.show(GameConfig.ErrorMsg.clientErrorMsg(10058))
                } else if (t.length > 0 && e.ActType != 12 && e.ActType != 18 && e.ActType != 21) {
                    GetReward.show("", t)
                }
            }
            HitMonster.FightRep(e);
            if (e.MsgId) {
                MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgId))
            }
        },
        GetHYDTInfoRep: function(e) {
            ShipmentPrize.GetHYDTInfoRep(e)
        },
        GetGoldPigLogRep: function(e) {
            GoldPigShow.getListData(e)
        },
        GetGoldPigPoolRep: function(e) {
            GoldPigShow.updatePrizePool(e);
            GameCenter.GetGoldPigPoolRep(e);
            FishScene.setGoldPigNum(e)
        },
        GetShopCZRep: function(e) {
            if (e.GoodsId) {
                Player.setShopCZ(true);
                SuperValueBag.upData(e.GoodsId)
            } else {
                Player.setShopCZ(false)
            }
        },
        GetPigShareCfgRep: function(e) {
            if (e.Tag) {
                SmallGoldPig.updateItem(e)
            } else if (e.MsgId) {
                MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgId))
            }
        },
        GetPigSharePrizeRep: function(e) {
            if (e.Tag) {
                if (Game.channel.cfg.cps === Game.ChannelConstants.vivo) {
                    GetReward.show("小金猪奖励", e.Item)
                } else {
                    GetReward.show("小金猪分享奖励", e.Item)
                }
                Player.setPigShareTimes(e.ShareTimes)
            } else if (e.MsgId) {
                MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgId))
            }
        },
        PayResRep: function(t) {
            if (t.Tag) {
                var e = t.GoodsId;
                var i = GameConfig.shopCity.getCfgById(e);
                if (i) {
                    if (ActionEventReport.PayEvent) {
                        ActionEventReport.report(ActionEventReport.PayEvent);
                        ActionEventReport.PayEvent = null
                    }
                    var n = "";
                    var s = false;
                    if (i.Type == 1) {
                        Request.GetUserMoneyReq();
                        n = "恭喜您充值成功"
                    } else if (i.Type == 2) {
                        s = true;
                        Request.GetUserMoneyReq();
                        Request.package.getListReq();
                        Player.updateFirstGift();
                        GameCenter.hideFirstBuy();
                        FirstRecharge.close(true);
                        EventBus.send(EventConfig.TeHui.TeHui_REFRESH_LIST);
                        n = "首充特惠"
                    } else if (i.Type == 3) {
                        s = true;
                        Request.GetUserMoneyReq();
                        Request.package.getListReq();
                        Request.GetShopCWReq();
                        n = "飞享礼包"
                    } else if (i.Type == 4) {} else if (i.Type == 5) {
                        Request.package.getListReq();
                        BuyQuick.hide();
                        n = "技能购买"
                    } else if (i.Type == 7) {
                        Request.GetUserOtherInfoReq();
                        s = true;
                        n = "恭喜您充值成功"
                    } else if (i.Type == 8) {
                        n = "恭喜您充值成功";
                        if (Channel && Channel.cfg.cps == Game.ChannelConstants.qtt) {
                            if (qttGame && qttGame.openDialogMission) {
                                qttGame.openDialogMission()
                            }
                        }
                        Player.setFirstGiftOneSG(true);
                        s = true;
                        EventBus.send(EventConfig.FirstBuyToOne.FirstBuyToOne_BUY_SUCCESS, true);
                        EventBus.send(EventConfig.TeHui.TeHui_REFRESH_LIST)
                    } else if (i.Type == 10) {
                        n = "特价礼包";
                        EventBus.send(EventConfig.GAME_CENTER.SPECIAL_GIFT_BUY, true);
                        s = true
                    } else if (i.Type == 11) {
                        n = "特价礼包";
                        EventBus.send(EventConfig.GAME_CENTER.SPECIAL_GIFT_BUY, true);
                        s = true
                    } else if (i.Type == 12) {
                        n = "活动礼包";
                        EventBus.send(EventConfig.OneMoneyGift.ONEMONEYGIFT_BUY, true);
                        Player.setKanJiaVisible(false);
                        EventBus.send(EventConfig.TeHui.TeHui_REFRESH_LIST)
                    } else if (i.Type == 13) {
                        n = "恭喜您充值成功";
                        Player.setQttFirstGiftOneSG(true);
                        s = true;
                        EventBus.send(EventConfig.FirstBuyToOne.FirstBuyToOne_BUY_SUCCESS, true);
                        EventBus.send(EventConfig.TeHui.TeHui_REFRESH_LIST)
                    } else if (i.Type == 14) {
                        n = "恭喜您充值成功";
                        Player.setQttFirstGiftOneFG(true);
                        EventBus.send(EventConfig.FirstBuyToOne.FirstBuyToOne_BUY_SUCCESS, true);
                        EventBus.send(EventConfig.TeHui.TeHui_REFRESH_LIST);
                        s = true
                    } else if (i.Type == 15) {
                        n = "恭喜您充值成功";
                        Player.setFirstGiftOneSG(true);
                        EventBus.send(EventConfig.FirstBuyToOne.FirstBuyToOne_BUY_SUCCESS, true);
                        EventBus.send(EventConfig.TeHui.TeHui_REFRESH_LIST);
                        s = true
                    } else if (i.Type == 16) {
                        n = "恭喜您充值成功";
                        Player.setCanBuyDoubleEleven();
                        EventBus.send(EventConfig.Shuang11.Shuang11_BUY_SUCCESS, true);
                        EventBus.send(EventConfig.TeHui.TeHui_REFRESH_LIST);
                        s = true
                    } else if (i.Type == 17) {
                        n = "恭喜您充值成功";
                        if (SevenDayRecharge.msgData) {
                            ActionEventReport.report(ActionEventReport.actionIndex.ID1028, {
                                t: SevenDayRecharge.msgData.AlreadyBuyNum + 1
                            })
                        }
                        Request.SevenDayChargeGetInfoReq()
                    } else if (i.Type == 18) {
                        n = "恭喜您充值成功";
                        if (SevenDayRecharge.msgData) {
                            ActionEventReport.report(ActionEventReport.actionIndex.ID1030, {
                                t: SevenDayRecharge.msgData.AlreadyBuyNum + 1
                            })
                        }
                        Request.SevenDayChargeGetInfoReq()
                    } else if (i.Type == 19) {
                        n = "周卡购买成功";
                        Request.WeekCardInfoReq();
                        var a = WeekCardView.weekCardDays;
                        if (a <= 0) a = 0;
                        a += 7;
                        ActionEventReport.report(ActionEventReport.actionIndex.ID1056, {
                            d: a
                        })
                    } else if (i.Type == 20) {
                        Request.getActInfoReq(DavyJonesGift.ActId)
                    }
                    if (Game.debug) {
                        console.log("recharge call");
                        console.log(t)
                    }
                    if (t.Item) {
                        var r = GetReward.show(n, t.Item, false, null, null, s);
                        if (Laya.LocalStorage.getItem(Player.getUserId() + myStorage.StorageStaticCode.Storage_ShowChongZhiMessageBos) != 1) {
                            r.closeCallback = function() {
                                console.log("getreward");
                                var e = ChongZhiMessageBox.show();
                                e.closeCallback = function() {
                                    console.log("33333");
                                    if (t.WechatId) {
                                        VipService.show(t.WechatId, t.QRCodeUrl)
                                    }
                                    e.closeCallback = null
                                };
                                r.closeCallback = null
                            }
                        } else {
                            r.closeCallback = function() {
                                if (t.WechatId) {
                                    VipService.show(t.WechatId, t.QRCodeUrl)
                                }
                                r.closeCallback = null
                            }
                        }
                    }
                    Request.GetShopCityInfoReq(Game.channel.cfg.cps);
                    HitMonster.getReqData()
                }
                Game.temp_payRespToGetUserInfo = true;
                Request.GetUserInfoReq();
                Request.GetUserOtherInfoReq();
                Request.GetRedPointReq();
                if (Game.state.get() > Game.sceneConfig.sceneID.gameCenter) {
                    Request.GoldChangeReq();
                    Request.GetMyFishFieldReq()
                }
                if (Activity.isShow()) {
                    Request.getActListReq()
                }
            }
        },
        GetSharePrizeRep: function(e) {
            if (e.MsgId) {
                MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgId))
            }
        },
        CreatePayOrderRep: function(e) {
            if (Game.debug) {
                console.log(e)
            }
            if (e.Tag) {
                if (Channel && Channel.pay && e.Data) {
                    var t = JSON.parse(e.Data);
                    if (t.Res) {
                        Channel.pay(t.Data, e.PayChannel, e.SendToUserId, e.GoodsId)
                    } else {
                        MsgToast.show("下订单失败");
                        console.error("下订单失败")
                    }
                } else {
                    MsgToast.show("szy log 下订单数据不齐");
                    console.log("szy log 下订单数据不齐")
                }
            }
            if (e.MsgId) {
                MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgId))
            }
            FirstRecharge.hasRes = true
        },
        HttpRep: function(e) {
            if (e.ReqId == 1e5) {
                if (e.StateCode == 1) {
                    var t = JSON.parse(e.ResponseData).Data;
                    if (t) Game.shareConfig = JSON.parse(t)
                }
            } else if (e.ReqId == 100001) {} else OrderCenter.response(e)
        },
        GetAdDrawPrizeRep: function(e) {
            if (e) {
                if (e.Tag) {
                    GetReward.show("恭喜您获得:", e.ItemId + ":" + e.ItemNum);
                    Player.setADPrizeTimes(e.LeftTimes)
                } else {
                    if (e.MsgId) {
                        MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgId))
                    }
                }
            }
        },
        AddDrawShareTimesRep: function(e) {
            if (e.Tag) {
                Player.setDrawShareTimes(e.ShareTimes);
                Player.setDrawTimes(e.DrawTimes);
                LuckyTurntable.updateDrawTimes()
            } else {
                MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgId))
            }
        },
        ShakeRep: function(e) {
            console.log("ShakeRep....");
            if (e.Tag) {
                LuckyShakeView.shakeRep(e)
            } else {
                if (e.MsgId) {
                    MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgId))
                }
            }
        },
        GetSceneCfgRep: function(e) {
            if (e && e.SceneList) {
                GameCenter.GetSceneCfgRep(e.SceneList)
            }
        },
        SelectGameSvrRep: function(e) {
            GameCenter.SelectGameSvrRep(e)
        },
        LeaveGameSvrRep: function(e) {
            if (Game.state.get() >= Game.sceneConfig.sceneID.scene_JewCity && Game.state.get() <= Game.sceneConfig.sceneID.scene_BigRich) {
                Sound.kai_SoundAndMusic()
            } else {
                FishScene.LeaveGameSvrRep(e)
            }
        },
        GetTableInfoListRep: function(e) {
            GameCenter.GetTableInfoListRep(e)
        },
        EnterTableRep: function(e) {
            GameCenter.EnterTableRep(e)
        },
        ReportTableUser: function(e) {
            FishScene.updateTableUser(e)
        },
        ReportTableUserList: function(e) {
            FishScene.updateTableUser(e)
        },
        ReportUserLeaveTable: function(e) {
            FishScene.ReportUserLeaveTable(e)
        },
        ReportSendFish: function(e) {
            FishScene.ReportSendFish(e)
        },
        ChangeCannonMulRep: function(e) {
            FishScene.ChangeCannonMulRep(e)
        },
        ReportUserCannonMul: function(e) {
            FishScene.ReportUserCannonMul(e)
        },
        FireRep: function(e) {
            FishScene.FireRep(e)
        },
        ReportFire: function(e) {
            FishScene.ReportFire(e)
        },
        ReportCatchFish: function(e) {
            FishScene.ReportCatchFish(e)
        },
        UseSkillRep: function(e) {
            FishScene.UseSkillRep(e)
        },
        ReportUseSkillItem: function(e) {
            FishScene.ReportUseSkillItem(e.UserId, e.ItemId, e.AddGold, e.Fishids)
        },
        UseDantouItemRep: function(e) {
            FishScene.UseDantouItemRep(e)
        },
        ReportUseDantouItem: function(e) {
            FishScene.ReportUseDantouItem(e)
        },
        ReportFrozen: function(e) {
            FishScene.ReportFrozen(e.State)
        },
        ReportChangeScene: function(e) {
            FishScene.ReportChangeScene(e)
        },
        ReportRoomRunTime: function(e) {
            FishScene.ReportRoomRunTime(e)
        },
        ReportReconnection: function(e) {
            var t = Game.state.get();
            if (e.State != 1) {
                OrderCenter.check()
            }
            if (e.State == 1) {
                if (t != Game.sceneConfig.sceneID.unLogin) {
                    Main.exit()
                }
            } else if (e.State == 2) {
                if (t == Game.sceneConfig.sceneID.scene_10 || t == Game.sceneConfig.sceneID.scene_100 || t == Game.sceneConfig.sceneID.scene_1000 || t == Game.sceneConfig.sceneID.scene_DaoDan) {
                    MsgToast.show("您已离开该房间!");
                    Request.LeaveGameSvrReq()
                } else if (t == Game.sceneConfig.sceneID.gameCenter) {} else if (t == Game.sceneConfig.sceneID.scene_JewCity) {
                    var i = MessageBox.show("您已离开游戏,请重新进入!");
                    i.submitCall = function() {
                        JewelCityMain.reportLeaveServer()
                    };
                    i.closeCall = function() {
                        JewelCityMain.reportLeaveServer()
                    };
                    Request.LeaveGameSvrReq()
                } else if (t == Game.sceneConfig.sceneID.scene_AttackDragon) {
                    var i = MessageBox.show("您已离开游戏,请重新进入!");
                    i.submitCall = function() {
                        DragonMain.reportLeaveServer()
                    };
                    i.closeCall = function() {
                        DragonMain.reportLeaveServer()
                    };
                    Request.LeaveGameSvrReq()
                }
            } else if (e.State == 3) {
                if (t == Game.sceneConfig.sceneID.scene_10 || t == Game.sceneConfig.sceneID.scene_100 || t == Game.sceneConfig.sceneID.scene_1000 || t == Game.sceneConfig.sceneID.scene_DaoDan) {} else if (t == Game.sceneConfig.sceneID.gameCenter) {}
            }
        },
        ReportLeaveGameSvr: function(e) {
            if (e.MsgId) {
                FishScene.stopAutoFire();
                NoticeBox.show(GameConfig.ErrorMsg.getMsgById(e.MsgId));
                NoticeBox.submitCall = function() {
                    NoticeBox.submitCall = null;
                    FishScene.exitToGameCenter()
                }
            }
        },
        DuplicateLoginSys: function(e) {
            Game.DuplicateLoginSys = true;
            if (e.UserId == Player.getUserId()) {
                if (e.MsgId) {
                    var t = MessageBox.show(GameConfig.ErrorMsg.getMsgById(e.MsgId));
                    t.closeCall = function() {
                        Main.exit()
                    };
                    t.submitCall = function() {
                        Main.ReLogin()
                    }
                }
            }
        },
        ReportDuplicateLogin: function(e) {
            if (e.MsgId) {
                var t = MessageBox.show(GameConfig.ErrorMsg.getMsgById(e.MsgId));
                t.closeCall = function() {
                    Main.exit()
                };
                t.submitCall = function() {
                    Main.ReLogin()
                }
            }
        },
        GetTreasureInfoRep: function(e) {
            SeaGodGift.getListRep(e)
        },
        ReportTreasureState: function(e) {
            FishScene.ReportTreasureState(e)
        },
        UpdateFishPos: function(e) {
            FishScene.demo_UpdateFishPos(e)
        },
        GetNewLotteryRep: function(e) {
            if (e.Tag) {
                Player.setJiangJuan(e.TotalMoney2)
            }
        },
        GetSignDataRep: function(e) {
            LoginGift.GetSignDataRep(e);
            DingYue.GetSignDataRep(e)
        },
        GetSignPrizeRep: function(e) {
            LoginGift.GetSignPrizeRep(e)
        },
        GetUserCannonRep: function(e) {
            CannonSkins.GetUserCannonRep(e)
        },
        GetUserWingRep: function(e) {
            CannonSkins.GetUserWingRep(e)
        },
        UseCannonRep: function(e) {
            CannonSkins.UseCannonRep(e)
        },
        UseWingRep: function(e) {
            CannonSkins.UseWingRep(e)
        },
        ReportCannonSuccess: function(e) {
            FishScene.changeCannonSkin(e)
        },
        ReportWingSuccess: function(e) {
            FishScene.ReportWingSuccess(e)
        },
        ReportVipUp: function(e) {
            if (e) {
                Player.setVipLevel(e.VipLevel);
                GameCenter.ReportVipUp(e.VipLevel);
                FishScene.ReportVipUp(e.VipLevel);
                Utils.getRewardStack.add(e);
                Request.SevenDayChargeGetInfoReq()
            }
        },
        ReportVipLoginGift: function(e) {
            GameCenter.ReportVipLoginGift(e)
        },
        GetGiveUserInfoRep: function(e) {
            PackageGift.searchRep(e)
        },
        GetAccountListRep: function(e) {
            LoginPhone.getRoleListRep(e)
        },
        GetAccountListRep: function(e) {
            LoginPhone.getRoleListRep(e)
        },
        GetUserPropRep: function(e) {},
        GetVipSceneTimeRep: function(e) {
            var t = e.LeftTime;
            if (t || t === 0) {
                Player.setVipLeftTime(t);
                FishScene.showVipLeftTime()
            }
        },
        ReportRed: function(e) {
            Request.GetRedPointReq()
        },
        GetSuperMatchRankRep: function(e) {
            SuperMatch.GetSuperMatchRankRep(e)
        },
        ReportSuperMatchSettlement: function(e) {
            SuperMatchResult.show(e)
        },
        ReportSuperMatchScorePrize: function(e) {
            FishScene.ReportSuperMatchScorePrize(e)
        },
        GetCashRedRep: function(e) {},
        GetCashRedPrizeRep: function(e) {},
        ReportSuperMatchAccetpTask: function(e) {
            MatchTask.show(e)
        },
        ReportSuperMatchChangeTask: function(e) {
            MatchTask.updateNum(e)
        },
        ReportSuperMatchCompleteTask: function(e) {
            MatchTask.taskResult(e)
        },
        ReportNewTaskAccept: function(e) {},
        ReportNewTaskChange: function(e) {},
        ReportNewTaskComplete: function(e) {},
        RedeemCodeRep: function(e) {
            ActExchange.RedeemCodeRep(e)
        },
        GetMatchRankRep: function(e) {
            SuperMatchDoor.GetMatchRankRep(e)
        },
        ReportMatchSettlement: function(e) {
            SuperMatchJuanResult.show(e)
        },
        GetFishExchangeListRep: function(e) {
            if (e.Datas) GameConfig.exchange.setFishScoreList(e.Datas);
            Player.setYuBi(e.Money5Num);
            Player.setHitMonsterBindPhone(e.BindPhone);
            MonsterExchangeList.GetFishExchangeListRep(e)
        },
        SetAddressInfoRep: function(e) {
            MonsterAdress.SetAddressInfoRep(e)
        },
        FishExchangeRep: function(e) {
            if (e.Money5Num) {
                Player.setYuBi(e.Money5Num);
                EventBus.send(EventConfig.ExchangeJuan.ExchangeJuan_Success, [2]);
                if (e.IsReal != undefined && e.IsReal == 0) {
                    Request.package.getListReq();
                    Request.GetUserMoneyReq()
                }
            }
            MonsterExchangeList.FishExchangeRep(e)
        },
        GetFishExchangeLogRep: function(e) {
            MonsterExchangeRecord.GetFishExchangeLogRep(e)
        },
        GetTreasureBoxLogRep: function(e) {
            TreasureBoxDetail.GetTreasureBoxLogRep(e)
        },
        GewCityStartInfoRep: function(e) {
            JewelCityMain.GewCityStartInfoRep(e)
        },
        GewCityBeginGameRep: function(e) {
            if (e.Tag) {
                JewelCityMain.GewCityBeginGameRep(e)
            } else if (e.MsgId) {
                MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgID))
            }
        },
        GewCityRemoveLogRep: function(e) {
            JewLog.GewCityRemoveLogRep(e)
        },
        GewCityFinalRewardListRep: function(e) {
            if (e.Tag) {
                JewelCityMain.GewCityFinalRewardListRep(e)
            } else if (e.MsgID) {
                MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgID))
            }
        },
        GewCityFinalRewardGetRep: function(e) {
            if (e.Tag) {
                JewelCityMain.GewCityFinalRewardGetRep(e)
            } else if (e.MsgID) {
                MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgID))
            }
        },
        ReportNewRedBag: function(e) {
            FishScene.ReportNewRedBag(e.RedBagID)
        },
        ReportRedBagFinish: function(e) {
            if (e.RedBagID) {
                var t = Utils.redPackageStock.delete(e.RedBagID);
                RedPackageIcon.hideById(e.RedBagID);
                if (t && t.length > 0) {
                    FishScene.showRedPackage(t[0])
                }
            }
        },
        SendRedBagRep: function(e) {
            SendRedPackage.SendRedBagRep(e)
        },
        GetRedBagRep: function(e) {
            RedPackageIcon.GetRedBagRep(e)
        },
        FriendsListRep: function(e) {},
        ApplyFriendsListRep: function(e) {},
        BlackFriendsListRep: function(e) {},
        FriendsActionRep: function(e) {
            ChatSystem.FriendsActionRep(e)
        },
        FriendsAnswerReport: function(e) {},
        ChatPersonalRep: function(e) {
            ChatSystem.ChatPersonalRep(e)
        },
        SceneFaceRep: function(e) {
            EmjoyView.SceneFaceRep(e)
        },
        SceneFaceReport: function(e) {
            FishScene.SceneFaceReport(e)
        },
        CheckFriendRep: function(e) {
            EmjoyView.CheckFriendRep(e)
        },
        DaNaoLongGongBeginGameRep: function(e) {
            DragonMain.DaNaoLongGongBeginGameRep(e)
        },
        DaNaoLongGongStartInfoRep: function(e) {
            DragonMain.DaNaoLongGongStartInfoRep(e)
        },
        DaNaoLongGongGameFinishRep: function(e) {
            DragonMain.DaNaoLongGongGameFinishRep(e)
        },
        DaNaoLongGongRemoveLogRep: function(e) {
            DragonPriceLog.DaNaoLongGongRemoveLogRep(e)
        },
        GetZillionaireStartInfoRep: function(e) {
            BigRichMain.BigRichStartInfoRep(e)
        },
        GetZillionairePrizeRep: function(e) {
            BigRichMain.BigRichGameEndRep(e)
        },
        GetZillionaireRankRep: function(e) {
            BigRichRank.BigRichGameRankRep(e)
        },
        ZillionaireThrowRep: function(e) {
            BigRichMain.BigRichThrowSieveRep(e)
        },
        ZillionaireShareSuccessRep: function(e) {
            BigRichMain.BigRichShareSucceRep(e)
        },
        ReportGoldChange: function(e) {
            FishScene.ReportGoldChange(e)
        },
        BindWeChatRep: function(e) {
            if (e.Tag) {
                var t = GetReward.show("金币大礼包", [{
                    ItemId: 1,
                    ItemNum: 5e3
                },
                {
                    ItemId: 102,
                    ItemNum: 5
                },
                {
                    ItemId: 103,
                    ItemNum: 2
                },
                {
                    ItemId: 101,
                    ItemNum: 2
                }]);
                t.closeCallback = function() {
                    Request.package.getListReq();
                    Request.GetUserMoneyReq()
                };
                Player.updateWeChat();
                Request.GetUserInfoReq()
            } else if (e.Msg) {
                MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.Msg))
            }
        },
        BindBaiduRep: function(e) {
            if (e.Tag) {
                var t = GetReward.show("金币大礼包", [{
                    ItemId: 1,
                    ItemNum: 5e3
                },
                {
                    ItemId: 102,
                    ItemNum: 5
                },
                {
                    ItemId: 103,
                    ItemNum: 2
                },
                {
                    ItemId: 101,
                    ItemNum: 2
                }]);
                t.closeCallback = function() {
                    Request.package.getListReq();
                    Request.GetUserMoneyReq()
                };
                Player.updateWeChat();
                Request.GetUserInfoReq()
            } else if (e.MsgId) {
                MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgId))
            }
        },
        BindThirdRep: function(e) {
            if (e.Tag) {
                var t = GetReward.show("金币大礼包", [{
                    ItemId: 1,
                    ItemNum: 5e3
                },
                {
                    ItemId: 102,
                    ItemNum: 5
                },
                {
                    ItemId: 103,
                    ItemNum: 2
                },
                {
                    ItemId: 101,
                    ItemNum: 2
                }]);
                t.closeCallback = function() {
                    Request.package.getListReq();
                    Request.GetUserMoneyReq()
                };
                Player.updateWeChat();
                Request.GetUserInfoReq()
            } else if (e.MsgId) {
                MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgId))
            }
        },
        AchTaskListRep: function(e) {
            Task.AchTaskListRep(e)
        },
        AchTaskFinishRep: function(e) {
            if (e.Tag) {
                Task.AchTaskFinishRep()
            } else if (e.MsgId) {
                Waiting.hide();
                MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgId))
            }
        },
        AchTaskGetPrizeRep: function(e) {
            if (e.Tag) {
                Task.AchTaskGetPrizeRep(e.Item, e.TaskId)
            } else if (e.MsgId) {
                Waiting.hide();
                MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgId))
            }
        },
        AchTaskActivePrizeRep: function(e) {
            if (e.Tag) {
                Task.AchTaskActivePrizeRep(e.Item, e.State, e.Type)
            } else if (e.MsgId) {
                Waiting.hide();
                MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgId))
            }
        },
        GetBankPrizeRep: function(e) {
            if (e.Tag) {
                PigBank.GetBankPrizeRep(e.Gold, e.State)
            } else if (e.MsgId) {
                Waiting.hide();
                MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgId))
            }
        },
        BankViewVideoRep: function(e) {
            if (e.Tag) {
                PigBank.BankViewVideoRep(e.BankMoney)
            } else if (e.MsgId) {
                Waiting.hide();
                MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgId))
            }
        },
        ReportDTDBInfo: function(e) {
            console.log("msg.leaveBuffCount:" + e.leaveBuffCount);
            HitEgg.setLeftTimes(e.leaveBuffCount)
        },
        GetDTDBBuffProRep: function(e) {
            if (e.Tag) {
                HitEgg.setBuffResult(e.buffType)
            } else if (e.MsgId) {
                Waiting.hide();
                MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgId))
            }
        },
        GetDTDBNoticeRep: function(e) {
            Dtdb.NoticeReq(e)
        },
        GetDTDBDataRep: function(e) {
            console.log(e);
            Dtdb.GetDTDBDataRep(e);
            HitEgg.setBltAndScore(e.bullet, e.score)
        },
        GetDTDBResultRep: function(t) {
            if (t.itemID && t.itemNum) {
                DTResult.show(1,
                function() {
                    var e = GetReward.show("夺宝奖励", [{
                        ItemId: t.itemID,
                        ItemNum: t.itemNum
                    }]);
                    e.closeCallback = function() {
                        FishScene.LeaveGameSvrReq()
                    }
                })
            } else {
                DTResult.show(0,
                function() {
                    FishScene.LeaveGameSvrReq()
                })
            }
        },
        YouYiSaiCreateRoomRep: function(e) {
            if (e.Tag == 1) {} else if (e.MsgId) {
                MessageBox.show(GameConfig.ErrorMsg.getMsgById(e.MsgId))
            }
        },
        YouYiSaiSearchRoomRep: function(e) {
            if (e.Tag == 1) {
                dRoomInfo.show(e)
            } else if (e.MsgId) {
                MessageBox.show(GameConfig.ErrorMsg.getMsgById(e.MsgId))
            }
        },
        YouYiSaiEnterRoomRep: function(e) {
            if (e.Tag == 1) {
                dCreateRoom.hide();
                dRoomInfo.hide();
                yysRoom.showWaitPage(e)
            } else if (e.MsgId) {
                MessageBox.show(GameConfig.ErrorMsg.getMsgById(e.MsgId))
            }
        },
        YouYiSaiExitRoomRep: function(e) {
            if (e.Tag == 1) {
                yysRoom.exit()
            }
        },
        YouYiSaiStartGameRep: function(e) {
            console.log("开始游戏");
            console.log(e);
            if (e.Tag == 1) {
                yysRoom.exit()
            } else if (e.MsgId) {
                MessageBox.show(GameConfig.ErrorMsg.getMsgById(e.MsgId))
            }
        },
        YouYiSaiEndReport: function(e) {
            if (e.Tag == 1) {
                dGameOver.show(e)
            }
        },
        YouYiSaiRoomInfoUpd: function(e) {
            yysRoom.update(e)
        },
        WorldBossResultRep: function(e) {
            Waiting.hide();
            console.log("------世界BOSS-奖励列表---------");
            console.log(e);
            AwardList.show(e)
        },
        WorldBossCfgRep: function(e) {
            WBTitle.setFishMul(e.BossMul);
            WorldBoss.setFishMul(e.BossMul);
            worldBossMain.saveData(e)
        },
        BindMeizhuRep: function(e) {
            if (e.Tag == 1) {
                if (Channel && Channel.bindSucces) {
                    Channel.bindSucces()
                }
            } else if (e.MsgId) {
                MessageBox.show(GameConfig.ErrorMsg.getMsgById(e.MsgId))
            }
        },
        WorldBossStateReport: function(e) {
            WorldBoss.WorldBossStateReport(e)
        },
        WorldBossRemainHuDunReport: function(e) {
            WorldBoss.WorldBossRemainHuDunReport(e)
        },
        WorldBossCollisionRep: function(e) {
            WorldBoss.WorldBossCollisionRep(e)
        },
        GetUserStarRankRep: function(e) {
            StarRankNet.GetUserStarRankRep(e)
        },
        GetFishGoldRankRep: function(e) {
            RankList.rankListRes(e)
        },
        FirstServiceChatRewardReport: function(e) {
            GetReward.show("", e.reward);
            EventBus.send(EventConfig.GAME_CENTER.KEFU_GIFT, false)
        },
        DuiHuanLongZhuRep: function(e) {
            if (e.Tag) {
                Request.GetUserMoneyReq();
                EventBus.send(EventConfig.FISH_SCENE.BUY_DRAGONBALL, [true, e.NewNum]);
                ActionEventReport.report(ActionEventReport.actionIndex.ID1090, {
                    t: 0
                })
            } else if (e.MsgId) {
                MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgId));
                ActionEventReport.report(ActionEventReport.actionIndex.ID1090, {
                    t: 1
                })
            }
        },
        ReportNewPlayerTaskAccept: function(e) {
            NewPlayerTaskTip.show(e)
        },
        ReportNewPlayerTaskChange: function(e) {
            NewPlayerTaskTip.updateNum(e)
        },
        ReportNewPlayerTaskGetRewardRep: function(e) {
            if (e.Tag) {
                GetReward.show("", e.Reward);
                NewPlayTaskD.changeListStatus(e.TaskId)
            } else {
                MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgId, e.MsgParam))
            }
        },
        GuildCangkuRep: GuildNet.GuildCangkuRep,
        GuildCangkuItemGetRep: GuildNet.GuildCangkuItemGetRep,
        GuildCangkuItemSaveRep: GuildNet.GuildCangkuItemSaveRep,
        GuildInfoRep: GuildNet.GuildInfoRep,
        GuildRankRep: GuildNet.GuildRankRep,
        GuildSearchRep: GuildNet.GuildSearchRep,
        GuildApplyRep: GuildNet.GuildApplyRep,
        GuildCreateRep: GuildNet.GuildCreateRep,
        GuildXuanyanUpdRep: GuildNet.GuildXuanyanUpdRep,
        GuildAllowApplyUpdRep: GuildNet.GuildAllowApplyUpdRep,
        GuildApplyVipUpdRep: GuildNet.GuildApplyVipUpdRep,
        GuildInviteRep: GuildNet.GuildInviteRep,
        GuildInviteResultReport: GuildNet.GuildInviteResultReport,
        GuildApplyListRep: GuildNet.GuildApplyListRep,
        GuildProcessApplyRep: GuildNet.GuildProcessApplyRep,
        GuildGoToHellRep: GuildNet.GuildGoToHellRep,
        GuildAllEndRep: GuildNet.GuildAllEndRep,
        GuildNewApplyReport: GuildNet.GuildNewApplyReport,
        GuildMemberRep: GuildNet.GuildMemberRep,
        GuildExitRep: GuildNet.GuildExitRep,
        GuildInviteReplyRep: GuildNet.GuildInviteReplyRep,
        GuildInviteReport: GuildNet.GuildInviteReport,
        GuildJoinReport: GuildNet.GuildJoinReport,
        GuildKickOutReport: GuildNet.GuildKickOutReport,
        GetNewSevenDayRewardRep: function(e) {
            if (e.Tag == 1) {
                NewPlayerGift.getReward(e)
            } else if (e.MsgId) {
                MessageBox.show(GameConfig.ErrorMsg.getMsgById(e.MsgId))
            }
        },
        KanJiaLiBaoInfoRep: function(e) {
            EventBus.send(EventConfig.OneMoneyGift.ONEMONEYGIFT_SHOW, e)
        },
        JinBiBaoXiangInfoReport: function(e) {
            EventBus.send(EventConfig.FreeGold.FREEGOLD_SHOW, e)
        },
        JinBiBaoXiangGetRep: function(e) {
            if (e.Tag) {
                EventBus.send(EventConfig.FreeGold.FREEGOLD_GETAWARD, e);
                GetReward.show("", e.Reward)
            } else {
                MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgId, e.MsgParam))
            }
        },
        WXSubscribeRep: function(e) {
            if (e.Tag) {
                Player.setWxSubStatusByType(e.SubType, e.SubStatus);
                Request.GetUserInfoReq();
                DingYue.close();
                var t = e.Item;
                if (t && t.length > 0) {
                    GetReward.show("恭喜获得订阅奖励", t)
                }
            } else {
                MsgToast.show(GameConfig.ErrorMsg.getMsgById(e.MsgId))
            }
        },
        GetOnlineRewardRep: OnlineGift.GetOnlineRewardRep,
        GetOnlineInfoRep: OnlineGift.GetOnlineInfoRep,
        MatchChallengeShareRep: function(e) {
            if (e.Tag == 1) {
                if (e.ShareType == 0) {
                    MsgToast.show("恭喜获得1次挑战机会");
                    EventBus.send(EventConfig.SuperMatch.UpdateFreeTimes, [e.SceneId])
                } else {
                    EventBus.send(EventConfig.SuperMatch.UpdateBltShareTimes, [e.SceneId])
                }
            } else if (e.MsgId) {
                MessageBox.show(GameConfig.ErrorMsg.getMsgById(e.MsgId))
            }
        },
        SendMatchShareRep: function(t) {
            SuperMatchShareTip.hide();
            GetReward.show("恭喜获得", [{
                ItemId: Game.item.Bullet,
                ItemNum: t.BulletNum
            }], null, null,
            function() {
                var e = FishScene.getCurrentCannon();
                if (e) {
                    e.updateMatchBltNum(t.BulletNum)
                }
            })
        },
        ReportMatchBulletNum: function(e) {
            console.log(e);
            SuperMatchShareTip.show(e)
        },
        ReportRedDrawAccept: function(e) {
            console.log(e);
            QTTRedPkgT.show(e);
            GameConfig.updateRedPkgCfg(e);
            if (e.CostGold && !Player.getNewPlayer()) {
                QTTBackHint.show()
            }
        },
        GetInsideRedDrawRep: function(e) {
            console.log(e);
            if (e.Tag == 1) {
                Request.GetUserMoneyReq();
                GameConfig.updateRedPkgCfg(e);
                QTTRedPkg.hide();
                QTTRedPkgGet.show(e);
                QTTRedPkgT.updateData(e, GuidanceRedActivity.guide)
            } else if (e.MsgId) {
                MessageBox.show(GameConfig.ErrorMsg.getMsgById(e.MsgId))
            }
        },
        WeekCardInfoRep: function(e) {
            if (e.Tag == 1 || e.MsgId == 3450) {
                WeekCardView.WeekCardInfoRep(e);
                EventBus.send(EventConfig.GAME_CENTER.GAME_CENTER_WEEK_CARD_INFO, e)
            } else if (e.MsgId) {
                MessageBox.show(GameConfig.ErrorMsg.getMsgById(e.MsgId))
            }
        },
        WeekCardReceiveRep: function(e) {
            if (e.Tag == 1) {
                WeekCardView.WeekCardReceiveRep(e);
                if (e.rewardList) {
                    GetReward.show("恭喜获得周卡每日礼包", e.rewardList)
                }
            } else if (e.MsgId) {
                MessageBox.show(GameConfig.ErrorMsg.getMsgById(e.MsgId))
            }
        },
        GetNewPlayerMissileGoldRep: function(e) {
            if (e.Tag == 1) NoviceGuidanceOnMinGame.showDaoDan(e.GoldNum)
        },
        SevenDayChargeGetInfoRep: function(e) {
            SevenDayRecharge.msgData = e;
            EventBus.send(EventConfig.SevenDayRecharge.SevenDayRecharge_REFRESHDATA, [e]);
            if (SevenDayRecharge.isShow) {
                EventBus.send(EventConfig.SevenDayRecharge.SevenDayRecharge_BUYSUCCESS, [e, false])
            }
        },
        GetLoginConfigRep: function(e) {
            AdvanceConfig.setConfig(e)
        },
        LoginReadyRep: function(e) {
            Request.WeekCardInfoReq()
        },
        ReportSkillEndRep: function(e) {
            FishScene.stopUserSkill(e)
        }
    }
} ();
var Ajax = function() {
    var c = Laya.HttpRequest;
    var f = Laya.Event;
    var d = function(e) {
        var t = "";
        for (var i in e) {
            t += i + "=" + e[i] + "&"
        }
        t = t.substr(0, t.lastIndexOf("&"));
        return t
    };
    return function(i, e, t, n, s, a, r, o) {
        a = a || "json";
        e = e || "";
        t = t || "get";
        var l = new c;
        var h = false;
        var u = setTimeout(function() {
            if (l && l.http && l.http.abort) {
                h = true;
                l.http.abort()
            }
        },
        5e3);
        this.onHttpRequestError = function(e) {
            console.log(e);
            s && s("请求出错")
        };
        this.onHttpRequestComplete = function(e) {
            if (h) {
                s && s(e.ErrMsg, e.Res);
                var t = "https://xyxlog.yulebuyu.com/report/charge_err";
                Ajax(t, {
                    user_id: myStorage.getItem("bydjs_uid"),
                    code: 0,
                    msg: "http timeout:" + i
                },
                "get")
            } else {
                clearTimeout(u);
                if (e.Res === 1) {
                    n && n(e.Data)
                } else {
                    s && s(e.ErrMsg, e.Res)
                }
            }
        };
        l.once(f.COMPLETE, this, this.onHttpRequestComplete);
        l.once(f.ERROR, this, this.onHttpRequestError);
        if (t === "get") {
            i += "?" + d(e);
            e = ""
        }
        l.send(i, e, t, a, r)
    }
} ();
var PBF = function() {
    var e = {},
    t = Object.create(e);
    t[e[0] = "Default_ID"] = 0;
    t[e[1] = "RegReq_ID"] = 1;
    t[e[2] = "RegRep_ID"] = 2;
    t[e[3] = "LoginReq_ID"] = 3;
    t[e[4] = "LoginRep_ID"] = 4;
    t[e[5] = "SendPhoneCodeReq_ID"] = 5;
    t[e[6] = "SendPhoneCodeRep_ID"] = 6;
    t[e[7] = "GetNewNameReq_ID"] = 7;
    t[e[8] = "GetNewNameRep_ID"] = 8;
    t[e[9] = "LoginReadyReq_ID"] = 9;
    t[e[10] = "GetAccountListReq_ID"] = 10;
    t[e[11] = "GetAccountListRep_ID"] = 11;
    t[e[12] = "GetLoginConfigReq_ID"] = 12;
    t[e[13] = "GetLoginConfigRep_ID"] = 13;
    t[e[14] = "LoginReadyRep_ID"] = 14;
    t[e[101] = "HttpReq_ID"] = 101;
    t[e[102] = "HttpRep_ID"] = 102;
    t[e[999] = "HeartBeatReq_ID"] = 999;
    t[e[1e3] = "HeartBeatRep_ID"] = 1e3;
    t[e[1001] = "SelectGameSvrReq_ID"] = 1001;
    t[e[1002] = "SelectGameSvrRep_ID"] = 1002;
    t[e[1003] = "LeaveGameSvrReq_ID"] = 1003;
    t[e[1004] = "LeaveGameSvrRep_ID"] = 1004;
    t[e[1040] = "ReportLeaveGameSvr_ID"] = 1040;
    t[e[1005] = "GetGameSvrCfgReq_ID"] = 1005;
    t[e[1006] = "GetGameSvrCfgRep_ID"] = 1006;
    t[e[1007] = "GetTableInfoListReq_ID"] = 1007;
    t[e[1008] = "GetTableInfoListRep_ID"] = 1008;
    t[e[1009] = "EnterTableReq_ID"] = 1009;
    t[e[1010] = "EnterTableRep_ID"] = 1010;
    t[e[1011] = "ReportTableUser_ID"] = 1011;
    t[e[1012] = "ReportTableUserList_ID"] = 1012;
    t[e[1013] = "LeaveTableReq_ID"] = 1013;
    t[e[1014] = "LeaveTableRep_ID"] = 1014;
    t[e[1015] = "ReportUserLeaveTable_ID"] = 1015;
    t[e[1016] = "GetServerTimeReq_ID"] = 1016;
    t[e[1017] = "GetServerTimeRep_ID"] = 1017;
    t[e[1018] = "ReportNeedTimeCheck_ID"] = 1018;
    t[e[1019] = "ReportChangeScene_ID"] = 1019;
    t[e[1020] = "ReportSendFish_ID"] = 1020;
    t[e[1021] = "ChangeCannonMulReq_ID"] = 1021;
    t[e[1022] = "ChangeCannonMulRep_ID"] = 1022;
    t[e[1023] = "ReportUserCannonMul_ID"] = 1023;
    t[e[1024] = "ChangeCannonSkinReq_ID"] = 1024;
    t[e[1025] = "ChangeCannonSkinRep_ID"] = 1025;
    t[e[1026] = "ReportUserCannonSkin_ID"] = 1026;
    t[e[1027] = "FireReq_ID"] = 1027;
    t[e[1028] = "FireRep_ID"] = 1028;
    t[e[1029] = "ReportFire_ID"] = 1029;
    t[e[1030] = "CatchFishReq_ID"] = 1030;
    t[e[1031] = "ReportCatchFish_ID"] = 1031;
    t[e[1032] = "ReportMoreCatchFish_ID"] = 1032;
    t[e[1033] = "UseSkillReq_ID"] = 1033;
    t[e[1034] = "UseSkillRep_ID"] = 1034;
    t[e[1035] = "ReportUseSkillItem_ID"] = 1035;
    t[e[1036] = "UseDantouItemReq_ID"] = 1036;
    t[e[1037] = "UseDantouItemRep_ID"] = 1037;
    t[e[1038] = "ReportUseDantouItem_ID"] = 1038;
    t[e[1039] = "ReportFrozen_ID"] = 1039;
    t[e[1041] = "ReportRoomRunTime_ID"] = 1041;
    t[e[1042] = "SceneReadyReq_ID"] = 1042;
    t[e[1043] = "UpdateFishPos_ID"] = 1043;
    t[e[1044] = "GetVipSceneTimeReq_ID"] = 1044;
    t[e[1045] = "GetVipSceneTimeRep_ID"] = 1045;
    t[e[1046] = "GoldChangeReq_ID"] = 1046;
    t[e[1047] = "ReportGoldChange_ID"] = 1047;
    t[e[1048] = "ReportSkillEndReq_ID"] = 1048;
    t[e[1049] = "ReportSkillEndRep_ID"] = 1049;
    t[e[1201] = "YouYiSaiCreateRoomReq_ID"] = 1201;
    t[e[1202] = "YouYiSaiCreateRoomRep_ID"] = 1202;
    t[e[1203] = "YouYiSaiSearchRoomReq_ID"] = 1203;
    t[e[1204] = "YouYiSaiSearchRoomRep_ID"] = 1204;
    t[e[1205] = "YouYiSaiEnterRoomReq_ID"] = 1205;
    t[e[1206] = "YouYiSaiEnterRoomRep_ID"] = 1206;
    t[e[1207] = "YouYiSaiExitRoomReq_ID"] = 1207;
    t[e[1208] = "YouYiSaiExitRoomRep_ID"] = 1208;
    t[e[1209] = "YouYiSaiRoomInfoUpd_ID"] = 1209;
    t[e[1210] = "YouYiSaiStartGameReq_ID"] = 1210;
    t[e[1211] = "YouYiSaiStartGameRep_ID"] = 1211;
    t[e[1212] = "YouYiSaiEndReport_ID"] = 1212;
    t[e[1998] = "GetUserPropReq_ID"] = 1998;
    t[e[1999] = "GetUserPropRep_ID"] = 1999;
    t[e[2e3] = "GetUserOtherInfoReq_ID"] = 2e3;
    t[e[2001] = "GetUserOtherInfoRep_ID"] = 2001;
    t[e[2003] = "GetUserInfoReq_ID"] = 2003;
    t[e[2004] = "GetUserInfoRep_ID"] = 2004;
    t[e[2005] = "GetUserBagReq_ID"] = 2005;
    t[e[2006] = "GetUserBagRep_ID"] = 2006;
    t[e[2007] = "GiveReq_ID"] = 2007;
    t[e[2008] = "GiveRep_ID"] = 2008;
    t[e[2009] = "GetMailListReq_ID"] = 2009;
    t[e[2010] = "GetMailListRep_ID"] = 2010;
    t[e[2011] = "GetMailDetailReq_ID"] = 2011;
    t[e[2012] = "GetMailDetailRep_ID"] = 2012;
    t[e[2013] = "GetMailAttachmentReq_ID"] = 2013;
    t[e[2014] = "GetMailAttachmentRep_ID"] = 2014;
    t[e[2015] = "DelMailReq_ID"] = 2015;
    t[e[2016] = "DelMailRep_ID"] = 2016;
    t[e[2017] = "GetSceneCfgReq_ID"] = 2017;
    t[e[2018] = "GetSceneCfgRep_ID"] = 2018;
    t[e[2019] = "OpenItmeReq_ID"] = 2019;
    t[e[2020] = "OpenItmeRep_ID"] = 2020;
    t[e[2021] = "GetShopCityInfoReq_ID"] = 2021;
    t[e[2022] = "GetShopCityInfoRep_ID"] = 2022;
    t[e[2023] = "GetAddressInfoReq_ID"] = 2023;
    t[e[2024] = "GetAddressInfoRep_ID"] = 2024;
    t[e[2025] = "ExchagneReq_ID"] = 2025;
    t[e[2026] = "ExchagneRep_ID"] = 2026;
    t[e[2027] = "EditNameReq_ID"] = 2027;
    t[e[2028] = "EditNameRep_ID"] = 2028;
    t[e[2210] = "EditNameNoPswReq_ID"] = 2210;
    t[e[2211] = "EditNameNoPswRep_ID"] = 2211;
    t[e[2029] = "RealNameReq_ID"] = 2029;
    t[e[2030] = "RealNameRep_ID"] = 2030;
    t[e[2031] = "ForceRealNameRep_ID"] = 2031;
    t[e[2033] = "GetExchangeLogReq_ID"] = 2033;
    t[e[2034] = "GetExchangeLogRep_ID"] = 2034;
    t[e[2035] = "GetRedPointInfoReq_ID"] = 2035;
    t[e[2036] = "GetRedPointInfoRep_ID"] = 2036;
    t[e[2037] = "DelBagRedPointReq_ID"] = 2037;
    t[e[2038] = "DelBagRedPointRep_ID"] = 2038;
    t[e[2039] = "GetUserNickReq_ID"] = 2039;
    t[e[2040] = "GetUserNickRep_ID"] = 2040;
    t[e[2041] = "GetUserMoneyReq_ID"] = 2041;
    t[e[2042] = "GetUserMoneyRep_ID"] = 2042;
    t[e[2045] = "BindPhoneReq_ID"] = 2045;
    t[e[2046] = "BindPhoneRep_ID"] = 2046;
    t[e[2047] = "ReportUserNewMail_ID"] = 2047;
    t[e[2048] = "GetUserGmkReq_ID"] = 2048;
    t[e[2049] = "GetUserGmkRep_ID"] = 2049;
    t[e[2050] = "GetDrawCfgReq_ID"] = 2050;
    t[e[2051] = "GetDrawCfgRep_ID"] = 2051;
    t[e[2052] = "DrawReq_ID"] = 2052;
    t[e[2053] = "DrawRep_ID"] = 2053;
    t[e[2059] = "GetDrawReq_ID"] = 2059;
    t[e[2066] = "GetDrawRep_ID"] = 2066;
    t[e[2067] = "ReportRed_ID"] = 2067;
    t[e[2060] = "GetUserInviteCodeReq_ID"] = 2060;
    t[e[2061] = "GetUserInviteCodeRep_ID"] = 2061;
    t[e[2062] = "SetUserInviteCodeReq_ID"] = 2062;
    t[e[2063] = "SetUserInviteCodeRep_ID"] = 2063;
    t[e[2064] = "ChangeAvaterReq_ID"] = 2064;
    t[e[2065] = "ChangeAvaterRep_ID"] = 2065;
    t[e[2054] = "ChatReq_ID"] = 2054;
    t[e[2055] = "ChatRep_ID"] = 2055;
    t[e[2056] = "ReportNormalNotice_ID"] = 2056;
    t[e[2100] = "AddDrawShareTimesReq_ID"] = 2100;
    t[e[2101] = "AddDrawShareTimesRep_ID"] = 2101;
    t[e[2102] = "JiuJiJinStatusReq_ID"] = 2102;
    t[e[2103] = "JiuJiJinStatusRep_ID"] = 2103;
    t[e[2104] = "JiuJiJinGetReq_ID"] = 2104;
    t[e[2105] = "JiuJiJinGetRep_ID"] = 2105;
    t[e[2106] = "InviteInfoReq_ID"] = 2106;
    t[e[2108] = "KanJiaLiBaoInfoReq_ID"] = 2108;
    t[e[2109] = "KanJiaLiBaoInfoRep_ID"] = 2109;
    t[e[2111] = "GetUserStarRankReq_ID"] = 2111;
    t[e[2112] = "GetUserStarRankRep_ID"] = 2112;
    t[e[2113] = "JinBiBaoXiangInfoReport_ID"] = 2113;
    t[e[2114] = "JinBiBaoXiangGetReq_ID"] = 2114;
    t[e[2115] = "JinBiBaoXiangGetRep_ID"] = 2115;
    t[e[2116] = "SevenDayChargeGetInfoReq_ID"] = 2116;
    t[e[2117] = "SevenDayChargeGetInfoRep_ID"] = 2117;
    t[e[2118] = "WeekCardReceiveReq_ID"] = 2118;
    t[e[2119] = "WeekCardReceiveRep_ID"] = 2119;
    t[e[2120] = "WeekCardInfoReq_ID"] = 2120;
    t[e[2121] = "WeekCardInfoRep_ID"] = 2121;
    t[e[3003] = "RoomChatReq_ID"] = 3003;
    t[e[3004] = "RoomChatRep_ID"] = 3004;
    t[e[2999] = "ReportSystemNotice_ID"] = 2999;
    t[e[3001] = "DuplicateLoginSys_ID"] = 3001;
    t[e[3002] = "ReportDuplicateLogin_ID"] = 3002;
    t[e[2057] = "GetBindPhoneCodeReq_ID"] = 2057;
    t[e[2058] = "GetBindPhoneCodeRep_ID"] = 2058;
    t[e[2068] = "CpsLoginReq_ID"] = 2068;
    t[e[2069] = "CpsLoginRep_ID"] = 2069;
    t[e[2070] = "GetNoticeListReq_ID"] = 2070;
    t[e[2071] = "GetNoticeListRep_ID"] = 2071;
    t[e[2072] = "GetNoticeDetailReq_ID"] = 2072;
    t[e[2073] = "GetNoticeDetailRep_ID"] = 2073;
    t[e[2074] = "ReportFcmMsg_ID"] = 2074;
    t[e[2075] = "GetShopCWReq_ID"] = 2075;
    t[e[2076] = "GetShopCWRep_ID"] = 2076;
    t[e[2303] = "GetShopCZReq_ID"] = 2303;
    t[e[2304] = "GetShopCZRep_ID"] = 2304;
    t[e[2305] = "GetBuyLiBaoStatusReq_ID"] = 2305;
    t[e[2306] = "GetBuyLiBaoStatusRep_ID"] = 2306;
    t[e[2080] = "GetUserAlmsReq_ID"] = 2080;
    t[e[2081] = "GetUserAlmsRep_ID"] = 2081;
    t[e[2082] = "PayResRep_ID"] = 2082;
    t[e[2207] = "CreatePayOrderReq_ID"] = 2207;
    t[e[2208] = "CreatePayOrderRep_ID"] = 2208;
    t[e[2083] = "ReportReconnection_ID"] = 2083;
    t[e[2090] = "GetUserGoldRankReq_ID"] = 2090;
    t[e[2091] = "GetUserGoldRankRep_ID"] = 2091;
    t[e[2092] = "GetMallListReq_ID"] = 2092;
    t[e[2093] = "GetMallListRep_ID"] = 2093;
    t[e[2094] = "DiamondExchageGoodReq_ID"] = 2094;
    t[e[2095] = "DiamondExchageGoodRep_ID"] = 2095;
    t[e[2096] = "GetExchangeListReq_ID"] = 2096;
    t[e[2097] = "GetExchangeListRep_ID"] = 2097;
    t[e[2098] = "GetFishGoldRankReq_ID"] = 2098;
    t[e[2099] = "GetFishGoldRankRep_ID"] = 2099;
    t[e[2201] = "GetActListReq_ID"] = 2201;
    t[e[2202] = "GetActListRep_ID"] = 2202;
    t[e[2203] = "GetActInfoReq_ID"] = 2203;
    t[e[2204] = "GetActInfoRep_ID"] = 2204;
    t[e[2205] = "GetActPrizeReq_ID"] = 2205;
    t[e[2206] = "GetActPrizeRep_ID"] = 2206;
    t[e[2213] = "GetTreasureBoxLogReq_ID"] = 2213;
    t[e[2214] = "GetTreasureBoxLogRep_ID"] = 2214;
    t[e[2301] = "GetSharePrizeReq_ID"] = 2301;
    t[e[2302] = "GetSharePrizeRep_ID"] = 2302;
    t[e[2314] = "GetPigShareCfgReq_ID"] = 2314;
    t[e[2315] = "GetPigShareCfgRep_ID"] = 2315;
    t[e[2324] = "GetPigSharePrizeReq_ID"] = 2324;
    t[e[2325] = "GetPigSharePrizeRep_ID"] = 2325;
    t[e[2401] = "ReportTreasureState_ID"] = 2401;
    t[e[2402] = "GetTreasureInfoReq_ID"] = 2402;
    t[e[2403] = "GetTreasureInfoRep_ID"] = 2403;
    t[e[2404] = "GetTreasurePrizeReq_ID"] = 2404;
    t[e[2405] = "GetTreasurePrizeRep_ID"] = 2405;
    t[e[2406] = "TreasureCancleReq_ID"] = 2406;
    t[e[2407] = "TreasureCancleRep_ID"] = 2407;
    t[e[2310] = "GetWechatInviteInformationReq_ID"] = 2310;
    t[e[2311] = "GetWechatInviteInformationRep_ID"] = 2311;
    t[e[2312] = "GetWechatInvitePrizeReq_ID"] = 2312;
    t[e[2313] = "GetWechatInvitePrizeRep_ID"] = 2313;
    t[e[2501] = "SaveUserVersionReq_ID"] = 2501;
    t[e[2502] = "SaveUserExtDataReq_ID"] = 2502;
    t[e[2503] = "GetNewSevenDayRewardReq_ID"] = 2503;
    t[e[2504] = "GetNewSevenDayRewardRep_ID"] = 2504;
    t[e[2601] = "GetAdDrawPrizeReq_ID"] = 2601;
    t[e[2602] = "GetAdDrawPrizeRep_ID"] = 2602;
    t[e[2701] = "GetNewLotteryReq_ID"] = 2701;
    t[e[2702] = "GetNewLotteryRep_ID"] = 2702;
    t[e[2801] = "GetSignDataReq_ID"] = 2801;
    t[e[2802] = "GetSignDataRep_ID"] = 2802;
    t[e[2803] = "GetSignPrizeReq_ID"] = 2803;
    t[e[2804] = "GetSignPrizeRep_ID"] = 2804;
    t[e[2901] = "GetUserCannonReq_ID"] = 2901;
    t[e[2902] = "GetUserCannonRep_ID"] = 2902;
    t[e[2903] = "UseCannonReq_ID"] = 2903;
    t[e[2904] = "UseCannonRep_ID"] = 2904;
    t[e[2905] = "UseCannonSuccessReq_ID"] = 2905;
    t[e[2906] = "ReportCannonSuccess_ID"] = 2906;
    t[e[2951] = "GetUserWingReq_ID"] = 2951;
    t[e[2952] = "GetUserWingRep_ID"] = 2952;
    t[e[2953] = "UseWingReq_ID"] = 2953;
    t[e[2954] = "UseWingRep_ID"] = 2954;
    t[e[2955] = "UseWingSuccessReq_ID"] = 2955;
    t[e[2956] = "ReportWingSuccess_ID"] = 2956;
    t[e[3101] = "ReportVipUp_ID"] = 3101;
    t[e[3102] = "ReportVipLoginGift_ID"] = 3102;
    t[e[3201] = "GetGiveUserInfoReq_ID"] = 3201;
    t[e[3202] = "GetGiveUserInfoRep_ID"] = 3202;
    t[e[3301] = "ShakeReq_ID"] = 3301;
    t[e[3302] = "ShakeRep_ID"] = 3302;
    t[e[3401] = "ReportSuperMatchSettlement_ID"] = 3401;
    t[e[3402] = "GetSuperMatchRankReq_ID"] = 3402;
    t[e[3403] = "GetSuperMatchRankRep_ID"] = 3403;
    t[e[3404] = "ReportSuperMatchScorePrize_ID"] = 3404;
    t[e[3405] = "ReportMatchSettlement_ID"] = 3405;
    t[e[3406] = "GetMatchRankReq_ID"] = 3406;
    t[e[3407] = "GetMatchRankRep_ID"] = 3407;
    t[e[3506] = "ReportMatchBulletNum_ID"] = 3506;
    t[e[3451] = "ReportDTDBInfo_ID"] = 3451;
    t[e[3452] = "GetDTDBBuffProReq_ID"] = 3452;
    t[e[3453] = "GetDTDBBuffProRep_ID"] = 3453;
    t[e[3454] = "SendDTDBBuffOver_ID"] = 3454;
    t[e[3455] = "GetDTDBNoticeReq_ID"] = 3455;
    t[e[3456] = "GetDTDBNoticeRep_ID"] = 3456;
    t[e[3457] = "GetDTDBResultReq_ID"] = 3457;
    t[e[3458] = "GetDTDBResultRep_ID"] = 3458;
    t[e[3459] = "GetDTDBDataReq_ID"] = 3459;
    t[e[3460] = "GetDTDBDataRep_ID"] = 3460;
    t[e[3481] = "GetMyFishFieldReq_ID"] = 3481;
    t[e[3482] = "GetMyFishFieldRep_ID"] = 3482;
    t[e[3501] = "ShareReq_ID"] = 3501;
    t[e[3601] = "GetCashRedReq_ID"] = 3601;
    t[e[3602] = "GetCashRedRep_ID"] = 3602;
    t[e[3603] = "GetCashRedPrizeReq_ID"] = 3603;
    t[e[3604] = "GetCashRedPrizeRep_ID"] = 3604;
    t[e[3701] = "GetCarveUpDataReq_ID"] = 3701;
    t[e[3702] = "GetCarveUpDataRep_ID"] = 3702;
    t[e[3801] = "ReportSuperMatchAccetpTask_ID"] = 3801;
    t[e[3802] = "ReportSuperMatchChangeTask_ID"] = 3802;
    t[e[3803] = "ReportSuperMatchCompleteTask_ID"] = 3803;
    t[e[3901] = "ReportNewTaskAccept_ID"] = 3901;
    t[e[3902] = "ReportNewTaskChange_ID"] = 3902;
    t[e[3903] = "ReportNewTaskComplete_ID"] = 3903;
    t[e[3904] = "DuiHuanLongZhuReq_ID"] = 3904;
    t[e[3905] = "DuiHuanLongZhuRep_ID"] = 3905;
    t[e[3906] = "ReportNewPlayerTaskAccept_ID"] = 3906;
    t[e[3907] = "ReportNewPlayerTaskChange_ID"] = 3907;
    t[e[3908] = "ReportNewPlayerTaskGetRewardReq_ID"] = 3908;
    t[e[3909] = "ReportNewPlayerTaskGetRewardRep_ID"] = 3909;
    t[e[3910] = "GetMatchSettlementReq_ID"] = 3910;
    t[e[4001] = "TestReq_ID"] = 4001;
    t[e[4002] = "TestRep_ID"] = 4002;
    t[e[4100] = "RedeemCodeReq_ID"] = 4100;
    t[e[4101] = "RedeemCodeRep_ID"] = 4101;
    t[e[4102] = "FishExchangeReq_ID"] = 4102;
    t[e[4103] = "FishExchangeRep_ID"] = 4103;
    t[e[4104] = "SetAddressInfoReq_ID"] = 4104;
    t[e[4105] = "SetAddressInfoRep_ID"] = 4105;
    t[e[4106] = "GetFishExchangeListReq_ID"] = 4106;
    t[e[4107] = "GetFishExchangeListRep_ID"] = 4107;
    t[e[4108] = "GetFishExchangeLogReq_ID"] = 4108;
    t[e[4109] = "GetFishExchangeLogRep_ID"] = 4109;
    t[e[4201] = "GewCityStartInfoReq_ID"] = 4201;
    t[e[4202] = "GewCityStartInfoRep_ID"] = 4202;
    t[e[4203] = "GewCityBeginGameReq_ID"] = 4203;
    t[e[4204] = "GewCityBeginGameRep_ID"] = 4204;
    t[e[4205] = "GewCityRemoveLogReq_ID"] = 4205;
    t[e[4206] = "GewCityRemoveLogRep_ID"] = 4206;
    t[e[4207] = "GewCityFinalRewardListReq_ID"] = 4207;
    t[e[4208] = "GewCityFinalRewardListRep_ID"] = 4208;
    t[e[4209] = "GewCityFinalRewardGetReq_ID"] = 4209;
    t[e[4210] = "GewCityFinalRewardGetRep_ID"] = 4210;
    t[e[4211] = "GewCityEndGameReq_ID"] = 4211;
    t[e[4212] = "GewCityEndGameRep_ID"] = 4212;
    t[e[4300] = "ReportNewRedBag_ID"] = 4300;
    t[e[4301] = "ReportRedBagFinish_ID"] = 4301;
    t[e[4302] = "SendRedBagReq_ID"] = 4302;
    t[e[4303] = "SendRedBagRep_ID"] = 4303;
    t[e[4304] = "GetRedBagReq_ID"] = 4304;
    t[e[4305] = "GetRedBagRep_ID"] = 4305;
    t[e[4401] = "CustomerServiceChatReq_ID"] = 4401;
    t[e[4402] = "CustomerServiceChatRep_ID"] = 4402;
    t[e[4403] = "BrowserSendMessageToClientReq_ID"] = 4403;
    t[e[4404] = "BrowserSendMessageToClientRep_ID"] = 4404;
    t[e[4405] = "CustomerServiceChatListReq_ID"] = 4405;
    t[e[4406] = "CustomerServiceChatListRep_ID"] = 4406;
    t[e[4407] = "UpdateCustomerServiveChatReq_ID"] = 4407;
    t[e[4408] = "UpdateCustomerServiveChatRep_ID"] = 4408;
    t[e[4409] = "FirstServiceChatRewardReport_ID"] = 4409;
    t[e[4410] = "FriendsListReq_ID"] = 4410;
    t[e[4411] = "FriendsListRep_ID"] = 4411;
    t[e[4412] = "ApplyFriendsListReq_ID"] = 4412;
    t[e[4413] = "ApplyFriendsListRep_ID"] = 4413;
    t[e[4414] = "BlackFriendsListReq_ID"] = 4414;
    t[e[4415] = "BlackFriendsListRep_ID"] = 4415;
    t[e[4416] = "FriendsActionReq_ID"] = 4416;
    t[e[4417] = "FriendsActionRep_ID"] = 4417;
    t[e[4418] = "FriendsAnswerReport_ID"] = 4418;
    t[e[4420] = "ChatPersonalReq_ID"] = 4420;
    t[e[4421] = "ChatPersonalRep_ID"] = 4421;
    t[e[4430] = "CheckFriendReq_ID"] = 4430;
    t[e[4431] = "CheckFriendRep_ID"] = 4431;
    t[e[4501] = "SceneFaceReq_ID"] = 4501;
    t[e[4502] = "SceneFaceRep_ID"] = 4502;
    t[e[4503] = "SceneFaceReport_ID"] = 4503;
    t[e[4601] = "DaNaoLongGongStartInfoReq_ID"] = 4601;
    t[e[4602] = "DaNaoLongGongStartInfoRep_ID"] = 4602;
    t[e[4603] = "DaNaoLongGongBeginGameReq_ID"] = 4603;
    t[e[4604] = "DaNaoLongGongBeginGameRep_ID"] = 4604;
    t[e[4605] = "DaNaoLongGongRemoveLogReq_ID"] = 4605;
    t[e[4606] = "DaNaoLongGongRemoveLogRep_ID"] = 4606;
    t[e[4607] = "DaNaoLongGongGameFinishReq_ID"] = 4607;
    t[e[4608] = "DaNaoLongGongGameFinishRep_ID"] = 4608;
    t[e[4609] = "DaNaoLongGongEndGameReq_ID"] = 4609;
    t[e[4610] = "DaNaoLongGongEndGameRep_ID"] = 4610;
    t[e[4701] = "GetZillionaireStartInfoReq_ID"] = 4701;
    t[e[4702] = "GetZillionaireStartInfoRep_ID"] = 4702;
    t[e[4703] = "ZillionaireThrowReq_ID"] = 4703;
    t[e[4704] = "ZillionaireThrowRep_ID"] = 4704;
    t[e[4705] = "GetZillionairePrizeReq_ID"] = 4705;
    t[e[4706] = "GetZillionairePrizeRep_ID"] = 4706;
    t[e[4707] = "GetZillionaireRankReq_ID"] = 4707;
    t[e[4708] = "GetZillionaireRankRep_ID"] = 4708;
    t[e[4709] = "ZillionaireShareSuccessReq_ID"] = 4709;
    t[e[4710] = "ZillionaireShareSuccessRep_ID"] = 4710;
    t[e[4801] = "BindWeChatReq_ID"] = 4801;
    t[e[4802] = "BindWeChatRep_ID"] = 4802;
    t[e[4803] = "BindBaiduReq_ID"] = 4803;
    t[e[4804] = "BindBaiduRep_ID"] = 4804;
    t[e[4805] = "GetAdRewardReq_ID"] = 4805;
    t[e[4806] = "GetAdRewardRep_ID"] = 4806;
    t[e[4901] = "GetBankPrizeReq_ID"] = 4901;
    t[e[4902] = "GetBankPrizeRep_ID"] = 4902;
    t[e[4903] = "BankViewVideoReq_ID"] = 4903;
    t[e[4904] = "BankViewVideoRep_ID"] = 4904;
    t[e[5001] = "AchTaskFinishReq_ID"] = 5001;
    t[e[5002] = "AchTaskFinishRep_ID"] = 5002;
    t[e[5003] = "AchTaskListReq_ID"] = 5003;
    t[e[5004] = "AchTaskListRep_ID"] = 5004;
    t[e[5005] = "AchTaskGetPrizeReq_ID"] = 5005;
    t[e[5006] = "AchTaskGetPrizeRep_ID"] = 5006;
    t[e[5007] = "AchTaskActivePrizeReq_ID"] = 5007;
    t[e[5008] = "AchTaskActivePrizeRep_ID"] = 5008;
    t[e[5101] = "GetGoldPigPoolReq_ID"] = 5101;
    t[e[5102] = "GetGoldPigPoolRep_ID"] = 5102;
    t[e[5103] = "GetGoldPigLogReq_ID"] = 5103;
    t[e[5104] = "GetGoldPigLogRep_ID"] = 5104;
    t[e[5105] = "GetHYDTInfoReq_ID"] = 5105;
    t[e[5106] = "GetHYDTInfoRep_ID"] = 5106;
    t[e[5017] = "BindMeizhuReq_ID"] = 5017;
    t[e[5018] = "BindMeizhuRep_ID"] = 5018;
    t[e[5019] = "BindThirdReq_ID"] = 5019;
    t[e[5020] = "BindThirdRep_ID"] = 5020;
    t[e[5050] = "WXSubscribeReq_ID"] = 5050;
    t[e[5051] = "WXSubscribeRep_ID"] = 5051;
    t[e[5150] = "WorldBossStateReport_ID"] = 5150;
    t[e[5151] = "WorldBossRemainHuDunReport_ID"] = 5151;
    t[e[5152] = "WorldBossCollisionReq_ID"] = 5152;
    t[e[5153] = "WorldBossCollisionRep_ID"] = 5153;
    t[e[5154] = "WorldBossResultReq_ID"] = 5154;
    t[e[5155] = "WorldBossResultRep_ID"] = 5155;
    t[e[5156] = "WorldBossCfgReq_ID"] = 5156;
    t[e[5157] = "WorldBossCfgRep_ID"] = 5157;
    t[e[5202] = "GuildInfoReq_ID"] = 5202;
    t[e[5203] = "GuildInfoRep_ID"] = 5203;
    t[e[5204] = "GuildMemberReq_ID"] = 5204;
    t[e[5205] = "GuildMemberRep_ID"] = 5205;
    t[e[5206] = "GuildCangkuReq_ID"] = 5206;
    t[e[5207] = "GuildCangkuRep_ID"] = 5207;
    t[e[5208] = "GuildCangkuItemSaveReq_ID"] = 5208;
    t[e[5209] = "GuildCangkuItemSaveRep_ID"] = 5209;
    t[e[5210] = "GuildCangkuItemGetReq_ID"] = 5210;
    t[e[5211] = "GuildCangkuItemGetRep_ID"] = 5211;
    t[e[5212] = "GuildExitReq_ID"] = 5212;
    t[e[5213] = "GuildExitRep_ID"] = 5213;
    t[e[5214] = "GuildXuanyanUpdReq_ID"] = 5214;
    t[e[5215] = "GuildXuanyanUpdRep_ID"] = 5215;
    t[e[5216] = "GuildAllowApplyUpdReq_ID"] = 5216;
    t[e[5217] = "GuildAllowApplyUpdRep_ID"] = 5217;
    t[e[5220] = "GuildApplyVipUpdReq_ID"] = 5220;
    t[e[5221] = "GuildApplyVipUpdRep_ID"] = 5221;
    t[e[5222] = "GuildInviteReq_ID"] = 5222;
    t[e[5223] = "GuildInviteRep_ID"] = 5223;
    t[e[5224] = "GuildInviteResultReport_ID"] = 5224;
    t[e[5225] = "GuildApplyListReq_ID"] = 5225;
    t[e[5226] = "GuildApplyListRep_ID"] = 5226;
    t[e[5227] = "GuildProcessApplyReq_ID"] = 5227;
    t[e[5228] = "GuildProcessApplyRep_ID"] = 5228;
    t[e[5229] = "GuildGoToHellReq_ID"] = 5229;
    t[e[5230] = "GuildGoToHellRep_ID"] = 5230;
    t[e[5231] = "GuildAllEndReq_ID"] = 5231;
    t[e[5232] = "GuildAllEndRep_ID"] = 5232;
    t[e[5233] = "GuildNewApplyReport_ID"] = 5233;
    t[e[5234] = "GuildRankReq_ID"] = 5234;
    t[e[5235] = "GuildRankRep_ID"] = 5235;
    t[e[5236] = "GuildCreateReq_ID"] = 5236;
    t[e[5237] = "GuildCreateRep_ID"] = 5237;
    t[e[5238] = "GuildSearchReq_ID"] = 5238;
    t[e[5239] = "GuildSearchRep_ID"] = 5239;
    t[e[5240] = "GuildApplyReq_ID"] = 5240;
    t[e[5241] = "GuildApplyRep_ID"] = 5241;
    t[e[5242] = "GuildJoinReport_ID"] = 5242;
    t[e[5243] = "GuildInviteReport_ID"] = 5243;
    t[e[5244] = "GuildInviteReplyReq_ID"] = 5244;
    t[e[5245] = "GuildInviteReplyRep_ID"] = 5245;
    t[e[5246] = "GuildKickOutReport_ID"] = 5246;
    t[e[5301] = "GetOnlineInfoReq_ID"] = 5301;
    t[e[5302] = "GetOnlineInfoRep_ID"] = 5302;
    t[e[5303] = "GetOnlineRewardReq_ID"] = 5303;
    t[e[5304] = "GetOnlineRewardRep_ID"] = 5304;
    t[e[5350] = "SendMatchShareReq_ID"] = 5350;
    t[e[5351] = "SendMatchShareRep_ID"] = 5351;
    t[e[5352] = "MatchChallengeShareReq_ID"] = 5352;
    t[e[5353] = "MatchChallengeShareRep_ID"] = 5353;
    t[e[5400] = "ReportRedDrawAccept_ID"] = 5400;
    t[e[5401] = "ReportRedDrawChange_ID"] = 5401;
    t[e[5402] = "GetInsideRedDrawReq_ID"] = 5402;
    t[e[5403] = "GetInsideRedDrawRep_ID"] = 5403;
    t[e[5404] = "GetNewPlayerMissileGoldReq_ID"] = 5404;
    t[e[5405] = "GetNewPlayerMissileGoldRep_ID"] = 5405;
    t[e[1e4] = "MAX_ID"] = 1e4;
    var h = {
        GuildInfoReq: {},
        GuildInfoRep: {
            GuildId: 0,
            LeaderUserId: 0,
            PlayerNum: 0,
            MaxPlayerNum: 0,
            GuildIcon: 0,
            FlagId: 0,
            ApplyMul: 0,
            ApplyVip: 0,
            AllowApply: 0,
            GuildName: "",
            LeaderNick: "",
            Xuanyan: "",
            GuildLevel: 0
        },
        GuildMemberReq: {},
        GuildMemberRep: {
            GuildMemberList: ["GuildMemberInfo"]
        },
        GuildMemberInfo: {
            UserId: 0,
            AvatarID: 0,
            AvatarUrl: "",
            VipLevel: 0,
            Honor: 0,
            IsOnline: 0,
            Nick: "",
            WeekGongXian: 0
        },
        GuildCangkuReq: {},
        GuildCangkuRep: {
            GuildCangkuList: ["GuildCangkuInfo"]
        },
        GuildCangkuInfo: {
            ItemId: 0,
            ItemNum: 0
        },
        GuildCangkuItemSaveReq: {
            ItemId: 0,
            ItemNum: 0
        },
        GuildCangkuItemSaveRep: {
            Tag: 0,
            MsgId: 0,
            MsgParam: "",
            OtherCode: 0
        },
        GuildCangkuItemGetReq: {
            ItemId: 0,
            ItemNum: 0
        },
        GuildCangkuItemGetRep: {
            Tag: 0,
            MsgId: 0,
            MsgParam: "",
            GetItemString: ""
        },
        GuildExitReq: {},
        GuildExitRep: {
            Tag: 0,
            MsgId: 0,
            MsgParam: ""
        },
        GuildXuanyanUpdReq: {
            Xuanyan: ""
        },
        GuildXuanyanUpdRep: {
            Tag: 0,
            MsgId: 0,
            MsgParam: "",
            Xuanyan: ""
        },
        GuildAllowApplyUpdReq: {
            AllowApply: 0
        },
        GuildAllowApplyUpdRep: {
            Tag: 0,
            MsgId: 0,
            MsgParam: ""
        },
        GuildApplyVipUpdReq: {
            ApplyVip: 0
        },
        GuildApplyVipUpdRep: {
            Tag: 0,
            MsgId: 0,
            MsgParam: ""
        },
        GuildInviteReq: {
            UserID: 0
        },
        GuildInviteRep: {
            Tag: 0,
            MsgId: 0,
            MsgParam: ""
        },
        GuildInviteResultReport: {
            Tag: 0,
            MsgId: 0,
            MsgParam: ""
        },
        GuildApplyListReq: {},
        GuildApplyListRep: {
            List: ["GuildApplyInfo"]
        },
        GuildApplyInfo: {
            ApplyId: 0,
            AvatarID: 0,
            VipLevel: 0,
            IsOnline: 0,
            Mul: 0,
            Nick: ""
        },
        GuildProcessApplyReq: {
            OptType: 0,
            ApplyId: 0
        },
        GuildProcessApplyRep: {
            Tag: 0,
            MsgId: 0,
            MsgParam: "",
            ApplyId: 0
        },
        GuildGoToHellReq: {
            UserId: 0
        },
        GuildGoToHellRep: {
            Tag: 0,
            MsgId: 0,
            MsgParam: ""
        },
        GuildAllEndReq: {},
        GuildAllEndRep: {
            Tag: 0,
            MsgId: 0,
            MsgParam: ""
        },
        GuildNewApplyReport: {},
        GuildRankReq: {},
        GuildRankRep: {
            List: ["GuildRankInfo"]
        },
        GuildRankInfo: {
            GuildId: 0,
            GuildIcon: 0,
            PlayerNum: 0,
            MaxPlayerNum: 0,
            AllowApply: 0,
            GuildName: "",
            LeaderNick: "",
            Xuanyan: "",
            GuildLevel: 0
        },
        GuildCreateReq: {
            guildIcon: 0,
            flagId: 0,
            allowApply: 0,
            guildName: "",
            xuanyan: ""
        },
        GuildCreateRep: {
            Tag: 0,
            MsgId: 0,
            MsgParam: ""
        },
        GuildSearchReq: {
            GuildName: ""
        },
        GuildSearchRep: {
            Tag: 0,
            MsgId: 0,
            MsgParam: "",
            GuildId: 0,
            GuildIcon: 0,
            PlayerNum: 0,
            MaxPlayerNum: 0,
            AllowApply: 0,
            GuildName: "",
            LeaderNick: "",
            Xuanyan: "",
            GuildLevel: 0
        },
        GuildApplyReq: {
            GuildId: 0
        },
        GuildApplyRep: {
            Tag: 0,
            MsgId: 0,
            MsgParam: ""
        },
        GuildJoinReport: {
            GuildId: 0,
            MsgId: 0,
            MsgParam: ""
        },
        GuildInviteReport: {
            InviteId: 0,
            InviteUserNick: "",
            GuildName: ""
        },
        GuildInviteReplyReq: {
            InviteId: 0,
            Agree: 0
        },
        GuildInviteReplyRep: {
            Tag: 0,
            MsgId: 0,
            MsgParam: ""
        },
        GuildKickOutReport: {
            MsgId: 0,
            MsgParam: ""
        },
        Default: {},
        MAX: {},
        HttpReq: {
            ReqId: 0,
            ReqUrl: ""
        },
        HttpRep: {
            ReqId: 0,
            StateCode: 0,
            ResponseData: ""
        },
        GetNewNameReq: {},
        GetNewNameRep: {
            Name: ""
        },
        SendPhoneCodeReq: {
            Phone: "",
            Type: 0
        },
        SendPhoneCodeRep: {
            Tag: 0,
            MsgId: 0
        },
        RegReq: {
            Nick: "",
            Password: "",
            CpsId: 0,
            SubCpsId: 0,
            RealName: "",
            IdCardNum: "",
            RegType: 0,
            Imei: "",
            SysVer: "",
            PhoneModel: "",
            RegVer: "",
            PhoneNum: "",
            PhoneVCode: "",
            ClientOnly: "",
            ChannelId: 0,
            Ext: "",
            Ip: ""
        },
        RegRep: {
            Tag: 0,
            MsgId: 0,
            MsgParam: "",
            Nick: "",
            isNew: 0,
            UserId: 0,
            SessionId: 0
        },
        LoginReq: {
            UserName: "",
            Password: "",
            Type: 0,
            CpsId: 0,
            SubCpsId: 0,
            Imei: "",
            SysVer: "",
            PhoneModel: "",
            LoginVer: "",
            ClientOnly: "",
            PhoneNum: "",
            PhoneVCode: "",
            Ext: "",
            ChannelId: 0,
            SPName: "",
            SdkVer: "",
            ThirdToken: "",
            ThirdUID: "",
            FromUserID: 0,
            InviteParam: "",
            AdParam: "",
            EnterId: 0,
            SceneId: 0,
            Ip: "",
            ThindNick: "",
            HeadImg: "",
            UnionID: "",
            WechatSessionID: ""
        },
        LoginRep: {
            Tag: 0,
            MsgId: 0,
            MsgParam: "",
            UserId: 0,
            SessionId: 0,
            LoginType: 0,
            isNew: 0,
            Nick: "",
            RegCpsId: 0,
            ShareCpsId: 0,
            WechatSessionID: "",
            OpenId: ""
        },
        HeartBeatReq: {},
        HeartBeatRep: {},
        LoginReadyReq: {},
        LoginReadyRep: {
            Tag: 0,
            MsgId: 0,
            MsgParam: ""
        },
        GetAccountListReq: {
            Phone: "",
            PhoneCode: ""
        },
        AccountInfo: {
            UserID: 0,
            Nick: "",
            VipLevel: 0,
            Sex: 0,
            AvatarId: 0,
            AvatarUrl: ""
        },
        GetAccountListRep: {
            Tag: 0,
            MsgId: 0,
            Token: "",
            Lists: ["AccountInfo"]
        },
        SelectGameSvrReq: {
            SvrId: 0,
            ServerName: ""
        },
        SelectGameSvrRep: {
            Tag: 0,
            MsgId: 0,
            MsgParam: "",
            SvrId: 0,
            TableNum: 0,
            ServerName: ""
        },
        LeaveGameSvrReq: {
            RedCostClearTag: 0
        },
        LeaveGameSvrRep: {
            Tag: 0,
            MsgId: 0,
            MsgParam: ""
        },
        ReportLeaveGameSvr: {
            MsgId: 0,
            MsgParam: ""
        },
        GetGameSvrCfgReq: {
            SvrId: 0
        },
        GameSvrCfgInfo: {
            CannonsMul: ["int32"],
            TableCount: 0,
            MinGold: 0,
            MaxGold: 0
        },
        GetGameSvrCfgRep: {
            CfgList: ["GameSvrCfgInfo"]
        },
        TableInfo: {
            TableId: 0,
            PeopleCount: 0,
            Name: ""
        },
        GetTableInfoListReq: {},
        GetTableInfoListRep: {
            TableList: ["TableInfo"]
        },
        EnterTableReq: {
            TableId: 0,
            PWS: 0,
            Name: ""
        },
        EnterTableRep: {
            Tag: 0,
            MsgId: 0,
            MsgParam: "",
            TableId: 0,
            Pos: 0,
            IsPswTable: 0
        },
        SceneReadyReq: {},
        FishPos: {
            FishId: 0,
            X: 0,
            Y: 0
        },
        UpdateFishPos: {
            FishList: ["FishPos"]
        },
        GetVipSceneTimeReq: {},
        GetVipSceneTimeRep: {
            LeftTime: 0
        },
        GoldChangeReq: {},
        ReportGoldChange: {
            UserId: 0,
            Money1: 0
        },
        TableUserInfo: {
            UserId: 0,
            Pos: 0,
            Nick: "",
            Money1: 0,
            Cannon: 0,
            CannonMul: 0,
            AvatarID: 0,
            PhoneNum: "",
            Money2: 0,
            CannonId: 0,
            Sex: 0,
            AvatarUrl: "",
            VipLevel: 0,
            SM_Bullet: 0,
            SM_Score: 0,
            WingId: 0,
            Money6: 0
        },
        ReportTableUser: {
            User: "TableUserInfo"
        },
        ReportTableUserList: {
            tablelist: ["TableUserInfo"]
        },
        LeaveTableReq: {},
        LeaveTableRep: {
            Tag: 0,
            MsgId: 0,
            MsgParam: ""
        },
        ReportUserLeaveTable: {
            UserId: 0
        },
        GetServerTimeReq: {},
        GetServerTimeRep: {
            ServerTime: 0
        },
        ReportNeedTimeCheck: {
            ServerTime: 0
        },
        ReportChangeScene: {
            SceneSeq: 0
        },
        ReportRoomRunTime: {
            RunTime: 0
        },
        NewFishInfo: {
            Id: 0,
            FishId: 0,
            PathId: 0,
            Delay: 0,
            OffsetX: 0,
            OffsetY: 0,
            StartTime: 0,
            FishScene: 0,
            SceneSeq: 0,
            RunTime: 0,
            TideSeq: 0,
            LiveTime: 0
        },
        ReportSendFish: {
            Fishs: ["NewFishInfo"]
        },
        ChangeCannonMulReq: {
            Mul: 0
        },
        ChangeCannonMulRep: {
            Tag: 0,
            MsgId: 0,
            MsgParam: ""
        },
        ReportUserCannonMul: {
            UserId: 0,
            CannonMul: 0
        },
        ChangeCannonSkinReq: {
            SkinId: 0
        },
        ChangeCannonSkinRep: {
            Tag: 0,
            MsgId: 0,
            MsgParam: ""
        },
        ReportUserCannonSkin: {
            UserId: 0,
            SkinId: 0
        },
        FireReq: {
            Id: 0,
            Angle: 0,
            Mul: 0,
            LockFishId: 0,
            IsFrenzy: 0,
            LongZhuMul: 0,
            BatteryId: 0,
            IsAccelerate: 0,
            IsPhantom: 0
        },
        FireRep: {
            Tag: 0,
            MsgId: 0,
            MsgParam: "",
            BulletId: 0,
            Money1: 0,
            BatteryId: 0,
            IsAccelerate: 0,
            IsPhantom: 0
        },
        ReportFire: {
            UserId: 0,
            Angle: 0,
            Mul: 0,
            LockFishId: 0,
            IsFrenzy: 0,
            LongZhuMul: 0,
            BatteryId: 0,
            IsAccelerate: 0,
            IsPhantom: 0
        },
        CatchFishReq: {
            FishId: 0,
            BulletId: 0
        },
        DropInfo: {
            ItemId: 0,
            ItemNum: 0,
            ItemValid: 0
        },
        ReportCatchFish: {
            UserId: 0,
            FishId: 0,
            Gold: 0,
            AddGold: 0,
            Drops: ["DropInfo"],
            MoreType: 0,
            Fishids: ["int32"],
            FishMul: 0,
            CritMul: 0,
            SM_Bullet: 0,
            SM_Score: 0,
            GoldPig: 0
        },
        ReportMoreCatchFish: {
            MainFishId: 0
        },
        UseSkillReq: {
            ItemId: 0
        },
        UseSkillRep: {
            Tag: 0,
            MsgId: 0,
            MsgParam: "",
            ItemId: 0,
            ItemNum: 0,
            AddGold: 0
        },
        ReportUseSkillItem: {
            UserId: 0,
            ItemId: 0,
            AddGold: 0,
            Fishids: ["int32"]
        },
        ReportFrozen: {
            State: 0
        },
        UseDantouItemReq: {
            ItemId: 0,
            FishId: 0
        },
        UseDantouItemRep: {
            Tag: 0,
            MsgId: 0,
            MsgParam: "",
            ItemId: 0,
            ItemNum: 0
        },
        ReportUseDantouItem: {
            UserId: 0,
            ItemId: 0,
            FishId: 0,
            AddGold: 0,
            Gold: 0,
            CritMul: 0
        },
        ReportReconnection: {
            State: 0
        },
        GetUserPropReq: {
            Key: 0
        },
        GetUserPropRep: {
            Key: 0,
            Value: ""
        },
        GetUserOtherInfoReq: {},
        GetUserOtherInfoRep: {
            ShakeTimes: 0,
            BagRed: 0,
            MailRed: 0,
            ActRed: 0,
            InviteRed: 0,
            SignRed: 0,
            CashRedRed: 0,
            RedBagRestTime: 0,
            GetBagTime: 0,
            Open_CarveUp: 0,
            RedBag_Blessing_Open: 0,
            UserOpenRedBag: 0,
            CreateRoom_VipLevel: 0,
            HaoJiao_IsBuy: 0,
            Open_MpIcon: 0,
            Open_Give: 0,
            BindWeChat: 0,
            AdReward1LeaveCount: 0,
            BankMoney: 0,
            BankState: 0,
            IsOpenRank: 0,
            OpenRankNeedVip: 0,
            ShowGuild: 0,
            ShowCangku: 0,
            ShowXuanYan: 0,
            QTTYiYuanGouOpen: 0,
            QTTYiYuanFuGouOpen: 0,
            BindThird: 0,
            WxSubPlafs: ["WxSubPlafInfo"]
        },
        WxSubPlafInfo: {
            SubType: 0,
            PlafIds: ""
        },
        GetUserInfoReq: {},
        GetUserInfoRep: {
            UserId: 0,
            AvatarID: 0,
            Money1: 0,
            Money2: 0,
            Money3: 0,
            Nick: "",
            Sex: 0,
            SMRZ: 0,
            PayRmb: 0,
            Phone: "",
            Alms: 0,
            FirstGift: 0,
            FcmState: 0,
            FcmTime: 0,
            FcmOfflineTime: 0,
            BindPhone: 0,
            DrawTimes: 0,
            OpenKF: 0,
            KFDetail: "",
            NeedFcm: 0,
            OpenChat: 0,
            ShopCW: "",
            Headimg: "",
            ThisTimeScore: 0,
            OpenFcm: 0,
            IsOpenGive: 0,
            ChangeNameNeedPsw: 0,
            OpenRealName: 0,
            ShopCZ: 0,
            UserVersion: "",
            AdLeftTimes: 0,
            DrawShareTimes: 0,
            PigShareTimes: 0,
            VipLevel: 0,
            VipSceneTime: 0,
            FirstGiftOne: 0,
            OpenRedBag: 0,
            Money6: 0,
            OpenTSGame: 0,
            OpenXSYD: 0,
            OpenGiveBtn: 0,
            TeJiaGift: 0,
            TeJiaGift2: 0,
            NewSevenDay: "",
            DaysFromReg: 0,
            KanJiaLiBaoID: 0,
            KanJiaLiBaoNexID: 0,
            KanJiaLiBaoNeedNum: 0,
            JiuJiJinRemainTimes: 0,
            OpenShareBtn: 0,
            QttFirstGiftOneSG: 0,
            QttFirstGiftOneFG: 0,
            WxSubRewardNum: 0,
            WxSubStatus: 0,
            NewPlayerCanExchangeNotice: 0,
            FirstGiftOneSG: 0,
            OpenMatchShare: 0,
            ShowShakeUserId: 0,
            OpenRedActivity: 0,
            IsAlreadyRedDraw: 0,
            Money10: 0,
            CanBuyDoubleEleven: 0,
            WxSubStatusStr: "",
            TurntableActivitySwitch: 0,
            IsOpenRedDrawNewGuide: 0
        },
        GetUserBagReq: {},
        BagInfo: {
            ItemId: 0,
            ItemNum: 0,
            IsInvalid: 0,
            IsNew: 0
        },
        GetUserBagRep: {
            BagList: ["BagInfo"]
        },
        GiveReq: {
            GiveUserId: 0,
            ItemId: 0,
            ItemNum: 0
        },
        GiveRep: {
            Tag: 0,
            MsgId: 0,
            MsgParam: "",
            ItemId: 0,
            ItemNum: 0
        },
        GetGiveUserInfoReq: {
            SearchValue: ""
        },
        GetGiveUserInfoRep: {
            UserId: 0,
            Nick: "",
            VipLevel: 0,
            Sex: 0,
            AvatarID: 0,
            AvatarUrl: "",
            Tag: 0,
            MsgId: 0
        },
        GetMailListReq: {},
        MailInfo: {
            MaiId: 0,
            Title: "",
            MailType: 0,
            LeftTime: 0,
            IsRead: 0,
            IsReceive: 0,
            IsJDCard: 0
        },
        MailAttachmentInfo: {
            ItemId: 0,
            ItemNum: 0,
            ItemValid: 0
        },
        MailDetailInfo: {
            MaiId: 0,
            Title: "",
            SendUserId: "",
            SendNick: "",
            MailContent: "",
            SendTime: 0,
            AttachmentList: ["MailAttachmentInfo"],
            IsJDCard: 0
        },
        GetMailListRep: {
            Tag: 0,
            MsgID: 0,
            DeleteTag: 0,
            MailList: ["MailInfo"]
        },
        GetMailDetailReq: {
            MailId: 0
        },
        GetMailDetailRep: {
            Tag: 0,
            MsgID: 0,
            Mail: "MailDetailInfo"
        },
        GetMailAttachmentReq: {
            MailId: 0
        },
        AttchMailInfo: {
            MailId: 0,
            ItemString: ""
        },
        GetMailAttachmentRep: {
            Tag: 0,
            MsgId: 0,
            AttchMailList: ["AttchMailInfo"]
        },
        DelMailReq: {
            MailId: 0
        },
        DelMailRep: {
            Tag: 0,
            MsgId: 0,
            MsgParam: ""
        },
        ReportUserNewMail: {},
        GetDrawCfgReq: {},
        DrawInfo: {
            Id: 0,
            ItemId: 0,
            Count: 0,
            Sort: 0
        },
        GetDrawCfgRep: {
            Tag: 0,
            MsgId: 0,
            Draw: ["DrawInfo"]
        },
        DrawReq: {
            multiple: 0
        },
        DrawRep: {
            Tag: 0,
            MsgId: 0,
            Id: 0,
            ItemId: 0,
            ItemCount: 0,
            ShareTimes: 0,
            DrawTimes: 0
        },
        GetDrawReq: {
            Num: 0
        },
        GetDrawRep: {
            Tag: 0,
            MsgId: 0,
            Id: 0,
            ItemId: 0,
            ItemCount: 0,
            ShareTimes: 0,
            DrawTimes: 0
        },
        ReportRed: {},
        SceneCfg: {
            SceneId: 0,
            IsOpen: 0,
            CannonsMul: ["int32"],
            MinGold: 0,
            MaxGold: 0,
            CannonDef: "",
            VipLevel: 0
        },
        GetSceneCfgReq: {},
        GetSceneCfgRep: {
            SceneList: ["SceneCfg"]
        },
        GetShopCityInfoReq: {
            CpsId: 0
        },
        ShopCityInfo: {
            GoodsId: 0,
            Discount: 0
        },
        GetShopCityInfoRep: {
            List: ["ShopCityInfo"]
        },
        GetAddressInfoReq: {},
        GetAddressInfoRep: {
            Name: "",
            PhoneNum: "",
            Province: "",
            City: "",
            Zone: "",
            Address: ""
        },
        ExchagneReq: {
            ExchagneId: 0,
            ExchagneType: 0,
            Name: "",
            PhoneNum: "",
            Province: "",
            City: "",
            Zone: "",
            Address: "",
            a: 0,
            IDCard: ""
        },
        ExchagneRep: {
            Tag: 0,
            MsgId: 0,
            MsgParam: "",
            Item: "ItemInfo"
        },
        DuplicateLoginSys: {
            UserId: 0,
            MsgId: 0
        },
        ReportDuplicateLogin: {
            MsgId: 0
        },
        OpenItmeReq: {
            ItemId: 0,
            ItemNum: 0
        },
        OpenItmeRep: {
            Tag: 0,
            MsgId: 0,
            Item: ["ItemInfo"]
        },
        EditNameReq: {
            Name: "",
            PSW: "",
            RePSW: ""
        },
        EditNameRep: {
            Tag: 0,
            MsgId: 0,
            Name: ""
        },
        EditNameNoPswReq: {
            Name: ""
        },
        EditNameNoPswRep: {
            Tag: 0,
            MsgId: 0,
            Name: ""
        },
        RealNameReq: {
            RealName: "",
            IdCard: ""
        },
        RealNameRep: {
            Tag: 0,
            MsgId: 0,
            NeedFcm: 0
        },
        GetExchangeLogReq: {
            Page: 0,
            ExchangeType: 0
        },
        ExchangeLog: {
            ExchangeId: 0,
            CreateTime: "",
            Status: "",
            ExchangeType: 0
        },
        GetExchangeLogRep: {
            List: ["ExchangeLog"],
            TotalNum: 0
        },
        GetRedPointInfoReq: {},
        GetRedPointInfoRep: {
            bagRed: 0,
            mailRed: 0,
            actRed: 0,
            inviteRed: 0,
            SignRed: 0,
            CashRedRed: 0,
            AchTask: 0
        },
        DelBagRedPointReq: {
            ItemId: 0
        },
        DelBagRedPointRep: {
            Tag: 0,
            MsgId: 0
        },
        ChatReq: {
            ChatType: 0,
            ChatContent: ""
        },
        ChatRep: {
            Tag: 0,
            MsgId: 0,
            UserId: 0,
            ChatType: 0,
            ChatAvatar: 0,
            ChatHeadimg: "",
            ChatNick: "",
            ChatContent: "",
            Sex: 0,
            VipLevel: 0
        },
        RoomChatReq: {
            ChatType: 0,
            ChatContent: ""
        },
        RoomChatRep: {
            Tag: 0,
            MsgId: 0,
            UserId: 0,
            ChatType: 0,
            ChatAvatar: 0,
            ChatHeadimg: "",
            ChatNick: "",
            ChatContent: "",
            Sex: 0,
            VipLevel: 0
        },
        ReportNormalNotice: {
            MsgId: 0,
            MsgParam: ""
        },
        ReportSystemNotice: {
            MsgContent: ""
        },
        GetUserNickReq: {
            UserId: 0
        },
        GetUserNickRep: {
            Tag: 0,
            MsgId: 0,
            Nick: ""
        },
        GetUserMoneyReq: {},
        GetUserMoneyRep: {
            Money1: 0,
            Money2: 0,
            Money3: 0,
            Money6: 0,
            Money10: 0
        },
        BindPhoneReq: {
            Phone: "",
            PhoneCode: ""
        },
        BindPhoneRep: {
            Tag: 0,
            MsgId: 0,
            Phone: ""
        },
        GetUserInviteCodeReq: {},
        GetUserInviteCodeRep: {
            Tag: 0,
            SelfInviteCode: 0,
            InviteTime: 0,
            IsInvited: 0,
            ItemList: "",
            NeedLottery: 0
        },
        SetUserInviteCodeReq: {
            InviteCode: 0
        },
        SetUserInviteCodeRep: {
            Tag: 0,
            MsgId: 0
        },
        GetUserGmkReq: {},
        GetUserGmkRep: {
            Num: 0
        },
        ChangeAvaterReq: {
            AvaterId: 0
        },
        ChangeAvaterRep: {
            Tag: 0,
            MsgId: 0,
            AvaterId: 0
        },
        GetBindPhoneCodeReq: {
            Phone: ""
        },
        GetBindPhoneCodeRep: {
            Tag: 0,
            MsgId: 0
        },
        CpsLoginReq: {},
        CpsLoginRep: {},
        GetNoticeListReq: {},
        NoticeInfo: {
            ID: 0,
            Title: ""
        },
        GetNoticeListRep: {
            List: ["NoticeInfo"]
        },
        GetNoticeDetailReq: {
            ID: 0
        },
        GetNoticeDetailRep: {
            Title: "",
            CreateTime: "",
            Content: ""
        },
        ReportFcmMsg: {
            fcmCode: 0,
            fcmOnlineTime: 0
        },
        GetUserAlmsReq: {
            Num: 0
        },
        GetUserAlmsRep: {
            Tag: 0,
            MsgId: 0,
            AlmsTime: 0
        },
        PayResRep: {
            Tag: 0,
            MsgId: 0,
            GoodsId: 0,
            MsgParam: "",
            Item: ["ItemInfo"],
            WechatId: "",
            QRCodeUrl: "",
            IsSend: 0
        },
        GetShopCWReq: {},
        GetShopCWRep: {
            Param: ""
        },
        GetShopCZReq: {},
        GetShopCZRep: {
            GoodsId: 0
        },
        GetUserGoldRankReq: {
            Page: 0,
            PageSize: 0,
            Type: 0
        },
        GoldRankMsg: {
            No: 0,
            Nick: "",
            UserId: 0,
            GoldNum: 0,
            Sex: 0,
            AvatarID: 0,
            AvatarUrl: "",
            VipLevel: 0
        },
        GetUserGoldRankRep: {
            Tag: 0,
            TotalPage: 0,
            CurrentPage: 0,
            TotalNum: 0,
            RankMsg: ["GoldRankMsg"],
            MsgId: 0
        },
        GetFishGoldRankReq: {
            Page: 0,
            PageSize: 0
        },
        FishGoldRankMsg: {
            No: 0,
            Nick: "",
            UserId: 0,
            GoldNum: 0,
            Sex: 0,
            AvatarID: 0,
            AvatarUrl: "",
            VipLevel: 0,
            Reward: ""
        },
        GetFishGoldRankRep: {
            Tag: 0,
            TotalPage: 0,
            CurrentPage: 0,
            TotalNum: 0,
            RankMsg: ["FishGoldRankMsg"],
            MsgId: 0
        },
        GetMallListReq: {},
        MallInfo: {
            GoodsId: 0,
            GoodsName: "",
            MallType: 0,
            Type: 0,
            Sort: 0,
            CostNum: 0,
            Detail: "",
            PicID: 0,
            GroupID: 0,
            BasePrice: 0,
            ExtraField: ""
        },
        GetMallListRep: {
            List: ["MallInfo"]
        },
        ExchagneInfo: {
            ExchangeId: 0
        },
        GetExchangeListReq: {},
        GetExchangeListRep: {
            LotteryList: ["ExchagneInfo"],
            ScoreList: ["ExchagneInfo"],
            RedDrawList: ["ExchagneInfo"],
            IsRedDrawNeedCheck: 0
        },
        DiamondExchageGoodReq: {
            GoodsId: 0
        },
        DiamondExchageGoodRep: {
            Tag: 0,
            MsgId: 0
        },
        ItemInfo: {
            ItemId: 0,
            ItemNum: 0,
            ItemValid: 0
        },
        ActItemInfo: {
            Idx: 0,
            CurrValue: 0,
            MaxValue: 0,
            ObjId: 0,
            State: 0,
            Item: ["ItemInfo"],
            Param1: 0,
            CurrInt64Value: 0,
            MaxInt64Value: 0,
            Condition: "",
            ShowCon: ""
        },
        ActRankInfo: {
            Rank: 0,
            UserId: 0,
            Nick: "",
            VipLevel: 0,
            Value: 0,
            AvatarId: 0,
            AvatarUrl: "",
            Item: ["ItemInfo"]
        },
        ActMysticalStoreInfo: {
            Idx: 0,
            SourceItemId: 0,
            SourceItemNum: 0,
            TargetItemId: 0,
            TargetItemNum: 0,
            LeftNum: 0
        },
        ActHitMonsterInfo: {
            DayFlowingWater: 0,
            MaxFlowingWater: 0,
            Task1State: 0,
            Task2State: 0,
            DantouId: 0,
            Item: ["ItemInfo"],
            Task1Item: ["ItemInfo"],
            Task2Item: ["ItemInfo"]
        },
        ActTreasureBoxInfo: {
            PreviewItem: ["ItemInfo"],
            FinalItem: "ItemInfo",
            CNum: 0,
            SNum: 0,
            CGetNum: 0,
            SBuyNum: 0,
            SGetNum: 0,
            PayRMB: 0,
            BuyPrice: 0
        },
        ActTreasureBoxLog: {
            UserId: 0,
            AvatarId: 0,
            AvatarUrl: "",
            VipLevel: 0,
            Nick: "",
            Date: "",
            FinalItem: "ItemInfo",
            Sex: 0
        },
        ActDiscountInfo: {
            Id: 0,
            PrizeItem: ["ItemInfo"],
            ItemName: "",
            CoinType: 0,
            OldValue: 0,
            NewValue: 0,
            GoodId: 0,
            LeftTimes: 0
        },
        DivideItem: {
            ItemId: 0,
            ItemNum: 0,
            Times: 0
        },
        DivideGoldInfo: {
            Items: ["ItemInfo"],
            Limit1: 0,
            LimitGet: 0,
            DivideNum: 0,
            NeedItems: ["DivideItem"],
            DivideGold: 0
        },
        ActListInfo: {
            ActId: 0,
            ActType: 0,
            ActTitle: "",
            CanGet: 0,
            Sort: 0
        },
        GetActListReq: {},
        GetActListRep: {
            Lists: ["ActListInfo"]
        },
        GetActInfoReq: {
            ActId: 0
        },
        GetActInfoRep: {
            ActId: 0,
            ActType: 0,
            Item: ["ActItemInfo"],
            IsLoginGet: 0,
            LoginItem: ["ItemInfo"],
            StartDate: 0,
            EndDate: 0,
            Desc: "",
            ActRankInfo: ["ActRankInfo"],
            MysticalStoreInfo: ["ActMysticalStoreInfo"],
            ActHitMonsterInfo: "ActHitMonsterInfo",
            ActBg: 0,
            ActTreasureBoxInfo: "ActTreasureBoxInfo",
            ActDiscountInfo: ["ActDiscountInfo"],
            DivideGold: "DivideGoldInfo",
            Param: "",
            JinLiInfo: "ActJinLiInfo"
        },
        ActJinLiInfo: {
            DownNum: 0,
            TotalNum: 0,
            LuckNums: ["ActJinLiLuckNum"],
            JinLiLists: ["ActJinLiList"],
            RewardNum: 0,
            NeedChargeNum: 0
        },
        ActJinLiLuckNum: {
            LuckNum: 0,
            Status: 0,
            JinLiReward: ""
        },
        ActJinLiList: {
            NickName: "",
            UserId: 0,
            JinLiReward: "",
            HeadImg: ""
        },
        GetHYDTInfoReq: {
            ActId: 0
        },
        GetHYDTInfoRep: {
            leaveCount: 0,
            Item: ["HYDTItemInfo"]
        },
        HYDTItemInfo: {
            ItemId: 0,
            ItemNum: 0,
            ItemValid: 0,
            ItemScore: 0
        },
        GetActPrizeReq: {
            ActId: 0,
            Idx: 0,
            Param: 0,
            Param1: 0
        },
        GetActPrizeRep: {
            Tag: 0,
            MsgId: 0,
            Item: ["ItemInfo"],
            IsReal: 0,
            ActType: 0
        },
        ActDayLoginInfo: {
            Day: 0,
            Item: ["ItemInfo"]
        },
        ActShenQiBaoInfo: {
            Day: 0,
            DepRMB: 0,
            Item: ["ItemInfo"]
        },
        ActSuperMatchInfo: {
            Idx: 0,
            Day: 0,
            score: 0,
            Item: ["ItemInfo"]
        },
        ActCollectItemInfo: {
            Idx: 0,
            Condition: "",
            ShowCon: "",
            Item: ["ItemInfo"]
        },
        ActHappyInfo: {
            Idx: 0,
            Day: 0,
            Score: 0,
            LeaveCount: 0,
            Item: ["ItemInfo"]
        },
        ActDayPayInfo: {
            Day: 0,
            Item: ["ItemInfo"]
        },
        ActPayContinuityInfo: {
            Rmb: 0,
            Item: ["ItemInfo"]
        },
        ActDayUserItemInfo: {
            Idx: 0,
            Day: 0,
            ItemId: 0,
            Count: 0,
            Item: ["ItemInfo"]
        },
        ActMysticalStoreCfgInfo: {
            Idx: 0,
            SourceItem: "ItemInfo",
            TargetItem: "ItemInfo",
            LimitNum: 0,
            NeedCustomer: 0
        },
        GetTreasureBoxLogReq: {},
        GetTreasureBoxLogRep: {
            Tag: 0,
            MsgId: 0,
            Logs: ["ActTreasureBoxLog"]
        },
        TestReq: {
            RpcId: 0
        },
        TestRep: {
            RpcId: 0
        },
        CreatePayOrderReq: {
            CpsID: 0,
            PayChannel: 0,
            GoodsID: 0,
            BuyNum: 0,
            LoginVer: "",
            Ext: "",
            SPName: "",
            SdkVer: "",
            WechatSessionID: "",
            SendToUserID: 0,
            SendUserCpsID: 0
        },
        CreatePayOrderRep: {
            Tag: 0,
            MsgId: 0,
            Data: "",
            PayChannel: 0,
            MsgParam: "",
            SendToUserId: 0,
            GoodsId: 0
        },
        GetSharePrizeReq: {},
        GetSharePrizeRep: {
            Tag: 0,
            MsgId: 0
        },
        ReportTreasureState: {
            UserId: 0,
            State: 0,
            FishType: 0,
            AddGold: 0
        },
        GetTreasureInfoReq: {},
        GetTreasureInfoRep: {
            Tag: 0,
            MsgId: 0,
            Golds: ["int32"]
        },
        GetTreasurePrizeReq: {},
        GetTreasurePrizeRep: {
            Tag: 0,
            MsgId: 0
        },
        TreasureCancleReq: {},
        TreasureCancleRep: {
            Tag: 0
        },
        SaveUserVersionReq: {
            UserVersion: ""
        },
        SaveUserExtDataReq: {
            UserSex: 0,
            Province: "",
            City: ""
        },
        GetWechatInviteInformationReq: {
            Param: ""
        },
        TaskData: {
            TaskId: 0,
            TaskInfo: 0
        },
        GetWechatInviteInformationRep: {
            Tag: 0,
            InviteTime: 0,
            TaskInfo: ["TaskData"],
            TotalItemList: "",
            Param: ""
        },
        GetWechatInvitePrizeReq: {
            TaskId: 0
        },
        GetWechatInvitePrizeRep: {
            Tag: 0,
            TaskId: 0,
            PrizeItem: ""
        },
        GetAdDrawPrizeReq: {},
        GetAdDrawPrizeRep: {
            Tag: 0,
            MsgId: 0,
            ItemId: 0,
            ItemNum: 0,
            LeftTimes: 0
        },
        GetNewLotteryReq: {},
        GetNewLotteryRep: {
            Tag: 0,
            MsgId: 0,
            AddMoney2: 0,
            TotalMoney2: 0
        },
        GetPigShareCfgReq: {},
        GetPigShareCfgRep: {
            Tag: 0,
            Item: "",
            ShareTimes: 0,
            MsgId: 0
        },
        GetPigSharePrizeReq: {
            Num: 0
        },
        GetPigSharePrizeRep: {
            Tag: 0,
            Item: "",
            ShareTimes: 0,
            MsgId: 0
        },
        AddDrawShareTimesReq: {},
        AddDrawShareTimesRep: {
            Tag: 0,
            DrawTimes: 0,
            ShareTimes: 0,
            MsgId: 0
        },
        GetSignDataReq: {},
        PrizeState: {
            Id: 0,
            State: 0
        },
        GetSignDataRep: {
            TotalDay: 0,
            Week: 0,
            Items: ["PrizeState"]
        },
        GetSignPrizeReq: {
            PrizeId: 0,
            Num: 0
        },
        GetSignPrizeRep: {
            Tag: 0,
            MsgId: 0,
            ItemId: 0,
            ItemNum: 0,
            PrizeId: 0,
            Num: 0
        },
        GetUserCannonReq: {},
        CannonInfo: {
            Id: 0,
            ExpiryTime: 0,
            IsUse: 0
        },
        GetUserCannonRep: {
            Items: ["CannonInfo"]
        },
        UseCannonReq: {
            CannonId: 0
        },
        UseCannonRep: {
            Tag: 0,
            MsgId: 0,
            CannonId: 0
        },
        UseCannonSuccessReq: {
            CannonId: 0
        },
        ReportCannonSuccess: {
            CannonId: 0,
            UserId: 0
        },
        GetUserWingReq: {},
        WingInfo: {
            Id: 0,
            ExpiryTime: 0,
            IsUse: 0
        },
        GetUserWingRep: {
            Items: ["WingInfo"]
        },
        UseWingReq: {
            WingId: 0
        },
        UseWingRep: {
            Tag: 0,
            MsgId: 0,
            WingId: 0
        },
        UseWingSuccessReq: {
            WingId: 0
        },
        ReportWingSuccess: {
            WingId: 0,
            UserId: 0
        },
        ReportVipUp: {
            VipLevel: 0
        },
        ReportVipLoginGift: {
            VipLevel: 0,
            GoldRepair: 0
        },
        ShakeReq: {},
        ShakeRep: {
            Tag: 0,
            MsgId: 0,
            ShakeTimes: 0,
            Gold: 0,
            OldPrice: 0,
            NewPrice: 0,
            GoodsId: 0
        },
        ReportSuperMatchSettlement: {
            Score: 0,
            FinalScore: 0,
            MaxScore: 0,
            Rank: 0,
            PrizeId: 0,
            PrizeNum: 0,
            LeftChallengeShareTimes: 0,
            LeftFreeTimes: 0
        },
        GetSuperMatchRankReq: {},
        SuperMatchRankInfo: {
            Rank: 0,
            Nick: "",
            Score: 0,
            VipLevel: 0,
            PrizeItemId: 0,
            PrizeItemNum: 0
        },
        GetSuperMatchRankRep: {
            Score: 0,
            Rank: 0,
            CurrDay: "",
            DayRank: ["SuperMatchRankInfo"],
            WeekRank: ["SuperMatchRankInfo"],
            ActTime: "",
            BulletNum: 0,
            LeftTimes: 0,
            DayPrize: 0,
            LeftGoldTimes: 0,
            IsSettlement: 0,
            LeftChallengeShareTimes: 0
        },
        ReportSuperMatchScorePrize: {
            PrizeId: 0,
            PrizeNum: 0
        },
        ReportMatchSettlement: {
            Score: 0,
            MaxScore: 0,
            Rank: 0,
            JoinNum: 0,
            BuyGold: 0,
            LeftTimes: 0,
            LeftBuyTimes: 0,
            LeftChallengeShareTimes: 0
        },
        ReportMatchBulletNum: {
            LeftShareTimes: 0,
            BulletNumByShare: 0,
            GameTimesId: 0,
            NowTime: "",
            ShareId: 0
        },
        GetMatchRankReq: {
            MatchType: 0
        },
        MatchRankInfo: {
            Rank: 0,
            Nick: "",
            Score: 0,
            VipLevel: 0,
            PrizeItemId: 0,
            PrizeItemNum: 0,
            UserId: 0,
            Sex: 0,
            AvatarId: 0,
            AvatarUrl: ""
        },
        GetMatchRankRep: {
            MaxScore: 0,
            Rank: 0,
            DayRank: ["MatchRankInfo"],
            BuyGold: 0,
            LeftTimes: 0,
            LeftBuyTimes: 0,
            BulletNum: 0,
            StartTime: "",
            EndTime: "",
            State: 0,
            IsSettlement: 0,
            LeftChallengeShareTimes: 0
        },
        ShareReq: {},
        GetCashRedReq: {},
        CashRedData: {
            Id: 0,
            FinishNum: 0,
            GetNum: 0,
            MaxNum: 0,
            Cash: 0
        },
        GetCashRedRep: {
            Cash: 0,
            Datas: ["CashRedData"]
        },
        GetCashRedPrizeReq: {
            Id: 0
        },
        GetCashRedPrizeRep: {
            Id: 0,
            Tag: 0,
            MsgId: 0,
            Cash: 0
        },
        GetCarveUpDataReq: {},
        GetCarveUpDataRep: {
            TotalNum: 0,
            Score: 0,
            Nicks: [],
            CurrDay: ""
        },
        ReportSuperMatchAccetpTask: {
            TaskId: 0
        },
        ReportSuperMatchChangeTask: {
            FishId: 0,
            KillNum: 0
        },
        ReportSuperMatchCompleteTask: {
            TaskId: 0,
            State: 0
        },
        TaskProcess: {
            Id: 0,
            Num: 0
        },
        ReportNewTaskAccept: {
            TaskId: 0,
            Datas: ["TaskProcess"]
        },
        ReportNewTaskChange: {
            Datas: ["TaskProcess"]
        },
        ReportNewTaskComplete: {
            TaskId: 0
        },
        NewPlayerTaskProcess: {
            TaskId: 0,
            Num: 0,
            Status: 0
        },
        ReportNewPlayerTaskAccept: {
            TaskId: 0,
            CanGetAll: 0,
            Datas: ["NewPlayerTaskProcess"]
        },
        ReportNewPlayerTaskChange: {
            TaskId: 0,
            Datas: ["NewPlayerTaskProcess"]
        },
        ReportNewPlayerTaskGetRewardReq: {
            TaskId: 0
        },
        ReportNewPlayerTaskGetRewardRep: {
            Tag: 0,
            MsgId: 0,
            MsgParam: "",
            TaskId: 0,
            Reward: ""
        },
        RedeemCodeReq: {
            cdkey: "",
            activityId: 0
        },
        RedeemCodeRep: {
            Tag: 0,
            RewardList: "",
            MsgId: 0,
            activityId: 0
        },
        FishExchangeReq: {
            ExchagneId: 0,
            Phone: ""
        },
        FishExchangeRep: {
            Tag: 0,
            MsgId: 0,
            ItemId: 0,
            ItemNum: 0,
            Money5Num: 0,
            IsReal: 0
        },
        SetAddressInfoReq: {
            Name: "",
            PhoneNum: "",
            Province: "",
            City: "",
            Zone: "",
            Address: ""
        },
        SetAddressInfoRep: {
            Tag: 0,
            MsgId: 0
        },
        FishExchangeList: {
            ExchangeId: 0,
            ItemId: 0,
            GoodsName: "",
            ItemNum: 0,
            SORT: 0,
            Money5Num: 0,
            NeedCondition: 0,
            Status: 0
        },
        GetFishExchangeListReq: {},
        GetFishExchangeListRep: {
            Tag: 0,
            MsgId: 0,
            Money5Num: 0,
            BindPhone: 0,
            Datas: ["FishExchangeList"]
        },
        GetFishExchangeLogReq: {
            Page: 0,
            PageSize: 0
        },
        FishExchangeLog: {
            GoodsName: "",
            CreateTime: ""
        },
        GetFishExchangeLogRep: {
            Tag: 0,
            MsgId: 0,
            TotalNum: 0,
            CurrentPage: 0,
            TotalPage: 0,
            List: ["FishExchangeLog"]
        },
        GewCityStartInfoReq: {},
        GewCityStartInfoRep: {
            MissionID: 0,
            RemainBrickNum: 0,
            BetNum: ["int32"]
        },
        GewCityBeginGameReq: {
            BetNum: 0
        },
        GewCityBeginGameRep: {
            Tag: 0,
            MsgID: 0,
            MsgParam: "",
            MissionID: 0,
            RoundID: 0,
            RemainBreakNum: 0,
            GewList: ["int32"]
        },
        GewCityRemoveLogReq: {},
        GewCityRemoveLogRep: {
            logs: ["GewCityRemoveLogInfo"]
        },
        GewCityRemoveLogInfo: {
            RoundID: 0,
            prizeTimeStamp: 0,
            ComboNum: 0,
            MaxRemoveNum: 0,
            Score: 0
        },
        GewCityFinalRewardListReq: {},
        GewCityFinalRewardListRep: {
            Tag: 0,
            MsgID: 0,
            MsgParam: "",
            DisplayItemID: 0,
            DisplayItemNum: 0,
            FinalPrizeList: ["GewCityFinalPrizeInfo"]
        },
        GewCityFinalPrizeInfo: {
            PrizeID: 0,
            PrizeItem: "ItemInfo"
        },
        GewCityFinalRewardGetReq: {},
        GewCityFinalRewardGetRep: {
            Tag: 0,
            MsgID: 0,
            MsgParam: "",
            PrizeID: 0,
            PrizeItem: "ItemInfo"
        },
        GewCityEndGameReq: {
            RoundID: 0
        },
        GewCityEndGameRep: {},
        ReportNewRedBag: {
            RedBagID: 0
        },
        ReportRedBagFinish: {
            RedBagID: 0
        },
        SendRedBagReq: {
            Total: 0,
            BagNum: 0,
            Slogan: ""
        },
        SendRedBagRep: {
            Tag: 0,
            MsgID: 0,
            RestTime: 0
        },
        GetRedBagReq: {
            RedBagID: 0
        },
        GetRedBagRep: {
            Tag: 0,
            MsgID: 0,
            GetTime: 0,
            UserID: 0,
            VipLevel: 0,
            Headimg: "",
            Nick: "",
            Money: 0,
            Slogan: "",
            RedID: 0
        },
        FriendsCommon: {
            UserID: 0,
            Headimg: "",
            Vip: 0,
            OnlineStatus: 0,
            Nick: "",
            AvatarId: 0
        },
        CustomerServiceChatReq: {
            ChatMsg: ""
        },
        CustomerServiceChatRep: {
            Tag: 0,
            MsgID: 0,
            MsgParam: "",
            ChatMsg: "",
            CreateTime: ""
        },
        BrowserSendMessageToClientReq: {
            JsonData: ""
        },
        BrowserSendMessageToClientRep: {
            Tag: 0,
            MsgID: 0,
            MsgParam: "",
            UserID: 0,
            ChatMsg: "",
            CreateTime: ""
        },
        CustomerServiceChat: {
            ReceiveID: 0,
            ChatMsg: "",
            CreateTime: ""
        },
        CustomerServiceChatListReq: {},
        CustomerServiceChatListRep: {
            Tag: 0,
            MsgID: 0,
            MsgParam: "",
            List: ["CustomerServiceChat"],
            FirstChatRewardStatus: 0
        },
        UpdateCustomerServiveChatReq: {},
        UpdateCustomerServiveChatRep: {
            Tag: 0
        },
        FriendsListReq: {},
        FriendsListRep: {
            Tag: 0,
            MsgID: 0,
            FirendList: ["FriendsCommon"]
        },
        ApplyFriendsListReq: {},
        ApplyFriendsListRep: {
            Tag: 0,
            MsgID: 0,
            ApplyFriendsList: ["FriendsCommon"]
        },
        BlackFriendsListReq: {},
        BlackFriendsListRep: {
            Tag: 0,
            MsgID: 0,
            BlackFriendsList: ["FriendsCommon"]
        },
        FriendsActionReq: {
            Type: 0,
            TargetUserID: 0
        },
        FriendsActionRep: {
            Tag: 0,
            MsgID: 0,
            MsgParam: "",
            UserID: 0,
            AvatarId: 0,
            Vip: 0,
            OnlineStatus: 0,
            Nick: "",
            Type: 0
        },
        FriendsAnswerReport: {
            Tag: 0,
            MsgID: 0,
            MsgParam: "",
            Type: 0,
            ActionUserId: 0,
            Friend: "FriendsCommon"
        },
        ChatPersonalReq: {
            userID: 0,
            ChatMsg: ""
        },
        ChatPersonalRep: {
            Tag: 0,
            MsgID: 0,
            MsgParam: "",
            StartUserID: 0,
            TargetUserID: 0,
            CreateTime: "",
            ChatMsg: "",
            StartVip: 0,
            StartNick: "",
            StartHeadImg: "",
            StartAvatarId: 0
        },
        SceneFaceReq: {
            FaceID: 0,
            ReceiveID: 0
        },
        SceneFaceRep: {
            Tag: 0,
            MsgID: 0
        },
        SceneFaceReport: {
            Tag: 0,
            MsgID: 0,
            FaceID: 0,
            SendUserID: 0,
            ReceiveID: 0
        },
        CheckFriendReq: {
            TargetUserID: 0
        },
        CheckFriendRep: {
            Tag: 0,
            Type: 0
        },
        DaNaoLongGongStartInfoReq: {},
        DaNaoLongGongStartInfoRep: {
            RoundID: 0,
            BossRemainHP: 0,
            CurBetNum: 0,
            BetNumList: ["int32"],
            SkillList: ["int32"]
        },
        DaNaoLongGongBeginGameReq: {
            BetNum: 0
        },
        DaNaoLongGongBeginGameRep: {
            Tag: 0,
            MsgID: 0,
            MsgParam: "",
            RoundID: 0,
            BossRemainHP: 0,
            SkillList: ["int32"]
        },
        DaNaoLongGongRemoveLogReq: {},
        DaNaoLongGongRemoveLogRep: {
            logList: ["DaNaoLongGongRemoveLogInfo"]
        },
        DaNaoLongGongRemoveLogInfo: {
            RoundID: 0,
            prizeTimeStamp: 0,
            ComboNum: 0,
            Score: 0
        },
        DaNaoLongGongGameFinishReq: {},
        DaNaoLongGongGameFinishRep: {
            Tag: 0,
            MsgID: 0,
            MsgParam: "",
            bossIsDead: 0,
            bossMul: 0,
            rewardGold: 0
        },
        DaNaoLongGongEndGameReq: {
            RoundID: 0
        },
        DaNaoLongGongEndGameRep: {},
        GetZillionaireStartInfoReq: {},
        GetZillionaireStartInfoRep: {
            PPos: 0,
            RPos: 0,
            PrizeMul: 0,
            Grid: ["int32"],
            Turn: 0,
            BetNum: 0,
            BetList: "",
            LeaveCount: 0
        },
        ZillionaireThrowReq: {
            BetNum: 0
        },
        ZillionaireThrowRep: {
            Tag: 0,
            MsgId: 0,
            Num: 0,
            RNum: 0
        },
        GetZillionairePrizeReq: {},
        GetZillionairePrizeRep: {
            Tag: 0,
            MsgId: 0,
            Gold: 0,
            Star: 0,
            Rank: 0,
            LastRank: 0
        },
        GetZillionaireRankReq: {},
        ZillionaireRankData: {
            Rank: 0,
            Nick: "",
            Star: 0,
            VipLevel: 0,
            Prize: ["ItemInfo"],
            UserId: 0,
            Sex: 0,
            AvatarId: 0,
            AvatarUrl: ""
        },
        GetZillionaireRankRep: {
            Ranks: ["ZillionaireRankData"]
        },
        ZillionaireShareSuccessReq: {},
        ZillionaireShareSuccessRep: {
            Tag: 0,
            MsgId: 0
        },
        BindWeChatReq: {
            JsCode: "",
            Ext: "",
            Iv: "",
            HeadImg: "",
            Nick: ""
        },
        BindWeChatRep: {
            Tag: 0,
            Msg: 0
        },
        BindBaiduReq: {
            HeadImg: "",
            Nick: ""
        },
        BindBaiduRep: {
            Tag: 0,
            MsgId: 0
        },
        GetAdRewardReq: {
            type: 0
        },
        GetAdRewardRep: {
            Tag: 0,
            MsgId: 0,
            type: 0,
            leaveCount: 0
        },
        GetBankPrizeReq: {},
        GetBankPrizeRep: {
            Tag: 0,
            MsgId: 0,
            Gold: 0,
            State: 0
        },
        BankViewVideoReq: {},
        BankViewVideoRep: {
            Tag: 0,
            MsgId: 0,
            BankMoney: 0
        },
        AchTaskData: {
            TaskId: 0,
            TaskNum: 0
        },
        AchTaskFinishReq: {
            Type: 0
        },
        AchTaskFinishRep: {
            Tag: 0,
            MsgId: 0
        },
        AchTaskListReq: {},
        AchTaskListRep: {
            ActiveValue: 0,
            ActiveState: 0,
            Data: ["AchTaskData"],
            WeekActiveValue: 0,
            WeekActiveState: 0
        },
        AchTaskGetPrizeReq: {
            TaskId: 0
        },
        AchTaskGetPrizeRep: {
            Tag: 0,
            MsgId: 0,
            Item: ["ItemInfo"],
            TaskId: 0
        },
        AchTaskActivePrizeReq: {
            Type: 0
        },
        AchTaskActivePrizeRep: {
            Tag: 0,
            MsgId: 0,
            Item: ["ItemInfo"],
            Type: 0,
            State: 0
        },
        GetGoldPigPoolReq: {},
        GetGoldPigPoolRep: {
            Gold1: 0,
            Gold2: 0,
            Gold3: 0
        },
        GetGoldPigLogReq: {},
        GoldPigLog: {
            UserId: 0,
            Nick: "",
            VipLevel: 0,
            AddDate: 0,
            SceneId: 0,
            Per: 0,
            Gold: 0,
            Sex: 0,
            AvatarId: 0,
            AvatarUrl: ""
        },
        GetGoldPigLogRep: {
            Logs: ["GoldPigLog"],
            Top: "GoldPigLog"
        },
        ReportDTDBInfo: {
            leaveBuffCount: 0
        },
        GetDTDBBuffProReq: {},
        GetDTDBBuffProRep: {
            Tag: 0,
            MsgId: 0,
            buffType: 0
        },
        SendDTDBBuffOver: {},
        GetDTDBNoticeReq: {},
        GetDTDBNoticeRep: {
            noctice: ["GetDTDBNotice"]
        },
        GetDTDBNotice: {
            nick: "",
            itemID: 0,
            itemNum: 0,
            sceneId: 0
        },
        GetDTDBResultReq: {},
        GetDTDBResultRep: {
            itemID: 0,
            itemNum: 0
        },
        GetDTDBDataReq: {
            sceneId: 0
        },
        GetDTDBDataRep: {
            bullet: 0,
            score: 0
        },
        YouYiSaiCreateRoomReq: {
            RewardItemID: 0,
            PlayerNum: 0,
            PlayMinute: 0,
            TargetScore: 0,
            RewardNum: ""
        },
        YouYiSaiCreateRoomRep: {
            Tag: 0,
            MsgId: 0,
            MsgParam: ""
        },
        YouYiSaiSearchRoomReq: {
            RoomID: 0
        },
        YouYiSaiSearchRoomRep: {
            Tag: 0,
            MsgId: 0,
            MsgParam: "",
            RoomID: 0,
            RewardItemID: 0,
            PlayerNum: 0,
            PlayMinute: 0,
            TargetScore: 0,
            RewardNum: ""
        },
        YouYiSaiEnterRoomReq: {
            RoomID: 0
        },
        YouYiSaiEnterRoomRep: {
            Tag: 0,
            MsgId: 0,
            MsgParam: "",
            RoomID: 0,
            RewardItemID: 0,
            PlayerNum: 0,
            PlayMinute: 0,
            TargetScore: 0,
            RewardNum: "",
            PlayerInfos: ["YouYiSaiRoomPlayerInfo"]
        },
        YouYiSaiRoomPlayerInfo: {
            UserID: 0,
            Nick: "",
            IsOwner: 0,
            AvatarID: 0,
            AvatarUrl: ""
        },
        YouYiSaiRoomInfoUpd: {
            RoomID: 0,
            UpdType: 0,
            UserID: 0,
            Nick: "",
            AvatarID: 0,
            AvatarUrl: ""
        },
        YouYiSaiExitRoomReq: {
            RoomID: 0
        },
        YouYiSaiExitRoomRep: {
            Tag: 0,
            MsgId: 0,
            MsgParam: ""
        },
        YouYiSaiStartGameReq: {
            RoomID: 0
        },
        YouYiSaiStartGameRep: {
            Tag: 0,
            MsgId: 0,
            MsgParam: ""
        },
        YouYiSaiEndReport: {
            Tag: 0,
            MsgId: 0,
            MsgParam: "",
            info: ["YouYiSaiEndRewardInfo"]
        },
        YouYiSaiEndRewardInfo: {
            UserID: 0,
            Nick: "",
            Rank: 0,
            RewardItemId: 0,
            RewardItemNum: 0,
            AvatarID: 0,
            AvatarUrl: "",
            VipLevel: 0,
            Score: 0
        },
        WorldBossStateReport: {
            BossState: 0,
            RemainMilSec: 0,
            RemainHuDun: 0,
            MaxHuDun: 0,
            BossDie: 0
        },
        WorldBossCollisionReq: {
            BulletId: 0
        },
        WorldBossCollisionRep: {
            HitHuDunNum: 0,
            GetGold: 0,
            UserGold: 0
        },
        WorldBossRemainHuDunReport: {
            RemainHuDun: 0
        },
        WorldBossResultReq: {},
        WorldBossResultRep: {
            IsCurrent: 0,
            BossTime: "",
            LstInfo: ["WorldBossResultInfo"]
        },
        WorldBossResultInfo: {
            UserID: 0,
            Vip: 0,
            Nick: "",
            AvartarID: 0,
            AvatarUrl: "",
            Reward: "",
            Rank: 0
        },
        WorldBossCfgReq: {},
        WorldBossCfgRep: {
            BossMul: 0,
            MaxGold: 0,
            BossTime: ""
        },
        BindMeizhuReq: {
            Uid: "",
            ChannelId: 0
        },
        BindMeizhuRep: {
            Tag: 0,
            MsgId: 0,
            MsgParam: ""
        },
        BindThirdReq: {
            Uid: "",
            ChannelId: 0,
            HeadImg: "",
            Nick: ""
        },
        BindThirdRep: {
            Tag: 0,
            MsgId: 0,
            MsgParam: ""
        },
        GetMyFishFieldReq: {},
        GetMyFishFieldRep: {
            leaveTime: 0,
            depRmb: 0,
            giveTime: 0
        },
        UserStarInfo: {
            UserId: 0,
            HeadImg: "",
            Vip: 0,
            Nick: "",
            userStarType: 0,
            AvatarId: 0
        },
        GetUserStarRankReq: {
            Index: 0,
            IsChange: 0
        },
        GetUserStarRankRep: {
            Tag: 0,
            MsgId: 0,
            MsgParam: "",
            Index: 0,
            MoneyInfo: ["UserStarInfo"],
            BuyuInfo: ["UserStarInfo"],
            ActiveInfo: ["UserStarInfo"]
        },
        FirstServiceChatRewardReport: {
            reward: ""
        },
        GetBuyLiBaoStatusReq: {},
        GetBuyLiBaoStatusRep: {
            DailyLiBao: "",
            OnceLiBao: ""
        },
        DuiHuanLongZhuReq: {
            Num: 0
        },
        DuiHuanLongZhuRep: {
            Tag: 0,
            MsgId: 0,
            MsgParam: "",
            NewNum: 0
        },
        GetNewSevenDayRewardReq: {
            Day: 0
        },
        GetNewSevenDayRewardRep: {
            Tag: 0,
            MsgId: 0,
            MsgParam: "",
            Day: 0,
            Reward: ""
        },
        JiuJiJinStatusReq: {},
        JiuJiJinStatusRep: {
            RemainTimes: 0,
            RemainSec: 0,
            RewardGold: 0
        },
        JiuJiJinGetReq: {
            IsShared: 0
        },
        JiuJiJinGetRep: {
            Tag: 0,
            MsgId: 0,
            MsgParam: "",
            RemainTimes: 0,
            RemainSec: 0,
            RewardGold: 0
        },
        InviteInfoReq: {
            InviteType: 0,
            IntValues: ["int32"],
            StringValues: []
        },
        KanJiaLiBaoInfoReq: {},
        KanJiaLiBaoInfoRep: {
            KanJiaLiBaoID: 0,
            KanJiaLiBaoNexID: 0,
            KanJiaLiBaoNeedNum: 0,
            RedPoint: 0
        },
        JinBiBaoXiangInfoReport: {
            JinBiBaoXiangShareGet: 0,
            JinBiBaoXiangRewardTimes: 0,
            JinBiBaoXiangRewardGold: 0
        },
        JinBiBaoXiangGetReq: {
            IsShare: 0
        },
        JinBiBaoXiangGetRep: {
            Tag: 0,
            MsgId: 0,
            MsgParam: "",
            IsShare: 0,
            Reward: ""
        },
        WXSubscribeReq: {
            Sub: 0,
            SubType: 0
        },
        WXSubscribeRep: {
            Tag: 0,
            MsgId: 0,
            Item: ["ItemInfo"],
            SubType: 0,
            SubStatus: 0
        },
        GetMatchSettlementReq: {},
        GetOnlineRewardReq: {
            ID: 0
        },
        GetOnlineRewardRep: {
            Tag: 0,
            MsgId: 0,
            Id: 0
        },
        OnlineInfo: {
            ID: 0,
            Status: 0
        },
        GetOnlineInfoReq: {},
        GetOnlineInfoRep: {
            Tag: 0,
            MsgId: 0,
            LeaveTime: 0,
            info: ["OnlineInfo"]
        },
        MatchChallengeShareReq: {
            SceneId: 0,
            ShareType: 0
        },
        MatchChallengeShareRep: {
            Tag: 0,
            MsgId: 0,
            SceneId: 0,
            ShareType: 0
        },
        SendMatchShareReq: {
            UserId: 0,
            GameTimesId: 0,
            ShareTime: "",
            SceneId: 0,
            ShareId: 0
        },
        SendMatchShareRep: {
            BulletNum: 0
        },
        ReportRedDrawAccept: {
            CostGold: 0,
            RedpackNum: 0,
            CfgCosts: ["CfgCostGold"]
        },
        CfgCostGold: {
            Id: 0,
            CostGold: 0
        },
        ReportRedDrawChange: {
            CostGold: 0
        },
        GetInsideRedDrawReq: {
            RedDrawPosId: 0,
            IsNewPlayerLead: 0
        },
        GetInsideRedDrawRep: {
            Tag: 0,
            MsgId: 0,
            Reward: "",
            RedDrawPosId: 0,
            RedpackNum: 0,
            RedCostGold: 0,
            CfgCost: "CfgCostGold"
        },
        SevenDayChargeGetInfoReq: {},
        SevenDayChargeGetInfoRep: {
            Display: 0,
            NeedChargeDay: 0,
            DayChargeRMB: 0,
            RewardHuaFei: 0,
            TotalJiangQuan: 0,
            RemainDuiHuanSec: 0,
            ChargedToday: 0,
            IsBuQian: 0,
            LiBaoGoodsID: 0,
            LiBaoReward: "",
            DuiHuanQuanReward: "",
            AlreadyBuyNum: 0,
            DuiHuanGoodsID: "",
            ExchangeGoldRate: 0,
            ExchangeGoldGoodsID: 0,
            UserDuiHuanQuan: 0
        },
        WeekCardReceiveReq: {},
        WeekCardReceiveRep: {
            IsGet: 0,
            days: 0,
            rewardList: "",
            Tag: 0,
            MsgId: 0
        },
        WeekCardInfoReq: {},
        WeekCardInfoRep: {
            IsGet: 0,
            days: 0,
            Tag: 0,
            MsgId: 0
        },
        GetNewPlayerMissileGoldReq: {},
        GetNewPlayerMissileGoldRep: {
            Tag: 0,
            MsgId: 0,
            GoldNum: 0
        },
        ForceRealNameRep: {},
        GetLoginConfigReq: {
            CpsID: 0
        },
        GetLoginConfigRep: {
            OpenRealNameReg: 0,
            OpenChannelRealName: 0
        },
        ReportSkillEndReq: {
            SkillId: 0
        },
        ReportSkillEndRep: {
            SkillId: 0,
            UserId: 0
        }
    };
    return {
        PCK: t,
        toObj: function(e, t) {
            var i = h[e];
            if (!i) {
                return {}
            }
            var n = {};
            for (var s in i) {
                var a = t[s];
                if (i[s] instanceof Array) {
                    if (i[s].length > 0 && a) {
                        var r = i[s];
                        var o = r[0];
                        n[s] = [];
                        for (var l = 0; l < a.length; l++) {
                            if (o) {
                                if (o == "int32") {
                                    n[s][l] = a[l]
                                } else {
                                    n[s][l] = this.toObj(o, a[l])
                                }
                            }
                        }
                    } else {
                        n[s] = []
                    }
                } else if (i[s] && typeof i[s] == "string") {
                    a = t[s] || i[s];
                    n[s] = this.toObj(i[s], a)
                } else {
                    a = t[s] || i[s];
                    n[s] = a
                }
            }
            return n
        }
    }
} ();
var LaunchUtils = function() {
    var e = {};
    e.dealEvent = function() {
        if (!LaunchUtils.query) return;
        if (LaunchUtils.query.shareType && Player.isUserInfoInit()) {
            switch (LaunchUtils.query.shareType) {
            case "kanjia":
                Request.InviteInfoReq({
                    InviteType:
                    1,
                    IntValues: [Game.channel.FromUserID]
                });
                if (!Player.getNewPlayer()) {
                    OneMoneyGiftD.show()
                }
                break;
            case "freeGold":
                Request.InviteInfoReq({
                    InviteType:
                    2,
                    IntValues: [Game.channel.FromUserID]
                });
                break;
            case Game.ShareType.RECHARGE_REQUEST:
                if (Game.miniGameIOS()) {
                    if (Game.channel.FromUserID != Player.getUserId()) {
                        MessageBox.show("目前仅支持安卓用户赠送哦", undefined, MessageBox.model.submit)
                    }
                } else {
                    SendUserShop.show(LaunchUtils.query)
                }
                break;
            case Game.ShareType.RECHARGE_NOTIFICATION:
                if (LaunchUtils.query.addGoldUserId != Player.getUserId() && Game.miniGameIOS()) {
                    MessageBox.show("不是给你的赠礼啦，快去找好友要赠礼吧", undefined, MessageBox.model.submit)
                }
                break
            }
            LaunchUtils.query.shareType = undefined
        }
    };
    return e
} ();
var AdvanceConfig = function() {
    var t;
    var e = {};
    e.setConfig = function(e) {
        t = e;
        Game.channel.isNeedCer = t.OpenRealNameReg
    };
    e.getOpenRealNameReg = function() {
        if (t) {
            return t.OpenRealNameReg
        }
        return false
    };
    return e
} ();
var Main = function() {
    ActionReport.report(ActionReport.actionIndex.GameInit);
    Config.isAlpha = true;
    var o = Game.UIWidth;
    var l = Game.UIHeight;
    if (Game.onBaiDuGame) {
        Laya.BMiniAdapter.init();
        var e = window.innerHeight;
        var t = window.innerWidth;
        o = Math.floor(t * Game.UIHeight / e);
        l = 640
    } else if (Game.onMiniGame) {
        Laya.MiniAdpter.init(true, false)
    }
    if (Laya.Browser.onQGMiniGame) {
        Laya.QGMiniAdapter.init();
        Config.useRetinaCanvas = true;
        console.log("this is  onQGMiniGame!")
    }
    Laya.init(o, l, Laya.WebGL);
    ActionReport.report(ActionReport.actionIndex.LayaInit);
    Laya.stage.scaleMode = Laya.Stage.SCALE_FIXED_AUTO;
    Laya.stage.screenMode = Laya.Stage.SCREEN_HORIZONTAL;
    Laya.stage.frameRate = "fast";
    Laya.stage.alignH = Laya.Stage.ALIGN_CENTER;
    Laya.stage.alignV = Laya.Stage.ALIGN_MIDDLE;
    Laya.stage.bgColor = "#000000";
    Game.debug = Utils.getUrlParam("debug") ? true: false;
    if (Game.debug) {
        Channel = null;
        Laya.Stat.show();
        var i = Utils.getUrlParam("cpsId");
        if (i) {
            Game.channel.cfg.cps = i * 1
        }
    }
    var h = new Laya.Sprite;
    h.name = "UIRoot";
    h.zOrder = 5;
    Game.UIRoot = h;
    WinUtils.init();
    Laya.stage.addChild(h);
    UIConfig.closeDialogOnSide = true;
    UIConfig.popupBgAlpha = .7;
    var u = new Laya.Sprite;
    u.name = "DialogRoot";
    u.zOrder = 6;
    u.addChild(Laya.Dialog.manager);
    Game.DialogRoot = u;
    Laya.stage.addChild(u);
    var c = new Laya.Sprite;
    c.name = "TipRoot";
    c.zOrder = 8;
    Game.TipRoot = c;
    Laya.stage.addChild(c);
    Laya.Event.def_gameExit = "exitGame";
    Laya.Event.def_updateUserInfo = "updateUserInfo";
    Laya.Event.def_updateUserOtherInfo = "updateUserOtherInfo";
    Laya.Event.def_updateUserMoney = "updateUserMoney";
    Laya.Event.def_GameShow = "GameShow";
    Laya.Event.def_GameHide = "GameHide";
    Laya.Event.def_changeShakeTimes = "changeShakeTimes";
    Laya.Event.def_updateActInfo = "updateActInfo";
    Laya.Event.def_LeaveJewCity = "LeaveJewCity";
    Laya.Event.def_LeaveDragon = "LeaveDragon";
    Laya.Event.def_LeaveBigRich = "LeaveBigRich";
    Laya.Event.def_LeaveFishScene = "LeaveFishScene";
    Laya.Event.def_onSocketClose = "onSocketClose";
    Laya.Event.def_LuckyTurntableCloseCall = "LuckyTurntableCloseCall";
    Laya.Event.def_LuckyTurntableGetWardCall = "LuckyTurntableGetWardCall";
    Laya.Event.def_updateWxInfo = "updateWxInfo";
    View.regViewRuntime("ButtonSound", ButtonSound);
    View.regViewRuntime("ClickSound", ClickSound);
    Game.device.id = Utils.getBrowserInfo();
    if (Channel && Channel.cfg) {
        var i = Utils.getUrlParam("cpsId");
        if (i) {
            Channel.cfg.cps = i * 1
        }
        Game.channel.cfg = Channel.cfg;
        if (Channel.cfg.domain) {
            Game.domain = Channel.cfg.domain
        }
        if (Channel.init) {
            Channel.init()
        }
    }
    Laya.URL.basePath = Game.domain + Game.resVersion;
    if (Game.debug && window.location.hostname.indexOf("192.168.") >= 0) {
        Laya.URL.basePath = "http://" + window.location.hostname + ":" + window.location.port + window.location.pathname
    }
    console.log(Laya.URL.basePath);
    var n = 0;
    function s() {
        var e = (new Date).getTime();
        if (Game.RunningInBackstage) {
            Game.RunningInBackstage = false;
            var t = Game.state.get();
            if (t == Game.sceneConfig.sceneID.gameCenter) {
                GameCenter.show();
                Sound.playGameCenterBgMusic()
            } else if (t == Game.sceneConfig.sceneID.scene_JewCity) {
                JewelCityMain.gameShowFromBg()
            } else if (t == Game.sceneConfig.sceneID.scene_Dragon_DaoDan) {
                DragonMain.gameShowFromBg()
            } else if (t == Game.sceneConfig.sceneID.scene_BigRich) {
                BigRichMain.gameShowFromBg()
            } else if (t > Game.sceneConfig.sceneID.gameCenter) {
                Sound.playFishSceneBgMusic();
                if (MatchTask && MatchTask.updateCountDownTime) {
                    MatchTask.updateCountDownTime()
                }
                if (Game.server.socket && Game.server.socket.connected()) {
                    if (e - n > 1e3 * 10) {
                        console.log("def_GameShow 不离场 重新发送sceneReady  重置场景后重新开始");
                        Laya.Dialog.manager.closeAll();
                        FishScene.reStartGame()
                    } else {
                        console.log("切回到游戏更新鱼坐标");
                        FishScene.updateFishPos()
                    }
                } else {
                    console.log("def_GameShow 跳到大厅");
                    Laya.Dialog.manager.closeAll();
                    FishScene.exitToGameCenter()
                }
            }
        }
    }
    function a() {
        Sound.stopAll();
        n = (new Date).getTime();
        Game.RunningInBackstage = true
    }
    Laya.stage.on(Laya.Event.VISIBILITY_CHANGE, this,
    function() {
        if (Laya.stage.isVisibility) {
            s()
        } else {
            a()
        }
    });
    Laya.stage.on(Laya.Event.def_GameShow, this, s);
    Laya.stage.on(Laya.Event.def_GameHide, this, a);
    function r() {
        var e = window.innerWidth;
        var t = window.innerHeight;
        if (e >= t) {
            var i = t * (16 / 9);
            var n = (e - i) / 2;
            n = o / e * n;
            Laya.stage.x = n;
            var s = i / e;
            Laya.stage.scale(s, 1);
            Game.adapter.scaleX = s;
            Game.adapter.scaleY = 1;
            Game.adapter.offsetX = n;
            h.scale(1 / s, 1);
            c.scale(1 / s, 1);
            u.scale(1 / s, 1);
            u.x = 0 - n / s;
            var a = new Laya.Sprite;
            a.zOrder = 99;
            a.graphics.drawRect(0 - n / s, 0, n / s, l, "#000000");
            Laya.stage.addChild(a);
            var r = new Laya.Sprite;
            r.zOrder = 99;
            r.graphics.drawRect(o, 0, n / s, l, "#000000");
            Laya.stage.addChild(r)
        } else {}
    }
    var f = 0;
    function d(e) {
        if (e) {
            if (Game.isApp || Channel && Channel.protocol) {
                Game.server.type = "ws";
                Game.server.ip = e.WsAddress;
                Game.server.port = e.WsPort
            } else {
                Game.server.type = "wss";
                Game.server.ip = e.WssAddress;
                Game.server.port = e.WssPort
            }
            Game.behaviorLog.isOpen = Game.debug ? 1 : e.NeedDataReport;
            Game.behaviorLog.reportUrl = e.ReportUrl + "/report/button";
            Game.behaviorLog.eventReportURL = e.ReportUrl + "/report/event";
            Game.reportErrMsgUrl = e.ReportUrl + "/report/charge_err";
            ActionReport.init();
            ActionReport.report(ActionReport.actionIndex.getGameCfgRep);
            if (Channel && Channel.debug) {
                Game.server.type = "ws";
                Game.server.ip = "192.168.22.201";
                Game.server.port = "41001";
                var t = Channel.cfg.cps;
                Game.channel.cfg.cps = t * 1 || 1
            }
            if (Game.debug) {
                Game.server.type = "ws";
                Game.server.ip = "192.168.22.201";
                Game.server.port = "41001";
                var i = Utils.getUrlParam("type");
                var n = Utils.getUrlParam("ws");
                var s = Utils.getUrlParam("port");
                if (i) {
                    Game.server.type = i
                }
                if (n) {
                    Game.server.ip = n
                }
                if (s) {
                    Game.server.port = s
                }
                if (e.ip) {
                    Game.loginIp = e.ip
                }
            }
        }
    }
    function g() {
        var e = Game.config.cfgUrl;
        if (Game.debug) {
            e = "http://192.168.22.201:8080/gate/config"
        }
        ActionReport.report(ActionReport.actionIndex.getGameCfgReq);
        var t = myStorage.getItem("gmVer");
        if (t) {
            Game.smallVersion = t * 1
        }
        Ajax(e, {
            ver: Game.bigVersion,
            vers: Game.smallVersion,
            cps: Game.channel.cfg.cps
        },
        "get",
        function(e) {
            if (e.Status && e.Msg) {
                var t = MessageBox.show(e.Msg);
                t.submitCall = function() {
                    _.exit()
                };
                t.closeCall = function() {
                    _.exit()
                };
                return
            }
            d(e);
            _.getConfigSucc = true;
            var i = "cfg_data.json";
            Resource.load([i],
            function(e) {
                GameConfig.init(Resource.getResByUrl(i));
                if (Channel && Channel.showStartGameBtn && Channel.login) {
                    StartView.showBtn()
                } else {
                    _.login()
                }
            })
        },
        function(e) {
            f++;
            var t = "https://xyxlog.yulebuyu.com/report/charge_err";
            Ajax(t, {
                user_id: myStorage.getItem("bydjs_uid"),
                code: 0,
                msg: "getConfig fail:" + f
            },
            "get");
            if (f >= 3) {
                var i = MessageBox.show("网络连接不畅，请重新尝试[1]");
                i.submitCall = function() {
                    _.exit()
                };
                i.closeCall = function() {
                    _.exit()
                }
            } else {
                Laya.timer.once(1e3, this,
                function() {
                    g()
                })
            }
        })
    }
    function p() {
        Laya.SoundManager.autoStopMusic = false;
        var e = myStorage.getItem("soundSet");
        if (e) {
            Sound.setIsMutedState(e.bgm ? false: true);
            Sound.setIsSoundMuted(e.sod ? false: true);
            Sound.setIsShock(e.fls ? false: true)
        } else {
            myStorage.setItem("soundSet", {
                bgm: true,
                sod: true,
                fls: true
            })
        }
        Laya.ResourceVersion.enable("version.json", Laya.Handler.create(null,
        function() {
            Resource.checkLoaded = false;
            if (Channel && Channel.showStartGameBtn && Channel.login) {
                var e = RES.login;
                var t = ["UIRoot/StartView.json", "UIRoot/loadingView.json", "res/atlas/resource/loading.atlas", "UIRoot/FX/kaishiyouxi.json", "UIRoot/gui/waiting.json", "UIRoot/gui/MessageBox.json"];
                e = e.concat(t);
                Resource.load(e,
                function() {
                    _.loadFirstResSucc = true;
                    g();
                    StartView.show();
                    Sound.playGameCenterBgMusic()
                })
            } else {
                Resource.load(RES.login,
                function() {
                    _.loadFirstResSucc = true;
                    g()
                })
            }
        }), Laya.ResourceVersion.FILENAME_VERSION)
    }
    window.androidToJs = {
        androidBackPress: function() {
            var e = Game.state.get();
            if (e > Game.sceneConfig.sceneID.gameCenter) {
                FishScene.exit()
            } else if (e == Game.sceneConfig.sceneID.gameCenter) {
                GameCenter.exit()
            } else if (Game.channel.cfg.cps === Game.ChannelConstants.vivo) {
                if (Channel && Channel.exit) {
                    Channel.exit()
                }
            }
        }
    };
    var _ = {
        loadFirstResSucc: false,
        getConfigSucc: false,
        wxAuth: false,
        login: function() {
            if (_.loadFirstResSucc && _.getConfigSucc) {
                if (Channel && Channel.login) {
                    Channel.login()
                } else {
                    var e = Utils.getUrlParam("code");
                    if (e && Channel && Channel.wxQRCodeLogin) {
                        Channel.wxQRCodeLogin(e);
                        Request.GetLoginConfigReq()
                    } else {
                        Request.GetLoginConfigReq();
                        LoginViewApp.show()
                    }
                }
            }
        },
        exit: function() {
            if (Channel && Channel.exit) {
                Channel.exit()
            } else {
                if (Channel && Channel.showStartGameBtn && Channel.login) {
                    StartView.show();
                    Sound.playGameCenterBgMusic()
                } else {
                    LoginViewApp.show()
                }
                GameCenter.hide(true);
                FishScene.destroy();
                Laya.stage.event(Laya.Event.def_gameExit);
                Player.setMatchDayPrize(0);
                Laya.Dialog.manager.closeAll()
            }
            if (Game.server.socket) {
                Game.server.socket.close(true)
            }
            Game.state.set(Game.sceneConfig.sceneID.unLogin);
            if (window.QC && QC.Login) {
                var e = document.getElementById("qqLoginBtn");
                if (e) {
                    e.style.display = "block"
                }
            }
        },
        ReLogin: function() {
            if (Channel && Channel.reLogin) {
                LoadingView.show();
                GameCenter.hide(true);
                FishScene.destroy();
                Laya.stage.event(Laya.Event.def_gameExit);
                Laya.Dialog.manager.closeAll();
                if (Game.server.socket) {
                    Game.server.socket.close(true)
                }
                Game.state.set(Game.sceneConfig.sceneID.unLogin);
                Channel.reLogin()
            } else {
                if (Channel && Channel.showStartGameBtn && Channel.login) {
                    StartView.show();
                    Sound.playGameCenterBgMusic()
                } else {
                    LoginViewApp.show()
                }
                GameCenter.hide(true);
                FishScene.destroy();
                Laya.stage.event(Laya.Event.def_gameExit);
                Laya.Dialog.manager.closeAll();
                if (Game.server.socket) {
                    Game.server.socket.close(true)
                }
                Game.state.set(Game.sceneConfig.sceneID.unLogin)
            }
        }
    };
    if (Game.onBaiDuGame) {
        r();
        p()
    } else {
        p()
    }
    return _
} ();